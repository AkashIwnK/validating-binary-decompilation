; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%G__0x4b2750_type = type <{ [8 x i8] }>
%G__0x4b28d0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G__0x4b2750 = global %G__0x4b2750_type zeroinitializer
@G__0x4b28d0 = global %G__0x4b28d0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_475150.sign(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @copyblock_sp(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_40f540 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_40f540, %struct.Memory** %MEMORY
  %loadMem_40f541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i843 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i844 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i843
  %27 = load i64, i64* %PC.i842
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i842
  store i64 %26, i64* %RBP.i844, align 8
  store %struct.Memory* %loadMem_40f541, %struct.Memory** %MEMORY
  %loadMem_40f544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1348 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1348
  %36 = load i64, i64* %PC.i1347
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1347
  %38 = sub i64 %35, 224
  store i64 %38, i64* %RSP.i1348, align 8
  %39 = icmp ult i64 %35, 224
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 224, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_40f544, %struct.Memory** %MEMORY
  %loadMem_40f54b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RAX.i1385 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %PC.i1384
  %74 = add i64 %73, 5
  store i64 %74, i64* %PC.i1384
  store i64 2, i64* %RAX.i1385, align 8
  store %struct.Memory* %loadMem_40f54b, %struct.Memory** %MEMORY
  %loadMem_40f550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 33
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %77 to i64*
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 5
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %RCX.i1402 = bitcast %union.anon* %80 to i64*
  %81 = load i64, i64* %PC.i1401
  %82 = add i64 %81, 5
  store i64 %82, i64* %PC.i1401
  store i64 1, i64* %RCX.i1402, align 8
  store %struct.Memory* %loadMem_40f550, %struct.Memory** %MEMORY
  %loadMem_40f555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 7
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %RDX.i1446 = bitcast %union.anon* %88 to i64*
  %89 = load i64, i64* %PC.i1445
  %90 = add i64 %89, 5
  store i64 %90, i64* %PC.i1445
  store i64 6, i64* %RDX.i1446, align 8
  store %struct.Memory* %loadMem_40f555, %struct.Memory** %MEMORY
  %loadMem_40f55a = load %struct.Memory*, %struct.Memory** %MEMORY
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %92 = getelementptr inbounds %struct.GPR, %struct.GPR* %91, i32 0, i32 33
  %93 = getelementptr inbounds %struct.Reg, %struct.Reg* %92, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %93 to i64*
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %95 = getelementptr inbounds %struct.GPR, %struct.GPR* %94, i32 0, i32 11
  %96 = getelementptr inbounds %struct.Reg, %struct.Reg* %95, i32 0, i32 0
  %EDI.i1443 = bitcast %union.anon* %96 to i32*
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 15
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %RBP.i1444 = bitcast %union.anon* %99 to i64*
  %100 = load i64, i64* %RBP.i1444
  %101 = sub i64 %100, 4
  %102 = load i32, i32* %EDI.i1443
  %103 = zext i32 %102 to i64
  %104 = load i64, i64* %PC.i1442
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC.i1442
  %106 = inttoptr i64 %101 to i32*
  store i32 %102, i32* %106
  store %struct.Memory* %loadMem_40f55a, %struct.Memory** %MEMORY
  %loadMem_40f55d = load %struct.Memory*, %struct.Memory** %MEMORY
  %107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %108 = getelementptr inbounds %struct.GPR, %struct.GPR* %107, i32 0, i32 33
  %109 = getelementptr inbounds %struct.Reg, %struct.Reg* %108, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %109 to i64*
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %111 = getelementptr inbounds %struct.GPR, %struct.GPR* %110, i32 0, i32 9
  %112 = getelementptr inbounds %struct.Reg, %struct.Reg* %111, i32 0, i32 0
  %ESI.i1440 = bitcast %union.anon* %112 to i32*
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %114 = getelementptr inbounds %struct.GPR, %struct.GPR* %113, i32 0, i32 15
  %115 = getelementptr inbounds %struct.Reg, %struct.Reg* %114, i32 0, i32 0
  %RBP.i1441 = bitcast %union.anon* %115 to i64*
  %116 = load i64, i64* %RBP.i1441
  %117 = sub i64 %116, 8
  %118 = load i32, i32* %ESI.i1440
  %119 = zext i32 %118 to i64
  %120 = load i64, i64* %PC.i1439
  %121 = add i64 %120, 3
  store i64 %121, i64* %PC.i1439
  %122 = inttoptr i64 %117 to i32*
  store i32 %118, i32* %122
  store %struct.Memory* %loadMem_40f55d, %struct.Memory** %MEMORY
  %loadMem_40f560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 33
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %PC.i1437 = bitcast %union.anon* %125 to i64*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 17
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R8.i1438 = bitcast %union.anon* %128 to i64*
  %129 = load i64, i64* %PC.i1437
  %130 = add i64 %129, 8
  store i64 %130, i64* %PC.i1437
  %131 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %131, i64* %R8.i1438, align 8
  store %struct.Memory* %loadMem_40f560, %struct.Memory** %MEMORY
  %loadMem_40f568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 33
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %134 to i64*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 17
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %R8.i1436 = bitcast %union.anon* %137 to i64*
  %138 = load i64, i64* %R8.i1436
  %139 = add i64 %138, 14168
  %140 = load i64, i64* %PC.i1435
  %141 = add i64 %140, 7
  store i64 %141, i64* %PC.i1435
  %142 = inttoptr i64 %139 to i64*
  %143 = load i64, i64* %142
  store i64 %143, i64* %R8.i1436, align 8
  store %struct.Memory* %loadMem_40f568, %struct.Memory** %MEMORY
  %loadMem_40f56f = load %struct.Memory*, %struct.Memory** %MEMORY
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 33
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %146 to i64*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 19
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %R9.i1434 = bitcast %union.anon* %149 to i64*
  %150 = load i64, i64* %PC.i1433
  %151 = add i64 %150, 8
  store i64 %151, i64* %PC.i1433
  %152 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %152, i64* %R9.i1434, align 8
  store %struct.Memory* %loadMem_40f56f, %struct.Memory** %MEMORY
  %loadMem_40f577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 33
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %PC.i1431 = bitcast %union.anon* %155 to i64*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 19
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %R9.i1432 = bitcast %union.anon* %158 to i64*
  %159 = load i64, i64* %R9.i1432
  %160 = add i64 %159, 12
  %161 = load i64, i64* %PC.i1431
  %162 = add i64 %161, 4
  store i64 %162, i64* %PC.i1431
  %163 = inttoptr i64 %160 to i32*
  %164 = load i32, i32* %163
  %165 = sext i32 %164 to i64
  store i64 %165, i64* %R9.i1432, align 8
  store %struct.Memory* %loadMem_40f577, %struct.Memory** %MEMORY
  %loadMem_40f57b = load %struct.Memory*, %struct.Memory** %MEMORY
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %167 = getelementptr inbounds %struct.GPR, %struct.GPR* %166, i32 0, i32 33
  %168 = getelementptr inbounds %struct.Reg, %struct.Reg* %167, i32 0, i32 0
  %PC.i1429 = bitcast %union.anon* %168 to i64*
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 19
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %R9.i1430 = bitcast %union.anon* %171 to i64*
  %172 = load i64, i64* %R9.i1430
  %173 = load i64, i64* %PC.i1429
  %174 = add i64 %173, 7
  store i64 %174, i64* %PC.i1429
  %175 = sext i64 %172 to i128
  %176 = and i128 %175, -18446744073709551616
  %177 = zext i64 %172 to i128
  %178 = or i128 %176, %177
  %179 = mul i128 632, %178
  %180 = trunc i128 %179 to i64
  store i64 %180, i64* %R9.i1430, align 8
  %181 = sext i64 %180 to i128
  %182 = icmp ne i128 %181, %179
  %183 = zext i1 %182 to i8
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %183, i8* %184, align 1
  %185 = trunc i128 %179 to i32
  %186 = and i32 %185, 255
  %187 = call i32 @llvm.ctpop.i32(i32 %186)
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = xor i8 %189, 1
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %190, i8* %191, align 1
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %192, align 1
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %193, align 1
  %194 = lshr i64 %180, 63
  %195 = trunc i64 %194 to i8
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %195, i8* %196, align 1
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %183, i8* %197, align 1
  store %struct.Memory* %loadMem_40f57b, %struct.Memory** %MEMORY
  %loadMem_40f582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 33
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 17
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %R8.i1428 = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 19
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %R9.i = bitcast %union.anon* %206 to i64*
  %207 = load i64, i64* %R8.i1428
  %208 = load i64, i64* %R9.i
  %209 = load i64, i64* %PC.i1427
  %210 = add i64 %209, 3
  store i64 %210, i64* %PC.i1427
  %211 = add i64 %208, %207
  store i64 %211, i64* %R8.i1428, align 8
  %212 = icmp ult i64 %211, %207
  %213 = icmp ult i64 %211, %208
  %214 = or i1 %212, %213
  %215 = zext i1 %214 to i8
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %215, i8* %216, align 1
  %217 = trunc i64 %211 to i32
  %218 = and i32 %217, 255
  %219 = call i32 @llvm.ctpop.i32(i32 %218)
  %220 = trunc i32 %219 to i8
  %221 = and i8 %220, 1
  %222 = xor i8 %221, 1
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %222, i8* %223, align 1
  %224 = xor i64 %208, %207
  %225 = xor i64 %224, %211
  %226 = lshr i64 %225, 4
  %227 = trunc i64 %226 to i8
  %228 = and i8 %227, 1
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %228, i8* %229, align 1
  %230 = icmp eq i64 %211, 0
  %231 = zext i1 %230 to i8
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %231, i8* %232, align 1
  %233 = lshr i64 %211, 63
  %234 = trunc i64 %233 to i8
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %234, i8* %235, align 1
  %236 = lshr i64 %207, 63
  %237 = lshr i64 %208, 63
  %238 = xor i64 %233, %236
  %239 = xor i64 %233, %237
  %240 = add i64 %238, %239
  %241 = icmp eq i64 %240, 2
  %242 = zext i1 %241 to i8
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %242, i8* %243, align 1
  store %struct.Memory* %loadMem_40f582, %struct.Memory** %MEMORY
  %loadMem_40f585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %245 = getelementptr inbounds %struct.GPR, %struct.GPR* %244, i32 0, i32 33
  %246 = getelementptr inbounds %struct.Reg, %struct.Reg* %245, i32 0, i32 0
  %PC.i1424 = bitcast %union.anon* %246 to i64*
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %248 = getelementptr inbounds %struct.GPR, %struct.GPR* %247, i32 0, i32 15
  %249 = getelementptr inbounds %struct.Reg, %struct.Reg* %248, i32 0, i32 0
  %RBP.i1425 = bitcast %union.anon* %249 to i64*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %251 = getelementptr inbounds %struct.GPR, %struct.GPR* %250, i32 0, i32 17
  %252 = getelementptr inbounds %struct.Reg, %struct.Reg* %251, i32 0, i32 0
  %R8.i1426 = bitcast %union.anon* %252 to i64*
  %253 = load i64, i64* %RBP.i1425
  %254 = sub i64 %253, 72
  %255 = load i64, i64* %R8.i1426
  %256 = load i64, i64* %PC.i1424
  %257 = add i64 %256, 4
  store i64 %257, i64* %PC.i1424
  %258 = inttoptr i64 %254 to i64*
  store i64 %255, i64* %258
  store %struct.Memory* %loadMem_40f585, %struct.Memory** %MEMORY
  %loadMem_40f589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %260 = getelementptr inbounds %struct.GPR, %struct.GPR* %259, i32 0, i32 33
  %261 = getelementptr inbounds %struct.Reg, %struct.Reg* %260, i32 0, i32 0
  %PC.i1421 = bitcast %union.anon* %261 to i64*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 15
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %RBP.i1422 = bitcast %union.anon* %264 to i64*
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 17
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %R8.i1423 = bitcast %union.anon* %267 to i64*
  %268 = load i64, i64* %RBP.i1422
  %269 = sub i64 %268, 72
  %270 = load i64, i64* %PC.i1421
  %271 = add i64 %270, 4
  store i64 %271, i64* %PC.i1421
  %272 = inttoptr i64 %269 to i64*
  %273 = load i64, i64* %272
  store i64 %273, i64* %R8.i1423, align 8
  store %struct.Memory* %loadMem_40f589, %struct.Memory** %MEMORY
  %loadMem_40f58d = load %struct.Memory*, %struct.Memory** %MEMORY
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %275 = getelementptr inbounds %struct.GPR, %struct.GPR* %274, i32 0, i32 33
  %276 = getelementptr inbounds %struct.Reg, %struct.Reg* %275, i32 0, i32 0
  %PC.i1418 = bitcast %union.anon* %276 to i64*
  %277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %278 = getelementptr inbounds %struct.GPR, %struct.GPR* %277, i32 0, i32 9
  %279 = getelementptr inbounds %struct.Reg, %struct.Reg* %278, i32 0, i32 0
  %RSI.i1419 = bitcast %union.anon* %279 to i64*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %281 = getelementptr inbounds %struct.GPR, %struct.GPR* %280, i32 0, i32 17
  %282 = getelementptr inbounds %struct.Reg, %struct.Reg* %281, i32 0, i32 0
  %R8.i1420 = bitcast %union.anon* %282 to i64*
  %283 = load i64, i64* %R8.i1420
  %284 = add i64 %283, 16
  %285 = load i64, i64* %PC.i1418
  %286 = add i64 %285, 4
  store i64 %286, i64* %PC.i1418
  %287 = inttoptr i64 %284 to i32*
  %288 = load i32, i32* %287
  %289 = zext i32 %288 to i64
  store i64 %289, i64* %RSI.i1419, align 8
  store %struct.Memory* %loadMem_40f58d, %struct.Memory** %MEMORY
  %loadMem_40f591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %291 = getelementptr inbounds %struct.GPR, %struct.GPR* %290, i32 0, i32 33
  %292 = getelementptr inbounds %struct.Reg, %struct.Reg* %291, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %292 to i64*
  %293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %294 = getelementptr inbounds %struct.GPR, %struct.GPR* %293, i32 0, i32 9
  %295 = getelementptr inbounds %struct.Reg, %struct.Reg* %294, i32 0, i32 0
  %RSI.i1417 = bitcast %union.anon* %295 to i64*
  %296 = load i64, i64* %RSI.i1417
  %297 = load i64, i64* %PC.i1416
  %298 = add i64 %297, 3
  store i64 %298, i64* %PC.i1416
  %299 = trunc i64 %296 to i32
  %300 = zext i32 %299 to i64
  store i64 %300, i64* %RSI.i1417, align 8
  %301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %301, align 1
  %302 = and i32 %299, 255
  %303 = call i32 @llvm.ctpop.i32(i32 %302)
  %304 = trunc i32 %303 to i8
  %305 = and i8 %304, 1
  %306 = xor i8 %305, 1
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %306, i8* %307, align 1
  %308 = trunc i64 %296 to i32
  %309 = xor i32 %308, %299
  %310 = lshr i32 %309, 4
  %311 = trunc i32 %310 to i8
  %312 = and i8 %311, 1
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %312, i8* %313, align 1
  %314 = icmp eq i32 %299, 0
  %315 = zext i1 %314 to i8
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %315, i8* %316, align 1
  %317 = lshr i32 %299, 31
  %318 = trunc i32 %317 to i8
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %318, i8* %319, align 1
  %320 = lshr i32 %299, 31
  %321 = xor i32 %317, %320
  %322 = add i32 %321, %320
  %323 = icmp eq i32 %322, 2
  %324 = zext i1 %323 to i8
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %324, i8* %325, align 1
  store %struct.Memory* %loadMem_40f591, %struct.Memory** %MEMORY
  %loadMem_40f594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %327 = getelementptr inbounds %struct.GPR, %struct.GPR* %326, i32 0, i32 33
  %328 = getelementptr inbounds %struct.Reg, %struct.Reg* %327, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %328 to i64*
  %329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %330 = getelementptr inbounds %struct.GPR, %struct.GPR* %329, i32 0, i32 1
  %331 = getelementptr inbounds %struct.Reg, %struct.Reg* %330, i32 0, i32 0
  %EAX.i1414 = bitcast %union.anon* %331 to i32*
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %333 = getelementptr inbounds %struct.GPR, %struct.GPR* %332, i32 0, i32 15
  %334 = getelementptr inbounds %struct.Reg, %struct.Reg* %333, i32 0, i32 0
  %RBP.i1415 = bitcast %union.anon* %334 to i64*
  %335 = load i64, i64* %RBP.i1415
  %336 = sub i64 %335, 164
  %337 = load i32, i32* %EAX.i1414
  %338 = zext i32 %337 to i64
  %339 = load i64, i64* %PC.i1413
  %340 = add i64 %339, 6
  store i64 %340, i64* %PC.i1413
  %341 = inttoptr i64 %336 to i32*
  store i32 %337, i32* %341
  store %struct.Memory* %loadMem_40f594, %struct.Memory** %MEMORY
  %loadMem_40f59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %343 = getelementptr inbounds %struct.GPR, %struct.GPR* %342, i32 0, i32 33
  %344 = getelementptr inbounds %struct.Reg, %struct.Reg* %343, i32 0, i32 0
  %PC.i1410 = bitcast %union.anon* %344 to i64*
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %346 = getelementptr inbounds %struct.GPR, %struct.GPR* %345, i32 0, i32 9
  %347 = getelementptr inbounds %struct.Reg, %struct.Reg* %346, i32 0, i32 0
  %ESI.i1411 = bitcast %union.anon* %347 to i32*
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %349 = getelementptr inbounds %struct.GPR, %struct.GPR* %348, i32 0, i32 1
  %350 = getelementptr inbounds %struct.Reg, %struct.Reg* %349, i32 0, i32 0
  %RAX.i1412 = bitcast %union.anon* %350 to i64*
  %351 = load i32, i32* %ESI.i1411
  %352 = zext i32 %351 to i64
  %353 = load i64, i64* %PC.i1410
  %354 = add i64 %353, 2
  store i64 %354, i64* %PC.i1410
  %355 = and i64 %352, 4294967295
  store i64 %355, i64* %RAX.i1412, align 8
  store %struct.Memory* %loadMem_40f59a, %struct.Memory** %MEMORY
  %loadMem_40f59c = load %struct.Memory*, %struct.Memory** %MEMORY
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %357 = getelementptr inbounds %struct.GPR, %struct.GPR* %356, i32 0, i32 33
  %358 = getelementptr inbounds %struct.Reg, %struct.Reg* %357, i32 0, i32 0
  %PC.i1407 = bitcast %union.anon* %358 to i64*
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %360 = getelementptr inbounds %struct.GPR, %struct.GPR* %359, i32 0, i32 7
  %361 = getelementptr inbounds %struct.Reg, %struct.Reg* %360, i32 0, i32 0
  %EDX.i1408 = bitcast %union.anon* %361 to i32*
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %363 = getelementptr inbounds %struct.GPR, %struct.GPR* %362, i32 0, i32 15
  %364 = getelementptr inbounds %struct.Reg, %struct.Reg* %363, i32 0, i32 0
  %RBP.i1409 = bitcast %union.anon* %364 to i64*
  %365 = load i64, i64* %RBP.i1409
  %366 = sub i64 %365, 168
  %367 = load i32, i32* %EDX.i1408
  %368 = zext i32 %367 to i64
  %369 = load i64, i64* %PC.i1407
  %370 = add i64 %369, 6
  store i64 %370, i64* %PC.i1407
  %371 = inttoptr i64 %366 to i32*
  store i32 %367, i32* %371
  store %struct.Memory* %loadMem_40f59c, %struct.Memory** %MEMORY
  %loadMem_40f5a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %373 = getelementptr inbounds %struct.GPR, %struct.GPR* %372, i32 0, i32 33
  %374 = getelementptr inbounds %struct.Reg, %struct.Reg* %373, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %374 to i64*
  %375 = load i64, i64* %PC.i1406
  %376 = add i64 %375, 1
  store i64 %376, i64* %PC.i1406
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %379 = bitcast %union.anon* %378 to i32*
  %380 = load i32, i32* %379, align 8
  %381 = sext i32 %380 to i64
  %382 = lshr i64 %381, 32
  store i64 %382, i64* %377, align 8
  store %struct.Memory* %loadMem_40f5a2, %struct.Memory** %MEMORY
  %loadMem_40f5a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 33
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %PC.i1403 = bitcast %union.anon* %385 to i64*
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %387 = getelementptr inbounds %struct.GPR, %struct.GPR* %386, i32 0, i32 9
  %388 = getelementptr inbounds %struct.Reg, %struct.Reg* %387, i32 0, i32 0
  %RSI.i1404 = bitcast %union.anon* %388 to i64*
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %390 = getelementptr inbounds %struct.GPR, %struct.GPR* %389, i32 0, i32 15
  %391 = getelementptr inbounds %struct.Reg, %struct.Reg* %390, i32 0, i32 0
  %RBP.i1405 = bitcast %union.anon* %391 to i64*
  %392 = load i64, i64* %RBP.i1405
  %393 = sub i64 %392, 168
  %394 = load i64, i64* %PC.i1403
  %395 = add i64 %394, 6
  store i64 %395, i64* %PC.i1403
  %396 = inttoptr i64 %393 to i32*
  %397 = load i32, i32* %396
  %398 = zext i32 %397 to i64
  store i64 %398, i64* %RSI.i1404, align 8
  store %struct.Memory* %loadMem_40f5a3, %struct.Memory** %MEMORY
  %loadMem_40f5a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 33
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %401 to i64*
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 9
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %ESI.i1399 = bitcast %union.anon* %404 to i32*
  %405 = load i32, i32* %ESI.i1399
  %406 = zext i32 %405 to i64
  %407 = load i64, i64* %PC.i1398
  %408 = add i64 %407, 2
  store i64 %408, i64* %PC.i1398
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %410 = bitcast %union.anon* %409 to i32*
  %411 = load i32, i32* %410, align 8
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %414 = bitcast %union.anon* %413 to i32*
  %415 = load i32, i32* %414, align 8
  %416 = zext i32 %415 to i64
  %417 = shl i64 %406, 32
  %418 = ashr exact i64 %417, 32
  %419 = shl i64 %416, 32
  %420 = or i64 %419, %412
  %421 = sdiv i64 %420, %418
  %422 = shl i64 %421, 32
  %423 = ashr exact i64 %422, 32
  %424 = icmp eq i64 %421, %423
  br i1 %424, label %429, label %425

; <label>:425:                                    ; preds = %entry
  %426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %427 = load i64, i64* %426, align 8
  %428 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %427, %struct.Memory* %loadMem_40f5a9)
  br label %routine_idivl__esi.exit1400

; <label>:429:                                    ; preds = %entry
  %430 = srem i64 %420, %418
  %431 = getelementptr inbounds %union.anon, %union.anon* %409, i64 0, i32 0
  %432 = and i64 %421, 4294967295
  store i64 %432, i64* %431, align 8
  %433 = getelementptr inbounds %union.anon, %union.anon* %413, i64 0, i32 0
  %434 = and i64 %430, 4294967295
  store i64 %434, i64* %433, align 8
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %435, align 1
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %436, align 1
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %437, align 1
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %438, align 1
  %439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %439, align 1
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %440, align 1
  br label %routine_idivl__esi.exit1400

routine_idivl__esi.exit1400:                      ; preds = %425, %429
  %441 = phi %struct.Memory* [ %428, %425 ], [ %loadMem_40f5a9, %429 ]
  store %struct.Memory* %441, %struct.Memory** %MEMORY
  %loadMem_40f5ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %443 = getelementptr inbounds %struct.GPR, %struct.GPR* %442, i32 0, i32 33
  %444 = getelementptr inbounds %struct.Reg, %struct.Reg* %443, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %444 to i64*
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %446 = getelementptr inbounds %struct.GPR, %struct.GPR* %445, i32 0, i32 1
  %447 = getelementptr inbounds %struct.Reg, %struct.Reg* %446, i32 0, i32 0
  %EAX.i1396 = bitcast %union.anon* %447 to i32*
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %449 = getelementptr inbounds %struct.GPR, %struct.GPR* %448, i32 0, i32 15
  %450 = getelementptr inbounds %struct.Reg, %struct.Reg* %449, i32 0, i32 0
  %RBP.i1397 = bitcast %union.anon* %450 to i64*
  %451 = load i64, i64* %RBP.i1397
  %452 = sub i64 %451, 148
  %453 = load i32, i32* %EAX.i1396
  %454 = zext i32 %453 to i64
  %455 = load i64, i64* %PC.i1395
  %456 = add i64 %455, 6
  store i64 %456, i64* %PC.i1395
  %457 = inttoptr i64 %452 to i32*
  store i32 %453, i32* %457
  store %struct.Memory* %loadMem_40f5ab, %struct.Memory** %MEMORY
  %loadMem_40f5b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %459 = getelementptr inbounds %struct.GPR, %struct.GPR* %458, i32 0, i32 33
  %460 = getelementptr inbounds %struct.Reg, %struct.Reg* %459, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %460 to i64*
  %461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %462 = getelementptr inbounds %struct.GPR, %struct.GPR* %461, i32 0, i32 15
  %463 = getelementptr inbounds %struct.Reg, %struct.Reg* %462, i32 0, i32 0
  %RBP.i1393 = bitcast %union.anon* %463 to i64*
  %464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %465 = getelementptr inbounds %struct.GPR, %struct.GPR* %464, i32 0, i32 17
  %466 = getelementptr inbounds %struct.Reg, %struct.Reg* %465, i32 0, i32 0
  %R8.i1394 = bitcast %union.anon* %466 to i64*
  %467 = load i64, i64* %RBP.i1393
  %468 = sub i64 %467, 72
  %469 = load i64, i64* %PC.i1392
  %470 = add i64 %469, 4
  store i64 %470, i64* %PC.i1392
  %471 = inttoptr i64 %468 to i64*
  %472 = load i64, i64* %471
  store i64 %472, i64* %R8.i1394, align 8
  store %struct.Memory* %loadMem_40f5b1, %struct.Memory** %MEMORY
  %loadMem_40f5b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %474 = getelementptr inbounds %struct.GPR, %struct.GPR* %473, i32 0, i32 33
  %475 = getelementptr inbounds %struct.Reg, %struct.Reg* %474, i32 0, i32 0
  %PC.i1389 = bitcast %union.anon* %475 to i64*
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %477 = getelementptr inbounds %struct.GPR, %struct.GPR* %476, i32 0, i32 1
  %478 = getelementptr inbounds %struct.Reg, %struct.Reg* %477, i32 0, i32 0
  %RAX.i1390 = bitcast %union.anon* %478 to i64*
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %480 = getelementptr inbounds %struct.GPR, %struct.GPR* %479, i32 0, i32 17
  %481 = getelementptr inbounds %struct.Reg, %struct.Reg* %480, i32 0, i32 0
  %R8.i1391 = bitcast %union.anon* %481 to i64*
  %482 = load i64, i64* %R8.i1391
  %483 = add i64 %482, 16
  %484 = load i64, i64* %PC.i1389
  %485 = add i64 %484, 4
  store i64 %485, i64* %PC.i1389
  %486 = inttoptr i64 %483 to i32*
  %487 = load i32, i32* %486
  %488 = zext i32 %487 to i64
  store i64 %488, i64* %RAX.i1390, align 8
  store %struct.Memory* %loadMem_40f5b5, %struct.Memory** %MEMORY
  %loadMem_40f5b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %490 = getelementptr inbounds %struct.GPR, %struct.GPR* %489, i32 0, i32 33
  %491 = getelementptr inbounds %struct.Reg, %struct.Reg* %490, i32 0, i32 0
  %PC.i1387 = bitcast %union.anon* %491 to i64*
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %493 = getelementptr inbounds %struct.GPR, %struct.GPR* %492, i32 0, i32 1
  %494 = getelementptr inbounds %struct.Reg, %struct.Reg* %493, i32 0, i32 0
  %RAX.i1388 = bitcast %union.anon* %494 to i64*
  %495 = load i64, i64* %RAX.i1388
  %496 = load i64, i64* %PC.i1387
  %497 = add i64 %496, 3
  store i64 %497, i64* %PC.i1387
  %498 = trunc i64 %495 to i32
  %499 = zext i32 %498 to i64
  store i64 %499, i64* %RAX.i1388, align 8
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %500, align 1
  %501 = and i32 %498, 255
  %502 = call i32 @llvm.ctpop.i32(i32 %501)
  %503 = trunc i32 %502 to i8
  %504 = and i8 %503, 1
  %505 = xor i8 %504, 1
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %505, i8* %506, align 1
  %507 = trunc i64 %495 to i32
  %508 = xor i32 %507, %498
  %509 = lshr i32 %508, 4
  %510 = trunc i32 %509 to i8
  %511 = and i8 %510, 1
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %511, i8* %512, align 1
  %513 = icmp eq i32 %498, 0
  %514 = zext i1 %513 to i8
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %514, i8* %515, align 1
  %516 = lshr i32 %498, 31
  %517 = trunc i32 %516 to i8
  %518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %517, i8* %518, align 1
  %519 = lshr i32 %498, 31
  %520 = xor i32 %516, %519
  %521 = add i32 %520, %519
  %522 = icmp eq i32 %521, 2
  %523 = zext i1 %522 to i8
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %523, i8* %524, align 1
  store %struct.Memory* %loadMem_40f5b9, %struct.Memory** %MEMORY
  %loadMem_40f5bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %526 = getelementptr inbounds %struct.GPR, %struct.GPR* %525, i32 0, i32 33
  %527 = getelementptr inbounds %struct.Reg, %struct.Reg* %526, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %527 to i64*
  %528 = load i64, i64* %PC.i1386
  %529 = add i64 %528, 1
  store i64 %529, i64* %PC.i1386
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %532 = bitcast %union.anon* %531 to i32*
  %533 = load i32, i32* %532, align 8
  %534 = sext i32 %533 to i64
  %535 = lshr i64 %534, 32
  store i64 %535, i64* %530, align 8
  store %struct.Memory* %loadMem_40f5bc, %struct.Memory** %MEMORY
  %loadMem_40f5bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %537 = getelementptr inbounds %struct.GPR, %struct.GPR* %536, i32 0, i32 33
  %538 = getelementptr inbounds %struct.Reg, %struct.Reg* %537, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %538 to i64*
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %540 = getelementptr inbounds %struct.GPR, %struct.GPR* %539, i32 0, i32 9
  %541 = getelementptr inbounds %struct.Reg, %struct.Reg* %540, i32 0, i32 0
  %ESI.i1383 = bitcast %union.anon* %541 to i32*
  %542 = load i32, i32* %ESI.i1383
  %543 = zext i32 %542 to i64
  %544 = load i64, i64* %PC.i1382
  %545 = add i64 %544, 2
  store i64 %545, i64* %PC.i1382
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %547 = bitcast %union.anon* %546 to i32*
  %548 = load i32, i32* %547, align 8
  %549 = zext i32 %548 to i64
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %551 = bitcast %union.anon* %550 to i32*
  %552 = load i32, i32* %551, align 8
  %553 = zext i32 %552 to i64
  %554 = shl i64 %543, 32
  %555 = ashr exact i64 %554, 32
  %556 = shl i64 %553, 32
  %557 = or i64 %556, %549
  %558 = sdiv i64 %557, %555
  %559 = shl i64 %558, 32
  %560 = ashr exact i64 %559, 32
  %561 = icmp eq i64 %558, %560
  br i1 %561, label %566, label %562

; <label>:562:                                    ; preds = %routine_idivl__esi.exit1400
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %564 = load i64, i64* %563, align 8
  %565 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %564, %struct.Memory* %loadMem_40f5bd)
  br label %routine_idivl__esi.exit

; <label>:566:                                    ; preds = %routine_idivl__esi.exit1400
  %567 = srem i64 %557, %555
  %568 = getelementptr inbounds %union.anon, %union.anon* %546, i64 0, i32 0
  %569 = and i64 %558, 4294967295
  store i64 %569, i64* %568, align 8
  %570 = getelementptr inbounds %union.anon, %union.anon* %550, i64 0, i32 0
  %571 = and i64 %567, 4294967295
  store i64 %571, i64* %570, align 8
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %572, align 1
  %573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %573, align 1
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %574, align 1
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %575, align 1
  %576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %576, align 1
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %577, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %562, %566
  %578 = phi %struct.Memory* [ %565, %562 ], [ %loadMem_40f5bd, %566 ]
  store %struct.Memory* %578, %struct.Memory** %MEMORY
  %loadMem_40f5bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %580 = getelementptr inbounds %struct.GPR, %struct.GPR* %579, i32 0, i32 33
  %581 = getelementptr inbounds %struct.Reg, %struct.Reg* %580, i32 0, i32 0
  %PC.i1379 = bitcast %union.anon* %581 to i64*
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %583 = getelementptr inbounds %struct.GPR, %struct.GPR* %582, i32 0, i32 7
  %584 = getelementptr inbounds %struct.Reg, %struct.Reg* %583, i32 0, i32 0
  %EDX.i1380 = bitcast %union.anon* %584 to i32*
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %586 = getelementptr inbounds %struct.GPR, %struct.GPR* %585, i32 0, i32 15
  %587 = getelementptr inbounds %struct.Reg, %struct.Reg* %586, i32 0, i32 0
  %RBP.i1381 = bitcast %union.anon* %587 to i64*
  %588 = load i64, i64* %RBP.i1381
  %589 = sub i64 %588, 152
  %590 = load i32, i32* %EDX.i1380
  %591 = zext i32 %590 to i64
  %592 = load i64, i64* %PC.i1379
  %593 = add i64 %592, 6
  store i64 %593, i64* %PC.i1379
  %594 = inttoptr i64 %589 to i32*
  store i32 %590, i32* %594
  store %struct.Memory* %loadMem_40f5bf, %struct.Memory** %MEMORY
  %loadMem_40f5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %596 = getelementptr inbounds %struct.GPR, %struct.GPR* %595, i32 0, i32 33
  %597 = getelementptr inbounds %struct.Reg, %struct.Reg* %596, i32 0, i32 0
  %PC.i1376 = bitcast %union.anon* %597 to i64*
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %599 = getelementptr inbounds %struct.GPR, %struct.GPR* %598, i32 0, i32 7
  %600 = getelementptr inbounds %struct.Reg, %struct.Reg* %599, i32 0, i32 0
  %RDX.i1377 = bitcast %union.anon* %600 to i64*
  %601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %602 = getelementptr inbounds %struct.GPR, %struct.GPR* %601, i32 0, i32 15
  %603 = getelementptr inbounds %struct.Reg, %struct.Reg* %602, i32 0, i32 0
  %RBP.i1378 = bitcast %union.anon* %603 to i64*
  %604 = load i64, i64* %RBP.i1378
  %605 = sub i64 %604, 148
  %606 = load i64, i64* %PC.i1376
  %607 = add i64 %606, 6
  store i64 %607, i64* %PC.i1376
  %608 = inttoptr i64 %605 to i32*
  %609 = load i32, i32* %608
  %610 = zext i32 %609 to i64
  store i64 %610, i64* %RDX.i1377, align 8
  store %struct.Memory* %loadMem_40f5c5, %struct.Memory** %MEMORY
  %loadMem_40f5cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %612 = getelementptr inbounds %struct.GPR, %struct.GPR* %611, i32 0, i32 33
  %613 = getelementptr inbounds %struct.Reg, %struct.Reg* %612, i32 0, i32 0
  %PC.i1374 = bitcast %union.anon* %613 to i64*
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %615 = getelementptr inbounds %struct.GPR, %struct.GPR* %614, i32 0, i32 7
  %616 = getelementptr inbounds %struct.Reg, %struct.Reg* %615, i32 0, i32 0
  %RDX.i1375 = bitcast %union.anon* %616 to i64*
  %617 = load i64, i64* %RDX.i1375
  %618 = load i64, i64* %PC.i1374
  %619 = add i64 %618, 3
  store i64 %619, i64* %PC.i1374
  %620 = trunc i64 %617 to i32
  %621 = add i32 15, %620
  %622 = zext i32 %621 to i64
  store i64 %622, i64* %RDX.i1375, align 8
  %623 = icmp ult i32 %621, %620
  %624 = icmp ult i32 %621, 15
  %625 = or i1 %623, %624
  %626 = zext i1 %625 to i8
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %626, i8* %627, align 1
  %628 = and i32 %621, 255
  %629 = call i32 @llvm.ctpop.i32(i32 %628)
  %630 = trunc i32 %629 to i8
  %631 = and i8 %630, 1
  %632 = xor i8 %631, 1
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %632, i8* %633, align 1
  %634 = xor i64 15, %617
  %635 = trunc i64 %634 to i32
  %636 = xor i32 %635, %621
  %637 = lshr i32 %636, 4
  %638 = trunc i32 %637 to i8
  %639 = and i8 %638, 1
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %639, i8* %640, align 1
  %641 = icmp eq i32 %621, 0
  %642 = zext i1 %641 to i8
  %643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %642, i8* %643, align 1
  %644 = lshr i32 %621, 31
  %645 = trunc i32 %644 to i8
  %646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %645, i8* %646, align 1
  %647 = lshr i32 %620, 31
  %648 = xor i32 %644, %647
  %649 = add i32 %648, %644
  %650 = icmp eq i32 %649, 2
  %651 = zext i1 %650 to i8
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %651, i8* %652, align 1
  store %struct.Memory* %loadMem_40f5cb, %struct.Memory** %MEMORY
  %loadMem_40f5ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %654 = getelementptr inbounds %struct.GPR, %struct.GPR* %653, i32 0, i32 33
  %655 = getelementptr inbounds %struct.Reg, %struct.Reg* %654, i32 0, i32 0
  %PC.i1371 = bitcast %union.anon* %655 to i64*
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %657 = getelementptr inbounds %struct.GPR, %struct.GPR* %656, i32 0, i32 7
  %658 = getelementptr inbounds %struct.Reg, %struct.Reg* %657, i32 0, i32 0
  %EDX.i1372 = bitcast %union.anon* %658 to i32*
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %660 = getelementptr inbounds %struct.GPR, %struct.GPR* %659, i32 0, i32 15
  %661 = getelementptr inbounds %struct.Reg, %struct.Reg* %660, i32 0, i32 0
  %RBP.i1373 = bitcast %union.anon* %661 to i64*
  %662 = load i64, i64* %RBP.i1373
  %663 = sub i64 %662, 156
  %664 = load i32, i32* %EDX.i1372
  %665 = zext i32 %664 to i64
  %666 = load i64, i64* %PC.i1371
  %667 = add i64 %666, 6
  store i64 %667, i64* %PC.i1371
  %668 = inttoptr i64 %663 to i32*
  store i32 %664, i32* %668
  store %struct.Memory* %loadMem_40f5ce, %struct.Memory** %MEMORY
  %loadMem_40f5d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %670 = getelementptr inbounds %struct.GPR, %struct.GPR* %669, i32 0, i32 33
  %671 = getelementptr inbounds %struct.Reg, %struct.Reg* %670, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %671 to i64*
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %673 = getelementptr inbounds %struct.GPR, %struct.GPR* %672, i32 0, i32 7
  %674 = getelementptr inbounds %struct.Reg, %struct.Reg* %673, i32 0, i32 0
  %RDX.i1369 = bitcast %union.anon* %674 to i64*
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %676 = getelementptr inbounds %struct.GPR, %struct.GPR* %675, i32 0, i32 15
  %677 = getelementptr inbounds %struct.Reg, %struct.Reg* %676, i32 0, i32 0
  %RBP.i1370 = bitcast %union.anon* %677 to i64*
  %678 = load i64, i64* %RBP.i1370
  %679 = sub i64 %678, 156
  %680 = load i64, i64* %PC.i1368
  %681 = add i64 %680, 6
  store i64 %681, i64* %PC.i1368
  %682 = inttoptr i64 %679 to i32*
  %683 = load i32, i32* %682
  %684 = zext i32 %683 to i64
  store i64 %684, i64* %RDX.i1369, align 8
  store %struct.Memory* %loadMem_40f5d4, %struct.Memory** %MEMORY
  %loadMem_40f5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %686 = getelementptr inbounds %struct.GPR, %struct.GPR* %685, i32 0, i32 33
  %687 = getelementptr inbounds %struct.Reg, %struct.Reg* %686, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %687 to i64*
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 5
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %ECX.i1366 = bitcast %union.anon* %690 to i32*
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %692 = getelementptr inbounds %struct.GPR, %struct.GPR* %691, i32 0, i32 15
  %693 = getelementptr inbounds %struct.Reg, %struct.Reg* %692, i32 0, i32 0
  %RBP.i1367 = bitcast %union.anon* %693 to i64*
  %694 = load i64, i64* %RBP.i1367
  %695 = sub i64 %694, 172
  %696 = load i32, i32* %ECX.i1366
  %697 = zext i32 %696 to i64
  %698 = load i64, i64* %PC.i1365
  %699 = add i64 %698, 6
  store i64 %699, i64* %PC.i1365
  %700 = inttoptr i64 %695 to i32*
  store i32 %696, i32* %700
  store %struct.Memory* %loadMem_40f5da, %struct.Memory** %MEMORY
  %loadMem_40f5e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %702 = getelementptr inbounds %struct.GPR, %struct.GPR* %701, i32 0, i32 33
  %703 = getelementptr inbounds %struct.Reg, %struct.Reg* %702, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %703 to i64*
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %705 = getelementptr inbounds %struct.GPR, %struct.GPR* %704, i32 0, i32 7
  %706 = getelementptr inbounds %struct.Reg, %struct.Reg* %705, i32 0, i32 0
  %EDX.i1363 = bitcast %union.anon* %706 to i32*
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %708 = getelementptr inbounds %struct.GPR, %struct.GPR* %707, i32 0, i32 5
  %709 = getelementptr inbounds %struct.Reg, %struct.Reg* %708, i32 0, i32 0
  %RCX.i1364 = bitcast %union.anon* %709 to i64*
  %710 = load i32, i32* %EDX.i1363
  %711 = zext i32 %710 to i64
  %712 = load i64, i64* %PC.i1362
  %713 = add i64 %712, 2
  store i64 %713, i64* %PC.i1362
  %714 = and i64 %711, 4294967295
  store i64 %714, i64* %RCX.i1364, align 8
  store %struct.Memory* %loadMem_40f5e0, %struct.Memory** %MEMORY
  %loadMem_40f5e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 33
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %717 to i64*
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %719 = getelementptr inbounds %struct.GPR, %struct.GPR* %718, i32 0, i32 7
  %720 = getelementptr inbounds %struct.Reg, %struct.Reg* %719, i32 0, i32 0
  %RDX.i1360 = bitcast %union.anon* %720 to i64*
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %722 = getelementptr inbounds %struct.GPR, %struct.GPR* %721, i32 0, i32 15
  %723 = getelementptr inbounds %struct.Reg, %struct.Reg* %722, i32 0, i32 0
  %RBP.i1361 = bitcast %union.anon* %723 to i64*
  %724 = load i64, i64* %RBP.i1361
  %725 = sub i64 %724, 172
  %726 = load i64, i64* %PC.i1359
  %727 = add i64 %726, 6
  store i64 %727, i64* %PC.i1359
  %728 = inttoptr i64 %725 to i32*
  %729 = load i32, i32* %728
  %730 = zext i32 %729 to i64
  store i64 %730, i64* %RDX.i1360, align 8
  store %struct.Memory* %loadMem_40f5e2, %struct.Memory** %MEMORY
  %loadMem_40f5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 33
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %733 to i64*
  %734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %735 = getelementptr inbounds %struct.GPR, %struct.GPR* %734, i32 0, i32 5
  %736 = getelementptr inbounds %struct.Reg, %struct.Reg* %735, i32 0, i32 0
  %737 = bitcast %union.anon* %736 to %struct.anon.2*
  %CL.i1357 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %737, i32 0, i32 0
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %739 = getelementptr inbounds %struct.GPR, %struct.GPR* %738, i32 0, i32 7
  %740 = getelementptr inbounds %struct.Reg, %struct.Reg* %739, i32 0, i32 0
  %RDX.i1358 = bitcast %union.anon* %740 to i64*
  %741 = load i64, i64* %RDX.i1358
  %742 = load i8, i8* %CL.i1357
  %743 = zext i8 %742 to i64
  %744 = load i64, i64* %PC.i1356
  %745 = add i64 %744, 2
  store i64 %745, i64* %PC.i1356
  %746 = trunc i64 %743 to i5
  switch i5 %746, label %753 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %747
  ]

; <label>:747:                                    ; preds = %routine_idivl__esi.exit
  %748 = trunc i64 %741 to i32
  %749 = shl i32 %748, 1
  %750 = icmp slt i32 %748, 0
  %751 = icmp slt i32 %749, 0
  %752 = xor i1 %750, %751
  br label %762

; <label>:753:                                    ; preds = %routine_idivl__esi.exit
  %754 = and i64 %743, 31
  %755 = add i64 %754, 4294967295
  %756 = and i64 %741, 4294967295
  %757 = and i64 %755, 4294967295
  %758 = shl i64 %756, %757
  %759 = trunc i64 %758 to i32
  %760 = icmp slt i32 %759, 0
  %761 = shl i32 %759, 1
  br label %762

; <label>:762:                                    ; preds = %753, %747
  %763 = phi i1 [ %750, %747 ], [ %760, %753 ]
  %764 = phi i1 [ %752, %747 ], [ false, %753 ]
  %765 = phi i32 [ %749, %747 ], [ %761, %753 ]
  %766 = zext i32 %765 to i64
  store i64 %766, i64* %RDX.i1358, align 8
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %768 = zext i1 %763 to i8
  store i8 %768, i8* %767, align 1
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %770 = and i32 %765, 254
  %771 = call i32 @llvm.ctpop.i32(i32 %770)
  %772 = trunc i32 %771 to i8
  %773 = and i8 %772, 1
  %774 = xor i8 %773, 1
  store i8 %774, i8* %769, align 1
  %775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %775, align 1
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %777 = icmp eq i32 %765, 0
  %778 = zext i1 %777 to i8
  store i8 %778, i8* %776, align 1
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %780 = lshr i32 %765, 31
  %781 = trunc i32 %780 to i8
  store i8 %781, i8* %779, align 1
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %783 = zext i1 %764 to i8
  store i8 %783, i8* %782, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %routine_idivl__esi.exit, %762
  store %struct.Memory* %loadMem_40f5e8, %struct.Memory** %MEMORY
  %loadMem_40f5ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %785 = getelementptr inbounds %struct.GPR, %struct.GPR* %784, i32 0, i32 33
  %786 = getelementptr inbounds %struct.Reg, %struct.Reg* %785, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %786 to i64*
  %787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %788 = getelementptr inbounds %struct.GPR, %struct.GPR* %787, i32 0, i32 7
  %789 = getelementptr inbounds %struct.Reg, %struct.Reg* %788, i32 0, i32 0
  %EDX.i1354 = bitcast %union.anon* %789 to i32*
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %791 = getelementptr inbounds %struct.GPR, %struct.GPR* %790, i32 0, i32 1
  %792 = getelementptr inbounds %struct.Reg, %struct.Reg* %791, i32 0, i32 0
  %RAX.i1355 = bitcast %union.anon* %792 to i64*
  %793 = load i32, i32* %EDX.i1354
  %794 = zext i32 %793 to i64
  %795 = load i64, i64* %PC.i1353
  %796 = add i64 %795, 2
  store i64 %796, i64* %PC.i1353
  %797 = and i64 %794, 4294967295
  store i64 %797, i64* %RAX.i1355, align 8
  store %struct.Memory* %loadMem_40f5ea, %struct.Memory** %MEMORY
  %loadMem_40f5ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %799 = getelementptr inbounds %struct.GPR, %struct.GPR* %798, i32 0, i32 33
  %800 = getelementptr inbounds %struct.Reg, %struct.Reg* %799, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %800 to i64*
  %801 = load i64, i64* %PC.i1352
  %802 = add i64 %801, 1
  store i64 %802, i64* %PC.i1352
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %805 = bitcast %union.anon* %804 to i32*
  %806 = load i32, i32* %805, align 8
  %807 = sext i32 %806 to i64
  %808 = lshr i64 %807, 32
  store i64 %808, i64* %803, align 8
  store %struct.Memory* %loadMem_40f5ec, %struct.Memory** %MEMORY
  %loadMem_40f5ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 33
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %PC.i1349 = bitcast %union.anon* %811 to i64*
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 11
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %RDI.i1350 = bitcast %union.anon* %814 to i64*
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 15
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %RBP.i1351 = bitcast %union.anon* %817 to i64*
  %818 = load i64, i64* %RBP.i1351
  %819 = sub i64 %818, 164
  %820 = load i64, i64* %PC.i1349
  %821 = add i64 %820, 6
  store i64 %821, i64* %PC.i1349
  %822 = inttoptr i64 %819 to i32*
  %823 = load i32, i32* %822
  %824 = zext i32 %823 to i64
  store i64 %824, i64* %RDI.i1350, align 8
  store %struct.Memory* %loadMem_40f5ed, %struct.Memory** %MEMORY
  %loadMem_40f5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %826 = getelementptr inbounds %struct.GPR, %struct.GPR* %825, i32 0, i32 33
  %827 = getelementptr inbounds %struct.Reg, %struct.Reg* %826, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %827 to i64*
  %828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %829 = getelementptr inbounds %struct.GPR, %struct.GPR* %828, i32 0, i32 11
  %830 = getelementptr inbounds %struct.Reg, %struct.Reg* %829, i32 0, i32 0
  %EDI.i1346 = bitcast %union.anon* %830 to i32*
  %831 = load i32, i32* %EDI.i1346
  %832 = zext i32 %831 to i64
  %833 = load i64, i64* %PC.i1345
  %834 = add i64 %833, 2
  store i64 %834, i64* %PC.i1345
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %836 = bitcast %union.anon* %835 to i32*
  %837 = load i32, i32* %836, align 8
  %838 = zext i32 %837 to i64
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %840 = bitcast %union.anon* %839 to i32*
  %841 = load i32, i32* %840, align 8
  %842 = zext i32 %841 to i64
  %843 = shl i64 %832, 32
  %844 = ashr exact i64 %843, 32
  %845 = shl i64 %842, 32
  %846 = or i64 %845, %838
  %847 = sdiv i64 %846, %844
  %848 = shl i64 %847, 32
  %849 = ashr exact i64 %848, 32
  %850 = icmp eq i64 %847, %849
  br i1 %850, label %855, label %851

; <label>:851:                                    ; preds = %routine_shll__cl___edx.exit
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %853 = load i64, i64* %852, align 8
  %854 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %853, %struct.Memory* %loadMem_40f5f3)
  br label %routine_idivl__edi.exit

; <label>:855:                                    ; preds = %routine_shll__cl___edx.exit
  %856 = srem i64 %846, %844
  %857 = getelementptr inbounds %union.anon, %union.anon* %835, i64 0, i32 0
  %858 = and i64 %847, 4294967295
  store i64 %858, i64* %857, align 8
  %859 = getelementptr inbounds %union.anon, %union.anon* %839, i64 0, i32 0
  %860 = and i64 %856, 4294967295
  store i64 %860, i64* %859, align 8
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %861, align 1
  %862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %862, align 1
  %863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %863, align 1
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %864, align 1
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %865, align 1
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %866, align 1
  br label %routine_idivl__edi.exit

routine_idivl__edi.exit:                          ; preds = %851, %855
  %867 = phi %struct.Memory* [ %854, %851 ], [ %loadMem_40f5f3, %855 ]
  store %struct.Memory* %867, %struct.Memory** %MEMORY
  %loadMem_40f5f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %869 = getelementptr inbounds %struct.GPR, %struct.GPR* %868, i32 0, i32 33
  %870 = getelementptr inbounds %struct.Reg, %struct.Reg* %869, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %870 to i64*
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 1
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %EAX.i1343 = bitcast %union.anon* %873 to i32*
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 15
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %RBP.i1344 = bitcast %union.anon* %876 to i64*
  %877 = load i64, i64* %RBP.i1344
  %878 = sub i64 %877, 160
  %879 = load i32, i32* %EAX.i1343
  %880 = zext i32 %879 to i64
  %881 = load i64, i64* %PC.i1342
  %882 = add i64 %881, 6
  store i64 %882, i64* %PC.i1342
  %883 = inttoptr i64 %878 to i32*
  store i32 %879, i32* %883
  store %struct.Memory* %loadMem_40f5f5, %struct.Memory** %MEMORY
  %loadMem_40f5fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 33
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %PC.i1340 = bitcast %union.anon* %886 to i64*
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 15
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %889 to i64*
  %890 = load i64, i64* %RBP.i1341
  %891 = sub i64 %890, 16
  %892 = load i64, i64* %PC.i1340
  %893 = add i64 %892, 7
  store i64 %893, i64* %PC.i1340
  %894 = inttoptr i64 %891 to i32*
  store i32 0, i32* %894
  store %struct.Memory* %loadMem_40f5fb, %struct.Memory** %MEMORY
  br label %block_.L_40f602

block_.L_40f602:                                  ; preds = %block_.L_40f675, %routine_idivl__edi.exit
  %loadMem_40f602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %896 = getelementptr inbounds %struct.GPR, %struct.GPR* %895, i32 0, i32 33
  %897 = getelementptr inbounds %struct.Reg, %struct.Reg* %896, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %897 to i64*
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %899 = getelementptr inbounds %struct.GPR, %struct.GPR* %898, i32 0, i32 15
  %900 = getelementptr inbounds %struct.Reg, %struct.Reg* %899, i32 0, i32 0
  %RBP.i1339 = bitcast %union.anon* %900 to i64*
  %901 = load i64, i64* %RBP.i1339
  %902 = sub i64 %901, 16
  %903 = load i64, i64* %PC.i1338
  %904 = add i64 %903, 4
  store i64 %904, i64* %PC.i1338
  %905 = inttoptr i64 %902 to i32*
  %906 = load i32, i32* %905
  %907 = sub i32 %906, 4
  %908 = icmp ult i32 %906, 4
  %909 = zext i1 %908 to i8
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %909, i8* %910, align 1
  %911 = and i32 %907, 255
  %912 = call i32 @llvm.ctpop.i32(i32 %911)
  %913 = trunc i32 %912 to i8
  %914 = and i8 %913, 1
  %915 = xor i8 %914, 1
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %915, i8* %916, align 1
  %917 = xor i32 %906, 4
  %918 = xor i32 %917, %907
  %919 = lshr i32 %918, 4
  %920 = trunc i32 %919 to i8
  %921 = and i8 %920, 1
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %921, i8* %922, align 1
  %923 = icmp eq i32 %907, 0
  %924 = zext i1 %923 to i8
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %924, i8* %925, align 1
  %926 = lshr i32 %907, 31
  %927 = trunc i32 %926 to i8
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %927, i8* %928, align 1
  %929 = lshr i32 %906, 31
  %930 = xor i32 %926, %929
  %931 = add i32 %930, %929
  %932 = icmp eq i32 %931, 2
  %933 = zext i1 %932 to i8
  %934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %933, i8* %934, align 1
  store %struct.Memory* %loadMem_40f602, %struct.Memory** %MEMORY
  %loadMem_40f606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 33
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %937 to i64*
  %938 = load i64, i64* %PC.i1337
  %939 = add i64 %938, 125
  %940 = load i64, i64* %PC.i1337
  %941 = add i64 %940, 6
  %942 = load i64, i64* %PC.i1337
  %943 = add i64 %942, 6
  store i64 %943, i64* %PC.i1337
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %945 = load i8, i8* %944, align 1
  %946 = icmp ne i8 %945, 0
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %948 = load i8, i8* %947, align 1
  %949 = icmp ne i8 %948, 0
  %950 = xor i1 %946, %949
  %951 = xor i1 %950, true
  %952 = zext i1 %951 to i8
  store i8 %952, i8* %BRANCH_TAKEN, align 1
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %954 = select i1 %950, i64 %941, i64 %939
  store i64 %954, i64* %953, align 8
  store %struct.Memory* %loadMem_40f606, %struct.Memory** %MEMORY
  %loadBr_40f606 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f606 = icmp eq i8 %loadBr_40f606, 1
  br i1 %cmpBr_40f606, label %block_.L_40f683, label %block_40f60c

block_40f60c:                                     ; preds = %block_.L_40f602
  %loadMem_40f60c = load %struct.Memory*, %struct.Memory** %MEMORY
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %956 = getelementptr inbounds %struct.GPR, %struct.GPR* %955, i32 0, i32 33
  %957 = getelementptr inbounds %struct.Reg, %struct.Reg* %956, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %957 to i64*
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %959 = getelementptr inbounds %struct.GPR, %struct.GPR* %958, i32 0, i32 15
  %960 = getelementptr inbounds %struct.Reg, %struct.Reg* %959, i32 0, i32 0
  %RBP.i1336 = bitcast %union.anon* %960 to i64*
  %961 = load i64, i64* %RBP.i1336
  %962 = sub i64 %961, 12
  %963 = load i64, i64* %PC.i1335
  %964 = add i64 %963, 7
  store i64 %964, i64* %PC.i1335
  %965 = inttoptr i64 %962 to i32*
  store i32 0, i32* %965
  store %struct.Memory* %loadMem_40f60c, %struct.Memory** %MEMORY
  br label %block_.L_40f613

block_.L_40f613:                                  ; preds = %block_40f61d, %block_40f60c
  %loadMem_40f613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 33
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %968 to i64*
  %969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %970 = getelementptr inbounds %struct.GPR, %struct.GPR* %969, i32 0, i32 15
  %971 = getelementptr inbounds %struct.Reg, %struct.Reg* %970, i32 0, i32 0
  %RBP.i1334 = bitcast %union.anon* %971 to i64*
  %972 = load i64, i64* %RBP.i1334
  %973 = sub i64 %972, 12
  %974 = load i64, i64* %PC.i1333
  %975 = add i64 %974, 4
  store i64 %975, i64* %PC.i1333
  %976 = inttoptr i64 %973 to i32*
  %977 = load i32, i32* %976
  %978 = sub i32 %977, 4
  %979 = icmp ult i32 %977, 4
  %980 = zext i1 %979 to i8
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %980, i8* %981, align 1
  %982 = and i32 %978, 255
  %983 = call i32 @llvm.ctpop.i32(i32 %982)
  %984 = trunc i32 %983 to i8
  %985 = and i8 %984, 1
  %986 = xor i8 %985, 1
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %986, i8* %987, align 1
  %988 = xor i32 %977, 4
  %989 = xor i32 %988, %978
  %990 = lshr i32 %989, 4
  %991 = trunc i32 %990 to i8
  %992 = and i8 %991, 1
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %992, i8* %993, align 1
  %994 = icmp eq i32 %978, 0
  %995 = zext i1 %994 to i8
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %995, i8* %996, align 1
  %997 = lshr i32 %978, 31
  %998 = trunc i32 %997 to i8
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %998, i8* %999, align 1
  %1000 = lshr i32 %977, 31
  %1001 = xor i32 %997, %1000
  %1002 = add i32 %1001, %1000
  %1003 = icmp eq i32 %1002, 2
  %1004 = zext i1 %1003 to i8
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1004, i8* %1005, align 1
  store %struct.Memory* %loadMem_40f613, %struct.Memory** %MEMORY
  %loadMem_40f617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1007 = getelementptr inbounds %struct.GPR, %struct.GPR* %1006, i32 0, i32 33
  %1008 = getelementptr inbounds %struct.Reg, %struct.Reg* %1007, i32 0, i32 0
  %PC.i1332 = bitcast %union.anon* %1008 to i64*
  %1009 = load i64, i64* %PC.i1332
  %1010 = add i64 %1009, 89
  %1011 = load i64, i64* %PC.i1332
  %1012 = add i64 %1011, 6
  %1013 = load i64, i64* %PC.i1332
  %1014 = add i64 %1013, 6
  store i64 %1014, i64* %PC.i1332
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1016 = load i8, i8* %1015, align 1
  %1017 = icmp ne i8 %1016, 0
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1019 = load i8, i8* %1018, align 1
  %1020 = icmp ne i8 %1019, 0
  %1021 = xor i1 %1017, %1020
  %1022 = xor i1 %1021, true
  %1023 = zext i1 %1022 to i8
  store i8 %1023, i8* %BRANCH_TAKEN, align 1
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1025 = select i1 %1021, i64 %1012, i64 %1010
  store i64 %1025, i64* %1024, align 8
  store %struct.Memory* %loadMem_40f617, %struct.Memory** %MEMORY
  %loadBr_40f617 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f617 = icmp eq i8 %loadBr_40f617, 1
  br i1 %cmpBr_40f617, label %block_.L_40f670, label %block_40f61d

block_40f61d:                                     ; preds = %block_.L_40f613
  %loadMem_40f61d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1027 = getelementptr inbounds %struct.GPR, %struct.GPR* %1026, i32 0, i32 33
  %1028 = getelementptr inbounds %struct.Reg, %struct.Reg* %1027, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %1028 to i64*
  %1029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1030 = getelementptr inbounds %struct.GPR, %struct.GPR* %1029, i32 0, i32 1
  %1031 = getelementptr inbounds %struct.Reg, %struct.Reg* %1030, i32 0, i32 0
  %RAX.i1330 = bitcast %union.anon* %1031 to i64*
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1033 = getelementptr inbounds %struct.GPR, %struct.GPR* %1032, i32 0, i32 15
  %1034 = getelementptr inbounds %struct.Reg, %struct.Reg* %1033, i32 0, i32 0
  %RBP.i1331 = bitcast %union.anon* %1034 to i64*
  %1035 = load i64, i64* %RBP.i1331
  %1036 = sub i64 %1035, 144
  %1037 = load i64, i64* %PC.i1329
  %1038 = add i64 %1037, 7
  store i64 %1038, i64* %PC.i1329
  store i64 %1036, i64* %RAX.i1330, align 8
  store %struct.Memory* %loadMem_40f61d, %struct.Memory** %MEMORY
  %loadMem_40f624 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1040 = getelementptr inbounds %struct.GPR, %struct.GPR* %1039, i32 0, i32 33
  %1041 = getelementptr inbounds %struct.Reg, %struct.Reg* %1040, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %1041 to i64*
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1043 = getelementptr inbounds %struct.GPR, %struct.GPR* %1042, i32 0, i32 5
  %1044 = getelementptr inbounds %struct.Reg, %struct.Reg* %1043, i32 0, i32 0
  %RCX.i1328 = bitcast %union.anon* %1044 to i64*
  %1045 = load i64, i64* %PC.i1327
  %1046 = add i64 %1045, 8
  store i64 %1046, i64* %PC.i1327
  %1047 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1047, i64* %RCX.i1328, align 8
  store %struct.Memory* %loadMem_40f624, %struct.Memory** %MEMORY
  %loadMem_40f62c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1049 = getelementptr inbounds %struct.GPR, %struct.GPR* %1048, i32 0, i32 33
  %1050 = getelementptr inbounds %struct.Reg, %struct.Reg* %1049, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %1050 to i64*
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1052 = getelementptr inbounds %struct.GPR, %struct.GPR* %1051, i32 0, i32 5
  %1053 = getelementptr inbounds %struct.Reg, %struct.Reg* %1052, i32 0, i32 0
  %RCX.i1326 = bitcast %union.anon* %1053 to i64*
  %1054 = load i64, i64* %RCX.i1326
  %1055 = load i64, i64* %PC.i1325
  %1056 = add i64 %1055, 7
  store i64 %1056, i64* %PC.i1325
  %1057 = add i64 12600, %1054
  store i64 %1057, i64* %RCX.i1326, align 8
  %1058 = icmp ult i64 %1057, %1054
  %1059 = icmp ult i64 %1057, 12600
  %1060 = or i1 %1058, %1059
  %1061 = zext i1 %1060 to i8
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1061, i8* %1062, align 1
  %1063 = trunc i64 %1057 to i32
  %1064 = and i32 %1063, 255
  %1065 = call i32 @llvm.ctpop.i32(i32 %1064)
  %1066 = trunc i32 %1065 to i8
  %1067 = and i8 %1066, 1
  %1068 = xor i8 %1067, 1
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1068, i8* %1069, align 1
  %1070 = xor i64 12600, %1054
  %1071 = xor i64 %1070, %1057
  %1072 = lshr i64 %1071, 4
  %1073 = trunc i64 %1072 to i8
  %1074 = and i8 %1073, 1
  %1075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1074, i8* %1075, align 1
  %1076 = icmp eq i64 %1057, 0
  %1077 = zext i1 %1076 to i8
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1077, i8* %1078, align 1
  %1079 = lshr i64 %1057, 63
  %1080 = trunc i64 %1079 to i8
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1080, i8* %1081, align 1
  %1082 = lshr i64 %1054, 63
  %1083 = xor i64 %1079, %1082
  %1084 = add i64 %1083, %1079
  %1085 = icmp eq i64 %1084, 2
  %1086 = zext i1 %1085 to i8
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1086, i8* %1087, align 1
  store %struct.Memory* %loadMem_40f62c, %struct.Memory** %MEMORY
  %loadMem_40f633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1089 = getelementptr inbounds %struct.GPR, %struct.GPR* %1088, i32 0, i32 33
  %1090 = getelementptr inbounds %struct.Reg, %struct.Reg* %1089, i32 0, i32 0
  %PC.i1322 = bitcast %union.anon* %1090 to i64*
  %1091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1092 = getelementptr inbounds %struct.GPR, %struct.GPR* %1091, i32 0, i32 7
  %1093 = getelementptr inbounds %struct.Reg, %struct.Reg* %1092, i32 0, i32 0
  %RDX.i1323 = bitcast %union.anon* %1093 to i64*
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1095 = getelementptr inbounds %struct.GPR, %struct.GPR* %1094, i32 0, i32 15
  %1096 = getelementptr inbounds %struct.Reg, %struct.Reg* %1095, i32 0, i32 0
  %RBP.i1324 = bitcast %union.anon* %1096 to i64*
  %1097 = load i64, i64* %RBP.i1324
  %1098 = sub i64 %1097, 12
  %1099 = load i64, i64* %PC.i1322
  %1100 = add i64 %1099, 3
  store i64 %1100, i64* %PC.i1322
  %1101 = inttoptr i64 %1098 to i32*
  %1102 = load i32, i32* %1101
  %1103 = zext i32 %1102 to i64
  store i64 %1103, i64* %RDX.i1323, align 8
  store %struct.Memory* %loadMem_40f633, %struct.Memory** %MEMORY
  %loadMem_40f636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1105 = getelementptr inbounds %struct.GPR, %struct.GPR* %1104, i32 0, i32 33
  %1106 = getelementptr inbounds %struct.Reg, %struct.Reg* %1105, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %1106 to i64*
  %1107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1108 = getelementptr inbounds %struct.GPR, %struct.GPR* %1107, i32 0, i32 7
  %1109 = getelementptr inbounds %struct.Reg, %struct.Reg* %1108, i32 0, i32 0
  %RDX.i1320 = bitcast %union.anon* %1109 to i64*
  %1110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1111 = getelementptr inbounds %struct.GPR, %struct.GPR* %1110, i32 0, i32 15
  %1112 = getelementptr inbounds %struct.Reg, %struct.Reg* %1111, i32 0, i32 0
  %RBP.i1321 = bitcast %union.anon* %1112 to i64*
  %1113 = load i64, i64* %RDX.i1320
  %1114 = load i64, i64* %RBP.i1321
  %1115 = sub i64 %1114, 4
  %1116 = load i64, i64* %PC.i1319
  %1117 = add i64 %1116, 3
  store i64 %1117, i64* %PC.i1319
  %1118 = trunc i64 %1113 to i32
  %1119 = inttoptr i64 %1115 to i32*
  %1120 = load i32, i32* %1119
  %1121 = add i32 %1120, %1118
  %1122 = zext i32 %1121 to i64
  store i64 %1122, i64* %RDX.i1320, align 8
  %1123 = icmp ult i32 %1121, %1118
  %1124 = icmp ult i32 %1121, %1120
  %1125 = or i1 %1123, %1124
  %1126 = zext i1 %1125 to i8
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1126, i8* %1127, align 1
  %1128 = and i32 %1121, 255
  %1129 = call i32 @llvm.ctpop.i32(i32 %1128)
  %1130 = trunc i32 %1129 to i8
  %1131 = and i8 %1130, 1
  %1132 = xor i8 %1131, 1
  %1133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1132, i8* %1133, align 1
  %1134 = xor i32 %1120, %1118
  %1135 = xor i32 %1134, %1121
  %1136 = lshr i32 %1135, 4
  %1137 = trunc i32 %1136 to i8
  %1138 = and i8 %1137, 1
  %1139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1138, i8* %1139, align 1
  %1140 = icmp eq i32 %1121, 0
  %1141 = zext i1 %1140 to i8
  %1142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1141, i8* %1142, align 1
  %1143 = lshr i32 %1121, 31
  %1144 = trunc i32 %1143 to i8
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1144, i8* %1145, align 1
  %1146 = lshr i32 %1118, 31
  %1147 = lshr i32 %1120, 31
  %1148 = xor i32 %1143, %1146
  %1149 = xor i32 %1143, %1147
  %1150 = add i32 %1148, %1149
  %1151 = icmp eq i32 %1150, 2
  %1152 = zext i1 %1151 to i8
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1152, i8* %1153, align 1
  store %struct.Memory* %loadMem_40f636, %struct.Memory** %MEMORY
  %loadMem_40f639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1155 = getelementptr inbounds %struct.GPR, %struct.GPR* %1154, i32 0, i32 33
  %1156 = getelementptr inbounds %struct.Reg, %struct.Reg* %1155, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %1156 to i64*
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1158 = getelementptr inbounds %struct.GPR, %struct.GPR* %1157, i32 0, i32 7
  %1159 = getelementptr inbounds %struct.Reg, %struct.Reg* %1158, i32 0, i32 0
  %EDX.i1317 = bitcast %union.anon* %1159 to i32*
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1161 = getelementptr inbounds %struct.GPR, %struct.GPR* %1160, i32 0, i32 9
  %1162 = getelementptr inbounds %struct.Reg, %struct.Reg* %1161, i32 0, i32 0
  %RSI.i1318 = bitcast %union.anon* %1162 to i64*
  %1163 = load i32, i32* %EDX.i1317
  %1164 = zext i32 %1163 to i64
  %1165 = load i64, i64* %PC.i1316
  %1166 = add i64 %1165, 3
  store i64 %1166, i64* %PC.i1316
  %1167 = shl i64 %1164, 32
  %1168 = ashr exact i64 %1167, 32
  store i64 %1168, i64* %RSI.i1318, align 8
  store %struct.Memory* %loadMem_40f639, %struct.Memory** %MEMORY
  %loadMem_40f63c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1170 = getelementptr inbounds %struct.GPR, %struct.GPR* %1169, i32 0, i32 33
  %1171 = getelementptr inbounds %struct.Reg, %struct.Reg* %1170, i32 0, i32 0
  %PC.i1314 = bitcast %union.anon* %1171 to i64*
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1173 = getelementptr inbounds %struct.GPR, %struct.GPR* %1172, i32 0, i32 9
  %1174 = getelementptr inbounds %struct.Reg, %struct.Reg* %1173, i32 0, i32 0
  %RSI.i1315 = bitcast %union.anon* %1174 to i64*
  %1175 = load i64, i64* %RSI.i1315
  %1176 = load i64, i64* %PC.i1314
  %1177 = add i64 %1176, 4
  store i64 %1177, i64* %PC.i1314
  %1178 = shl i64 %1175, 4
  %1179 = icmp slt i64 %1178, 0
  %1180 = shl i64 %1178, 1
  store i64 %1180, i64* %RSI.i1315, align 8
  %1181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1182 = zext i1 %1179 to i8
  store i8 %1182, i8* %1181, align 1
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1184 = trunc i64 %1180 to i32
  %1185 = and i32 %1184, 254
  %1186 = call i32 @llvm.ctpop.i32(i32 %1185)
  %1187 = trunc i32 %1186 to i8
  %1188 = and i8 %1187, 1
  %1189 = xor i8 %1188, 1
  store i8 %1189, i8* %1183, align 1
  %1190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1190, align 1
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1192 = icmp eq i64 %1180, 0
  %1193 = zext i1 %1192 to i8
  store i8 %1193, i8* %1191, align 1
  %1194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1195 = lshr i64 %1180, 63
  %1196 = trunc i64 %1195 to i8
  store i8 %1196, i8* %1194, align 1
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1197, align 1
  store %struct.Memory* %loadMem_40f63c, %struct.Memory** %MEMORY
  %loadMem_40f640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1199 = getelementptr inbounds %struct.GPR, %struct.GPR* %1198, i32 0, i32 33
  %1200 = getelementptr inbounds %struct.Reg, %struct.Reg* %1199, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %1200 to i64*
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1202 = getelementptr inbounds %struct.GPR, %struct.GPR* %1201, i32 0, i32 5
  %1203 = getelementptr inbounds %struct.Reg, %struct.Reg* %1202, i32 0, i32 0
  %RCX.i1312 = bitcast %union.anon* %1203 to i64*
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1205 = getelementptr inbounds %struct.GPR, %struct.GPR* %1204, i32 0, i32 9
  %1206 = getelementptr inbounds %struct.Reg, %struct.Reg* %1205, i32 0, i32 0
  %RSI.i1313 = bitcast %union.anon* %1206 to i64*
  %1207 = load i64, i64* %RCX.i1312
  %1208 = load i64, i64* %RSI.i1313
  %1209 = load i64, i64* %PC.i1311
  %1210 = add i64 %1209, 3
  store i64 %1210, i64* %PC.i1311
  %1211 = add i64 %1208, %1207
  store i64 %1211, i64* %RCX.i1312, align 8
  %1212 = icmp ult i64 %1211, %1207
  %1213 = icmp ult i64 %1211, %1208
  %1214 = or i1 %1212, %1213
  %1215 = zext i1 %1214 to i8
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1215, i8* %1216, align 1
  %1217 = trunc i64 %1211 to i32
  %1218 = and i32 %1217, 255
  %1219 = call i32 @llvm.ctpop.i32(i32 %1218)
  %1220 = trunc i32 %1219 to i8
  %1221 = and i8 %1220, 1
  %1222 = xor i8 %1221, 1
  %1223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1222, i8* %1223, align 1
  %1224 = xor i64 %1208, %1207
  %1225 = xor i64 %1224, %1211
  %1226 = lshr i64 %1225, 4
  %1227 = trunc i64 %1226 to i8
  %1228 = and i8 %1227, 1
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1228, i8* %1229, align 1
  %1230 = icmp eq i64 %1211, 0
  %1231 = zext i1 %1230 to i8
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1231, i8* %1232, align 1
  %1233 = lshr i64 %1211, 63
  %1234 = trunc i64 %1233 to i8
  %1235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1234, i8* %1235, align 1
  %1236 = lshr i64 %1207, 63
  %1237 = lshr i64 %1208, 63
  %1238 = xor i64 %1233, %1236
  %1239 = xor i64 %1233, %1237
  %1240 = add i64 %1238, %1239
  %1241 = icmp eq i64 %1240, 2
  %1242 = zext i1 %1241 to i8
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1242, i8* %1243, align 1
  store %struct.Memory* %loadMem_40f640, %struct.Memory** %MEMORY
  %loadMem_40f643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1245 = getelementptr inbounds %struct.GPR, %struct.GPR* %1244, i32 0, i32 33
  %1246 = getelementptr inbounds %struct.Reg, %struct.Reg* %1245, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %1246 to i64*
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1248 = getelementptr inbounds %struct.GPR, %struct.GPR* %1247, i32 0, i32 7
  %1249 = getelementptr inbounds %struct.Reg, %struct.Reg* %1248, i32 0, i32 0
  %RDX.i1309 = bitcast %union.anon* %1249 to i64*
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1251 = getelementptr inbounds %struct.GPR, %struct.GPR* %1250, i32 0, i32 15
  %1252 = getelementptr inbounds %struct.Reg, %struct.Reg* %1251, i32 0, i32 0
  %RBP.i1310 = bitcast %union.anon* %1252 to i64*
  %1253 = load i64, i64* %RBP.i1310
  %1254 = sub i64 %1253, 16
  %1255 = load i64, i64* %PC.i1308
  %1256 = add i64 %1255, 3
  store i64 %1256, i64* %PC.i1308
  %1257 = inttoptr i64 %1254 to i32*
  %1258 = load i32, i32* %1257
  %1259 = zext i32 %1258 to i64
  store i64 %1259, i64* %RDX.i1309, align 8
  store %struct.Memory* %loadMem_40f643, %struct.Memory** %MEMORY
  %loadMem_40f646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1261 = getelementptr inbounds %struct.GPR, %struct.GPR* %1260, i32 0, i32 33
  %1262 = getelementptr inbounds %struct.Reg, %struct.Reg* %1261, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %1262 to i64*
  %1263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1264 = getelementptr inbounds %struct.GPR, %struct.GPR* %1263, i32 0, i32 7
  %1265 = getelementptr inbounds %struct.Reg, %struct.Reg* %1264, i32 0, i32 0
  %RDX.i1306 = bitcast %union.anon* %1265 to i64*
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1267 = getelementptr inbounds %struct.GPR, %struct.GPR* %1266, i32 0, i32 15
  %1268 = getelementptr inbounds %struct.Reg, %struct.Reg* %1267, i32 0, i32 0
  %RBP.i1307 = bitcast %union.anon* %1268 to i64*
  %1269 = load i64, i64* %RDX.i1306
  %1270 = load i64, i64* %RBP.i1307
  %1271 = sub i64 %1270, 8
  %1272 = load i64, i64* %PC.i1305
  %1273 = add i64 %1272, 3
  store i64 %1273, i64* %PC.i1305
  %1274 = trunc i64 %1269 to i32
  %1275 = inttoptr i64 %1271 to i32*
  %1276 = load i32, i32* %1275
  %1277 = add i32 %1276, %1274
  %1278 = zext i32 %1277 to i64
  store i64 %1278, i64* %RDX.i1306, align 8
  %1279 = icmp ult i32 %1277, %1274
  %1280 = icmp ult i32 %1277, %1276
  %1281 = or i1 %1279, %1280
  %1282 = zext i1 %1281 to i8
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1282, i8* %1283, align 1
  %1284 = and i32 %1277, 255
  %1285 = call i32 @llvm.ctpop.i32(i32 %1284)
  %1286 = trunc i32 %1285 to i8
  %1287 = and i8 %1286, 1
  %1288 = xor i8 %1287, 1
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1288, i8* %1289, align 1
  %1290 = xor i32 %1276, %1274
  %1291 = xor i32 %1290, %1277
  %1292 = lshr i32 %1291, 4
  %1293 = trunc i32 %1292 to i8
  %1294 = and i8 %1293, 1
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1294, i8* %1295, align 1
  %1296 = icmp eq i32 %1277, 0
  %1297 = zext i1 %1296 to i8
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1297, i8* %1298, align 1
  %1299 = lshr i32 %1277, 31
  %1300 = trunc i32 %1299 to i8
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1300, i8* %1301, align 1
  %1302 = lshr i32 %1274, 31
  %1303 = lshr i32 %1276, 31
  %1304 = xor i32 %1299, %1302
  %1305 = xor i32 %1299, %1303
  %1306 = add i32 %1304, %1305
  %1307 = icmp eq i32 %1306, 2
  %1308 = zext i1 %1307 to i8
  %1309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1308, i8* %1309, align 1
  store %struct.Memory* %loadMem_40f646, %struct.Memory** %MEMORY
  %loadMem_40f649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 33
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %1312 to i64*
  %1313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1314 = getelementptr inbounds %struct.GPR, %struct.GPR* %1313, i32 0, i32 7
  %1315 = getelementptr inbounds %struct.Reg, %struct.Reg* %1314, i32 0, i32 0
  %EDX.i1303 = bitcast %union.anon* %1315 to i32*
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1317 = getelementptr inbounds %struct.GPR, %struct.GPR* %1316, i32 0, i32 9
  %1318 = getelementptr inbounds %struct.Reg, %struct.Reg* %1317, i32 0, i32 0
  %RSI.i1304 = bitcast %union.anon* %1318 to i64*
  %1319 = load i32, i32* %EDX.i1303
  %1320 = zext i32 %1319 to i64
  %1321 = load i64, i64* %PC.i1302
  %1322 = add i64 %1321, 3
  store i64 %1322, i64* %PC.i1302
  %1323 = shl i64 %1320, 32
  %1324 = ashr exact i64 %1323, 32
  store i64 %1324, i64* %RSI.i1304, align 8
  store %struct.Memory* %loadMem_40f649, %struct.Memory** %MEMORY
  %loadMem_40f64c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1326 = getelementptr inbounds %struct.GPR, %struct.GPR* %1325, i32 0, i32 33
  %1327 = getelementptr inbounds %struct.Reg, %struct.Reg* %1326, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %1327 to i64*
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1329 = getelementptr inbounds %struct.GPR, %struct.GPR* %1328, i32 0, i32 5
  %1330 = getelementptr inbounds %struct.Reg, %struct.Reg* %1329, i32 0, i32 0
  %RCX.i1299 = bitcast %union.anon* %1330 to i64*
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1332 = getelementptr inbounds %struct.GPR, %struct.GPR* %1331, i32 0, i32 7
  %1333 = getelementptr inbounds %struct.Reg, %struct.Reg* %1332, i32 0, i32 0
  %RDX.i1300 = bitcast %union.anon* %1333 to i64*
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1335 = getelementptr inbounds %struct.GPR, %struct.GPR* %1334, i32 0, i32 9
  %1336 = getelementptr inbounds %struct.Reg, %struct.Reg* %1335, i32 0, i32 0
  %RSI.i1301 = bitcast %union.anon* %1336 to i64*
  %1337 = load i64, i64* %RCX.i1299
  %1338 = load i64, i64* %RSI.i1301
  %1339 = mul i64 %1338, 2
  %1340 = add i64 %1339, %1337
  %1341 = load i64, i64* %PC.i1298
  %1342 = add i64 %1341, 4
  store i64 %1342, i64* %PC.i1298
  %1343 = inttoptr i64 %1340 to i16*
  %1344 = load i16, i16* %1343
  %1345 = zext i16 %1344 to i64
  store i64 %1345, i64* %RDX.i1300, align 8
  store %struct.Memory* %loadMem_40f64c, %struct.Memory** %MEMORY
  %loadMem_40f650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1347 = getelementptr inbounds %struct.GPR, %struct.GPR* %1346, i32 0, i32 33
  %1348 = getelementptr inbounds %struct.Reg, %struct.Reg* %1347, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %1348 to i64*
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1350 = getelementptr inbounds %struct.GPR, %struct.GPR* %1349, i32 0, i32 5
  %1351 = getelementptr inbounds %struct.Reg, %struct.Reg* %1350, i32 0, i32 0
  %RCX.i1296 = bitcast %union.anon* %1351 to i64*
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1353 = getelementptr inbounds %struct.GPR, %struct.GPR* %1352, i32 0, i32 15
  %1354 = getelementptr inbounds %struct.Reg, %struct.Reg* %1353, i32 0, i32 0
  %RBP.i1297 = bitcast %union.anon* %1354 to i64*
  %1355 = load i64, i64* %RBP.i1297
  %1356 = sub i64 %1355, 12
  %1357 = load i64, i64* %PC.i1295
  %1358 = add i64 %1357, 4
  store i64 %1358, i64* %PC.i1295
  %1359 = inttoptr i64 %1356 to i32*
  %1360 = load i32, i32* %1359
  %1361 = sext i32 %1360 to i64
  store i64 %1361, i64* %RCX.i1296, align 8
  store %struct.Memory* %loadMem_40f650, %struct.Memory** %MEMORY
  %loadMem_40f654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 33
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %1364 to i64*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 5
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %RCX.i1294 = bitcast %union.anon* %1367 to i64*
  %1368 = load i64, i64* %RCX.i1294
  %1369 = load i64, i64* %PC.i1293
  %1370 = add i64 %1369, 4
  store i64 %1370, i64* %PC.i1293
  %1371 = shl i64 %1368, 3
  %1372 = icmp slt i64 %1371, 0
  %1373 = shl i64 %1371, 1
  store i64 %1373, i64* %RCX.i1294, align 8
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1375 = zext i1 %1372 to i8
  store i8 %1375, i8* %1374, align 1
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1377 = trunc i64 %1373 to i32
  %1378 = and i32 %1377, 254
  %1379 = call i32 @llvm.ctpop.i32(i32 %1378)
  %1380 = trunc i32 %1379 to i8
  %1381 = and i8 %1380, 1
  %1382 = xor i8 %1381, 1
  store i8 %1382, i8* %1376, align 1
  %1383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1383, align 1
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1385 = icmp eq i64 %1373, 0
  %1386 = zext i1 %1385 to i8
  store i8 %1386, i8* %1384, align 1
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1388 = lshr i64 %1373, 63
  %1389 = trunc i64 %1388 to i8
  store i8 %1389, i8* %1387, align 1
  %1390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1390, align 1
  store %struct.Memory* %loadMem_40f654, %struct.Memory** %MEMORY
  %loadMem_40f658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1392 = getelementptr inbounds %struct.GPR, %struct.GPR* %1391, i32 0, i32 33
  %1393 = getelementptr inbounds %struct.Reg, %struct.Reg* %1392, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %1393 to i64*
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1395 = getelementptr inbounds %struct.GPR, %struct.GPR* %1394, i32 0, i32 1
  %1396 = getelementptr inbounds %struct.Reg, %struct.Reg* %1395, i32 0, i32 0
  %RAX.i1291 = bitcast %union.anon* %1396 to i64*
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1398 = getelementptr inbounds %struct.GPR, %struct.GPR* %1397, i32 0, i32 5
  %1399 = getelementptr inbounds %struct.Reg, %struct.Reg* %1398, i32 0, i32 0
  %RCX.i1292 = bitcast %union.anon* %1399 to i64*
  %1400 = load i64, i64* %RAX.i1291
  %1401 = load i64, i64* %RCX.i1292
  %1402 = load i64, i64* %PC.i1290
  %1403 = add i64 %1402, 3
  store i64 %1403, i64* %PC.i1290
  %1404 = add i64 %1401, %1400
  store i64 %1404, i64* %RAX.i1291, align 8
  %1405 = icmp ult i64 %1404, %1400
  %1406 = icmp ult i64 %1404, %1401
  %1407 = or i1 %1405, %1406
  %1408 = zext i1 %1407 to i8
  %1409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1408, i8* %1409, align 1
  %1410 = trunc i64 %1404 to i32
  %1411 = and i32 %1410, 255
  %1412 = call i32 @llvm.ctpop.i32(i32 %1411)
  %1413 = trunc i32 %1412 to i8
  %1414 = and i8 %1413, 1
  %1415 = xor i8 %1414, 1
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1415, i8* %1416, align 1
  %1417 = xor i64 %1401, %1400
  %1418 = xor i64 %1417, %1404
  %1419 = lshr i64 %1418, 4
  %1420 = trunc i64 %1419 to i8
  %1421 = and i8 %1420, 1
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1421, i8* %1422, align 1
  %1423 = icmp eq i64 %1404, 0
  %1424 = zext i1 %1423 to i8
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1424, i8* %1425, align 1
  %1426 = lshr i64 %1404, 63
  %1427 = trunc i64 %1426 to i8
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1427, i8* %1428, align 1
  %1429 = lshr i64 %1400, 63
  %1430 = lshr i64 %1401, 63
  %1431 = xor i64 %1426, %1429
  %1432 = xor i64 %1426, %1430
  %1433 = add i64 %1431, %1432
  %1434 = icmp eq i64 %1433, 2
  %1435 = zext i1 %1434 to i8
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1435, i8* %1436, align 1
  store %struct.Memory* %loadMem_40f658, %struct.Memory** %MEMORY
  %loadMem_40f65b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1438 = getelementptr inbounds %struct.GPR, %struct.GPR* %1437, i32 0, i32 33
  %1439 = getelementptr inbounds %struct.Reg, %struct.Reg* %1438, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %1439 to i64*
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1441 = getelementptr inbounds %struct.GPR, %struct.GPR* %1440, i32 0, i32 5
  %1442 = getelementptr inbounds %struct.Reg, %struct.Reg* %1441, i32 0, i32 0
  %RCX.i1288 = bitcast %union.anon* %1442 to i64*
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1444 = getelementptr inbounds %struct.GPR, %struct.GPR* %1443, i32 0, i32 15
  %1445 = getelementptr inbounds %struct.Reg, %struct.Reg* %1444, i32 0, i32 0
  %RBP.i1289 = bitcast %union.anon* %1445 to i64*
  %1446 = load i64, i64* %RBP.i1289
  %1447 = sub i64 %1446, 16
  %1448 = load i64, i64* %PC.i1287
  %1449 = add i64 %1448, 4
  store i64 %1449, i64* %PC.i1287
  %1450 = inttoptr i64 %1447 to i32*
  %1451 = load i32, i32* %1450
  %1452 = sext i32 %1451 to i64
  store i64 %1452, i64* %RCX.i1288, align 8
  store %struct.Memory* %loadMem_40f65b, %struct.Memory** %MEMORY
  %loadMem_40f65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1454 = getelementptr inbounds %struct.GPR, %struct.GPR* %1453, i32 0, i32 33
  %1455 = getelementptr inbounds %struct.Reg, %struct.Reg* %1454, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %1455 to i64*
  %1456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1457 = getelementptr inbounds %struct.GPR, %struct.GPR* %1456, i32 0, i32 7
  %1458 = getelementptr inbounds %struct.Reg, %struct.Reg* %1457, i32 0, i32 0
  %EDX.i1284 = bitcast %union.anon* %1458 to i32*
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1460 = getelementptr inbounds %struct.GPR, %struct.GPR* %1459, i32 0, i32 1
  %1461 = getelementptr inbounds %struct.Reg, %struct.Reg* %1460, i32 0, i32 0
  %RAX.i1285 = bitcast %union.anon* %1461 to i64*
  %1462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1463 = getelementptr inbounds %struct.GPR, %struct.GPR* %1462, i32 0, i32 5
  %1464 = getelementptr inbounds %struct.Reg, %struct.Reg* %1463, i32 0, i32 0
  %RCX.i1286 = bitcast %union.anon* %1464 to i64*
  %1465 = load i64, i64* %RAX.i1285
  %1466 = load i64, i64* %RCX.i1286
  %1467 = mul i64 %1466, 4
  %1468 = add i64 %1467, %1465
  %1469 = load i32, i32* %EDX.i1284
  %1470 = zext i32 %1469 to i64
  %1471 = load i64, i64* %PC.i1283
  %1472 = add i64 %1471, 3
  store i64 %1472, i64* %PC.i1283
  %1473 = inttoptr i64 %1468 to i32*
  store i32 %1469, i32* %1473
  store %struct.Memory* %loadMem_40f65f, %struct.Memory** %MEMORY
  %loadMem_40f662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1475 = getelementptr inbounds %struct.GPR, %struct.GPR* %1474, i32 0, i32 33
  %1476 = getelementptr inbounds %struct.Reg, %struct.Reg* %1475, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %1476 to i64*
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 1
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %RAX.i1281 = bitcast %union.anon* %1479 to i64*
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1481 = getelementptr inbounds %struct.GPR, %struct.GPR* %1480, i32 0, i32 15
  %1482 = getelementptr inbounds %struct.Reg, %struct.Reg* %1481, i32 0, i32 0
  %RBP.i1282 = bitcast %union.anon* %1482 to i64*
  %1483 = load i64, i64* %RBP.i1282
  %1484 = sub i64 %1483, 12
  %1485 = load i64, i64* %PC.i1280
  %1486 = add i64 %1485, 3
  store i64 %1486, i64* %PC.i1280
  %1487 = inttoptr i64 %1484 to i32*
  %1488 = load i32, i32* %1487
  %1489 = zext i32 %1488 to i64
  store i64 %1489, i64* %RAX.i1281, align 8
  store %struct.Memory* %loadMem_40f662, %struct.Memory** %MEMORY
  %loadMem_40f665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1491 = getelementptr inbounds %struct.GPR, %struct.GPR* %1490, i32 0, i32 33
  %1492 = getelementptr inbounds %struct.Reg, %struct.Reg* %1491, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %1492 to i64*
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1494 = getelementptr inbounds %struct.GPR, %struct.GPR* %1493, i32 0, i32 1
  %1495 = getelementptr inbounds %struct.Reg, %struct.Reg* %1494, i32 0, i32 0
  %RAX.i1279 = bitcast %union.anon* %1495 to i64*
  %1496 = load i64, i64* %RAX.i1279
  %1497 = load i64, i64* %PC.i1278
  %1498 = add i64 %1497, 3
  store i64 %1498, i64* %PC.i1278
  %1499 = trunc i64 %1496 to i32
  %1500 = add i32 1, %1499
  %1501 = zext i32 %1500 to i64
  store i64 %1501, i64* %RAX.i1279, align 8
  %1502 = icmp ult i32 %1500, %1499
  %1503 = icmp ult i32 %1500, 1
  %1504 = or i1 %1502, %1503
  %1505 = zext i1 %1504 to i8
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1505, i8* %1506, align 1
  %1507 = and i32 %1500, 255
  %1508 = call i32 @llvm.ctpop.i32(i32 %1507)
  %1509 = trunc i32 %1508 to i8
  %1510 = and i8 %1509, 1
  %1511 = xor i8 %1510, 1
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1511, i8* %1512, align 1
  %1513 = xor i64 1, %1496
  %1514 = trunc i64 %1513 to i32
  %1515 = xor i32 %1514, %1500
  %1516 = lshr i32 %1515, 4
  %1517 = trunc i32 %1516 to i8
  %1518 = and i8 %1517, 1
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1518, i8* %1519, align 1
  %1520 = icmp eq i32 %1500, 0
  %1521 = zext i1 %1520 to i8
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1521, i8* %1522, align 1
  %1523 = lshr i32 %1500, 31
  %1524 = trunc i32 %1523 to i8
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1524, i8* %1525, align 1
  %1526 = lshr i32 %1499, 31
  %1527 = xor i32 %1523, %1526
  %1528 = add i32 %1527, %1523
  %1529 = icmp eq i32 %1528, 2
  %1530 = zext i1 %1529 to i8
  %1531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1530, i8* %1531, align 1
  store %struct.Memory* %loadMem_40f665, %struct.Memory** %MEMORY
  %loadMem_40f668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1533 = getelementptr inbounds %struct.GPR, %struct.GPR* %1532, i32 0, i32 33
  %1534 = getelementptr inbounds %struct.Reg, %struct.Reg* %1533, i32 0, i32 0
  %PC.i1275 = bitcast %union.anon* %1534 to i64*
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1536 = getelementptr inbounds %struct.GPR, %struct.GPR* %1535, i32 0, i32 1
  %1537 = getelementptr inbounds %struct.Reg, %struct.Reg* %1536, i32 0, i32 0
  %EAX.i1276 = bitcast %union.anon* %1537 to i32*
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1539 = getelementptr inbounds %struct.GPR, %struct.GPR* %1538, i32 0, i32 15
  %1540 = getelementptr inbounds %struct.Reg, %struct.Reg* %1539, i32 0, i32 0
  %RBP.i1277 = bitcast %union.anon* %1540 to i64*
  %1541 = load i64, i64* %RBP.i1277
  %1542 = sub i64 %1541, 12
  %1543 = load i32, i32* %EAX.i1276
  %1544 = zext i32 %1543 to i64
  %1545 = load i64, i64* %PC.i1275
  %1546 = add i64 %1545, 3
  store i64 %1546, i64* %PC.i1275
  %1547 = inttoptr i64 %1542 to i32*
  store i32 %1543, i32* %1547
  store %struct.Memory* %loadMem_40f668, %struct.Memory** %MEMORY
  %loadMem_40f66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 33
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %1550 to i64*
  %1551 = load i64, i64* %PC.i1274
  %1552 = add i64 %1551, -88
  %1553 = load i64, i64* %PC.i1274
  %1554 = add i64 %1553, 5
  store i64 %1554, i64* %PC.i1274
  %1555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1552, i64* %1555, align 8
  store %struct.Memory* %loadMem_40f66b, %struct.Memory** %MEMORY
  br label %block_.L_40f613

block_.L_40f670:                                  ; preds = %block_.L_40f613
  %loadMem_40f670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 33
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %1558 to i64*
  %1559 = load i64, i64* %PC.i1273
  %1560 = add i64 %1559, 5
  %1561 = load i64, i64* %PC.i1273
  %1562 = add i64 %1561, 5
  store i64 %1562, i64* %PC.i1273
  %1563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1560, i64* %1563, align 8
  store %struct.Memory* %loadMem_40f670, %struct.Memory** %MEMORY
  br label %block_.L_40f675

block_.L_40f675:                                  ; preds = %block_.L_40f670
  %loadMem_40f675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1565 = getelementptr inbounds %struct.GPR, %struct.GPR* %1564, i32 0, i32 33
  %1566 = getelementptr inbounds %struct.Reg, %struct.Reg* %1565, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %1566 to i64*
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1568 = getelementptr inbounds %struct.GPR, %struct.GPR* %1567, i32 0, i32 1
  %1569 = getelementptr inbounds %struct.Reg, %struct.Reg* %1568, i32 0, i32 0
  %RAX.i1271 = bitcast %union.anon* %1569 to i64*
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1571 = getelementptr inbounds %struct.GPR, %struct.GPR* %1570, i32 0, i32 15
  %1572 = getelementptr inbounds %struct.Reg, %struct.Reg* %1571, i32 0, i32 0
  %RBP.i1272 = bitcast %union.anon* %1572 to i64*
  %1573 = load i64, i64* %RBP.i1272
  %1574 = sub i64 %1573, 16
  %1575 = load i64, i64* %PC.i1270
  %1576 = add i64 %1575, 3
  store i64 %1576, i64* %PC.i1270
  %1577 = inttoptr i64 %1574 to i32*
  %1578 = load i32, i32* %1577
  %1579 = zext i32 %1578 to i64
  store i64 %1579, i64* %RAX.i1271, align 8
  store %struct.Memory* %loadMem_40f675, %struct.Memory** %MEMORY
  %loadMem_40f678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1581 = getelementptr inbounds %struct.GPR, %struct.GPR* %1580, i32 0, i32 33
  %1582 = getelementptr inbounds %struct.Reg, %struct.Reg* %1581, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %1582 to i64*
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1584 = getelementptr inbounds %struct.GPR, %struct.GPR* %1583, i32 0, i32 1
  %1585 = getelementptr inbounds %struct.Reg, %struct.Reg* %1584, i32 0, i32 0
  %RAX.i1269 = bitcast %union.anon* %1585 to i64*
  %1586 = load i64, i64* %RAX.i1269
  %1587 = load i64, i64* %PC.i1268
  %1588 = add i64 %1587, 3
  store i64 %1588, i64* %PC.i1268
  %1589 = trunc i64 %1586 to i32
  %1590 = add i32 1, %1589
  %1591 = zext i32 %1590 to i64
  store i64 %1591, i64* %RAX.i1269, align 8
  %1592 = icmp ult i32 %1590, %1589
  %1593 = icmp ult i32 %1590, 1
  %1594 = or i1 %1592, %1593
  %1595 = zext i1 %1594 to i8
  %1596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1595, i8* %1596, align 1
  %1597 = and i32 %1590, 255
  %1598 = call i32 @llvm.ctpop.i32(i32 %1597)
  %1599 = trunc i32 %1598 to i8
  %1600 = and i8 %1599, 1
  %1601 = xor i8 %1600, 1
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1601, i8* %1602, align 1
  %1603 = xor i64 1, %1586
  %1604 = trunc i64 %1603 to i32
  %1605 = xor i32 %1604, %1590
  %1606 = lshr i32 %1605, 4
  %1607 = trunc i32 %1606 to i8
  %1608 = and i8 %1607, 1
  %1609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1608, i8* %1609, align 1
  %1610 = icmp eq i32 %1590, 0
  %1611 = zext i1 %1610 to i8
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1611, i8* %1612, align 1
  %1613 = lshr i32 %1590, 31
  %1614 = trunc i32 %1613 to i8
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1614, i8* %1615, align 1
  %1616 = lshr i32 %1589, 31
  %1617 = xor i32 %1613, %1616
  %1618 = add i32 %1617, %1613
  %1619 = icmp eq i32 %1618, 2
  %1620 = zext i1 %1619 to i8
  %1621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1620, i8* %1621, align 1
  store %struct.Memory* %loadMem_40f678, %struct.Memory** %MEMORY
  %loadMem_40f67b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1623 = getelementptr inbounds %struct.GPR, %struct.GPR* %1622, i32 0, i32 33
  %1624 = getelementptr inbounds %struct.Reg, %struct.Reg* %1623, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %1624 to i64*
  %1625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1626 = getelementptr inbounds %struct.GPR, %struct.GPR* %1625, i32 0, i32 1
  %1627 = getelementptr inbounds %struct.Reg, %struct.Reg* %1626, i32 0, i32 0
  %EAX.i1266 = bitcast %union.anon* %1627 to i32*
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1629 = getelementptr inbounds %struct.GPR, %struct.GPR* %1628, i32 0, i32 15
  %1630 = getelementptr inbounds %struct.Reg, %struct.Reg* %1629, i32 0, i32 0
  %RBP.i1267 = bitcast %union.anon* %1630 to i64*
  %1631 = load i64, i64* %RBP.i1267
  %1632 = sub i64 %1631, 16
  %1633 = load i32, i32* %EAX.i1266
  %1634 = zext i32 %1633 to i64
  %1635 = load i64, i64* %PC.i1265
  %1636 = add i64 %1635, 3
  store i64 %1636, i64* %PC.i1265
  %1637 = inttoptr i64 %1632 to i32*
  store i32 %1633, i32* %1637
  store %struct.Memory* %loadMem_40f67b, %struct.Memory** %MEMORY
  %loadMem_40f67e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1639 = getelementptr inbounds %struct.GPR, %struct.GPR* %1638, i32 0, i32 33
  %1640 = getelementptr inbounds %struct.Reg, %struct.Reg* %1639, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %1640 to i64*
  %1641 = load i64, i64* %PC.i1264
  %1642 = add i64 %1641, -124
  %1643 = load i64, i64* %PC.i1264
  %1644 = add i64 %1643, 5
  store i64 %1644, i64* %PC.i1264
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1642, i64* %1645, align 8
  store %struct.Memory* %loadMem_40f67e, %struct.Memory** %MEMORY
  br label %block_.L_40f602

block_.L_40f683:                                  ; preds = %block_.L_40f602
  %loadMem_40f683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1647 = getelementptr inbounds %struct.GPR, %struct.GPR* %1646, i32 0, i32 33
  %1648 = getelementptr inbounds %struct.Reg, %struct.Reg* %1647, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %1648 to i64*
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1650 = getelementptr inbounds %struct.GPR, %struct.GPR* %1649, i32 0, i32 15
  %1651 = getelementptr inbounds %struct.Reg, %struct.Reg* %1650, i32 0, i32 0
  %RBP.i1263 = bitcast %union.anon* %1651 to i64*
  %1652 = load i64, i64* %RBP.i1263
  %1653 = sub i64 %1652, 16
  %1654 = load i64, i64* %PC.i1262
  %1655 = add i64 %1654, 7
  store i64 %1655, i64* %PC.i1262
  %1656 = inttoptr i64 %1653 to i32*
  store i32 0, i32* %1656
  store %struct.Memory* %loadMem_40f683, %struct.Memory** %MEMORY
  br label %block_.L_40f68a

block_.L_40f68a:                                  ; preds = %block_.L_40f726, %block_.L_40f683
  %loadMem_40f68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1658 = getelementptr inbounds %struct.GPR, %struct.GPR* %1657, i32 0, i32 33
  %1659 = getelementptr inbounds %struct.Reg, %struct.Reg* %1658, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %1659 to i64*
  %1660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1661 = getelementptr inbounds %struct.GPR, %struct.GPR* %1660, i32 0, i32 15
  %1662 = getelementptr inbounds %struct.Reg, %struct.Reg* %1661, i32 0, i32 0
  %RBP.i1261 = bitcast %union.anon* %1662 to i64*
  %1663 = load i64, i64* %RBP.i1261
  %1664 = sub i64 %1663, 16
  %1665 = load i64, i64* %PC.i1260
  %1666 = add i64 %1665, 4
  store i64 %1666, i64* %PC.i1260
  %1667 = inttoptr i64 %1664 to i32*
  %1668 = load i32, i32* %1667
  %1669 = sub i32 %1668, 4
  %1670 = icmp ult i32 %1668, 4
  %1671 = zext i1 %1670 to i8
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1671, i8* %1672, align 1
  %1673 = and i32 %1669, 255
  %1674 = call i32 @llvm.ctpop.i32(i32 %1673)
  %1675 = trunc i32 %1674 to i8
  %1676 = and i8 %1675, 1
  %1677 = xor i8 %1676, 1
  %1678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1677, i8* %1678, align 1
  %1679 = xor i32 %1668, 4
  %1680 = xor i32 %1679, %1669
  %1681 = lshr i32 %1680, 4
  %1682 = trunc i32 %1681 to i8
  %1683 = and i8 %1682, 1
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1683, i8* %1684, align 1
  %1685 = icmp eq i32 %1669, 0
  %1686 = zext i1 %1685 to i8
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1686, i8* %1687, align 1
  %1688 = lshr i32 %1669, 31
  %1689 = trunc i32 %1688 to i8
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1689, i8* %1690, align 1
  %1691 = lshr i32 %1668, 31
  %1692 = xor i32 %1688, %1691
  %1693 = add i32 %1692, %1691
  %1694 = icmp eq i32 %1693, 2
  %1695 = zext i1 %1694 to i8
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1695, i8* %1696, align 1
  store %struct.Memory* %loadMem_40f68a, %struct.Memory** %MEMORY
  %loadMem_40f68e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1698 = getelementptr inbounds %struct.GPR, %struct.GPR* %1697, i32 0, i32 33
  %1699 = getelementptr inbounds %struct.Reg, %struct.Reg* %1698, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %1699 to i64*
  %1700 = load i64, i64* %PC.i1259
  %1701 = add i64 %1700, 233
  %1702 = load i64, i64* %PC.i1259
  %1703 = add i64 %1702, 6
  %1704 = load i64, i64* %PC.i1259
  %1705 = add i64 %1704, 6
  store i64 %1705, i64* %PC.i1259
  %1706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1707 = load i8, i8* %1706, align 1
  %1708 = icmp ne i8 %1707, 0
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1710 = load i8, i8* %1709, align 1
  %1711 = icmp ne i8 %1710, 0
  %1712 = xor i1 %1708, %1711
  %1713 = xor i1 %1712, true
  %1714 = zext i1 %1713 to i8
  store i8 %1714, i8* %BRANCH_TAKEN, align 1
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1716 = select i1 %1712, i64 %1703, i64 %1701
  store i64 %1716, i64* %1715, align 8
  store %struct.Memory* %loadMem_40f68e, %struct.Memory** %MEMORY
  %loadBr_40f68e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f68e = icmp eq i8 %loadBr_40f68e, 1
  br i1 %cmpBr_40f68e, label %block_.L_40f777, label %block_40f694

block_40f694:                                     ; preds = %block_.L_40f68a
  %loadMem_40f694 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1718 = getelementptr inbounds %struct.GPR, %struct.GPR* %1717, i32 0, i32 33
  %1719 = getelementptr inbounds %struct.Reg, %struct.Reg* %1718, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %1719 to i64*
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1721 = getelementptr inbounds %struct.GPR, %struct.GPR* %1720, i32 0, i32 15
  %1722 = getelementptr inbounds %struct.Reg, %struct.Reg* %1721, i32 0, i32 0
  %RBP.i1258 = bitcast %union.anon* %1722 to i64*
  %1723 = load i64, i64* %RBP.i1258
  %1724 = sub i64 %1723, 12
  %1725 = load i64, i64* %PC.i1257
  %1726 = add i64 %1725, 7
  store i64 %1726, i64* %PC.i1257
  %1727 = inttoptr i64 %1724 to i32*
  store i32 0, i32* %1727
  store %struct.Memory* %loadMem_40f694, %struct.Memory** %MEMORY
  br label %block_.L_40f69b

block_.L_40f69b:                                  ; preds = %block_40f6a5, %block_40f694
  %loadMem_40f69b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1729 = getelementptr inbounds %struct.GPR, %struct.GPR* %1728, i32 0, i32 33
  %1730 = getelementptr inbounds %struct.Reg, %struct.Reg* %1729, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %1730 to i64*
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1732 = getelementptr inbounds %struct.GPR, %struct.GPR* %1731, i32 0, i32 15
  %1733 = getelementptr inbounds %struct.Reg, %struct.Reg* %1732, i32 0, i32 0
  %RBP.i1256 = bitcast %union.anon* %1733 to i64*
  %1734 = load i64, i64* %RBP.i1256
  %1735 = sub i64 %1734, 12
  %1736 = load i64, i64* %PC.i1255
  %1737 = add i64 %1736, 4
  store i64 %1737, i64* %PC.i1255
  %1738 = inttoptr i64 %1735 to i32*
  %1739 = load i32, i32* %1738
  %1740 = sub i32 %1739, 2
  %1741 = icmp ult i32 %1739, 2
  %1742 = zext i1 %1741 to i8
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1742, i8* %1743, align 1
  %1744 = and i32 %1740, 255
  %1745 = call i32 @llvm.ctpop.i32(i32 %1744)
  %1746 = trunc i32 %1745 to i8
  %1747 = and i8 %1746, 1
  %1748 = xor i8 %1747, 1
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1748, i8* %1749, align 1
  %1750 = xor i32 %1739, 2
  %1751 = xor i32 %1750, %1740
  %1752 = lshr i32 %1751, 4
  %1753 = trunc i32 %1752 to i8
  %1754 = and i8 %1753, 1
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1754, i8* %1755, align 1
  %1756 = icmp eq i32 %1740, 0
  %1757 = zext i1 %1756 to i8
  %1758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1757, i8* %1758, align 1
  %1759 = lshr i32 %1740, 31
  %1760 = trunc i32 %1759 to i8
  %1761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1760, i8* %1761, align 1
  %1762 = lshr i32 %1739, 31
  %1763 = xor i32 %1759, %1762
  %1764 = add i32 %1763, %1762
  %1765 = icmp eq i32 %1764, 2
  %1766 = zext i1 %1765 to i8
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1766, i8* %1767, align 1
  store %struct.Memory* %loadMem_40f69b, %struct.Memory** %MEMORY
  %loadMem_40f69f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1769 = getelementptr inbounds %struct.GPR, %struct.GPR* %1768, i32 0, i32 33
  %1770 = getelementptr inbounds %struct.Reg, %struct.Reg* %1769, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %1770 to i64*
  %1771 = load i64, i64* %PC.i1254
  %1772 = add i64 %1771, 135
  %1773 = load i64, i64* %PC.i1254
  %1774 = add i64 %1773, 6
  %1775 = load i64, i64* %PC.i1254
  %1776 = add i64 %1775, 6
  store i64 %1776, i64* %PC.i1254
  %1777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1778 = load i8, i8* %1777, align 1
  %1779 = icmp ne i8 %1778, 0
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1781 = load i8, i8* %1780, align 1
  %1782 = icmp ne i8 %1781, 0
  %1783 = xor i1 %1779, %1782
  %1784 = xor i1 %1783, true
  %1785 = zext i1 %1784 to i8
  store i8 %1785, i8* %BRANCH_TAKEN, align 1
  %1786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1787 = select i1 %1783, i64 %1774, i64 %1772
  store i64 %1787, i64* %1786, align 8
  store %struct.Memory* %loadMem_40f69f, %struct.Memory** %MEMORY
  %loadBr_40f69f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f69f = icmp eq i8 %loadBr_40f69f, 1
  br i1 %cmpBr_40f69f, label %block_.L_40f726, label %block_40f6a5

block_40f6a5:                                     ; preds = %block_.L_40f69b
  %loadMem_40f6a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1789 = getelementptr inbounds %struct.GPR, %struct.GPR* %1788, i32 0, i32 33
  %1790 = getelementptr inbounds %struct.Reg, %struct.Reg* %1789, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %1790 to i64*
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 1
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %RAX.i1252 = bitcast %union.anon* %1793 to i64*
  %1794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1795 = getelementptr inbounds %struct.GPR, %struct.GPR* %1794, i32 0, i32 15
  %1796 = getelementptr inbounds %struct.Reg, %struct.Reg* %1795, i32 0, i32 0
  %RBP.i1253 = bitcast %union.anon* %1796 to i64*
  %1797 = load i64, i64* %RBP.i1253
  %1798 = sub i64 %1797, 144
  %1799 = load i64, i64* %PC.i1251
  %1800 = add i64 %1799, 7
  store i64 %1800, i64* %PC.i1251
  store i64 %1798, i64* %RAX.i1252, align 8
  store %struct.Memory* %loadMem_40f6a5, %struct.Memory** %MEMORY
  %loadMem_40f6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1802 = getelementptr inbounds %struct.GPR, %struct.GPR* %1801, i32 0, i32 33
  %1803 = getelementptr inbounds %struct.Reg, %struct.Reg* %1802, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %1803 to i64*
  %1804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1805 = getelementptr inbounds %struct.GPR, %struct.GPR* %1804, i32 0, i32 5
  %1806 = getelementptr inbounds %struct.Reg, %struct.Reg* %1805, i32 0, i32 0
  %RCX.i1250 = bitcast %union.anon* %1806 to i64*
  %1807 = load i64, i64* %PC.i1249
  %1808 = add i64 %1807, 5
  store i64 %1808, i64* %PC.i1249
  store i64 3, i64* %RCX.i1250, align 8
  store %struct.Memory* %loadMem_40f6ac, %struct.Memory** %MEMORY
  %loadMem_40f6b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1810 = getelementptr inbounds %struct.GPR, %struct.GPR* %1809, i32 0, i32 33
  %1811 = getelementptr inbounds %struct.Reg, %struct.Reg* %1810, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %1811 to i64*
  %1812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1813 = getelementptr inbounds %struct.GPR, %struct.GPR* %1812, i32 0, i32 5
  %1814 = getelementptr inbounds %struct.Reg, %struct.Reg* %1813, i32 0, i32 0
  %RCX.i1247 = bitcast %union.anon* %1814 to i64*
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1816 = getelementptr inbounds %struct.GPR, %struct.GPR* %1815, i32 0, i32 15
  %1817 = getelementptr inbounds %struct.Reg, %struct.Reg* %1816, i32 0, i32 0
  %RBP.i1248 = bitcast %union.anon* %1817 to i64*
  %1818 = load i64, i64* %RCX.i1247
  %1819 = load i64, i64* %RBP.i1248
  %1820 = sub i64 %1819, 12
  %1821 = load i64, i64* %PC.i1246
  %1822 = add i64 %1821, 3
  store i64 %1822, i64* %PC.i1246
  %1823 = trunc i64 %1818 to i32
  %1824 = inttoptr i64 %1820 to i32*
  %1825 = load i32, i32* %1824
  %1826 = sub i32 %1823, %1825
  %1827 = zext i32 %1826 to i64
  store i64 %1827, i64* %RCX.i1247, align 8
  %1828 = icmp ult i32 %1823, %1825
  %1829 = zext i1 %1828 to i8
  %1830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1829, i8* %1830, align 1
  %1831 = and i32 %1826, 255
  %1832 = call i32 @llvm.ctpop.i32(i32 %1831)
  %1833 = trunc i32 %1832 to i8
  %1834 = and i8 %1833, 1
  %1835 = xor i8 %1834, 1
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1835, i8* %1836, align 1
  %1837 = xor i32 %1825, %1823
  %1838 = xor i32 %1837, %1826
  %1839 = lshr i32 %1838, 4
  %1840 = trunc i32 %1839 to i8
  %1841 = and i8 %1840, 1
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1841, i8* %1842, align 1
  %1843 = icmp eq i32 %1826, 0
  %1844 = zext i1 %1843 to i8
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1844, i8* %1845, align 1
  %1846 = lshr i32 %1826, 31
  %1847 = trunc i32 %1846 to i8
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1847, i8* %1848, align 1
  %1849 = lshr i32 %1823, 31
  %1850 = lshr i32 %1825, 31
  %1851 = xor i32 %1850, %1849
  %1852 = xor i32 %1846, %1849
  %1853 = add i32 %1852, %1851
  %1854 = icmp eq i32 %1853, 2
  %1855 = zext i1 %1854 to i8
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1855, i8* %1856, align 1
  store %struct.Memory* %loadMem_40f6b1, %struct.Memory** %MEMORY
  %loadMem_40f6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1858 = getelementptr inbounds %struct.GPR, %struct.GPR* %1857, i32 0, i32 33
  %1859 = getelementptr inbounds %struct.Reg, %struct.Reg* %1858, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %1859 to i64*
  %1860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1861 = getelementptr inbounds %struct.GPR, %struct.GPR* %1860, i32 0, i32 5
  %1862 = getelementptr inbounds %struct.Reg, %struct.Reg* %1861, i32 0, i32 0
  %ECX.i1244 = bitcast %union.anon* %1862 to i32*
  %1863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1864 = getelementptr inbounds %struct.GPR, %struct.GPR* %1863, i32 0, i32 15
  %1865 = getelementptr inbounds %struct.Reg, %struct.Reg* %1864, i32 0, i32 0
  %RBP.i1245 = bitcast %union.anon* %1865 to i64*
  %1866 = load i64, i64* %RBP.i1245
  %1867 = sub i64 %1866, 20
  %1868 = load i32, i32* %ECX.i1244
  %1869 = zext i32 %1868 to i64
  %1870 = load i64, i64* %PC.i1243
  %1871 = add i64 %1870, 3
  store i64 %1871, i64* %PC.i1243
  %1872 = inttoptr i64 %1867 to i32*
  store i32 %1868, i32* %1872
  store %struct.Memory* %loadMem_40f6b4, %struct.Memory** %MEMORY
  %loadMem_40f6b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1874 = getelementptr inbounds %struct.GPR, %struct.GPR* %1873, i32 0, i32 33
  %1875 = getelementptr inbounds %struct.Reg, %struct.Reg* %1874, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %1875 to i64*
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1877 = getelementptr inbounds %struct.GPR, %struct.GPR* %1876, i32 0, i32 7
  %1878 = getelementptr inbounds %struct.Reg, %struct.Reg* %1877, i32 0, i32 0
  %RDX.i1241 = bitcast %union.anon* %1878 to i64*
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1880 = getelementptr inbounds %struct.GPR, %struct.GPR* %1879, i32 0, i32 15
  %1881 = getelementptr inbounds %struct.Reg, %struct.Reg* %1880, i32 0, i32 0
  %RBP.i1242 = bitcast %union.anon* %1881 to i64*
  %1882 = load i64, i64* %RBP.i1242
  %1883 = sub i64 %1882, 12
  %1884 = load i64, i64* %PC.i1240
  %1885 = add i64 %1884, 4
  store i64 %1885, i64* %PC.i1240
  %1886 = inttoptr i64 %1883 to i32*
  %1887 = load i32, i32* %1886
  %1888 = sext i32 %1887 to i64
  store i64 %1888, i64* %RDX.i1241, align 8
  store %struct.Memory* %loadMem_40f6b7, %struct.Memory** %MEMORY
  %loadMem_40f6bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1890 = getelementptr inbounds %struct.GPR, %struct.GPR* %1889, i32 0, i32 33
  %1891 = getelementptr inbounds %struct.Reg, %struct.Reg* %1890, i32 0, i32 0
  %PC.i1238 = bitcast %union.anon* %1891 to i64*
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1893 = getelementptr inbounds %struct.GPR, %struct.GPR* %1892, i32 0, i32 7
  %1894 = getelementptr inbounds %struct.Reg, %struct.Reg* %1893, i32 0, i32 0
  %RDX.i1239 = bitcast %union.anon* %1894 to i64*
  %1895 = load i64, i64* %RDX.i1239
  %1896 = load i64, i64* %PC.i1238
  %1897 = add i64 %1896, 4
  store i64 %1897, i64* %PC.i1238
  %1898 = shl i64 %1895, 3
  %1899 = icmp slt i64 %1898, 0
  %1900 = shl i64 %1898, 1
  store i64 %1900, i64* %RDX.i1239, align 8
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1902 = zext i1 %1899 to i8
  store i8 %1902, i8* %1901, align 1
  %1903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1904 = trunc i64 %1900 to i32
  %1905 = and i32 %1904, 254
  %1906 = call i32 @llvm.ctpop.i32(i32 %1905)
  %1907 = trunc i32 %1906 to i8
  %1908 = and i8 %1907, 1
  %1909 = xor i8 %1908, 1
  store i8 %1909, i8* %1903, align 1
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1910, align 1
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1912 = icmp eq i64 %1900, 0
  %1913 = zext i1 %1912 to i8
  store i8 %1913, i8* %1911, align 1
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1915 = lshr i64 %1900, 63
  %1916 = trunc i64 %1915 to i8
  store i8 %1916, i8* %1914, align 1
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1917, align 1
  store %struct.Memory* %loadMem_40f6bb, %struct.Memory** %MEMORY
  %loadMem_40f6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1919 = getelementptr inbounds %struct.GPR, %struct.GPR* %1918, i32 0, i32 33
  %1920 = getelementptr inbounds %struct.Reg, %struct.Reg* %1919, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %1920 to i64*
  %1921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1922 = getelementptr inbounds %struct.GPR, %struct.GPR* %1921, i32 0, i32 1
  %1923 = getelementptr inbounds %struct.Reg, %struct.Reg* %1922, i32 0, i32 0
  %RAX.i1236 = bitcast %union.anon* %1923 to i64*
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1925 = getelementptr inbounds %struct.GPR, %struct.GPR* %1924, i32 0, i32 9
  %1926 = getelementptr inbounds %struct.Reg, %struct.Reg* %1925, i32 0, i32 0
  %RSI.i1237 = bitcast %union.anon* %1926 to i64*
  %1927 = load i64, i64* %RAX.i1236
  %1928 = load i64, i64* %PC.i1235
  %1929 = add i64 %1928, 3
  store i64 %1929, i64* %PC.i1235
  store i64 %1927, i64* %RSI.i1237, align 8
  store %struct.Memory* %loadMem_40f6bf, %struct.Memory** %MEMORY
  %loadMem_40f6c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1931 = getelementptr inbounds %struct.GPR, %struct.GPR* %1930, i32 0, i32 33
  %1932 = getelementptr inbounds %struct.Reg, %struct.Reg* %1931, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %1932 to i64*
  %1933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1934 = getelementptr inbounds %struct.GPR, %struct.GPR* %1933, i32 0, i32 7
  %1935 = getelementptr inbounds %struct.Reg, %struct.Reg* %1934, i32 0, i32 0
  %RDX.i1233 = bitcast %union.anon* %1935 to i64*
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1937 = getelementptr inbounds %struct.GPR, %struct.GPR* %1936, i32 0, i32 9
  %1938 = getelementptr inbounds %struct.Reg, %struct.Reg* %1937, i32 0, i32 0
  %RSI.i1234 = bitcast %union.anon* %1938 to i64*
  %1939 = load i64, i64* %RSI.i1234
  %1940 = load i64, i64* %RDX.i1233
  %1941 = load i64, i64* %PC.i1232
  %1942 = add i64 %1941, 3
  store i64 %1942, i64* %PC.i1232
  %1943 = add i64 %1940, %1939
  store i64 %1943, i64* %RSI.i1234, align 8
  %1944 = icmp ult i64 %1943, %1939
  %1945 = icmp ult i64 %1943, %1940
  %1946 = or i1 %1944, %1945
  %1947 = zext i1 %1946 to i8
  %1948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1947, i8* %1948, align 1
  %1949 = trunc i64 %1943 to i32
  %1950 = and i32 %1949, 255
  %1951 = call i32 @llvm.ctpop.i32(i32 %1950)
  %1952 = trunc i32 %1951 to i8
  %1953 = and i8 %1952, 1
  %1954 = xor i8 %1953, 1
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1954, i8* %1955, align 1
  %1956 = xor i64 %1940, %1939
  %1957 = xor i64 %1956, %1943
  %1958 = lshr i64 %1957, 4
  %1959 = trunc i64 %1958 to i8
  %1960 = and i8 %1959, 1
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1960, i8* %1961, align 1
  %1962 = icmp eq i64 %1943, 0
  %1963 = zext i1 %1962 to i8
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1963, i8* %1964, align 1
  %1965 = lshr i64 %1943, 63
  %1966 = trunc i64 %1965 to i8
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1966, i8* %1967, align 1
  %1968 = lshr i64 %1939, 63
  %1969 = lshr i64 %1940, 63
  %1970 = xor i64 %1965, %1968
  %1971 = xor i64 %1965, %1969
  %1972 = add i64 %1970, %1971
  %1973 = icmp eq i64 %1972, 2
  %1974 = zext i1 %1973 to i8
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1974, i8* %1975, align 1
  store %struct.Memory* %loadMem_40f6c2, %struct.Memory** %MEMORY
  %loadMem_40f6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1977 = getelementptr inbounds %struct.GPR, %struct.GPR* %1976, i32 0, i32 33
  %1978 = getelementptr inbounds %struct.Reg, %struct.Reg* %1977, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %1978 to i64*
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1980 = getelementptr inbounds %struct.GPR, %struct.GPR* %1979, i32 0, i32 7
  %1981 = getelementptr inbounds %struct.Reg, %struct.Reg* %1980, i32 0, i32 0
  %RDX.i1230 = bitcast %union.anon* %1981 to i64*
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1983 = getelementptr inbounds %struct.GPR, %struct.GPR* %1982, i32 0, i32 15
  %1984 = getelementptr inbounds %struct.Reg, %struct.Reg* %1983, i32 0, i32 0
  %RBP.i1231 = bitcast %union.anon* %1984 to i64*
  %1985 = load i64, i64* %RBP.i1231
  %1986 = sub i64 %1985, 16
  %1987 = load i64, i64* %PC.i1229
  %1988 = add i64 %1987, 4
  store i64 %1988, i64* %PC.i1229
  %1989 = inttoptr i64 %1986 to i32*
  %1990 = load i32, i32* %1989
  %1991 = sext i32 %1990 to i64
  store i64 %1991, i64* %RDX.i1230, align 8
  store %struct.Memory* %loadMem_40f6c5, %struct.Memory** %MEMORY
  %loadMem_40f6c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1993 = getelementptr inbounds %struct.GPR, %struct.GPR* %1992, i32 0, i32 33
  %1994 = getelementptr inbounds %struct.Reg, %struct.Reg* %1993, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %1994 to i64*
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1996 = getelementptr inbounds %struct.GPR, %struct.GPR* %1995, i32 0, i32 5
  %1997 = getelementptr inbounds %struct.Reg, %struct.Reg* %1996, i32 0, i32 0
  %RCX.i1226 = bitcast %union.anon* %1997 to i64*
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 7
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %RDX.i1227 = bitcast %union.anon* %2000 to i64*
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2002 = getelementptr inbounds %struct.GPR, %struct.GPR* %2001, i32 0, i32 9
  %2003 = getelementptr inbounds %struct.Reg, %struct.Reg* %2002, i32 0, i32 0
  %RSI.i1228 = bitcast %union.anon* %2003 to i64*
  %2004 = load i64, i64* %RSI.i1228
  %2005 = load i64, i64* %RDX.i1227
  %2006 = mul i64 %2005, 4
  %2007 = add i64 %2006, %2004
  %2008 = load i64, i64* %PC.i1225
  %2009 = add i64 %2008, 3
  store i64 %2009, i64* %PC.i1225
  %2010 = inttoptr i64 %2007 to i32*
  %2011 = load i32, i32* %2010
  %2012 = zext i32 %2011 to i64
  store i64 %2012, i64* %RCX.i1226, align 8
  store %struct.Memory* %loadMem_40f6c9, %struct.Memory** %MEMORY
  %loadMem_40f6cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2014 = getelementptr inbounds %struct.GPR, %struct.GPR* %2013, i32 0, i32 33
  %2015 = getelementptr inbounds %struct.Reg, %struct.Reg* %2014, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %2015 to i64*
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2017 = getelementptr inbounds %struct.GPR, %struct.GPR* %2016, i32 0, i32 7
  %2018 = getelementptr inbounds %struct.Reg, %struct.Reg* %2017, i32 0, i32 0
  %RDX.i1223 = bitcast %union.anon* %2018 to i64*
  %2019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2020 = getelementptr inbounds %struct.GPR, %struct.GPR* %2019, i32 0, i32 15
  %2021 = getelementptr inbounds %struct.Reg, %struct.Reg* %2020, i32 0, i32 0
  %RBP.i1224 = bitcast %union.anon* %2021 to i64*
  %2022 = load i64, i64* %RBP.i1224
  %2023 = sub i64 %2022, 20
  %2024 = load i64, i64* %PC.i1222
  %2025 = add i64 %2024, 4
  store i64 %2025, i64* %PC.i1222
  %2026 = inttoptr i64 %2023 to i32*
  %2027 = load i32, i32* %2026
  %2028 = sext i32 %2027 to i64
  store i64 %2028, i64* %RDX.i1223, align 8
  store %struct.Memory* %loadMem_40f6cc, %struct.Memory** %MEMORY
  %loadMem_40f6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2030 = getelementptr inbounds %struct.GPR, %struct.GPR* %2029, i32 0, i32 33
  %2031 = getelementptr inbounds %struct.Reg, %struct.Reg* %2030, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %2031 to i64*
  %2032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2033 = getelementptr inbounds %struct.GPR, %struct.GPR* %2032, i32 0, i32 7
  %2034 = getelementptr inbounds %struct.Reg, %struct.Reg* %2033, i32 0, i32 0
  %RDX.i1221 = bitcast %union.anon* %2034 to i64*
  %2035 = load i64, i64* %RDX.i1221
  %2036 = load i64, i64* %PC.i1220
  %2037 = add i64 %2036, 4
  store i64 %2037, i64* %PC.i1220
  %2038 = shl i64 %2035, 3
  %2039 = icmp slt i64 %2038, 0
  %2040 = shl i64 %2038, 1
  store i64 %2040, i64* %RDX.i1221, align 8
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2042 = zext i1 %2039 to i8
  store i8 %2042, i8* %2041, align 1
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2044 = trunc i64 %2040 to i32
  %2045 = and i32 %2044, 254
  %2046 = call i32 @llvm.ctpop.i32(i32 %2045)
  %2047 = trunc i32 %2046 to i8
  %2048 = and i8 %2047, 1
  %2049 = xor i8 %2048, 1
  store i8 %2049, i8* %2043, align 1
  %2050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2050, align 1
  %2051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2052 = icmp eq i64 %2040, 0
  %2053 = zext i1 %2052 to i8
  store i8 %2053, i8* %2051, align 1
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2055 = lshr i64 %2040, 63
  %2056 = trunc i64 %2055 to i8
  store i8 %2056, i8* %2054, align 1
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2057, align 1
  store %struct.Memory* %loadMem_40f6d0, %struct.Memory** %MEMORY
  %loadMem_40f6d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2059 = getelementptr inbounds %struct.GPR, %struct.GPR* %2058, i32 0, i32 33
  %2060 = getelementptr inbounds %struct.Reg, %struct.Reg* %2059, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %2060 to i64*
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2062 = getelementptr inbounds %struct.GPR, %struct.GPR* %2061, i32 0, i32 1
  %2063 = getelementptr inbounds %struct.Reg, %struct.Reg* %2062, i32 0, i32 0
  %RAX.i1218 = bitcast %union.anon* %2063 to i64*
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2065 = getelementptr inbounds %struct.GPR, %struct.GPR* %2064, i32 0, i32 9
  %2066 = getelementptr inbounds %struct.Reg, %struct.Reg* %2065, i32 0, i32 0
  %RSI.i1219 = bitcast %union.anon* %2066 to i64*
  %2067 = load i64, i64* %RAX.i1218
  %2068 = load i64, i64* %PC.i1217
  %2069 = add i64 %2068, 3
  store i64 %2069, i64* %PC.i1217
  store i64 %2067, i64* %RSI.i1219, align 8
  store %struct.Memory* %loadMem_40f6d4, %struct.Memory** %MEMORY
  %loadMem_40f6d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2071 = getelementptr inbounds %struct.GPR, %struct.GPR* %2070, i32 0, i32 33
  %2072 = getelementptr inbounds %struct.Reg, %struct.Reg* %2071, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %2072 to i64*
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2074 = getelementptr inbounds %struct.GPR, %struct.GPR* %2073, i32 0, i32 7
  %2075 = getelementptr inbounds %struct.Reg, %struct.Reg* %2074, i32 0, i32 0
  %RDX.i1215 = bitcast %union.anon* %2075 to i64*
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 9
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %RSI.i1216 = bitcast %union.anon* %2078 to i64*
  %2079 = load i64, i64* %RSI.i1216
  %2080 = load i64, i64* %RDX.i1215
  %2081 = load i64, i64* %PC.i1214
  %2082 = add i64 %2081, 3
  store i64 %2082, i64* %PC.i1214
  %2083 = add i64 %2080, %2079
  store i64 %2083, i64* %RSI.i1216, align 8
  %2084 = icmp ult i64 %2083, %2079
  %2085 = icmp ult i64 %2083, %2080
  %2086 = or i1 %2084, %2085
  %2087 = zext i1 %2086 to i8
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2087, i8* %2088, align 1
  %2089 = trunc i64 %2083 to i32
  %2090 = and i32 %2089, 255
  %2091 = call i32 @llvm.ctpop.i32(i32 %2090)
  %2092 = trunc i32 %2091 to i8
  %2093 = and i8 %2092, 1
  %2094 = xor i8 %2093, 1
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2094, i8* %2095, align 1
  %2096 = xor i64 %2080, %2079
  %2097 = xor i64 %2096, %2083
  %2098 = lshr i64 %2097, 4
  %2099 = trunc i64 %2098 to i8
  %2100 = and i8 %2099, 1
  %2101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2100, i8* %2101, align 1
  %2102 = icmp eq i64 %2083, 0
  %2103 = zext i1 %2102 to i8
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2103, i8* %2104, align 1
  %2105 = lshr i64 %2083, 63
  %2106 = trunc i64 %2105 to i8
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2106, i8* %2107, align 1
  %2108 = lshr i64 %2079, 63
  %2109 = lshr i64 %2080, 63
  %2110 = xor i64 %2105, %2108
  %2111 = xor i64 %2105, %2109
  %2112 = add i64 %2110, %2111
  %2113 = icmp eq i64 %2112, 2
  %2114 = zext i1 %2113 to i8
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2114, i8* %2115, align 1
  store %struct.Memory* %loadMem_40f6d7, %struct.Memory** %MEMORY
  %loadMem_40f6da = load %struct.Memory*, %struct.Memory** %MEMORY
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2117 = getelementptr inbounds %struct.GPR, %struct.GPR* %2116, i32 0, i32 33
  %2118 = getelementptr inbounds %struct.Reg, %struct.Reg* %2117, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %2118 to i64*
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2120 = getelementptr inbounds %struct.GPR, %struct.GPR* %2119, i32 0, i32 7
  %2121 = getelementptr inbounds %struct.Reg, %struct.Reg* %2120, i32 0, i32 0
  %RDX.i1212 = bitcast %union.anon* %2121 to i64*
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2123 = getelementptr inbounds %struct.GPR, %struct.GPR* %2122, i32 0, i32 15
  %2124 = getelementptr inbounds %struct.Reg, %struct.Reg* %2123, i32 0, i32 0
  %RBP.i1213 = bitcast %union.anon* %2124 to i64*
  %2125 = load i64, i64* %RBP.i1213
  %2126 = sub i64 %2125, 16
  %2127 = load i64, i64* %PC.i1211
  %2128 = add i64 %2127, 4
  store i64 %2128, i64* %PC.i1211
  %2129 = inttoptr i64 %2126 to i32*
  %2130 = load i32, i32* %2129
  %2131 = sext i32 %2130 to i64
  store i64 %2131, i64* %RDX.i1212, align 8
  store %struct.Memory* %loadMem_40f6da, %struct.Memory** %MEMORY
  %loadMem_40f6de = load %struct.Memory*, %struct.Memory** %MEMORY
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2133 = getelementptr inbounds %struct.GPR, %struct.GPR* %2132, i32 0, i32 33
  %2134 = getelementptr inbounds %struct.Reg, %struct.Reg* %2133, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %2134 to i64*
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 5
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %RCX.i1208 = bitcast %union.anon* %2137 to i64*
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 7
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %RDX.i1209 = bitcast %union.anon* %2140 to i64*
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2142 = getelementptr inbounds %struct.GPR, %struct.GPR* %2141, i32 0, i32 9
  %2143 = getelementptr inbounds %struct.Reg, %struct.Reg* %2142, i32 0, i32 0
  %RSI.i1210 = bitcast %union.anon* %2143 to i64*
  %2144 = load i64, i64* %RCX.i1208
  %2145 = load i64, i64* %RSI.i1210
  %2146 = load i64, i64* %RDX.i1209
  %2147 = mul i64 %2146, 4
  %2148 = add i64 %2147, %2145
  %2149 = load i64, i64* %PC.i1207
  %2150 = add i64 %2149, 3
  store i64 %2150, i64* %PC.i1207
  %2151 = trunc i64 %2144 to i32
  %2152 = inttoptr i64 %2148 to i32*
  %2153 = load i32, i32* %2152
  %2154 = add i32 %2153, %2151
  %2155 = zext i32 %2154 to i64
  store i64 %2155, i64* %RCX.i1208, align 8
  %2156 = icmp ult i32 %2154, %2151
  %2157 = icmp ult i32 %2154, %2153
  %2158 = or i1 %2156, %2157
  %2159 = zext i1 %2158 to i8
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2159, i8* %2160, align 1
  %2161 = and i32 %2154, 255
  %2162 = call i32 @llvm.ctpop.i32(i32 %2161)
  %2163 = trunc i32 %2162 to i8
  %2164 = and i8 %2163, 1
  %2165 = xor i8 %2164, 1
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2165, i8* %2166, align 1
  %2167 = xor i32 %2153, %2151
  %2168 = xor i32 %2167, %2154
  %2169 = lshr i32 %2168, 4
  %2170 = trunc i32 %2169 to i8
  %2171 = and i8 %2170, 1
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2171, i8* %2172, align 1
  %2173 = icmp eq i32 %2154, 0
  %2174 = zext i1 %2173 to i8
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2174, i8* %2175, align 1
  %2176 = lshr i32 %2154, 31
  %2177 = trunc i32 %2176 to i8
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2177, i8* %2178, align 1
  %2179 = lshr i32 %2151, 31
  %2180 = lshr i32 %2153, 31
  %2181 = xor i32 %2176, %2179
  %2182 = xor i32 %2176, %2180
  %2183 = add i32 %2181, %2182
  %2184 = icmp eq i32 %2183, 2
  %2185 = zext i1 %2184 to i8
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2185, i8* %2186, align 1
  store %struct.Memory* %loadMem_40f6de, %struct.Memory** %MEMORY
  %loadMem_40f6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2188 = getelementptr inbounds %struct.GPR, %struct.GPR* %2187, i32 0, i32 33
  %2189 = getelementptr inbounds %struct.Reg, %struct.Reg* %2188, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %2189 to i64*
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2191 = getelementptr inbounds %struct.GPR, %struct.GPR* %2190, i32 0, i32 7
  %2192 = getelementptr inbounds %struct.Reg, %struct.Reg* %2191, i32 0, i32 0
  %RDX.i1205 = bitcast %union.anon* %2192 to i64*
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2194 = getelementptr inbounds %struct.GPR, %struct.GPR* %2193, i32 0, i32 15
  %2195 = getelementptr inbounds %struct.Reg, %struct.Reg* %2194, i32 0, i32 0
  %RBP.i1206 = bitcast %union.anon* %2195 to i64*
  %2196 = load i64, i64* %RBP.i1206
  %2197 = sub i64 %2196, 12
  %2198 = load i64, i64* %PC.i1204
  %2199 = add i64 %2198, 4
  store i64 %2199, i64* %PC.i1204
  %2200 = inttoptr i64 %2197 to i32*
  %2201 = load i32, i32* %2200
  %2202 = sext i32 %2201 to i64
  store i64 %2202, i64* %RDX.i1205, align 8
  store %struct.Memory* %loadMem_40f6e1, %struct.Memory** %MEMORY
  %loadMem_40f6e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2204 = getelementptr inbounds %struct.GPR, %struct.GPR* %2203, i32 0, i32 33
  %2205 = getelementptr inbounds %struct.Reg, %struct.Reg* %2204, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %2205 to i64*
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2207 = getelementptr inbounds %struct.GPR, %struct.GPR* %2206, i32 0, i32 5
  %2208 = getelementptr inbounds %struct.Reg, %struct.Reg* %2207, i32 0, i32 0
  %ECX.i1201 = bitcast %union.anon* %2208 to i32*
  %2209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2210 = getelementptr inbounds %struct.GPR, %struct.GPR* %2209, i32 0, i32 7
  %2211 = getelementptr inbounds %struct.Reg, %struct.Reg* %2210, i32 0, i32 0
  %RDX.i1202 = bitcast %union.anon* %2211 to i64*
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2213 = getelementptr inbounds %struct.GPR, %struct.GPR* %2212, i32 0, i32 15
  %2214 = getelementptr inbounds %struct.Reg, %struct.Reg* %2213, i32 0, i32 0
  %RBP.i1203 = bitcast %union.anon* %2214 to i64*
  %2215 = load i64, i64* %RBP.i1203
  %2216 = load i64, i64* %RDX.i1202
  %2217 = mul i64 %2216, 4
  %2218 = add i64 %2215, -48
  %2219 = add i64 %2218, %2217
  %2220 = load i32, i32* %ECX.i1201
  %2221 = zext i32 %2220 to i64
  %2222 = load i64, i64* %PC.i1200
  %2223 = add i64 %2222, 4
  store i64 %2223, i64* %PC.i1200
  %2224 = inttoptr i64 %2219 to i32*
  store i32 %2220, i32* %2224
  store %struct.Memory* %loadMem_40f6e5, %struct.Memory** %MEMORY
  %loadMem_40f6e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2226 = getelementptr inbounds %struct.GPR, %struct.GPR* %2225, i32 0, i32 33
  %2227 = getelementptr inbounds %struct.Reg, %struct.Reg* %2226, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %2227 to i64*
  %2228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2229 = getelementptr inbounds %struct.GPR, %struct.GPR* %2228, i32 0, i32 7
  %2230 = getelementptr inbounds %struct.Reg, %struct.Reg* %2229, i32 0, i32 0
  %RDX.i1198 = bitcast %union.anon* %2230 to i64*
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2232 = getelementptr inbounds %struct.GPR, %struct.GPR* %2231, i32 0, i32 15
  %2233 = getelementptr inbounds %struct.Reg, %struct.Reg* %2232, i32 0, i32 0
  %RBP.i1199 = bitcast %union.anon* %2233 to i64*
  %2234 = load i64, i64* %RBP.i1199
  %2235 = sub i64 %2234, 12
  %2236 = load i64, i64* %PC.i1197
  %2237 = add i64 %2236, 4
  store i64 %2237, i64* %PC.i1197
  %2238 = inttoptr i64 %2235 to i32*
  %2239 = load i32, i32* %2238
  %2240 = sext i32 %2239 to i64
  store i64 %2240, i64* %RDX.i1198, align 8
  store %struct.Memory* %loadMem_40f6e9, %struct.Memory** %MEMORY
  %loadMem_40f6ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2242 = getelementptr inbounds %struct.GPR, %struct.GPR* %2241, i32 0, i32 33
  %2243 = getelementptr inbounds %struct.Reg, %struct.Reg* %2242, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %2243 to i64*
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2245 = getelementptr inbounds %struct.GPR, %struct.GPR* %2244, i32 0, i32 7
  %2246 = getelementptr inbounds %struct.Reg, %struct.Reg* %2245, i32 0, i32 0
  %RDX.i1196 = bitcast %union.anon* %2246 to i64*
  %2247 = load i64, i64* %RDX.i1196
  %2248 = load i64, i64* %PC.i1195
  %2249 = add i64 %2248, 4
  store i64 %2249, i64* %PC.i1195
  %2250 = shl i64 %2247, 3
  %2251 = icmp slt i64 %2250, 0
  %2252 = shl i64 %2250, 1
  store i64 %2252, i64* %RDX.i1196, align 8
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2254 = zext i1 %2251 to i8
  store i8 %2254, i8* %2253, align 1
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2256 = trunc i64 %2252 to i32
  %2257 = and i32 %2256, 254
  %2258 = call i32 @llvm.ctpop.i32(i32 %2257)
  %2259 = trunc i32 %2258 to i8
  %2260 = and i8 %2259, 1
  %2261 = xor i8 %2260, 1
  store i8 %2261, i8* %2255, align 1
  %2262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2262, align 1
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2264 = icmp eq i64 %2252, 0
  %2265 = zext i1 %2264 to i8
  store i8 %2265, i8* %2263, align 1
  %2266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2267 = lshr i64 %2252, 63
  %2268 = trunc i64 %2267 to i8
  store i8 %2268, i8* %2266, align 1
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2269, align 1
  store %struct.Memory* %loadMem_40f6ed, %struct.Memory** %MEMORY
  %loadMem_40f6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2271 = getelementptr inbounds %struct.GPR, %struct.GPR* %2270, i32 0, i32 33
  %2272 = getelementptr inbounds %struct.Reg, %struct.Reg* %2271, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %2272 to i64*
  %2273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2274 = getelementptr inbounds %struct.GPR, %struct.GPR* %2273, i32 0, i32 1
  %2275 = getelementptr inbounds %struct.Reg, %struct.Reg* %2274, i32 0, i32 0
  %RAX.i1193 = bitcast %union.anon* %2275 to i64*
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2277 = getelementptr inbounds %struct.GPR, %struct.GPR* %2276, i32 0, i32 9
  %2278 = getelementptr inbounds %struct.Reg, %struct.Reg* %2277, i32 0, i32 0
  %RSI.i1194 = bitcast %union.anon* %2278 to i64*
  %2279 = load i64, i64* %RAX.i1193
  %2280 = load i64, i64* %PC.i1192
  %2281 = add i64 %2280, 3
  store i64 %2281, i64* %PC.i1192
  store i64 %2279, i64* %RSI.i1194, align 8
  store %struct.Memory* %loadMem_40f6f1, %struct.Memory** %MEMORY
  %loadMem_40f6f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2283 = getelementptr inbounds %struct.GPR, %struct.GPR* %2282, i32 0, i32 33
  %2284 = getelementptr inbounds %struct.Reg, %struct.Reg* %2283, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %2284 to i64*
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2286 = getelementptr inbounds %struct.GPR, %struct.GPR* %2285, i32 0, i32 7
  %2287 = getelementptr inbounds %struct.Reg, %struct.Reg* %2286, i32 0, i32 0
  %RDX.i1190 = bitcast %union.anon* %2287 to i64*
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2289 = getelementptr inbounds %struct.GPR, %struct.GPR* %2288, i32 0, i32 9
  %2290 = getelementptr inbounds %struct.Reg, %struct.Reg* %2289, i32 0, i32 0
  %RSI.i1191 = bitcast %union.anon* %2290 to i64*
  %2291 = load i64, i64* %RSI.i1191
  %2292 = load i64, i64* %RDX.i1190
  %2293 = load i64, i64* %PC.i1189
  %2294 = add i64 %2293, 3
  store i64 %2294, i64* %PC.i1189
  %2295 = add i64 %2292, %2291
  store i64 %2295, i64* %RSI.i1191, align 8
  %2296 = icmp ult i64 %2295, %2291
  %2297 = icmp ult i64 %2295, %2292
  %2298 = or i1 %2296, %2297
  %2299 = zext i1 %2298 to i8
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2299, i8* %2300, align 1
  %2301 = trunc i64 %2295 to i32
  %2302 = and i32 %2301, 255
  %2303 = call i32 @llvm.ctpop.i32(i32 %2302)
  %2304 = trunc i32 %2303 to i8
  %2305 = and i8 %2304, 1
  %2306 = xor i8 %2305, 1
  %2307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2306, i8* %2307, align 1
  %2308 = xor i64 %2292, %2291
  %2309 = xor i64 %2308, %2295
  %2310 = lshr i64 %2309, 4
  %2311 = trunc i64 %2310 to i8
  %2312 = and i8 %2311, 1
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2312, i8* %2313, align 1
  %2314 = icmp eq i64 %2295, 0
  %2315 = zext i1 %2314 to i8
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2315, i8* %2316, align 1
  %2317 = lshr i64 %2295, 63
  %2318 = trunc i64 %2317 to i8
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2318, i8* %2319, align 1
  %2320 = lshr i64 %2291, 63
  %2321 = lshr i64 %2292, 63
  %2322 = xor i64 %2317, %2320
  %2323 = xor i64 %2317, %2321
  %2324 = add i64 %2322, %2323
  %2325 = icmp eq i64 %2324, 2
  %2326 = zext i1 %2325 to i8
  %2327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2326, i8* %2327, align 1
  store %struct.Memory* %loadMem_40f6f4, %struct.Memory** %MEMORY
  %loadMem_40f6f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2329 = getelementptr inbounds %struct.GPR, %struct.GPR* %2328, i32 0, i32 33
  %2330 = getelementptr inbounds %struct.Reg, %struct.Reg* %2329, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %2330 to i64*
  %2331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2332 = getelementptr inbounds %struct.GPR, %struct.GPR* %2331, i32 0, i32 7
  %2333 = getelementptr inbounds %struct.Reg, %struct.Reg* %2332, i32 0, i32 0
  %RDX.i1187 = bitcast %union.anon* %2333 to i64*
  %2334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2335 = getelementptr inbounds %struct.GPR, %struct.GPR* %2334, i32 0, i32 15
  %2336 = getelementptr inbounds %struct.Reg, %struct.Reg* %2335, i32 0, i32 0
  %RBP.i1188 = bitcast %union.anon* %2336 to i64*
  %2337 = load i64, i64* %RBP.i1188
  %2338 = sub i64 %2337, 16
  %2339 = load i64, i64* %PC.i1186
  %2340 = add i64 %2339, 4
  store i64 %2340, i64* %PC.i1186
  %2341 = inttoptr i64 %2338 to i32*
  %2342 = load i32, i32* %2341
  %2343 = sext i32 %2342 to i64
  store i64 %2343, i64* %RDX.i1187, align 8
  store %struct.Memory* %loadMem_40f6f7, %struct.Memory** %MEMORY
  %loadMem_40f6fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2345 = getelementptr inbounds %struct.GPR, %struct.GPR* %2344, i32 0, i32 33
  %2346 = getelementptr inbounds %struct.Reg, %struct.Reg* %2345, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %2346 to i64*
  %2347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2348 = getelementptr inbounds %struct.GPR, %struct.GPR* %2347, i32 0, i32 5
  %2349 = getelementptr inbounds %struct.Reg, %struct.Reg* %2348, i32 0, i32 0
  %RCX.i1183 = bitcast %union.anon* %2349 to i64*
  %2350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2351 = getelementptr inbounds %struct.GPR, %struct.GPR* %2350, i32 0, i32 7
  %2352 = getelementptr inbounds %struct.Reg, %struct.Reg* %2351, i32 0, i32 0
  %RDX.i1184 = bitcast %union.anon* %2352 to i64*
  %2353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2354 = getelementptr inbounds %struct.GPR, %struct.GPR* %2353, i32 0, i32 9
  %2355 = getelementptr inbounds %struct.Reg, %struct.Reg* %2354, i32 0, i32 0
  %RSI.i1185 = bitcast %union.anon* %2355 to i64*
  %2356 = load i64, i64* %RSI.i1185
  %2357 = load i64, i64* %RDX.i1184
  %2358 = mul i64 %2357, 4
  %2359 = add i64 %2358, %2356
  %2360 = load i64, i64* %PC.i1182
  %2361 = add i64 %2360, 3
  store i64 %2361, i64* %PC.i1182
  %2362 = inttoptr i64 %2359 to i32*
  %2363 = load i32, i32* %2362
  %2364 = zext i32 %2363 to i64
  store i64 %2364, i64* %RCX.i1183, align 8
  store %struct.Memory* %loadMem_40f6fb, %struct.Memory** %MEMORY
  %loadMem_40f6fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2366 = getelementptr inbounds %struct.GPR, %struct.GPR* %2365, i32 0, i32 33
  %2367 = getelementptr inbounds %struct.Reg, %struct.Reg* %2366, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %2367 to i64*
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2369 = getelementptr inbounds %struct.GPR, %struct.GPR* %2368, i32 0, i32 7
  %2370 = getelementptr inbounds %struct.Reg, %struct.Reg* %2369, i32 0, i32 0
  %RDX.i1180 = bitcast %union.anon* %2370 to i64*
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2372 = getelementptr inbounds %struct.GPR, %struct.GPR* %2371, i32 0, i32 15
  %2373 = getelementptr inbounds %struct.Reg, %struct.Reg* %2372, i32 0, i32 0
  %RBP.i1181 = bitcast %union.anon* %2373 to i64*
  %2374 = load i64, i64* %RBP.i1181
  %2375 = sub i64 %2374, 20
  %2376 = load i64, i64* %PC.i1179
  %2377 = add i64 %2376, 4
  store i64 %2377, i64* %PC.i1179
  %2378 = inttoptr i64 %2375 to i32*
  %2379 = load i32, i32* %2378
  %2380 = sext i32 %2379 to i64
  store i64 %2380, i64* %RDX.i1180, align 8
  store %struct.Memory* %loadMem_40f6fe, %struct.Memory** %MEMORY
  %loadMem_40f702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2382 = getelementptr inbounds %struct.GPR, %struct.GPR* %2381, i32 0, i32 33
  %2383 = getelementptr inbounds %struct.Reg, %struct.Reg* %2382, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %2383 to i64*
  %2384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2385 = getelementptr inbounds %struct.GPR, %struct.GPR* %2384, i32 0, i32 7
  %2386 = getelementptr inbounds %struct.Reg, %struct.Reg* %2385, i32 0, i32 0
  %RDX.i1178 = bitcast %union.anon* %2386 to i64*
  %2387 = load i64, i64* %RDX.i1178
  %2388 = load i64, i64* %PC.i1177
  %2389 = add i64 %2388, 4
  store i64 %2389, i64* %PC.i1177
  %2390 = shl i64 %2387, 3
  %2391 = icmp slt i64 %2390, 0
  %2392 = shl i64 %2390, 1
  store i64 %2392, i64* %RDX.i1178, align 8
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2394 = zext i1 %2391 to i8
  store i8 %2394, i8* %2393, align 1
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2396 = trunc i64 %2392 to i32
  %2397 = and i32 %2396, 254
  %2398 = call i32 @llvm.ctpop.i32(i32 %2397)
  %2399 = trunc i32 %2398 to i8
  %2400 = and i8 %2399, 1
  %2401 = xor i8 %2400, 1
  store i8 %2401, i8* %2395, align 1
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2402, align 1
  %2403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2404 = icmp eq i64 %2392, 0
  %2405 = zext i1 %2404 to i8
  store i8 %2405, i8* %2403, align 1
  %2406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2407 = lshr i64 %2392, 63
  %2408 = trunc i64 %2407 to i8
  store i8 %2408, i8* %2406, align 1
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2409, align 1
  store %struct.Memory* %loadMem_40f702, %struct.Memory** %MEMORY
  %loadMem_40f706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2411 = getelementptr inbounds %struct.GPR, %struct.GPR* %2410, i32 0, i32 33
  %2412 = getelementptr inbounds %struct.Reg, %struct.Reg* %2411, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %2412 to i64*
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2414 = getelementptr inbounds %struct.GPR, %struct.GPR* %2413, i32 0, i32 1
  %2415 = getelementptr inbounds %struct.Reg, %struct.Reg* %2414, i32 0, i32 0
  %RAX.i1175 = bitcast %union.anon* %2415 to i64*
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2417 = getelementptr inbounds %struct.GPR, %struct.GPR* %2416, i32 0, i32 7
  %2418 = getelementptr inbounds %struct.Reg, %struct.Reg* %2417, i32 0, i32 0
  %RDX.i1176 = bitcast %union.anon* %2418 to i64*
  %2419 = load i64, i64* %RAX.i1175
  %2420 = load i64, i64* %RDX.i1176
  %2421 = load i64, i64* %PC.i1174
  %2422 = add i64 %2421, 3
  store i64 %2422, i64* %PC.i1174
  %2423 = add i64 %2420, %2419
  store i64 %2423, i64* %RAX.i1175, align 8
  %2424 = icmp ult i64 %2423, %2419
  %2425 = icmp ult i64 %2423, %2420
  %2426 = or i1 %2424, %2425
  %2427 = zext i1 %2426 to i8
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2427, i8* %2428, align 1
  %2429 = trunc i64 %2423 to i32
  %2430 = and i32 %2429, 255
  %2431 = call i32 @llvm.ctpop.i32(i32 %2430)
  %2432 = trunc i32 %2431 to i8
  %2433 = and i8 %2432, 1
  %2434 = xor i8 %2433, 1
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2434, i8* %2435, align 1
  %2436 = xor i64 %2420, %2419
  %2437 = xor i64 %2436, %2423
  %2438 = lshr i64 %2437, 4
  %2439 = trunc i64 %2438 to i8
  %2440 = and i8 %2439, 1
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2440, i8* %2441, align 1
  %2442 = icmp eq i64 %2423, 0
  %2443 = zext i1 %2442 to i8
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2443, i8* %2444, align 1
  %2445 = lshr i64 %2423, 63
  %2446 = trunc i64 %2445 to i8
  %2447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2446, i8* %2447, align 1
  %2448 = lshr i64 %2419, 63
  %2449 = lshr i64 %2420, 63
  %2450 = xor i64 %2445, %2448
  %2451 = xor i64 %2445, %2449
  %2452 = add i64 %2450, %2451
  %2453 = icmp eq i64 %2452, 2
  %2454 = zext i1 %2453 to i8
  %2455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2454, i8* %2455, align 1
  store %struct.Memory* %loadMem_40f706, %struct.Memory** %MEMORY
  %loadMem_40f709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2457 = getelementptr inbounds %struct.GPR, %struct.GPR* %2456, i32 0, i32 33
  %2458 = getelementptr inbounds %struct.Reg, %struct.Reg* %2457, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %2458 to i64*
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2460 = getelementptr inbounds %struct.GPR, %struct.GPR* %2459, i32 0, i32 7
  %2461 = getelementptr inbounds %struct.Reg, %struct.Reg* %2460, i32 0, i32 0
  %RDX.i1172 = bitcast %union.anon* %2461 to i64*
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2463 = getelementptr inbounds %struct.GPR, %struct.GPR* %2462, i32 0, i32 15
  %2464 = getelementptr inbounds %struct.Reg, %struct.Reg* %2463, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %2464 to i64*
  %2465 = load i64, i64* %RBP.i1173
  %2466 = sub i64 %2465, 16
  %2467 = load i64, i64* %PC.i1171
  %2468 = add i64 %2467, 4
  store i64 %2468, i64* %PC.i1171
  %2469 = inttoptr i64 %2466 to i32*
  %2470 = load i32, i32* %2469
  %2471 = sext i32 %2470 to i64
  store i64 %2471, i64* %RDX.i1172, align 8
  store %struct.Memory* %loadMem_40f709, %struct.Memory** %MEMORY
  %loadMem_40f70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2473 = getelementptr inbounds %struct.GPR, %struct.GPR* %2472, i32 0, i32 33
  %2474 = getelementptr inbounds %struct.Reg, %struct.Reg* %2473, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %2474 to i64*
  %2475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2476 = getelementptr inbounds %struct.GPR, %struct.GPR* %2475, i32 0, i32 1
  %2477 = getelementptr inbounds %struct.Reg, %struct.Reg* %2476, i32 0, i32 0
  %RAX.i1168 = bitcast %union.anon* %2477 to i64*
  %2478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2479 = getelementptr inbounds %struct.GPR, %struct.GPR* %2478, i32 0, i32 5
  %2480 = getelementptr inbounds %struct.Reg, %struct.Reg* %2479, i32 0, i32 0
  %RCX.i1169 = bitcast %union.anon* %2480 to i64*
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2482 = getelementptr inbounds %struct.GPR, %struct.GPR* %2481, i32 0, i32 7
  %2483 = getelementptr inbounds %struct.Reg, %struct.Reg* %2482, i32 0, i32 0
  %RDX.i1170 = bitcast %union.anon* %2483 to i64*
  %2484 = load i64, i64* %RCX.i1169
  %2485 = load i64, i64* %RAX.i1168
  %2486 = load i64, i64* %RDX.i1170
  %2487 = mul i64 %2486, 4
  %2488 = add i64 %2487, %2485
  %2489 = load i64, i64* %PC.i1167
  %2490 = add i64 %2489, 3
  store i64 %2490, i64* %PC.i1167
  %2491 = trunc i64 %2484 to i32
  %2492 = inttoptr i64 %2488 to i32*
  %2493 = load i32, i32* %2492
  %2494 = sub i32 %2491, %2493
  %2495 = zext i32 %2494 to i64
  store i64 %2495, i64* %RCX.i1169, align 8
  %2496 = icmp ult i32 %2491, %2493
  %2497 = zext i1 %2496 to i8
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2497, i8* %2498, align 1
  %2499 = and i32 %2494, 255
  %2500 = call i32 @llvm.ctpop.i32(i32 %2499)
  %2501 = trunc i32 %2500 to i8
  %2502 = and i8 %2501, 1
  %2503 = xor i8 %2502, 1
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2503, i8* %2504, align 1
  %2505 = xor i32 %2493, %2491
  %2506 = xor i32 %2505, %2494
  %2507 = lshr i32 %2506, 4
  %2508 = trunc i32 %2507 to i8
  %2509 = and i8 %2508, 1
  %2510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2509, i8* %2510, align 1
  %2511 = icmp eq i32 %2494, 0
  %2512 = zext i1 %2511 to i8
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2512, i8* %2513, align 1
  %2514 = lshr i32 %2494, 31
  %2515 = trunc i32 %2514 to i8
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2515, i8* %2516, align 1
  %2517 = lshr i32 %2491, 31
  %2518 = lshr i32 %2493, 31
  %2519 = xor i32 %2518, %2517
  %2520 = xor i32 %2514, %2517
  %2521 = add i32 %2520, %2519
  %2522 = icmp eq i32 %2521, 2
  %2523 = zext i1 %2522 to i8
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2523, i8* %2524, align 1
  store %struct.Memory* %loadMem_40f70d, %struct.Memory** %MEMORY
  %loadMem_40f710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2526 = getelementptr inbounds %struct.GPR, %struct.GPR* %2525, i32 0, i32 33
  %2527 = getelementptr inbounds %struct.Reg, %struct.Reg* %2526, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %2527 to i64*
  %2528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2529 = getelementptr inbounds %struct.GPR, %struct.GPR* %2528, i32 0, i32 1
  %2530 = getelementptr inbounds %struct.Reg, %struct.Reg* %2529, i32 0, i32 0
  %RAX.i1165 = bitcast %union.anon* %2530 to i64*
  %2531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2532 = getelementptr inbounds %struct.GPR, %struct.GPR* %2531, i32 0, i32 15
  %2533 = getelementptr inbounds %struct.Reg, %struct.Reg* %2532, i32 0, i32 0
  %RBP.i1166 = bitcast %union.anon* %2533 to i64*
  %2534 = load i64, i64* %RBP.i1166
  %2535 = sub i64 %2534, 20
  %2536 = load i64, i64* %PC.i1164
  %2537 = add i64 %2536, 4
  store i64 %2537, i64* %PC.i1164
  %2538 = inttoptr i64 %2535 to i32*
  %2539 = load i32, i32* %2538
  %2540 = sext i32 %2539 to i64
  store i64 %2540, i64* %RAX.i1165, align 8
  store %struct.Memory* %loadMem_40f710, %struct.Memory** %MEMORY
  %loadMem_40f714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2542 = getelementptr inbounds %struct.GPR, %struct.GPR* %2541, i32 0, i32 33
  %2543 = getelementptr inbounds %struct.Reg, %struct.Reg* %2542, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %2543 to i64*
  %2544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2545 = getelementptr inbounds %struct.GPR, %struct.GPR* %2544, i32 0, i32 5
  %2546 = getelementptr inbounds %struct.Reg, %struct.Reg* %2545, i32 0, i32 0
  %ECX.i1161 = bitcast %union.anon* %2546 to i32*
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2548 = getelementptr inbounds %struct.GPR, %struct.GPR* %2547, i32 0, i32 1
  %2549 = getelementptr inbounds %struct.Reg, %struct.Reg* %2548, i32 0, i32 0
  %RAX.i1162 = bitcast %union.anon* %2549 to i64*
  %2550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2551 = getelementptr inbounds %struct.GPR, %struct.GPR* %2550, i32 0, i32 15
  %2552 = getelementptr inbounds %struct.Reg, %struct.Reg* %2551, i32 0, i32 0
  %RBP.i1163 = bitcast %union.anon* %2552 to i64*
  %2553 = load i64, i64* %RBP.i1163
  %2554 = load i64, i64* %RAX.i1162
  %2555 = mul i64 %2554, 4
  %2556 = add i64 %2553, -48
  %2557 = add i64 %2556, %2555
  %2558 = load i32, i32* %ECX.i1161
  %2559 = zext i32 %2558 to i64
  %2560 = load i64, i64* %PC.i1160
  %2561 = add i64 %2560, 4
  store i64 %2561, i64* %PC.i1160
  %2562 = inttoptr i64 %2557 to i32*
  store i32 %2558, i32* %2562
  store %struct.Memory* %loadMem_40f714, %struct.Memory** %MEMORY
  %loadMem_40f718 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2564 = getelementptr inbounds %struct.GPR, %struct.GPR* %2563, i32 0, i32 33
  %2565 = getelementptr inbounds %struct.Reg, %struct.Reg* %2564, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %2565 to i64*
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2567 = getelementptr inbounds %struct.GPR, %struct.GPR* %2566, i32 0, i32 1
  %2568 = getelementptr inbounds %struct.Reg, %struct.Reg* %2567, i32 0, i32 0
  %RAX.i1158 = bitcast %union.anon* %2568 to i64*
  %2569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2570 = getelementptr inbounds %struct.GPR, %struct.GPR* %2569, i32 0, i32 15
  %2571 = getelementptr inbounds %struct.Reg, %struct.Reg* %2570, i32 0, i32 0
  %RBP.i1159 = bitcast %union.anon* %2571 to i64*
  %2572 = load i64, i64* %RBP.i1159
  %2573 = sub i64 %2572, 12
  %2574 = load i64, i64* %PC.i1157
  %2575 = add i64 %2574, 3
  store i64 %2575, i64* %PC.i1157
  %2576 = inttoptr i64 %2573 to i32*
  %2577 = load i32, i32* %2576
  %2578 = zext i32 %2577 to i64
  store i64 %2578, i64* %RAX.i1158, align 8
  store %struct.Memory* %loadMem_40f718, %struct.Memory** %MEMORY
  %loadMem_40f71b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2580 = getelementptr inbounds %struct.GPR, %struct.GPR* %2579, i32 0, i32 33
  %2581 = getelementptr inbounds %struct.Reg, %struct.Reg* %2580, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %2581 to i64*
  %2582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2583 = getelementptr inbounds %struct.GPR, %struct.GPR* %2582, i32 0, i32 1
  %2584 = getelementptr inbounds %struct.Reg, %struct.Reg* %2583, i32 0, i32 0
  %RAX.i1156 = bitcast %union.anon* %2584 to i64*
  %2585 = load i64, i64* %RAX.i1156
  %2586 = load i64, i64* %PC.i1155
  %2587 = add i64 %2586, 3
  store i64 %2587, i64* %PC.i1155
  %2588 = trunc i64 %2585 to i32
  %2589 = add i32 1, %2588
  %2590 = zext i32 %2589 to i64
  store i64 %2590, i64* %RAX.i1156, align 8
  %2591 = icmp ult i32 %2589, %2588
  %2592 = icmp ult i32 %2589, 1
  %2593 = or i1 %2591, %2592
  %2594 = zext i1 %2593 to i8
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2594, i8* %2595, align 1
  %2596 = and i32 %2589, 255
  %2597 = call i32 @llvm.ctpop.i32(i32 %2596)
  %2598 = trunc i32 %2597 to i8
  %2599 = and i8 %2598, 1
  %2600 = xor i8 %2599, 1
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2600, i8* %2601, align 1
  %2602 = xor i64 1, %2585
  %2603 = trunc i64 %2602 to i32
  %2604 = xor i32 %2603, %2589
  %2605 = lshr i32 %2604, 4
  %2606 = trunc i32 %2605 to i8
  %2607 = and i8 %2606, 1
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2607, i8* %2608, align 1
  %2609 = icmp eq i32 %2589, 0
  %2610 = zext i1 %2609 to i8
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2610, i8* %2611, align 1
  %2612 = lshr i32 %2589, 31
  %2613 = trunc i32 %2612 to i8
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2613, i8* %2614, align 1
  %2615 = lshr i32 %2588, 31
  %2616 = xor i32 %2612, %2615
  %2617 = add i32 %2616, %2612
  %2618 = icmp eq i32 %2617, 2
  %2619 = zext i1 %2618 to i8
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2619, i8* %2620, align 1
  store %struct.Memory* %loadMem_40f71b, %struct.Memory** %MEMORY
  %loadMem_40f71e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2622 = getelementptr inbounds %struct.GPR, %struct.GPR* %2621, i32 0, i32 33
  %2623 = getelementptr inbounds %struct.Reg, %struct.Reg* %2622, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %2623 to i64*
  %2624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2625 = getelementptr inbounds %struct.GPR, %struct.GPR* %2624, i32 0, i32 1
  %2626 = getelementptr inbounds %struct.Reg, %struct.Reg* %2625, i32 0, i32 0
  %EAX.i1153 = bitcast %union.anon* %2626 to i32*
  %2627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2628 = getelementptr inbounds %struct.GPR, %struct.GPR* %2627, i32 0, i32 15
  %2629 = getelementptr inbounds %struct.Reg, %struct.Reg* %2628, i32 0, i32 0
  %RBP.i1154 = bitcast %union.anon* %2629 to i64*
  %2630 = load i64, i64* %RBP.i1154
  %2631 = sub i64 %2630, 12
  %2632 = load i32, i32* %EAX.i1153
  %2633 = zext i32 %2632 to i64
  %2634 = load i64, i64* %PC.i1152
  %2635 = add i64 %2634, 3
  store i64 %2635, i64* %PC.i1152
  %2636 = inttoptr i64 %2631 to i32*
  store i32 %2632, i32* %2636
  store %struct.Memory* %loadMem_40f71e, %struct.Memory** %MEMORY
  %loadMem_40f721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2638 = getelementptr inbounds %struct.GPR, %struct.GPR* %2637, i32 0, i32 33
  %2639 = getelementptr inbounds %struct.Reg, %struct.Reg* %2638, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %2639 to i64*
  %2640 = load i64, i64* %PC.i1151
  %2641 = add i64 %2640, -134
  %2642 = load i64, i64* %PC.i1151
  %2643 = add i64 %2642, 5
  store i64 %2643, i64* %PC.i1151
  %2644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2641, i64* %2644, align 8
  store %struct.Memory* %loadMem_40f721, %struct.Memory** %MEMORY
  br label %block_.L_40f69b

block_.L_40f726:                                  ; preds = %block_.L_40f69b
  %loadMem_40f726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2646 = getelementptr inbounds %struct.GPR, %struct.GPR* %2645, i32 0, i32 33
  %2647 = getelementptr inbounds %struct.Reg, %struct.Reg* %2646, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %2647 to i64*
  %2648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2649 = getelementptr inbounds %struct.GPR, %struct.GPR* %2648, i32 0, i32 1
  %2650 = getelementptr inbounds %struct.Reg, %struct.Reg* %2649, i32 0, i32 0
  %RAX.i1149 = bitcast %union.anon* %2650 to i64*
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2652 = getelementptr inbounds %struct.GPR, %struct.GPR* %2651, i32 0, i32 15
  %2653 = getelementptr inbounds %struct.Reg, %struct.Reg* %2652, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %2653 to i64*
  %2654 = load i64, i64* %RBP.i1150
  %2655 = sub i64 %2654, 48
  %2656 = load i64, i64* %PC.i1148
  %2657 = add i64 %2656, 3
  store i64 %2657, i64* %PC.i1148
  %2658 = inttoptr i64 %2655 to i32*
  %2659 = load i32, i32* %2658
  %2660 = zext i32 %2659 to i64
  store i64 %2660, i64* %RAX.i1149, align 8
  store %struct.Memory* %loadMem_40f726, %struct.Memory** %MEMORY
  %loadMem_40f729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2662 = getelementptr inbounds %struct.GPR, %struct.GPR* %2661, i32 0, i32 33
  %2663 = getelementptr inbounds %struct.Reg, %struct.Reg* %2662, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %2663 to i64*
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2665 = getelementptr inbounds %struct.GPR, %struct.GPR* %2664, i32 0, i32 1
  %2666 = getelementptr inbounds %struct.Reg, %struct.Reg* %2665, i32 0, i32 0
  %RAX.i1146 = bitcast %union.anon* %2666 to i64*
  %2667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2668 = getelementptr inbounds %struct.GPR, %struct.GPR* %2667, i32 0, i32 15
  %2669 = getelementptr inbounds %struct.Reg, %struct.Reg* %2668, i32 0, i32 0
  %RBP.i1147 = bitcast %union.anon* %2669 to i64*
  %2670 = load i64, i64* %RAX.i1146
  %2671 = load i64, i64* %RBP.i1147
  %2672 = sub i64 %2671, 44
  %2673 = load i64, i64* %PC.i1145
  %2674 = add i64 %2673, 3
  store i64 %2674, i64* %PC.i1145
  %2675 = trunc i64 %2670 to i32
  %2676 = inttoptr i64 %2672 to i32*
  %2677 = load i32, i32* %2676
  %2678 = add i32 %2677, %2675
  %2679 = zext i32 %2678 to i64
  store i64 %2679, i64* %RAX.i1146, align 8
  %2680 = icmp ult i32 %2678, %2675
  %2681 = icmp ult i32 %2678, %2677
  %2682 = or i1 %2680, %2681
  %2683 = zext i1 %2682 to i8
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2683, i8* %2684, align 1
  %2685 = and i32 %2678, 255
  %2686 = call i32 @llvm.ctpop.i32(i32 %2685)
  %2687 = trunc i32 %2686 to i8
  %2688 = and i8 %2687, 1
  %2689 = xor i8 %2688, 1
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2689, i8* %2690, align 1
  %2691 = xor i32 %2677, %2675
  %2692 = xor i32 %2691, %2678
  %2693 = lshr i32 %2692, 4
  %2694 = trunc i32 %2693 to i8
  %2695 = and i8 %2694, 1
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2695, i8* %2696, align 1
  %2697 = icmp eq i32 %2678, 0
  %2698 = zext i1 %2697 to i8
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2698, i8* %2699, align 1
  %2700 = lshr i32 %2678, 31
  %2701 = trunc i32 %2700 to i8
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2701, i8* %2702, align 1
  %2703 = lshr i32 %2675, 31
  %2704 = lshr i32 %2677, 31
  %2705 = xor i32 %2700, %2703
  %2706 = xor i32 %2700, %2704
  %2707 = add i32 %2705, %2706
  %2708 = icmp eq i32 %2707, 2
  %2709 = zext i1 %2708 to i8
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2709, i8* %2710, align 1
  store %struct.Memory* %loadMem_40f729, %struct.Memory** %MEMORY
  %loadMem_40f72c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2712 = getelementptr inbounds %struct.GPR, %struct.GPR* %2711, i32 0, i32 33
  %2713 = getelementptr inbounds %struct.Reg, %struct.Reg* %2712, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %2713 to i64*
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2715 = getelementptr inbounds %struct.GPR, %struct.GPR* %2714, i32 0, i32 5
  %2716 = getelementptr inbounds %struct.Reg, %struct.Reg* %2715, i32 0, i32 0
  %RCX.i1143 = bitcast %union.anon* %2716 to i64*
  %2717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2718 = getelementptr inbounds %struct.GPR, %struct.GPR* %2717, i32 0, i32 15
  %2719 = getelementptr inbounds %struct.Reg, %struct.Reg* %2718, i32 0, i32 0
  %RBP.i1144 = bitcast %union.anon* %2719 to i64*
  %2720 = load i64, i64* %RBP.i1144
  %2721 = sub i64 %2720, 16
  %2722 = load i64, i64* %PC.i1142
  %2723 = add i64 %2722, 4
  store i64 %2723, i64* %PC.i1142
  %2724 = inttoptr i64 %2721 to i32*
  %2725 = load i32, i32* %2724
  %2726 = sext i32 %2725 to i64
  store i64 %2726, i64* %RCX.i1143, align 8
  store %struct.Memory* %loadMem_40f72c, %struct.Memory** %MEMORY
  %loadMem_40f730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2728 = getelementptr inbounds %struct.GPR, %struct.GPR* %2727, i32 0, i32 33
  %2729 = getelementptr inbounds %struct.Reg, %struct.Reg* %2728, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %2729 to i64*
  %2730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2731 = getelementptr inbounds %struct.GPR, %struct.GPR* %2730, i32 0, i32 1
  %2732 = getelementptr inbounds %struct.Reg, %struct.Reg* %2731, i32 0, i32 0
  %EAX.i1139 = bitcast %union.anon* %2732 to i32*
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2734 = getelementptr inbounds %struct.GPR, %struct.GPR* %2733, i32 0, i32 5
  %2735 = getelementptr inbounds %struct.Reg, %struct.Reg* %2734, i32 0, i32 0
  %RCX.i1140 = bitcast %union.anon* %2735 to i64*
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2737 = getelementptr inbounds %struct.GPR, %struct.GPR* %2736, i32 0, i32 15
  %2738 = getelementptr inbounds %struct.Reg, %struct.Reg* %2737, i32 0, i32 0
  %RBP.i1141 = bitcast %union.anon* %2738 to i64*
  %2739 = load i64, i64* %RBP.i1141
  %2740 = load i64, i64* %RCX.i1140
  %2741 = mul i64 %2740, 4
  %2742 = add i64 %2739, -144
  %2743 = add i64 %2742, %2741
  %2744 = load i32, i32* %EAX.i1139
  %2745 = zext i32 %2744 to i64
  %2746 = load i64, i64* %PC.i1138
  %2747 = add i64 %2746, 7
  store i64 %2747, i64* %PC.i1138
  %2748 = inttoptr i64 %2743 to i32*
  store i32 %2744, i32* %2748
  store %struct.Memory* %loadMem_40f730, %struct.Memory** %MEMORY
  %loadMem_40f737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2750 = getelementptr inbounds %struct.GPR, %struct.GPR* %2749, i32 0, i32 33
  %2751 = getelementptr inbounds %struct.Reg, %struct.Reg* %2750, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %2751 to i64*
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2753 = getelementptr inbounds %struct.GPR, %struct.GPR* %2752, i32 0, i32 1
  %2754 = getelementptr inbounds %struct.Reg, %struct.Reg* %2753, i32 0, i32 0
  %RAX.i1136 = bitcast %union.anon* %2754 to i64*
  %2755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2756 = getelementptr inbounds %struct.GPR, %struct.GPR* %2755, i32 0, i32 15
  %2757 = getelementptr inbounds %struct.Reg, %struct.Reg* %2756, i32 0, i32 0
  %RBP.i1137 = bitcast %union.anon* %2757 to i64*
  %2758 = load i64, i64* %RBP.i1137
  %2759 = sub i64 %2758, 48
  %2760 = load i64, i64* %PC.i1135
  %2761 = add i64 %2760, 3
  store i64 %2761, i64* %PC.i1135
  %2762 = inttoptr i64 %2759 to i32*
  %2763 = load i32, i32* %2762
  %2764 = zext i32 %2763 to i64
  store i64 %2764, i64* %RAX.i1136, align 8
  store %struct.Memory* %loadMem_40f737, %struct.Memory** %MEMORY
  %loadMem_40f73a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2766 = getelementptr inbounds %struct.GPR, %struct.GPR* %2765, i32 0, i32 33
  %2767 = getelementptr inbounds %struct.Reg, %struct.Reg* %2766, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %2767 to i64*
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2769 = getelementptr inbounds %struct.GPR, %struct.GPR* %2768, i32 0, i32 1
  %2770 = getelementptr inbounds %struct.Reg, %struct.Reg* %2769, i32 0, i32 0
  %RAX.i1133 = bitcast %union.anon* %2770 to i64*
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2772 = getelementptr inbounds %struct.GPR, %struct.GPR* %2771, i32 0, i32 15
  %2773 = getelementptr inbounds %struct.Reg, %struct.Reg* %2772, i32 0, i32 0
  %RBP.i1134 = bitcast %union.anon* %2773 to i64*
  %2774 = load i64, i64* %RAX.i1133
  %2775 = load i64, i64* %RBP.i1134
  %2776 = sub i64 %2775, 44
  %2777 = load i64, i64* %PC.i1132
  %2778 = add i64 %2777, 3
  store i64 %2778, i64* %PC.i1132
  %2779 = trunc i64 %2774 to i32
  %2780 = inttoptr i64 %2776 to i32*
  %2781 = load i32, i32* %2780
  %2782 = sub i32 %2779, %2781
  %2783 = zext i32 %2782 to i64
  store i64 %2783, i64* %RAX.i1133, align 8
  %2784 = icmp ult i32 %2779, %2781
  %2785 = zext i1 %2784 to i8
  %2786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2785, i8* %2786, align 1
  %2787 = and i32 %2782, 255
  %2788 = call i32 @llvm.ctpop.i32(i32 %2787)
  %2789 = trunc i32 %2788 to i8
  %2790 = and i8 %2789, 1
  %2791 = xor i8 %2790, 1
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2791, i8* %2792, align 1
  %2793 = xor i32 %2781, %2779
  %2794 = xor i32 %2793, %2782
  %2795 = lshr i32 %2794, 4
  %2796 = trunc i32 %2795 to i8
  %2797 = and i8 %2796, 1
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2797, i8* %2798, align 1
  %2799 = icmp eq i32 %2782, 0
  %2800 = zext i1 %2799 to i8
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2800, i8* %2801, align 1
  %2802 = lshr i32 %2782, 31
  %2803 = trunc i32 %2802 to i8
  %2804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2803, i8* %2804, align 1
  %2805 = lshr i32 %2779, 31
  %2806 = lshr i32 %2781, 31
  %2807 = xor i32 %2806, %2805
  %2808 = xor i32 %2802, %2805
  %2809 = add i32 %2808, %2807
  %2810 = icmp eq i32 %2809, 2
  %2811 = zext i1 %2810 to i8
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2811, i8* %2812, align 1
  store %struct.Memory* %loadMem_40f73a, %struct.Memory** %MEMORY
  %loadMem_40f73d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2814 = getelementptr inbounds %struct.GPR, %struct.GPR* %2813, i32 0, i32 33
  %2815 = getelementptr inbounds %struct.Reg, %struct.Reg* %2814, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %2815 to i64*
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2817 = getelementptr inbounds %struct.GPR, %struct.GPR* %2816, i32 0, i32 5
  %2818 = getelementptr inbounds %struct.Reg, %struct.Reg* %2817, i32 0, i32 0
  %RCX.i1130 = bitcast %union.anon* %2818 to i64*
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2820 = getelementptr inbounds %struct.GPR, %struct.GPR* %2819, i32 0, i32 15
  %2821 = getelementptr inbounds %struct.Reg, %struct.Reg* %2820, i32 0, i32 0
  %RBP.i1131 = bitcast %union.anon* %2821 to i64*
  %2822 = load i64, i64* %RBP.i1131
  %2823 = sub i64 %2822, 16
  %2824 = load i64, i64* %PC.i1129
  %2825 = add i64 %2824, 4
  store i64 %2825, i64* %PC.i1129
  %2826 = inttoptr i64 %2823 to i32*
  %2827 = load i32, i32* %2826
  %2828 = sext i32 %2827 to i64
  store i64 %2828, i64* %RCX.i1130, align 8
  store %struct.Memory* %loadMem_40f73d, %struct.Memory** %MEMORY
  %loadMem_40f741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2830 = getelementptr inbounds %struct.GPR, %struct.GPR* %2829, i32 0, i32 33
  %2831 = getelementptr inbounds %struct.Reg, %struct.Reg* %2830, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %2831 to i64*
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2833 = getelementptr inbounds %struct.GPR, %struct.GPR* %2832, i32 0, i32 1
  %2834 = getelementptr inbounds %struct.Reg, %struct.Reg* %2833, i32 0, i32 0
  %EAX.i1126 = bitcast %union.anon* %2834 to i32*
  %2835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2836 = getelementptr inbounds %struct.GPR, %struct.GPR* %2835, i32 0, i32 5
  %2837 = getelementptr inbounds %struct.Reg, %struct.Reg* %2836, i32 0, i32 0
  %RCX.i1127 = bitcast %union.anon* %2837 to i64*
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2839 = getelementptr inbounds %struct.GPR, %struct.GPR* %2838, i32 0, i32 15
  %2840 = getelementptr inbounds %struct.Reg, %struct.Reg* %2839, i32 0, i32 0
  %RBP.i1128 = bitcast %union.anon* %2840 to i64*
  %2841 = load i64, i64* %RBP.i1128
  %2842 = load i64, i64* %RCX.i1127
  %2843 = mul i64 %2842, 4
  %2844 = add i64 %2841, -112
  %2845 = add i64 %2844, %2843
  %2846 = load i32, i32* %EAX.i1126
  %2847 = zext i32 %2846 to i64
  %2848 = load i64, i64* %PC.i1125
  %2849 = add i64 %2848, 4
  store i64 %2849, i64* %PC.i1125
  %2850 = inttoptr i64 %2845 to i32*
  store i32 %2846, i32* %2850
  store %struct.Memory* %loadMem_40f741, %struct.Memory** %MEMORY
  %loadMem_40f745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 33
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %2853 to i64*
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2855 = getelementptr inbounds %struct.GPR, %struct.GPR* %2854, i32 0, i32 1
  %2856 = getelementptr inbounds %struct.Reg, %struct.Reg* %2855, i32 0, i32 0
  %RAX.i1123 = bitcast %union.anon* %2856 to i64*
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2858 = getelementptr inbounds %struct.GPR, %struct.GPR* %2857, i32 0, i32 15
  %2859 = getelementptr inbounds %struct.Reg, %struct.Reg* %2858, i32 0, i32 0
  %RBP.i1124 = bitcast %union.anon* %2859 to i64*
  %2860 = load i64, i64* %RBP.i1124
  %2861 = sub i64 %2860, 36
  %2862 = load i64, i64* %PC.i1122
  %2863 = add i64 %2862, 3
  store i64 %2863, i64* %PC.i1122
  %2864 = inttoptr i64 %2861 to i32*
  %2865 = load i32, i32* %2864
  %2866 = zext i32 %2865 to i64
  store i64 %2866, i64* %RAX.i1123, align 8
  store %struct.Memory* %loadMem_40f745, %struct.Memory** %MEMORY
  %loadMem_40f748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2868 = getelementptr inbounds %struct.GPR, %struct.GPR* %2867, i32 0, i32 33
  %2869 = getelementptr inbounds %struct.Reg, %struct.Reg* %2868, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %2869 to i64*
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2871 = getelementptr inbounds %struct.GPR, %struct.GPR* %2870, i32 0, i32 1
  %2872 = getelementptr inbounds %struct.Reg, %struct.Reg* %2871, i32 0, i32 0
  %RAX.i1121 = bitcast %union.anon* %2872 to i64*
  %2873 = load i64, i64* %RAX.i1121
  %2874 = load i64, i64* %PC.i1120
  %2875 = add i64 %2874, 2
  store i64 %2875, i64* %PC.i1120
  %2876 = trunc i64 %2873 to i32
  %2877 = shl i32 %2876, 1
  %2878 = icmp slt i32 %2876, 0
  %2879 = icmp slt i32 %2877, 0
  %2880 = xor i1 %2878, %2879
  %2881 = zext i32 %2877 to i64
  store i64 %2881, i64* %RAX.i1121, align 8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2883 = zext i1 %2878 to i8
  store i8 %2883, i8* %2882, align 1
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2885 = and i32 %2877, 254
  %2886 = call i32 @llvm.ctpop.i32(i32 %2885)
  %2887 = trunc i32 %2886 to i8
  %2888 = and i8 %2887, 1
  %2889 = xor i8 %2888, 1
  store i8 %2889, i8* %2884, align 1
  %2890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2890, align 1
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2892 = icmp eq i32 %2877, 0
  %2893 = zext i1 %2892 to i8
  store i8 %2893, i8* %2891, align 1
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2895 = lshr i32 %2877, 31
  %2896 = trunc i32 %2895 to i8
  store i8 %2896, i8* %2894, align 1
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2898 = zext i1 %2880 to i8
  store i8 %2898, i8* %2897, align 1
  store %struct.Memory* %loadMem_40f748, %struct.Memory** %MEMORY
  %loadMem_40f74b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2900 = getelementptr inbounds %struct.GPR, %struct.GPR* %2899, i32 0, i32 33
  %2901 = getelementptr inbounds %struct.Reg, %struct.Reg* %2900, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %2901 to i64*
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2903 = getelementptr inbounds %struct.GPR, %struct.GPR* %2902, i32 0, i32 1
  %2904 = getelementptr inbounds %struct.Reg, %struct.Reg* %2903, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %2904 to i64*
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 15
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %RBP.i1119 = bitcast %union.anon* %2907 to i64*
  %2908 = load i64, i64* %RAX.i1118
  %2909 = load i64, i64* %RBP.i1119
  %2910 = sub i64 %2909, 40
  %2911 = load i64, i64* %PC.i1117
  %2912 = add i64 %2911, 3
  store i64 %2912, i64* %PC.i1117
  %2913 = trunc i64 %2908 to i32
  %2914 = inttoptr i64 %2910 to i32*
  %2915 = load i32, i32* %2914
  %2916 = add i32 %2915, %2913
  %2917 = zext i32 %2916 to i64
  store i64 %2917, i64* %RAX.i1118, align 8
  %2918 = icmp ult i32 %2916, %2913
  %2919 = icmp ult i32 %2916, %2915
  %2920 = or i1 %2918, %2919
  %2921 = zext i1 %2920 to i8
  %2922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2921, i8* %2922, align 1
  %2923 = and i32 %2916, 255
  %2924 = call i32 @llvm.ctpop.i32(i32 %2923)
  %2925 = trunc i32 %2924 to i8
  %2926 = and i8 %2925, 1
  %2927 = xor i8 %2926, 1
  %2928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2927, i8* %2928, align 1
  %2929 = xor i32 %2915, %2913
  %2930 = xor i32 %2929, %2916
  %2931 = lshr i32 %2930, 4
  %2932 = trunc i32 %2931 to i8
  %2933 = and i8 %2932, 1
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2933, i8* %2934, align 1
  %2935 = icmp eq i32 %2916, 0
  %2936 = zext i1 %2935 to i8
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2936, i8* %2937, align 1
  %2938 = lshr i32 %2916, 31
  %2939 = trunc i32 %2938 to i8
  %2940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2939, i8* %2940, align 1
  %2941 = lshr i32 %2913, 31
  %2942 = lshr i32 %2915, 31
  %2943 = xor i32 %2938, %2941
  %2944 = xor i32 %2938, %2942
  %2945 = add i32 %2943, %2944
  %2946 = icmp eq i32 %2945, 2
  %2947 = zext i1 %2946 to i8
  %2948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2947, i8* %2948, align 1
  store %struct.Memory* %loadMem_40f74b, %struct.Memory** %MEMORY
  %loadMem_40f74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 33
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %2951 to i64*
  %2952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2953 = getelementptr inbounds %struct.GPR, %struct.GPR* %2952, i32 0, i32 5
  %2954 = getelementptr inbounds %struct.Reg, %struct.Reg* %2953, i32 0, i32 0
  %RCX.i1115 = bitcast %union.anon* %2954 to i64*
  %2955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2956 = getelementptr inbounds %struct.GPR, %struct.GPR* %2955, i32 0, i32 15
  %2957 = getelementptr inbounds %struct.Reg, %struct.Reg* %2956, i32 0, i32 0
  %RBP.i1116 = bitcast %union.anon* %2957 to i64*
  %2958 = load i64, i64* %RBP.i1116
  %2959 = sub i64 %2958, 16
  %2960 = load i64, i64* %PC.i1114
  %2961 = add i64 %2960, 4
  store i64 %2961, i64* %PC.i1114
  %2962 = inttoptr i64 %2959 to i32*
  %2963 = load i32, i32* %2962
  %2964 = sext i32 %2963 to i64
  store i64 %2964, i64* %RCX.i1115, align 8
  store %struct.Memory* %loadMem_40f74e, %struct.Memory** %MEMORY
  %loadMem_40f752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 33
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %2967 to i64*
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2969 = getelementptr inbounds %struct.GPR, %struct.GPR* %2968, i32 0, i32 1
  %2970 = getelementptr inbounds %struct.Reg, %struct.Reg* %2969, i32 0, i32 0
  %EAX.i1111 = bitcast %union.anon* %2970 to i32*
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2972 = getelementptr inbounds %struct.GPR, %struct.GPR* %2971, i32 0, i32 5
  %2973 = getelementptr inbounds %struct.Reg, %struct.Reg* %2972, i32 0, i32 0
  %RCX.i1112 = bitcast %union.anon* %2973 to i64*
  %2974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2975 = getelementptr inbounds %struct.GPR, %struct.GPR* %2974, i32 0, i32 15
  %2976 = getelementptr inbounds %struct.Reg, %struct.Reg* %2975, i32 0, i32 0
  %RBP.i1113 = bitcast %union.anon* %2976 to i64*
  %2977 = load i64, i64* %RBP.i1113
  %2978 = load i64, i64* %RCX.i1112
  %2979 = mul i64 %2978, 4
  %2980 = add i64 %2977, -128
  %2981 = add i64 %2980, %2979
  %2982 = load i32, i32* %EAX.i1111
  %2983 = zext i32 %2982 to i64
  %2984 = load i64, i64* %PC.i1110
  %2985 = add i64 %2984, 4
  store i64 %2985, i64* %PC.i1110
  %2986 = inttoptr i64 %2981 to i32*
  store i32 %2982, i32* %2986
  store %struct.Memory* %loadMem_40f752, %struct.Memory** %MEMORY
  %loadMem_40f756 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2988 = getelementptr inbounds %struct.GPR, %struct.GPR* %2987, i32 0, i32 33
  %2989 = getelementptr inbounds %struct.Reg, %struct.Reg* %2988, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %2989 to i64*
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2991 = getelementptr inbounds %struct.GPR, %struct.GPR* %2990, i32 0, i32 1
  %2992 = getelementptr inbounds %struct.Reg, %struct.Reg* %2991, i32 0, i32 0
  %RAX.i1108 = bitcast %union.anon* %2992 to i64*
  %2993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2994 = getelementptr inbounds %struct.GPR, %struct.GPR* %2993, i32 0, i32 15
  %2995 = getelementptr inbounds %struct.Reg, %struct.Reg* %2994, i32 0, i32 0
  %RBP.i1109 = bitcast %union.anon* %2995 to i64*
  %2996 = load i64, i64* %RBP.i1109
  %2997 = sub i64 %2996, 36
  %2998 = load i64, i64* %PC.i1107
  %2999 = add i64 %2998, 3
  store i64 %2999, i64* %PC.i1107
  %3000 = inttoptr i64 %2997 to i32*
  %3001 = load i32, i32* %3000
  %3002 = zext i32 %3001 to i64
  store i64 %3002, i64* %RAX.i1108, align 8
  store %struct.Memory* %loadMem_40f756, %struct.Memory** %MEMORY
  %loadMem_40f759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3004 = getelementptr inbounds %struct.GPR, %struct.GPR* %3003, i32 0, i32 33
  %3005 = getelementptr inbounds %struct.Reg, %struct.Reg* %3004, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %3005 to i64*
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3007 = getelementptr inbounds %struct.GPR, %struct.GPR* %3006, i32 0, i32 7
  %3008 = getelementptr inbounds %struct.Reg, %struct.Reg* %3007, i32 0, i32 0
  %RDX.i1105 = bitcast %union.anon* %3008 to i64*
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3010 = getelementptr inbounds %struct.GPR, %struct.GPR* %3009, i32 0, i32 15
  %3011 = getelementptr inbounds %struct.Reg, %struct.Reg* %3010, i32 0, i32 0
  %RBP.i1106 = bitcast %union.anon* %3011 to i64*
  %3012 = load i64, i64* %RBP.i1106
  %3013 = sub i64 %3012, 40
  %3014 = load i64, i64* %PC.i1104
  %3015 = add i64 %3014, 3
  store i64 %3015, i64* %PC.i1104
  %3016 = inttoptr i64 %3013 to i32*
  %3017 = load i32, i32* %3016
  %3018 = zext i32 %3017 to i64
  store i64 %3018, i64* %RDX.i1105, align 8
  store %struct.Memory* %loadMem_40f759, %struct.Memory** %MEMORY
  %loadMem_40f75c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3020 = getelementptr inbounds %struct.GPR, %struct.GPR* %3019, i32 0, i32 33
  %3021 = getelementptr inbounds %struct.Reg, %struct.Reg* %3020, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %3021 to i64*
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3023 = getelementptr inbounds %struct.GPR, %struct.GPR* %3022, i32 0, i32 7
  %3024 = getelementptr inbounds %struct.Reg, %struct.Reg* %3023, i32 0, i32 0
  %RDX.i1103 = bitcast %union.anon* %3024 to i64*
  %3025 = load i64, i64* %RDX.i1103
  %3026 = load i64, i64* %PC.i1102
  %3027 = add i64 %3026, 2
  store i64 %3027, i64* %PC.i1102
  %3028 = trunc i64 %3025 to i32
  %3029 = shl i32 %3028, 1
  %3030 = icmp slt i32 %3028, 0
  %3031 = icmp slt i32 %3029, 0
  %3032 = xor i1 %3030, %3031
  %3033 = zext i32 %3029 to i64
  store i64 %3033, i64* %RDX.i1103, align 8
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3035 = zext i1 %3030 to i8
  store i8 %3035, i8* %3034, align 1
  %3036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3037 = and i32 %3029, 254
  %3038 = call i32 @llvm.ctpop.i32(i32 %3037)
  %3039 = trunc i32 %3038 to i8
  %3040 = and i8 %3039, 1
  %3041 = xor i8 %3040, 1
  store i8 %3041, i8* %3036, align 1
  %3042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3042, align 1
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3044 = icmp eq i32 %3029, 0
  %3045 = zext i1 %3044 to i8
  store i8 %3045, i8* %3043, align 1
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3047 = lshr i32 %3029, 31
  %3048 = trunc i32 %3047 to i8
  store i8 %3048, i8* %3046, align 1
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3050 = zext i1 %3032 to i8
  store i8 %3050, i8* %3049, align 1
  store %struct.Memory* %loadMem_40f75c, %struct.Memory** %MEMORY
  %loadMem_40f75f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 33
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %3053 to i64*
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 7
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %EDX.i1100 = bitcast %union.anon* %3056 to i32*
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3058 = getelementptr inbounds %struct.GPR, %struct.GPR* %3057, i32 0, i32 1
  %3059 = getelementptr inbounds %struct.Reg, %struct.Reg* %3058, i32 0, i32 0
  %RAX.i1101 = bitcast %union.anon* %3059 to i64*
  %3060 = load i64, i64* %RAX.i1101
  %3061 = load i32, i32* %EDX.i1100
  %3062 = zext i32 %3061 to i64
  %3063 = load i64, i64* %PC.i1099
  %3064 = add i64 %3063, 2
  store i64 %3064, i64* %PC.i1099
  %3065 = trunc i64 %3060 to i32
  %3066 = sub i32 %3065, %3061
  %3067 = zext i32 %3066 to i64
  store i64 %3067, i64* %RAX.i1101, align 8
  %3068 = icmp ult i32 %3065, %3061
  %3069 = zext i1 %3068 to i8
  %3070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3069, i8* %3070, align 1
  %3071 = and i32 %3066, 255
  %3072 = call i32 @llvm.ctpop.i32(i32 %3071)
  %3073 = trunc i32 %3072 to i8
  %3074 = and i8 %3073, 1
  %3075 = xor i8 %3074, 1
  %3076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3075, i8* %3076, align 1
  %3077 = xor i64 %3062, %3060
  %3078 = trunc i64 %3077 to i32
  %3079 = xor i32 %3078, %3066
  %3080 = lshr i32 %3079, 4
  %3081 = trunc i32 %3080 to i8
  %3082 = and i8 %3081, 1
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3082, i8* %3083, align 1
  %3084 = icmp eq i32 %3066, 0
  %3085 = zext i1 %3084 to i8
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3085, i8* %3086, align 1
  %3087 = lshr i32 %3066, 31
  %3088 = trunc i32 %3087 to i8
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3088, i8* %3089, align 1
  %3090 = lshr i32 %3065, 31
  %3091 = lshr i32 %3061, 31
  %3092 = xor i32 %3091, %3090
  %3093 = xor i32 %3087, %3090
  %3094 = add i32 %3093, %3092
  %3095 = icmp eq i32 %3094, 2
  %3096 = zext i1 %3095 to i8
  %3097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3096, i8* %3097, align 1
  store %struct.Memory* %loadMem_40f75f, %struct.Memory** %MEMORY
  %loadMem_40f761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3099 = getelementptr inbounds %struct.GPR, %struct.GPR* %3098, i32 0, i32 33
  %3100 = getelementptr inbounds %struct.Reg, %struct.Reg* %3099, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %3100 to i64*
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3102 = getelementptr inbounds %struct.GPR, %struct.GPR* %3101, i32 0, i32 5
  %3103 = getelementptr inbounds %struct.Reg, %struct.Reg* %3102, i32 0, i32 0
  %RCX.i1097 = bitcast %union.anon* %3103 to i64*
  %3104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3105 = getelementptr inbounds %struct.GPR, %struct.GPR* %3104, i32 0, i32 15
  %3106 = getelementptr inbounds %struct.Reg, %struct.Reg* %3105, i32 0, i32 0
  %RBP.i1098 = bitcast %union.anon* %3106 to i64*
  %3107 = load i64, i64* %RBP.i1098
  %3108 = sub i64 %3107, 16
  %3109 = load i64, i64* %PC.i1096
  %3110 = add i64 %3109, 4
  store i64 %3110, i64* %PC.i1096
  %3111 = inttoptr i64 %3108 to i32*
  %3112 = load i32, i32* %3111
  %3113 = sext i32 %3112 to i64
  store i64 %3113, i64* %RCX.i1097, align 8
  store %struct.Memory* %loadMem_40f761, %struct.Memory** %MEMORY
  %loadMem_40f765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3115 = getelementptr inbounds %struct.GPR, %struct.GPR* %3114, i32 0, i32 33
  %3116 = getelementptr inbounds %struct.Reg, %struct.Reg* %3115, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %3116 to i64*
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3118 = getelementptr inbounds %struct.GPR, %struct.GPR* %3117, i32 0, i32 1
  %3119 = getelementptr inbounds %struct.Reg, %struct.Reg* %3118, i32 0, i32 0
  %EAX.i1093 = bitcast %union.anon* %3119 to i32*
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3121 = getelementptr inbounds %struct.GPR, %struct.GPR* %3120, i32 0, i32 5
  %3122 = getelementptr inbounds %struct.Reg, %struct.Reg* %3121, i32 0, i32 0
  %RCX.i1094 = bitcast %union.anon* %3122 to i64*
  %3123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3124 = getelementptr inbounds %struct.GPR, %struct.GPR* %3123, i32 0, i32 15
  %3125 = getelementptr inbounds %struct.Reg, %struct.Reg* %3124, i32 0, i32 0
  %RBP.i1095 = bitcast %union.anon* %3125 to i64*
  %3126 = load i64, i64* %RBP.i1095
  %3127 = load i64, i64* %RCX.i1094
  %3128 = mul i64 %3127, 4
  %3129 = add i64 %3126, -96
  %3130 = add i64 %3129, %3128
  %3131 = load i32, i32* %EAX.i1093
  %3132 = zext i32 %3131 to i64
  %3133 = load i64, i64* %PC.i1092
  %3134 = add i64 %3133, 4
  store i64 %3134, i64* %PC.i1092
  %3135 = inttoptr i64 %3130 to i32*
  store i32 %3131, i32* %3135
  store %struct.Memory* %loadMem_40f765, %struct.Memory** %MEMORY
  %loadMem_40f769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 33
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %3138 to i64*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 1
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %RAX.i1090 = bitcast %union.anon* %3141 to i64*
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3143 = getelementptr inbounds %struct.GPR, %struct.GPR* %3142, i32 0, i32 15
  %3144 = getelementptr inbounds %struct.Reg, %struct.Reg* %3143, i32 0, i32 0
  %RBP.i1091 = bitcast %union.anon* %3144 to i64*
  %3145 = load i64, i64* %RBP.i1091
  %3146 = sub i64 %3145, 16
  %3147 = load i64, i64* %PC.i1089
  %3148 = add i64 %3147, 3
  store i64 %3148, i64* %PC.i1089
  %3149 = inttoptr i64 %3146 to i32*
  %3150 = load i32, i32* %3149
  %3151 = zext i32 %3150 to i64
  store i64 %3151, i64* %RAX.i1090, align 8
  store %struct.Memory* %loadMem_40f769, %struct.Memory** %MEMORY
  %loadMem_40f76c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3153 = getelementptr inbounds %struct.GPR, %struct.GPR* %3152, i32 0, i32 33
  %3154 = getelementptr inbounds %struct.Reg, %struct.Reg* %3153, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %3154 to i64*
  %3155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3156 = getelementptr inbounds %struct.GPR, %struct.GPR* %3155, i32 0, i32 1
  %3157 = getelementptr inbounds %struct.Reg, %struct.Reg* %3156, i32 0, i32 0
  %RAX.i1088 = bitcast %union.anon* %3157 to i64*
  %3158 = load i64, i64* %RAX.i1088
  %3159 = load i64, i64* %PC.i1087
  %3160 = add i64 %3159, 3
  store i64 %3160, i64* %PC.i1087
  %3161 = trunc i64 %3158 to i32
  %3162 = add i32 1, %3161
  %3163 = zext i32 %3162 to i64
  store i64 %3163, i64* %RAX.i1088, align 8
  %3164 = icmp ult i32 %3162, %3161
  %3165 = icmp ult i32 %3162, 1
  %3166 = or i1 %3164, %3165
  %3167 = zext i1 %3166 to i8
  %3168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3167, i8* %3168, align 1
  %3169 = and i32 %3162, 255
  %3170 = call i32 @llvm.ctpop.i32(i32 %3169)
  %3171 = trunc i32 %3170 to i8
  %3172 = and i8 %3171, 1
  %3173 = xor i8 %3172, 1
  %3174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3173, i8* %3174, align 1
  %3175 = xor i64 1, %3158
  %3176 = trunc i64 %3175 to i32
  %3177 = xor i32 %3176, %3162
  %3178 = lshr i32 %3177, 4
  %3179 = trunc i32 %3178 to i8
  %3180 = and i8 %3179, 1
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3180, i8* %3181, align 1
  %3182 = icmp eq i32 %3162, 0
  %3183 = zext i1 %3182 to i8
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3183, i8* %3184, align 1
  %3185 = lshr i32 %3162, 31
  %3186 = trunc i32 %3185 to i8
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3186, i8* %3187, align 1
  %3188 = lshr i32 %3161, 31
  %3189 = xor i32 %3185, %3188
  %3190 = add i32 %3189, %3185
  %3191 = icmp eq i32 %3190, 2
  %3192 = zext i1 %3191 to i8
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3192, i8* %3193, align 1
  store %struct.Memory* %loadMem_40f76c, %struct.Memory** %MEMORY
  %loadMem_40f76f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3195 = getelementptr inbounds %struct.GPR, %struct.GPR* %3194, i32 0, i32 33
  %3196 = getelementptr inbounds %struct.Reg, %struct.Reg* %3195, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %3196 to i64*
  %3197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3198 = getelementptr inbounds %struct.GPR, %struct.GPR* %3197, i32 0, i32 1
  %3199 = getelementptr inbounds %struct.Reg, %struct.Reg* %3198, i32 0, i32 0
  %EAX.i1085 = bitcast %union.anon* %3199 to i32*
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3201 = getelementptr inbounds %struct.GPR, %struct.GPR* %3200, i32 0, i32 15
  %3202 = getelementptr inbounds %struct.Reg, %struct.Reg* %3201, i32 0, i32 0
  %RBP.i1086 = bitcast %union.anon* %3202 to i64*
  %3203 = load i64, i64* %RBP.i1086
  %3204 = sub i64 %3203, 16
  %3205 = load i32, i32* %EAX.i1085
  %3206 = zext i32 %3205 to i64
  %3207 = load i64, i64* %PC.i1084
  %3208 = add i64 %3207, 3
  store i64 %3208, i64* %PC.i1084
  %3209 = inttoptr i64 %3204 to i32*
  store i32 %3205, i32* %3209
  store %struct.Memory* %loadMem_40f76f, %struct.Memory** %MEMORY
  %loadMem_40f772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3211 = getelementptr inbounds %struct.GPR, %struct.GPR* %3210, i32 0, i32 33
  %3212 = getelementptr inbounds %struct.Reg, %struct.Reg* %3211, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %3212 to i64*
  %3213 = load i64, i64* %PC.i1083
  %3214 = add i64 %3213, -232
  %3215 = load i64, i64* %PC.i1083
  %3216 = add i64 %3215, 5
  store i64 %3216, i64* %PC.i1083
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3214, i64* %3217, align 8
  store %struct.Memory* %loadMem_40f772, %struct.Memory** %MEMORY
  br label %block_.L_40f68a

block_.L_40f777:                                  ; preds = %block_.L_40f68a
  %loadMem_40f777 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3219 = getelementptr inbounds %struct.GPR, %struct.GPR* %3218, i32 0, i32 33
  %3220 = getelementptr inbounds %struct.Reg, %struct.Reg* %3219, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %3220 to i64*
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3222 = getelementptr inbounds %struct.GPR, %struct.GPR* %3221, i32 0, i32 15
  %3223 = getelementptr inbounds %struct.Reg, %struct.Reg* %3222, i32 0, i32 0
  %RBP.i1082 = bitcast %union.anon* %3223 to i64*
  %3224 = load i64, i64* %RBP.i1082
  %3225 = sub i64 %3224, 12
  %3226 = load i64, i64* %PC.i1081
  %3227 = add i64 %3226, 7
  store i64 %3227, i64* %PC.i1081
  %3228 = inttoptr i64 %3225 to i32*
  store i32 0, i32* %3228
  store %struct.Memory* %loadMem_40f777, %struct.Memory** %MEMORY
  br label %block_.L_40f77e

block_.L_40f77e:                                  ; preds = %block_.L_40f81a, %block_.L_40f777
  %loadMem_40f77e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3230 = getelementptr inbounds %struct.GPR, %struct.GPR* %3229, i32 0, i32 33
  %3231 = getelementptr inbounds %struct.Reg, %struct.Reg* %3230, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %3231 to i64*
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3233 = getelementptr inbounds %struct.GPR, %struct.GPR* %3232, i32 0, i32 15
  %3234 = getelementptr inbounds %struct.Reg, %struct.Reg* %3233, i32 0, i32 0
  %RBP.i1080 = bitcast %union.anon* %3234 to i64*
  %3235 = load i64, i64* %RBP.i1080
  %3236 = sub i64 %3235, 12
  %3237 = load i64, i64* %PC.i1079
  %3238 = add i64 %3237, 4
  store i64 %3238, i64* %PC.i1079
  %3239 = inttoptr i64 %3236 to i32*
  %3240 = load i32, i32* %3239
  %3241 = sub i32 %3240, 4
  %3242 = icmp ult i32 %3240, 4
  %3243 = zext i1 %3242 to i8
  %3244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3243, i8* %3244, align 1
  %3245 = and i32 %3241, 255
  %3246 = call i32 @llvm.ctpop.i32(i32 %3245)
  %3247 = trunc i32 %3246 to i8
  %3248 = and i8 %3247, 1
  %3249 = xor i8 %3248, 1
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3249, i8* %3250, align 1
  %3251 = xor i32 %3240, 4
  %3252 = xor i32 %3251, %3241
  %3253 = lshr i32 %3252, 4
  %3254 = trunc i32 %3253 to i8
  %3255 = and i8 %3254, 1
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3255, i8* %3256, align 1
  %3257 = icmp eq i32 %3241, 0
  %3258 = zext i1 %3257 to i8
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3258, i8* %3259, align 1
  %3260 = lshr i32 %3241, 31
  %3261 = trunc i32 %3260 to i8
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3261, i8* %3262, align 1
  %3263 = lshr i32 %3240, 31
  %3264 = xor i32 %3260, %3263
  %3265 = add i32 %3264, %3263
  %3266 = icmp eq i32 %3265, 2
  %3267 = zext i1 %3266 to i8
  %3268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3267, i8* %3268, align 1
  store %struct.Memory* %loadMem_40f77e, %struct.Memory** %MEMORY
  %loadMem_40f782 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3270 = getelementptr inbounds %struct.GPR, %struct.GPR* %3269, i32 0, i32 33
  %3271 = getelementptr inbounds %struct.Reg, %struct.Reg* %3270, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %3271 to i64*
  %3272 = load i64, i64* %PC.i1078
  %3273 = add i64 %3272, 269
  %3274 = load i64, i64* %PC.i1078
  %3275 = add i64 %3274, 6
  %3276 = load i64, i64* %PC.i1078
  %3277 = add i64 %3276, 6
  store i64 %3277, i64* %PC.i1078
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3279 = load i8, i8* %3278, align 1
  %3280 = icmp ne i8 %3279, 0
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3282 = load i8, i8* %3281, align 1
  %3283 = icmp ne i8 %3282, 0
  %3284 = xor i1 %3280, %3283
  %3285 = xor i1 %3284, true
  %3286 = zext i1 %3285 to i8
  store i8 %3286, i8* %BRANCH_TAKEN, align 1
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3288 = select i1 %3284, i64 %3275, i64 %3273
  store i64 %3288, i64* %3287, align 8
  store %struct.Memory* %loadMem_40f782, %struct.Memory** %MEMORY
  %loadBr_40f782 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f782 = icmp eq i8 %loadBr_40f782, 1
  br i1 %cmpBr_40f782, label %block_.L_40f88f, label %block_40f788

block_40f788:                                     ; preds = %block_.L_40f77e
  %loadMem_40f788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3290 = getelementptr inbounds %struct.GPR, %struct.GPR* %3289, i32 0, i32 33
  %3291 = getelementptr inbounds %struct.Reg, %struct.Reg* %3290, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %3291 to i64*
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3293 = getelementptr inbounds %struct.GPR, %struct.GPR* %3292, i32 0, i32 15
  %3294 = getelementptr inbounds %struct.Reg, %struct.Reg* %3293, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %3294 to i64*
  %3295 = load i64, i64* %RBP.i1077
  %3296 = sub i64 %3295, 16
  %3297 = load i64, i64* %PC.i1076
  %3298 = add i64 %3297, 7
  store i64 %3298, i64* %PC.i1076
  %3299 = inttoptr i64 %3296 to i32*
  store i32 0, i32* %3299
  store %struct.Memory* %loadMem_40f788, %struct.Memory** %MEMORY
  br label %block_.L_40f78f

block_.L_40f78f:                                  ; preds = %block_40f799, %block_40f788
  %loadMem_40f78f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3301 = getelementptr inbounds %struct.GPR, %struct.GPR* %3300, i32 0, i32 33
  %3302 = getelementptr inbounds %struct.Reg, %struct.Reg* %3301, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %3302 to i64*
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3304 = getelementptr inbounds %struct.GPR, %struct.GPR* %3303, i32 0, i32 15
  %3305 = getelementptr inbounds %struct.Reg, %struct.Reg* %3304, i32 0, i32 0
  %RBP.i1075 = bitcast %union.anon* %3305 to i64*
  %3306 = load i64, i64* %RBP.i1075
  %3307 = sub i64 %3306, 16
  %3308 = load i64, i64* %PC.i1074
  %3309 = add i64 %3308, 4
  store i64 %3309, i64* %PC.i1074
  %3310 = inttoptr i64 %3307 to i32*
  %3311 = load i32, i32* %3310
  %3312 = sub i32 %3311, 2
  %3313 = icmp ult i32 %3311, 2
  %3314 = zext i1 %3313 to i8
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3314, i8* %3315, align 1
  %3316 = and i32 %3312, 255
  %3317 = call i32 @llvm.ctpop.i32(i32 %3316)
  %3318 = trunc i32 %3317 to i8
  %3319 = and i8 %3318, 1
  %3320 = xor i8 %3319, 1
  %3321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3320, i8* %3321, align 1
  %3322 = xor i32 %3311, 2
  %3323 = xor i32 %3322, %3312
  %3324 = lshr i32 %3323, 4
  %3325 = trunc i32 %3324 to i8
  %3326 = and i8 %3325, 1
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3326, i8* %3327, align 1
  %3328 = icmp eq i32 %3312, 0
  %3329 = zext i1 %3328 to i8
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3329, i8* %3330, align 1
  %3331 = lshr i32 %3312, 31
  %3332 = trunc i32 %3331 to i8
  %3333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3332, i8* %3333, align 1
  %3334 = lshr i32 %3311, 31
  %3335 = xor i32 %3331, %3334
  %3336 = add i32 %3335, %3334
  %3337 = icmp eq i32 %3336, 2
  %3338 = zext i1 %3337 to i8
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3338, i8* %3339, align 1
  store %struct.Memory* %loadMem_40f78f, %struct.Memory** %MEMORY
  %loadMem_40f793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3341 = getelementptr inbounds %struct.GPR, %struct.GPR* %3340, i32 0, i32 33
  %3342 = getelementptr inbounds %struct.Reg, %struct.Reg* %3341, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %3342 to i64*
  %3343 = load i64, i64* %PC.i1073
  %3344 = add i64 %3343, 135
  %3345 = load i64, i64* %PC.i1073
  %3346 = add i64 %3345, 6
  %3347 = load i64, i64* %PC.i1073
  %3348 = add i64 %3347, 6
  store i64 %3348, i64* %PC.i1073
  %3349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3350 = load i8, i8* %3349, align 1
  %3351 = icmp ne i8 %3350, 0
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3353 = load i8, i8* %3352, align 1
  %3354 = icmp ne i8 %3353, 0
  %3355 = xor i1 %3351, %3354
  %3356 = xor i1 %3355, true
  %3357 = zext i1 %3356 to i8
  store i8 %3357, i8* %BRANCH_TAKEN, align 1
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3359 = select i1 %3355, i64 %3346, i64 %3344
  store i64 %3359, i64* %3358, align 8
  store %struct.Memory* %loadMem_40f793, %struct.Memory** %MEMORY
  %loadBr_40f793 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f793 = icmp eq i8 %loadBr_40f793, 1
  br i1 %cmpBr_40f793, label %block_.L_40f81a, label %block_40f799

block_40f799:                                     ; preds = %block_.L_40f78f
  %loadMem_40f799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3361 = getelementptr inbounds %struct.GPR, %struct.GPR* %3360, i32 0, i32 33
  %3362 = getelementptr inbounds %struct.Reg, %struct.Reg* %3361, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %3362 to i64*
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3364 = getelementptr inbounds %struct.GPR, %struct.GPR* %3363, i32 0, i32 1
  %3365 = getelementptr inbounds %struct.Reg, %struct.Reg* %3364, i32 0, i32 0
  %RAX.i1071 = bitcast %union.anon* %3365 to i64*
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3367 = getelementptr inbounds %struct.GPR, %struct.GPR* %3366, i32 0, i32 15
  %3368 = getelementptr inbounds %struct.Reg, %struct.Reg* %3367, i32 0, i32 0
  %RBP.i1072 = bitcast %union.anon* %3368 to i64*
  %3369 = load i64, i64* %RBP.i1072
  %3370 = sub i64 %3369, 144
  %3371 = load i64, i64* %PC.i1070
  %3372 = add i64 %3371, 7
  store i64 %3372, i64* %PC.i1070
  store i64 %3370, i64* %RAX.i1071, align 8
  store %struct.Memory* %loadMem_40f799, %struct.Memory** %MEMORY
  %loadMem_40f7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3374 = getelementptr inbounds %struct.GPR, %struct.GPR* %3373, i32 0, i32 33
  %3375 = getelementptr inbounds %struct.Reg, %struct.Reg* %3374, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %3375 to i64*
  %3376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3377 = getelementptr inbounds %struct.GPR, %struct.GPR* %3376, i32 0, i32 5
  %3378 = getelementptr inbounds %struct.Reg, %struct.Reg* %3377, i32 0, i32 0
  %RCX.i1069 = bitcast %union.anon* %3378 to i64*
  %3379 = load i64, i64* %PC.i1068
  %3380 = add i64 %3379, 5
  store i64 %3380, i64* %PC.i1068
  store i64 3, i64* %RCX.i1069, align 8
  store %struct.Memory* %loadMem_40f7a0, %struct.Memory** %MEMORY
  %loadMem_40f7a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3382 = getelementptr inbounds %struct.GPR, %struct.GPR* %3381, i32 0, i32 33
  %3383 = getelementptr inbounds %struct.Reg, %struct.Reg* %3382, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %3383 to i64*
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3385 = getelementptr inbounds %struct.GPR, %struct.GPR* %3384, i32 0, i32 5
  %3386 = getelementptr inbounds %struct.Reg, %struct.Reg* %3385, i32 0, i32 0
  %RCX.i1066 = bitcast %union.anon* %3386 to i64*
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3388 = getelementptr inbounds %struct.GPR, %struct.GPR* %3387, i32 0, i32 15
  %3389 = getelementptr inbounds %struct.Reg, %struct.Reg* %3388, i32 0, i32 0
  %RBP.i1067 = bitcast %union.anon* %3389 to i64*
  %3390 = load i64, i64* %RCX.i1066
  %3391 = load i64, i64* %RBP.i1067
  %3392 = sub i64 %3391, 16
  %3393 = load i64, i64* %PC.i1065
  %3394 = add i64 %3393, 3
  store i64 %3394, i64* %PC.i1065
  %3395 = trunc i64 %3390 to i32
  %3396 = inttoptr i64 %3392 to i32*
  %3397 = load i32, i32* %3396
  %3398 = sub i32 %3395, %3397
  %3399 = zext i32 %3398 to i64
  store i64 %3399, i64* %RCX.i1066, align 8
  %3400 = icmp ult i32 %3395, %3397
  %3401 = zext i1 %3400 to i8
  %3402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3401, i8* %3402, align 1
  %3403 = and i32 %3398, 255
  %3404 = call i32 @llvm.ctpop.i32(i32 %3403)
  %3405 = trunc i32 %3404 to i8
  %3406 = and i8 %3405, 1
  %3407 = xor i8 %3406, 1
  %3408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3407, i8* %3408, align 1
  %3409 = xor i32 %3397, %3395
  %3410 = xor i32 %3409, %3398
  %3411 = lshr i32 %3410, 4
  %3412 = trunc i32 %3411 to i8
  %3413 = and i8 %3412, 1
  %3414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3413, i8* %3414, align 1
  %3415 = icmp eq i32 %3398, 0
  %3416 = zext i1 %3415 to i8
  %3417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3416, i8* %3417, align 1
  %3418 = lshr i32 %3398, 31
  %3419 = trunc i32 %3418 to i8
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3419, i8* %3420, align 1
  %3421 = lshr i32 %3395, 31
  %3422 = lshr i32 %3397, 31
  %3423 = xor i32 %3422, %3421
  %3424 = xor i32 %3418, %3421
  %3425 = add i32 %3424, %3423
  %3426 = icmp eq i32 %3425, 2
  %3427 = zext i1 %3426 to i8
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3427, i8* %3428, align 1
  store %struct.Memory* %loadMem_40f7a5, %struct.Memory** %MEMORY
  %loadMem_40f7a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3430 = getelementptr inbounds %struct.GPR, %struct.GPR* %3429, i32 0, i32 33
  %3431 = getelementptr inbounds %struct.Reg, %struct.Reg* %3430, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %3431 to i64*
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3433 = getelementptr inbounds %struct.GPR, %struct.GPR* %3432, i32 0, i32 5
  %3434 = getelementptr inbounds %struct.Reg, %struct.Reg* %3433, i32 0, i32 0
  %ECX.i1063 = bitcast %union.anon* %3434 to i32*
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 15
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %RBP.i1064 = bitcast %union.anon* %3437 to i64*
  %3438 = load i64, i64* %RBP.i1064
  %3439 = sub i64 %3438, 24
  %3440 = load i32, i32* %ECX.i1063
  %3441 = zext i32 %3440 to i64
  %3442 = load i64, i64* %PC.i1062
  %3443 = add i64 %3442, 3
  store i64 %3443, i64* %PC.i1062
  %3444 = inttoptr i64 %3439 to i32*
  store i32 %3440, i32* %3444
  store %struct.Memory* %loadMem_40f7a8, %struct.Memory** %MEMORY
  %loadMem_40f7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3446 = getelementptr inbounds %struct.GPR, %struct.GPR* %3445, i32 0, i32 33
  %3447 = getelementptr inbounds %struct.Reg, %struct.Reg* %3446, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %3447 to i64*
  %3448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3449 = getelementptr inbounds %struct.GPR, %struct.GPR* %3448, i32 0, i32 7
  %3450 = getelementptr inbounds %struct.Reg, %struct.Reg* %3449, i32 0, i32 0
  %RDX.i1060 = bitcast %union.anon* %3450 to i64*
  %3451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3452 = getelementptr inbounds %struct.GPR, %struct.GPR* %3451, i32 0, i32 15
  %3453 = getelementptr inbounds %struct.Reg, %struct.Reg* %3452, i32 0, i32 0
  %RBP.i1061 = bitcast %union.anon* %3453 to i64*
  %3454 = load i64, i64* %RBP.i1061
  %3455 = sub i64 %3454, 12
  %3456 = load i64, i64* %PC.i1059
  %3457 = add i64 %3456, 4
  store i64 %3457, i64* %PC.i1059
  %3458 = inttoptr i64 %3455 to i32*
  %3459 = load i32, i32* %3458
  %3460 = sext i32 %3459 to i64
  store i64 %3460, i64* %RDX.i1060, align 8
  store %struct.Memory* %loadMem_40f7ab, %struct.Memory** %MEMORY
  %loadMem_40f7af = load %struct.Memory*, %struct.Memory** %MEMORY
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3462 = getelementptr inbounds %struct.GPR, %struct.GPR* %3461, i32 0, i32 33
  %3463 = getelementptr inbounds %struct.Reg, %struct.Reg* %3462, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %3463 to i64*
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3465 = getelementptr inbounds %struct.GPR, %struct.GPR* %3464, i32 0, i32 7
  %3466 = getelementptr inbounds %struct.Reg, %struct.Reg* %3465, i32 0, i32 0
  %RDX.i1058 = bitcast %union.anon* %3466 to i64*
  %3467 = load i64, i64* %RDX.i1058
  %3468 = load i64, i64* %PC.i1057
  %3469 = add i64 %3468, 4
  store i64 %3469, i64* %PC.i1057
  %3470 = shl i64 %3467, 3
  %3471 = icmp slt i64 %3470, 0
  %3472 = shl i64 %3470, 1
  store i64 %3472, i64* %RDX.i1058, align 8
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3474 = zext i1 %3471 to i8
  store i8 %3474, i8* %3473, align 1
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3476 = trunc i64 %3472 to i32
  %3477 = and i32 %3476, 254
  %3478 = call i32 @llvm.ctpop.i32(i32 %3477)
  %3479 = trunc i32 %3478 to i8
  %3480 = and i8 %3479, 1
  %3481 = xor i8 %3480, 1
  store i8 %3481, i8* %3475, align 1
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3482, align 1
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3484 = icmp eq i64 %3472, 0
  %3485 = zext i1 %3484 to i8
  store i8 %3485, i8* %3483, align 1
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3487 = lshr i64 %3472, 63
  %3488 = trunc i64 %3487 to i8
  store i8 %3488, i8* %3486, align 1
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3489, align 1
  store %struct.Memory* %loadMem_40f7af, %struct.Memory** %MEMORY
  %loadMem_40f7b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3491 = getelementptr inbounds %struct.GPR, %struct.GPR* %3490, i32 0, i32 33
  %3492 = getelementptr inbounds %struct.Reg, %struct.Reg* %3491, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %3492 to i64*
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3494 = getelementptr inbounds %struct.GPR, %struct.GPR* %3493, i32 0, i32 1
  %3495 = getelementptr inbounds %struct.Reg, %struct.Reg* %3494, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %3495 to i64*
  %3496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3497 = getelementptr inbounds %struct.GPR, %struct.GPR* %3496, i32 0, i32 9
  %3498 = getelementptr inbounds %struct.Reg, %struct.Reg* %3497, i32 0, i32 0
  %RSI.i1056 = bitcast %union.anon* %3498 to i64*
  %3499 = load i64, i64* %RAX.i1055
  %3500 = load i64, i64* %PC.i1054
  %3501 = add i64 %3500, 3
  store i64 %3501, i64* %PC.i1054
  store i64 %3499, i64* %RSI.i1056, align 8
  store %struct.Memory* %loadMem_40f7b3, %struct.Memory** %MEMORY
  %loadMem_40f7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3503 = getelementptr inbounds %struct.GPR, %struct.GPR* %3502, i32 0, i32 33
  %3504 = getelementptr inbounds %struct.Reg, %struct.Reg* %3503, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %3504 to i64*
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 7
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %RDX.i1052 = bitcast %union.anon* %3507 to i64*
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 9
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %RSI.i1053 = bitcast %union.anon* %3510 to i64*
  %3511 = load i64, i64* %RSI.i1053
  %3512 = load i64, i64* %RDX.i1052
  %3513 = load i64, i64* %PC.i1051
  %3514 = add i64 %3513, 3
  store i64 %3514, i64* %PC.i1051
  %3515 = add i64 %3512, %3511
  store i64 %3515, i64* %RSI.i1053, align 8
  %3516 = icmp ult i64 %3515, %3511
  %3517 = icmp ult i64 %3515, %3512
  %3518 = or i1 %3516, %3517
  %3519 = zext i1 %3518 to i8
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3519, i8* %3520, align 1
  %3521 = trunc i64 %3515 to i32
  %3522 = and i32 %3521, 255
  %3523 = call i32 @llvm.ctpop.i32(i32 %3522)
  %3524 = trunc i32 %3523 to i8
  %3525 = and i8 %3524, 1
  %3526 = xor i8 %3525, 1
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3526, i8* %3527, align 1
  %3528 = xor i64 %3512, %3511
  %3529 = xor i64 %3528, %3515
  %3530 = lshr i64 %3529, 4
  %3531 = trunc i64 %3530 to i8
  %3532 = and i8 %3531, 1
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3532, i8* %3533, align 1
  %3534 = icmp eq i64 %3515, 0
  %3535 = zext i1 %3534 to i8
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3535, i8* %3536, align 1
  %3537 = lshr i64 %3515, 63
  %3538 = trunc i64 %3537 to i8
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3538, i8* %3539, align 1
  %3540 = lshr i64 %3511, 63
  %3541 = lshr i64 %3512, 63
  %3542 = xor i64 %3537, %3540
  %3543 = xor i64 %3537, %3541
  %3544 = add i64 %3542, %3543
  %3545 = icmp eq i64 %3544, 2
  %3546 = zext i1 %3545 to i8
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3546, i8* %3547, align 1
  store %struct.Memory* %loadMem_40f7b6, %struct.Memory** %MEMORY
  %loadMem_40f7b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3549 = getelementptr inbounds %struct.GPR, %struct.GPR* %3548, i32 0, i32 33
  %3550 = getelementptr inbounds %struct.Reg, %struct.Reg* %3549, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %3550 to i64*
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3552 = getelementptr inbounds %struct.GPR, %struct.GPR* %3551, i32 0, i32 7
  %3553 = getelementptr inbounds %struct.Reg, %struct.Reg* %3552, i32 0, i32 0
  %RDX.i1049 = bitcast %union.anon* %3553 to i64*
  %3554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3555 = getelementptr inbounds %struct.GPR, %struct.GPR* %3554, i32 0, i32 15
  %3556 = getelementptr inbounds %struct.Reg, %struct.Reg* %3555, i32 0, i32 0
  %RBP.i1050 = bitcast %union.anon* %3556 to i64*
  %3557 = load i64, i64* %RBP.i1050
  %3558 = sub i64 %3557, 16
  %3559 = load i64, i64* %PC.i1048
  %3560 = add i64 %3559, 4
  store i64 %3560, i64* %PC.i1048
  %3561 = inttoptr i64 %3558 to i32*
  %3562 = load i32, i32* %3561
  %3563 = sext i32 %3562 to i64
  store i64 %3563, i64* %RDX.i1049, align 8
  store %struct.Memory* %loadMem_40f7b9, %struct.Memory** %MEMORY
  %loadMem_40f7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3565 = getelementptr inbounds %struct.GPR, %struct.GPR* %3564, i32 0, i32 33
  %3566 = getelementptr inbounds %struct.Reg, %struct.Reg* %3565, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %3566 to i64*
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3568 = getelementptr inbounds %struct.GPR, %struct.GPR* %3567, i32 0, i32 5
  %3569 = getelementptr inbounds %struct.Reg, %struct.Reg* %3568, i32 0, i32 0
  %RCX.i1045 = bitcast %union.anon* %3569 to i64*
  %3570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3571 = getelementptr inbounds %struct.GPR, %struct.GPR* %3570, i32 0, i32 7
  %3572 = getelementptr inbounds %struct.Reg, %struct.Reg* %3571, i32 0, i32 0
  %RDX.i1046 = bitcast %union.anon* %3572 to i64*
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3574 = getelementptr inbounds %struct.GPR, %struct.GPR* %3573, i32 0, i32 9
  %3575 = getelementptr inbounds %struct.Reg, %struct.Reg* %3574, i32 0, i32 0
  %RSI.i1047 = bitcast %union.anon* %3575 to i64*
  %3576 = load i64, i64* %RSI.i1047
  %3577 = load i64, i64* %RDX.i1046
  %3578 = mul i64 %3577, 4
  %3579 = add i64 %3578, %3576
  %3580 = load i64, i64* %PC.i1044
  %3581 = add i64 %3580, 3
  store i64 %3581, i64* %PC.i1044
  %3582 = inttoptr i64 %3579 to i32*
  %3583 = load i32, i32* %3582
  %3584 = zext i32 %3583 to i64
  store i64 %3584, i64* %RCX.i1045, align 8
  store %struct.Memory* %loadMem_40f7bd, %struct.Memory** %MEMORY
  %loadMem_40f7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3586 = getelementptr inbounds %struct.GPR, %struct.GPR* %3585, i32 0, i32 33
  %3587 = getelementptr inbounds %struct.Reg, %struct.Reg* %3586, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %3587 to i64*
  %3588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3589 = getelementptr inbounds %struct.GPR, %struct.GPR* %3588, i32 0, i32 7
  %3590 = getelementptr inbounds %struct.Reg, %struct.Reg* %3589, i32 0, i32 0
  %RDX.i1042 = bitcast %union.anon* %3590 to i64*
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3592 = getelementptr inbounds %struct.GPR, %struct.GPR* %3591, i32 0, i32 15
  %3593 = getelementptr inbounds %struct.Reg, %struct.Reg* %3592, i32 0, i32 0
  %RBP.i1043 = bitcast %union.anon* %3593 to i64*
  %3594 = load i64, i64* %RBP.i1043
  %3595 = sub i64 %3594, 12
  %3596 = load i64, i64* %PC.i1041
  %3597 = add i64 %3596, 4
  store i64 %3597, i64* %PC.i1041
  %3598 = inttoptr i64 %3595 to i32*
  %3599 = load i32, i32* %3598
  %3600 = sext i32 %3599 to i64
  store i64 %3600, i64* %RDX.i1042, align 8
  store %struct.Memory* %loadMem_40f7c0, %struct.Memory** %MEMORY
  %loadMem_40f7c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3602 = getelementptr inbounds %struct.GPR, %struct.GPR* %3601, i32 0, i32 33
  %3603 = getelementptr inbounds %struct.Reg, %struct.Reg* %3602, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %3603 to i64*
  %3604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3605 = getelementptr inbounds %struct.GPR, %struct.GPR* %3604, i32 0, i32 7
  %3606 = getelementptr inbounds %struct.Reg, %struct.Reg* %3605, i32 0, i32 0
  %RDX.i1040 = bitcast %union.anon* %3606 to i64*
  %3607 = load i64, i64* %RDX.i1040
  %3608 = load i64, i64* %PC.i1039
  %3609 = add i64 %3608, 4
  store i64 %3609, i64* %PC.i1039
  %3610 = shl i64 %3607, 3
  %3611 = icmp slt i64 %3610, 0
  %3612 = shl i64 %3610, 1
  store i64 %3612, i64* %RDX.i1040, align 8
  %3613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3614 = zext i1 %3611 to i8
  store i8 %3614, i8* %3613, align 1
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3616 = trunc i64 %3612 to i32
  %3617 = and i32 %3616, 254
  %3618 = call i32 @llvm.ctpop.i32(i32 %3617)
  %3619 = trunc i32 %3618 to i8
  %3620 = and i8 %3619, 1
  %3621 = xor i8 %3620, 1
  store i8 %3621, i8* %3615, align 1
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3622, align 1
  %3623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3624 = icmp eq i64 %3612, 0
  %3625 = zext i1 %3624 to i8
  store i8 %3625, i8* %3623, align 1
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3627 = lshr i64 %3612, 63
  %3628 = trunc i64 %3627 to i8
  store i8 %3628, i8* %3626, align 1
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3629, align 1
  store %struct.Memory* %loadMem_40f7c4, %struct.Memory** %MEMORY
  %loadMem_40f7c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3631 = getelementptr inbounds %struct.GPR, %struct.GPR* %3630, i32 0, i32 33
  %3632 = getelementptr inbounds %struct.Reg, %struct.Reg* %3631, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %3632 to i64*
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3634 = getelementptr inbounds %struct.GPR, %struct.GPR* %3633, i32 0, i32 1
  %3635 = getelementptr inbounds %struct.Reg, %struct.Reg* %3634, i32 0, i32 0
  %RAX.i1037 = bitcast %union.anon* %3635 to i64*
  %3636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3637 = getelementptr inbounds %struct.GPR, %struct.GPR* %3636, i32 0, i32 9
  %3638 = getelementptr inbounds %struct.Reg, %struct.Reg* %3637, i32 0, i32 0
  %RSI.i1038 = bitcast %union.anon* %3638 to i64*
  %3639 = load i64, i64* %RAX.i1037
  %3640 = load i64, i64* %PC.i1036
  %3641 = add i64 %3640, 3
  store i64 %3641, i64* %PC.i1036
  store i64 %3639, i64* %RSI.i1038, align 8
  store %struct.Memory* %loadMem_40f7c8, %struct.Memory** %MEMORY
  %loadMem_40f7cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3643 = getelementptr inbounds %struct.GPR, %struct.GPR* %3642, i32 0, i32 33
  %3644 = getelementptr inbounds %struct.Reg, %struct.Reg* %3643, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %3644 to i64*
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3646 = getelementptr inbounds %struct.GPR, %struct.GPR* %3645, i32 0, i32 7
  %3647 = getelementptr inbounds %struct.Reg, %struct.Reg* %3646, i32 0, i32 0
  %RDX.i1034 = bitcast %union.anon* %3647 to i64*
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3649 = getelementptr inbounds %struct.GPR, %struct.GPR* %3648, i32 0, i32 9
  %3650 = getelementptr inbounds %struct.Reg, %struct.Reg* %3649, i32 0, i32 0
  %RSI.i1035 = bitcast %union.anon* %3650 to i64*
  %3651 = load i64, i64* %RSI.i1035
  %3652 = load i64, i64* %RDX.i1034
  %3653 = load i64, i64* %PC.i1033
  %3654 = add i64 %3653, 3
  store i64 %3654, i64* %PC.i1033
  %3655 = add i64 %3652, %3651
  store i64 %3655, i64* %RSI.i1035, align 8
  %3656 = icmp ult i64 %3655, %3651
  %3657 = icmp ult i64 %3655, %3652
  %3658 = or i1 %3656, %3657
  %3659 = zext i1 %3658 to i8
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3659, i8* %3660, align 1
  %3661 = trunc i64 %3655 to i32
  %3662 = and i32 %3661, 255
  %3663 = call i32 @llvm.ctpop.i32(i32 %3662)
  %3664 = trunc i32 %3663 to i8
  %3665 = and i8 %3664, 1
  %3666 = xor i8 %3665, 1
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3666, i8* %3667, align 1
  %3668 = xor i64 %3652, %3651
  %3669 = xor i64 %3668, %3655
  %3670 = lshr i64 %3669, 4
  %3671 = trunc i64 %3670 to i8
  %3672 = and i8 %3671, 1
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3672, i8* %3673, align 1
  %3674 = icmp eq i64 %3655, 0
  %3675 = zext i1 %3674 to i8
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3675, i8* %3676, align 1
  %3677 = lshr i64 %3655, 63
  %3678 = trunc i64 %3677 to i8
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3678, i8* %3679, align 1
  %3680 = lshr i64 %3651, 63
  %3681 = lshr i64 %3652, 63
  %3682 = xor i64 %3677, %3680
  %3683 = xor i64 %3677, %3681
  %3684 = add i64 %3682, %3683
  %3685 = icmp eq i64 %3684, 2
  %3686 = zext i1 %3685 to i8
  %3687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3686, i8* %3687, align 1
  store %struct.Memory* %loadMem_40f7cb, %struct.Memory** %MEMORY
  %loadMem_40f7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3689 = getelementptr inbounds %struct.GPR, %struct.GPR* %3688, i32 0, i32 33
  %3690 = getelementptr inbounds %struct.Reg, %struct.Reg* %3689, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %3690 to i64*
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3692 = getelementptr inbounds %struct.GPR, %struct.GPR* %3691, i32 0, i32 7
  %3693 = getelementptr inbounds %struct.Reg, %struct.Reg* %3692, i32 0, i32 0
  %RDX.i1031 = bitcast %union.anon* %3693 to i64*
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3695 = getelementptr inbounds %struct.GPR, %struct.GPR* %3694, i32 0, i32 15
  %3696 = getelementptr inbounds %struct.Reg, %struct.Reg* %3695, i32 0, i32 0
  %RBP.i1032 = bitcast %union.anon* %3696 to i64*
  %3697 = load i64, i64* %RBP.i1032
  %3698 = sub i64 %3697, 24
  %3699 = load i64, i64* %PC.i1030
  %3700 = add i64 %3699, 4
  store i64 %3700, i64* %PC.i1030
  %3701 = inttoptr i64 %3698 to i32*
  %3702 = load i32, i32* %3701
  %3703 = sext i32 %3702 to i64
  store i64 %3703, i64* %RDX.i1031, align 8
  store %struct.Memory* %loadMem_40f7ce, %struct.Memory** %MEMORY
  %loadMem_40f7d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3705 = getelementptr inbounds %struct.GPR, %struct.GPR* %3704, i32 0, i32 33
  %3706 = getelementptr inbounds %struct.Reg, %struct.Reg* %3705, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %3706 to i64*
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 5
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %RCX.i1027 = bitcast %union.anon* %3709 to i64*
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3711 = getelementptr inbounds %struct.GPR, %struct.GPR* %3710, i32 0, i32 7
  %3712 = getelementptr inbounds %struct.Reg, %struct.Reg* %3711, i32 0, i32 0
  %RDX.i1028 = bitcast %union.anon* %3712 to i64*
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3714 = getelementptr inbounds %struct.GPR, %struct.GPR* %3713, i32 0, i32 9
  %3715 = getelementptr inbounds %struct.Reg, %struct.Reg* %3714, i32 0, i32 0
  %RSI.i1029 = bitcast %union.anon* %3715 to i64*
  %3716 = load i64, i64* %RCX.i1027
  %3717 = load i64, i64* %RSI.i1029
  %3718 = load i64, i64* %RDX.i1028
  %3719 = mul i64 %3718, 4
  %3720 = add i64 %3719, %3717
  %3721 = load i64, i64* %PC.i1026
  %3722 = add i64 %3721, 3
  store i64 %3722, i64* %PC.i1026
  %3723 = trunc i64 %3716 to i32
  %3724 = inttoptr i64 %3720 to i32*
  %3725 = load i32, i32* %3724
  %3726 = add i32 %3725, %3723
  %3727 = zext i32 %3726 to i64
  store i64 %3727, i64* %RCX.i1027, align 8
  %3728 = icmp ult i32 %3726, %3723
  %3729 = icmp ult i32 %3726, %3725
  %3730 = or i1 %3728, %3729
  %3731 = zext i1 %3730 to i8
  %3732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3731, i8* %3732, align 1
  %3733 = and i32 %3726, 255
  %3734 = call i32 @llvm.ctpop.i32(i32 %3733)
  %3735 = trunc i32 %3734 to i8
  %3736 = and i8 %3735, 1
  %3737 = xor i8 %3736, 1
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3737, i8* %3738, align 1
  %3739 = xor i32 %3725, %3723
  %3740 = xor i32 %3739, %3726
  %3741 = lshr i32 %3740, 4
  %3742 = trunc i32 %3741 to i8
  %3743 = and i8 %3742, 1
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3743, i8* %3744, align 1
  %3745 = icmp eq i32 %3726, 0
  %3746 = zext i1 %3745 to i8
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3746, i8* %3747, align 1
  %3748 = lshr i32 %3726, 31
  %3749 = trunc i32 %3748 to i8
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3749, i8* %3750, align 1
  %3751 = lshr i32 %3723, 31
  %3752 = lshr i32 %3725, 31
  %3753 = xor i32 %3748, %3751
  %3754 = xor i32 %3748, %3752
  %3755 = add i32 %3753, %3754
  %3756 = icmp eq i32 %3755, 2
  %3757 = zext i1 %3756 to i8
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3757, i8* %3758, align 1
  store %struct.Memory* %loadMem_40f7d2, %struct.Memory** %MEMORY
  %loadMem_40f7d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3760 = getelementptr inbounds %struct.GPR, %struct.GPR* %3759, i32 0, i32 33
  %3761 = getelementptr inbounds %struct.Reg, %struct.Reg* %3760, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %3761 to i64*
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3763 = getelementptr inbounds %struct.GPR, %struct.GPR* %3762, i32 0, i32 7
  %3764 = getelementptr inbounds %struct.Reg, %struct.Reg* %3763, i32 0, i32 0
  %RDX.i1024 = bitcast %union.anon* %3764 to i64*
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3766 = getelementptr inbounds %struct.GPR, %struct.GPR* %3765, i32 0, i32 15
  %3767 = getelementptr inbounds %struct.Reg, %struct.Reg* %3766, i32 0, i32 0
  %RBP.i1025 = bitcast %union.anon* %3767 to i64*
  %3768 = load i64, i64* %RBP.i1025
  %3769 = sub i64 %3768, 16
  %3770 = load i64, i64* %PC.i1023
  %3771 = add i64 %3770, 4
  store i64 %3771, i64* %PC.i1023
  %3772 = inttoptr i64 %3769 to i32*
  %3773 = load i32, i32* %3772
  %3774 = sext i32 %3773 to i64
  store i64 %3774, i64* %RDX.i1024, align 8
  store %struct.Memory* %loadMem_40f7d5, %struct.Memory** %MEMORY
  %loadMem_40f7d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3776 = getelementptr inbounds %struct.GPR, %struct.GPR* %3775, i32 0, i32 33
  %3777 = getelementptr inbounds %struct.Reg, %struct.Reg* %3776, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %3777 to i64*
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3779 = getelementptr inbounds %struct.GPR, %struct.GPR* %3778, i32 0, i32 5
  %3780 = getelementptr inbounds %struct.Reg, %struct.Reg* %3779, i32 0, i32 0
  %ECX.i1020 = bitcast %union.anon* %3780 to i32*
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 7
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %RDX.i1021 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 15
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RBP.i1022 = bitcast %union.anon* %3786 to i64*
  %3787 = load i64, i64* %RBP.i1022
  %3788 = load i64, i64* %RDX.i1021
  %3789 = mul i64 %3788, 4
  %3790 = add i64 %3787, -48
  %3791 = add i64 %3790, %3789
  %3792 = load i32, i32* %ECX.i1020
  %3793 = zext i32 %3792 to i64
  %3794 = load i64, i64* %PC.i1019
  %3795 = add i64 %3794, 4
  store i64 %3795, i64* %PC.i1019
  %3796 = inttoptr i64 %3791 to i32*
  store i32 %3792, i32* %3796
  store %struct.Memory* %loadMem_40f7d9, %struct.Memory** %MEMORY
  %loadMem_40f7dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3798 = getelementptr inbounds %struct.GPR, %struct.GPR* %3797, i32 0, i32 33
  %3799 = getelementptr inbounds %struct.Reg, %struct.Reg* %3798, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %3799 to i64*
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3801 = getelementptr inbounds %struct.GPR, %struct.GPR* %3800, i32 0, i32 7
  %3802 = getelementptr inbounds %struct.Reg, %struct.Reg* %3801, i32 0, i32 0
  %RDX.i1017 = bitcast %union.anon* %3802 to i64*
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3804 = getelementptr inbounds %struct.GPR, %struct.GPR* %3803, i32 0, i32 15
  %3805 = getelementptr inbounds %struct.Reg, %struct.Reg* %3804, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %3805 to i64*
  %3806 = load i64, i64* %RBP.i1018
  %3807 = sub i64 %3806, 12
  %3808 = load i64, i64* %PC.i1016
  %3809 = add i64 %3808, 4
  store i64 %3809, i64* %PC.i1016
  %3810 = inttoptr i64 %3807 to i32*
  %3811 = load i32, i32* %3810
  %3812 = sext i32 %3811 to i64
  store i64 %3812, i64* %RDX.i1017, align 8
  store %struct.Memory* %loadMem_40f7dd, %struct.Memory** %MEMORY
  %loadMem_40f7e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3814 = getelementptr inbounds %struct.GPR, %struct.GPR* %3813, i32 0, i32 33
  %3815 = getelementptr inbounds %struct.Reg, %struct.Reg* %3814, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %3815 to i64*
  %3816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3817 = getelementptr inbounds %struct.GPR, %struct.GPR* %3816, i32 0, i32 7
  %3818 = getelementptr inbounds %struct.Reg, %struct.Reg* %3817, i32 0, i32 0
  %RDX.i1015 = bitcast %union.anon* %3818 to i64*
  %3819 = load i64, i64* %RDX.i1015
  %3820 = load i64, i64* %PC.i1014
  %3821 = add i64 %3820, 4
  store i64 %3821, i64* %PC.i1014
  %3822 = shl i64 %3819, 3
  %3823 = icmp slt i64 %3822, 0
  %3824 = shl i64 %3822, 1
  store i64 %3824, i64* %RDX.i1015, align 8
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3826 = zext i1 %3823 to i8
  store i8 %3826, i8* %3825, align 1
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3828 = trunc i64 %3824 to i32
  %3829 = and i32 %3828, 254
  %3830 = call i32 @llvm.ctpop.i32(i32 %3829)
  %3831 = trunc i32 %3830 to i8
  %3832 = and i8 %3831, 1
  %3833 = xor i8 %3832, 1
  store i8 %3833, i8* %3827, align 1
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3834, align 1
  %3835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3836 = icmp eq i64 %3824, 0
  %3837 = zext i1 %3836 to i8
  store i8 %3837, i8* %3835, align 1
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3839 = lshr i64 %3824, 63
  %3840 = trunc i64 %3839 to i8
  store i8 %3840, i8* %3838, align 1
  %3841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3841, align 1
  store %struct.Memory* %loadMem_40f7e1, %struct.Memory** %MEMORY
  %loadMem_40f7e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3843 = getelementptr inbounds %struct.GPR, %struct.GPR* %3842, i32 0, i32 33
  %3844 = getelementptr inbounds %struct.Reg, %struct.Reg* %3843, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %3844 to i64*
  %3845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3846 = getelementptr inbounds %struct.GPR, %struct.GPR* %3845, i32 0, i32 1
  %3847 = getelementptr inbounds %struct.Reg, %struct.Reg* %3846, i32 0, i32 0
  %RAX.i1012 = bitcast %union.anon* %3847 to i64*
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3849 = getelementptr inbounds %struct.GPR, %struct.GPR* %3848, i32 0, i32 9
  %3850 = getelementptr inbounds %struct.Reg, %struct.Reg* %3849, i32 0, i32 0
  %RSI.i1013 = bitcast %union.anon* %3850 to i64*
  %3851 = load i64, i64* %RAX.i1012
  %3852 = load i64, i64* %PC.i1011
  %3853 = add i64 %3852, 3
  store i64 %3853, i64* %PC.i1011
  store i64 %3851, i64* %RSI.i1013, align 8
  store %struct.Memory* %loadMem_40f7e5, %struct.Memory** %MEMORY
  %loadMem_40f7e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3855 = getelementptr inbounds %struct.GPR, %struct.GPR* %3854, i32 0, i32 33
  %3856 = getelementptr inbounds %struct.Reg, %struct.Reg* %3855, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %3856 to i64*
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3858 = getelementptr inbounds %struct.GPR, %struct.GPR* %3857, i32 0, i32 7
  %3859 = getelementptr inbounds %struct.Reg, %struct.Reg* %3858, i32 0, i32 0
  %RDX.i1009 = bitcast %union.anon* %3859 to i64*
  %3860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3861 = getelementptr inbounds %struct.GPR, %struct.GPR* %3860, i32 0, i32 9
  %3862 = getelementptr inbounds %struct.Reg, %struct.Reg* %3861, i32 0, i32 0
  %RSI.i1010 = bitcast %union.anon* %3862 to i64*
  %3863 = load i64, i64* %RSI.i1010
  %3864 = load i64, i64* %RDX.i1009
  %3865 = load i64, i64* %PC.i1008
  %3866 = add i64 %3865, 3
  store i64 %3866, i64* %PC.i1008
  %3867 = add i64 %3864, %3863
  store i64 %3867, i64* %RSI.i1010, align 8
  %3868 = icmp ult i64 %3867, %3863
  %3869 = icmp ult i64 %3867, %3864
  %3870 = or i1 %3868, %3869
  %3871 = zext i1 %3870 to i8
  %3872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3871, i8* %3872, align 1
  %3873 = trunc i64 %3867 to i32
  %3874 = and i32 %3873, 255
  %3875 = call i32 @llvm.ctpop.i32(i32 %3874)
  %3876 = trunc i32 %3875 to i8
  %3877 = and i8 %3876, 1
  %3878 = xor i8 %3877, 1
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3878, i8* %3879, align 1
  %3880 = xor i64 %3864, %3863
  %3881 = xor i64 %3880, %3867
  %3882 = lshr i64 %3881, 4
  %3883 = trunc i64 %3882 to i8
  %3884 = and i8 %3883, 1
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3884, i8* %3885, align 1
  %3886 = icmp eq i64 %3867, 0
  %3887 = zext i1 %3886 to i8
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3887, i8* %3888, align 1
  %3889 = lshr i64 %3867, 63
  %3890 = trunc i64 %3889 to i8
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3890, i8* %3891, align 1
  %3892 = lshr i64 %3863, 63
  %3893 = lshr i64 %3864, 63
  %3894 = xor i64 %3889, %3892
  %3895 = xor i64 %3889, %3893
  %3896 = add i64 %3894, %3895
  %3897 = icmp eq i64 %3896, 2
  %3898 = zext i1 %3897 to i8
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3898, i8* %3899, align 1
  store %struct.Memory* %loadMem_40f7e8, %struct.Memory** %MEMORY
  %loadMem_40f7eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3901 = getelementptr inbounds %struct.GPR, %struct.GPR* %3900, i32 0, i32 33
  %3902 = getelementptr inbounds %struct.Reg, %struct.Reg* %3901, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %3902 to i64*
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3904 = getelementptr inbounds %struct.GPR, %struct.GPR* %3903, i32 0, i32 7
  %3905 = getelementptr inbounds %struct.Reg, %struct.Reg* %3904, i32 0, i32 0
  %RDX.i1006 = bitcast %union.anon* %3905 to i64*
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3907 = getelementptr inbounds %struct.GPR, %struct.GPR* %3906, i32 0, i32 15
  %3908 = getelementptr inbounds %struct.Reg, %struct.Reg* %3907, i32 0, i32 0
  %RBP.i1007 = bitcast %union.anon* %3908 to i64*
  %3909 = load i64, i64* %RBP.i1007
  %3910 = sub i64 %3909, 16
  %3911 = load i64, i64* %PC.i1005
  %3912 = add i64 %3911, 4
  store i64 %3912, i64* %PC.i1005
  %3913 = inttoptr i64 %3910 to i32*
  %3914 = load i32, i32* %3913
  %3915 = sext i32 %3914 to i64
  store i64 %3915, i64* %RDX.i1006, align 8
  store %struct.Memory* %loadMem_40f7eb, %struct.Memory** %MEMORY
  %loadMem_40f7ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %3916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3917 = getelementptr inbounds %struct.GPR, %struct.GPR* %3916, i32 0, i32 33
  %3918 = getelementptr inbounds %struct.Reg, %struct.Reg* %3917, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %3918 to i64*
  %3919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3920 = getelementptr inbounds %struct.GPR, %struct.GPR* %3919, i32 0, i32 5
  %3921 = getelementptr inbounds %struct.Reg, %struct.Reg* %3920, i32 0, i32 0
  %RCX.i1002 = bitcast %union.anon* %3921 to i64*
  %3922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3923 = getelementptr inbounds %struct.GPR, %struct.GPR* %3922, i32 0, i32 7
  %3924 = getelementptr inbounds %struct.Reg, %struct.Reg* %3923, i32 0, i32 0
  %RDX.i1003 = bitcast %union.anon* %3924 to i64*
  %3925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3926 = getelementptr inbounds %struct.GPR, %struct.GPR* %3925, i32 0, i32 9
  %3927 = getelementptr inbounds %struct.Reg, %struct.Reg* %3926, i32 0, i32 0
  %RSI.i1004 = bitcast %union.anon* %3927 to i64*
  %3928 = load i64, i64* %RSI.i1004
  %3929 = load i64, i64* %RDX.i1003
  %3930 = mul i64 %3929, 4
  %3931 = add i64 %3930, %3928
  %3932 = load i64, i64* %PC.i1001
  %3933 = add i64 %3932, 3
  store i64 %3933, i64* %PC.i1001
  %3934 = inttoptr i64 %3931 to i32*
  %3935 = load i32, i32* %3934
  %3936 = zext i32 %3935 to i64
  store i64 %3936, i64* %RCX.i1002, align 8
  store %struct.Memory* %loadMem_40f7ef, %struct.Memory** %MEMORY
  %loadMem_40f7f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3938 = getelementptr inbounds %struct.GPR, %struct.GPR* %3937, i32 0, i32 33
  %3939 = getelementptr inbounds %struct.Reg, %struct.Reg* %3938, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %3939 to i64*
  %3940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3941 = getelementptr inbounds %struct.GPR, %struct.GPR* %3940, i32 0, i32 7
  %3942 = getelementptr inbounds %struct.Reg, %struct.Reg* %3941, i32 0, i32 0
  %RDX.i999 = bitcast %union.anon* %3942 to i64*
  %3943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3944 = getelementptr inbounds %struct.GPR, %struct.GPR* %3943, i32 0, i32 15
  %3945 = getelementptr inbounds %struct.Reg, %struct.Reg* %3944, i32 0, i32 0
  %RBP.i1000 = bitcast %union.anon* %3945 to i64*
  %3946 = load i64, i64* %RBP.i1000
  %3947 = sub i64 %3946, 12
  %3948 = load i64, i64* %PC.i998
  %3949 = add i64 %3948, 4
  store i64 %3949, i64* %PC.i998
  %3950 = inttoptr i64 %3947 to i32*
  %3951 = load i32, i32* %3950
  %3952 = sext i32 %3951 to i64
  store i64 %3952, i64* %RDX.i999, align 8
  store %struct.Memory* %loadMem_40f7f2, %struct.Memory** %MEMORY
  %loadMem_40f7f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3954 = getelementptr inbounds %struct.GPR, %struct.GPR* %3953, i32 0, i32 33
  %3955 = getelementptr inbounds %struct.Reg, %struct.Reg* %3954, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %3955 to i64*
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3957 = getelementptr inbounds %struct.GPR, %struct.GPR* %3956, i32 0, i32 7
  %3958 = getelementptr inbounds %struct.Reg, %struct.Reg* %3957, i32 0, i32 0
  %RDX.i997 = bitcast %union.anon* %3958 to i64*
  %3959 = load i64, i64* %RDX.i997
  %3960 = load i64, i64* %PC.i996
  %3961 = add i64 %3960, 4
  store i64 %3961, i64* %PC.i996
  %3962 = shl i64 %3959, 3
  %3963 = icmp slt i64 %3962, 0
  %3964 = shl i64 %3962, 1
  store i64 %3964, i64* %RDX.i997, align 8
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3966 = zext i1 %3963 to i8
  store i8 %3966, i8* %3965, align 1
  %3967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3968 = trunc i64 %3964 to i32
  %3969 = and i32 %3968, 254
  %3970 = call i32 @llvm.ctpop.i32(i32 %3969)
  %3971 = trunc i32 %3970 to i8
  %3972 = and i8 %3971, 1
  %3973 = xor i8 %3972, 1
  store i8 %3973, i8* %3967, align 1
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3974, align 1
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3976 = icmp eq i64 %3964, 0
  %3977 = zext i1 %3976 to i8
  store i8 %3977, i8* %3975, align 1
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3979 = lshr i64 %3964, 63
  %3980 = trunc i64 %3979 to i8
  store i8 %3980, i8* %3978, align 1
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3981, align 1
  store %struct.Memory* %loadMem_40f7f6, %struct.Memory** %MEMORY
  %loadMem_40f7fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3983 = getelementptr inbounds %struct.GPR, %struct.GPR* %3982, i32 0, i32 33
  %3984 = getelementptr inbounds %struct.Reg, %struct.Reg* %3983, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %3984 to i64*
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 1
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %3987 to i64*
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3989 = getelementptr inbounds %struct.GPR, %struct.GPR* %3988, i32 0, i32 7
  %3990 = getelementptr inbounds %struct.Reg, %struct.Reg* %3989, i32 0, i32 0
  %RDX.i995 = bitcast %union.anon* %3990 to i64*
  %3991 = load i64, i64* %RAX.i994
  %3992 = load i64, i64* %RDX.i995
  %3993 = load i64, i64* %PC.i993
  %3994 = add i64 %3993, 3
  store i64 %3994, i64* %PC.i993
  %3995 = add i64 %3992, %3991
  store i64 %3995, i64* %RAX.i994, align 8
  %3996 = icmp ult i64 %3995, %3991
  %3997 = icmp ult i64 %3995, %3992
  %3998 = or i1 %3996, %3997
  %3999 = zext i1 %3998 to i8
  %4000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3999, i8* %4000, align 1
  %4001 = trunc i64 %3995 to i32
  %4002 = and i32 %4001, 255
  %4003 = call i32 @llvm.ctpop.i32(i32 %4002)
  %4004 = trunc i32 %4003 to i8
  %4005 = and i8 %4004, 1
  %4006 = xor i8 %4005, 1
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4006, i8* %4007, align 1
  %4008 = xor i64 %3992, %3991
  %4009 = xor i64 %4008, %3995
  %4010 = lshr i64 %4009, 4
  %4011 = trunc i64 %4010 to i8
  %4012 = and i8 %4011, 1
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4012, i8* %4013, align 1
  %4014 = icmp eq i64 %3995, 0
  %4015 = zext i1 %4014 to i8
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4015, i8* %4016, align 1
  %4017 = lshr i64 %3995, 63
  %4018 = trunc i64 %4017 to i8
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4018, i8* %4019, align 1
  %4020 = lshr i64 %3991, 63
  %4021 = lshr i64 %3992, 63
  %4022 = xor i64 %4017, %4020
  %4023 = xor i64 %4017, %4021
  %4024 = add i64 %4022, %4023
  %4025 = icmp eq i64 %4024, 2
  %4026 = zext i1 %4025 to i8
  %4027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4026, i8* %4027, align 1
  store %struct.Memory* %loadMem_40f7fa, %struct.Memory** %MEMORY
  %loadMem_40f7fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4029 = getelementptr inbounds %struct.GPR, %struct.GPR* %4028, i32 0, i32 33
  %4030 = getelementptr inbounds %struct.Reg, %struct.Reg* %4029, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %4030 to i64*
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4032 = getelementptr inbounds %struct.GPR, %struct.GPR* %4031, i32 0, i32 7
  %4033 = getelementptr inbounds %struct.Reg, %struct.Reg* %4032, i32 0, i32 0
  %RDX.i991 = bitcast %union.anon* %4033 to i64*
  %4034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4035 = getelementptr inbounds %struct.GPR, %struct.GPR* %4034, i32 0, i32 15
  %4036 = getelementptr inbounds %struct.Reg, %struct.Reg* %4035, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %4036 to i64*
  %4037 = load i64, i64* %RBP.i992
  %4038 = sub i64 %4037, 24
  %4039 = load i64, i64* %PC.i990
  %4040 = add i64 %4039, 4
  store i64 %4040, i64* %PC.i990
  %4041 = inttoptr i64 %4038 to i32*
  %4042 = load i32, i32* %4041
  %4043 = sext i32 %4042 to i64
  store i64 %4043, i64* %RDX.i991, align 8
  store %struct.Memory* %loadMem_40f7fd, %struct.Memory** %MEMORY
  %loadMem_40f801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4045 = getelementptr inbounds %struct.GPR, %struct.GPR* %4044, i32 0, i32 33
  %4046 = getelementptr inbounds %struct.Reg, %struct.Reg* %4045, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %4046 to i64*
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4048 = getelementptr inbounds %struct.GPR, %struct.GPR* %4047, i32 0, i32 1
  %4049 = getelementptr inbounds %struct.Reg, %struct.Reg* %4048, i32 0, i32 0
  %RAX.i987 = bitcast %union.anon* %4049 to i64*
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4051 = getelementptr inbounds %struct.GPR, %struct.GPR* %4050, i32 0, i32 5
  %4052 = getelementptr inbounds %struct.Reg, %struct.Reg* %4051, i32 0, i32 0
  %RCX.i988 = bitcast %union.anon* %4052 to i64*
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4054 = getelementptr inbounds %struct.GPR, %struct.GPR* %4053, i32 0, i32 7
  %4055 = getelementptr inbounds %struct.Reg, %struct.Reg* %4054, i32 0, i32 0
  %RDX.i989 = bitcast %union.anon* %4055 to i64*
  %4056 = load i64, i64* %RCX.i988
  %4057 = load i64, i64* %RAX.i987
  %4058 = load i64, i64* %RDX.i989
  %4059 = mul i64 %4058, 4
  %4060 = add i64 %4059, %4057
  %4061 = load i64, i64* %PC.i986
  %4062 = add i64 %4061, 3
  store i64 %4062, i64* %PC.i986
  %4063 = trunc i64 %4056 to i32
  %4064 = inttoptr i64 %4060 to i32*
  %4065 = load i32, i32* %4064
  %4066 = sub i32 %4063, %4065
  %4067 = zext i32 %4066 to i64
  store i64 %4067, i64* %RCX.i988, align 8
  %4068 = icmp ult i32 %4063, %4065
  %4069 = zext i1 %4068 to i8
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4069, i8* %4070, align 1
  %4071 = and i32 %4066, 255
  %4072 = call i32 @llvm.ctpop.i32(i32 %4071)
  %4073 = trunc i32 %4072 to i8
  %4074 = and i8 %4073, 1
  %4075 = xor i8 %4074, 1
  %4076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4075, i8* %4076, align 1
  %4077 = xor i32 %4065, %4063
  %4078 = xor i32 %4077, %4066
  %4079 = lshr i32 %4078, 4
  %4080 = trunc i32 %4079 to i8
  %4081 = and i8 %4080, 1
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4081, i8* %4082, align 1
  %4083 = icmp eq i32 %4066, 0
  %4084 = zext i1 %4083 to i8
  %4085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4084, i8* %4085, align 1
  %4086 = lshr i32 %4066, 31
  %4087 = trunc i32 %4086 to i8
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4087, i8* %4088, align 1
  %4089 = lshr i32 %4063, 31
  %4090 = lshr i32 %4065, 31
  %4091 = xor i32 %4090, %4089
  %4092 = xor i32 %4086, %4089
  %4093 = add i32 %4092, %4091
  %4094 = icmp eq i32 %4093, 2
  %4095 = zext i1 %4094 to i8
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4095, i8* %4096, align 1
  store %struct.Memory* %loadMem_40f801, %struct.Memory** %MEMORY
  %loadMem_40f804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4098 = getelementptr inbounds %struct.GPR, %struct.GPR* %4097, i32 0, i32 33
  %4099 = getelementptr inbounds %struct.Reg, %struct.Reg* %4098, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %4099 to i64*
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4101 = getelementptr inbounds %struct.GPR, %struct.GPR* %4100, i32 0, i32 1
  %4102 = getelementptr inbounds %struct.Reg, %struct.Reg* %4101, i32 0, i32 0
  %RAX.i984 = bitcast %union.anon* %4102 to i64*
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4104 = getelementptr inbounds %struct.GPR, %struct.GPR* %4103, i32 0, i32 15
  %4105 = getelementptr inbounds %struct.Reg, %struct.Reg* %4104, i32 0, i32 0
  %RBP.i985 = bitcast %union.anon* %4105 to i64*
  %4106 = load i64, i64* %RBP.i985
  %4107 = sub i64 %4106, 24
  %4108 = load i64, i64* %PC.i983
  %4109 = add i64 %4108, 4
  store i64 %4109, i64* %PC.i983
  %4110 = inttoptr i64 %4107 to i32*
  %4111 = load i32, i32* %4110
  %4112 = sext i32 %4111 to i64
  store i64 %4112, i64* %RAX.i984, align 8
  store %struct.Memory* %loadMem_40f804, %struct.Memory** %MEMORY
  %loadMem_40f808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4114 = getelementptr inbounds %struct.GPR, %struct.GPR* %4113, i32 0, i32 33
  %4115 = getelementptr inbounds %struct.Reg, %struct.Reg* %4114, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %4115 to i64*
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4117 = getelementptr inbounds %struct.GPR, %struct.GPR* %4116, i32 0, i32 5
  %4118 = getelementptr inbounds %struct.Reg, %struct.Reg* %4117, i32 0, i32 0
  %ECX.i980 = bitcast %union.anon* %4118 to i32*
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4120 = getelementptr inbounds %struct.GPR, %struct.GPR* %4119, i32 0, i32 1
  %4121 = getelementptr inbounds %struct.Reg, %struct.Reg* %4120, i32 0, i32 0
  %RAX.i981 = bitcast %union.anon* %4121 to i64*
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4123 = getelementptr inbounds %struct.GPR, %struct.GPR* %4122, i32 0, i32 15
  %4124 = getelementptr inbounds %struct.Reg, %struct.Reg* %4123, i32 0, i32 0
  %RBP.i982 = bitcast %union.anon* %4124 to i64*
  %4125 = load i64, i64* %RBP.i982
  %4126 = load i64, i64* %RAX.i981
  %4127 = mul i64 %4126, 4
  %4128 = add i64 %4125, -48
  %4129 = add i64 %4128, %4127
  %4130 = load i32, i32* %ECX.i980
  %4131 = zext i32 %4130 to i64
  %4132 = load i64, i64* %PC.i979
  %4133 = add i64 %4132, 4
  store i64 %4133, i64* %PC.i979
  %4134 = inttoptr i64 %4129 to i32*
  store i32 %4130, i32* %4134
  store %struct.Memory* %loadMem_40f808, %struct.Memory** %MEMORY
  %loadMem_40f80c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4136 = getelementptr inbounds %struct.GPR, %struct.GPR* %4135, i32 0, i32 33
  %4137 = getelementptr inbounds %struct.Reg, %struct.Reg* %4136, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %4137 to i64*
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4139 = getelementptr inbounds %struct.GPR, %struct.GPR* %4138, i32 0, i32 1
  %4140 = getelementptr inbounds %struct.Reg, %struct.Reg* %4139, i32 0, i32 0
  %RAX.i977 = bitcast %union.anon* %4140 to i64*
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4142 = getelementptr inbounds %struct.GPR, %struct.GPR* %4141, i32 0, i32 15
  %4143 = getelementptr inbounds %struct.Reg, %struct.Reg* %4142, i32 0, i32 0
  %RBP.i978 = bitcast %union.anon* %4143 to i64*
  %4144 = load i64, i64* %RBP.i978
  %4145 = sub i64 %4144, 16
  %4146 = load i64, i64* %PC.i976
  %4147 = add i64 %4146, 3
  store i64 %4147, i64* %PC.i976
  %4148 = inttoptr i64 %4145 to i32*
  %4149 = load i32, i32* %4148
  %4150 = zext i32 %4149 to i64
  store i64 %4150, i64* %RAX.i977, align 8
  store %struct.Memory* %loadMem_40f80c, %struct.Memory** %MEMORY
  %loadMem_40f80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4152 = getelementptr inbounds %struct.GPR, %struct.GPR* %4151, i32 0, i32 33
  %4153 = getelementptr inbounds %struct.Reg, %struct.Reg* %4152, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %4153 to i64*
  %4154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4155 = getelementptr inbounds %struct.GPR, %struct.GPR* %4154, i32 0, i32 1
  %4156 = getelementptr inbounds %struct.Reg, %struct.Reg* %4155, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %4156 to i64*
  %4157 = load i64, i64* %RAX.i975
  %4158 = load i64, i64* %PC.i974
  %4159 = add i64 %4158, 3
  store i64 %4159, i64* %PC.i974
  %4160 = trunc i64 %4157 to i32
  %4161 = add i32 1, %4160
  %4162 = zext i32 %4161 to i64
  store i64 %4162, i64* %RAX.i975, align 8
  %4163 = icmp ult i32 %4161, %4160
  %4164 = icmp ult i32 %4161, 1
  %4165 = or i1 %4163, %4164
  %4166 = zext i1 %4165 to i8
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4166, i8* %4167, align 1
  %4168 = and i32 %4161, 255
  %4169 = call i32 @llvm.ctpop.i32(i32 %4168)
  %4170 = trunc i32 %4169 to i8
  %4171 = and i8 %4170, 1
  %4172 = xor i8 %4171, 1
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4172, i8* %4173, align 1
  %4174 = xor i64 1, %4157
  %4175 = trunc i64 %4174 to i32
  %4176 = xor i32 %4175, %4161
  %4177 = lshr i32 %4176, 4
  %4178 = trunc i32 %4177 to i8
  %4179 = and i8 %4178, 1
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4179, i8* %4180, align 1
  %4181 = icmp eq i32 %4161, 0
  %4182 = zext i1 %4181 to i8
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4182, i8* %4183, align 1
  %4184 = lshr i32 %4161, 31
  %4185 = trunc i32 %4184 to i8
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4185, i8* %4186, align 1
  %4187 = lshr i32 %4160, 31
  %4188 = xor i32 %4184, %4187
  %4189 = add i32 %4188, %4184
  %4190 = icmp eq i32 %4189, 2
  %4191 = zext i1 %4190 to i8
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4191, i8* %4192, align 1
  store %struct.Memory* %loadMem_40f80f, %struct.Memory** %MEMORY
  %loadMem_40f812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4194 = getelementptr inbounds %struct.GPR, %struct.GPR* %4193, i32 0, i32 33
  %4195 = getelementptr inbounds %struct.Reg, %struct.Reg* %4194, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %4195 to i64*
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4197 = getelementptr inbounds %struct.GPR, %struct.GPR* %4196, i32 0, i32 1
  %4198 = getelementptr inbounds %struct.Reg, %struct.Reg* %4197, i32 0, i32 0
  %EAX.i972 = bitcast %union.anon* %4198 to i32*
  %4199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4200 = getelementptr inbounds %struct.GPR, %struct.GPR* %4199, i32 0, i32 15
  %4201 = getelementptr inbounds %struct.Reg, %struct.Reg* %4200, i32 0, i32 0
  %RBP.i973 = bitcast %union.anon* %4201 to i64*
  %4202 = load i64, i64* %RBP.i973
  %4203 = sub i64 %4202, 16
  %4204 = load i32, i32* %EAX.i972
  %4205 = zext i32 %4204 to i64
  %4206 = load i64, i64* %PC.i971
  %4207 = add i64 %4206, 3
  store i64 %4207, i64* %PC.i971
  %4208 = inttoptr i64 %4203 to i32*
  store i32 %4204, i32* %4208
  store %struct.Memory* %loadMem_40f812, %struct.Memory** %MEMORY
  %loadMem_40f815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 33
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %4211 to i64*
  %4212 = load i64, i64* %PC.i970
  %4213 = add i64 %4212, -134
  %4214 = load i64, i64* %PC.i970
  %4215 = add i64 %4214, 5
  store i64 %4215, i64* %PC.i970
  %4216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4213, i64* %4216, align 8
  store %struct.Memory* %loadMem_40f815, %struct.Memory** %MEMORY
  br label %block_.L_40f78f

block_.L_40f81a:                                  ; preds = %block_.L_40f78f
  %loadMem_40f81a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4218 = getelementptr inbounds %struct.GPR, %struct.GPR* %4217, i32 0, i32 33
  %4219 = getelementptr inbounds %struct.Reg, %struct.Reg* %4218, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %4219 to i64*
  %4220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4221 = getelementptr inbounds %struct.GPR, %struct.GPR* %4220, i32 0, i32 1
  %4222 = getelementptr inbounds %struct.Reg, %struct.Reg* %4221, i32 0, i32 0
  %RAX.i968 = bitcast %union.anon* %4222 to i64*
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4224 = getelementptr inbounds %struct.GPR, %struct.GPR* %4223, i32 0, i32 15
  %4225 = getelementptr inbounds %struct.Reg, %struct.Reg* %4224, i32 0, i32 0
  %RBP.i969 = bitcast %union.anon* %4225 to i64*
  %4226 = load i64, i64* %RBP.i969
  %4227 = sub i64 %4226, 144
  %4228 = load i64, i64* %PC.i967
  %4229 = add i64 %4228, 7
  store i64 %4229, i64* %PC.i967
  store i64 %4227, i64* %RAX.i968, align 8
  store %struct.Memory* %loadMem_40f81a, %struct.Memory** %MEMORY
  %loadMem_40f821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4231 = getelementptr inbounds %struct.GPR, %struct.GPR* %4230, i32 0, i32 33
  %4232 = getelementptr inbounds %struct.Reg, %struct.Reg* %4231, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %4232 to i64*
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4234 = getelementptr inbounds %struct.GPR, %struct.GPR* %4233, i32 0, i32 5
  %4235 = getelementptr inbounds %struct.Reg, %struct.Reg* %4234, i32 0, i32 0
  %RCX.i965 = bitcast %union.anon* %4235 to i64*
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4237 = getelementptr inbounds %struct.GPR, %struct.GPR* %4236, i32 0, i32 15
  %4238 = getelementptr inbounds %struct.Reg, %struct.Reg* %4237, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %4238 to i64*
  %4239 = load i64, i64* %RBP.i966
  %4240 = sub i64 %4239, 48
  %4241 = load i64, i64* %PC.i964
  %4242 = add i64 %4241, 3
  store i64 %4242, i64* %PC.i964
  %4243 = inttoptr i64 %4240 to i32*
  %4244 = load i32, i32* %4243
  %4245 = zext i32 %4244 to i64
  store i64 %4245, i64* %RCX.i965, align 8
  store %struct.Memory* %loadMem_40f821, %struct.Memory** %MEMORY
  %loadMem_40f824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4247 = getelementptr inbounds %struct.GPR, %struct.GPR* %4246, i32 0, i32 33
  %4248 = getelementptr inbounds %struct.Reg, %struct.Reg* %4247, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %4248 to i64*
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4250 = getelementptr inbounds %struct.GPR, %struct.GPR* %4249, i32 0, i32 5
  %4251 = getelementptr inbounds %struct.Reg, %struct.Reg* %4250, i32 0, i32 0
  %RCX.i962 = bitcast %union.anon* %4251 to i64*
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4253 = getelementptr inbounds %struct.GPR, %struct.GPR* %4252, i32 0, i32 15
  %4254 = getelementptr inbounds %struct.Reg, %struct.Reg* %4253, i32 0, i32 0
  %RBP.i963 = bitcast %union.anon* %4254 to i64*
  %4255 = load i64, i64* %RCX.i962
  %4256 = load i64, i64* %RBP.i963
  %4257 = sub i64 %4256, 44
  %4258 = load i64, i64* %PC.i961
  %4259 = add i64 %4258, 3
  store i64 %4259, i64* %PC.i961
  %4260 = trunc i64 %4255 to i32
  %4261 = inttoptr i64 %4257 to i32*
  %4262 = load i32, i32* %4261
  %4263 = add i32 %4262, %4260
  %4264 = zext i32 %4263 to i64
  store i64 %4264, i64* %RCX.i962, align 8
  %4265 = icmp ult i32 %4263, %4260
  %4266 = icmp ult i32 %4263, %4262
  %4267 = or i1 %4265, %4266
  %4268 = zext i1 %4267 to i8
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4268, i8* %4269, align 1
  %4270 = and i32 %4263, 255
  %4271 = call i32 @llvm.ctpop.i32(i32 %4270)
  %4272 = trunc i32 %4271 to i8
  %4273 = and i8 %4272, 1
  %4274 = xor i8 %4273, 1
  %4275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4274, i8* %4275, align 1
  %4276 = xor i32 %4262, %4260
  %4277 = xor i32 %4276, %4263
  %4278 = lshr i32 %4277, 4
  %4279 = trunc i32 %4278 to i8
  %4280 = and i8 %4279, 1
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4280, i8* %4281, align 1
  %4282 = icmp eq i32 %4263, 0
  %4283 = zext i1 %4282 to i8
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4283, i8* %4284, align 1
  %4285 = lshr i32 %4263, 31
  %4286 = trunc i32 %4285 to i8
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4286, i8* %4287, align 1
  %4288 = lshr i32 %4260, 31
  %4289 = lshr i32 %4262, 31
  %4290 = xor i32 %4285, %4288
  %4291 = xor i32 %4285, %4289
  %4292 = add i32 %4290, %4291
  %4293 = icmp eq i32 %4292, 2
  %4294 = zext i1 %4293 to i8
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4294, i8* %4295, align 1
  store %struct.Memory* %loadMem_40f824, %struct.Memory** %MEMORY
  %loadMem_40f827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4297 = getelementptr inbounds %struct.GPR, %struct.GPR* %4296, i32 0, i32 33
  %4298 = getelementptr inbounds %struct.Reg, %struct.Reg* %4297, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %4298 to i64*
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4300 = getelementptr inbounds %struct.GPR, %struct.GPR* %4299, i32 0, i32 7
  %4301 = getelementptr inbounds %struct.Reg, %struct.Reg* %4300, i32 0, i32 0
  %RDX.i959 = bitcast %union.anon* %4301 to i64*
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4303 = getelementptr inbounds %struct.GPR, %struct.GPR* %4302, i32 0, i32 15
  %4304 = getelementptr inbounds %struct.Reg, %struct.Reg* %4303, i32 0, i32 0
  %RBP.i960 = bitcast %union.anon* %4304 to i64*
  %4305 = load i64, i64* %RBP.i960
  %4306 = sub i64 %4305, 12
  %4307 = load i64, i64* %PC.i958
  %4308 = add i64 %4307, 4
  store i64 %4308, i64* %PC.i958
  %4309 = inttoptr i64 %4306 to i32*
  %4310 = load i32, i32* %4309
  %4311 = sext i32 %4310 to i64
  store i64 %4311, i64* %RDX.i959, align 8
  store %struct.Memory* %loadMem_40f827, %struct.Memory** %MEMORY
  %loadMem_40f82b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4313 = getelementptr inbounds %struct.GPR, %struct.GPR* %4312, i32 0, i32 33
  %4314 = getelementptr inbounds %struct.Reg, %struct.Reg* %4313, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %4314 to i64*
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4316 = getelementptr inbounds %struct.GPR, %struct.GPR* %4315, i32 0, i32 7
  %4317 = getelementptr inbounds %struct.Reg, %struct.Reg* %4316, i32 0, i32 0
  %RDX.i957 = bitcast %union.anon* %4317 to i64*
  %4318 = load i64, i64* %RDX.i957
  %4319 = load i64, i64* %PC.i956
  %4320 = add i64 %4319, 4
  store i64 %4320, i64* %PC.i956
  %4321 = shl i64 %4318, 3
  %4322 = icmp slt i64 %4321, 0
  %4323 = shl i64 %4321, 1
  store i64 %4323, i64* %RDX.i957, align 8
  %4324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4325 = zext i1 %4322 to i8
  store i8 %4325, i8* %4324, align 1
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4327 = trunc i64 %4323 to i32
  %4328 = and i32 %4327, 254
  %4329 = call i32 @llvm.ctpop.i32(i32 %4328)
  %4330 = trunc i32 %4329 to i8
  %4331 = and i8 %4330, 1
  %4332 = xor i8 %4331, 1
  store i8 %4332, i8* %4326, align 1
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4333, align 1
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4335 = icmp eq i64 %4323, 0
  %4336 = zext i1 %4335 to i8
  store i8 %4336, i8* %4334, align 1
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4338 = lshr i64 %4323, 63
  %4339 = trunc i64 %4338 to i8
  store i8 %4339, i8* %4337, align 1
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4340, align 1
  store %struct.Memory* %loadMem_40f82b, %struct.Memory** %MEMORY
  %loadMem_40f82f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4342 = getelementptr inbounds %struct.GPR, %struct.GPR* %4341, i32 0, i32 33
  %4343 = getelementptr inbounds %struct.Reg, %struct.Reg* %4342, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %4343 to i64*
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4345 = getelementptr inbounds %struct.GPR, %struct.GPR* %4344, i32 0, i32 1
  %4346 = getelementptr inbounds %struct.Reg, %struct.Reg* %4345, i32 0, i32 0
  %RAX.i954 = bitcast %union.anon* %4346 to i64*
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4348 = getelementptr inbounds %struct.GPR, %struct.GPR* %4347, i32 0, i32 9
  %4349 = getelementptr inbounds %struct.Reg, %struct.Reg* %4348, i32 0, i32 0
  %RSI.i955 = bitcast %union.anon* %4349 to i64*
  %4350 = load i64, i64* %RAX.i954
  %4351 = load i64, i64* %PC.i953
  %4352 = add i64 %4351, 3
  store i64 %4352, i64* %PC.i953
  store i64 %4350, i64* %RSI.i955, align 8
  store %struct.Memory* %loadMem_40f82f, %struct.Memory** %MEMORY
  %loadMem_40f832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4354 = getelementptr inbounds %struct.GPR, %struct.GPR* %4353, i32 0, i32 33
  %4355 = getelementptr inbounds %struct.Reg, %struct.Reg* %4354, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %4355 to i64*
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4357 = getelementptr inbounds %struct.GPR, %struct.GPR* %4356, i32 0, i32 7
  %4358 = getelementptr inbounds %struct.Reg, %struct.Reg* %4357, i32 0, i32 0
  %RDX.i951 = bitcast %union.anon* %4358 to i64*
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4360 = getelementptr inbounds %struct.GPR, %struct.GPR* %4359, i32 0, i32 9
  %4361 = getelementptr inbounds %struct.Reg, %struct.Reg* %4360, i32 0, i32 0
  %RSI.i952 = bitcast %union.anon* %4361 to i64*
  %4362 = load i64, i64* %RSI.i952
  %4363 = load i64, i64* %RDX.i951
  %4364 = load i64, i64* %PC.i950
  %4365 = add i64 %4364, 3
  store i64 %4365, i64* %PC.i950
  %4366 = add i64 %4363, %4362
  store i64 %4366, i64* %RSI.i952, align 8
  %4367 = icmp ult i64 %4366, %4362
  %4368 = icmp ult i64 %4366, %4363
  %4369 = or i1 %4367, %4368
  %4370 = zext i1 %4369 to i8
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4370, i8* %4371, align 1
  %4372 = trunc i64 %4366 to i32
  %4373 = and i32 %4372, 255
  %4374 = call i32 @llvm.ctpop.i32(i32 %4373)
  %4375 = trunc i32 %4374 to i8
  %4376 = and i8 %4375, 1
  %4377 = xor i8 %4376, 1
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4377, i8* %4378, align 1
  %4379 = xor i64 %4363, %4362
  %4380 = xor i64 %4379, %4366
  %4381 = lshr i64 %4380, 4
  %4382 = trunc i64 %4381 to i8
  %4383 = and i8 %4382, 1
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4383, i8* %4384, align 1
  %4385 = icmp eq i64 %4366, 0
  %4386 = zext i1 %4385 to i8
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4386, i8* %4387, align 1
  %4388 = lshr i64 %4366, 63
  %4389 = trunc i64 %4388 to i8
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4389, i8* %4390, align 1
  %4391 = lshr i64 %4362, 63
  %4392 = lshr i64 %4363, 63
  %4393 = xor i64 %4388, %4391
  %4394 = xor i64 %4388, %4392
  %4395 = add i64 %4393, %4394
  %4396 = icmp eq i64 %4395, 2
  %4397 = zext i1 %4396 to i8
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4397, i8* %4398, align 1
  store %struct.Memory* %loadMem_40f832, %struct.Memory** %MEMORY
  %loadMem_40f835 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4400 = getelementptr inbounds %struct.GPR, %struct.GPR* %4399, i32 0, i32 33
  %4401 = getelementptr inbounds %struct.Reg, %struct.Reg* %4400, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %4401 to i64*
  %4402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4403 = getelementptr inbounds %struct.GPR, %struct.GPR* %4402, i32 0, i32 5
  %4404 = getelementptr inbounds %struct.Reg, %struct.Reg* %4403, i32 0, i32 0
  %ECX.i948 = bitcast %union.anon* %4404 to i32*
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4406 = getelementptr inbounds %struct.GPR, %struct.GPR* %4405, i32 0, i32 9
  %4407 = getelementptr inbounds %struct.Reg, %struct.Reg* %4406, i32 0, i32 0
  %RSI.i949 = bitcast %union.anon* %4407 to i64*
  %4408 = load i64, i64* %RSI.i949
  %4409 = load i32, i32* %ECX.i948
  %4410 = zext i32 %4409 to i64
  %4411 = load i64, i64* %PC.i947
  %4412 = add i64 %4411, 2
  store i64 %4412, i64* %PC.i947
  %4413 = inttoptr i64 %4408 to i32*
  store i32 %4409, i32* %4413
  store %struct.Memory* %loadMem_40f835, %struct.Memory** %MEMORY
  %loadMem_40f837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4415 = getelementptr inbounds %struct.GPR, %struct.GPR* %4414, i32 0, i32 33
  %4416 = getelementptr inbounds %struct.Reg, %struct.Reg* %4415, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %4416 to i64*
  %4417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4418 = getelementptr inbounds %struct.GPR, %struct.GPR* %4417, i32 0, i32 5
  %4419 = getelementptr inbounds %struct.Reg, %struct.Reg* %4418, i32 0, i32 0
  %RCX.i945 = bitcast %union.anon* %4419 to i64*
  %4420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4421 = getelementptr inbounds %struct.GPR, %struct.GPR* %4420, i32 0, i32 15
  %4422 = getelementptr inbounds %struct.Reg, %struct.Reg* %4421, i32 0, i32 0
  %RBP.i946 = bitcast %union.anon* %4422 to i64*
  %4423 = load i64, i64* %RBP.i946
  %4424 = sub i64 %4423, 48
  %4425 = load i64, i64* %PC.i944
  %4426 = add i64 %4425, 3
  store i64 %4426, i64* %PC.i944
  %4427 = inttoptr i64 %4424 to i32*
  %4428 = load i32, i32* %4427
  %4429 = zext i32 %4428 to i64
  store i64 %4429, i64* %RCX.i945, align 8
  store %struct.Memory* %loadMem_40f837, %struct.Memory** %MEMORY
  %loadMem_40f83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4431 = getelementptr inbounds %struct.GPR, %struct.GPR* %4430, i32 0, i32 33
  %4432 = getelementptr inbounds %struct.Reg, %struct.Reg* %4431, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %4432 to i64*
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4434 = getelementptr inbounds %struct.GPR, %struct.GPR* %4433, i32 0, i32 5
  %4435 = getelementptr inbounds %struct.Reg, %struct.Reg* %4434, i32 0, i32 0
  %RCX.i942 = bitcast %union.anon* %4435 to i64*
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4437 = getelementptr inbounds %struct.GPR, %struct.GPR* %4436, i32 0, i32 15
  %4438 = getelementptr inbounds %struct.Reg, %struct.Reg* %4437, i32 0, i32 0
  %RBP.i943 = bitcast %union.anon* %4438 to i64*
  %4439 = load i64, i64* %RCX.i942
  %4440 = load i64, i64* %RBP.i943
  %4441 = sub i64 %4440, 44
  %4442 = load i64, i64* %PC.i941
  %4443 = add i64 %4442, 3
  store i64 %4443, i64* %PC.i941
  %4444 = trunc i64 %4439 to i32
  %4445 = inttoptr i64 %4441 to i32*
  %4446 = load i32, i32* %4445
  %4447 = sub i32 %4444, %4446
  %4448 = zext i32 %4447 to i64
  store i64 %4448, i64* %RCX.i942, align 8
  %4449 = icmp ult i32 %4444, %4446
  %4450 = zext i1 %4449 to i8
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4450, i8* %4451, align 1
  %4452 = and i32 %4447, 255
  %4453 = call i32 @llvm.ctpop.i32(i32 %4452)
  %4454 = trunc i32 %4453 to i8
  %4455 = and i8 %4454, 1
  %4456 = xor i8 %4455, 1
  %4457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4456, i8* %4457, align 1
  %4458 = xor i32 %4446, %4444
  %4459 = xor i32 %4458, %4447
  %4460 = lshr i32 %4459, 4
  %4461 = trunc i32 %4460 to i8
  %4462 = and i8 %4461, 1
  %4463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4462, i8* %4463, align 1
  %4464 = icmp eq i32 %4447, 0
  %4465 = zext i1 %4464 to i8
  %4466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4465, i8* %4466, align 1
  %4467 = lshr i32 %4447, 31
  %4468 = trunc i32 %4467 to i8
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4468, i8* %4469, align 1
  %4470 = lshr i32 %4444, 31
  %4471 = lshr i32 %4446, 31
  %4472 = xor i32 %4471, %4470
  %4473 = xor i32 %4467, %4470
  %4474 = add i32 %4473, %4472
  %4475 = icmp eq i32 %4474, 2
  %4476 = zext i1 %4475 to i8
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4476, i8* %4477, align 1
  store %struct.Memory* %loadMem_40f83a, %struct.Memory** %MEMORY
  %loadMem_40f83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4479 = getelementptr inbounds %struct.GPR, %struct.GPR* %4478, i32 0, i32 33
  %4480 = getelementptr inbounds %struct.Reg, %struct.Reg* %4479, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %4480 to i64*
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4482 = getelementptr inbounds %struct.GPR, %struct.GPR* %4481, i32 0, i32 7
  %4483 = getelementptr inbounds %struct.Reg, %struct.Reg* %4482, i32 0, i32 0
  %RDX.i939 = bitcast %union.anon* %4483 to i64*
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4485 = getelementptr inbounds %struct.GPR, %struct.GPR* %4484, i32 0, i32 15
  %4486 = getelementptr inbounds %struct.Reg, %struct.Reg* %4485, i32 0, i32 0
  %RBP.i940 = bitcast %union.anon* %4486 to i64*
  %4487 = load i64, i64* %RBP.i940
  %4488 = sub i64 %4487, 12
  %4489 = load i64, i64* %PC.i938
  %4490 = add i64 %4489, 4
  store i64 %4490, i64* %PC.i938
  %4491 = inttoptr i64 %4488 to i32*
  %4492 = load i32, i32* %4491
  %4493 = sext i32 %4492 to i64
  store i64 %4493, i64* %RDX.i939, align 8
  store %struct.Memory* %loadMem_40f83d, %struct.Memory** %MEMORY
  %loadMem_40f841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4495 = getelementptr inbounds %struct.GPR, %struct.GPR* %4494, i32 0, i32 33
  %4496 = getelementptr inbounds %struct.Reg, %struct.Reg* %4495, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %4496 to i64*
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4498 = getelementptr inbounds %struct.GPR, %struct.GPR* %4497, i32 0, i32 7
  %4499 = getelementptr inbounds %struct.Reg, %struct.Reg* %4498, i32 0, i32 0
  %RDX.i937 = bitcast %union.anon* %4499 to i64*
  %4500 = load i64, i64* %RDX.i937
  %4501 = load i64, i64* %PC.i936
  %4502 = add i64 %4501, 4
  store i64 %4502, i64* %PC.i936
  %4503 = shl i64 %4500, 3
  %4504 = icmp slt i64 %4503, 0
  %4505 = shl i64 %4503, 1
  store i64 %4505, i64* %RDX.i937, align 8
  %4506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4507 = zext i1 %4504 to i8
  store i8 %4507, i8* %4506, align 1
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4509 = trunc i64 %4505 to i32
  %4510 = and i32 %4509, 254
  %4511 = call i32 @llvm.ctpop.i32(i32 %4510)
  %4512 = trunc i32 %4511 to i8
  %4513 = and i8 %4512, 1
  %4514 = xor i8 %4513, 1
  store i8 %4514, i8* %4508, align 1
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4515, align 1
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4517 = icmp eq i64 %4505, 0
  %4518 = zext i1 %4517 to i8
  store i8 %4518, i8* %4516, align 1
  %4519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4520 = lshr i64 %4505, 63
  %4521 = trunc i64 %4520 to i8
  store i8 %4521, i8* %4519, align 1
  %4522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4522, align 1
  store %struct.Memory* %loadMem_40f841, %struct.Memory** %MEMORY
  %loadMem_40f845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4524 = getelementptr inbounds %struct.GPR, %struct.GPR* %4523, i32 0, i32 33
  %4525 = getelementptr inbounds %struct.Reg, %struct.Reg* %4524, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %4525 to i64*
  %4526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4527 = getelementptr inbounds %struct.GPR, %struct.GPR* %4526, i32 0, i32 1
  %4528 = getelementptr inbounds %struct.Reg, %struct.Reg* %4527, i32 0, i32 0
  %RAX.i934 = bitcast %union.anon* %4528 to i64*
  %4529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4530 = getelementptr inbounds %struct.GPR, %struct.GPR* %4529, i32 0, i32 9
  %4531 = getelementptr inbounds %struct.Reg, %struct.Reg* %4530, i32 0, i32 0
  %RSI.i935 = bitcast %union.anon* %4531 to i64*
  %4532 = load i64, i64* %RAX.i934
  %4533 = load i64, i64* %PC.i933
  %4534 = add i64 %4533, 3
  store i64 %4534, i64* %PC.i933
  store i64 %4532, i64* %RSI.i935, align 8
  store %struct.Memory* %loadMem_40f845, %struct.Memory** %MEMORY
  %loadMem_40f848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4536 = getelementptr inbounds %struct.GPR, %struct.GPR* %4535, i32 0, i32 33
  %4537 = getelementptr inbounds %struct.Reg, %struct.Reg* %4536, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %4537 to i64*
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4539 = getelementptr inbounds %struct.GPR, %struct.GPR* %4538, i32 0, i32 7
  %4540 = getelementptr inbounds %struct.Reg, %struct.Reg* %4539, i32 0, i32 0
  %RDX.i931 = bitcast %union.anon* %4540 to i64*
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4542 = getelementptr inbounds %struct.GPR, %struct.GPR* %4541, i32 0, i32 9
  %4543 = getelementptr inbounds %struct.Reg, %struct.Reg* %4542, i32 0, i32 0
  %RSI.i932 = bitcast %union.anon* %4543 to i64*
  %4544 = load i64, i64* %RSI.i932
  %4545 = load i64, i64* %RDX.i931
  %4546 = load i64, i64* %PC.i930
  %4547 = add i64 %4546, 3
  store i64 %4547, i64* %PC.i930
  %4548 = add i64 %4545, %4544
  store i64 %4548, i64* %RSI.i932, align 8
  %4549 = icmp ult i64 %4548, %4544
  %4550 = icmp ult i64 %4548, %4545
  %4551 = or i1 %4549, %4550
  %4552 = zext i1 %4551 to i8
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4552, i8* %4553, align 1
  %4554 = trunc i64 %4548 to i32
  %4555 = and i32 %4554, 255
  %4556 = call i32 @llvm.ctpop.i32(i32 %4555)
  %4557 = trunc i32 %4556 to i8
  %4558 = and i8 %4557, 1
  %4559 = xor i8 %4558, 1
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4559, i8* %4560, align 1
  %4561 = xor i64 %4545, %4544
  %4562 = xor i64 %4561, %4548
  %4563 = lshr i64 %4562, 4
  %4564 = trunc i64 %4563 to i8
  %4565 = and i8 %4564, 1
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4565, i8* %4566, align 1
  %4567 = icmp eq i64 %4548, 0
  %4568 = zext i1 %4567 to i8
  %4569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4568, i8* %4569, align 1
  %4570 = lshr i64 %4548, 63
  %4571 = trunc i64 %4570 to i8
  %4572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4571, i8* %4572, align 1
  %4573 = lshr i64 %4544, 63
  %4574 = lshr i64 %4545, 63
  %4575 = xor i64 %4570, %4573
  %4576 = xor i64 %4570, %4574
  %4577 = add i64 %4575, %4576
  %4578 = icmp eq i64 %4577, 2
  %4579 = zext i1 %4578 to i8
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4579, i8* %4580, align 1
  store %struct.Memory* %loadMem_40f848, %struct.Memory** %MEMORY
  %loadMem_40f84b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4582 = getelementptr inbounds %struct.GPR, %struct.GPR* %4581, i32 0, i32 33
  %4583 = getelementptr inbounds %struct.Reg, %struct.Reg* %4582, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %4583 to i64*
  %4584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4585 = getelementptr inbounds %struct.GPR, %struct.GPR* %4584, i32 0, i32 5
  %4586 = getelementptr inbounds %struct.Reg, %struct.Reg* %4585, i32 0, i32 0
  %ECX.i928 = bitcast %union.anon* %4586 to i32*
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4588 = getelementptr inbounds %struct.GPR, %struct.GPR* %4587, i32 0, i32 9
  %4589 = getelementptr inbounds %struct.Reg, %struct.Reg* %4588, i32 0, i32 0
  %RSI.i929 = bitcast %union.anon* %4589 to i64*
  %4590 = load i64, i64* %RSI.i929
  %4591 = add i64 %4590, 8
  %4592 = load i32, i32* %ECX.i928
  %4593 = zext i32 %4592 to i64
  %4594 = load i64, i64* %PC.i927
  %4595 = add i64 %4594, 3
  store i64 %4595, i64* %PC.i927
  %4596 = inttoptr i64 %4591 to i32*
  store i32 %4592, i32* %4596
  store %struct.Memory* %loadMem_40f84b, %struct.Memory** %MEMORY
  %loadMem_40f84e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4598 = getelementptr inbounds %struct.GPR, %struct.GPR* %4597, i32 0, i32 33
  %4599 = getelementptr inbounds %struct.Reg, %struct.Reg* %4598, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %4599 to i64*
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4601 = getelementptr inbounds %struct.GPR, %struct.GPR* %4600, i32 0, i32 5
  %4602 = getelementptr inbounds %struct.Reg, %struct.Reg* %4601, i32 0, i32 0
  %RCX.i925 = bitcast %union.anon* %4602 to i64*
  %4603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4604 = getelementptr inbounds %struct.GPR, %struct.GPR* %4603, i32 0, i32 15
  %4605 = getelementptr inbounds %struct.Reg, %struct.Reg* %4604, i32 0, i32 0
  %RBP.i926 = bitcast %union.anon* %4605 to i64*
  %4606 = load i64, i64* %RBP.i926
  %4607 = sub i64 %4606, 36
  %4608 = load i64, i64* %PC.i924
  %4609 = add i64 %4608, 3
  store i64 %4609, i64* %PC.i924
  %4610 = inttoptr i64 %4607 to i32*
  %4611 = load i32, i32* %4610
  %4612 = zext i32 %4611 to i64
  store i64 %4612, i64* %RCX.i925, align 8
  store %struct.Memory* %loadMem_40f84e, %struct.Memory** %MEMORY
  %loadMem_40f851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4614 = getelementptr inbounds %struct.GPR, %struct.GPR* %4613, i32 0, i32 33
  %4615 = getelementptr inbounds %struct.Reg, %struct.Reg* %4614, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %4615 to i64*
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4617 = getelementptr inbounds %struct.GPR, %struct.GPR* %4616, i32 0, i32 5
  %4618 = getelementptr inbounds %struct.Reg, %struct.Reg* %4617, i32 0, i32 0
  %RCX.i923 = bitcast %union.anon* %4618 to i64*
  %4619 = load i64, i64* %RCX.i923
  %4620 = load i64, i64* %PC.i922
  %4621 = add i64 %4620, 2
  store i64 %4621, i64* %PC.i922
  %4622 = trunc i64 %4619 to i32
  %4623 = shl i32 %4622, 1
  %4624 = icmp slt i32 %4622, 0
  %4625 = icmp slt i32 %4623, 0
  %4626 = xor i1 %4624, %4625
  %4627 = zext i32 %4623 to i64
  store i64 %4627, i64* %RCX.i923, align 8
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4629 = zext i1 %4624 to i8
  store i8 %4629, i8* %4628, align 1
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4631 = and i32 %4623, 254
  %4632 = call i32 @llvm.ctpop.i32(i32 %4631)
  %4633 = trunc i32 %4632 to i8
  %4634 = and i8 %4633, 1
  %4635 = xor i8 %4634, 1
  store i8 %4635, i8* %4630, align 1
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4636, align 1
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4638 = icmp eq i32 %4623, 0
  %4639 = zext i1 %4638 to i8
  store i8 %4639, i8* %4637, align 1
  %4640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4641 = lshr i32 %4623, 31
  %4642 = trunc i32 %4641 to i8
  store i8 %4642, i8* %4640, align 1
  %4643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4644 = zext i1 %4626 to i8
  store i8 %4644, i8* %4643, align 1
  store %struct.Memory* %loadMem_40f851, %struct.Memory** %MEMORY
  %loadMem_40f854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4646 = getelementptr inbounds %struct.GPR, %struct.GPR* %4645, i32 0, i32 33
  %4647 = getelementptr inbounds %struct.Reg, %struct.Reg* %4646, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %4647 to i64*
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4649 = getelementptr inbounds %struct.GPR, %struct.GPR* %4648, i32 0, i32 5
  %4650 = getelementptr inbounds %struct.Reg, %struct.Reg* %4649, i32 0, i32 0
  %RCX.i920 = bitcast %union.anon* %4650 to i64*
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4652 = getelementptr inbounds %struct.GPR, %struct.GPR* %4651, i32 0, i32 15
  %4653 = getelementptr inbounds %struct.Reg, %struct.Reg* %4652, i32 0, i32 0
  %RBP.i921 = bitcast %union.anon* %4653 to i64*
  %4654 = load i64, i64* %RCX.i920
  %4655 = load i64, i64* %RBP.i921
  %4656 = sub i64 %4655, 40
  %4657 = load i64, i64* %PC.i919
  %4658 = add i64 %4657, 3
  store i64 %4658, i64* %PC.i919
  %4659 = trunc i64 %4654 to i32
  %4660 = inttoptr i64 %4656 to i32*
  %4661 = load i32, i32* %4660
  %4662 = add i32 %4661, %4659
  %4663 = zext i32 %4662 to i64
  store i64 %4663, i64* %RCX.i920, align 8
  %4664 = icmp ult i32 %4662, %4659
  %4665 = icmp ult i32 %4662, %4661
  %4666 = or i1 %4664, %4665
  %4667 = zext i1 %4666 to i8
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4667, i8* %4668, align 1
  %4669 = and i32 %4662, 255
  %4670 = call i32 @llvm.ctpop.i32(i32 %4669)
  %4671 = trunc i32 %4670 to i8
  %4672 = and i8 %4671, 1
  %4673 = xor i8 %4672, 1
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4673, i8* %4674, align 1
  %4675 = xor i32 %4661, %4659
  %4676 = xor i32 %4675, %4662
  %4677 = lshr i32 %4676, 4
  %4678 = trunc i32 %4677 to i8
  %4679 = and i8 %4678, 1
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4679, i8* %4680, align 1
  %4681 = icmp eq i32 %4662, 0
  %4682 = zext i1 %4681 to i8
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4682, i8* %4683, align 1
  %4684 = lshr i32 %4662, 31
  %4685 = trunc i32 %4684 to i8
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4685, i8* %4686, align 1
  %4687 = lshr i32 %4659, 31
  %4688 = lshr i32 %4661, 31
  %4689 = xor i32 %4684, %4687
  %4690 = xor i32 %4684, %4688
  %4691 = add i32 %4689, %4690
  %4692 = icmp eq i32 %4691, 2
  %4693 = zext i1 %4692 to i8
  %4694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4693, i8* %4694, align 1
  store %struct.Memory* %loadMem_40f854, %struct.Memory** %MEMORY
  %loadMem_40f857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4696 = getelementptr inbounds %struct.GPR, %struct.GPR* %4695, i32 0, i32 33
  %4697 = getelementptr inbounds %struct.Reg, %struct.Reg* %4696, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %4697 to i64*
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4699 = getelementptr inbounds %struct.GPR, %struct.GPR* %4698, i32 0, i32 7
  %4700 = getelementptr inbounds %struct.Reg, %struct.Reg* %4699, i32 0, i32 0
  %RDX.i917 = bitcast %union.anon* %4700 to i64*
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4702 = getelementptr inbounds %struct.GPR, %struct.GPR* %4701, i32 0, i32 15
  %4703 = getelementptr inbounds %struct.Reg, %struct.Reg* %4702, i32 0, i32 0
  %RBP.i918 = bitcast %union.anon* %4703 to i64*
  %4704 = load i64, i64* %RBP.i918
  %4705 = sub i64 %4704, 12
  %4706 = load i64, i64* %PC.i916
  %4707 = add i64 %4706, 4
  store i64 %4707, i64* %PC.i916
  %4708 = inttoptr i64 %4705 to i32*
  %4709 = load i32, i32* %4708
  %4710 = sext i32 %4709 to i64
  store i64 %4710, i64* %RDX.i917, align 8
  store %struct.Memory* %loadMem_40f857, %struct.Memory** %MEMORY
  %loadMem_40f85b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4712 = getelementptr inbounds %struct.GPR, %struct.GPR* %4711, i32 0, i32 33
  %4713 = getelementptr inbounds %struct.Reg, %struct.Reg* %4712, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %4713 to i64*
  %4714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4715 = getelementptr inbounds %struct.GPR, %struct.GPR* %4714, i32 0, i32 7
  %4716 = getelementptr inbounds %struct.Reg, %struct.Reg* %4715, i32 0, i32 0
  %RDX.i915 = bitcast %union.anon* %4716 to i64*
  %4717 = load i64, i64* %RDX.i915
  %4718 = load i64, i64* %PC.i914
  %4719 = add i64 %4718, 4
  store i64 %4719, i64* %PC.i914
  %4720 = shl i64 %4717, 3
  %4721 = icmp slt i64 %4720, 0
  %4722 = shl i64 %4720, 1
  store i64 %4722, i64* %RDX.i915, align 8
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4724 = zext i1 %4721 to i8
  store i8 %4724, i8* %4723, align 1
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4726 = trunc i64 %4722 to i32
  %4727 = and i32 %4726, 254
  %4728 = call i32 @llvm.ctpop.i32(i32 %4727)
  %4729 = trunc i32 %4728 to i8
  %4730 = and i8 %4729, 1
  %4731 = xor i8 %4730, 1
  store i8 %4731, i8* %4725, align 1
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4732, align 1
  %4733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4734 = icmp eq i64 %4722, 0
  %4735 = zext i1 %4734 to i8
  store i8 %4735, i8* %4733, align 1
  %4736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4737 = lshr i64 %4722, 63
  %4738 = trunc i64 %4737 to i8
  store i8 %4738, i8* %4736, align 1
  %4739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4739, align 1
  store %struct.Memory* %loadMem_40f85b, %struct.Memory** %MEMORY
  %loadMem_40f85f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4741 = getelementptr inbounds %struct.GPR, %struct.GPR* %4740, i32 0, i32 33
  %4742 = getelementptr inbounds %struct.Reg, %struct.Reg* %4741, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %4742 to i64*
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4744 = getelementptr inbounds %struct.GPR, %struct.GPR* %4743, i32 0, i32 1
  %4745 = getelementptr inbounds %struct.Reg, %struct.Reg* %4744, i32 0, i32 0
  %RAX.i912 = bitcast %union.anon* %4745 to i64*
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4747 = getelementptr inbounds %struct.GPR, %struct.GPR* %4746, i32 0, i32 9
  %4748 = getelementptr inbounds %struct.Reg, %struct.Reg* %4747, i32 0, i32 0
  %RSI.i913 = bitcast %union.anon* %4748 to i64*
  %4749 = load i64, i64* %RAX.i912
  %4750 = load i64, i64* %PC.i911
  %4751 = add i64 %4750, 3
  store i64 %4751, i64* %PC.i911
  store i64 %4749, i64* %RSI.i913, align 8
  store %struct.Memory* %loadMem_40f85f, %struct.Memory** %MEMORY
  %loadMem_40f862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4753 = getelementptr inbounds %struct.GPR, %struct.GPR* %4752, i32 0, i32 33
  %4754 = getelementptr inbounds %struct.Reg, %struct.Reg* %4753, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %4754 to i64*
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4756 = getelementptr inbounds %struct.GPR, %struct.GPR* %4755, i32 0, i32 7
  %4757 = getelementptr inbounds %struct.Reg, %struct.Reg* %4756, i32 0, i32 0
  %RDX.i909 = bitcast %union.anon* %4757 to i64*
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4759 = getelementptr inbounds %struct.GPR, %struct.GPR* %4758, i32 0, i32 9
  %4760 = getelementptr inbounds %struct.Reg, %struct.Reg* %4759, i32 0, i32 0
  %RSI.i910 = bitcast %union.anon* %4760 to i64*
  %4761 = load i64, i64* %RSI.i910
  %4762 = load i64, i64* %RDX.i909
  %4763 = load i64, i64* %PC.i908
  %4764 = add i64 %4763, 3
  store i64 %4764, i64* %PC.i908
  %4765 = add i64 %4762, %4761
  store i64 %4765, i64* %RSI.i910, align 8
  %4766 = icmp ult i64 %4765, %4761
  %4767 = icmp ult i64 %4765, %4762
  %4768 = or i1 %4766, %4767
  %4769 = zext i1 %4768 to i8
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4769, i8* %4770, align 1
  %4771 = trunc i64 %4765 to i32
  %4772 = and i32 %4771, 255
  %4773 = call i32 @llvm.ctpop.i32(i32 %4772)
  %4774 = trunc i32 %4773 to i8
  %4775 = and i8 %4774, 1
  %4776 = xor i8 %4775, 1
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4776, i8* %4777, align 1
  %4778 = xor i64 %4762, %4761
  %4779 = xor i64 %4778, %4765
  %4780 = lshr i64 %4779, 4
  %4781 = trunc i64 %4780 to i8
  %4782 = and i8 %4781, 1
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4782, i8* %4783, align 1
  %4784 = icmp eq i64 %4765, 0
  %4785 = zext i1 %4784 to i8
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4785, i8* %4786, align 1
  %4787 = lshr i64 %4765, 63
  %4788 = trunc i64 %4787 to i8
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4788, i8* %4789, align 1
  %4790 = lshr i64 %4761, 63
  %4791 = lshr i64 %4762, 63
  %4792 = xor i64 %4787, %4790
  %4793 = xor i64 %4787, %4791
  %4794 = add i64 %4792, %4793
  %4795 = icmp eq i64 %4794, 2
  %4796 = zext i1 %4795 to i8
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4796, i8* %4797, align 1
  store %struct.Memory* %loadMem_40f862, %struct.Memory** %MEMORY
  %loadMem_40f865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4799 = getelementptr inbounds %struct.GPR, %struct.GPR* %4798, i32 0, i32 33
  %4800 = getelementptr inbounds %struct.Reg, %struct.Reg* %4799, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %4800 to i64*
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4802 = getelementptr inbounds %struct.GPR, %struct.GPR* %4801, i32 0, i32 5
  %4803 = getelementptr inbounds %struct.Reg, %struct.Reg* %4802, i32 0, i32 0
  %ECX.i906 = bitcast %union.anon* %4803 to i32*
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4805 = getelementptr inbounds %struct.GPR, %struct.GPR* %4804, i32 0, i32 9
  %4806 = getelementptr inbounds %struct.Reg, %struct.Reg* %4805, i32 0, i32 0
  %RSI.i907 = bitcast %union.anon* %4806 to i64*
  %4807 = load i64, i64* %RSI.i907
  %4808 = add i64 %4807, 4
  %4809 = load i32, i32* %ECX.i906
  %4810 = zext i32 %4809 to i64
  %4811 = load i64, i64* %PC.i905
  %4812 = add i64 %4811, 3
  store i64 %4812, i64* %PC.i905
  %4813 = inttoptr i64 %4808 to i32*
  store i32 %4809, i32* %4813
  store %struct.Memory* %loadMem_40f865, %struct.Memory** %MEMORY
  %loadMem_40f868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4815 = getelementptr inbounds %struct.GPR, %struct.GPR* %4814, i32 0, i32 33
  %4816 = getelementptr inbounds %struct.Reg, %struct.Reg* %4815, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %4816 to i64*
  %4817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4818 = getelementptr inbounds %struct.GPR, %struct.GPR* %4817, i32 0, i32 5
  %4819 = getelementptr inbounds %struct.Reg, %struct.Reg* %4818, i32 0, i32 0
  %RCX.i903 = bitcast %union.anon* %4819 to i64*
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4821 = getelementptr inbounds %struct.GPR, %struct.GPR* %4820, i32 0, i32 15
  %4822 = getelementptr inbounds %struct.Reg, %struct.Reg* %4821, i32 0, i32 0
  %RBP.i904 = bitcast %union.anon* %4822 to i64*
  %4823 = load i64, i64* %RBP.i904
  %4824 = sub i64 %4823, 36
  %4825 = load i64, i64* %PC.i902
  %4826 = add i64 %4825, 3
  store i64 %4826, i64* %PC.i902
  %4827 = inttoptr i64 %4824 to i32*
  %4828 = load i32, i32* %4827
  %4829 = zext i32 %4828 to i64
  store i64 %4829, i64* %RCX.i903, align 8
  store %struct.Memory* %loadMem_40f868, %struct.Memory** %MEMORY
  %loadMem_40f86b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4831 = getelementptr inbounds %struct.GPR, %struct.GPR* %4830, i32 0, i32 33
  %4832 = getelementptr inbounds %struct.Reg, %struct.Reg* %4831, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %4832 to i64*
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4834 = getelementptr inbounds %struct.GPR, %struct.GPR* %4833, i32 0, i32 11
  %4835 = getelementptr inbounds %struct.Reg, %struct.Reg* %4834, i32 0, i32 0
  %RDI.i900 = bitcast %union.anon* %4835 to i64*
  %4836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4837 = getelementptr inbounds %struct.GPR, %struct.GPR* %4836, i32 0, i32 15
  %4838 = getelementptr inbounds %struct.Reg, %struct.Reg* %4837, i32 0, i32 0
  %RBP.i901 = bitcast %union.anon* %4838 to i64*
  %4839 = load i64, i64* %RBP.i901
  %4840 = sub i64 %4839, 40
  %4841 = load i64, i64* %PC.i899
  %4842 = add i64 %4841, 3
  store i64 %4842, i64* %PC.i899
  %4843 = inttoptr i64 %4840 to i32*
  %4844 = load i32, i32* %4843
  %4845 = zext i32 %4844 to i64
  store i64 %4845, i64* %RDI.i900, align 8
  store %struct.Memory* %loadMem_40f86b, %struct.Memory** %MEMORY
  %loadMem_40f86e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4847 = getelementptr inbounds %struct.GPR, %struct.GPR* %4846, i32 0, i32 33
  %4848 = getelementptr inbounds %struct.Reg, %struct.Reg* %4847, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %4848 to i64*
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4850 = getelementptr inbounds %struct.GPR, %struct.GPR* %4849, i32 0, i32 11
  %4851 = getelementptr inbounds %struct.Reg, %struct.Reg* %4850, i32 0, i32 0
  %RDI.i898 = bitcast %union.anon* %4851 to i64*
  %4852 = load i64, i64* %RDI.i898
  %4853 = load i64, i64* %PC.i897
  %4854 = add i64 %4853, 2
  store i64 %4854, i64* %PC.i897
  %4855 = trunc i64 %4852 to i32
  %4856 = shl i32 %4855, 1
  %4857 = icmp slt i32 %4855, 0
  %4858 = icmp slt i32 %4856, 0
  %4859 = xor i1 %4857, %4858
  %4860 = zext i32 %4856 to i64
  store i64 %4860, i64* %RDI.i898, align 8
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4862 = zext i1 %4857 to i8
  store i8 %4862, i8* %4861, align 1
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4864 = and i32 %4856, 254
  %4865 = call i32 @llvm.ctpop.i32(i32 %4864)
  %4866 = trunc i32 %4865 to i8
  %4867 = and i8 %4866, 1
  %4868 = xor i8 %4867, 1
  store i8 %4868, i8* %4863, align 1
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4869, align 1
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4871 = icmp eq i32 %4856, 0
  %4872 = zext i1 %4871 to i8
  store i8 %4872, i8* %4870, align 1
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4874 = lshr i32 %4856, 31
  %4875 = trunc i32 %4874 to i8
  store i8 %4875, i8* %4873, align 1
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4877 = zext i1 %4859 to i8
  store i8 %4877, i8* %4876, align 1
  store %struct.Memory* %loadMem_40f86e, %struct.Memory** %MEMORY
  %loadMem_40f871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4879 = getelementptr inbounds %struct.GPR, %struct.GPR* %4878, i32 0, i32 33
  %4880 = getelementptr inbounds %struct.Reg, %struct.Reg* %4879, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %4880 to i64*
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4882 = getelementptr inbounds %struct.GPR, %struct.GPR* %4881, i32 0, i32 11
  %4883 = getelementptr inbounds %struct.Reg, %struct.Reg* %4882, i32 0, i32 0
  %EDI.i895 = bitcast %union.anon* %4883 to i32*
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4885 = getelementptr inbounds %struct.GPR, %struct.GPR* %4884, i32 0, i32 5
  %4886 = getelementptr inbounds %struct.Reg, %struct.Reg* %4885, i32 0, i32 0
  %RCX.i896 = bitcast %union.anon* %4886 to i64*
  %4887 = load i64, i64* %RCX.i896
  %4888 = load i32, i32* %EDI.i895
  %4889 = zext i32 %4888 to i64
  %4890 = load i64, i64* %PC.i894
  %4891 = add i64 %4890, 2
  store i64 %4891, i64* %PC.i894
  %4892 = trunc i64 %4887 to i32
  %4893 = sub i32 %4892, %4888
  %4894 = zext i32 %4893 to i64
  store i64 %4894, i64* %RCX.i896, align 8
  %4895 = icmp ult i32 %4892, %4888
  %4896 = zext i1 %4895 to i8
  %4897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4896, i8* %4897, align 1
  %4898 = and i32 %4893, 255
  %4899 = call i32 @llvm.ctpop.i32(i32 %4898)
  %4900 = trunc i32 %4899 to i8
  %4901 = and i8 %4900, 1
  %4902 = xor i8 %4901, 1
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4902, i8* %4903, align 1
  %4904 = xor i64 %4889, %4887
  %4905 = trunc i64 %4904 to i32
  %4906 = xor i32 %4905, %4893
  %4907 = lshr i32 %4906, 4
  %4908 = trunc i32 %4907 to i8
  %4909 = and i8 %4908, 1
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4909, i8* %4910, align 1
  %4911 = icmp eq i32 %4893, 0
  %4912 = zext i1 %4911 to i8
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4912, i8* %4913, align 1
  %4914 = lshr i32 %4893, 31
  %4915 = trunc i32 %4914 to i8
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4915, i8* %4916, align 1
  %4917 = lshr i32 %4892, 31
  %4918 = lshr i32 %4888, 31
  %4919 = xor i32 %4918, %4917
  %4920 = xor i32 %4914, %4917
  %4921 = add i32 %4920, %4919
  %4922 = icmp eq i32 %4921, 2
  %4923 = zext i1 %4922 to i8
  %4924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4923, i8* %4924, align 1
  store %struct.Memory* %loadMem_40f871, %struct.Memory** %MEMORY
  %loadMem_40f873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4926 = getelementptr inbounds %struct.GPR, %struct.GPR* %4925, i32 0, i32 33
  %4927 = getelementptr inbounds %struct.Reg, %struct.Reg* %4926, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %4927 to i64*
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4929 = getelementptr inbounds %struct.GPR, %struct.GPR* %4928, i32 0, i32 7
  %4930 = getelementptr inbounds %struct.Reg, %struct.Reg* %4929, i32 0, i32 0
  %RDX.i892 = bitcast %union.anon* %4930 to i64*
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4932 = getelementptr inbounds %struct.GPR, %struct.GPR* %4931, i32 0, i32 15
  %4933 = getelementptr inbounds %struct.Reg, %struct.Reg* %4932, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %4933 to i64*
  %4934 = load i64, i64* %RBP.i893
  %4935 = sub i64 %4934, 12
  %4936 = load i64, i64* %PC.i891
  %4937 = add i64 %4936, 4
  store i64 %4937, i64* %PC.i891
  %4938 = inttoptr i64 %4935 to i32*
  %4939 = load i32, i32* %4938
  %4940 = sext i32 %4939 to i64
  store i64 %4940, i64* %RDX.i892, align 8
  store %struct.Memory* %loadMem_40f873, %struct.Memory** %MEMORY
  %loadMem_40f877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4942 = getelementptr inbounds %struct.GPR, %struct.GPR* %4941, i32 0, i32 33
  %4943 = getelementptr inbounds %struct.Reg, %struct.Reg* %4942, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %4943 to i64*
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4945 = getelementptr inbounds %struct.GPR, %struct.GPR* %4944, i32 0, i32 7
  %4946 = getelementptr inbounds %struct.Reg, %struct.Reg* %4945, i32 0, i32 0
  %RDX.i890 = bitcast %union.anon* %4946 to i64*
  %4947 = load i64, i64* %RDX.i890
  %4948 = load i64, i64* %PC.i889
  %4949 = add i64 %4948, 4
  store i64 %4949, i64* %PC.i889
  %4950 = shl i64 %4947, 3
  %4951 = icmp slt i64 %4950, 0
  %4952 = shl i64 %4950, 1
  store i64 %4952, i64* %RDX.i890, align 8
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4954 = zext i1 %4951 to i8
  store i8 %4954, i8* %4953, align 1
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4956 = trunc i64 %4952 to i32
  %4957 = and i32 %4956, 254
  %4958 = call i32 @llvm.ctpop.i32(i32 %4957)
  %4959 = trunc i32 %4958 to i8
  %4960 = and i8 %4959, 1
  %4961 = xor i8 %4960, 1
  store i8 %4961, i8* %4955, align 1
  %4962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4962, align 1
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4964 = icmp eq i64 %4952, 0
  %4965 = zext i1 %4964 to i8
  store i8 %4965, i8* %4963, align 1
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4967 = lshr i64 %4952, 63
  %4968 = trunc i64 %4967 to i8
  store i8 %4968, i8* %4966, align 1
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4969, align 1
  store %struct.Memory* %loadMem_40f877, %struct.Memory** %MEMORY
  %loadMem_40f87b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4971 = getelementptr inbounds %struct.GPR, %struct.GPR* %4970, i32 0, i32 33
  %4972 = getelementptr inbounds %struct.Reg, %struct.Reg* %4971, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %4972 to i64*
  %4973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4974 = getelementptr inbounds %struct.GPR, %struct.GPR* %4973, i32 0, i32 1
  %4975 = getelementptr inbounds %struct.Reg, %struct.Reg* %4974, i32 0, i32 0
  %RAX.i887 = bitcast %union.anon* %4975 to i64*
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4977 = getelementptr inbounds %struct.GPR, %struct.GPR* %4976, i32 0, i32 7
  %4978 = getelementptr inbounds %struct.Reg, %struct.Reg* %4977, i32 0, i32 0
  %RDX.i888 = bitcast %union.anon* %4978 to i64*
  %4979 = load i64, i64* %RAX.i887
  %4980 = load i64, i64* %RDX.i888
  %4981 = load i64, i64* %PC.i886
  %4982 = add i64 %4981, 3
  store i64 %4982, i64* %PC.i886
  %4983 = add i64 %4980, %4979
  store i64 %4983, i64* %RAX.i887, align 8
  %4984 = icmp ult i64 %4983, %4979
  %4985 = icmp ult i64 %4983, %4980
  %4986 = or i1 %4984, %4985
  %4987 = zext i1 %4986 to i8
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4987, i8* %4988, align 1
  %4989 = trunc i64 %4983 to i32
  %4990 = and i32 %4989, 255
  %4991 = call i32 @llvm.ctpop.i32(i32 %4990)
  %4992 = trunc i32 %4991 to i8
  %4993 = and i8 %4992, 1
  %4994 = xor i8 %4993, 1
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4994, i8* %4995, align 1
  %4996 = xor i64 %4980, %4979
  %4997 = xor i64 %4996, %4983
  %4998 = lshr i64 %4997, 4
  %4999 = trunc i64 %4998 to i8
  %5000 = and i8 %4999, 1
  %5001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5000, i8* %5001, align 1
  %5002 = icmp eq i64 %4983, 0
  %5003 = zext i1 %5002 to i8
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5003, i8* %5004, align 1
  %5005 = lshr i64 %4983, 63
  %5006 = trunc i64 %5005 to i8
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5006, i8* %5007, align 1
  %5008 = lshr i64 %4979, 63
  %5009 = lshr i64 %4980, 63
  %5010 = xor i64 %5005, %5008
  %5011 = xor i64 %5005, %5009
  %5012 = add i64 %5010, %5011
  %5013 = icmp eq i64 %5012, 2
  %5014 = zext i1 %5013 to i8
  %5015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5014, i8* %5015, align 1
  store %struct.Memory* %loadMem_40f87b, %struct.Memory** %MEMORY
  %loadMem_40f87e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5017 = getelementptr inbounds %struct.GPR, %struct.GPR* %5016, i32 0, i32 33
  %5018 = getelementptr inbounds %struct.Reg, %struct.Reg* %5017, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %5018 to i64*
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5020 = getelementptr inbounds %struct.GPR, %struct.GPR* %5019, i32 0, i32 5
  %5021 = getelementptr inbounds %struct.Reg, %struct.Reg* %5020, i32 0, i32 0
  %ECX.i884 = bitcast %union.anon* %5021 to i32*
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 1
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %RAX.i885 = bitcast %union.anon* %5024 to i64*
  %5025 = load i64, i64* %RAX.i885
  %5026 = add i64 %5025, 12
  %5027 = load i32, i32* %ECX.i884
  %5028 = zext i32 %5027 to i64
  %5029 = load i64, i64* %PC.i883
  %5030 = add i64 %5029, 3
  store i64 %5030, i64* %PC.i883
  %5031 = inttoptr i64 %5026 to i32*
  store i32 %5027, i32* %5031
  store %struct.Memory* %loadMem_40f87e, %struct.Memory** %MEMORY
  %loadMem_40f881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5033 = getelementptr inbounds %struct.GPR, %struct.GPR* %5032, i32 0, i32 33
  %5034 = getelementptr inbounds %struct.Reg, %struct.Reg* %5033, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %5034 to i64*
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5036 = getelementptr inbounds %struct.GPR, %struct.GPR* %5035, i32 0, i32 1
  %5037 = getelementptr inbounds %struct.Reg, %struct.Reg* %5036, i32 0, i32 0
  %RAX.i881 = bitcast %union.anon* %5037 to i64*
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5039 = getelementptr inbounds %struct.GPR, %struct.GPR* %5038, i32 0, i32 15
  %5040 = getelementptr inbounds %struct.Reg, %struct.Reg* %5039, i32 0, i32 0
  %RBP.i882 = bitcast %union.anon* %5040 to i64*
  %5041 = load i64, i64* %RBP.i882
  %5042 = sub i64 %5041, 12
  %5043 = load i64, i64* %PC.i880
  %5044 = add i64 %5043, 3
  store i64 %5044, i64* %PC.i880
  %5045 = inttoptr i64 %5042 to i32*
  %5046 = load i32, i32* %5045
  %5047 = zext i32 %5046 to i64
  store i64 %5047, i64* %RAX.i881, align 8
  store %struct.Memory* %loadMem_40f881, %struct.Memory** %MEMORY
  %loadMem_40f884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5049 = getelementptr inbounds %struct.GPR, %struct.GPR* %5048, i32 0, i32 33
  %5050 = getelementptr inbounds %struct.Reg, %struct.Reg* %5049, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %5050 to i64*
  %5051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5052 = getelementptr inbounds %struct.GPR, %struct.GPR* %5051, i32 0, i32 1
  %5053 = getelementptr inbounds %struct.Reg, %struct.Reg* %5052, i32 0, i32 0
  %RAX.i879 = bitcast %union.anon* %5053 to i64*
  %5054 = load i64, i64* %RAX.i879
  %5055 = load i64, i64* %PC.i878
  %5056 = add i64 %5055, 3
  store i64 %5056, i64* %PC.i878
  %5057 = trunc i64 %5054 to i32
  %5058 = add i32 1, %5057
  %5059 = zext i32 %5058 to i64
  store i64 %5059, i64* %RAX.i879, align 8
  %5060 = icmp ult i32 %5058, %5057
  %5061 = icmp ult i32 %5058, 1
  %5062 = or i1 %5060, %5061
  %5063 = zext i1 %5062 to i8
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5063, i8* %5064, align 1
  %5065 = and i32 %5058, 255
  %5066 = call i32 @llvm.ctpop.i32(i32 %5065)
  %5067 = trunc i32 %5066 to i8
  %5068 = and i8 %5067, 1
  %5069 = xor i8 %5068, 1
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5069, i8* %5070, align 1
  %5071 = xor i64 1, %5054
  %5072 = trunc i64 %5071 to i32
  %5073 = xor i32 %5072, %5058
  %5074 = lshr i32 %5073, 4
  %5075 = trunc i32 %5074 to i8
  %5076 = and i8 %5075, 1
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5076, i8* %5077, align 1
  %5078 = icmp eq i32 %5058, 0
  %5079 = zext i1 %5078 to i8
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5079, i8* %5080, align 1
  %5081 = lshr i32 %5058, 31
  %5082 = trunc i32 %5081 to i8
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5082, i8* %5083, align 1
  %5084 = lshr i32 %5057, 31
  %5085 = xor i32 %5081, %5084
  %5086 = add i32 %5085, %5081
  %5087 = icmp eq i32 %5086, 2
  %5088 = zext i1 %5087 to i8
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5088, i8* %5089, align 1
  store %struct.Memory* %loadMem_40f884, %struct.Memory** %MEMORY
  %loadMem_40f887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5091 = getelementptr inbounds %struct.GPR, %struct.GPR* %5090, i32 0, i32 33
  %5092 = getelementptr inbounds %struct.Reg, %struct.Reg* %5091, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %5092 to i64*
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5094 = getelementptr inbounds %struct.GPR, %struct.GPR* %5093, i32 0, i32 1
  %5095 = getelementptr inbounds %struct.Reg, %struct.Reg* %5094, i32 0, i32 0
  %EAX.i876 = bitcast %union.anon* %5095 to i32*
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5097 = getelementptr inbounds %struct.GPR, %struct.GPR* %5096, i32 0, i32 15
  %5098 = getelementptr inbounds %struct.Reg, %struct.Reg* %5097, i32 0, i32 0
  %RBP.i877 = bitcast %union.anon* %5098 to i64*
  %5099 = load i64, i64* %RBP.i877
  %5100 = sub i64 %5099, 12
  %5101 = load i32, i32* %EAX.i876
  %5102 = zext i32 %5101 to i64
  %5103 = load i64, i64* %PC.i875
  %5104 = add i64 %5103, 3
  store i64 %5104, i64* %PC.i875
  %5105 = inttoptr i64 %5100 to i32*
  store i32 %5101, i32* %5105
  store %struct.Memory* %loadMem_40f887, %struct.Memory** %MEMORY
  %loadMem_40f88a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5107 = getelementptr inbounds %struct.GPR, %struct.GPR* %5106, i32 0, i32 33
  %5108 = getelementptr inbounds %struct.Reg, %struct.Reg* %5107, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %5108 to i64*
  %5109 = load i64, i64* %PC.i874
  %5110 = add i64 %5109, -268
  %5111 = load i64, i64* %PC.i874
  %5112 = add i64 %5111, 5
  store i64 %5112, i64* %PC.i874
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5110, i64* %5113, align 8
  store %struct.Memory* %loadMem_40f88a, %struct.Memory** %MEMORY
  br label %block_.L_40f77e

block_.L_40f88f:                                  ; preds = %block_.L_40f77e
  %loadMem_40f88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5115 = getelementptr inbounds %struct.GPR, %struct.GPR* %5114, i32 0, i32 33
  %5116 = getelementptr inbounds %struct.Reg, %struct.Reg* %5115, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %5116 to i64*
  %5117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5118 = getelementptr inbounds %struct.GPR, %struct.GPR* %5117, i32 0, i32 15
  %5119 = getelementptr inbounds %struct.Reg, %struct.Reg* %5118, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %5119 to i64*
  %5120 = load i64, i64* %RBP.i873
  %5121 = sub i64 %5120, 16
  %5122 = load i64, i64* %PC.i872
  %5123 = add i64 %5122, 7
  store i64 %5123, i64* %PC.i872
  %5124 = inttoptr i64 %5121 to i32*
  store i32 0, i32* %5124
  store %struct.Memory* %loadMem_40f88f, %struct.Memory** %MEMORY
  br label %block_.L_40f896

block_.L_40f896:                                  ; preds = %block_.L_40f9a1, %block_.L_40f88f
  %loadMem_40f896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5126 = getelementptr inbounds %struct.GPR, %struct.GPR* %5125, i32 0, i32 33
  %5127 = getelementptr inbounds %struct.Reg, %struct.Reg* %5126, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %5127 to i64*
  %5128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5129 = getelementptr inbounds %struct.GPR, %struct.GPR* %5128, i32 0, i32 15
  %5130 = getelementptr inbounds %struct.Reg, %struct.Reg* %5129, i32 0, i32 0
  %RBP.i871 = bitcast %union.anon* %5130 to i64*
  %5131 = load i64, i64* %RBP.i871
  %5132 = sub i64 %5131, 16
  %5133 = load i64, i64* %PC.i870
  %5134 = add i64 %5133, 4
  store i64 %5134, i64* %PC.i870
  %5135 = inttoptr i64 %5132 to i32*
  %5136 = load i32, i32* %5135
  %5137 = sub i32 %5136, 4
  %5138 = icmp ult i32 %5136, 4
  %5139 = zext i1 %5138 to i8
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5139, i8* %5140, align 1
  %5141 = and i32 %5137, 255
  %5142 = call i32 @llvm.ctpop.i32(i32 %5141)
  %5143 = trunc i32 %5142 to i8
  %5144 = and i8 %5143, 1
  %5145 = xor i8 %5144, 1
  %5146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5145, i8* %5146, align 1
  %5147 = xor i32 %5136, 4
  %5148 = xor i32 %5147, %5137
  %5149 = lshr i32 %5148, 4
  %5150 = trunc i32 %5149 to i8
  %5151 = and i8 %5150, 1
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5151, i8* %5152, align 1
  %5153 = icmp eq i32 %5137, 0
  %5154 = zext i1 %5153 to i8
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5154, i8* %5155, align 1
  %5156 = lshr i32 %5137, 31
  %5157 = trunc i32 %5156 to i8
  %5158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5157, i8* %5158, align 1
  %5159 = lshr i32 %5136, 31
  %5160 = xor i32 %5156, %5159
  %5161 = add i32 %5160, %5159
  %5162 = icmp eq i32 %5161, 2
  %5163 = zext i1 %5162 to i8
  %5164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5163, i8* %5164, align 1
  store %struct.Memory* %loadMem_40f896, %struct.Memory** %MEMORY
  %loadMem_40f89a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5166 = getelementptr inbounds %struct.GPR, %struct.GPR* %5165, i32 0, i32 33
  %5167 = getelementptr inbounds %struct.Reg, %struct.Reg* %5166, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %5167 to i64*
  %5168 = load i64, i64* %PC.i869
  %5169 = add i64 %5168, 277
  %5170 = load i64, i64* %PC.i869
  %5171 = add i64 %5170, 6
  %5172 = load i64, i64* %PC.i869
  %5173 = add i64 %5172, 6
  store i64 %5173, i64* %PC.i869
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5175 = load i8, i8* %5174, align 1
  %5176 = icmp ne i8 %5175, 0
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5178 = load i8, i8* %5177, align 1
  %5179 = icmp ne i8 %5178, 0
  %5180 = xor i1 %5176, %5179
  %5181 = xor i1 %5180, true
  %5182 = zext i1 %5181 to i8
  store i8 %5182, i8* %BRANCH_TAKEN, align 1
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5184 = select i1 %5180, i64 %5171, i64 %5169
  store i64 %5184, i64* %5183, align 8
  store %struct.Memory* %loadMem_40f89a, %struct.Memory** %MEMORY
  %loadBr_40f89a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f89a = icmp eq i8 %loadBr_40f89a, 1
  br i1 %cmpBr_40f89a, label %block_.L_40f9af, label %block_40f8a0

block_40f8a0:                                     ; preds = %block_.L_40f896
  %loadMem_40f8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 33
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %5187 to i64*
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5189 = getelementptr inbounds %struct.GPR, %struct.GPR* %5188, i32 0, i32 15
  %5190 = getelementptr inbounds %struct.Reg, %struct.Reg* %5189, i32 0, i32 0
  %RBP.i868 = bitcast %union.anon* %5190 to i64*
  %5191 = load i64, i64* %RBP.i868
  %5192 = sub i64 %5191, 12
  %5193 = load i64, i64* %PC.i867
  %5194 = add i64 %5193, 7
  store i64 %5194, i64* %PC.i867
  %5195 = inttoptr i64 %5192 to i32*
  store i32 0, i32* %5195
  store %struct.Memory* %loadMem_40f8a0, %struct.Memory** %MEMORY
  br label %block_.L_40f8a7

block_.L_40f8a7:                                  ; preds = %routine_shll__cl___eax.exit, %block_40f8a0
  %loadMem_40f8a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5197 = getelementptr inbounds %struct.GPR, %struct.GPR* %5196, i32 0, i32 33
  %5198 = getelementptr inbounds %struct.Reg, %struct.Reg* %5197, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %5198 to i64*
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5200 = getelementptr inbounds %struct.GPR, %struct.GPR* %5199, i32 0, i32 15
  %5201 = getelementptr inbounds %struct.Reg, %struct.Reg* %5200, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %5201 to i64*
  %5202 = load i64, i64* %RBP.i866
  %5203 = sub i64 %5202, 12
  %5204 = load i64, i64* %PC.i865
  %5205 = add i64 %5204, 4
  store i64 %5205, i64* %PC.i865
  %5206 = inttoptr i64 %5203 to i32*
  %5207 = load i32, i32* %5206
  %5208 = sub i32 %5207, 4
  %5209 = icmp ult i32 %5207, 4
  %5210 = zext i1 %5209 to i8
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5210, i8* %5211, align 1
  %5212 = and i32 %5208, 255
  %5213 = call i32 @llvm.ctpop.i32(i32 %5212)
  %5214 = trunc i32 %5213 to i8
  %5215 = and i8 %5214, 1
  %5216 = xor i8 %5215, 1
  %5217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5216, i8* %5217, align 1
  %5218 = xor i32 %5207, 4
  %5219 = xor i32 %5218, %5208
  %5220 = lshr i32 %5219, 4
  %5221 = trunc i32 %5220 to i8
  %5222 = and i8 %5221, 1
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5222, i8* %5223, align 1
  %5224 = icmp eq i32 %5208, 0
  %5225 = zext i1 %5224 to i8
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5225, i8* %5226, align 1
  %5227 = lshr i32 %5208, 31
  %5228 = trunc i32 %5227 to i8
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5228, i8* %5229, align 1
  %5230 = lshr i32 %5207, 31
  %5231 = xor i32 %5227, %5230
  %5232 = add i32 %5231, %5230
  %5233 = icmp eq i32 %5232, 2
  %5234 = zext i1 %5233 to i8
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5234, i8* %5235, align 1
  store %struct.Memory* %loadMem_40f8a7, %struct.Memory** %MEMORY
  %loadMem_40f8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %5236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5237 = getelementptr inbounds %struct.GPR, %struct.GPR* %5236, i32 0, i32 33
  %5238 = getelementptr inbounds %struct.Reg, %struct.Reg* %5237, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %5238 to i64*
  %5239 = load i64, i64* %PC.i864
  %5240 = add i64 %5239, 241
  %5241 = load i64, i64* %PC.i864
  %5242 = add i64 %5241, 6
  %5243 = load i64, i64* %PC.i864
  %5244 = add i64 %5243, 6
  store i64 %5244, i64* %PC.i864
  %5245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5246 = load i8, i8* %5245, align 1
  %5247 = icmp ne i8 %5246, 0
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5249 = load i8, i8* %5248, align 1
  %5250 = icmp ne i8 %5249, 0
  %5251 = xor i1 %5247, %5250
  %5252 = xor i1 %5251, true
  %5253 = zext i1 %5252 to i8
  store i8 %5253, i8* %BRANCH_TAKEN, align 1
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5255 = select i1 %5251, i64 %5242, i64 %5240
  store i64 %5255, i64* %5254, align 8
  store %struct.Memory* %loadMem_40f8ab, %struct.Memory** %MEMORY
  %loadBr_40f8ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f8ab = icmp eq i8 %loadBr_40f8ab, 1
  br i1 %cmpBr_40f8ab, label %block_.L_40f99c, label %block_40f8b1

block_40f8b1:                                     ; preds = %block_.L_40f8a7
  %loadMem_40f8b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5257 = getelementptr inbounds %struct.GPR, %struct.GPR* %5256, i32 0, i32 33
  %5258 = getelementptr inbounds %struct.Reg, %struct.Reg* %5257, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %5258 to i64*
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5260 = getelementptr inbounds %struct.GPR, %struct.GPR* %5259, i32 0, i32 1
  %5261 = getelementptr inbounds %struct.Reg, %struct.Reg* %5260, i32 0, i32 0
  %RAX.i862 = bitcast %union.anon* %5261 to i64*
  %5262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5263 = getelementptr inbounds %struct.GPR, %struct.GPR* %5262, i32 0, i32 15
  %5264 = getelementptr inbounds %struct.Reg, %struct.Reg* %5263, i32 0, i32 0
  %RBP.i863 = bitcast %union.anon* %5264 to i64*
  %5265 = load i64, i64* %RBP.i863
  %5266 = sub i64 %5265, 144
  %5267 = load i64, i64* %PC.i861
  %5268 = add i64 %5267, 7
  store i64 %5268, i64* %PC.i861
  store i64 %5266, i64* %RAX.i862, align 8
  store %struct.Memory* %loadMem_40f8b1, %struct.Memory** %MEMORY
  %loadMem_40f8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5270 = getelementptr inbounds %struct.GPR, %struct.GPR* %5269, i32 0, i32 33
  %5271 = getelementptr inbounds %struct.Reg, %struct.Reg* %5270, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %5271 to i64*
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5273 = getelementptr inbounds %struct.GPR, %struct.GPR* %5272, i32 0, i32 5
  %5274 = getelementptr inbounds %struct.Reg, %struct.Reg* %5273, i32 0, i32 0
  %RCX.i859 = bitcast %union.anon* %5274 to i64*
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5276 = getelementptr inbounds %struct.GPR, %struct.GPR* %5275, i32 0, i32 15
  %5277 = getelementptr inbounds %struct.Reg, %struct.Reg* %5276, i32 0, i32 0
  %RBP.i860 = bitcast %union.anon* %5277 to i64*
  %5278 = load i64, i64* %RBP.i860
  %5279 = sub i64 %5278, 12
  %5280 = load i64, i64* %PC.i858
  %5281 = add i64 %5280, 4
  store i64 %5281, i64* %PC.i858
  %5282 = inttoptr i64 %5279 to i32*
  %5283 = load i32, i32* %5282
  %5284 = sext i32 %5283 to i64
  store i64 %5284, i64* %RCX.i859, align 8
  store %struct.Memory* %loadMem_40f8b8, %struct.Memory** %MEMORY
  %loadMem_40f8bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5286 = getelementptr inbounds %struct.GPR, %struct.GPR* %5285, i32 0, i32 33
  %5287 = getelementptr inbounds %struct.Reg, %struct.Reg* %5286, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %5287 to i64*
  %5288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5289 = getelementptr inbounds %struct.GPR, %struct.GPR* %5288, i32 0, i32 5
  %5290 = getelementptr inbounds %struct.Reg, %struct.Reg* %5289, i32 0, i32 0
  %RCX.i857 = bitcast %union.anon* %5290 to i64*
  %5291 = load i64, i64* %RCX.i857
  %5292 = load i64, i64* %PC.i856
  %5293 = add i64 %5292, 4
  store i64 %5293, i64* %PC.i856
  %5294 = shl i64 %5291, 3
  %5295 = icmp slt i64 %5294, 0
  %5296 = shl i64 %5294, 1
  store i64 %5296, i64* %RCX.i857, align 8
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5298 = zext i1 %5295 to i8
  store i8 %5298, i8* %5297, align 1
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5300 = trunc i64 %5296 to i32
  %5301 = and i32 %5300, 254
  %5302 = call i32 @llvm.ctpop.i32(i32 %5301)
  %5303 = trunc i32 %5302 to i8
  %5304 = and i8 %5303, 1
  %5305 = xor i8 %5304, 1
  store i8 %5305, i8* %5299, align 1
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5306, align 1
  %5307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5308 = icmp eq i64 %5296, 0
  %5309 = zext i1 %5308 to i8
  store i8 %5309, i8* %5307, align 1
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5311 = lshr i64 %5296, 63
  %5312 = trunc i64 %5311 to i8
  store i8 %5312, i8* %5310, align 1
  %5313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5313, align 1
  store %struct.Memory* %loadMem_40f8bc, %struct.Memory** %MEMORY
  %loadMem_40f8c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5315 = getelementptr inbounds %struct.GPR, %struct.GPR* %5314, i32 0, i32 33
  %5316 = getelementptr inbounds %struct.Reg, %struct.Reg* %5315, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %5316 to i64*
  %5317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5318 = getelementptr inbounds %struct.GPR, %struct.GPR* %5317, i32 0, i32 1
  %5319 = getelementptr inbounds %struct.Reg, %struct.Reg* %5318, i32 0, i32 0
  %RAX.i854 = bitcast %union.anon* %5319 to i64*
  %5320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5321 = getelementptr inbounds %struct.GPR, %struct.GPR* %5320, i32 0, i32 5
  %5322 = getelementptr inbounds %struct.Reg, %struct.Reg* %5321, i32 0, i32 0
  %RCX.i855 = bitcast %union.anon* %5322 to i64*
  %5323 = load i64, i64* %RAX.i854
  %5324 = load i64, i64* %RCX.i855
  %5325 = load i64, i64* %PC.i853
  %5326 = add i64 %5325, 3
  store i64 %5326, i64* %PC.i853
  %5327 = add i64 %5324, %5323
  store i64 %5327, i64* %RAX.i854, align 8
  %5328 = icmp ult i64 %5327, %5323
  %5329 = icmp ult i64 %5327, %5324
  %5330 = or i1 %5328, %5329
  %5331 = zext i1 %5330 to i8
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5331, i8* %5332, align 1
  %5333 = trunc i64 %5327 to i32
  %5334 = and i32 %5333, 255
  %5335 = call i32 @llvm.ctpop.i32(i32 %5334)
  %5336 = trunc i32 %5335 to i8
  %5337 = and i8 %5336, 1
  %5338 = xor i8 %5337, 1
  %5339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5338, i8* %5339, align 1
  %5340 = xor i64 %5324, %5323
  %5341 = xor i64 %5340, %5327
  %5342 = lshr i64 %5341, 4
  %5343 = trunc i64 %5342 to i8
  %5344 = and i8 %5343, 1
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5344, i8* %5345, align 1
  %5346 = icmp eq i64 %5327, 0
  %5347 = zext i1 %5346 to i8
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5347, i8* %5348, align 1
  %5349 = lshr i64 %5327, 63
  %5350 = trunc i64 %5349 to i8
  %5351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5350, i8* %5351, align 1
  %5352 = lshr i64 %5323, 63
  %5353 = lshr i64 %5324, 63
  %5354 = xor i64 %5349, %5352
  %5355 = xor i64 %5349, %5353
  %5356 = add i64 %5354, %5355
  %5357 = icmp eq i64 %5356, 2
  %5358 = zext i1 %5357 to i8
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5358, i8* %5359, align 1
  store %struct.Memory* %loadMem_40f8c0, %struct.Memory** %MEMORY
  %loadMem_40f8c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5361 = getelementptr inbounds %struct.GPR, %struct.GPR* %5360, i32 0, i32 33
  %5362 = getelementptr inbounds %struct.Reg, %struct.Reg* %5361, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %5362 to i64*
  %5363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5364 = getelementptr inbounds %struct.GPR, %struct.GPR* %5363, i32 0, i32 5
  %5365 = getelementptr inbounds %struct.Reg, %struct.Reg* %5364, i32 0, i32 0
  %RCX.i851 = bitcast %union.anon* %5365 to i64*
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5367 = getelementptr inbounds %struct.GPR, %struct.GPR* %5366, i32 0, i32 15
  %5368 = getelementptr inbounds %struct.Reg, %struct.Reg* %5367, i32 0, i32 0
  %RBP.i852 = bitcast %union.anon* %5368 to i64*
  %5369 = load i64, i64* %RBP.i852
  %5370 = sub i64 %5369, 16
  %5371 = load i64, i64* %PC.i850
  %5372 = add i64 %5371, 4
  store i64 %5372, i64* %PC.i850
  %5373 = inttoptr i64 %5370 to i32*
  %5374 = load i32, i32* %5373
  %5375 = sext i32 %5374 to i64
  store i64 %5375, i64* %RCX.i851, align 8
  store %struct.Memory* %loadMem_40f8c3, %struct.Memory** %MEMORY
  %loadMem_40f8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5377 = getelementptr inbounds %struct.GPR, %struct.GPR* %5376, i32 0, i32 33
  %5378 = getelementptr inbounds %struct.Reg, %struct.Reg* %5377, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %5378 to i64*
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5380 = getelementptr inbounds %struct.GPR, %struct.GPR* %5379, i32 0, i32 1
  %5381 = getelementptr inbounds %struct.Reg, %struct.Reg* %5380, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %5381 to i64*
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5383 = getelementptr inbounds %struct.GPR, %struct.GPR* %5382, i32 0, i32 5
  %5384 = getelementptr inbounds %struct.Reg, %struct.Reg* %5383, i32 0, i32 0
  %RCX.i848 = bitcast %union.anon* %5384 to i64*
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5386 = getelementptr inbounds %struct.GPR, %struct.GPR* %5385, i32 0, i32 11
  %5387 = getelementptr inbounds %struct.Reg, %struct.Reg* %5386, i32 0, i32 0
  %RDI.i849 = bitcast %union.anon* %5387 to i64*
  %5388 = load i64, i64* %RAX.i847
  %5389 = load i64, i64* %RCX.i848
  %5390 = mul i64 %5389, 4
  %5391 = add i64 %5390, %5388
  %5392 = load i64, i64* %PC.i846
  %5393 = add i64 %5392, 3
  store i64 %5393, i64* %PC.i846
  %5394 = inttoptr i64 %5391 to i32*
  %5395 = load i32, i32* %5394
  %5396 = zext i32 %5395 to i64
  store i64 %5396, i64* %RDI.i849, align 8
  store %struct.Memory* %loadMem_40f8c7, %struct.Memory** %MEMORY
  %loadMem1_40f8ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5398 = getelementptr inbounds %struct.GPR, %struct.GPR* %5397, i32 0, i32 33
  %5399 = getelementptr inbounds %struct.Reg, %struct.Reg* %5398, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %5399 to i64*
  %5400 = load i64, i64* %PC.i845
  %5401 = add i64 %5400, -59594
  %5402 = load i64, i64* %PC.i845
  %5403 = add i64 %5402, 5
  %5404 = load i64, i64* %PC.i845
  %5405 = add i64 %5404, 5
  store i64 %5405, i64* %PC.i845
  %5406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5407 = load i64, i64* %5406, align 8
  %5408 = add i64 %5407, -8
  %5409 = inttoptr i64 %5408 to i64*
  store i64 %5403, i64* %5409
  store i64 %5408, i64* %5406, align 8
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5401, i64* %5410, align 8
  store %struct.Memory* %loadMem1_40f8ca, %struct.Memory** %MEMORY
  %loadMem2_40f8ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40f8ca = load i64, i64* %3
  %5411 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40f8ca)
  store %struct.Memory* %5411, %struct.Memory** %MEMORY
  %loadMem_40f8cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5413 = getelementptr inbounds %struct.GPR, %struct.GPR* %5412, i32 0, i32 33
  %5414 = getelementptr inbounds %struct.Reg, %struct.Reg* %5413, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %5414 to i64*
  %5415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5416 = getelementptr inbounds %struct.GPR, %struct.GPR* %5415, i32 0, i32 5
  %5417 = getelementptr inbounds %struct.Reg, %struct.Reg* %5416, i32 0, i32 0
  %RCX.i840 = bitcast %union.anon* %5417 to i64*
  %5418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5419 = getelementptr inbounds %struct.GPR, %struct.GPR* %5418, i32 0, i32 15
  %5420 = getelementptr inbounds %struct.Reg, %struct.Reg* %5419, i32 0, i32 0
  %RBP.i841 = bitcast %union.anon* %5420 to i64*
  %5421 = load i64, i64* %RBP.i841
  %5422 = sub i64 %5421, 144
  %5423 = load i64, i64* %PC.i839
  %5424 = add i64 %5423, 7
  store i64 %5424, i64* %PC.i839
  store i64 %5422, i64* %RCX.i840, align 8
  store %struct.Memory* %loadMem_40f8cf, %struct.Memory** %MEMORY
  %loadMem_40f8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5426 = getelementptr inbounds %struct.GPR, %struct.GPR* %5425, i32 0, i32 33
  %5427 = getelementptr inbounds %struct.Reg, %struct.Reg* %5426, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %5427 to i64*
  %5428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5429 = getelementptr inbounds %struct.GPR, %struct.GPR* %5428, i32 0, i32 7
  %5430 = getelementptr inbounds %struct.Reg, %struct.Reg* %5429, i32 0, i32 0
  %RDX.i838 = bitcast %union.anon* %5430 to i64*
  %5431 = load i64, i64* %PC.i837
  %5432 = add i64 %5431, 10
  store i64 %5432, i64* %PC.i837
  store i64 ptrtoint (%G__0x4b2750_type* @G__0x4b2750 to i64), i64* %RDX.i838, align 8
  store %struct.Memory* %loadMem_40f8d6, %struct.Memory** %MEMORY
  %loadMem_40f8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5434 = getelementptr inbounds %struct.GPR, %struct.GPR* %5433, i32 0, i32 33
  %5435 = getelementptr inbounds %struct.Reg, %struct.Reg* %5434, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %5435 to i64*
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5437 = getelementptr inbounds %struct.GPR, %struct.GPR* %5436, i32 0, i32 9
  %5438 = getelementptr inbounds %struct.Reg, %struct.Reg* %5437, i32 0, i32 0
  %RSI.i835 = bitcast %union.anon* %5438 to i64*
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5440 = getelementptr inbounds %struct.GPR, %struct.GPR* %5439, i32 0, i32 15
  %5441 = getelementptr inbounds %struct.Reg, %struct.Reg* %5440, i32 0, i32 0
  %RBP.i836 = bitcast %union.anon* %5441 to i64*
  %5442 = load i64, i64* %RBP.i836
  %5443 = sub i64 %5442, 152
  %5444 = load i64, i64* %PC.i834
  %5445 = add i64 %5444, 7
  store i64 %5445, i64* %PC.i834
  %5446 = inttoptr i64 %5443 to i32*
  %5447 = load i32, i32* %5446
  %5448 = sext i32 %5447 to i64
  store i64 %5448, i64* %RSI.i835, align 8
  store %struct.Memory* %loadMem_40f8e0, %struct.Memory** %MEMORY
  %loadMem_40f8e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5450 = getelementptr inbounds %struct.GPR, %struct.GPR* %5449, i32 0, i32 33
  %5451 = getelementptr inbounds %struct.Reg, %struct.Reg* %5450, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %5451 to i64*
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5453 = getelementptr inbounds %struct.GPR, %struct.GPR* %5452, i32 0, i32 9
  %5454 = getelementptr inbounds %struct.Reg, %struct.Reg* %5453, i32 0, i32 0
  %RSI.i833 = bitcast %union.anon* %5454 to i64*
  %5455 = load i64, i64* %RSI.i833
  %5456 = load i64, i64* %PC.i832
  %5457 = add i64 %5456, 4
  store i64 %5457, i64* %PC.i832
  %5458 = shl i64 %5455, 5
  %5459 = icmp slt i64 %5458, 0
  %5460 = shl i64 %5458, 1
  store i64 %5460, i64* %RSI.i833, align 8
  %5461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5462 = zext i1 %5459 to i8
  store i8 %5462, i8* %5461, align 1
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5464 = trunc i64 %5460 to i32
  %5465 = and i32 %5464, 254
  %5466 = call i32 @llvm.ctpop.i32(i32 %5465)
  %5467 = trunc i32 %5466 to i8
  %5468 = and i8 %5467, 1
  %5469 = xor i8 %5468, 1
  store i8 %5469, i8* %5463, align 1
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5470, align 1
  %5471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5472 = icmp eq i64 %5460, 0
  %5473 = zext i1 %5472 to i8
  store i8 %5473, i8* %5471, align 1
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5475 = lshr i64 %5460, 63
  %5476 = trunc i64 %5475 to i8
  store i8 %5476, i8* %5474, align 1
  %5477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5477, align 1
  store %struct.Memory* %loadMem_40f8e7, %struct.Memory** %MEMORY
  %loadMem_40f8eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5479 = getelementptr inbounds %struct.GPR, %struct.GPR* %5478, i32 0, i32 33
  %5480 = getelementptr inbounds %struct.Reg, %struct.Reg* %5479, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %5480 to i64*
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5482 = getelementptr inbounds %struct.GPR, %struct.GPR* %5481, i32 0, i32 7
  %5483 = getelementptr inbounds %struct.Reg, %struct.Reg* %5482, i32 0, i32 0
  %RDX.i830 = bitcast %union.anon* %5483 to i64*
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5485 = getelementptr inbounds %struct.GPR, %struct.GPR* %5484, i32 0, i32 9
  %5486 = getelementptr inbounds %struct.Reg, %struct.Reg* %5485, i32 0, i32 0
  %RSI.i831 = bitcast %union.anon* %5486 to i64*
  %5487 = load i64, i64* %RDX.i830
  %5488 = load i64, i64* %RSI.i831
  %5489 = load i64, i64* %PC.i829
  %5490 = add i64 %5489, 3
  store i64 %5490, i64* %PC.i829
  %5491 = add i64 %5488, %5487
  store i64 %5491, i64* %RDX.i830, align 8
  %5492 = icmp ult i64 %5491, %5487
  %5493 = icmp ult i64 %5491, %5488
  %5494 = or i1 %5492, %5493
  %5495 = zext i1 %5494 to i8
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5495, i8* %5496, align 1
  %5497 = trunc i64 %5491 to i32
  %5498 = and i32 %5497, 255
  %5499 = call i32 @llvm.ctpop.i32(i32 %5498)
  %5500 = trunc i32 %5499 to i8
  %5501 = and i8 %5500, 1
  %5502 = xor i8 %5501, 1
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5502, i8* %5503, align 1
  %5504 = xor i64 %5488, %5487
  %5505 = xor i64 %5504, %5491
  %5506 = lshr i64 %5505, 4
  %5507 = trunc i64 %5506 to i8
  %5508 = and i8 %5507, 1
  %5509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5508, i8* %5509, align 1
  %5510 = icmp eq i64 %5491, 0
  %5511 = zext i1 %5510 to i8
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5511, i8* %5512, align 1
  %5513 = lshr i64 %5491, 63
  %5514 = trunc i64 %5513 to i8
  %5515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5514, i8* %5515, align 1
  %5516 = lshr i64 %5487, 63
  %5517 = lshr i64 %5488, 63
  %5518 = xor i64 %5513, %5516
  %5519 = xor i64 %5513, %5517
  %5520 = add i64 %5518, %5519
  %5521 = icmp eq i64 %5520, 2
  %5522 = zext i1 %5521 to i8
  %5523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5522, i8* %5523, align 1
  store %struct.Memory* %loadMem_40f8eb, %struct.Memory** %MEMORY
  %loadMem_40f8ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %5524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5525 = getelementptr inbounds %struct.GPR, %struct.GPR* %5524, i32 0, i32 33
  %5526 = getelementptr inbounds %struct.Reg, %struct.Reg* %5525, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %5526 to i64*
  %5527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5528 = getelementptr inbounds %struct.GPR, %struct.GPR* %5527, i32 0, i32 9
  %5529 = getelementptr inbounds %struct.Reg, %struct.Reg* %5528, i32 0, i32 0
  %RSI.i827 = bitcast %union.anon* %5529 to i64*
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5531 = getelementptr inbounds %struct.GPR, %struct.GPR* %5530, i32 0, i32 15
  %5532 = getelementptr inbounds %struct.Reg, %struct.Reg* %5531, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %5532 to i64*
  %5533 = load i64, i64* %RBP.i828
  %5534 = sub i64 %5533, 12
  %5535 = load i64, i64* %PC.i826
  %5536 = add i64 %5535, 4
  store i64 %5536, i64* %PC.i826
  %5537 = inttoptr i64 %5534 to i32*
  %5538 = load i32, i32* %5537
  %5539 = sext i32 %5538 to i64
  store i64 %5539, i64* %RSI.i827, align 8
  store %struct.Memory* %loadMem_40f8ee, %struct.Memory** %MEMORY
  %loadMem_40f8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5541 = getelementptr inbounds %struct.GPR, %struct.GPR* %5540, i32 0, i32 33
  %5542 = getelementptr inbounds %struct.Reg, %struct.Reg* %5541, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %5542 to i64*
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5544 = getelementptr inbounds %struct.GPR, %struct.GPR* %5543, i32 0, i32 9
  %5545 = getelementptr inbounds %struct.Reg, %struct.Reg* %5544, i32 0, i32 0
  %RSI.i825 = bitcast %union.anon* %5545 to i64*
  %5546 = load i64, i64* %RSI.i825
  %5547 = load i64, i64* %PC.i824
  %5548 = add i64 %5547, 4
  store i64 %5548, i64* %PC.i824
  %5549 = shl i64 %5546, 3
  %5550 = icmp slt i64 %5549, 0
  %5551 = shl i64 %5549, 1
  store i64 %5551, i64* %RSI.i825, align 8
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5553 = zext i1 %5550 to i8
  store i8 %5553, i8* %5552, align 1
  %5554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5555 = trunc i64 %5551 to i32
  %5556 = and i32 %5555, 254
  %5557 = call i32 @llvm.ctpop.i32(i32 %5556)
  %5558 = trunc i32 %5557 to i8
  %5559 = and i8 %5558, 1
  %5560 = xor i8 %5559, 1
  store i8 %5560, i8* %5554, align 1
  %5561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5561, align 1
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5563 = icmp eq i64 %5551, 0
  %5564 = zext i1 %5563 to i8
  store i8 %5564, i8* %5562, align 1
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5566 = lshr i64 %5551, 63
  %5567 = trunc i64 %5566 to i8
  store i8 %5567, i8* %5565, align 1
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5568, align 1
  store %struct.Memory* %loadMem_40f8f2, %struct.Memory** %MEMORY
  %loadMem_40f8f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5570 = getelementptr inbounds %struct.GPR, %struct.GPR* %5569, i32 0, i32 33
  %5571 = getelementptr inbounds %struct.Reg, %struct.Reg* %5570, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %5571 to i64*
  %5572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5573 = getelementptr inbounds %struct.GPR, %struct.GPR* %5572, i32 0, i32 7
  %5574 = getelementptr inbounds %struct.Reg, %struct.Reg* %5573, i32 0, i32 0
  %RDX.i822 = bitcast %union.anon* %5574 to i64*
  %5575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5576 = getelementptr inbounds %struct.GPR, %struct.GPR* %5575, i32 0, i32 9
  %5577 = getelementptr inbounds %struct.Reg, %struct.Reg* %5576, i32 0, i32 0
  %RSI.i823 = bitcast %union.anon* %5577 to i64*
  %5578 = load i64, i64* %RDX.i822
  %5579 = load i64, i64* %RSI.i823
  %5580 = load i64, i64* %PC.i821
  %5581 = add i64 %5580, 3
  store i64 %5581, i64* %PC.i821
  %5582 = add i64 %5579, %5578
  store i64 %5582, i64* %RDX.i822, align 8
  %5583 = icmp ult i64 %5582, %5578
  %5584 = icmp ult i64 %5582, %5579
  %5585 = or i1 %5583, %5584
  %5586 = zext i1 %5585 to i8
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5586, i8* %5587, align 1
  %5588 = trunc i64 %5582 to i32
  %5589 = and i32 %5588, 255
  %5590 = call i32 @llvm.ctpop.i32(i32 %5589)
  %5591 = trunc i32 %5590 to i8
  %5592 = and i8 %5591, 1
  %5593 = xor i8 %5592, 1
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5593, i8* %5594, align 1
  %5595 = xor i64 %5579, %5578
  %5596 = xor i64 %5595, %5582
  %5597 = lshr i64 %5596, 4
  %5598 = trunc i64 %5597 to i8
  %5599 = and i8 %5598, 1
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5599, i8* %5600, align 1
  %5601 = icmp eq i64 %5582, 0
  %5602 = zext i1 %5601 to i8
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5602, i8* %5603, align 1
  %5604 = lshr i64 %5582, 63
  %5605 = trunc i64 %5604 to i8
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5605, i8* %5606, align 1
  %5607 = lshr i64 %5578, 63
  %5608 = lshr i64 %5579, 63
  %5609 = xor i64 %5604, %5607
  %5610 = xor i64 %5604, %5608
  %5611 = add i64 %5609, %5610
  %5612 = icmp eq i64 %5611, 2
  %5613 = zext i1 %5612 to i8
  %5614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5613, i8* %5614, align 1
  store %struct.Memory* %loadMem_40f8f6, %struct.Memory** %MEMORY
  %loadMem_40f8f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5616 = getelementptr inbounds %struct.GPR, %struct.GPR* %5615, i32 0, i32 33
  %5617 = getelementptr inbounds %struct.Reg, %struct.Reg* %5616, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %5617 to i64*
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5619 = getelementptr inbounds %struct.GPR, %struct.GPR* %5618, i32 0, i32 9
  %5620 = getelementptr inbounds %struct.Reg, %struct.Reg* %5619, i32 0, i32 0
  %RSI.i819 = bitcast %union.anon* %5620 to i64*
  %5621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5622 = getelementptr inbounds %struct.GPR, %struct.GPR* %5621, i32 0, i32 15
  %5623 = getelementptr inbounds %struct.Reg, %struct.Reg* %5622, i32 0, i32 0
  %RBP.i820 = bitcast %union.anon* %5623 to i64*
  %5624 = load i64, i64* %RBP.i820
  %5625 = sub i64 %5624, 16
  %5626 = load i64, i64* %PC.i818
  %5627 = add i64 %5626, 4
  store i64 %5627, i64* %PC.i818
  %5628 = inttoptr i64 %5625 to i32*
  %5629 = load i32, i32* %5628
  %5630 = sext i32 %5629 to i64
  store i64 %5630, i64* %RSI.i819, align 8
  store %struct.Memory* %loadMem_40f8f9, %struct.Memory** %MEMORY
  %loadMem_40f8fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5632 = getelementptr inbounds %struct.GPR, %struct.GPR* %5631, i32 0, i32 33
  %5633 = getelementptr inbounds %struct.Reg, %struct.Reg* %5632, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %5633 to i64*
  %5634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5635 = getelementptr inbounds %struct.GPR, %struct.GPR* %5634, i32 0, i32 1
  %5636 = getelementptr inbounds %struct.Reg, %struct.Reg* %5635, i32 0, i32 0
  %RAX.i815 = bitcast %union.anon* %5636 to i64*
  %5637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5638 = getelementptr inbounds %struct.GPR, %struct.GPR* %5637, i32 0, i32 7
  %5639 = getelementptr inbounds %struct.Reg, %struct.Reg* %5638, i32 0, i32 0
  %RDX.i816 = bitcast %union.anon* %5639 to i64*
  %5640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5641 = getelementptr inbounds %struct.GPR, %struct.GPR* %5640, i32 0, i32 9
  %5642 = getelementptr inbounds %struct.Reg, %struct.Reg* %5641, i32 0, i32 0
  %RSI.i817 = bitcast %union.anon* %5642 to i64*
  %5643 = load i64, i64* %RAX.i815
  %5644 = load i64, i64* %RDX.i816
  %5645 = load i64, i64* %RSI.i817
  %5646 = mul i64 %5645, 4
  %5647 = add i64 %5646, %5644
  %5648 = load i64, i64* %PC.i814
  %5649 = add i64 %5648, 4
  store i64 %5649, i64* %PC.i814
  %5650 = inttoptr i64 %5647 to i32*
  %5651 = load i32, i32* %5650
  %5652 = shl i64 %5643, 32
  %5653 = ashr exact i64 %5652, 32
  %5654 = sext i32 %5651 to i64
  %5655 = mul i64 %5654, %5653
  %5656 = trunc i64 %5655 to i32
  %5657 = and i64 %5655, 4294967295
  store i64 %5657, i64* %RAX.i815, align 8
  %5658 = shl i64 %5655, 32
  %5659 = ashr exact i64 %5658, 32
  %5660 = icmp ne i64 %5659, %5655
  %5661 = zext i1 %5660 to i8
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5661, i8* %5662, align 1
  %5663 = and i32 %5656, 255
  %5664 = call i32 @llvm.ctpop.i32(i32 %5663)
  %5665 = trunc i32 %5664 to i8
  %5666 = and i8 %5665, 1
  %5667 = xor i8 %5666, 1
  %5668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5667, i8* %5668, align 1
  %5669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5669, align 1
  %5670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5670, align 1
  %5671 = lshr i32 %5656, 31
  %5672 = trunc i32 %5671 to i8
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5672, i8* %5673, align 1
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5661, i8* %5674, align 1
  store %struct.Memory* %loadMem_40f8fd, %struct.Memory** %MEMORY
  %loadMem_40f901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5676 = getelementptr inbounds %struct.GPR, %struct.GPR* %5675, i32 0, i32 33
  %5677 = getelementptr inbounds %struct.Reg, %struct.Reg* %5676, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %5677 to i64*
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5679 = getelementptr inbounds %struct.GPR, %struct.GPR* %5678, i32 0, i32 1
  %5680 = getelementptr inbounds %struct.Reg, %struct.Reg* %5679, i32 0, i32 0
  %RAX.i812 = bitcast %union.anon* %5680 to i64*
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5682 = getelementptr inbounds %struct.GPR, %struct.GPR* %5681, i32 0, i32 15
  %5683 = getelementptr inbounds %struct.Reg, %struct.Reg* %5682, i32 0, i32 0
  %RBP.i813 = bitcast %union.anon* %5683 to i64*
  %5684 = load i64, i64* %RAX.i812
  %5685 = load i64, i64* %RBP.i813
  %5686 = sub i64 %5685, 160
  %5687 = load i64, i64* %PC.i811
  %5688 = add i64 %5687, 6
  store i64 %5688, i64* %PC.i811
  %5689 = trunc i64 %5684 to i32
  %5690 = inttoptr i64 %5686 to i32*
  %5691 = load i32, i32* %5690
  %5692 = add i32 %5691, %5689
  %5693 = zext i32 %5692 to i64
  store i64 %5693, i64* %RAX.i812, align 8
  %5694 = icmp ult i32 %5692, %5689
  %5695 = icmp ult i32 %5692, %5691
  %5696 = or i1 %5694, %5695
  %5697 = zext i1 %5696 to i8
  %5698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5697, i8* %5698, align 1
  %5699 = and i32 %5692, 255
  %5700 = call i32 @llvm.ctpop.i32(i32 %5699)
  %5701 = trunc i32 %5700 to i8
  %5702 = and i8 %5701, 1
  %5703 = xor i8 %5702, 1
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5703, i8* %5704, align 1
  %5705 = xor i32 %5691, %5689
  %5706 = xor i32 %5705, %5692
  %5707 = lshr i32 %5706, 4
  %5708 = trunc i32 %5707 to i8
  %5709 = and i8 %5708, 1
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5709, i8* %5710, align 1
  %5711 = icmp eq i32 %5692, 0
  %5712 = zext i1 %5711 to i8
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5712, i8* %5713, align 1
  %5714 = lshr i32 %5692, 31
  %5715 = trunc i32 %5714 to i8
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5715, i8* %5716, align 1
  %5717 = lshr i32 %5689, 31
  %5718 = lshr i32 %5691, 31
  %5719 = xor i32 %5714, %5717
  %5720 = xor i32 %5714, %5718
  %5721 = add i32 %5719, %5720
  %5722 = icmp eq i32 %5721, 2
  %5723 = zext i1 %5722 to i8
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5723, i8* %5724, align 1
  store %struct.Memory* %loadMem_40f901, %struct.Memory** %MEMORY
  %loadMem_40f907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5726 = getelementptr inbounds %struct.GPR, %struct.GPR* %5725, i32 0, i32 33
  %5727 = getelementptr inbounds %struct.Reg, %struct.Reg* %5726, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %5727 to i64*
  %5728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5729 = getelementptr inbounds %struct.GPR, %struct.GPR* %5728, i32 0, i32 11
  %5730 = getelementptr inbounds %struct.Reg, %struct.Reg* %5729, i32 0, i32 0
  %RDI.i809 = bitcast %union.anon* %5730 to i64*
  %5731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5732 = getelementptr inbounds %struct.GPR, %struct.GPR* %5731, i32 0, i32 15
  %5733 = getelementptr inbounds %struct.Reg, %struct.Reg* %5732, i32 0, i32 0
  %RBP.i810 = bitcast %union.anon* %5733 to i64*
  %5734 = load i64, i64* %RBP.i810
  %5735 = sub i64 %5734, 156
  %5736 = load i64, i64* %PC.i808
  %5737 = add i64 %5736, 6
  store i64 %5737, i64* %PC.i808
  %5738 = inttoptr i64 %5735 to i32*
  %5739 = load i32, i32* %5738
  %5740 = zext i32 %5739 to i64
  store i64 %5740, i64* %RDI.i809, align 8
  store %struct.Memory* %loadMem_40f907, %struct.Memory** %MEMORY
  %loadMem_40f90d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5742 = getelementptr inbounds %struct.GPR, %struct.GPR* %5741, i32 0, i32 33
  %5743 = getelementptr inbounds %struct.Reg, %struct.Reg* %5742, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %5743 to i64*
  %5744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5745 = getelementptr inbounds %struct.GPR, %struct.GPR* %5744, i32 0, i32 5
  %5746 = getelementptr inbounds %struct.Reg, %struct.Reg* %5745, i32 0, i32 0
  %RCX.i806 = bitcast %union.anon* %5746 to i64*
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5748 = getelementptr inbounds %struct.GPR, %struct.GPR* %5747, i32 0, i32 15
  %5749 = getelementptr inbounds %struct.Reg, %struct.Reg* %5748, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %5749 to i64*
  %5750 = load i64, i64* %RBP.i807
  %5751 = sub i64 %5750, 184
  %5752 = load i64, i64* %RCX.i806
  %5753 = load i64, i64* %PC.i805
  %5754 = add i64 %5753, 7
  store i64 %5754, i64* %PC.i805
  %5755 = inttoptr i64 %5751 to i64*
  store i64 %5752, i64* %5755
  store %struct.Memory* %loadMem_40f90d, %struct.Memory** %MEMORY
  %loadMem_40f914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5757 = getelementptr inbounds %struct.GPR, %struct.GPR* %5756, i32 0, i32 33
  %5758 = getelementptr inbounds %struct.Reg, %struct.Reg* %5757, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %5758 to i64*
  %5759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5760 = getelementptr inbounds %struct.GPR, %struct.GPR* %5759, i32 0, i32 11
  %5761 = getelementptr inbounds %struct.Reg, %struct.Reg* %5760, i32 0, i32 0
  %EDI.i803 = bitcast %union.anon* %5761 to i32*
  %5762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5763 = getelementptr inbounds %struct.GPR, %struct.GPR* %5762, i32 0, i32 5
  %5764 = getelementptr inbounds %struct.Reg, %struct.Reg* %5763, i32 0, i32 0
  %RCX.i804 = bitcast %union.anon* %5764 to i64*
  %5765 = load i32, i32* %EDI.i803
  %5766 = zext i32 %5765 to i64
  %5767 = load i64, i64* %PC.i802
  %5768 = add i64 %5767, 2
  store i64 %5768, i64* %PC.i802
  %5769 = and i64 %5766, 4294967295
  store i64 %5769, i64* %RCX.i804, align 8
  store %struct.Memory* %loadMem_40f914, %struct.Memory** %MEMORY
  %loadMem_40f916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5771 = getelementptr inbounds %struct.GPR, %struct.GPR* %5770, i32 0, i32 33
  %5772 = getelementptr inbounds %struct.Reg, %struct.Reg* %5771, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %5772 to i64*
  %5773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5774 = getelementptr inbounds %struct.GPR, %struct.GPR* %5773, i32 0, i32 5
  %5775 = getelementptr inbounds %struct.Reg, %struct.Reg* %5774, i32 0, i32 0
  %5776 = bitcast %union.anon* %5775 to %struct.anon.2*
  %CL.i800 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5776, i32 0, i32 0
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 1
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %RAX.i801 = bitcast %union.anon* %5779 to i64*
  %5780 = load i64, i64* %RAX.i801
  %5781 = load i8, i8* %CL.i800
  %5782 = zext i8 %5781 to i64
  %5783 = load i64, i64* %PC.i799
  %5784 = add i64 %5783, 2
  store i64 %5784, i64* %PC.i799
  %5785 = trunc i64 %5782 to i5
  switch i5 %5785, label %5789 [
    i5 0, label %routine_sarl__cl___eax.exit
    i5 1, label %5786
  ]

; <label>:5786:                                   ; preds = %block_40f8b1
  %5787 = shl i64 %5780, 32
  %5788 = ashr i64 %5787, 33
  br label %5796

; <label>:5789:                                   ; preds = %block_40f8b1
  %5790 = and i64 %5782, 31
  %5791 = add i64 %5790, -1
  %5792 = shl i64 %5780, 32
  %5793 = ashr exact i64 %5792, 32
  %5794 = ashr i64 %5793, %5791
  %5795 = lshr i64 %5794, 1
  br label %5796

; <label>:5796:                                   ; preds = %5789, %5786
  %5797 = phi i64 [ %5795, %5789 ], [ %5788, %5786 ]
  %5798 = phi i64 [ %5794, %5789 ], [ %5780, %5786 ]
  %5799 = trunc i64 %5798 to i8
  %5800 = and i8 %5799, 1
  %5801 = trunc i64 %5797 to i32
  %5802 = and i64 %5797, 4294967295
  store i64 %5802, i64* %RAX.i801, align 8
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5800, i8* %5803, align 1
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5805 = and i32 %5801, 255
  %5806 = call i32 @llvm.ctpop.i32(i32 %5805)
  %5807 = trunc i32 %5806 to i8
  %5808 = and i8 %5807, 1
  %5809 = xor i8 %5808, 1
  store i8 %5809, i8* %5804, align 1
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5810, align 1
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5812 = icmp eq i32 %5801, 0
  %5813 = zext i1 %5812 to i8
  store i8 %5813, i8* %5811, align 1
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5815 = lshr i32 %5801, 31
  %5816 = trunc i32 %5815 to i8
  store i8 %5816, i8* %5814, align 1
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5817, align 1
  br label %routine_sarl__cl___eax.exit

routine_sarl__cl___eax.exit:                      ; preds = %block_40f8b1, %5796
  store %struct.Memory* %loadMem_40f916, %struct.Memory** %MEMORY
  %loadMem_40f918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5819 = getelementptr inbounds %struct.GPR, %struct.GPR* %5818, i32 0, i32 33
  %5820 = getelementptr inbounds %struct.Reg, %struct.Reg* %5819, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %5820 to i64*
  %5821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5822 = getelementptr inbounds %struct.GPR, %struct.GPR* %5821, i32 0, i32 7
  %5823 = getelementptr inbounds %struct.Reg, %struct.Reg* %5822, i32 0, i32 0
  %RDX.i797 = bitcast %union.anon* %5823 to i64*
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5825 = getelementptr inbounds %struct.GPR, %struct.GPR* %5824, i32 0, i32 15
  %5826 = getelementptr inbounds %struct.Reg, %struct.Reg* %5825, i32 0, i32 0
  %RBP.i798 = bitcast %union.anon* %5826 to i64*
  %5827 = load i64, i64* %RBP.i798
  %5828 = sub i64 %5827, 12
  %5829 = load i64, i64* %PC.i796
  %5830 = add i64 %5829, 4
  store i64 %5830, i64* %PC.i796
  %5831 = inttoptr i64 %5828 to i32*
  %5832 = load i32, i32* %5831
  %5833 = sext i32 %5832 to i64
  store i64 %5833, i64* %RDX.i797, align 8
  store %struct.Memory* %loadMem_40f918, %struct.Memory** %MEMORY
  %loadMem_40f91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5835 = getelementptr inbounds %struct.GPR, %struct.GPR* %5834, i32 0, i32 33
  %5836 = getelementptr inbounds %struct.Reg, %struct.Reg* %5835, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %5836 to i64*
  %5837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5838 = getelementptr inbounds %struct.GPR, %struct.GPR* %5837, i32 0, i32 7
  %5839 = getelementptr inbounds %struct.Reg, %struct.Reg* %5838, i32 0, i32 0
  %RDX.i795 = bitcast %union.anon* %5839 to i64*
  %5840 = load i64, i64* %RDX.i795
  %5841 = load i64, i64* %PC.i794
  %5842 = add i64 %5841, 4
  store i64 %5842, i64* %PC.i794
  %5843 = shl i64 %5840, 3
  %5844 = icmp slt i64 %5843, 0
  %5845 = shl i64 %5843, 1
  store i64 %5845, i64* %RDX.i795, align 8
  %5846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5847 = zext i1 %5844 to i8
  store i8 %5847, i8* %5846, align 1
  %5848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5849 = trunc i64 %5845 to i32
  %5850 = and i32 %5849, 254
  %5851 = call i32 @llvm.ctpop.i32(i32 %5850)
  %5852 = trunc i32 %5851 to i8
  %5853 = and i8 %5852, 1
  %5854 = xor i8 %5853, 1
  store i8 %5854, i8* %5848, align 1
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5855, align 1
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5857 = icmp eq i64 %5845, 0
  %5858 = zext i1 %5857 to i8
  store i8 %5858, i8* %5856, align 1
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5860 = lshr i64 %5845, 63
  %5861 = trunc i64 %5860 to i8
  store i8 %5861, i8* %5859, align 1
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5862, align 1
  store %struct.Memory* %loadMem_40f91c, %struct.Memory** %MEMORY
  %loadMem_40f920 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5864 = getelementptr inbounds %struct.GPR, %struct.GPR* %5863, i32 0, i32 33
  %5865 = getelementptr inbounds %struct.Reg, %struct.Reg* %5864, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %5865 to i64*
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5867 = getelementptr inbounds %struct.GPR, %struct.GPR* %5866, i32 0, i32 9
  %5868 = getelementptr inbounds %struct.Reg, %struct.Reg* %5867, i32 0, i32 0
  %RSI.i792 = bitcast %union.anon* %5868 to i64*
  %5869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5870 = getelementptr inbounds %struct.GPR, %struct.GPR* %5869, i32 0, i32 15
  %5871 = getelementptr inbounds %struct.Reg, %struct.Reg* %5870, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %5871 to i64*
  %5872 = load i64, i64* %RBP.i793
  %5873 = sub i64 %5872, 184
  %5874 = load i64, i64* %PC.i791
  %5875 = add i64 %5874, 7
  store i64 %5875, i64* %PC.i791
  %5876 = inttoptr i64 %5873 to i64*
  %5877 = load i64, i64* %5876
  store i64 %5877, i64* %RSI.i792, align 8
  store %struct.Memory* %loadMem_40f920, %struct.Memory** %MEMORY
  %loadMem_40f927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5879 = getelementptr inbounds %struct.GPR, %struct.GPR* %5878, i32 0, i32 33
  %5880 = getelementptr inbounds %struct.Reg, %struct.Reg* %5879, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %5880 to i64*
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5882 = getelementptr inbounds %struct.GPR, %struct.GPR* %5881, i32 0, i32 7
  %5883 = getelementptr inbounds %struct.Reg, %struct.Reg* %5882, i32 0, i32 0
  %RDX.i789 = bitcast %union.anon* %5883 to i64*
  %5884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5885 = getelementptr inbounds %struct.GPR, %struct.GPR* %5884, i32 0, i32 9
  %5886 = getelementptr inbounds %struct.Reg, %struct.Reg* %5885, i32 0, i32 0
  %RSI.i790 = bitcast %union.anon* %5886 to i64*
  %5887 = load i64, i64* %RSI.i790
  %5888 = load i64, i64* %RDX.i789
  %5889 = load i64, i64* %PC.i788
  %5890 = add i64 %5889, 3
  store i64 %5890, i64* %PC.i788
  %5891 = add i64 %5888, %5887
  store i64 %5891, i64* %RSI.i790, align 8
  %5892 = icmp ult i64 %5891, %5887
  %5893 = icmp ult i64 %5891, %5888
  %5894 = or i1 %5892, %5893
  %5895 = zext i1 %5894 to i8
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5895, i8* %5896, align 1
  %5897 = trunc i64 %5891 to i32
  %5898 = and i32 %5897, 255
  %5899 = call i32 @llvm.ctpop.i32(i32 %5898)
  %5900 = trunc i32 %5899 to i8
  %5901 = and i8 %5900, 1
  %5902 = xor i8 %5901, 1
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5902, i8* %5903, align 1
  %5904 = xor i64 %5888, %5887
  %5905 = xor i64 %5904, %5891
  %5906 = lshr i64 %5905, 4
  %5907 = trunc i64 %5906 to i8
  %5908 = and i8 %5907, 1
  %5909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5908, i8* %5909, align 1
  %5910 = icmp eq i64 %5891, 0
  %5911 = zext i1 %5910 to i8
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5911, i8* %5912, align 1
  %5913 = lshr i64 %5891, 63
  %5914 = trunc i64 %5913 to i8
  %5915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5914, i8* %5915, align 1
  %5916 = lshr i64 %5887, 63
  %5917 = lshr i64 %5888, 63
  %5918 = xor i64 %5913, %5916
  %5919 = xor i64 %5913, %5917
  %5920 = add i64 %5918, %5919
  %5921 = icmp eq i64 %5920, 2
  %5922 = zext i1 %5921 to i8
  %5923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5922, i8* %5923, align 1
  store %struct.Memory* %loadMem_40f927, %struct.Memory** %MEMORY
  %loadMem_40f92a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5925 = getelementptr inbounds %struct.GPR, %struct.GPR* %5924, i32 0, i32 33
  %5926 = getelementptr inbounds %struct.Reg, %struct.Reg* %5925, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %5926 to i64*
  %5927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5928 = getelementptr inbounds %struct.GPR, %struct.GPR* %5927, i32 0, i32 7
  %5929 = getelementptr inbounds %struct.Reg, %struct.Reg* %5928, i32 0, i32 0
  %RDX.i786 = bitcast %union.anon* %5929 to i64*
  %5930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5931 = getelementptr inbounds %struct.GPR, %struct.GPR* %5930, i32 0, i32 15
  %5932 = getelementptr inbounds %struct.Reg, %struct.Reg* %5931, i32 0, i32 0
  %RBP.i787 = bitcast %union.anon* %5932 to i64*
  %5933 = load i64, i64* %RBP.i787
  %5934 = sub i64 %5933, 16
  %5935 = load i64, i64* %PC.i785
  %5936 = add i64 %5935, 4
  store i64 %5936, i64* %PC.i785
  %5937 = inttoptr i64 %5934 to i32*
  %5938 = load i32, i32* %5937
  %5939 = sext i32 %5938 to i64
  store i64 %5939, i64* %RDX.i786, align 8
  store %struct.Memory* %loadMem_40f92a, %struct.Memory** %MEMORY
  %loadMem_40f92e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5941 = getelementptr inbounds %struct.GPR, %struct.GPR* %5940, i32 0, i32 33
  %5942 = getelementptr inbounds %struct.Reg, %struct.Reg* %5941, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %5942 to i64*
  %5943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5944 = getelementptr inbounds %struct.GPR, %struct.GPR* %5943, i32 0, i32 7
  %5945 = getelementptr inbounds %struct.Reg, %struct.Reg* %5944, i32 0, i32 0
  %RDX.i783 = bitcast %union.anon* %5945 to i64*
  %5946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5947 = getelementptr inbounds %struct.GPR, %struct.GPR* %5946, i32 0, i32 9
  %5948 = getelementptr inbounds %struct.Reg, %struct.Reg* %5947, i32 0, i32 0
  %RSI.i784 = bitcast %union.anon* %5948 to i64*
  %5949 = load i64, i64* %RSI.i784
  %5950 = load i64, i64* %RDX.i783
  %5951 = mul i64 %5950, 4
  %5952 = add i64 %5951, %5949
  %5953 = load i64, i64* %PC.i782
  %5954 = add i64 %5953, 3
  store i64 %5954, i64* %PC.i782
  %5955 = inttoptr i64 %5952 to i32*
  %5956 = load i32, i32* %5955
  %5957 = zext i32 %5956 to i64
  store i64 %5957, i64* %RSI.i784, align 8
  store %struct.Memory* %loadMem_40f92e, %struct.Memory** %MEMORY
  %loadMem_40f931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5959 = getelementptr inbounds %struct.GPR, %struct.GPR* %5958, i32 0, i32 33
  %5960 = getelementptr inbounds %struct.Reg, %struct.Reg* %5959, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %5960 to i64*
  %5961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5962 = getelementptr inbounds %struct.GPR, %struct.GPR* %5961, i32 0, i32 1
  %5963 = getelementptr inbounds %struct.Reg, %struct.Reg* %5962, i32 0, i32 0
  %EAX.i780 = bitcast %union.anon* %5963 to i32*
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5965 = getelementptr inbounds %struct.GPR, %struct.GPR* %5964, i32 0, i32 11
  %5966 = getelementptr inbounds %struct.Reg, %struct.Reg* %5965, i32 0, i32 0
  %RDI.i781 = bitcast %union.anon* %5966 to i64*
  %5967 = load i32, i32* %EAX.i780
  %5968 = zext i32 %5967 to i64
  %5969 = load i64, i64* %PC.i779
  %5970 = add i64 %5969, 2
  store i64 %5970, i64* %PC.i779
  %5971 = and i64 %5968, 4294967295
  store i64 %5971, i64* %RDI.i781, align 8
  store %struct.Memory* %loadMem_40f931, %struct.Memory** %MEMORY
  %loadMem1_40f933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5973 = getelementptr inbounds %struct.GPR, %struct.GPR* %5972, i32 0, i32 33
  %5974 = getelementptr inbounds %struct.Reg, %struct.Reg* %5973, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %5974 to i64*
  %5975 = load i64, i64* %PC.i778
  %5976 = add i64 %5975, 415773
  %5977 = load i64, i64* %PC.i778
  %5978 = add i64 %5977, 5
  %5979 = load i64, i64* %PC.i778
  %5980 = add i64 %5979, 5
  store i64 %5980, i64* %PC.i778
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5982 = load i64, i64* %5981, align 8
  %5983 = add i64 %5982, -8
  %5984 = inttoptr i64 %5983 to i64*
  store i64 %5978, i64* %5984
  store i64 %5983, i64* %5981, align 8
  %5985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5976, i64* %5985, align 8
  store %struct.Memory* %loadMem1_40f933, %struct.Memory** %MEMORY
  %loadMem2_40f933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40f933 = load i64, i64* %3
  %call2_40f933 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40f933, %struct.Memory* %loadMem2_40f933)
  store %struct.Memory* %call2_40f933, %struct.Memory** %MEMORY
  %loadMem_40f938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5987 = getelementptr inbounds %struct.GPR, %struct.GPR* %5986, i32 0, i32 33
  %5988 = getelementptr inbounds %struct.Reg, %struct.Reg* %5987, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %5988 to i64*
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5990 = getelementptr inbounds %struct.GPR, %struct.GPR* %5989, i32 0, i32 7
  %5991 = getelementptr inbounds %struct.Reg, %struct.Reg* %5990, i32 0, i32 0
  %RDX.i777 = bitcast %union.anon* %5991 to i64*
  %5992 = load i64, i64* %PC.i776
  %5993 = add i64 %5992, 10
  store i64 %5993, i64* %PC.i776
  store i64 ptrtoint (%G__0x4b28d0_type* @G__0x4b28d0 to i64), i64* %RDX.i777, align 8
  store %struct.Memory* %loadMem_40f938, %struct.Memory** %MEMORY
  %loadMem_40f942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5995 = getelementptr inbounds %struct.GPR, %struct.GPR* %5994, i32 0, i32 33
  %5996 = getelementptr inbounds %struct.Reg, %struct.Reg* %5995, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %5996 to i64*
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5998 = getelementptr inbounds %struct.GPR, %struct.GPR* %5997, i32 0, i32 15
  %5999 = getelementptr inbounds %struct.Reg, %struct.Reg* %5998, i32 0, i32 0
  %RBP.i774 = bitcast %union.anon* %5999 to i64*
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6001 = getelementptr inbounds %struct.GPR, %struct.GPR* %6000, i32 0, i32 17
  %6002 = getelementptr inbounds %struct.Reg, %struct.Reg* %6001, i32 0, i32 0
  %R8.i775 = bitcast %union.anon* %6002 to i64*
  %6003 = load i64, i64* %RBP.i774
  %6004 = sub i64 %6003, 152
  %6005 = load i64, i64* %PC.i773
  %6006 = add i64 %6005, 7
  store i64 %6006, i64* %PC.i773
  %6007 = inttoptr i64 %6004 to i32*
  %6008 = load i32, i32* %6007
  %6009 = sext i32 %6008 to i64
  store i64 %6009, i64* %R8.i775, align 8
  store %struct.Memory* %loadMem_40f942, %struct.Memory** %MEMORY
  %loadMem_40f949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6011 = getelementptr inbounds %struct.GPR, %struct.GPR* %6010, i32 0, i32 33
  %6012 = getelementptr inbounds %struct.Reg, %struct.Reg* %6011, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %6012 to i64*
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6014 = getelementptr inbounds %struct.GPR, %struct.GPR* %6013, i32 0, i32 17
  %6015 = getelementptr inbounds %struct.Reg, %struct.Reg* %6014, i32 0, i32 0
  %R8.i772 = bitcast %union.anon* %6015 to i64*
  %6016 = load i64, i64* %R8.i772
  %6017 = load i64, i64* %PC.i771
  %6018 = add i64 %6017, 4
  store i64 %6018, i64* %PC.i771
  %6019 = shl i64 %6016, 5
  %6020 = icmp slt i64 %6019, 0
  %6021 = shl i64 %6019, 1
  store i64 %6021, i64* %R8.i772, align 8
  %6022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6023 = zext i1 %6020 to i8
  store i8 %6023, i8* %6022, align 1
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6025 = trunc i64 %6021 to i32
  %6026 = and i32 %6025, 254
  %6027 = call i32 @llvm.ctpop.i32(i32 %6026)
  %6028 = trunc i32 %6027 to i8
  %6029 = and i8 %6028, 1
  %6030 = xor i8 %6029, 1
  store i8 %6030, i8* %6024, align 1
  %6031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6031, align 1
  %6032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6033 = icmp eq i64 %6021, 0
  %6034 = zext i1 %6033 to i8
  store i8 %6034, i8* %6032, align 1
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6036 = lshr i64 %6021, 63
  %6037 = trunc i64 %6036 to i8
  store i8 %6037, i8* %6035, align 1
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6038, align 1
  store %struct.Memory* %loadMem_40f949, %struct.Memory** %MEMORY
  %loadMem_40f94d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6040 = getelementptr inbounds %struct.GPR, %struct.GPR* %6039, i32 0, i32 33
  %6041 = getelementptr inbounds %struct.Reg, %struct.Reg* %6040, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %6041 to i64*
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6043 = getelementptr inbounds %struct.GPR, %struct.GPR* %6042, i32 0, i32 7
  %6044 = getelementptr inbounds %struct.Reg, %struct.Reg* %6043, i32 0, i32 0
  %RDX.i769 = bitcast %union.anon* %6044 to i64*
  %6045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6046 = getelementptr inbounds %struct.GPR, %struct.GPR* %6045, i32 0, i32 17
  %6047 = getelementptr inbounds %struct.Reg, %struct.Reg* %6046, i32 0, i32 0
  %R8.i770 = bitcast %union.anon* %6047 to i64*
  %6048 = load i64, i64* %RDX.i769
  %6049 = load i64, i64* %R8.i770
  %6050 = load i64, i64* %PC.i768
  %6051 = add i64 %6050, 3
  store i64 %6051, i64* %PC.i768
  %6052 = add i64 %6049, %6048
  store i64 %6052, i64* %RDX.i769, align 8
  %6053 = icmp ult i64 %6052, %6048
  %6054 = icmp ult i64 %6052, %6049
  %6055 = or i1 %6053, %6054
  %6056 = zext i1 %6055 to i8
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6056, i8* %6057, align 1
  %6058 = trunc i64 %6052 to i32
  %6059 = and i32 %6058, 255
  %6060 = call i32 @llvm.ctpop.i32(i32 %6059)
  %6061 = trunc i32 %6060 to i8
  %6062 = and i8 %6061, 1
  %6063 = xor i8 %6062, 1
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6063, i8* %6064, align 1
  %6065 = xor i64 %6049, %6048
  %6066 = xor i64 %6065, %6052
  %6067 = lshr i64 %6066, 4
  %6068 = trunc i64 %6067 to i8
  %6069 = and i8 %6068, 1
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6069, i8* %6070, align 1
  %6071 = icmp eq i64 %6052, 0
  %6072 = zext i1 %6071 to i8
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6072, i8* %6073, align 1
  %6074 = lshr i64 %6052, 63
  %6075 = trunc i64 %6074 to i8
  %6076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6075, i8* %6076, align 1
  %6077 = lshr i64 %6048, 63
  %6078 = lshr i64 %6049, 63
  %6079 = xor i64 %6074, %6077
  %6080 = xor i64 %6074, %6078
  %6081 = add i64 %6079, %6080
  %6082 = icmp eq i64 %6081, 2
  %6083 = zext i1 %6082 to i8
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6083, i8* %6084, align 1
  store %struct.Memory* %loadMem_40f94d, %struct.Memory** %MEMORY
  %loadMem_40f950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6086 = getelementptr inbounds %struct.GPR, %struct.GPR* %6085, i32 0, i32 33
  %6087 = getelementptr inbounds %struct.Reg, %struct.Reg* %6086, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %6087 to i64*
  %6088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6089 = getelementptr inbounds %struct.GPR, %struct.GPR* %6088, i32 0, i32 15
  %6090 = getelementptr inbounds %struct.Reg, %struct.Reg* %6089, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %6090 to i64*
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6092 = getelementptr inbounds %struct.GPR, %struct.GPR* %6091, i32 0, i32 17
  %6093 = getelementptr inbounds %struct.Reg, %struct.Reg* %6092, i32 0, i32 0
  %R8.i767 = bitcast %union.anon* %6093 to i64*
  %6094 = load i64, i64* %RBP.i766
  %6095 = sub i64 %6094, 12
  %6096 = load i64, i64* %PC.i765
  %6097 = add i64 %6096, 4
  store i64 %6097, i64* %PC.i765
  %6098 = inttoptr i64 %6095 to i32*
  %6099 = load i32, i32* %6098
  %6100 = sext i32 %6099 to i64
  store i64 %6100, i64* %R8.i767, align 8
  store %struct.Memory* %loadMem_40f950, %struct.Memory** %MEMORY
  %loadMem_40f954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6102 = getelementptr inbounds %struct.GPR, %struct.GPR* %6101, i32 0, i32 33
  %6103 = getelementptr inbounds %struct.Reg, %struct.Reg* %6102, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %6103 to i64*
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6105 = getelementptr inbounds %struct.GPR, %struct.GPR* %6104, i32 0, i32 17
  %6106 = getelementptr inbounds %struct.Reg, %struct.Reg* %6105, i32 0, i32 0
  %R8.i764 = bitcast %union.anon* %6106 to i64*
  %6107 = load i64, i64* %R8.i764
  %6108 = load i64, i64* %PC.i763
  %6109 = add i64 %6108, 4
  store i64 %6109, i64* %PC.i763
  %6110 = shl i64 %6107, 3
  %6111 = icmp slt i64 %6110, 0
  %6112 = shl i64 %6110, 1
  store i64 %6112, i64* %R8.i764, align 8
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6114 = zext i1 %6111 to i8
  store i8 %6114, i8* %6113, align 1
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6116 = trunc i64 %6112 to i32
  %6117 = and i32 %6116, 254
  %6118 = call i32 @llvm.ctpop.i32(i32 %6117)
  %6119 = trunc i32 %6118 to i8
  %6120 = and i8 %6119, 1
  %6121 = xor i8 %6120, 1
  store i8 %6121, i8* %6115, align 1
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6122, align 1
  %6123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6124 = icmp eq i64 %6112, 0
  %6125 = zext i1 %6124 to i8
  store i8 %6125, i8* %6123, align 1
  %6126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6127 = lshr i64 %6112, 63
  %6128 = trunc i64 %6127 to i8
  store i8 %6128, i8* %6126, align 1
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6129, align 1
  store %struct.Memory* %loadMem_40f954, %struct.Memory** %MEMORY
  %loadMem_40f958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6131 = getelementptr inbounds %struct.GPR, %struct.GPR* %6130, i32 0, i32 33
  %6132 = getelementptr inbounds %struct.Reg, %struct.Reg* %6131, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %6132 to i64*
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6134 = getelementptr inbounds %struct.GPR, %struct.GPR* %6133, i32 0, i32 7
  %6135 = getelementptr inbounds %struct.Reg, %struct.Reg* %6134, i32 0, i32 0
  %RDX.i761 = bitcast %union.anon* %6135 to i64*
  %6136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6137 = getelementptr inbounds %struct.GPR, %struct.GPR* %6136, i32 0, i32 17
  %6138 = getelementptr inbounds %struct.Reg, %struct.Reg* %6137, i32 0, i32 0
  %R8.i762 = bitcast %union.anon* %6138 to i64*
  %6139 = load i64, i64* %RDX.i761
  %6140 = load i64, i64* %R8.i762
  %6141 = load i64, i64* %PC.i760
  %6142 = add i64 %6141, 3
  store i64 %6142, i64* %PC.i760
  %6143 = add i64 %6140, %6139
  store i64 %6143, i64* %RDX.i761, align 8
  %6144 = icmp ult i64 %6143, %6139
  %6145 = icmp ult i64 %6143, %6140
  %6146 = or i1 %6144, %6145
  %6147 = zext i1 %6146 to i8
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6147, i8* %6148, align 1
  %6149 = trunc i64 %6143 to i32
  %6150 = and i32 %6149, 255
  %6151 = call i32 @llvm.ctpop.i32(i32 %6150)
  %6152 = trunc i32 %6151 to i8
  %6153 = and i8 %6152, 1
  %6154 = xor i8 %6153, 1
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6154, i8* %6155, align 1
  %6156 = xor i64 %6140, %6139
  %6157 = xor i64 %6156, %6143
  %6158 = lshr i64 %6157, 4
  %6159 = trunc i64 %6158 to i8
  %6160 = and i8 %6159, 1
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6160, i8* %6161, align 1
  %6162 = icmp eq i64 %6143, 0
  %6163 = zext i1 %6162 to i8
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6163, i8* %6164, align 1
  %6165 = lshr i64 %6143, 63
  %6166 = trunc i64 %6165 to i8
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6166, i8* %6167, align 1
  %6168 = lshr i64 %6139, 63
  %6169 = lshr i64 %6140, 63
  %6170 = xor i64 %6165, %6168
  %6171 = xor i64 %6165, %6169
  %6172 = add i64 %6170, %6171
  %6173 = icmp eq i64 %6172, 2
  %6174 = zext i1 %6173 to i8
  %6175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6174, i8* %6175, align 1
  store %struct.Memory* %loadMem_40f958, %struct.Memory** %MEMORY
  %loadMem_40f95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6177 = getelementptr inbounds %struct.GPR, %struct.GPR* %6176, i32 0, i32 33
  %6178 = getelementptr inbounds %struct.Reg, %struct.Reg* %6177, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %6178 to i64*
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6180 = getelementptr inbounds %struct.GPR, %struct.GPR* %6179, i32 0, i32 15
  %6181 = getelementptr inbounds %struct.Reg, %struct.Reg* %6180, i32 0, i32 0
  %RBP.i758 = bitcast %union.anon* %6181 to i64*
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6183 = getelementptr inbounds %struct.GPR, %struct.GPR* %6182, i32 0, i32 17
  %6184 = getelementptr inbounds %struct.Reg, %struct.Reg* %6183, i32 0, i32 0
  %R8.i759 = bitcast %union.anon* %6184 to i64*
  %6185 = load i64, i64* %RBP.i758
  %6186 = sub i64 %6185, 16
  %6187 = load i64, i64* %PC.i757
  %6188 = add i64 %6187, 4
  store i64 %6188, i64* %PC.i757
  %6189 = inttoptr i64 %6186 to i32*
  %6190 = load i32, i32* %6189
  %6191 = sext i32 %6190 to i64
  store i64 %6191, i64* %R8.i759, align 8
  store %struct.Memory* %loadMem_40f95b, %struct.Memory** %MEMORY
  %loadMem_40f95f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6193 = getelementptr inbounds %struct.GPR, %struct.GPR* %6192, i32 0, i32 33
  %6194 = getelementptr inbounds %struct.Reg, %struct.Reg* %6193, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %6194 to i64*
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6196 = getelementptr inbounds %struct.GPR, %struct.GPR* %6195, i32 0, i32 1
  %6197 = getelementptr inbounds %struct.Reg, %struct.Reg* %6196, i32 0, i32 0
  %RAX.i754 = bitcast %union.anon* %6197 to i64*
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6199 = getelementptr inbounds %struct.GPR, %struct.GPR* %6198, i32 0, i32 7
  %6200 = getelementptr inbounds %struct.Reg, %struct.Reg* %6199, i32 0, i32 0
  %RDX.i755 = bitcast %union.anon* %6200 to i64*
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6202 = getelementptr inbounds %struct.GPR, %struct.GPR* %6201, i32 0, i32 17
  %6203 = getelementptr inbounds %struct.Reg, %struct.Reg* %6202, i32 0, i32 0
  %R8.i756 = bitcast %union.anon* %6203 to i64*
  %6204 = load i64, i64* %RAX.i754
  %6205 = load i64, i64* %RDX.i755
  %6206 = load i64, i64* %R8.i756
  %6207 = mul i64 %6206, 4
  %6208 = add i64 %6207, %6205
  %6209 = load i64, i64* %PC.i753
  %6210 = add i64 %6209, 5
  store i64 %6210, i64* %PC.i753
  %6211 = inttoptr i64 %6208 to i32*
  %6212 = load i32, i32* %6211
  %6213 = shl i64 %6204, 32
  %6214 = ashr exact i64 %6213, 32
  %6215 = sext i32 %6212 to i64
  %6216 = mul i64 %6215, %6214
  %6217 = trunc i64 %6216 to i32
  %6218 = and i64 %6216, 4294967295
  store i64 %6218, i64* %RAX.i754, align 8
  %6219 = shl i64 %6216, 32
  %6220 = ashr exact i64 %6219, 32
  %6221 = icmp ne i64 %6220, %6216
  %6222 = zext i1 %6221 to i8
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6222, i8* %6223, align 1
  %6224 = and i32 %6217, 255
  %6225 = call i32 @llvm.ctpop.i32(i32 %6224)
  %6226 = trunc i32 %6225 to i8
  %6227 = and i8 %6226, 1
  %6228 = xor i8 %6227, 1
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6228, i8* %6229, align 1
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6230, align 1
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6231, align 1
  %6232 = lshr i32 %6217, 31
  %6233 = trunc i32 %6232 to i8
  %6234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6233, i8* %6234, align 1
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6222, i8* %6235, align 1
  store %struct.Memory* %loadMem_40f95f, %struct.Memory** %MEMORY
  %loadMem_40f964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6237 = getelementptr inbounds %struct.GPR, %struct.GPR* %6236, i32 0, i32 33
  %6238 = getelementptr inbounds %struct.Reg, %struct.Reg* %6237, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %6238 to i64*
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6240 = getelementptr inbounds %struct.GPR, %struct.GPR* %6239, i32 0, i32 5
  %6241 = getelementptr inbounds %struct.Reg, %struct.Reg* %6240, i32 0, i32 0
  %RCX.i751 = bitcast %union.anon* %6241 to i64*
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6243 = getelementptr inbounds %struct.GPR, %struct.GPR* %6242, i32 0, i32 15
  %6244 = getelementptr inbounds %struct.Reg, %struct.Reg* %6243, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %6244 to i64*
  %6245 = load i64, i64* %RBP.i752
  %6246 = sub i64 %6245, 148
  %6247 = load i64, i64* %PC.i750
  %6248 = add i64 %6247, 6
  store i64 %6248, i64* %PC.i750
  %6249 = inttoptr i64 %6246 to i32*
  %6250 = load i32, i32* %6249
  %6251 = zext i32 %6250 to i64
  store i64 %6251, i64* %RCX.i751, align 8
  store %struct.Memory* %loadMem_40f964, %struct.Memory** %MEMORY
  %loadMem_40f96a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6253 = getelementptr inbounds %struct.GPR, %struct.GPR* %6252, i32 0, i32 33
  %6254 = getelementptr inbounds %struct.Reg, %struct.Reg* %6253, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %6254 to i64*
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6256 = getelementptr inbounds %struct.GPR, %struct.GPR* %6255, i32 0, i32 5
  %6257 = getelementptr inbounds %struct.Reg, %struct.Reg* %6256, i32 0, i32 0
  %6258 = bitcast %union.anon* %6257 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6258, i32 0, i32 0
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6260 = getelementptr inbounds %struct.GPR, %struct.GPR* %6259, i32 0, i32 1
  %6261 = getelementptr inbounds %struct.Reg, %struct.Reg* %6260, i32 0, i32 0
  %RAX.i749 = bitcast %union.anon* %6261 to i64*
  %6262 = load i64, i64* %RAX.i749
  %6263 = load i8, i8* %CL.i
  %6264 = zext i8 %6263 to i64
  %6265 = load i64, i64* %PC.i748
  %6266 = add i64 %6265, 2
  store i64 %6266, i64* %PC.i748
  %6267 = trunc i64 %6264 to i5
  switch i5 %6267, label %6274 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %6268
  ]

; <label>:6268:                                   ; preds = %routine_sarl__cl___eax.exit
  %6269 = trunc i64 %6262 to i32
  %6270 = shl i32 %6269, 1
  %6271 = icmp slt i32 %6269, 0
  %6272 = icmp slt i32 %6270, 0
  %6273 = xor i1 %6271, %6272
  br label %6283

; <label>:6274:                                   ; preds = %routine_sarl__cl___eax.exit
  %6275 = and i64 %6264, 31
  %6276 = add i64 %6275, 4294967295
  %6277 = and i64 %6262, 4294967295
  %6278 = and i64 %6276, 4294967295
  %6279 = shl i64 %6277, %6278
  %6280 = trunc i64 %6279 to i32
  %6281 = icmp slt i32 %6280, 0
  %6282 = shl i32 %6280, 1
  br label %6283

; <label>:6283:                                   ; preds = %6274, %6268
  %6284 = phi i1 [ %6271, %6268 ], [ %6281, %6274 ]
  %6285 = phi i1 [ %6273, %6268 ], [ false, %6274 ]
  %6286 = phi i32 [ %6270, %6268 ], [ %6282, %6274 ]
  %6287 = zext i32 %6286 to i64
  store i64 %6287, i64* %RAX.i749, align 8
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6289 = zext i1 %6284 to i8
  store i8 %6289, i8* %6288, align 1
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6291 = and i32 %6286, 254
  %6292 = call i32 @llvm.ctpop.i32(i32 %6291)
  %6293 = trunc i32 %6292 to i8
  %6294 = and i8 %6293, 1
  %6295 = xor i8 %6294, 1
  store i8 %6295, i8* %6290, align 1
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6296, align 1
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6298 = icmp eq i32 %6286, 0
  %6299 = zext i1 %6298 to i8
  store i8 %6299, i8* %6297, align 1
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6301 = lshr i32 %6286, 31
  %6302 = trunc i32 %6301 to i8
  store i8 %6302, i8* %6300, align 1
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6304 = zext i1 %6285 to i8
  store i8 %6304, i8* %6303, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %routine_sarl__cl___eax.exit, %6283
  store %struct.Memory* %loadMem_40f96a, %struct.Memory** %MEMORY
  %loadMem_40f96c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6306 = getelementptr inbounds %struct.GPR, %struct.GPR* %6305, i32 0, i32 33
  %6307 = getelementptr inbounds %struct.Reg, %struct.Reg* %6306, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %6307 to i64*
  %6308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6309 = getelementptr inbounds %struct.GPR, %struct.GPR* %6308, i32 0, i32 7
  %6310 = getelementptr inbounds %struct.Reg, %struct.Reg* %6309, i32 0, i32 0
  %RDX.i747 = bitcast %union.anon* %6310 to i64*
  %6311 = load i64, i64* %PC.i746
  %6312 = add i64 %6311, 8
  store i64 %6312, i64* %PC.i746
  %6313 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6313, i64* %RDX.i747, align 8
  store %struct.Memory* %loadMem_40f96c, %struct.Memory** %MEMORY
  %loadMem_40f974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6315 = getelementptr inbounds %struct.GPR, %struct.GPR* %6314, i32 0, i32 33
  %6316 = getelementptr inbounds %struct.Reg, %struct.Reg* %6315, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %6316 to i64*
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6318 = getelementptr inbounds %struct.GPR, %struct.GPR* %6317, i32 0, i32 7
  %6319 = getelementptr inbounds %struct.Reg, %struct.Reg* %6318, i32 0, i32 0
  %RDX.i745 = bitcast %union.anon* %6319 to i64*
  %6320 = load i64, i64* %RDX.i745
  %6321 = load i64, i64* %PC.i744
  %6322 = add i64 %6321, 7
  store i64 %6322, i64* %PC.i744
  %6323 = add i64 13112, %6320
  store i64 %6323, i64* %RDX.i745, align 8
  %6324 = icmp ult i64 %6323, %6320
  %6325 = icmp ult i64 %6323, 13112
  %6326 = or i1 %6324, %6325
  %6327 = zext i1 %6326 to i8
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6327, i8* %6328, align 1
  %6329 = trunc i64 %6323 to i32
  %6330 = and i32 %6329, 255
  %6331 = call i32 @llvm.ctpop.i32(i32 %6330)
  %6332 = trunc i32 %6331 to i8
  %6333 = and i8 %6332, 1
  %6334 = xor i8 %6333, 1
  %6335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6334, i8* %6335, align 1
  %6336 = xor i64 13112, %6320
  %6337 = xor i64 %6336, %6323
  %6338 = lshr i64 %6337, 4
  %6339 = trunc i64 %6338 to i8
  %6340 = and i8 %6339, 1
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6340, i8* %6341, align 1
  %6342 = icmp eq i64 %6323, 0
  %6343 = zext i1 %6342 to i8
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6343, i8* %6344, align 1
  %6345 = lshr i64 %6323, 63
  %6346 = trunc i64 %6345 to i8
  %6347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6346, i8* %6347, align 1
  %6348 = lshr i64 %6320, 63
  %6349 = xor i64 %6345, %6348
  %6350 = add i64 %6349, %6345
  %6351 = icmp eq i64 %6350, 2
  %6352 = zext i1 %6351 to i8
  %6353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6352, i8* %6353, align 1
  store %struct.Memory* %loadMem_40f974, %struct.Memory** %MEMORY
  %loadMem_40f97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6355 = getelementptr inbounds %struct.GPR, %struct.GPR* %6354, i32 0, i32 33
  %6356 = getelementptr inbounds %struct.Reg, %struct.Reg* %6355, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %6356 to i64*
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6358 = getelementptr inbounds %struct.GPR, %struct.GPR* %6357, i32 0, i32 15
  %6359 = getelementptr inbounds %struct.Reg, %struct.Reg* %6358, i32 0, i32 0
  %RBP.i742 = bitcast %union.anon* %6359 to i64*
  %6360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6361 = getelementptr inbounds %struct.GPR, %struct.GPR* %6360, i32 0, i32 17
  %6362 = getelementptr inbounds %struct.Reg, %struct.Reg* %6361, i32 0, i32 0
  %R8.i743 = bitcast %union.anon* %6362 to i64*
  %6363 = load i64, i64* %RBP.i742
  %6364 = sub i64 %6363, 12
  %6365 = load i64, i64* %PC.i741
  %6366 = add i64 %6365, 4
  store i64 %6366, i64* %PC.i741
  %6367 = inttoptr i64 %6364 to i32*
  %6368 = load i32, i32* %6367
  %6369 = sext i32 %6368 to i64
  store i64 %6369, i64* %R8.i743, align 8
  store %struct.Memory* %loadMem_40f97b, %struct.Memory** %MEMORY
  %loadMem_40f97f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6371 = getelementptr inbounds %struct.GPR, %struct.GPR* %6370, i32 0, i32 33
  %6372 = getelementptr inbounds %struct.Reg, %struct.Reg* %6371, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %6372 to i64*
  %6373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6374 = getelementptr inbounds %struct.GPR, %struct.GPR* %6373, i32 0, i32 17
  %6375 = getelementptr inbounds %struct.Reg, %struct.Reg* %6374, i32 0, i32 0
  %R8.i740 = bitcast %union.anon* %6375 to i64*
  %6376 = load i64, i64* %R8.i740
  %6377 = load i64, i64* %PC.i739
  %6378 = add i64 %6377, 4
  store i64 %6378, i64* %PC.i739
  %6379 = shl i64 %6376, 5
  %6380 = icmp slt i64 %6379, 0
  %6381 = shl i64 %6379, 1
  store i64 %6381, i64* %R8.i740, align 8
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6383 = zext i1 %6380 to i8
  store i8 %6383, i8* %6382, align 1
  %6384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6385 = trunc i64 %6381 to i32
  %6386 = and i32 %6385, 254
  %6387 = call i32 @llvm.ctpop.i32(i32 %6386)
  %6388 = trunc i32 %6387 to i8
  %6389 = and i8 %6388, 1
  %6390 = xor i8 %6389, 1
  store i8 %6390, i8* %6384, align 1
  %6391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6391, align 1
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6393 = icmp eq i64 %6381, 0
  %6394 = zext i1 %6393 to i8
  store i8 %6394, i8* %6392, align 1
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6396 = lshr i64 %6381, 63
  %6397 = trunc i64 %6396 to i8
  store i8 %6397, i8* %6395, align 1
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6398, align 1
  store %struct.Memory* %loadMem_40f97f, %struct.Memory** %MEMORY
  %loadMem_40f983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6400 = getelementptr inbounds %struct.GPR, %struct.GPR* %6399, i32 0, i32 33
  %6401 = getelementptr inbounds %struct.Reg, %struct.Reg* %6400, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %6401 to i64*
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6403 = getelementptr inbounds %struct.GPR, %struct.GPR* %6402, i32 0, i32 7
  %6404 = getelementptr inbounds %struct.Reg, %struct.Reg* %6403, i32 0, i32 0
  %RDX.i737 = bitcast %union.anon* %6404 to i64*
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6406 = getelementptr inbounds %struct.GPR, %struct.GPR* %6405, i32 0, i32 17
  %6407 = getelementptr inbounds %struct.Reg, %struct.Reg* %6406, i32 0, i32 0
  %R8.i738 = bitcast %union.anon* %6407 to i64*
  %6408 = load i64, i64* %RDX.i737
  %6409 = load i64, i64* %R8.i738
  %6410 = load i64, i64* %PC.i736
  %6411 = add i64 %6410, 3
  store i64 %6411, i64* %PC.i736
  %6412 = add i64 %6409, %6408
  store i64 %6412, i64* %RDX.i737, align 8
  %6413 = icmp ult i64 %6412, %6408
  %6414 = icmp ult i64 %6412, %6409
  %6415 = or i1 %6413, %6414
  %6416 = zext i1 %6415 to i8
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6416, i8* %6417, align 1
  %6418 = trunc i64 %6412 to i32
  %6419 = and i32 %6418, 255
  %6420 = call i32 @llvm.ctpop.i32(i32 %6419)
  %6421 = trunc i32 %6420 to i8
  %6422 = and i8 %6421, 1
  %6423 = xor i8 %6422, 1
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6423, i8* %6424, align 1
  %6425 = xor i64 %6409, %6408
  %6426 = xor i64 %6425, %6412
  %6427 = lshr i64 %6426, 4
  %6428 = trunc i64 %6427 to i8
  %6429 = and i8 %6428, 1
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6429, i8* %6430, align 1
  %6431 = icmp eq i64 %6412, 0
  %6432 = zext i1 %6431 to i8
  %6433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6432, i8* %6433, align 1
  %6434 = lshr i64 %6412, 63
  %6435 = trunc i64 %6434 to i8
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6435, i8* %6436, align 1
  %6437 = lshr i64 %6408, 63
  %6438 = lshr i64 %6409, 63
  %6439 = xor i64 %6434, %6437
  %6440 = xor i64 %6434, %6438
  %6441 = add i64 %6439, %6440
  %6442 = icmp eq i64 %6441, 2
  %6443 = zext i1 %6442 to i8
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6443, i8* %6444, align 1
  store %struct.Memory* %loadMem_40f983, %struct.Memory** %MEMORY
  %loadMem_40f986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6446 = getelementptr inbounds %struct.GPR, %struct.GPR* %6445, i32 0, i32 33
  %6447 = getelementptr inbounds %struct.Reg, %struct.Reg* %6446, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %6447 to i64*
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6449 = getelementptr inbounds %struct.GPR, %struct.GPR* %6448, i32 0, i32 15
  %6450 = getelementptr inbounds %struct.Reg, %struct.Reg* %6449, i32 0, i32 0
  %RBP.i734 = bitcast %union.anon* %6450 to i64*
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6452 = getelementptr inbounds %struct.GPR, %struct.GPR* %6451, i32 0, i32 17
  %6453 = getelementptr inbounds %struct.Reg, %struct.Reg* %6452, i32 0, i32 0
  %R8.i735 = bitcast %union.anon* %6453 to i64*
  %6454 = load i64, i64* %RBP.i734
  %6455 = sub i64 %6454, 16
  %6456 = load i64, i64* %PC.i733
  %6457 = add i64 %6456, 4
  store i64 %6457, i64* %PC.i733
  %6458 = inttoptr i64 %6455 to i32*
  %6459 = load i32, i32* %6458
  %6460 = sext i32 %6459 to i64
  store i64 %6460, i64* %R8.i735, align 8
  store %struct.Memory* %loadMem_40f986, %struct.Memory** %MEMORY
  %loadMem_40f98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6462 = getelementptr inbounds %struct.GPR, %struct.GPR* %6461, i32 0, i32 33
  %6463 = getelementptr inbounds %struct.Reg, %struct.Reg* %6462, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %6463 to i64*
  %6464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6465 = getelementptr inbounds %struct.GPR, %struct.GPR* %6464, i32 0, i32 1
  %6466 = getelementptr inbounds %struct.Reg, %struct.Reg* %6465, i32 0, i32 0
  %EAX.i731 = bitcast %union.anon* %6466 to i32*
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6468 = getelementptr inbounds %struct.GPR, %struct.GPR* %6467, i32 0, i32 7
  %6469 = getelementptr inbounds %struct.Reg, %struct.Reg* %6468, i32 0, i32 0
  %RDX.i732 = bitcast %union.anon* %6469 to i64*
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6471 = getelementptr inbounds %struct.GPR, %struct.GPR* %6470, i32 0, i32 17
  %6472 = getelementptr inbounds %struct.Reg, %struct.Reg* %6471, i32 0, i32 0
  %R8.i = bitcast %union.anon* %6472 to i64*
  %6473 = load i64, i64* %RDX.i732
  %6474 = load i64, i64* %R8.i
  %6475 = mul i64 %6474, 4
  %6476 = add i64 %6475, %6473
  %6477 = load i32, i32* %EAX.i731
  %6478 = zext i32 %6477 to i64
  %6479 = load i64, i64* %PC.i730
  %6480 = add i64 %6479, 4
  store i64 %6480, i64* %PC.i730
  %6481 = inttoptr i64 %6476 to i32*
  store i32 %6477, i32* %6481
  store %struct.Memory* %loadMem_40f98a, %struct.Memory** %MEMORY
  %loadMem_40f98e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6483 = getelementptr inbounds %struct.GPR, %struct.GPR* %6482, i32 0, i32 33
  %6484 = getelementptr inbounds %struct.Reg, %struct.Reg* %6483, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %6484 to i64*
  %6485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6486 = getelementptr inbounds %struct.GPR, %struct.GPR* %6485, i32 0, i32 1
  %6487 = getelementptr inbounds %struct.Reg, %struct.Reg* %6486, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %6487 to i64*
  %6488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6489 = getelementptr inbounds %struct.GPR, %struct.GPR* %6488, i32 0, i32 15
  %6490 = getelementptr inbounds %struct.Reg, %struct.Reg* %6489, i32 0, i32 0
  %RBP.i729 = bitcast %union.anon* %6490 to i64*
  %6491 = load i64, i64* %RBP.i729
  %6492 = sub i64 %6491, 12
  %6493 = load i64, i64* %PC.i727
  %6494 = add i64 %6493, 3
  store i64 %6494, i64* %PC.i727
  %6495 = inttoptr i64 %6492 to i32*
  %6496 = load i32, i32* %6495
  %6497 = zext i32 %6496 to i64
  store i64 %6497, i64* %RAX.i728, align 8
  store %struct.Memory* %loadMem_40f98e, %struct.Memory** %MEMORY
  %loadMem_40f991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6499 = getelementptr inbounds %struct.GPR, %struct.GPR* %6498, i32 0, i32 33
  %6500 = getelementptr inbounds %struct.Reg, %struct.Reg* %6499, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %6500 to i64*
  %6501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6502 = getelementptr inbounds %struct.GPR, %struct.GPR* %6501, i32 0, i32 1
  %6503 = getelementptr inbounds %struct.Reg, %struct.Reg* %6502, i32 0, i32 0
  %RAX.i726 = bitcast %union.anon* %6503 to i64*
  %6504 = load i64, i64* %RAX.i726
  %6505 = load i64, i64* %PC.i725
  %6506 = add i64 %6505, 3
  store i64 %6506, i64* %PC.i725
  %6507 = trunc i64 %6504 to i32
  %6508 = add i32 1, %6507
  %6509 = zext i32 %6508 to i64
  store i64 %6509, i64* %RAX.i726, align 8
  %6510 = icmp ult i32 %6508, %6507
  %6511 = icmp ult i32 %6508, 1
  %6512 = or i1 %6510, %6511
  %6513 = zext i1 %6512 to i8
  %6514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6513, i8* %6514, align 1
  %6515 = and i32 %6508, 255
  %6516 = call i32 @llvm.ctpop.i32(i32 %6515)
  %6517 = trunc i32 %6516 to i8
  %6518 = and i8 %6517, 1
  %6519 = xor i8 %6518, 1
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6519, i8* %6520, align 1
  %6521 = xor i64 1, %6504
  %6522 = trunc i64 %6521 to i32
  %6523 = xor i32 %6522, %6508
  %6524 = lshr i32 %6523, 4
  %6525 = trunc i32 %6524 to i8
  %6526 = and i8 %6525, 1
  %6527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6526, i8* %6527, align 1
  %6528 = icmp eq i32 %6508, 0
  %6529 = zext i1 %6528 to i8
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6529, i8* %6530, align 1
  %6531 = lshr i32 %6508, 31
  %6532 = trunc i32 %6531 to i8
  %6533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6532, i8* %6533, align 1
  %6534 = lshr i32 %6507, 31
  %6535 = xor i32 %6531, %6534
  %6536 = add i32 %6535, %6531
  %6537 = icmp eq i32 %6536, 2
  %6538 = zext i1 %6537 to i8
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6538, i8* %6539, align 1
  store %struct.Memory* %loadMem_40f991, %struct.Memory** %MEMORY
  %loadMem_40f994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6541 = getelementptr inbounds %struct.GPR, %struct.GPR* %6540, i32 0, i32 33
  %6542 = getelementptr inbounds %struct.Reg, %struct.Reg* %6541, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %6542 to i64*
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6544 = getelementptr inbounds %struct.GPR, %struct.GPR* %6543, i32 0, i32 1
  %6545 = getelementptr inbounds %struct.Reg, %struct.Reg* %6544, i32 0, i32 0
  %EAX.i723 = bitcast %union.anon* %6545 to i32*
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6547 = getelementptr inbounds %struct.GPR, %struct.GPR* %6546, i32 0, i32 15
  %6548 = getelementptr inbounds %struct.Reg, %struct.Reg* %6547, i32 0, i32 0
  %RBP.i724 = bitcast %union.anon* %6548 to i64*
  %6549 = load i64, i64* %RBP.i724
  %6550 = sub i64 %6549, 12
  %6551 = load i32, i32* %EAX.i723
  %6552 = zext i32 %6551 to i64
  %6553 = load i64, i64* %PC.i722
  %6554 = add i64 %6553, 3
  store i64 %6554, i64* %PC.i722
  %6555 = inttoptr i64 %6550 to i32*
  store i32 %6551, i32* %6555
  store %struct.Memory* %loadMem_40f994, %struct.Memory** %MEMORY
  %loadMem_40f997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6557 = getelementptr inbounds %struct.GPR, %struct.GPR* %6556, i32 0, i32 33
  %6558 = getelementptr inbounds %struct.Reg, %struct.Reg* %6557, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %6558 to i64*
  %6559 = load i64, i64* %PC.i721
  %6560 = add i64 %6559, -240
  %6561 = load i64, i64* %PC.i721
  %6562 = add i64 %6561, 5
  store i64 %6562, i64* %PC.i721
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6560, i64* %6563, align 8
  store %struct.Memory* %loadMem_40f997, %struct.Memory** %MEMORY
  br label %block_.L_40f8a7

block_.L_40f99c:                                  ; preds = %block_.L_40f8a7
  %loadMem_40f99c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6565 = getelementptr inbounds %struct.GPR, %struct.GPR* %6564, i32 0, i32 33
  %6566 = getelementptr inbounds %struct.Reg, %struct.Reg* %6565, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %6566 to i64*
  %6567 = load i64, i64* %PC.i720
  %6568 = add i64 %6567, 5
  %6569 = load i64, i64* %PC.i720
  %6570 = add i64 %6569, 5
  store i64 %6570, i64* %PC.i720
  %6571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6568, i64* %6571, align 8
  store %struct.Memory* %loadMem_40f99c, %struct.Memory** %MEMORY
  br label %block_.L_40f9a1

block_.L_40f9a1:                                  ; preds = %block_.L_40f99c
  %loadMem_40f9a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6573 = getelementptr inbounds %struct.GPR, %struct.GPR* %6572, i32 0, i32 33
  %6574 = getelementptr inbounds %struct.Reg, %struct.Reg* %6573, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %6574 to i64*
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6576 = getelementptr inbounds %struct.GPR, %struct.GPR* %6575, i32 0, i32 1
  %6577 = getelementptr inbounds %struct.Reg, %struct.Reg* %6576, i32 0, i32 0
  %RAX.i718 = bitcast %union.anon* %6577 to i64*
  %6578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6579 = getelementptr inbounds %struct.GPR, %struct.GPR* %6578, i32 0, i32 15
  %6580 = getelementptr inbounds %struct.Reg, %struct.Reg* %6579, i32 0, i32 0
  %RBP.i719 = bitcast %union.anon* %6580 to i64*
  %6581 = load i64, i64* %RBP.i719
  %6582 = sub i64 %6581, 16
  %6583 = load i64, i64* %PC.i717
  %6584 = add i64 %6583, 3
  store i64 %6584, i64* %PC.i717
  %6585 = inttoptr i64 %6582 to i32*
  %6586 = load i32, i32* %6585
  %6587 = zext i32 %6586 to i64
  store i64 %6587, i64* %RAX.i718, align 8
  store %struct.Memory* %loadMem_40f9a1, %struct.Memory** %MEMORY
  %loadMem_40f9a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6589 = getelementptr inbounds %struct.GPR, %struct.GPR* %6588, i32 0, i32 33
  %6590 = getelementptr inbounds %struct.Reg, %struct.Reg* %6589, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %6590 to i64*
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6592 = getelementptr inbounds %struct.GPR, %struct.GPR* %6591, i32 0, i32 1
  %6593 = getelementptr inbounds %struct.Reg, %struct.Reg* %6592, i32 0, i32 0
  %RAX.i716 = bitcast %union.anon* %6593 to i64*
  %6594 = load i64, i64* %RAX.i716
  %6595 = load i64, i64* %PC.i715
  %6596 = add i64 %6595, 3
  store i64 %6596, i64* %PC.i715
  %6597 = trunc i64 %6594 to i32
  %6598 = add i32 1, %6597
  %6599 = zext i32 %6598 to i64
  store i64 %6599, i64* %RAX.i716, align 8
  %6600 = icmp ult i32 %6598, %6597
  %6601 = icmp ult i32 %6598, 1
  %6602 = or i1 %6600, %6601
  %6603 = zext i1 %6602 to i8
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6603, i8* %6604, align 1
  %6605 = and i32 %6598, 255
  %6606 = call i32 @llvm.ctpop.i32(i32 %6605)
  %6607 = trunc i32 %6606 to i8
  %6608 = and i8 %6607, 1
  %6609 = xor i8 %6608, 1
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6609, i8* %6610, align 1
  %6611 = xor i64 1, %6594
  %6612 = trunc i64 %6611 to i32
  %6613 = xor i32 %6612, %6598
  %6614 = lshr i32 %6613, 4
  %6615 = trunc i32 %6614 to i8
  %6616 = and i8 %6615, 1
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6616, i8* %6617, align 1
  %6618 = icmp eq i32 %6598, 0
  %6619 = zext i1 %6618 to i8
  %6620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6619, i8* %6620, align 1
  %6621 = lshr i32 %6598, 31
  %6622 = trunc i32 %6621 to i8
  %6623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6622, i8* %6623, align 1
  %6624 = lshr i32 %6597, 31
  %6625 = xor i32 %6621, %6624
  %6626 = add i32 %6625, %6621
  %6627 = icmp eq i32 %6626, 2
  %6628 = zext i1 %6627 to i8
  %6629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6628, i8* %6629, align 1
  store %struct.Memory* %loadMem_40f9a4, %struct.Memory** %MEMORY
  %loadMem_40f9a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6631 = getelementptr inbounds %struct.GPR, %struct.GPR* %6630, i32 0, i32 33
  %6632 = getelementptr inbounds %struct.Reg, %struct.Reg* %6631, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %6632 to i64*
  %6633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6634 = getelementptr inbounds %struct.GPR, %struct.GPR* %6633, i32 0, i32 1
  %6635 = getelementptr inbounds %struct.Reg, %struct.Reg* %6634, i32 0, i32 0
  %EAX.i713 = bitcast %union.anon* %6635 to i32*
  %6636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6637 = getelementptr inbounds %struct.GPR, %struct.GPR* %6636, i32 0, i32 15
  %6638 = getelementptr inbounds %struct.Reg, %struct.Reg* %6637, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %6638 to i64*
  %6639 = load i64, i64* %RBP.i714
  %6640 = sub i64 %6639, 16
  %6641 = load i32, i32* %EAX.i713
  %6642 = zext i32 %6641 to i64
  %6643 = load i64, i64* %PC.i712
  %6644 = add i64 %6643, 3
  store i64 %6644, i64* %PC.i712
  %6645 = inttoptr i64 %6640 to i32*
  store i32 %6641, i32* %6645
  store %struct.Memory* %loadMem_40f9a7, %struct.Memory** %MEMORY
  %loadMem_40f9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6647 = getelementptr inbounds %struct.GPR, %struct.GPR* %6646, i32 0, i32 33
  %6648 = getelementptr inbounds %struct.Reg, %struct.Reg* %6647, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %6648 to i64*
  %6649 = load i64, i64* %PC.i711
  %6650 = add i64 %6649, -276
  %6651 = load i64, i64* %PC.i711
  %6652 = add i64 %6651, 5
  store i64 %6652, i64* %PC.i711
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6650, i64* %6653, align 8
  store %struct.Memory* %loadMem_40f9aa, %struct.Memory** %MEMORY
  br label %block_.L_40f896

block_.L_40f9af:                                  ; preds = %block_.L_40f896
  %loadMem_40f9af = load %struct.Memory*, %struct.Memory** %MEMORY
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6655 = getelementptr inbounds %struct.GPR, %struct.GPR* %6654, i32 0, i32 33
  %6656 = getelementptr inbounds %struct.Reg, %struct.Reg* %6655, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %6656 to i64*
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6658 = getelementptr inbounds %struct.GPR, %struct.GPR* %6657, i32 0, i32 15
  %6659 = getelementptr inbounds %struct.Reg, %struct.Reg* %6658, i32 0, i32 0
  %RBP.i710 = bitcast %union.anon* %6659 to i64*
  %6660 = load i64, i64* %RBP.i710
  %6661 = sub i64 %6660, 16
  %6662 = load i64, i64* %PC.i709
  %6663 = add i64 %6662, 7
  store i64 %6663, i64* %PC.i709
  %6664 = inttoptr i64 %6661 to i32*
  store i32 0, i32* %6664
  store %struct.Memory* %loadMem_40f9af, %struct.Memory** %MEMORY
  br label %block_.L_40f9b6

block_.L_40f9b6:                                  ; preds = %block_.L_40fac4, %block_.L_40f9af
  %loadMem_40f9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6666 = getelementptr inbounds %struct.GPR, %struct.GPR* %6665, i32 0, i32 33
  %6667 = getelementptr inbounds %struct.Reg, %struct.Reg* %6666, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %6667 to i64*
  %6668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6669 = getelementptr inbounds %struct.GPR, %struct.GPR* %6668, i32 0, i32 15
  %6670 = getelementptr inbounds %struct.Reg, %struct.Reg* %6669, i32 0, i32 0
  %RBP.i708 = bitcast %union.anon* %6670 to i64*
  %6671 = load i64, i64* %RBP.i708
  %6672 = sub i64 %6671, 16
  %6673 = load i64, i64* %PC.i707
  %6674 = add i64 %6673, 4
  store i64 %6674, i64* %PC.i707
  %6675 = inttoptr i64 %6672 to i32*
  %6676 = load i32, i32* %6675
  %6677 = sub i32 %6676, 4
  %6678 = icmp ult i32 %6676, 4
  %6679 = zext i1 %6678 to i8
  %6680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6679, i8* %6680, align 1
  %6681 = and i32 %6677, 255
  %6682 = call i32 @llvm.ctpop.i32(i32 %6681)
  %6683 = trunc i32 %6682 to i8
  %6684 = and i8 %6683, 1
  %6685 = xor i8 %6684, 1
  %6686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6685, i8* %6686, align 1
  %6687 = xor i32 %6676, 4
  %6688 = xor i32 %6687, %6677
  %6689 = lshr i32 %6688, 4
  %6690 = trunc i32 %6689 to i8
  %6691 = and i8 %6690, 1
  %6692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6691, i8* %6692, align 1
  %6693 = icmp eq i32 %6677, 0
  %6694 = zext i1 %6693 to i8
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6694, i8* %6695, align 1
  %6696 = lshr i32 %6677, 31
  %6697 = trunc i32 %6696 to i8
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6697, i8* %6698, align 1
  %6699 = lshr i32 %6676, 31
  %6700 = xor i32 %6696, %6699
  %6701 = add i32 %6700, %6699
  %6702 = icmp eq i32 %6701, 2
  %6703 = zext i1 %6702 to i8
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6703, i8* %6704, align 1
  store %struct.Memory* %loadMem_40f9b6, %struct.Memory** %MEMORY
  %loadMem_40f9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6706 = getelementptr inbounds %struct.GPR, %struct.GPR* %6705, i32 0, i32 33
  %6707 = getelementptr inbounds %struct.Reg, %struct.Reg* %6706, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %6707 to i64*
  %6708 = load i64, i64* %PC.i706
  %6709 = add i64 %6708, 280
  %6710 = load i64, i64* %PC.i706
  %6711 = add i64 %6710, 6
  %6712 = load i64, i64* %PC.i706
  %6713 = add i64 %6712, 6
  store i64 %6713, i64* %PC.i706
  %6714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6715 = load i8, i8* %6714, align 1
  %6716 = icmp ne i8 %6715, 0
  %6717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6718 = load i8, i8* %6717, align 1
  %6719 = icmp ne i8 %6718, 0
  %6720 = xor i1 %6716, %6719
  %6721 = xor i1 %6720, true
  %6722 = zext i1 %6721 to i8
  store i8 %6722, i8* %BRANCH_TAKEN, align 1
  %6723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6724 = select i1 %6720, i64 %6711, i64 %6709
  store i64 %6724, i64* %6723, align 8
  store %struct.Memory* %loadMem_40f9ba, %struct.Memory** %MEMORY
  %loadBr_40f9ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f9ba = icmp eq i8 %loadBr_40f9ba, 1
  br i1 %cmpBr_40f9ba, label %block_.L_40fad2, label %block_40f9c0

block_40f9c0:                                     ; preds = %block_.L_40f9b6
  %loadMem_40f9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6726 = getelementptr inbounds %struct.GPR, %struct.GPR* %6725, i32 0, i32 33
  %6727 = getelementptr inbounds %struct.Reg, %struct.Reg* %6726, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %6727 to i64*
  %6728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6729 = getelementptr inbounds %struct.GPR, %struct.GPR* %6728, i32 0, i32 15
  %6730 = getelementptr inbounds %struct.Reg, %struct.Reg* %6729, i32 0, i32 0
  %RBP.i705 = bitcast %union.anon* %6730 to i64*
  %6731 = load i64, i64* %RBP.i705
  %6732 = sub i64 %6731, 12
  %6733 = load i64, i64* %PC.i704
  %6734 = add i64 %6733, 7
  store i64 %6734, i64* %PC.i704
  %6735 = inttoptr i64 %6732 to i32*
  store i32 0, i32* %6735
  store %struct.Memory* %loadMem_40f9c0, %struct.Memory** %MEMORY
  br label %block_.L_40f9c7

block_.L_40f9c7:                                  ; preds = %block_40f9d1, %block_40f9c0
  %loadMem_40f9c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6737 = getelementptr inbounds %struct.GPR, %struct.GPR* %6736, i32 0, i32 33
  %6738 = getelementptr inbounds %struct.Reg, %struct.Reg* %6737, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %6738 to i64*
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6740 = getelementptr inbounds %struct.GPR, %struct.GPR* %6739, i32 0, i32 15
  %6741 = getelementptr inbounds %struct.Reg, %struct.Reg* %6740, i32 0, i32 0
  %RBP.i703 = bitcast %union.anon* %6741 to i64*
  %6742 = load i64, i64* %RBP.i703
  %6743 = sub i64 %6742, 12
  %6744 = load i64, i64* %PC.i702
  %6745 = add i64 %6744, 4
  store i64 %6745, i64* %PC.i702
  %6746 = inttoptr i64 %6743 to i32*
  %6747 = load i32, i32* %6746
  %6748 = sub i32 %6747, 4
  %6749 = icmp ult i32 %6747, 4
  %6750 = zext i1 %6749 to i8
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6750, i8* %6751, align 1
  %6752 = and i32 %6748, 255
  %6753 = call i32 @llvm.ctpop.i32(i32 %6752)
  %6754 = trunc i32 %6753 to i8
  %6755 = and i8 %6754, 1
  %6756 = xor i8 %6755, 1
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6756, i8* %6757, align 1
  %6758 = xor i32 %6747, 4
  %6759 = xor i32 %6758, %6748
  %6760 = lshr i32 %6759, 4
  %6761 = trunc i32 %6760 to i8
  %6762 = and i8 %6761, 1
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6762, i8* %6763, align 1
  %6764 = icmp eq i32 %6748, 0
  %6765 = zext i1 %6764 to i8
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6765, i8* %6766, align 1
  %6767 = lshr i32 %6748, 31
  %6768 = trunc i32 %6767 to i8
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6768, i8* %6769, align 1
  %6770 = lshr i32 %6747, 31
  %6771 = xor i32 %6767, %6770
  %6772 = add i32 %6771, %6770
  %6773 = icmp eq i32 %6772, 2
  %6774 = zext i1 %6773 to i8
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6774, i8* %6775, align 1
  store %struct.Memory* %loadMem_40f9c7, %struct.Memory** %MEMORY
  %loadMem_40f9cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 33
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %6778 to i64*
  %6779 = load i64, i64* %PC.i701
  %6780 = add i64 %6779, 60
  %6781 = load i64, i64* %PC.i701
  %6782 = add i64 %6781, 6
  %6783 = load i64, i64* %PC.i701
  %6784 = add i64 %6783, 6
  store i64 %6784, i64* %PC.i701
  %6785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6786 = load i8, i8* %6785, align 1
  %6787 = icmp ne i8 %6786, 0
  %6788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6789 = load i8, i8* %6788, align 1
  %6790 = icmp ne i8 %6789, 0
  %6791 = xor i1 %6787, %6790
  %6792 = xor i1 %6791, true
  %6793 = zext i1 %6792 to i8
  store i8 %6793, i8* %BRANCH_TAKEN, align 1
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6795 = select i1 %6791, i64 %6782, i64 %6780
  store i64 %6795, i64* %6794, align 8
  store %struct.Memory* %loadMem_40f9cb, %struct.Memory** %MEMORY
  %loadBr_40f9cb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f9cb = icmp eq i8 %loadBr_40f9cb, 1
  br i1 %cmpBr_40f9cb, label %block_.L_40fa07, label %block_40f9d1

block_40f9d1:                                     ; preds = %block_.L_40f9c7
  %loadMem_40f9d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6797 = getelementptr inbounds %struct.GPR, %struct.GPR* %6796, i32 0, i32 33
  %6798 = getelementptr inbounds %struct.Reg, %struct.Reg* %6797, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %6798 to i64*
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6800 = getelementptr inbounds %struct.GPR, %struct.GPR* %6799, i32 0, i32 1
  %6801 = getelementptr inbounds %struct.Reg, %struct.Reg* %6800, i32 0, i32 0
  %RAX.i700 = bitcast %union.anon* %6801 to i64*
  %6802 = load i64, i64* %PC.i699
  %6803 = add i64 %6802, 8
  store i64 %6803, i64* %PC.i699
  %6804 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6804, i64* %RAX.i700, align 8
  store %struct.Memory* %loadMem_40f9d1, %struct.Memory** %MEMORY
  %loadMem_40f9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 33
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %6807 to i64*
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 1
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %RAX.i698 = bitcast %union.anon* %6810 to i64*
  %6811 = load i64, i64* %RAX.i698
  %6812 = load i64, i64* %PC.i697
  %6813 = add i64 %6812, 6
  store i64 %6813, i64* %PC.i697
  %6814 = add i64 13112, %6811
  store i64 %6814, i64* %RAX.i698, align 8
  %6815 = icmp ult i64 %6814, %6811
  %6816 = icmp ult i64 %6814, 13112
  %6817 = or i1 %6815, %6816
  %6818 = zext i1 %6817 to i8
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6818, i8* %6819, align 1
  %6820 = trunc i64 %6814 to i32
  %6821 = and i32 %6820, 255
  %6822 = call i32 @llvm.ctpop.i32(i32 %6821)
  %6823 = trunc i32 %6822 to i8
  %6824 = and i8 %6823, 1
  %6825 = xor i8 %6824, 1
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6825, i8* %6826, align 1
  %6827 = xor i64 13112, %6811
  %6828 = xor i64 %6827, %6814
  %6829 = lshr i64 %6828, 4
  %6830 = trunc i64 %6829 to i8
  %6831 = and i8 %6830, 1
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6831, i8* %6832, align 1
  %6833 = icmp eq i64 %6814, 0
  %6834 = zext i1 %6833 to i8
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6834, i8* %6835, align 1
  %6836 = lshr i64 %6814, 63
  %6837 = trunc i64 %6836 to i8
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6837, i8* %6838, align 1
  %6839 = lshr i64 %6811, 63
  %6840 = xor i64 %6836, %6839
  %6841 = add i64 %6840, %6836
  %6842 = icmp eq i64 %6841, 2
  %6843 = zext i1 %6842 to i8
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6843, i8* %6844, align 1
  store %struct.Memory* %loadMem_40f9d9, %struct.Memory** %MEMORY
  %loadMem_40f9df = load %struct.Memory*, %struct.Memory** %MEMORY
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 33
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %6847 to i64*
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 5
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %RCX.i695 = bitcast %union.anon* %6850 to i64*
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6852 = getelementptr inbounds %struct.GPR, %struct.GPR* %6851, i32 0, i32 15
  %6853 = getelementptr inbounds %struct.Reg, %struct.Reg* %6852, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %6853 to i64*
  %6854 = load i64, i64* %RBP.i696
  %6855 = sub i64 %6854, 12
  %6856 = load i64, i64* %PC.i694
  %6857 = add i64 %6856, 4
  store i64 %6857, i64* %PC.i694
  %6858 = inttoptr i64 %6855 to i32*
  %6859 = load i32, i32* %6858
  %6860 = sext i32 %6859 to i64
  store i64 %6860, i64* %RCX.i695, align 8
  store %struct.Memory* %loadMem_40f9df, %struct.Memory** %MEMORY
  %loadMem_40f9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6862 = getelementptr inbounds %struct.GPR, %struct.GPR* %6861, i32 0, i32 33
  %6863 = getelementptr inbounds %struct.Reg, %struct.Reg* %6862, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %6863 to i64*
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6865 = getelementptr inbounds %struct.GPR, %struct.GPR* %6864, i32 0, i32 5
  %6866 = getelementptr inbounds %struct.Reg, %struct.Reg* %6865, i32 0, i32 0
  %RCX.i693 = bitcast %union.anon* %6866 to i64*
  %6867 = load i64, i64* %RCX.i693
  %6868 = load i64, i64* %PC.i692
  %6869 = add i64 %6868, 4
  store i64 %6869, i64* %PC.i692
  %6870 = shl i64 %6867, 5
  %6871 = icmp slt i64 %6870, 0
  %6872 = shl i64 %6870, 1
  store i64 %6872, i64* %RCX.i693, align 8
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6874 = zext i1 %6871 to i8
  store i8 %6874, i8* %6873, align 1
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6876 = trunc i64 %6872 to i32
  %6877 = and i32 %6876, 254
  %6878 = call i32 @llvm.ctpop.i32(i32 %6877)
  %6879 = trunc i32 %6878 to i8
  %6880 = and i8 %6879, 1
  %6881 = xor i8 %6880, 1
  store i8 %6881, i8* %6875, align 1
  %6882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6882, align 1
  %6883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6884 = icmp eq i64 %6872, 0
  %6885 = zext i1 %6884 to i8
  store i8 %6885, i8* %6883, align 1
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6887 = lshr i64 %6872, 63
  %6888 = trunc i64 %6887 to i8
  store i8 %6888, i8* %6886, align 1
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6889, align 1
  store %struct.Memory* %loadMem_40f9e3, %struct.Memory** %MEMORY
  %loadMem_40f9e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6891 = getelementptr inbounds %struct.GPR, %struct.GPR* %6890, i32 0, i32 33
  %6892 = getelementptr inbounds %struct.Reg, %struct.Reg* %6891, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %6892 to i64*
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6894 = getelementptr inbounds %struct.GPR, %struct.GPR* %6893, i32 0, i32 1
  %6895 = getelementptr inbounds %struct.Reg, %struct.Reg* %6894, i32 0, i32 0
  %RAX.i690 = bitcast %union.anon* %6895 to i64*
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6897 = getelementptr inbounds %struct.GPR, %struct.GPR* %6896, i32 0, i32 5
  %6898 = getelementptr inbounds %struct.Reg, %struct.Reg* %6897, i32 0, i32 0
  %RCX.i691 = bitcast %union.anon* %6898 to i64*
  %6899 = load i64, i64* %RAX.i690
  %6900 = load i64, i64* %RCX.i691
  %6901 = load i64, i64* %PC.i689
  %6902 = add i64 %6901, 3
  store i64 %6902, i64* %PC.i689
  %6903 = add i64 %6900, %6899
  store i64 %6903, i64* %RAX.i690, align 8
  %6904 = icmp ult i64 %6903, %6899
  %6905 = icmp ult i64 %6903, %6900
  %6906 = or i1 %6904, %6905
  %6907 = zext i1 %6906 to i8
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6907, i8* %6908, align 1
  %6909 = trunc i64 %6903 to i32
  %6910 = and i32 %6909, 255
  %6911 = call i32 @llvm.ctpop.i32(i32 %6910)
  %6912 = trunc i32 %6911 to i8
  %6913 = and i8 %6912, 1
  %6914 = xor i8 %6913, 1
  %6915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6914, i8* %6915, align 1
  %6916 = xor i64 %6900, %6899
  %6917 = xor i64 %6916, %6903
  %6918 = lshr i64 %6917, 4
  %6919 = trunc i64 %6918 to i8
  %6920 = and i8 %6919, 1
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6920, i8* %6921, align 1
  %6922 = icmp eq i64 %6903, 0
  %6923 = zext i1 %6922 to i8
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6923, i8* %6924, align 1
  %6925 = lshr i64 %6903, 63
  %6926 = trunc i64 %6925 to i8
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6926, i8* %6927, align 1
  %6928 = lshr i64 %6899, 63
  %6929 = lshr i64 %6900, 63
  %6930 = xor i64 %6925, %6928
  %6931 = xor i64 %6925, %6929
  %6932 = add i64 %6930, %6931
  %6933 = icmp eq i64 %6932, 2
  %6934 = zext i1 %6933 to i8
  %6935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6934, i8* %6935, align 1
  store %struct.Memory* %loadMem_40f9e7, %struct.Memory** %MEMORY
  %loadMem_40f9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6937 = getelementptr inbounds %struct.GPR, %struct.GPR* %6936, i32 0, i32 33
  %6938 = getelementptr inbounds %struct.Reg, %struct.Reg* %6937, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %6938 to i64*
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6940 = getelementptr inbounds %struct.GPR, %struct.GPR* %6939, i32 0, i32 5
  %6941 = getelementptr inbounds %struct.Reg, %struct.Reg* %6940, i32 0, i32 0
  %RCX.i687 = bitcast %union.anon* %6941 to i64*
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6943 = getelementptr inbounds %struct.GPR, %struct.GPR* %6942, i32 0, i32 15
  %6944 = getelementptr inbounds %struct.Reg, %struct.Reg* %6943, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %6944 to i64*
  %6945 = load i64, i64* %RBP.i688
  %6946 = sub i64 %6945, 16
  %6947 = load i64, i64* %PC.i686
  %6948 = add i64 %6947, 4
  store i64 %6948, i64* %PC.i686
  %6949 = inttoptr i64 %6946 to i32*
  %6950 = load i32, i32* %6949
  %6951 = sext i32 %6950 to i64
  store i64 %6951, i64* %RCX.i687, align 8
  store %struct.Memory* %loadMem_40f9ea, %struct.Memory** %MEMORY
  %loadMem_40f9ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6953 = getelementptr inbounds %struct.GPR, %struct.GPR* %6952, i32 0, i32 33
  %6954 = getelementptr inbounds %struct.Reg, %struct.Reg* %6953, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %6954 to i64*
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6956 = getelementptr inbounds %struct.GPR, %struct.GPR* %6955, i32 0, i32 1
  %6957 = getelementptr inbounds %struct.Reg, %struct.Reg* %6956, i32 0, i32 0
  %RAX.i683 = bitcast %union.anon* %6957 to i64*
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6959 = getelementptr inbounds %struct.GPR, %struct.GPR* %6958, i32 0, i32 5
  %6960 = getelementptr inbounds %struct.Reg, %struct.Reg* %6959, i32 0, i32 0
  %RCX.i684 = bitcast %union.anon* %6960 to i64*
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6962 = getelementptr inbounds %struct.GPR, %struct.GPR* %6961, i32 0, i32 7
  %6963 = getelementptr inbounds %struct.Reg, %struct.Reg* %6962, i32 0, i32 0
  %RDX.i685 = bitcast %union.anon* %6963 to i64*
  %6964 = load i64, i64* %RAX.i683
  %6965 = load i64, i64* %RCX.i684
  %6966 = mul i64 %6965, 4
  %6967 = add i64 %6966, %6964
  %6968 = load i64, i64* %PC.i682
  %6969 = add i64 %6968, 3
  store i64 %6969, i64* %PC.i682
  %6970 = inttoptr i64 %6967 to i32*
  %6971 = load i32, i32* %6970
  %6972 = zext i32 %6971 to i64
  store i64 %6972, i64* %RDX.i685, align 8
  store %struct.Memory* %loadMem_40f9ee, %struct.Memory** %MEMORY
  %loadMem_40f9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6974 = getelementptr inbounds %struct.GPR, %struct.GPR* %6973, i32 0, i32 33
  %6975 = getelementptr inbounds %struct.Reg, %struct.Reg* %6974, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %6975 to i64*
  %6976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6977 = getelementptr inbounds %struct.GPR, %struct.GPR* %6976, i32 0, i32 1
  %6978 = getelementptr inbounds %struct.Reg, %struct.Reg* %6977, i32 0, i32 0
  %RAX.i680 = bitcast %union.anon* %6978 to i64*
  %6979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6980 = getelementptr inbounds %struct.GPR, %struct.GPR* %6979, i32 0, i32 15
  %6981 = getelementptr inbounds %struct.Reg, %struct.Reg* %6980, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %6981 to i64*
  %6982 = load i64, i64* %RBP.i681
  %6983 = sub i64 %6982, 12
  %6984 = load i64, i64* %PC.i679
  %6985 = add i64 %6984, 4
  store i64 %6985, i64* %PC.i679
  %6986 = inttoptr i64 %6983 to i32*
  %6987 = load i32, i32* %6986
  %6988 = sext i32 %6987 to i64
  store i64 %6988, i64* %RAX.i680, align 8
  store %struct.Memory* %loadMem_40f9f1, %struct.Memory** %MEMORY
  %loadMem_40f9f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6990 = getelementptr inbounds %struct.GPR, %struct.GPR* %6989, i32 0, i32 33
  %6991 = getelementptr inbounds %struct.Reg, %struct.Reg* %6990, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %6991 to i64*
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6993 = getelementptr inbounds %struct.GPR, %struct.GPR* %6992, i32 0, i32 7
  %6994 = getelementptr inbounds %struct.Reg, %struct.Reg* %6993, i32 0, i32 0
  %EDX.i676 = bitcast %union.anon* %6994 to i32*
  %6995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6996 = getelementptr inbounds %struct.GPR, %struct.GPR* %6995, i32 0, i32 1
  %6997 = getelementptr inbounds %struct.Reg, %struct.Reg* %6996, i32 0, i32 0
  %RAX.i677 = bitcast %union.anon* %6997 to i64*
  %6998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6999 = getelementptr inbounds %struct.GPR, %struct.GPR* %6998, i32 0, i32 15
  %7000 = getelementptr inbounds %struct.Reg, %struct.Reg* %6999, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %7000 to i64*
  %7001 = load i64, i64* %RBP.i678
  %7002 = load i64, i64* %RAX.i677
  %7003 = mul i64 %7002, 4
  %7004 = add i64 %7001, -48
  %7005 = add i64 %7004, %7003
  %7006 = load i32, i32* %EDX.i676
  %7007 = zext i32 %7006 to i64
  %7008 = load i64, i64* %PC.i675
  %7009 = add i64 %7008, 4
  store i64 %7009, i64* %PC.i675
  %7010 = inttoptr i64 %7005 to i32*
  store i32 %7006, i32* %7010
  store %struct.Memory* %loadMem_40f9f5, %struct.Memory** %MEMORY
  %loadMem_40f9f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7012 = getelementptr inbounds %struct.GPR, %struct.GPR* %7011, i32 0, i32 33
  %7013 = getelementptr inbounds %struct.Reg, %struct.Reg* %7012, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %7013 to i64*
  %7014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7015 = getelementptr inbounds %struct.GPR, %struct.GPR* %7014, i32 0, i32 1
  %7016 = getelementptr inbounds %struct.Reg, %struct.Reg* %7015, i32 0, i32 0
  %RAX.i673 = bitcast %union.anon* %7016 to i64*
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7018 = getelementptr inbounds %struct.GPR, %struct.GPR* %7017, i32 0, i32 15
  %7019 = getelementptr inbounds %struct.Reg, %struct.Reg* %7018, i32 0, i32 0
  %RBP.i674 = bitcast %union.anon* %7019 to i64*
  %7020 = load i64, i64* %RBP.i674
  %7021 = sub i64 %7020, 12
  %7022 = load i64, i64* %PC.i672
  %7023 = add i64 %7022, 3
  store i64 %7023, i64* %PC.i672
  %7024 = inttoptr i64 %7021 to i32*
  %7025 = load i32, i32* %7024
  %7026 = zext i32 %7025 to i64
  store i64 %7026, i64* %RAX.i673, align 8
  store %struct.Memory* %loadMem_40f9f9, %struct.Memory** %MEMORY
  %loadMem_40f9fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7028 = getelementptr inbounds %struct.GPR, %struct.GPR* %7027, i32 0, i32 33
  %7029 = getelementptr inbounds %struct.Reg, %struct.Reg* %7028, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %7029 to i64*
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7031 = getelementptr inbounds %struct.GPR, %struct.GPR* %7030, i32 0, i32 1
  %7032 = getelementptr inbounds %struct.Reg, %struct.Reg* %7031, i32 0, i32 0
  %RAX.i671 = bitcast %union.anon* %7032 to i64*
  %7033 = load i64, i64* %RAX.i671
  %7034 = load i64, i64* %PC.i670
  %7035 = add i64 %7034, 3
  store i64 %7035, i64* %PC.i670
  %7036 = trunc i64 %7033 to i32
  %7037 = add i32 1, %7036
  %7038 = zext i32 %7037 to i64
  store i64 %7038, i64* %RAX.i671, align 8
  %7039 = icmp ult i32 %7037, %7036
  %7040 = icmp ult i32 %7037, 1
  %7041 = or i1 %7039, %7040
  %7042 = zext i1 %7041 to i8
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7042, i8* %7043, align 1
  %7044 = and i32 %7037, 255
  %7045 = call i32 @llvm.ctpop.i32(i32 %7044)
  %7046 = trunc i32 %7045 to i8
  %7047 = and i8 %7046, 1
  %7048 = xor i8 %7047, 1
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7048, i8* %7049, align 1
  %7050 = xor i64 1, %7033
  %7051 = trunc i64 %7050 to i32
  %7052 = xor i32 %7051, %7037
  %7053 = lshr i32 %7052, 4
  %7054 = trunc i32 %7053 to i8
  %7055 = and i8 %7054, 1
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7055, i8* %7056, align 1
  %7057 = icmp eq i32 %7037, 0
  %7058 = zext i1 %7057 to i8
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7058, i8* %7059, align 1
  %7060 = lshr i32 %7037, 31
  %7061 = trunc i32 %7060 to i8
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7061, i8* %7062, align 1
  %7063 = lshr i32 %7036, 31
  %7064 = xor i32 %7060, %7063
  %7065 = add i32 %7064, %7060
  %7066 = icmp eq i32 %7065, 2
  %7067 = zext i1 %7066 to i8
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7067, i8* %7068, align 1
  store %struct.Memory* %loadMem_40f9fc, %struct.Memory** %MEMORY
  %loadMem_40f9ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7070 = getelementptr inbounds %struct.GPR, %struct.GPR* %7069, i32 0, i32 33
  %7071 = getelementptr inbounds %struct.Reg, %struct.Reg* %7070, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %7071 to i64*
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7073 = getelementptr inbounds %struct.GPR, %struct.GPR* %7072, i32 0, i32 1
  %7074 = getelementptr inbounds %struct.Reg, %struct.Reg* %7073, i32 0, i32 0
  %EAX.i668 = bitcast %union.anon* %7074 to i32*
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7076 = getelementptr inbounds %struct.GPR, %struct.GPR* %7075, i32 0, i32 15
  %7077 = getelementptr inbounds %struct.Reg, %struct.Reg* %7076, i32 0, i32 0
  %RBP.i669 = bitcast %union.anon* %7077 to i64*
  %7078 = load i64, i64* %RBP.i669
  %7079 = sub i64 %7078, 12
  %7080 = load i32, i32* %EAX.i668
  %7081 = zext i32 %7080 to i64
  %7082 = load i64, i64* %PC.i667
  %7083 = add i64 %7082, 3
  store i64 %7083, i64* %PC.i667
  %7084 = inttoptr i64 %7079 to i32*
  store i32 %7080, i32* %7084
  store %struct.Memory* %loadMem_40f9ff, %struct.Memory** %MEMORY
  %loadMem_40fa02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7086 = getelementptr inbounds %struct.GPR, %struct.GPR* %7085, i32 0, i32 33
  %7087 = getelementptr inbounds %struct.Reg, %struct.Reg* %7086, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %7087 to i64*
  %7088 = load i64, i64* %PC.i666
  %7089 = add i64 %7088, -59
  %7090 = load i64, i64* %PC.i666
  %7091 = add i64 %7090, 5
  store i64 %7091, i64* %PC.i666
  %7092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7089, i64* %7092, align 8
  store %struct.Memory* %loadMem_40fa02, %struct.Memory** %MEMORY
  br label %block_.L_40f9c7

block_.L_40fa07:                                  ; preds = %block_.L_40f9c7
  %loadMem_40fa07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7094 = getelementptr inbounds %struct.GPR, %struct.GPR* %7093, i32 0, i32 33
  %7095 = getelementptr inbounds %struct.Reg, %struct.Reg* %7094, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %7095 to i64*
  %7096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7097 = getelementptr inbounds %struct.GPR, %struct.GPR* %7096, i32 0, i32 1
  %7098 = getelementptr inbounds %struct.Reg, %struct.Reg* %7097, i32 0, i32 0
  %RAX.i664 = bitcast %union.anon* %7098 to i64*
  %7099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7100 = getelementptr inbounds %struct.GPR, %struct.GPR* %7099, i32 0, i32 15
  %7101 = getelementptr inbounds %struct.Reg, %struct.Reg* %7100, i32 0, i32 0
  %RBP.i665 = bitcast %union.anon* %7101 to i64*
  %7102 = load i64, i64* %RBP.i665
  %7103 = sub i64 %7102, 48
  %7104 = load i64, i64* %PC.i663
  %7105 = add i64 %7104, 3
  store i64 %7105, i64* %PC.i663
  %7106 = inttoptr i64 %7103 to i32*
  %7107 = load i32, i32* %7106
  %7108 = zext i32 %7107 to i64
  store i64 %7108, i64* %RAX.i664, align 8
  store %struct.Memory* %loadMem_40fa07, %struct.Memory** %MEMORY
  %loadMem_40fa0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7110 = getelementptr inbounds %struct.GPR, %struct.GPR* %7109, i32 0, i32 33
  %7111 = getelementptr inbounds %struct.Reg, %struct.Reg* %7110, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %7111 to i64*
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7113 = getelementptr inbounds %struct.GPR, %struct.GPR* %7112, i32 0, i32 1
  %7114 = getelementptr inbounds %struct.Reg, %struct.Reg* %7113, i32 0, i32 0
  %RAX.i661 = bitcast %union.anon* %7114 to i64*
  %7115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7116 = getelementptr inbounds %struct.GPR, %struct.GPR* %7115, i32 0, i32 15
  %7117 = getelementptr inbounds %struct.Reg, %struct.Reg* %7116, i32 0, i32 0
  %RBP.i662 = bitcast %union.anon* %7117 to i64*
  %7118 = load i64, i64* %RAX.i661
  %7119 = load i64, i64* %RBP.i662
  %7120 = sub i64 %7119, 40
  %7121 = load i64, i64* %PC.i660
  %7122 = add i64 %7121, 3
  store i64 %7122, i64* %PC.i660
  %7123 = trunc i64 %7118 to i32
  %7124 = inttoptr i64 %7120 to i32*
  %7125 = load i32, i32* %7124
  %7126 = add i32 %7125, %7123
  %7127 = zext i32 %7126 to i64
  store i64 %7127, i64* %RAX.i661, align 8
  %7128 = icmp ult i32 %7126, %7123
  %7129 = icmp ult i32 %7126, %7125
  %7130 = or i1 %7128, %7129
  %7131 = zext i1 %7130 to i8
  %7132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7131, i8* %7132, align 1
  %7133 = and i32 %7126, 255
  %7134 = call i32 @llvm.ctpop.i32(i32 %7133)
  %7135 = trunc i32 %7134 to i8
  %7136 = and i8 %7135, 1
  %7137 = xor i8 %7136, 1
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7137, i8* %7138, align 1
  %7139 = xor i32 %7125, %7123
  %7140 = xor i32 %7139, %7126
  %7141 = lshr i32 %7140, 4
  %7142 = trunc i32 %7141 to i8
  %7143 = and i8 %7142, 1
  %7144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7143, i8* %7144, align 1
  %7145 = icmp eq i32 %7126, 0
  %7146 = zext i1 %7145 to i8
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7146, i8* %7147, align 1
  %7148 = lshr i32 %7126, 31
  %7149 = trunc i32 %7148 to i8
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7149, i8* %7150, align 1
  %7151 = lshr i32 %7123, 31
  %7152 = lshr i32 %7125, 31
  %7153 = xor i32 %7148, %7151
  %7154 = xor i32 %7148, %7152
  %7155 = add i32 %7153, %7154
  %7156 = icmp eq i32 %7155, 2
  %7157 = zext i1 %7156 to i8
  %7158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7157, i8* %7158, align 1
  store %struct.Memory* %loadMem_40fa0a, %struct.Memory** %MEMORY
  %loadMem_40fa0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7160 = getelementptr inbounds %struct.GPR, %struct.GPR* %7159, i32 0, i32 33
  %7161 = getelementptr inbounds %struct.Reg, %struct.Reg* %7160, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %7161 to i64*
  %7162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7163 = getelementptr inbounds %struct.GPR, %struct.GPR* %7162, i32 0, i32 1
  %7164 = getelementptr inbounds %struct.Reg, %struct.Reg* %7163, i32 0, i32 0
  %EAX.i658 = bitcast %union.anon* %7164 to i32*
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7166 = getelementptr inbounds %struct.GPR, %struct.GPR* %7165, i32 0, i32 15
  %7167 = getelementptr inbounds %struct.Reg, %struct.Reg* %7166, i32 0, i32 0
  %RBP.i659 = bitcast %union.anon* %7167 to i64*
  %7168 = load i64, i64* %RBP.i659
  %7169 = sub i64 %7168, 64
  %7170 = load i32, i32* %EAX.i658
  %7171 = zext i32 %7170 to i64
  %7172 = load i64, i64* %PC.i657
  %7173 = add i64 %7172, 3
  store i64 %7173, i64* %PC.i657
  %7174 = inttoptr i64 %7169 to i32*
  store i32 %7170, i32* %7174
  store %struct.Memory* %loadMem_40fa0d, %struct.Memory** %MEMORY
  %loadMem_40fa10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7176 = getelementptr inbounds %struct.GPR, %struct.GPR* %7175, i32 0, i32 33
  %7177 = getelementptr inbounds %struct.Reg, %struct.Reg* %7176, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %7177 to i64*
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7179 = getelementptr inbounds %struct.GPR, %struct.GPR* %7178, i32 0, i32 1
  %7180 = getelementptr inbounds %struct.Reg, %struct.Reg* %7179, i32 0, i32 0
  %RAX.i655 = bitcast %union.anon* %7180 to i64*
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7182 = getelementptr inbounds %struct.GPR, %struct.GPR* %7181, i32 0, i32 15
  %7183 = getelementptr inbounds %struct.Reg, %struct.Reg* %7182, i32 0, i32 0
  %RBP.i656 = bitcast %union.anon* %7183 to i64*
  %7184 = load i64, i64* %RBP.i656
  %7185 = sub i64 %7184, 48
  %7186 = load i64, i64* %PC.i654
  %7187 = add i64 %7186, 3
  store i64 %7187, i64* %PC.i654
  %7188 = inttoptr i64 %7185 to i32*
  %7189 = load i32, i32* %7188
  %7190 = zext i32 %7189 to i64
  store i64 %7190, i64* %RAX.i655, align 8
  store %struct.Memory* %loadMem_40fa10, %struct.Memory** %MEMORY
  %loadMem_40fa13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7192 = getelementptr inbounds %struct.GPR, %struct.GPR* %7191, i32 0, i32 33
  %7193 = getelementptr inbounds %struct.Reg, %struct.Reg* %7192, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %7193 to i64*
  %7194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7195 = getelementptr inbounds %struct.GPR, %struct.GPR* %7194, i32 0, i32 1
  %7196 = getelementptr inbounds %struct.Reg, %struct.Reg* %7195, i32 0, i32 0
  %RAX.i652 = bitcast %union.anon* %7196 to i64*
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7198 = getelementptr inbounds %struct.GPR, %struct.GPR* %7197, i32 0, i32 15
  %7199 = getelementptr inbounds %struct.Reg, %struct.Reg* %7198, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %7199 to i64*
  %7200 = load i64, i64* %RAX.i652
  %7201 = load i64, i64* %RBP.i653
  %7202 = sub i64 %7201, 40
  %7203 = load i64, i64* %PC.i651
  %7204 = add i64 %7203, 3
  store i64 %7204, i64* %PC.i651
  %7205 = trunc i64 %7200 to i32
  %7206 = inttoptr i64 %7202 to i32*
  %7207 = load i32, i32* %7206
  %7208 = sub i32 %7205, %7207
  %7209 = zext i32 %7208 to i64
  store i64 %7209, i64* %RAX.i652, align 8
  %7210 = icmp ult i32 %7205, %7207
  %7211 = zext i1 %7210 to i8
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7211, i8* %7212, align 1
  %7213 = and i32 %7208, 255
  %7214 = call i32 @llvm.ctpop.i32(i32 %7213)
  %7215 = trunc i32 %7214 to i8
  %7216 = and i8 %7215, 1
  %7217 = xor i8 %7216, 1
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7217, i8* %7218, align 1
  %7219 = xor i32 %7207, %7205
  %7220 = xor i32 %7219, %7208
  %7221 = lshr i32 %7220, 4
  %7222 = trunc i32 %7221 to i8
  %7223 = and i8 %7222, 1
  %7224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7223, i8* %7224, align 1
  %7225 = icmp eq i32 %7208, 0
  %7226 = zext i1 %7225 to i8
  %7227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7226, i8* %7227, align 1
  %7228 = lshr i32 %7208, 31
  %7229 = trunc i32 %7228 to i8
  %7230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7229, i8* %7230, align 1
  %7231 = lshr i32 %7205, 31
  %7232 = lshr i32 %7207, 31
  %7233 = xor i32 %7232, %7231
  %7234 = xor i32 %7228, %7231
  %7235 = add i32 %7234, %7233
  %7236 = icmp eq i32 %7235, 2
  %7237 = zext i1 %7236 to i8
  %7238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7237, i8* %7238, align 1
  store %struct.Memory* %loadMem_40fa13, %struct.Memory** %MEMORY
  %loadMem_40fa16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7240 = getelementptr inbounds %struct.GPR, %struct.GPR* %7239, i32 0, i32 33
  %7241 = getelementptr inbounds %struct.Reg, %struct.Reg* %7240, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %7241 to i64*
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7243 = getelementptr inbounds %struct.GPR, %struct.GPR* %7242, i32 0, i32 1
  %7244 = getelementptr inbounds %struct.Reg, %struct.Reg* %7243, i32 0, i32 0
  %EAX.i649 = bitcast %union.anon* %7244 to i32*
  %7245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7246 = getelementptr inbounds %struct.GPR, %struct.GPR* %7245, i32 0, i32 15
  %7247 = getelementptr inbounds %struct.Reg, %struct.Reg* %7246, i32 0, i32 0
  %RBP.i650 = bitcast %union.anon* %7247 to i64*
  %7248 = load i64, i64* %RBP.i650
  %7249 = sub i64 %7248, 60
  %7250 = load i32, i32* %EAX.i649
  %7251 = zext i32 %7250 to i64
  %7252 = load i64, i64* %PC.i648
  %7253 = add i64 %7252, 3
  store i64 %7253, i64* %PC.i648
  %7254 = inttoptr i64 %7249 to i32*
  store i32 %7250, i32* %7254
  store %struct.Memory* %loadMem_40fa16, %struct.Memory** %MEMORY
  %loadMem_40fa19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7256 = getelementptr inbounds %struct.GPR, %struct.GPR* %7255, i32 0, i32 33
  %7257 = getelementptr inbounds %struct.Reg, %struct.Reg* %7256, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %7257 to i64*
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7259 = getelementptr inbounds %struct.GPR, %struct.GPR* %7258, i32 0, i32 1
  %7260 = getelementptr inbounds %struct.Reg, %struct.Reg* %7259, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %7260 to i64*
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7262 = getelementptr inbounds %struct.GPR, %struct.GPR* %7261, i32 0, i32 15
  %7263 = getelementptr inbounds %struct.Reg, %struct.Reg* %7262, i32 0, i32 0
  %RBP.i647 = bitcast %union.anon* %7263 to i64*
  %7264 = load i64, i64* %RBP.i647
  %7265 = sub i64 %7264, 44
  %7266 = load i64, i64* %PC.i645
  %7267 = add i64 %7266, 3
  store i64 %7267, i64* %PC.i645
  %7268 = inttoptr i64 %7265 to i32*
  %7269 = load i32, i32* %7268
  %7270 = zext i32 %7269 to i64
  store i64 %7270, i64* %RAX.i646, align 8
  store %struct.Memory* %loadMem_40fa19, %struct.Memory** %MEMORY
  %loadMem_40fa1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 33
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %7273 to i64*
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7275 = getelementptr inbounds %struct.GPR, %struct.GPR* %7274, i32 0, i32 1
  %7276 = getelementptr inbounds %struct.Reg, %struct.Reg* %7275, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %7276 to i64*
  %7277 = load i64, i64* %RAX.i644
  %7278 = load i64, i64* %PC.i643
  %7279 = add i64 %7278, 2
  store i64 %7279, i64* %PC.i643
  %7280 = shl i64 %7277, 32
  %7281 = ashr i64 %7280, 33
  %7282 = trunc i64 %7277 to i8
  %7283 = and i8 %7282, 1
  %7284 = trunc i64 %7281 to i32
  %7285 = and i64 %7281, 4294967295
  store i64 %7285, i64* %RAX.i644, align 8
  %7286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7283, i8* %7286, align 1
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7288 = and i32 %7284, 255
  %7289 = call i32 @llvm.ctpop.i32(i32 %7288)
  %7290 = trunc i32 %7289 to i8
  %7291 = and i8 %7290, 1
  %7292 = xor i8 %7291, 1
  store i8 %7292, i8* %7287, align 1
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7293, align 1
  %7294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7295 = icmp eq i32 %7284, 0
  %7296 = zext i1 %7295 to i8
  store i8 %7296, i8* %7294, align 1
  %7297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7298 = lshr i32 %7284, 31
  %7299 = trunc i32 %7298 to i8
  store i8 %7299, i8* %7297, align 1
  %7300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7300, align 1
  store %struct.Memory* %loadMem_40fa1c, %struct.Memory** %MEMORY
  %loadMem_40fa1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7302 = getelementptr inbounds %struct.GPR, %struct.GPR* %7301, i32 0, i32 33
  %7303 = getelementptr inbounds %struct.Reg, %struct.Reg* %7302, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %7303 to i64*
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7305 = getelementptr inbounds %struct.GPR, %struct.GPR* %7304, i32 0, i32 1
  %7306 = getelementptr inbounds %struct.Reg, %struct.Reg* %7305, i32 0, i32 0
  %RAX.i641 = bitcast %union.anon* %7306 to i64*
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7308 = getelementptr inbounds %struct.GPR, %struct.GPR* %7307, i32 0, i32 15
  %7309 = getelementptr inbounds %struct.Reg, %struct.Reg* %7308, i32 0, i32 0
  %RBP.i642 = bitcast %union.anon* %7309 to i64*
  %7310 = load i64, i64* %RAX.i641
  %7311 = load i64, i64* %RBP.i642
  %7312 = sub i64 %7311, 36
  %7313 = load i64, i64* %PC.i640
  %7314 = add i64 %7313, 3
  store i64 %7314, i64* %PC.i640
  %7315 = trunc i64 %7310 to i32
  %7316 = inttoptr i64 %7312 to i32*
  %7317 = load i32, i32* %7316
  %7318 = sub i32 %7315, %7317
  %7319 = zext i32 %7318 to i64
  store i64 %7319, i64* %RAX.i641, align 8
  %7320 = icmp ult i32 %7315, %7317
  %7321 = zext i1 %7320 to i8
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7321, i8* %7322, align 1
  %7323 = and i32 %7318, 255
  %7324 = call i32 @llvm.ctpop.i32(i32 %7323)
  %7325 = trunc i32 %7324 to i8
  %7326 = and i8 %7325, 1
  %7327 = xor i8 %7326, 1
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7327, i8* %7328, align 1
  %7329 = xor i32 %7317, %7315
  %7330 = xor i32 %7329, %7318
  %7331 = lshr i32 %7330, 4
  %7332 = trunc i32 %7331 to i8
  %7333 = and i8 %7332, 1
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7333, i8* %7334, align 1
  %7335 = icmp eq i32 %7318, 0
  %7336 = zext i1 %7335 to i8
  %7337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7336, i8* %7337, align 1
  %7338 = lshr i32 %7318, 31
  %7339 = trunc i32 %7338 to i8
  %7340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7339, i8* %7340, align 1
  %7341 = lshr i32 %7315, 31
  %7342 = lshr i32 %7317, 31
  %7343 = xor i32 %7342, %7341
  %7344 = xor i32 %7338, %7341
  %7345 = add i32 %7344, %7343
  %7346 = icmp eq i32 %7345, 2
  %7347 = zext i1 %7346 to i8
  %7348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7347, i8* %7348, align 1
  store %struct.Memory* %loadMem_40fa1f, %struct.Memory** %MEMORY
  %loadMem_40fa22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7350 = getelementptr inbounds %struct.GPR, %struct.GPR* %7349, i32 0, i32 33
  %7351 = getelementptr inbounds %struct.Reg, %struct.Reg* %7350, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %7351 to i64*
  %7352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7353 = getelementptr inbounds %struct.GPR, %struct.GPR* %7352, i32 0, i32 1
  %7354 = getelementptr inbounds %struct.Reg, %struct.Reg* %7353, i32 0, i32 0
  %EAX.i638 = bitcast %union.anon* %7354 to i32*
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 15
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %RBP.i639 = bitcast %union.anon* %7357 to i64*
  %7358 = load i64, i64* %RBP.i639
  %7359 = sub i64 %7358, 56
  %7360 = load i32, i32* %EAX.i638
  %7361 = zext i32 %7360 to i64
  %7362 = load i64, i64* %PC.i637
  %7363 = add i64 %7362, 3
  store i64 %7363, i64* %PC.i637
  %7364 = inttoptr i64 %7359 to i32*
  store i32 %7360, i32* %7364
  store %struct.Memory* %loadMem_40fa22, %struct.Memory** %MEMORY
  %loadMem_40fa25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7366 = getelementptr inbounds %struct.GPR, %struct.GPR* %7365, i32 0, i32 33
  %7367 = getelementptr inbounds %struct.Reg, %struct.Reg* %7366, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %7367 to i64*
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7369 = getelementptr inbounds %struct.GPR, %struct.GPR* %7368, i32 0, i32 1
  %7370 = getelementptr inbounds %struct.Reg, %struct.Reg* %7369, i32 0, i32 0
  %RAX.i635 = bitcast %union.anon* %7370 to i64*
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 15
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %RBP.i636 = bitcast %union.anon* %7373 to i64*
  %7374 = load i64, i64* %RBP.i636
  %7375 = sub i64 %7374, 44
  %7376 = load i64, i64* %PC.i634
  %7377 = add i64 %7376, 3
  store i64 %7377, i64* %PC.i634
  %7378 = inttoptr i64 %7375 to i32*
  %7379 = load i32, i32* %7378
  %7380 = zext i32 %7379 to i64
  store i64 %7380, i64* %RAX.i635, align 8
  store %struct.Memory* %loadMem_40fa25, %struct.Memory** %MEMORY
  %loadMem_40fa28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7382 = getelementptr inbounds %struct.GPR, %struct.GPR* %7381, i32 0, i32 33
  %7383 = getelementptr inbounds %struct.Reg, %struct.Reg* %7382, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %7383 to i64*
  %7384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7385 = getelementptr inbounds %struct.GPR, %struct.GPR* %7384, i32 0, i32 5
  %7386 = getelementptr inbounds %struct.Reg, %struct.Reg* %7385, i32 0, i32 0
  %RCX.i632 = bitcast %union.anon* %7386 to i64*
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7388 = getelementptr inbounds %struct.GPR, %struct.GPR* %7387, i32 0, i32 15
  %7389 = getelementptr inbounds %struct.Reg, %struct.Reg* %7388, i32 0, i32 0
  %RBP.i633 = bitcast %union.anon* %7389 to i64*
  %7390 = load i64, i64* %RBP.i633
  %7391 = sub i64 %7390, 36
  %7392 = load i64, i64* %PC.i631
  %7393 = add i64 %7392, 3
  store i64 %7393, i64* %PC.i631
  %7394 = inttoptr i64 %7391 to i32*
  %7395 = load i32, i32* %7394
  %7396 = zext i32 %7395 to i64
  store i64 %7396, i64* %RCX.i632, align 8
  store %struct.Memory* %loadMem_40fa28, %struct.Memory** %MEMORY
  %loadMem_40fa2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7398 = getelementptr inbounds %struct.GPR, %struct.GPR* %7397, i32 0, i32 33
  %7399 = getelementptr inbounds %struct.Reg, %struct.Reg* %7398, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %7399 to i64*
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 5
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %RCX.i630 = bitcast %union.anon* %7402 to i64*
  %7403 = load i64, i64* %RCX.i630
  %7404 = load i64, i64* %PC.i629
  %7405 = add i64 %7404, 2
  store i64 %7405, i64* %PC.i629
  %7406 = shl i64 %7403, 32
  %7407 = ashr i64 %7406, 33
  %7408 = trunc i64 %7403 to i8
  %7409 = and i8 %7408, 1
  %7410 = trunc i64 %7407 to i32
  %7411 = and i64 %7407, 4294967295
  store i64 %7411, i64* %RCX.i630, align 8
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7409, i8* %7412, align 1
  %7413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7414 = and i32 %7410, 255
  %7415 = call i32 @llvm.ctpop.i32(i32 %7414)
  %7416 = trunc i32 %7415 to i8
  %7417 = and i8 %7416, 1
  %7418 = xor i8 %7417, 1
  store i8 %7418, i8* %7413, align 1
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7419, align 1
  %7420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7421 = icmp eq i32 %7410, 0
  %7422 = zext i1 %7421 to i8
  store i8 %7422, i8* %7420, align 1
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7424 = lshr i32 %7410, 31
  %7425 = trunc i32 %7424 to i8
  store i8 %7425, i8* %7423, align 1
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7426, align 1
  store %struct.Memory* %loadMem_40fa2b, %struct.Memory** %MEMORY
  %loadMem_40fa2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7428 = getelementptr inbounds %struct.GPR, %struct.GPR* %7427, i32 0, i32 33
  %7429 = getelementptr inbounds %struct.Reg, %struct.Reg* %7428, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %7429 to i64*
  %7430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7431 = getelementptr inbounds %struct.GPR, %struct.GPR* %7430, i32 0, i32 5
  %7432 = getelementptr inbounds %struct.Reg, %struct.Reg* %7431, i32 0, i32 0
  %ECX.i627 = bitcast %union.anon* %7432 to i32*
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7434 = getelementptr inbounds %struct.GPR, %struct.GPR* %7433, i32 0, i32 1
  %7435 = getelementptr inbounds %struct.Reg, %struct.Reg* %7434, i32 0, i32 0
  %RAX.i628 = bitcast %union.anon* %7435 to i64*
  %7436 = load i64, i64* %RAX.i628
  %7437 = load i32, i32* %ECX.i627
  %7438 = zext i32 %7437 to i64
  %7439 = load i64, i64* %PC.i626
  %7440 = add i64 %7439, 2
  store i64 %7440, i64* %PC.i626
  %7441 = trunc i64 %7436 to i32
  %7442 = add i32 %7437, %7441
  %7443 = zext i32 %7442 to i64
  store i64 %7443, i64* %RAX.i628, align 8
  %7444 = icmp ult i32 %7442, %7441
  %7445 = icmp ult i32 %7442, %7437
  %7446 = or i1 %7444, %7445
  %7447 = zext i1 %7446 to i8
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7447, i8* %7448, align 1
  %7449 = and i32 %7442, 255
  %7450 = call i32 @llvm.ctpop.i32(i32 %7449)
  %7451 = trunc i32 %7450 to i8
  %7452 = and i8 %7451, 1
  %7453 = xor i8 %7452, 1
  %7454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7453, i8* %7454, align 1
  %7455 = xor i64 %7438, %7436
  %7456 = trunc i64 %7455 to i32
  %7457 = xor i32 %7456, %7442
  %7458 = lshr i32 %7457, 4
  %7459 = trunc i32 %7458 to i8
  %7460 = and i8 %7459, 1
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7460, i8* %7461, align 1
  %7462 = icmp eq i32 %7442, 0
  %7463 = zext i1 %7462 to i8
  %7464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7463, i8* %7464, align 1
  %7465 = lshr i32 %7442, 31
  %7466 = trunc i32 %7465 to i8
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7466, i8* %7467, align 1
  %7468 = lshr i32 %7441, 31
  %7469 = lshr i32 %7437, 31
  %7470 = xor i32 %7465, %7468
  %7471 = xor i32 %7465, %7469
  %7472 = add i32 %7470, %7471
  %7473 = icmp eq i32 %7472, 2
  %7474 = zext i1 %7473 to i8
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7474, i8* %7475, align 1
  store %struct.Memory* %loadMem_40fa2e, %struct.Memory** %MEMORY
  %loadMem_40fa30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7477 = getelementptr inbounds %struct.GPR, %struct.GPR* %7476, i32 0, i32 33
  %7478 = getelementptr inbounds %struct.Reg, %struct.Reg* %7477, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %7478 to i64*
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7480 = getelementptr inbounds %struct.GPR, %struct.GPR* %7479, i32 0, i32 1
  %7481 = getelementptr inbounds %struct.Reg, %struct.Reg* %7480, i32 0, i32 0
  %EAX.i624 = bitcast %union.anon* %7481 to i32*
  %7482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7483 = getelementptr inbounds %struct.GPR, %struct.GPR* %7482, i32 0, i32 15
  %7484 = getelementptr inbounds %struct.Reg, %struct.Reg* %7483, i32 0, i32 0
  %RBP.i625 = bitcast %union.anon* %7484 to i64*
  %7485 = load i64, i64* %RBP.i625
  %7486 = sub i64 %7485, 52
  %7487 = load i32, i32* %EAX.i624
  %7488 = zext i32 %7487 to i64
  %7489 = load i64, i64* %PC.i623
  %7490 = add i64 %7489, 3
  store i64 %7490, i64* %PC.i623
  %7491 = inttoptr i64 %7486 to i32*
  store i32 %7487, i32* %7491
  store %struct.Memory* %loadMem_40fa30, %struct.Memory** %MEMORY
  %loadMem_40fa33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7493 = getelementptr inbounds %struct.GPR, %struct.GPR* %7492, i32 0, i32 33
  %7494 = getelementptr inbounds %struct.Reg, %struct.Reg* %7493, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %7494 to i64*
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7496 = getelementptr inbounds %struct.GPR, %struct.GPR* %7495, i32 0, i32 15
  %7497 = getelementptr inbounds %struct.Reg, %struct.Reg* %7496, i32 0, i32 0
  %RBP.i622 = bitcast %union.anon* %7497 to i64*
  %7498 = load i64, i64* %RBP.i622
  %7499 = sub i64 %7498, 12
  %7500 = load i64, i64* %PC.i621
  %7501 = add i64 %7500, 7
  store i64 %7501, i64* %PC.i621
  %7502 = inttoptr i64 %7499 to i32*
  store i32 0, i32* %7502
  store %struct.Memory* %loadMem_40fa33, %struct.Memory** %MEMORY
  br label %block_.L_40fa3a

block_.L_40fa3a:                                  ; preds = %block_40fa44, %block_.L_40fa07
  %loadMem_40fa3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7504 = getelementptr inbounds %struct.GPR, %struct.GPR* %7503, i32 0, i32 33
  %7505 = getelementptr inbounds %struct.Reg, %struct.Reg* %7504, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %7505 to i64*
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7507 = getelementptr inbounds %struct.GPR, %struct.GPR* %7506, i32 0, i32 15
  %7508 = getelementptr inbounds %struct.Reg, %struct.Reg* %7507, i32 0, i32 0
  %RBP.i620 = bitcast %union.anon* %7508 to i64*
  %7509 = load i64, i64* %RBP.i620
  %7510 = sub i64 %7509, 12
  %7511 = load i64, i64* %PC.i619
  %7512 = add i64 %7511, 4
  store i64 %7512, i64* %PC.i619
  %7513 = inttoptr i64 %7510 to i32*
  %7514 = load i32, i32* %7513
  %7515 = sub i32 %7514, 2
  %7516 = icmp ult i32 %7514, 2
  %7517 = zext i1 %7516 to i8
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7517, i8* %7518, align 1
  %7519 = and i32 %7515, 255
  %7520 = call i32 @llvm.ctpop.i32(i32 %7519)
  %7521 = trunc i32 %7520 to i8
  %7522 = and i8 %7521, 1
  %7523 = xor i8 %7522, 1
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7523, i8* %7524, align 1
  %7525 = xor i32 %7514, 2
  %7526 = xor i32 %7525, %7515
  %7527 = lshr i32 %7526, 4
  %7528 = trunc i32 %7527 to i8
  %7529 = and i8 %7528, 1
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7529, i8* %7530, align 1
  %7531 = icmp eq i32 %7515, 0
  %7532 = zext i1 %7531 to i8
  %7533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7532, i8* %7533, align 1
  %7534 = lshr i32 %7515, 31
  %7535 = trunc i32 %7534 to i8
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7535, i8* %7536, align 1
  %7537 = lshr i32 %7514, 31
  %7538 = xor i32 %7534, %7537
  %7539 = add i32 %7538, %7537
  %7540 = icmp eq i32 %7539, 2
  %7541 = zext i1 %7540 to i8
  %7542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7541, i8* %7542, align 1
  store %struct.Memory* %loadMem_40fa3a, %struct.Memory** %MEMORY
  %loadMem_40fa3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7544 = getelementptr inbounds %struct.GPR, %struct.GPR* %7543, i32 0, i32 33
  %7545 = getelementptr inbounds %struct.Reg, %struct.Reg* %7544, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %7545 to i64*
  %7546 = load i64, i64* %PC.i618
  %7547 = add i64 %7546, 129
  %7548 = load i64, i64* %PC.i618
  %7549 = add i64 %7548, 6
  %7550 = load i64, i64* %PC.i618
  %7551 = add i64 %7550, 6
  store i64 %7551, i64* %PC.i618
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7553 = load i8, i8* %7552, align 1
  %7554 = icmp ne i8 %7553, 0
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7556 = load i8, i8* %7555, align 1
  %7557 = icmp ne i8 %7556, 0
  %7558 = xor i1 %7554, %7557
  %7559 = xor i1 %7558, true
  %7560 = zext i1 %7559 to i8
  store i8 %7560, i8* %BRANCH_TAKEN, align 1
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7562 = select i1 %7558, i64 %7549, i64 %7547
  store i64 %7562, i64* %7561, align 8
  store %struct.Memory* %loadMem_40fa3e, %struct.Memory** %MEMORY
  %loadBr_40fa3e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fa3e = icmp eq i8 %loadBr_40fa3e, 1
  br i1 %cmpBr_40fa3e, label %block_.L_40fabf, label %block_40fa44

block_40fa44:                                     ; preds = %block_.L_40fa3a
  %loadMem_40fa44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7564 = getelementptr inbounds %struct.GPR, %struct.GPR* %7563, i32 0, i32 33
  %7565 = getelementptr inbounds %struct.Reg, %struct.Reg* %7564, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %7565 to i64*
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7567 = getelementptr inbounds %struct.GPR, %struct.GPR* %7566, i32 0, i32 1
  %7568 = getelementptr inbounds %struct.Reg, %struct.Reg* %7567, i32 0, i32 0
  %RAX.i617 = bitcast %union.anon* %7568 to i64*
  %7569 = load i64, i64* %PC.i616
  %7570 = add i64 %7569, 5
  store i64 %7570, i64* %PC.i616
  store i64 3, i64* %RAX.i617, align 8
  store %struct.Memory* %loadMem_40fa44, %struct.Memory** %MEMORY
  %loadMem_40fa49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7572 = getelementptr inbounds %struct.GPR, %struct.GPR* %7571, i32 0, i32 33
  %7573 = getelementptr inbounds %struct.Reg, %struct.Reg* %7572, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %7573 to i64*
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7575 = getelementptr inbounds %struct.GPR, %struct.GPR* %7574, i32 0, i32 1
  %7576 = getelementptr inbounds %struct.Reg, %struct.Reg* %7575, i32 0, i32 0
  %RAX.i614 = bitcast %union.anon* %7576 to i64*
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7578 = getelementptr inbounds %struct.GPR, %struct.GPR* %7577, i32 0, i32 15
  %7579 = getelementptr inbounds %struct.Reg, %struct.Reg* %7578, i32 0, i32 0
  %RBP.i615 = bitcast %union.anon* %7579 to i64*
  %7580 = load i64, i64* %RAX.i614
  %7581 = load i64, i64* %RBP.i615
  %7582 = sub i64 %7581, 12
  %7583 = load i64, i64* %PC.i613
  %7584 = add i64 %7583, 3
  store i64 %7584, i64* %PC.i613
  %7585 = trunc i64 %7580 to i32
  %7586 = inttoptr i64 %7582 to i32*
  %7587 = load i32, i32* %7586
  %7588 = sub i32 %7585, %7587
  %7589 = zext i32 %7588 to i64
  store i64 %7589, i64* %RAX.i614, align 8
  %7590 = icmp ult i32 %7585, %7587
  %7591 = zext i1 %7590 to i8
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7591, i8* %7592, align 1
  %7593 = and i32 %7588, 255
  %7594 = call i32 @llvm.ctpop.i32(i32 %7593)
  %7595 = trunc i32 %7594 to i8
  %7596 = and i8 %7595, 1
  %7597 = xor i8 %7596, 1
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7597, i8* %7598, align 1
  %7599 = xor i32 %7587, %7585
  %7600 = xor i32 %7599, %7588
  %7601 = lshr i32 %7600, 4
  %7602 = trunc i32 %7601 to i8
  %7603 = and i8 %7602, 1
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7603, i8* %7604, align 1
  %7605 = icmp eq i32 %7588, 0
  %7606 = zext i1 %7605 to i8
  %7607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7606, i8* %7607, align 1
  %7608 = lshr i32 %7588, 31
  %7609 = trunc i32 %7608 to i8
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7609, i8* %7610, align 1
  %7611 = lshr i32 %7585, 31
  %7612 = lshr i32 %7587, 31
  %7613 = xor i32 %7612, %7611
  %7614 = xor i32 %7608, %7611
  %7615 = add i32 %7614, %7613
  %7616 = icmp eq i32 %7615, 2
  %7617 = zext i1 %7616 to i8
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7617, i8* %7618, align 1
  store %struct.Memory* %loadMem_40fa49, %struct.Memory** %MEMORY
  %loadMem_40fa4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7620 = getelementptr inbounds %struct.GPR, %struct.GPR* %7619, i32 0, i32 33
  %7621 = getelementptr inbounds %struct.Reg, %struct.Reg* %7620, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %7621 to i64*
  %7622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7623 = getelementptr inbounds %struct.GPR, %struct.GPR* %7622, i32 0, i32 1
  %7624 = getelementptr inbounds %struct.Reg, %struct.Reg* %7623, i32 0, i32 0
  %EAX.i611 = bitcast %union.anon* %7624 to i32*
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7626 = getelementptr inbounds %struct.GPR, %struct.GPR* %7625, i32 0, i32 15
  %7627 = getelementptr inbounds %struct.Reg, %struct.Reg* %7626, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %7627 to i64*
  %7628 = load i64, i64* %RBP.i612
  %7629 = sub i64 %7628, 20
  %7630 = load i32, i32* %EAX.i611
  %7631 = zext i32 %7630 to i64
  %7632 = load i64, i64* %PC.i610
  %7633 = add i64 %7632, 3
  store i64 %7633, i64* %PC.i610
  %7634 = inttoptr i64 %7629 to i32*
  store i32 %7630, i32* %7634
  store %struct.Memory* %loadMem_40fa4c, %struct.Memory** %MEMORY
  %loadMem_40fa4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7636 = getelementptr inbounds %struct.GPR, %struct.GPR* %7635, i32 0, i32 33
  %7637 = getelementptr inbounds %struct.Reg, %struct.Reg* %7636, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %7637 to i64*
  %7638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7639 = getelementptr inbounds %struct.GPR, %struct.GPR* %7638, i32 0, i32 5
  %7640 = getelementptr inbounds %struct.Reg, %struct.Reg* %7639, i32 0, i32 0
  %RCX.i608 = bitcast %union.anon* %7640 to i64*
  %7641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7642 = getelementptr inbounds %struct.GPR, %struct.GPR* %7641, i32 0, i32 15
  %7643 = getelementptr inbounds %struct.Reg, %struct.Reg* %7642, i32 0, i32 0
  %RBP.i609 = bitcast %union.anon* %7643 to i64*
  %7644 = load i64, i64* %RBP.i609
  %7645 = sub i64 %7644, 12
  %7646 = load i64, i64* %PC.i607
  %7647 = add i64 %7646, 4
  store i64 %7647, i64* %PC.i607
  %7648 = inttoptr i64 %7645 to i32*
  %7649 = load i32, i32* %7648
  %7650 = sext i32 %7649 to i64
  store i64 %7650, i64* %RCX.i608, align 8
  store %struct.Memory* %loadMem_40fa4f, %struct.Memory** %MEMORY
  %loadMem_40fa53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7652 = getelementptr inbounds %struct.GPR, %struct.GPR* %7651, i32 0, i32 33
  %7653 = getelementptr inbounds %struct.Reg, %struct.Reg* %7652, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %7653 to i64*
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7655 = getelementptr inbounds %struct.GPR, %struct.GPR* %7654, i32 0, i32 1
  %7656 = getelementptr inbounds %struct.Reg, %struct.Reg* %7655, i32 0, i32 0
  %RAX.i604 = bitcast %union.anon* %7656 to i64*
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7658 = getelementptr inbounds %struct.GPR, %struct.GPR* %7657, i32 0, i32 5
  %7659 = getelementptr inbounds %struct.Reg, %struct.Reg* %7658, i32 0, i32 0
  %RCX.i605 = bitcast %union.anon* %7659 to i64*
  %7660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7661 = getelementptr inbounds %struct.GPR, %struct.GPR* %7660, i32 0, i32 15
  %7662 = getelementptr inbounds %struct.Reg, %struct.Reg* %7661, i32 0, i32 0
  %RBP.i606 = bitcast %union.anon* %7662 to i64*
  %7663 = load i64, i64* %RBP.i606
  %7664 = load i64, i64* %RCX.i605
  %7665 = mul i64 %7664, 4
  %7666 = add i64 %7663, -64
  %7667 = add i64 %7666, %7665
  %7668 = load i64, i64* %PC.i603
  %7669 = add i64 %7668, 4
  store i64 %7669, i64* %PC.i603
  %7670 = inttoptr i64 %7667 to i32*
  %7671 = load i32, i32* %7670
  %7672 = zext i32 %7671 to i64
  store i64 %7672, i64* %RAX.i604, align 8
  store %struct.Memory* %loadMem_40fa53, %struct.Memory** %MEMORY
  %loadMem_40fa57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7674 = getelementptr inbounds %struct.GPR, %struct.GPR* %7673, i32 0, i32 33
  %7675 = getelementptr inbounds %struct.Reg, %struct.Reg* %7674, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %7675 to i64*
  %7676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7677 = getelementptr inbounds %struct.GPR, %struct.GPR* %7676, i32 0, i32 5
  %7678 = getelementptr inbounds %struct.Reg, %struct.Reg* %7677, i32 0, i32 0
  %RCX.i601 = bitcast %union.anon* %7678 to i64*
  %7679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7680 = getelementptr inbounds %struct.GPR, %struct.GPR* %7679, i32 0, i32 15
  %7681 = getelementptr inbounds %struct.Reg, %struct.Reg* %7680, i32 0, i32 0
  %RBP.i602 = bitcast %union.anon* %7681 to i64*
  %7682 = load i64, i64* %RBP.i602
  %7683 = sub i64 %7682, 20
  %7684 = load i64, i64* %PC.i600
  %7685 = add i64 %7684, 4
  store i64 %7685, i64* %PC.i600
  %7686 = inttoptr i64 %7683 to i32*
  %7687 = load i32, i32* %7686
  %7688 = sext i32 %7687 to i64
  store i64 %7688, i64* %RCX.i601, align 8
  store %struct.Memory* %loadMem_40fa57, %struct.Memory** %MEMORY
  %loadMem_40fa5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7690 = getelementptr inbounds %struct.GPR, %struct.GPR* %7689, i32 0, i32 33
  %7691 = getelementptr inbounds %struct.Reg, %struct.Reg* %7690, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %7691 to i64*
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 1
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %RAX.i597 = bitcast %union.anon* %7694 to i64*
  %7695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7696 = getelementptr inbounds %struct.GPR, %struct.GPR* %7695, i32 0, i32 5
  %7697 = getelementptr inbounds %struct.Reg, %struct.Reg* %7696, i32 0, i32 0
  %RCX.i598 = bitcast %union.anon* %7697 to i64*
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7699 = getelementptr inbounds %struct.GPR, %struct.GPR* %7698, i32 0, i32 15
  %7700 = getelementptr inbounds %struct.Reg, %struct.Reg* %7699, i32 0, i32 0
  %RBP.i599 = bitcast %union.anon* %7700 to i64*
  %7701 = load i64, i64* %RAX.i597
  %7702 = load i64, i64* %RBP.i599
  %7703 = load i64, i64* %RCX.i598
  %7704 = mul i64 %7703, 4
  %7705 = add i64 %7702, -64
  %7706 = add i64 %7705, %7704
  %7707 = load i64, i64* %PC.i596
  %7708 = add i64 %7707, 4
  store i64 %7708, i64* %PC.i596
  %7709 = trunc i64 %7701 to i32
  %7710 = inttoptr i64 %7706 to i32*
  %7711 = load i32, i32* %7710
  %7712 = add i32 %7711, %7709
  %7713 = zext i32 %7712 to i64
  store i64 %7713, i64* %RAX.i597, align 8
  %7714 = icmp ult i32 %7712, %7709
  %7715 = icmp ult i32 %7712, %7711
  %7716 = or i1 %7714, %7715
  %7717 = zext i1 %7716 to i8
  %7718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7717, i8* %7718, align 1
  %7719 = and i32 %7712, 255
  %7720 = call i32 @llvm.ctpop.i32(i32 %7719)
  %7721 = trunc i32 %7720 to i8
  %7722 = and i8 %7721, 1
  %7723 = xor i8 %7722, 1
  %7724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7723, i8* %7724, align 1
  %7725 = xor i32 %7711, %7709
  %7726 = xor i32 %7725, %7712
  %7727 = lshr i32 %7726, 4
  %7728 = trunc i32 %7727 to i8
  %7729 = and i8 %7728, 1
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7729, i8* %7730, align 1
  %7731 = icmp eq i32 %7712, 0
  %7732 = zext i1 %7731 to i8
  %7733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7732, i8* %7733, align 1
  %7734 = lshr i32 %7712, 31
  %7735 = trunc i32 %7734 to i8
  %7736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7735, i8* %7736, align 1
  %7737 = lshr i32 %7709, 31
  %7738 = lshr i32 %7711, 31
  %7739 = xor i32 %7734, %7737
  %7740 = xor i32 %7734, %7738
  %7741 = add i32 %7739, %7740
  %7742 = icmp eq i32 %7741, 2
  %7743 = zext i1 %7742 to i8
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7743, i8* %7744, align 1
  store %struct.Memory* %loadMem_40fa5b, %struct.Memory** %MEMORY
  %loadMem_40fa5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7746 = getelementptr inbounds %struct.GPR, %struct.GPR* %7745, i32 0, i32 33
  %7747 = getelementptr inbounds %struct.Reg, %struct.Reg* %7746, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %7747 to i64*
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7749 = getelementptr inbounds %struct.GPR, %struct.GPR* %7748, i32 0, i32 5
  %7750 = getelementptr inbounds %struct.Reg, %struct.Reg* %7749, i32 0, i32 0
  %RCX.i595 = bitcast %union.anon* %7750 to i64*
  %7751 = load i64, i64* %PC.i594
  %7752 = add i64 %7751, 8
  store i64 %7752, i64* %PC.i594
  %7753 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7753, i64* %RCX.i595, align 8
  store %struct.Memory* %loadMem_40fa5f, %struct.Memory** %MEMORY
  %loadMem_40fa67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7755 = getelementptr inbounds %struct.GPR, %struct.GPR* %7754, i32 0, i32 33
  %7756 = getelementptr inbounds %struct.Reg, %struct.Reg* %7755, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %7756 to i64*
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7758 = getelementptr inbounds %struct.GPR, %struct.GPR* %7757, i32 0, i32 5
  %7759 = getelementptr inbounds %struct.Reg, %struct.Reg* %7758, i32 0, i32 0
  %RCX.i593 = bitcast %union.anon* %7759 to i64*
  %7760 = load i64, i64* %RCX.i593
  %7761 = load i64, i64* %PC.i592
  %7762 = add i64 %7761, 7
  store i64 %7762, i64* %PC.i592
  %7763 = add i64 13112, %7760
  store i64 %7763, i64* %RCX.i593, align 8
  %7764 = icmp ult i64 %7763, %7760
  %7765 = icmp ult i64 %7763, 13112
  %7766 = or i1 %7764, %7765
  %7767 = zext i1 %7766 to i8
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7767, i8* %7768, align 1
  %7769 = trunc i64 %7763 to i32
  %7770 = and i32 %7769, 255
  %7771 = call i32 @llvm.ctpop.i32(i32 %7770)
  %7772 = trunc i32 %7771 to i8
  %7773 = and i8 %7772, 1
  %7774 = xor i8 %7773, 1
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7774, i8* %7775, align 1
  %7776 = xor i64 13112, %7760
  %7777 = xor i64 %7776, %7763
  %7778 = lshr i64 %7777, 4
  %7779 = trunc i64 %7778 to i8
  %7780 = and i8 %7779, 1
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7780, i8* %7781, align 1
  %7782 = icmp eq i64 %7763, 0
  %7783 = zext i1 %7782 to i8
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7783, i8* %7784, align 1
  %7785 = lshr i64 %7763, 63
  %7786 = trunc i64 %7785 to i8
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7786, i8* %7787, align 1
  %7788 = lshr i64 %7760, 63
  %7789 = xor i64 %7785, %7788
  %7790 = add i64 %7789, %7785
  %7791 = icmp eq i64 %7790, 2
  %7792 = zext i1 %7791 to i8
  %7793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7792, i8* %7793, align 1
  store %struct.Memory* %loadMem_40fa67, %struct.Memory** %MEMORY
  %loadMem_40fa6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7795 = getelementptr inbounds %struct.GPR, %struct.GPR* %7794, i32 0, i32 33
  %7796 = getelementptr inbounds %struct.Reg, %struct.Reg* %7795, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %7796 to i64*
  %7797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7798 = getelementptr inbounds %struct.GPR, %struct.GPR* %7797, i32 0, i32 7
  %7799 = getelementptr inbounds %struct.Reg, %struct.Reg* %7798, i32 0, i32 0
  %RDX.i590 = bitcast %union.anon* %7799 to i64*
  %7800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7801 = getelementptr inbounds %struct.GPR, %struct.GPR* %7800, i32 0, i32 15
  %7802 = getelementptr inbounds %struct.Reg, %struct.Reg* %7801, i32 0, i32 0
  %RBP.i591 = bitcast %union.anon* %7802 to i64*
  %7803 = load i64, i64* %RBP.i591
  %7804 = sub i64 %7803, 12
  %7805 = load i64, i64* %PC.i589
  %7806 = add i64 %7805, 4
  store i64 %7806, i64* %PC.i589
  %7807 = inttoptr i64 %7804 to i32*
  %7808 = load i32, i32* %7807
  %7809 = sext i32 %7808 to i64
  store i64 %7809, i64* %RDX.i590, align 8
  store %struct.Memory* %loadMem_40fa6e, %struct.Memory** %MEMORY
  %loadMem_40fa72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7811 = getelementptr inbounds %struct.GPR, %struct.GPR* %7810, i32 0, i32 33
  %7812 = getelementptr inbounds %struct.Reg, %struct.Reg* %7811, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %7812 to i64*
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7814 = getelementptr inbounds %struct.GPR, %struct.GPR* %7813, i32 0, i32 7
  %7815 = getelementptr inbounds %struct.Reg, %struct.Reg* %7814, i32 0, i32 0
  %RDX.i588 = bitcast %union.anon* %7815 to i64*
  %7816 = load i64, i64* %RDX.i588
  %7817 = load i64, i64* %PC.i587
  %7818 = add i64 %7817, 4
  store i64 %7818, i64* %PC.i587
  %7819 = shl i64 %7816, 5
  %7820 = icmp slt i64 %7819, 0
  %7821 = shl i64 %7819, 1
  store i64 %7821, i64* %RDX.i588, align 8
  %7822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7823 = zext i1 %7820 to i8
  store i8 %7823, i8* %7822, align 1
  %7824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7825 = trunc i64 %7821 to i32
  %7826 = and i32 %7825, 254
  %7827 = call i32 @llvm.ctpop.i32(i32 %7826)
  %7828 = trunc i32 %7827 to i8
  %7829 = and i8 %7828, 1
  %7830 = xor i8 %7829, 1
  store i8 %7830, i8* %7824, align 1
  %7831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7831, align 1
  %7832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7833 = icmp eq i64 %7821, 0
  %7834 = zext i1 %7833 to i8
  store i8 %7834, i8* %7832, align 1
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7836 = lshr i64 %7821, 63
  %7837 = trunc i64 %7836 to i8
  store i8 %7837, i8* %7835, align 1
  %7838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7838, align 1
  store %struct.Memory* %loadMem_40fa72, %struct.Memory** %MEMORY
  %loadMem_40fa76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7840 = getelementptr inbounds %struct.GPR, %struct.GPR* %7839, i32 0, i32 33
  %7841 = getelementptr inbounds %struct.Reg, %struct.Reg* %7840, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %7841 to i64*
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7843 = getelementptr inbounds %struct.GPR, %struct.GPR* %7842, i32 0, i32 5
  %7844 = getelementptr inbounds %struct.Reg, %struct.Reg* %7843, i32 0, i32 0
  %RCX.i585 = bitcast %union.anon* %7844 to i64*
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 7
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %RDX.i586 = bitcast %union.anon* %7847 to i64*
  %7848 = load i64, i64* %RCX.i585
  %7849 = load i64, i64* %RDX.i586
  %7850 = load i64, i64* %PC.i584
  %7851 = add i64 %7850, 3
  store i64 %7851, i64* %PC.i584
  %7852 = add i64 %7849, %7848
  store i64 %7852, i64* %RCX.i585, align 8
  %7853 = icmp ult i64 %7852, %7848
  %7854 = icmp ult i64 %7852, %7849
  %7855 = or i1 %7853, %7854
  %7856 = zext i1 %7855 to i8
  %7857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7856, i8* %7857, align 1
  %7858 = trunc i64 %7852 to i32
  %7859 = and i32 %7858, 255
  %7860 = call i32 @llvm.ctpop.i32(i32 %7859)
  %7861 = trunc i32 %7860 to i8
  %7862 = and i8 %7861, 1
  %7863 = xor i8 %7862, 1
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7863, i8* %7864, align 1
  %7865 = xor i64 %7849, %7848
  %7866 = xor i64 %7865, %7852
  %7867 = lshr i64 %7866, 4
  %7868 = trunc i64 %7867 to i8
  %7869 = and i8 %7868, 1
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7869, i8* %7870, align 1
  %7871 = icmp eq i64 %7852, 0
  %7872 = zext i1 %7871 to i8
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7872, i8* %7873, align 1
  %7874 = lshr i64 %7852, 63
  %7875 = trunc i64 %7874 to i8
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7875, i8* %7876, align 1
  %7877 = lshr i64 %7848, 63
  %7878 = lshr i64 %7849, 63
  %7879 = xor i64 %7874, %7877
  %7880 = xor i64 %7874, %7878
  %7881 = add i64 %7879, %7880
  %7882 = icmp eq i64 %7881, 2
  %7883 = zext i1 %7882 to i8
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7883, i8* %7884, align 1
  store %struct.Memory* %loadMem_40fa76, %struct.Memory** %MEMORY
  %loadMem_40fa79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7886 = getelementptr inbounds %struct.GPR, %struct.GPR* %7885, i32 0, i32 33
  %7887 = getelementptr inbounds %struct.Reg, %struct.Reg* %7886, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %7887 to i64*
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7889 = getelementptr inbounds %struct.GPR, %struct.GPR* %7888, i32 0, i32 7
  %7890 = getelementptr inbounds %struct.Reg, %struct.Reg* %7889, i32 0, i32 0
  %RDX.i582 = bitcast %union.anon* %7890 to i64*
  %7891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7892 = getelementptr inbounds %struct.GPR, %struct.GPR* %7891, i32 0, i32 15
  %7893 = getelementptr inbounds %struct.Reg, %struct.Reg* %7892, i32 0, i32 0
  %RBP.i583 = bitcast %union.anon* %7893 to i64*
  %7894 = load i64, i64* %RBP.i583
  %7895 = sub i64 %7894, 16
  %7896 = load i64, i64* %PC.i581
  %7897 = add i64 %7896, 4
  store i64 %7897, i64* %PC.i581
  %7898 = inttoptr i64 %7895 to i32*
  %7899 = load i32, i32* %7898
  %7900 = sext i32 %7899 to i64
  store i64 %7900, i64* %RDX.i582, align 8
  store %struct.Memory* %loadMem_40fa79, %struct.Memory** %MEMORY
  %loadMem_40fa7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7902 = getelementptr inbounds %struct.GPR, %struct.GPR* %7901, i32 0, i32 33
  %7903 = getelementptr inbounds %struct.Reg, %struct.Reg* %7902, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %7903 to i64*
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7905 = getelementptr inbounds %struct.GPR, %struct.GPR* %7904, i32 0, i32 1
  %7906 = getelementptr inbounds %struct.Reg, %struct.Reg* %7905, i32 0, i32 0
  %EAX.i578 = bitcast %union.anon* %7906 to i32*
  %7907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7908 = getelementptr inbounds %struct.GPR, %struct.GPR* %7907, i32 0, i32 5
  %7909 = getelementptr inbounds %struct.Reg, %struct.Reg* %7908, i32 0, i32 0
  %RCX.i579 = bitcast %union.anon* %7909 to i64*
  %7910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7911 = getelementptr inbounds %struct.GPR, %struct.GPR* %7910, i32 0, i32 7
  %7912 = getelementptr inbounds %struct.Reg, %struct.Reg* %7911, i32 0, i32 0
  %RDX.i580 = bitcast %union.anon* %7912 to i64*
  %7913 = load i64, i64* %RCX.i579
  %7914 = load i64, i64* %RDX.i580
  %7915 = mul i64 %7914, 4
  %7916 = add i64 %7915, %7913
  %7917 = load i32, i32* %EAX.i578
  %7918 = zext i32 %7917 to i64
  %7919 = load i64, i64* %PC.i577
  %7920 = add i64 %7919, 3
  store i64 %7920, i64* %PC.i577
  %7921 = inttoptr i64 %7916 to i32*
  store i32 %7917, i32* %7921
  store %struct.Memory* %loadMem_40fa7d, %struct.Memory** %MEMORY
  %loadMem_40fa80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7923 = getelementptr inbounds %struct.GPR, %struct.GPR* %7922, i32 0, i32 33
  %7924 = getelementptr inbounds %struct.Reg, %struct.Reg* %7923, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %7924 to i64*
  %7925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7926 = getelementptr inbounds %struct.GPR, %struct.GPR* %7925, i32 0, i32 5
  %7927 = getelementptr inbounds %struct.Reg, %struct.Reg* %7926, i32 0, i32 0
  %RCX.i575 = bitcast %union.anon* %7927 to i64*
  %7928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7929 = getelementptr inbounds %struct.GPR, %struct.GPR* %7928, i32 0, i32 15
  %7930 = getelementptr inbounds %struct.Reg, %struct.Reg* %7929, i32 0, i32 0
  %RBP.i576 = bitcast %union.anon* %7930 to i64*
  %7931 = load i64, i64* %RBP.i576
  %7932 = sub i64 %7931, 12
  %7933 = load i64, i64* %PC.i574
  %7934 = add i64 %7933, 4
  store i64 %7934, i64* %PC.i574
  %7935 = inttoptr i64 %7932 to i32*
  %7936 = load i32, i32* %7935
  %7937 = sext i32 %7936 to i64
  store i64 %7937, i64* %RCX.i575, align 8
  store %struct.Memory* %loadMem_40fa80, %struct.Memory** %MEMORY
  %loadMem_40fa84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7939 = getelementptr inbounds %struct.GPR, %struct.GPR* %7938, i32 0, i32 33
  %7940 = getelementptr inbounds %struct.Reg, %struct.Reg* %7939, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %7940 to i64*
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7942 = getelementptr inbounds %struct.GPR, %struct.GPR* %7941, i32 0, i32 1
  %7943 = getelementptr inbounds %struct.Reg, %struct.Reg* %7942, i32 0, i32 0
  %RAX.i571 = bitcast %union.anon* %7943 to i64*
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7945 = getelementptr inbounds %struct.GPR, %struct.GPR* %7944, i32 0, i32 5
  %7946 = getelementptr inbounds %struct.Reg, %struct.Reg* %7945, i32 0, i32 0
  %RCX.i572 = bitcast %union.anon* %7946 to i64*
  %7947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7948 = getelementptr inbounds %struct.GPR, %struct.GPR* %7947, i32 0, i32 15
  %7949 = getelementptr inbounds %struct.Reg, %struct.Reg* %7948, i32 0, i32 0
  %RBP.i573 = bitcast %union.anon* %7949 to i64*
  %7950 = load i64, i64* %RBP.i573
  %7951 = load i64, i64* %RCX.i572
  %7952 = mul i64 %7951, 4
  %7953 = add i64 %7950, -64
  %7954 = add i64 %7953, %7952
  %7955 = load i64, i64* %PC.i570
  %7956 = add i64 %7955, 4
  store i64 %7956, i64* %PC.i570
  %7957 = inttoptr i64 %7954 to i32*
  %7958 = load i32, i32* %7957
  %7959 = zext i32 %7958 to i64
  store i64 %7959, i64* %RAX.i571, align 8
  store %struct.Memory* %loadMem_40fa84, %struct.Memory** %MEMORY
  %loadMem_40fa88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7961 = getelementptr inbounds %struct.GPR, %struct.GPR* %7960, i32 0, i32 33
  %7962 = getelementptr inbounds %struct.Reg, %struct.Reg* %7961, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %7962 to i64*
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7964 = getelementptr inbounds %struct.GPR, %struct.GPR* %7963, i32 0, i32 5
  %7965 = getelementptr inbounds %struct.Reg, %struct.Reg* %7964, i32 0, i32 0
  %RCX.i568 = bitcast %union.anon* %7965 to i64*
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7967 = getelementptr inbounds %struct.GPR, %struct.GPR* %7966, i32 0, i32 15
  %7968 = getelementptr inbounds %struct.Reg, %struct.Reg* %7967, i32 0, i32 0
  %RBP.i569 = bitcast %union.anon* %7968 to i64*
  %7969 = load i64, i64* %RBP.i569
  %7970 = sub i64 %7969, 20
  %7971 = load i64, i64* %PC.i567
  %7972 = add i64 %7971, 4
  store i64 %7972, i64* %PC.i567
  %7973 = inttoptr i64 %7970 to i32*
  %7974 = load i32, i32* %7973
  %7975 = sext i32 %7974 to i64
  store i64 %7975, i64* %RCX.i568, align 8
  store %struct.Memory* %loadMem_40fa88, %struct.Memory** %MEMORY
  %loadMem_40fa8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7977 = getelementptr inbounds %struct.GPR, %struct.GPR* %7976, i32 0, i32 33
  %7978 = getelementptr inbounds %struct.Reg, %struct.Reg* %7977, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %7978 to i64*
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7980 = getelementptr inbounds %struct.GPR, %struct.GPR* %7979, i32 0, i32 1
  %7981 = getelementptr inbounds %struct.Reg, %struct.Reg* %7980, i32 0, i32 0
  %RAX.i564 = bitcast %union.anon* %7981 to i64*
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7983 = getelementptr inbounds %struct.GPR, %struct.GPR* %7982, i32 0, i32 5
  %7984 = getelementptr inbounds %struct.Reg, %struct.Reg* %7983, i32 0, i32 0
  %RCX.i565 = bitcast %union.anon* %7984 to i64*
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7986 = getelementptr inbounds %struct.GPR, %struct.GPR* %7985, i32 0, i32 15
  %7987 = getelementptr inbounds %struct.Reg, %struct.Reg* %7986, i32 0, i32 0
  %RBP.i566 = bitcast %union.anon* %7987 to i64*
  %7988 = load i64, i64* %RAX.i564
  %7989 = load i64, i64* %RBP.i566
  %7990 = load i64, i64* %RCX.i565
  %7991 = mul i64 %7990, 4
  %7992 = add i64 %7989, -64
  %7993 = add i64 %7992, %7991
  %7994 = load i64, i64* %PC.i563
  %7995 = add i64 %7994, 4
  store i64 %7995, i64* %PC.i563
  %7996 = trunc i64 %7988 to i32
  %7997 = inttoptr i64 %7993 to i32*
  %7998 = load i32, i32* %7997
  %7999 = sub i32 %7996, %7998
  %8000 = zext i32 %7999 to i64
  store i64 %8000, i64* %RAX.i564, align 8
  %8001 = icmp ult i32 %7996, %7998
  %8002 = zext i1 %8001 to i8
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8002, i8* %8003, align 1
  %8004 = and i32 %7999, 255
  %8005 = call i32 @llvm.ctpop.i32(i32 %8004)
  %8006 = trunc i32 %8005 to i8
  %8007 = and i8 %8006, 1
  %8008 = xor i8 %8007, 1
  %8009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8008, i8* %8009, align 1
  %8010 = xor i32 %7998, %7996
  %8011 = xor i32 %8010, %7999
  %8012 = lshr i32 %8011, 4
  %8013 = trunc i32 %8012 to i8
  %8014 = and i8 %8013, 1
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8014, i8* %8015, align 1
  %8016 = icmp eq i32 %7999, 0
  %8017 = zext i1 %8016 to i8
  %8018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8017, i8* %8018, align 1
  %8019 = lshr i32 %7999, 31
  %8020 = trunc i32 %8019 to i8
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8020, i8* %8021, align 1
  %8022 = lshr i32 %7996, 31
  %8023 = lshr i32 %7998, 31
  %8024 = xor i32 %8023, %8022
  %8025 = xor i32 %8019, %8022
  %8026 = add i32 %8025, %8024
  %8027 = icmp eq i32 %8026, 2
  %8028 = zext i1 %8027 to i8
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8028, i8* %8029, align 1
  store %struct.Memory* %loadMem_40fa8c, %struct.Memory** %MEMORY
  %loadMem_40fa90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8031 = getelementptr inbounds %struct.GPR, %struct.GPR* %8030, i32 0, i32 33
  %8032 = getelementptr inbounds %struct.Reg, %struct.Reg* %8031, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %8032 to i64*
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8034 = getelementptr inbounds %struct.GPR, %struct.GPR* %8033, i32 0, i32 5
  %8035 = getelementptr inbounds %struct.Reg, %struct.Reg* %8034, i32 0, i32 0
  %RCX.i562 = bitcast %union.anon* %8035 to i64*
  %8036 = load i64, i64* %PC.i561
  %8037 = add i64 %8036, 8
  store i64 %8037, i64* %PC.i561
  %8038 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8038, i64* %RCX.i562, align 8
  store %struct.Memory* %loadMem_40fa90, %struct.Memory** %MEMORY
  %loadMem_40fa98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8040 = getelementptr inbounds %struct.GPR, %struct.GPR* %8039, i32 0, i32 33
  %8041 = getelementptr inbounds %struct.Reg, %struct.Reg* %8040, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %8041 to i64*
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8043 = getelementptr inbounds %struct.GPR, %struct.GPR* %8042, i32 0, i32 5
  %8044 = getelementptr inbounds %struct.Reg, %struct.Reg* %8043, i32 0, i32 0
  %RCX.i560 = bitcast %union.anon* %8044 to i64*
  %8045 = load i64, i64* %RCX.i560
  %8046 = load i64, i64* %PC.i559
  %8047 = add i64 %8046, 7
  store i64 %8047, i64* %PC.i559
  %8048 = add i64 13112, %8045
  store i64 %8048, i64* %RCX.i560, align 8
  %8049 = icmp ult i64 %8048, %8045
  %8050 = icmp ult i64 %8048, 13112
  %8051 = or i1 %8049, %8050
  %8052 = zext i1 %8051 to i8
  %8053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8052, i8* %8053, align 1
  %8054 = trunc i64 %8048 to i32
  %8055 = and i32 %8054, 255
  %8056 = call i32 @llvm.ctpop.i32(i32 %8055)
  %8057 = trunc i32 %8056 to i8
  %8058 = and i8 %8057, 1
  %8059 = xor i8 %8058, 1
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8059, i8* %8060, align 1
  %8061 = xor i64 13112, %8045
  %8062 = xor i64 %8061, %8048
  %8063 = lshr i64 %8062, 4
  %8064 = trunc i64 %8063 to i8
  %8065 = and i8 %8064, 1
  %8066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8065, i8* %8066, align 1
  %8067 = icmp eq i64 %8048, 0
  %8068 = zext i1 %8067 to i8
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8068, i8* %8069, align 1
  %8070 = lshr i64 %8048, 63
  %8071 = trunc i64 %8070 to i8
  %8072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8071, i8* %8072, align 1
  %8073 = lshr i64 %8045, 63
  %8074 = xor i64 %8070, %8073
  %8075 = add i64 %8074, %8070
  %8076 = icmp eq i64 %8075, 2
  %8077 = zext i1 %8076 to i8
  %8078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8077, i8* %8078, align 1
  store %struct.Memory* %loadMem_40fa98, %struct.Memory** %MEMORY
  %loadMem_40fa9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8080 = getelementptr inbounds %struct.GPR, %struct.GPR* %8079, i32 0, i32 33
  %8081 = getelementptr inbounds %struct.Reg, %struct.Reg* %8080, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %8081 to i64*
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8083 = getelementptr inbounds %struct.GPR, %struct.GPR* %8082, i32 0, i32 7
  %8084 = getelementptr inbounds %struct.Reg, %struct.Reg* %8083, i32 0, i32 0
  %RDX.i557 = bitcast %union.anon* %8084 to i64*
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8086 = getelementptr inbounds %struct.GPR, %struct.GPR* %8085, i32 0, i32 15
  %8087 = getelementptr inbounds %struct.Reg, %struct.Reg* %8086, i32 0, i32 0
  %RBP.i558 = bitcast %union.anon* %8087 to i64*
  %8088 = load i64, i64* %RBP.i558
  %8089 = sub i64 %8088, 20
  %8090 = load i64, i64* %PC.i556
  %8091 = add i64 %8090, 4
  store i64 %8091, i64* %PC.i556
  %8092 = inttoptr i64 %8089 to i32*
  %8093 = load i32, i32* %8092
  %8094 = sext i32 %8093 to i64
  store i64 %8094, i64* %RDX.i557, align 8
  store %struct.Memory* %loadMem_40fa9f, %struct.Memory** %MEMORY
  %loadMem_40faa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8096 = getelementptr inbounds %struct.GPR, %struct.GPR* %8095, i32 0, i32 33
  %8097 = getelementptr inbounds %struct.Reg, %struct.Reg* %8096, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %8097 to i64*
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8099 = getelementptr inbounds %struct.GPR, %struct.GPR* %8098, i32 0, i32 7
  %8100 = getelementptr inbounds %struct.Reg, %struct.Reg* %8099, i32 0, i32 0
  %RDX.i555 = bitcast %union.anon* %8100 to i64*
  %8101 = load i64, i64* %RDX.i555
  %8102 = load i64, i64* %PC.i554
  %8103 = add i64 %8102, 4
  store i64 %8103, i64* %PC.i554
  %8104 = shl i64 %8101, 5
  %8105 = icmp slt i64 %8104, 0
  %8106 = shl i64 %8104, 1
  store i64 %8106, i64* %RDX.i555, align 8
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8108 = zext i1 %8105 to i8
  store i8 %8108, i8* %8107, align 1
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8110 = trunc i64 %8106 to i32
  %8111 = and i32 %8110, 254
  %8112 = call i32 @llvm.ctpop.i32(i32 %8111)
  %8113 = trunc i32 %8112 to i8
  %8114 = and i8 %8113, 1
  %8115 = xor i8 %8114, 1
  store i8 %8115, i8* %8109, align 1
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8116, align 1
  %8117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8118 = icmp eq i64 %8106, 0
  %8119 = zext i1 %8118 to i8
  store i8 %8119, i8* %8117, align 1
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8121 = lshr i64 %8106, 63
  %8122 = trunc i64 %8121 to i8
  store i8 %8122, i8* %8120, align 1
  %8123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8123, align 1
  store %struct.Memory* %loadMem_40faa3, %struct.Memory** %MEMORY
  %loadMem_40faa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8125 = getelementptr inbounds %struct.GPR, %struct.GPR* %8124, i32 0, i32 33
  %8126 = getelementptr inbounds %struct.Reg, %struct.Reg* %8125, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %8126 to i64*
  %8127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8128 = getelementptr inbounds %struct.GPR, %struct.GPR* %8127, i32 0, i32 5
  %8129 = getelementptr inbounds %struct.Reg, %struct.Reg* %8128, i32 0, i32 0
  %RCX.i552 = bitcast %union.anon* %8129 to i64*
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8131 = getelementptr inbounds %struct.GPR, %struct.GPR* %8130, i32 0, i32 7
  %8132 = getelementptr inbounds %struct.Reg, %struct.Reg* %8131, i32 0, i32 0
  %RDX.i553 = bitcast %union.anon* %8132 to i64*
  %8133 = load i64, i64* %RCX.i552
  %8134 = load i64, i64* %RDX.i553
  %8135 = load i64, i64* %PC.i551
  %8136 = add i64 %8135, 3
  store i64 %8136, i64* %PC.i551
  %8137 = add i64 %8134, %8133
  store i64 %8137, i64* %RCX.i552, align 8
  %8138 = icmp ult i64 %8137, %8133
  %8139 = icmp ult i64 %8137, %8134
  %8140 = or i1 %8138, %8139
  %8141 = zext i1 %8140 to i8
  %8142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8141, i8* %8142, align 1
  %8143 = trunc i64 %8137 to i32
  %8144 = and i32 %8143, 255
  %8145 = call i32 @llvm.ctpop.i32(i32 %8144)
  %8146 = trunc i32 %8145 to i8
  %8147 = and i8 %8146, 1
  %8148 = xor i8 %8147, 1
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8148, i8* %8149, align 1
  %8150 = xor i64 %8134, %8133
  %8151 = xor i64 %8150, %8137
  %8152 = lshr i64 %8151, 4
  %8153 = trunc i64 %8152 to i8
  %8154 = and i8 %8153, 1
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8154, i8* %8155, align 1
  %8156 = icmp eq i64 %8137, 0
  %8157 = zext i1 %8156 to i8
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8157, i8* %8158, align 1
  %8159 = lshr i64 %8137, 63
  %8160 = trunc i64 %8159 to i8
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8160, i8* %8161, align 1
  %8162 = lshr i64 %8133, 63
  %8163 = lshr i64 %8134, 63
  %8164 = xor i64 %8159, %8162
  %8165 = xor i64 %8159, %8163
  %8166 = add i64 %8164, %8165
  %8167 = icmp eq i64 %8166, 2
  %8168 = zext i1 %8167 to i8
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8168, i8* %8169, align 1
  store %struct.Memory* %loadMem_40faa7, %struct.Memory** %MEMORY
  %loadMem_40faaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8171 = getelementptr inbounds %struct.GPR, %struct.GPR* %8170, i32 0, i32 33
  %8172 = getelementptr inbounds %struct.Reg, %struct.Reg* %8171, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %8172 to i64*
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8174 = getelementptr inbounds %struct.GPR, %struct.GPR* %8173, i32 0, i32 7
  %8175 = getelementptr inbounds %struct.Reg, %struct.Reg* %8174, i32 0, i32 0
  %RDX.i549 = bitcast %union.anon* %8175 to i64*
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8177 = getelementptr inbounds %struct.GPR, %struct.GPR* %8176, i32 0, i32 15
  %8178 = getelementptr inbounds %struct.Reg, %struct.Reg* %8177, i32 0, i32 0
  %RBP.i550 = bitcast %union.anon* %8178 to i64*
  %8179 = load i64, i64* %RBP.i550
  %8180 = sub i64 %8179, 16
  %8181 = load i64, i64* %PC.i548
  %8182 = add i64 %8181, 4
  store i64 %8182, i64* %PC.i548
  %8183 = inttoptr i64 %8180 to i32*
  %8184 = load i32, i32* %8183
  %8185 = sext i32 %8184 to i64
  store i64 %8185, i64* %RDX.i549, align 8
  store %struct.Memory* %loadMem_40faaa, %struct.Memory** %MEMORY
  %loadMem_40faae = load %struct.Memory*, %struct.Memory** %MEMORY
  %8186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8187 = getelementptr inbounds %struct.GPR, %struct.GPR* %8186, i32 0, i32 33
  %8188 = getelementptr inbounds %struct.Reg, %struct.Reg* %8187, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %8188 to i64*
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8190 = getelementptr inbounds %struct.GPR, %struct.GPR* %8189, i32 0, i32 1
  %8191 = getelementptr inbounds %struct.Reg, %struct.Reg* %8190, i32 0, i32 0
  %EAX.i545 = bitcast %union.anon* %8191 to i32*
  %8192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8193 = getelementptr inbounds %struct.GPR, %struct.GPR* %8192, i32 0, i32 5
  %8194 = getelementptr inbounds %struct.Reg, %struct.Reg* %8193, i32 0, i32 0
  %RCX.i546 = bitcast %union.anon* %8194 to i64*
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8196 = getelementptr inbounds %struct.GPR, %struct.GPR* %8195, i32 0, i32 7
  %8197 = getelementptr inbounds %struct.Reg, %struct.Reg* %8196, i32 0, i32 0
  %RDX.i547 = bitcast %union.anon* %8197 to i64*
  %8198 = load i64, i64* %RCX.i546
  %8199 = load i64, i64* %RDX.i547
  %8200 = mul i64 %8199, 4
  %8201 = add i64 %8200, %8198
  %8202 = load i32, i32* %EAX.i545
  %8203 = zext i32 %8202 to i64
  %8204 = load i64, i64* %PC.i544
  %8205 = add i64 %8204, 3
  store i64 %8205, i64* %PC.i544
  %8206 = inttoptr i64 %8201 to i32*
  store i32 %8202, i32* %8206
  store %struct.Memory* %loadMem_40faae, %struct.Memory** %MEMORY
  %loadMem_40fab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8208 = getelementptr inbounds %struct.GPR, %struct.GPR* %8207, i32 0, i32 33
  %8209 = getelementptr inbounds %struct.Reg, %struct.Reg* %8208, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %8209 to i64*
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8211 = getelementptr inbounds %struct.GPR, %struct.GPR* %8210, i32 0, i32 1
  %8212 = getelementptr inbounds %struct.Reg, %struct.Reg* %8211, i32 0, i32 0
  %RAX.i542 = bitcast %union.anon* %8212 to i64*
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 15
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %RBP.i543 = bitcast %union.anon* %8215 to i64*
  %8216 = load i64, i64* %RBP.i543
  %8217 = sub i64 %8216, 12
  %8218 = load i64, i64* %PC.i541
  %8219 = add i64 %8218, 3
  store i64 %8219, i64* %PC.i541
  %8220 = inttoptr i64 %8217 to i32*
  %8221 = load i32, i32* %8220
  %8222 = zext i32 %8221 to i64
  store i64 %8222, i64* %RAX.i542, align 8
  store %struct.Memory* %loadMem_40fab1, %struct.Memory** %MEMORY
  %loadMem_40fab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8224 = getelementptr inbounds %struct.GPR, %struct.GPR* %8223, i32 0, i32 33
  %8225 = getelementptr inbounds %struct.Reg, %struct.Reg* %8224, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %8225 to i64*
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8227 = getelementptr inbounds %struct.GPR, %struct.GPR* %8226, i32 0, i32 1
  %8228 = getelementptr inbounds %struct.Reg, %struct.Reg* %8227, i32 0, i32 0
  %RAX.i540 = bitcast %union.anon* %8228 to i64*
  %8229 = load i64, i64* %RAX.i540
  %8230 = load i64, i64* %PC.i539
  %8231 = add i64 %8230, 3
  store i64 %8231, i64* %PC.i539
  %8232 = trunc i64 %8229 to i32
  %8233 = add i32 1, %8232
  %8234 = zext i32 %8233 to i64
  store i64 %8234, i64* %RAX.i540, align 8
  %8235 = icmp ult i32 %8233, %8232
  %8236 = icmp ult i32 %8233, 1
  %8237 = or i1 %8235, %8236
  %8238 = zext i1 %8237 to i8
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8238, i8* %8239, align 1
  %8240 = and i32 %8233, 255
  %8241 = call i32 @llvm.ctpop.i32(i32 %8240)
  %8242 = trunc i32 %8241 to i8
  %8243 = and i8 %8242, 1
  %8244 = xor i8 %8243, 1
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8244, i8* %8245, align 1
  %8246 = xor i64 1, %8229
  %8247 = trunc i64 %8246 to i32
  %8248 = xor i32 %8247, %8233
  %8249 = lshr i32 %8248, 4
  %8250 = trunc i32 %8249 to i8
  %8251 = and i8 %8250, 1
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8251, i8* %8252, align 1
  %8253 = icmp eq i32 %8233, 0
  %8254 = zext i1 %8253 to i8
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8254, i8* %8255, align 1
  %8256 = lshr i32 %8233, 31
  %8257 = trunc i32 %8256 to i8
  %8258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8257, i8* %8258, align 1
  %8259 = lshr i32 %8232, 31
  %8260 = xor i32 %8256, %8259
  %8261 = add i32 %8260, %8256
  %8262 = icmp eq i32 %8261, 2
  %8263 = zext i1 %8262 to i8
  %8264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8263, i8* %8264, align 1
  store %struct.Memory* %loadMem_40fab4, %struct.Memory** %MEMORY
  %loadMem_40fab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8266 = getelementptr inbounds %struct.GPR, %struct.GPR* %8265, i32 0, i32 33
  %8267 = getelementptr inbounds %struct.Reg, %struct.Reg* %8266, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %8267 to i64*
  %8268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8269 = getelementptr inbounds %struct.GPR, %struct.GPR* %8268, i32 0, i32 1
  %8270 = getelementptr inbounds %struct.Reg, %struct.Reg* %8269, i32 0, i32 0
  %EAX.i537 = bitcast %union.anon* %8270 to i32*
  %8271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8272 = getelementptr inbounds %struct.GPR, %struct.GPR* %8271, i32 0, i32 15
  %8273 = getelementptr inbounds %struct.Reg, %struct.Reg* %8272, i32 0, i32 0
  %RBP.i538 = bitcast %union.anon* %8273 to i64*
  %8274 = load i64, i64* %RBP.i538
  %8275 = sub i64 %8274, 12
  %8276 = load i32, i32* %EAX.i537
  %8277 = zext i32 %8276 to i64
  %8278 = load i64, i64* %PC.i536
  %8279 = add i64 %8278, 3
  store i64 %8279, i64* %PC.i536
  %8280 = inttoptr i64 %8275 to i32*
  store i32 %8276, i32* %8280
  store %struct.Memory* %loadMem_40fab7, %struct.Memory** %MEMORY
  %loadMem_40faba = load %struct.Memory*, %struct.Memory** %MEMORY
  %8281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8282 = getelementptr inbounds %struct.GPR, %struct.GPR* %8281, i32 0, i32 33
  %8283 = getelementptr inbounds %struct.Reg, %struct.Reg* %8282, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %8283 to i64*
  %8284 = load i64, i64* %PC.i535
  %8285 = add i64 %8284, -128
  %8286 = load i64, i64* %PC.i535
  %8287 = add i64 %8286, 5
  store i64 %8287, i64* %PC.i535
  %8288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8285, i64* %8288, align 8
  store %struct.Memory* %loadMem_40faba, %struct.Memory** %MEMORY
  br label %block_.L_40fa3a

block_.L_40fabf:                                  ; preds = %block_.L_40fa3a
  %loadMem_40fabf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8290 = getelementptr inbounds %struct.GPR, %struct.GPR* %8289, i32 0, i32 33
  %8291 = getelementptr inbounds %struct.Reg, %struct.Reg* %8290, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %8291 to i64*
  %8292 = load i64, i64* %PC.i534
  %8293 = add i64 %8292, 5
  %8294 = load i64, i64* %PC.i534
  %8295 = add i64 %8294, 5
  store i64 %8295, i64* %PC.i534
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8293, i64* %8296, align 8
  store %struct.Memory* %loadMem_40fabf, %struct.Memory** %MEMORY
  br label %block_.L_40fac4

block_.L_40fac4:                                  ; preds = %block_.L_40fabf
  %loadMem_40fac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8298 = getelementptr inbounds %struct.GPR, %struct.GPR* %8297, i32 0, i32 33
  %8299 = getelementptr inbounds %struct.Reg, %struct.Reg* %8298, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %8299 to i64*
  %8300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8301 = getelementptr inbounds %struct.GPR, %struct.GPR* %8300, i32 0, i32 1
  %8302 = getelementptr inbounds %struct.Reg, %struct.Reg* %8301, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %8302 to i64*
  %8303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8304 = getelementptr inbounds %struct.GPR, %struct.GPR* %8303, i32 0, i32 15
  %8305 = getelementptr inbounds %struct.Reg, %struct.Reg* %8304, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %8305 to i64*
  %8306 = load i64, i64* %RBP.i533
  %8307 = sub i64 %8306, 16
  %8308 = load i64, i64* %PC.i531
  %8309 = add i64 %8308, 3
  store i64 %8309, i64* %PC.i531
  %8310 = inttoptr i64 %8307 to i32*
  %8311 = load i32, i32* %8310
  %8312 = zext i32 %8311 to i64
  store i64 %8312, i64* %RAX.i532, align 8
  store %struct.Memory* %loadMem_40fac4, %struct.Memory** %MEMORY
  %loadMem_40fac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8314 = getelementptr inbounds %struct.GPR, %struct.GPR* %8313, i32 0, i32 33
  %8315 = getelementptr inbounds %struct.Reg, %struct.Reg* %8314, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %8315 to i64*
  %8316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8317 = getelementptr inbounds %struct.GPR, %struct.GPR* %8316, i32 0, i32 1
  %8318 = getelementptr inbounds %struct.Reg, %struct.Reg* %8317, i32 0, i32 0
  %RAX.i530 = bitcast %union.anon* %8318 to i64*
  %8319 = load i64, i64* %RAX.i530
  %8320 = load i64, i64* %PC.i529
  %8321 = add i64 %8320, 3
  store i64 %8321, i64* %PC.i529
  %8322 = trunc i64 %8319 to i32
  %8323 = add i32 1, %8322
  %8324 = zext i32 %8323 to i64
  store i64 %8324, i64* %RAX.i530, align 8
  %8325 = icmp ult i32 %8323, %8322
  %8326 = icmp ult i32 %8323, 1
  %8327 = or i1 %8325, %8326
  %8328 = zext i1 %8327 to i8
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8328, i8* %8329, align 1
  %8330 = and i32 %8323, 255
  %8331 = call i32 @llvm.ctpop.i32(i32 %8330)
  %8332 = trunc i32 %8331 to i8
  %8333 = and i8 %8332, 1
  %8334 = xor i8 %8333, 1
  %8335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8334, i8* %8335, align 1
  %8336 = xor i64 1, %8319
  %8337 = trunc i64 %8336 to i32
  %8338 = xor i32 %8337, %8323
  %8339 = lshr i32 %8338, 4
  %8340 = trunc i32 %8339 to i8
  %8341 = and i8 %8340, 1
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8341, i8* %8342, align 1
  %8343 = icmp eq i32 %8323, 0
  %8344 = zext i1 %8343 to i8
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8344, i8* %8345, align 1
  %8346 = lshr i32 %8323, 31
  %8347 = trunc i32 %8346 to i8
  %8348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8347, i8* %8348, align 1
  %8349 = lshr i32 %8322, 31
  %8350 = xor i32 %8346, %8349
  %8351 = add i32 %8350, %8346
  %8352 = icmp eq i32 %8351, 2
  %8353 = zext i1 %8352 to i8
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8353, i8* %8354, align 1
  store %struct.Memory* %loadMem_40fac7, %struct.Memory** %MEMORY
  %loadMem_40faca = load %struct.Memory*, %struct.Memory** %MEMORY
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8356 = getelementptr inbounds %struct.GPR, %struct.GPR* %8355, i32 0, i32 33
  %8357 = getelementptr inbounds %struct.Reg, %struct.Reg* %8356, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %8357 to i64*
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8359 = getelementptr inbounds %struct.GPR, %struct.GPR* %8358, i32 0, i32 1
  %8360 = getelementptr inbounds %struct.Reg, %struct.Reg* %8359, i32 0, i32 0
  %EAX.i527 = bitcast %union.anon* %8360 to i32*
  %8361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8362 = getelementptr inbounds %struct.GPR, %struct.GPR* %8361, i32 0, i32 15
  %8363 = getelementptr inbounds %struct.Reg, %struct.Reg* %8362, i32 0, i32 0
  %RBP.i528 = bitcast %union.anon* %8363 to i64*
  %8364 = load i64, i64* %RBP.i528
  %8365 = sub i64 %8364, 16
  %8366 = load i32, i32* %EAX.i527
  %8367 = zext i32 %8366 to i64
  %8368 = load i64, i64* %PC.i526
  %8369 = add i64 %8368, 3
  store i64 %8369, i64* %PC.i526
  %8370 = inttoptr i64 %8365 to i32*
  store i32 %8366, i32* %8370
  store %struct.Memory* %loadMem_40faca, %struct.Memory** %MEMORY
  %loadMem_40facd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8372 = getelementptr inbounds %struct.GPR, %struct.GPR* %8371, i32 0, i32 33
  %8373 = getelementptr inbounds %struct.Reg, %struct.Reg* %8372, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %8373 to i64*
  %8374 = load i64, i64* %PC.i525
  %8375 = add i64 %8374, -279
  %8376 = load i64, i64* %PC.i525
  %8377 = add i64 %8376, 5
  store i64 %8377, i64* %PC.i525
  %8378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8375, i64* %8378, align 8
  store %struct.Memory* %loadMem_40facd, %struct.Memory** %MEMORY
  br label %block_.L_40f9b6

block_.L_40fad2:                                  ; preds = %block_.L_40f9b6
  %loadMem_40fad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8380 = getelementptr inbounds %struct.GPR, %struct.GPR* %8379, i32 0, i32 33
  %8381 = getelementptr inbounds %struct.Reg, %struct.Reg* %8380, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %8381 to i64*
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8383 = getelementptr inbounds %struct.GPR, %struct.GPR* %8382, i32 0, i32 15
  %8384 = getelementptr inbounds %struct.Reg, %struct.Reg* %8383, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %8384 to i64*
  %8385 = load i64, i64* %RBP.i524
  %8386 = sub i64 %8385, 12
  %8387 = load i64, i64* %PC.i523
  %8388 = add i64 %8387, 7
  store i64 %8388, i64* %PC.i523
  %8389 = inttoptr i64 %8386 to i32*
  store i32 0, i32* %8389
  store %struct.Memory* %loadMem_40fad2, %struct.Memory** %MEMORY
  br label %block_.L_40fad9

block_.L_40fad9:                                  ; preds = %block_.L_40fd91, %block_.L_40fad2
  %loadMem_40fad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8391 = getelementptr inbounds %struct.GPR, %struct.GPR* %8390, i32 0, i32 33
  %8392 = getelementptr inbounds %struct.Reg, %struct.Reg* %8391, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %8392 to i64*
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8394 = getelementptr inbounds %struct.GPR, %struct.GPR* %8393, i32 0, i32 15
  %8395 = getelementptr inbounds %struct.Reg, %struct.Reg* %8394, i32 0, i32 0
  %RBP.i522 = bitcast %union.anon* %8395 to i64*
  %8396 = load i64, i64* %RBP.i522
  %8397 = sub i64 %8396, 12
  %8398 = load i64, i64* %PC.i521
  %8399 = add i64 %8398, 4
  store i64 %8399, i64* %PC.i521
  %8400 = inttoptr i64 %8397 to i32*
  %8401 = load i32, i32* %8400
  %8402 = sub i32 %8401, 4
  %8403 = icmp ult i32 %8401, 4
  %8404 = zext i1 %8403 to i8
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8404, i8* %8405, align 1
  %8406 = and i32 %8402, 255
  %8407 = call i32 @llvm.ctpop.i32(i32 %8406)
  %8408 = trunc i32 %8407 to i8
  %8409 = and i8 %8408, 1
  %8410 = xor i8 %8409, 1
  %8411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8410, i8* %8411, align 1
  %8412 = xor i32 %8401, 4
  %8413 = xor i32 %8412, %8402
  %8414 = lshr i32 %8413, 4
  %8415 = trunc i32 %8414 to i8
  %8416 = and i8 %8415, 1
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8416, i8* %8417, align 1
  %8418 = icmp eq i32 %8402, 0
  %8419 = zext i1 %8418 to i8
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8419, i8* %8420, align 1
  %8421 = lshr i32 %8402, 31
  %8422 = trunc i32 %8421 to i8
  %8423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8422, i8* %8423, align 1
  %8424 = lshr i32 %8401, 31
  %8425 = xor i32 %8421, %8424
  %8426 = add i32 %8425, %8424
  %8427 = icmp eq i32 %8426, 2
  %8428 = zext i1 %8427 to i8
  %8429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8428, i8* %8429, align 1
  store %struct.Memory* %loadMem_40fad9, %struct.Memory** %MEMORY
  %loadMem_40fadd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 33
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %8432 to i64*
  %8433 = load i64, i64* %PC.i520
  %8434 = add i64 %8433, 706
  %8435 = load i64, i64* %PC.i520
  %8436 = add i64 %8435, 6
  %8437 = load i64, i64* %PC.i520
  %8438 = add i64 %8437, 6
  store i64 %8438, i64* %PC.i520
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8440 = load i8, i8* %8439, align 1
  %8441 = icmp ne i8 %8440, 0
  %8442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8443 = load i8, i8* %8442, align 1
  %8444 = icmp ne i8 %8443, 0
  %8445 = xor i1 %8441, %8444
  %8446 = xor i1 %8445, true
  %8447 = zext i1 %8446 to i8
  store i8 %8447, i8* %BRANCH_TAKEN, align 1
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8449 = select i1 %8445, i64 %8436, i64 %8434
  store i64 %8449, i64* %8448, align 8
  store %struct.Memory* %loadMem_40fadd, %struct.Memory** %MEMORY
  %loadBr_40fadd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fadd = icmp eq i8 %loadBr_40fadd, 1
  br i1 %cmpBr_40fadd, label %block_.L_40fd9f, label %block_40fae3

block_40fae3:                                     ; preds = %block_.L_40fad9
  %loadMem_40fae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8451 = getelementptr inbounds %struct.GPR, %struct.GPR* %8450, i32 0, i32 33
  %8452 = getelementptr inbounds %struct.Reg, %struct.Reg* %8451, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %8452 to i64*
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8454 = getelementptr inbounds %struct.GPR, %struct.GPR* %8453, i32 0, i32 15
  %8455 = getelementptr inbounds %struct.Reg, %struct.Reg* %8454, i32 0, i32 0
  %RBP.i519 = bitcast %union.anon* %8455 to i64*
  %8456 = load i64, i64* %RBP.i519
  %8457 = sub i64 %8456, 16
  %8458 = load i64, i64* %PC.i518
  %8459 = add i64 %8458, 7
  store i64 %8459, i64* %PC.i518
  %8460 = inttoptr i64 %8457 to i32*
  store i32 0, i32* %8460
  store %struct.Memory* %loadMem_40fae3, %struct.Memory** %MEMORY
  br label %block_.L_40faea

block_.L_40faea:                                  ; preds = %block_40faf4, %block_40fae3
  %loadMem_40faea = load %struct.Memory*, %struct.Memory** %MEMORY
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8462 = getelementptr inbounds %struct.GPR, %struct.GPR* %8461, i32 0, i32 33
  %8463 = getelementptr inbounds %struct.Reg, %struct.Reg* %8462, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %8463 to i64*
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8465 = getelementptr inbounds %struct.GPR, %struct.GPR* %8464, i32 0, i32 15
  %8466 = getelementptr inbounds %struct.Reg, %struct.Reg* %8465, i32 0, i32 0
  %RBP.i517 = bitcast %union.anon* %8466 to i64*
  %8467 = load i64, i64* %RBP.i517
  %8468 = sub i64 %8467, 16
  %8469 = load i64, i64* %PC.i516
  %8470 = add i64 %8469, 4
  store i64 %8470, i64* %PC.i516
  %8471 = inttoptr i64 %8468 to i32*
  %8472 = load i32, i32* %8471
  %8473 = sub i32 %8472, 4
  %8474 = icmp ult i32 %8472, 4
  %8475 = zext i1 %8474 to i8
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8475, i8* %8476, align 1
  %8477 = and i32 %8473, 255
  %8478 = call i32 @llvm.ctpop.i32(i32 %8477)
  %8479 = trunc i32 %8478 to i8
  %8480 = and i8 %8479, 1
  %8481 = xor i8 %8480, 1
  %8482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8481, i8* %8482, align 1
  %8483 = xor i32 %8472, 4
  %8484 = xor i32 %8483, %8473
  %8485 = lshr i32 %8484, 4
  %8486 = trunc i32 %8485 to i8
  %8487 = and i8 %8486, 1
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8487, i8* %8488, align 1
  %8489 = icmp eq i32 %8473, 0
  %8490 = zext i1 %8489 to i8
  %8491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8490, i8* %8491, align 1
  %8492 = lshr i32 %8473, 31
  %8493 = trunc i32 %8492 to i8
  %8494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8493, i8* %8494, align 1
  %8495 = lshr i32 %8472, 31
  %8496 = xor i32 %8492, %8495
  %8497 = add i32 %8496, %8495
  %8498 = icmp eq i32 %8497, 2
  %8499 = zext i1 %8498 to i8
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8499, i8* %8500, align 1
  store %struct.Memory* %loadMem_40faea, %struct.Memory** %MEMORY
  %loadMem_40faee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8502 = getelementptr inbounds %struct.GPR, %struct.GPR* %8501, i32 0, i32 33
  %8503 = getelementptr inbounds %struct.Reg, %struct.Reg* %8502, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %8503 to i64*
  %8504 = load i64, i64* %PC.i515
  %8505 = add i64 %8504, 60
  %8506 = load i64, i64* %PC.i515
  %8507 = add i64 %8506, 6
  %8508 = load i64, i64* %PC.i515
  %8509 = add i64 %8508, 6
  store i64 %8509, i64* %PC.i515
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8511 = load i8, i8* %8510, align 1
  %8512 = icmp ne i8 %8511, 0
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8514 = load i8, i8* %8513, align 1
  %8515 = icmp ne i8 %8514, 0
  %8516 = xor i1 %8512, %8515
  %8517 = xor i1 %8516, true
  %8518 = zext i1 %8517 to i8
  store i8 %8518, i8* %BRANCH_TAKEN, align 1
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8520 = select i1 %8516, i64 %8507, i64 %8505
  store i64 %8520, i64* %8519, align 8
  store %struct.Memory* %loadMem_40faee, %struct.Memory** %MEMORY
  %loadBr_40faee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40faee = icmp eq i8 %loadBr_40faee, 1
  br i1 %cmpBr_40faee, label %block_.L_40fb2a, label %block_40faf4

block_40faf4:                                     ; preds = %block_.L_40faea
  %loadMem_40faf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8522 = getelementptr inbounds %struct.GPR, %struct.GPR* %8521, i32 0, i32 33
  %8523 = getelementptr inbounds %struct.Reg, %struct.Reg* %8522, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %8523 to i64*
  %8524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8525 = getelementptr inbounds %struct.GPR, %struct.GPR* %8524, i32 0, i32 1
  %8526 = getelementptr inbounds %struct.Reg, %struct.Reg* %8525, i32 0, i32 0
  %RAX.i514 = bitcast %union.anon* %8526 to i64*
  %8527 = load i64, i64* %PC.i513
  %8528 = add i64 %8527, 8
  store i64 %8528, i64* %PC.i513
  %8529 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8529, i64* %RAX.i514, align 8
  store %struct.Memory* %loadMem_40faf4, %struct.Memory** %MEMORY
  %loadMem_40fafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8531 = getelementptr inbounds %struct.GPR, %struct.GPR* %8530, i32 0, i32 33
  %8532 = getelementptr inbounds %struct.Reg, %struct.Reg* %8531, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %8532 to i64*
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8534 = getelementptr inbounds %struct.GPR, %struct.GPR* %8533, i32 0, i32 1
  %8535 = getelementptr inbounds %struct.Reg, %struct.Reg* %8534, i32 0, i32 0
  %RAX.i512 = bitcast %union.anon* %8535 to i64*
  %8536 = load i64, i64* %RAX.i512
  %8537 = load i64, i64* %PC.i511
  %8538 = add i64 %8537, 6
  store i64 %8538, i64* %PC.i511
  %8539 = add i64 13112, %8536
  store i64 %8539, i64* %RAX.i512, align 8
  %8540 = icmp ult i64 %8539, %8536
  %8541 = icmp ult i64 %8539, 13112
  %8542 = or i1 %8540, %8541
  %8543 = zext i1 %8542 to i8
  %8544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8543, i8* %8544, align 1
  %8545 = trunc i64 %8539 to i32
  %8546 = and i32 %8545, 255
  %8547 = call i32 @llvm.ctpop.i32(i32 %8546)
  %8548 = trunc i32 %8547 to i8
  %8549 = and i8 %8548, 1
  %8550 = xor i8 %8549, 1
  %8551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8550, i8* %8551, align 1
  %8552 = xor i64 13112, %8536
  %8553 = xor i64 %8552, %8539
  %8554 = lshr i64 %8553, 4
  %8555 = trunc i64 %8554 to i8
  %8556 = and i8 %8555, 1
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8556, i8* %8557, align 1
  %8558 = icmp eq i64 %8539, 0
  %8559 = zext i1 %8558 to i8
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8559, i8* %8560, align 1
  %8561 = lshr i64 %8539, 63
  %8562 = trunc i64 %8561 to i8
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8562, i8* %8563, align 1
  %8564 = lshr i64 %8536, 63
  %8565 = xor i64 %8561, %8564
  %8566 = add i64 %8565, %8561
  %8567 = icmp eq i64 %8566, 2
  %8568 = zext i1 %8567 to i8
  %8569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8568, i8* %8569, align 1
  store %struct.Memory* %loadMem_40fafc, %struct.Memory** %MEMORY
  %loadMem_40fb02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8571 = getelementptr inbounds %struct.GPR, %struct.GPR* %8570, i32 0, i32 33
  %8572 = getelementptr inbounds %struct.Reg, %struct.Reg* %8571, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %8572 to i64*
  %8573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8574 = getelementptr inbounds %struct.GPR, %struct.GPR* %8573, i32 0, i32 5
  %8575 = getelementptr inbounds %struct.Reg, %struct.Reg* %8574, i32 0, i32 0
  %RCX.i509 = bitcast %union.anon* %8575 to i64*
  %8576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8577 = getelementptr inbounds %struct.GPR, %struct.GPR* %8576, i32 0, i32 15
  %8578 = getelementptr inbounds %struct.Reg, %struct.Reg* %8577, i32 0, i32 0
  %RBP.i510 = bitcast %union.anon* %8578 to i64*
  %8579 = load i64, i64* %RBP.i510
  %8580 = sub i64 %8579, 12
  %8581 = load i64, i64* %PC.i508
  %8582 = add i64 %8581, 4
  store i64 %8582, i64* %PC.i508
  %8583 = inttoptr i64 %8580 to i32*
  %8584 = load i32, i32* %8583
  %8585 = sext i32 %8584 to i64
  store i64 %8585, i64* %RCX.i509, align 8
  store %struct.Memory* %loadMem_40fb02, %struct.Memory** %MEMORY
  %loadMem_40fb06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8587 = getelementptr inbounds %struct.GPR, %struct.GPR* %8586, i32 0, i32 33
  %8588 = getelementptr inbounds %struct.Reg, %struct.Reg* %8587, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %8588 to i64*
  %8589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8590 = getelementptr inbounds %struct.GPR, %struct.GPR* %8589, i32 0, i32 5
  %8591 = getelementptr inbounds %struct.Reg, %struct.Reg* %8590, i32 0, i32 0
  %RCX.i507 = bitcast %union.anon* %8591 to i64*
  %8592 = load i64, i64* %RCX.i507
  %8593 = load i64, i64* %PC.i506
  %8594 = add i64 %8593, 4
  store i64 %8594, i64* %PC.i506
  %8595 = shl i64 %8592, 5
  %8596 = icmp slt i64 %8595, 0
  %8597 = shl i64 %8595, 1
  store i64 %8597, i64* %RCX.i507, align 8
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8599 = zext i1 %8596 to i8
  store i8 %8599, i8* %8598, align 1
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8601 = trunc i64 %8597 to i32
  %8602 = and i32 %8601, 254
  %8603 = call i32 @llvm.ctpop.i32(i32 %8602)
  %8604 = trunc i32 %8603 to i8
  %8605 = and i8 %8604, 1
  %8606 = xor i8 %8605, 1
  store i8 %8606, i8* %8600, align 1
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8607, align 1
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8609 = icmp eq i64 %8597, 0
  %8610 = zext i1 %8609 to i8
  store i8 %8610, i8* %8608, align 1
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8612 = lshr i64 %8597, 63
  %8613 = trunc i64 %8612 to i8
  store i8 %8613, i8* %8611, align 1
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8614, align 1
  store %struct.Memory* %loadMem_40fb06, %struct.Memory** %MEMORY
  %loadMem_40fb0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8616 = getelementptr inbounds %struct.GPR, %struct.GPR* %8615, i32 0, i32 33
  %8617 = getelementptr inbounds %struct.Reg, %struct.Reg* %8616, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %8617 to i64*
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8619 = getelementptr inbounds %struct.GPR, %struct.GPR* %8618, i32 0, i32 1
  %8620 = getelementptr inbounds %struct.Reg, %struct.Reg* %8619, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %8620 to i64*
  %8621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8622 = getelementptr inbounds %struct.GPR, %struct.GPR* %8621, i32 0, i32 5
  %8623 = getelementptr inbounds %struct.Reg, %struct.Reg* %8622, i32 0, i32 0
  %RCX.i505 = bitcast %union.anon* %8623 to i64*
  %8624 = load i64, i64* %RAX.i504
  %8625 = load i64, i64* %RCX.i505
  %8626 = load i64, i64* %PC.i503
  %8627 = add i64 %8626, 3
  store i64 %8627, i64* %PC.i503
  %8628 = add i64 %8625, %8624
  store i64 %8628, i64* %RAX.i504, align 8
  %8629 = icmp ult i64 %8628, %8624
  %8630 = icmp ult i64 %8628, %8625
  %8631 = or i1 %8629, %8630
  %8632 = zext i1 %8631 to i8
  %8633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8632, i8* %8633, align 1
  %8634 = trunc i64 %8628 to i32
  %8635 = and i32 %8634, 255
  %8636 = call i32 @llvm.ctpop.i32(i32 %8635)
  %8637 = trunc i32 %8636 to i8
  %8638 = and i8 %8637, 1
  %8639 = xor i8 %8638, 1
  %8640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8639, i8* %8640, align 1
  %8641 = xor i64 %8625, %8624
  %8642 = xor i64 %8641, %8628
  %8643 = lshr i64 %8642, 4
  %8644 = trunc i64 %8643 to i8
  %8645 = and i8 %8644, 1
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8645, i8* %8646, align 1
  %8647 = icmp eq i64 %8628, 0
  %8648 = zext i1 %8647 to i8
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8648, i8* %8649, align 1
  %8650 = lshr i64 %8628, 63
  %8651 = trunc i64 %8650 to i8
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8651, i8* %8652, align 1
  %8653 = lshr i64 %8624, 63
  %8654 = lshr i64 %8625, 63
  %8655 = xor i64 %8650, %8653
  %8656 = xor i64 %8650, %8654
  %8657 = add i64 %8655, %8656
  %8658 = icmp eq i64 %8657, 2
  %8659 = zext i1 %8658 to i8
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8659, i8* %8660, align 1
  store %struct.Memory* %loadMem_40fb0a, %struct.Memory** %MEMORY
  %loadMem_40fb0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8662 = getelementptr inbounds %struct.GPR, %struct.GPR* %8661, i32 0, i32 33
  %8663 = getelementptr inbounds %struct.Reg, %struct.Reg* %8662, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %8663 to i64*
  %8664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8665 = getelementptr inbounds %struct.GPR, %struct.GPR* %8664, i32 0, i32 5
  %8666 = getelementptr inbounds %struct.Reg, %struct.Reg* %8665, i32 0, i32 0
  %RCX.i501 = bitcast %union.anon* %8666 to i64*
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8668 = getelementptr inbounds %struct.GPR, %struct.GPR* %8667, i32 0, i32 15
  %8669 = getelementptr inbounds %struct.Reg, %struct.Reg* %8668, i32 0, i32 0
  %RBP.i502 = bitcast %union.anon* %8669 to i64*
  %8670 = load i64, i64* %RBP.i502
  %8671 = sub i64 %8670, 16
  %8672 = load i64, i64* %PC.i500
  %8673 = add i64 %8672, 4
  store i64 %8673, i64* %PC.i500
  %8674 = inttoptr i64 %8671 to i32*
  %8675 = load i32, i32* %8674
  %8676 = sext i32 %8675 to i64
  store i64 %8676, i64* %RCX.i501, align 8
  store %struct.Memory* %loadMem_40fb0d, %struct.Memory** %MEMORY
  %loadMem_40fb11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8678 = getelementptr inbounds %struct.GPR, %struct.GPR* %8677, i32 0, i32 33
  %8679 = getelementptr inbounds %struct.Reg, %struct.Reg* %8678, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %8679 to i64*
  %8680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8681 = getelementptr inbounds %struct.GPR, %struct.GPR* %8680, i32 0, i32 1
  %8682 = getelementptr inbounds %struct.Reg, %struct.Reg* %8681, i32 0, i32 0
  %RAX.i497 = bitcast %union.anon* %8682 to i64*
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8684 = getelementptr inbounds %struct.GPR, %struct.GPR* %8683, i32 0, i32 5
  %8685 = getelementptr inbounds %struct.Reg, %struct.Reg* %8684, i32 0, i32 0
  %RCX.i498 = bitcast %union.anon* %8685 to i64*
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8687 = getelementptr inbounds %struct.GPR, %struct.GPR* %8686, i32 0, i32 7
  %8688 = getelementptr inbounds %struct.Reg, %struct.Reg* %8687, i32 0, i32 0
  %RDX.i499 = bitcast %union.anon* %8688 to i64*
  %8689 = load i64, i64* %RAX.i497
  %8690 = load i64, i64* %RCX.i498
  %8691 = mul i64 %8690, 4
  %8692 = add i64 %8691, %8689
  %8693 = load i64, i64* %PC.i496
  %8694 = add i64 %8693, 3
  store i64 %8694, i64* %PC.i496
  %8695 = inttoptr i64 %8692 to i32*
  %8696 = load i32, i32* %8695
  %8697 = zext i32 %8696 to i64
  store i64 %8697, i64* %RDX.i499, align 8
  store %struct.Memory* %loadMem_40fb11, %struct.Memory** %MEMORY
  %loadMem_40fb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8699 = getelementptr inbounds %struct.GPR, %struct.GPR* %8698, i32 0, i32 33
  %8700 = getelementptr inbounds %struct.Reg, %struct.Reg* %8699, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %8700 to i64*
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8702 = getelementptr inbounds %struct.GPR, %struct.GPR* %8701, i32 0, i32 1
  %8703 = getelementptr inbounds %struct.Reg, %struct.Reg* %8702, i32 0, i32 0
  %RAX.i494 = bitcast %union.anon* %8703 to i64*
  %8704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8705 = getelementptr inbounds %struct.GPR, %struct.GPR* %8704, i32 0, i32 15
  %8706 = getelementptr inbounds %struct.Reg, %struct.Reg* %8705, i32 0, i32 0
  %RBP.i495 = bitcast %union.anon* %8706 to i64*
  %8707 = load i64, i64* %RBP.i495
  %8708 = sub i64 %8707, 16
  %8709 = load i64, i64* %PC.i493
  %8710 = add i64 %8709, 4
  store i64 %8710, i64* %PC.i493
  %8711 = inttoptr i64 %8708 to i32*
  %8712 = load i32, i32* %8711
  %8713 = sext i32 %8712 to i64
  store i64 %8713, i64* %RAX.i494, align 8
  store %struct.Memory* %loadMem_40fb14, %struct.Memory** %MEMORY
  %loadMem_40fb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8715 = getelementptr inbounds %struct.GPR, %struct.GPR* %8714, i32 0, i32 33
  %8716 = getelementptr inbounds %struct.Reg, %struct.Reg* %8715, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %8716 to i64*
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8718 = getelementptr inbounds %struct.GPR, %struct.GPR* %8717, i32 0, i32 7
  %8719 = getelementptr inbounds %struct.Reg, %struct.Reg* %8718, i32 0, i32 0
  %EDX.i490 = bitcast %union.anon* %8719 to i32*
  %8720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8721 = getelementptr inbounds %struct.GPR, %struct.GPR* %8720, i32 0, i32 1
  %8722 = getelementptr inbounds %struct.Reg, %struct.Reg* %8721, i32 0, i32 0
  %RAX.i491 = bitcast %union.anon* %8722 to i64*
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 15
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %RBP.i492 = bitcast %union.anon* %8725 to i64*
  %8726 = load i64, i64* %RBP.i492
  %8727 = load i64, i64* %RAX.i491
  %8728 = mul i64 %8727, 4
  %8729 = add i64 %8726, -48
  %8730 = add i64 %8729, %8728
  %8731 = load i32, i32* %EDX.i490
  %8732 = zext i32 %8731 to i64
  %8733 = load i64, i64* %PC.i489
  %8734 = add i64 %8733, 4
  store i64 %8734, i64* %PC.i489
  %8735 = inttoptr i64 %8730 to i32*
  store i32 %8731, i32* %8735
  store %struct.Memory* %loadMem_40fb18, %struct.Memory** %MEMORY
  %loadMem_40fb1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8737 = getelementptr inbounds %struct.GPR, %struct.GPR* %8736, i32 0, i32 33
  %8738 = getelementptr inbounds %struct.Reg, %struct.Reg* %8737, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %8738 to i64*
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8740 = getelementptr inbounds %struct.GPR, %struct.GPR* %8739, i32 0, i32 1
  %8741 = getelementptr inbounds %struct.Reg, %struct.Reg* %8740, i32 0, i32 0
  %RAX.i487 = bitcast %union.anon* %8741 to i64*
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8743 = getelementptr inbounds %struct.GPR, %struct.GPR* %8742, i32 0, i32 15
  %8744 = getelementptr inbounds %struct.Reg, %struct.Reg* %8743, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %8744 to i64*
  %8745 = load i64, i64* %RBP.i488
  %8746 = sub i64 %8745, 16
  %8747 = load i64, i64* %PC.i486
  %8748 = add i64 %8747, 3
  store i64 %8748, i64* %PC.i486
  %8749 = inttoptr i64 %8746 to i32*
  %8750 = load i32, i32* %8749
  %8751 = zext i32 %8750 to i64
  store i64 %8751, i64* %RAX.i487, align 8
  store %struct.Memory* %loadMem_40fb1c, %struct.Memory** %MEMORY
  %loadMem_40fb1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8753 = getelementptr inbounds %struct.GPR, %struct.GPR* %8752, i32 0, i32 33
  %8754 = getelementptr inbounds %struct.Reg, %struct.Reg* %8753, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %8754 to i64*
  %8755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8756 = getelementptr inbounds %struct.GPR, %struct.GPR* %8755, i32 0, i32 1
  %8757 = getelementptr inbounds %struct.Reg, %struct.Reg* %8756, i32 0, i32 0
  %RAX.i485 = bitcast %union.anon* %8757 to i64*
  %8758 = load i64, i64* %RAX.i485
  %8759 = load i64, i64* %PC.i484
  %8760 = add i64 %8759, 3
  store i64 %8760, i64* %PC.i484
  %8761 = trunc i64 %8758 to i32
  %8762 = add i32 1, %8761
  %8763 = zext i32 %8762 to i64
  store i64 %8763, i64* %RAX.i485, align 8
  %8764 = icmp ult i32 %8762, %8761
  %8765 = icmp ult i32 %8762, 1
  %8766 = or i1 %8764, %8765
  %8767 = zext i1 %8766 to i8
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8767, i8* %8768, align 1
  %8769 = and i32 %8762, 255
  %8770 = call i32 @llvm.ctpop.i32(i32 %8769)
  %8771 = trunc i32 %8770 to i8
  %8772 = and i8 %8771, 1
  %8773 = xor i8 %8772, 1
  %8774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8773, i8* %8774, align 1
  %8775 = xor i64 1, %8758
  %8776 = trunc i64 %8775 to i32
  %8777 = xor i32 %8776, %8762
  %8778 = lshr i32 %8777, 4
  %8779 = trunc i32 %8778 to i8
  %8780 = and i8 %8779, 1
  %8781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8780, i8* %8781, align 1
  %8782 = icmp eq i32 %8762, 0
  %8783 = zext i1 %8782 to i8
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8783, i8* %8784, align 1
  %8785 = lshr i32 %8762, 31
  %8786 = trunc i32 %8785 to i8
  %8787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8786, i8* %8787, align 1
  %8788 = lshr i32 %8761, 31
  %8789 = xor i32 %8785, %8788
  %8790 = add i32 %8789, %8785
  %8791 = icmp eq i32 %8790, 2
  %8792 = zext i1 %8791 to i8
  %8793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8792, i8* %8793, align 1
  store %struct.Memory* %loadMem_40fb1f, %struct.Memory** %MEMORY
  %loadMem_40fb22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8795 = getelementptr inbounds %struct.GPR, %struct.GPR* %8794, i32 0, i32 33
  %8796 = getelementptr inbounds %struct.Reg, %struct.Reg* %8795, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %8796 to i64*
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8798 = getelementptr inbounds %struct.GPR, %struct.GPR* %8797, i32 0, i32 1
  %8799 = getelementptr inbounds %struct.Reg, %struct.Reg* %8798, i32 0, i32 0
  %EAX.i482 = bitcast %union.anon* %8799 to i32*
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8801 = getelementptr inbounds %struct.GPR, %struct.GPR* %8800, i32 0, i32 15
  %8802 = getelementptr inbounds %struct.Reg, %struct.Reg* %8801, i32 0, i32 0
  %RBP.i483 = bitcast %union.anon* %8802 to i64*
  %8803 = load i64, i64* %RBP.i483
  %8804 = sub i64 %8803, 16
  %8805 = load i32, i32* %EAX.i482
  %8806 = zext i32 %8805 to i64
  %8807 = load i64, i64* %PC.i481
  %8808 = add i64 %8807, 3
  store i64 %8808, i64* %PC.i481
  %8809 = inttoptr i64 %8804 to i32*
  store i32 %8805, i32* %8809
  store %struct.Memory* %loadMem_40fb22, %struct.Memory** %MEMORY
  %loadMem_40fb25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8811 = getelementptr inbounds %struct.GPR, %struct.GPR* %8810, i32 0, i32 33
  %8812 = getelementptr inbounds %struct.Reg, %struct.Reg* %8811, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %8812 to i64*
  %8813 = load i64, i64* %PC.i480
  %8814 = add i64 %8813, -59
  %8815 = load i64, i64* %PC.i480
  %8816 = add i64 %8815, 5
  store i64 %8816, i64* %PC.i480
  %8817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8814, i64* %8817, align 8
  store %struct.Memory* %loadMem_40fb25, %struct.Memory** %MEMORY
  br label %block_.L_40faea

block_.L_40fb2a:                                  ; preds = %block_.L_40faea
  %loadMem_40fb2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8819 = getelementptr inbounds %struct.GPR, %struct.GPR* %8818, i32 0, i32 33
  %8820 = getelementptr inbounds %struct.Reg, %struct.Reg* %8819, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %8820 to i64*
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8822 = getelementptr inbounds %struct.GPR, %struct.GPR* %8821, i32 0, i32 1
  %8823 = getelementptr inbounds %struct.Reg, %struct.Reg* %8822, i32 0, i32 0
  %RAX.i478 = bitcast %union.anon* %8823 to i64*
  %8824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8825 = getelementptr inbounds %struct.GPR, %struct.GPR* %8824, i32 0, i32 15
  %8826 = getelementptr inbounds %struct.Reg, %struct.Reg* %8825, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %8826 to i64*
  %8827 = load i64, i64* %RBP.i479
  %8828 = sub i64 %8827, 48
  %8829 = load i64, i64* %PC.i477
  %8830 = add i64 %8829, 3
  store i64 %8830, i64* %PC.i477
  %8831 = inttoptr i64 %8828 to i32*
  %8832 = load i32, i32* %8831
  %8833 = zext i32 %8832 to i64
  store i64 %8833, i64* %RAX.i478, align 8
  store %struct.Memory* %loadMem_40fb2a, %struct.Memory** %MEMORY
  %loadMem_40fb2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8835 = getelementptr inbounds %struct.GPR, %struct.GPR* %8834, i32 0, i32 33
  %8836 = getelementptr inbounds %struct.Reg, %struct.Reg* %8835, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %8836 to i64*
  %8837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8838 = getelementptr inbounds %struct.GPR, %struct.GPR* %8837, i32 0, i32 1
  %8839 = getelementptr inbounds %struct.Reg, %struct.Reg* %8838, i32 0, i32 0
  %RAX.i475 = bitcast %union.anon* %8839 to i64*
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8841 = getelementptr inbounds %struct.GPR, %struct.GPR* %8840, i32 0, i32 15
  %8842 = getelementptr inbounds %struct.Reg, %struct.Reg* %8841, i32 0, i32 0
  %RBP.i476 = bitcast %union.anon* %8842 to i64*
  %8843 = load i64, i64* %RAX.i475
  %8844 = load i64, i64* %RBP.i476
  %8845 = sub i64 %8844, 40
  %8846 = load i64, i64* %PC.i474
  %8847 = add i64 %8846, 3
  store i64 %8847, i64* %PC.i474
  %8848 = trunc i64 %8843 to i32
  %8849 = inttoptr i64 %8845 to i32*
  %8850 = load i32, i32* %8849
  %8851 = add i32 %8850, %8848
  %8852 = zext i32 %8851 to i64
  store i64 %8852, i64* %RAX.i475, align 8
  %8853 = icmp ult i32 %8851, %8848
  %8854 = icmp ult i32 %8851, %8850
  %8855 = or i1 %8853, %8854
  %8856 = zext i1 %8855 to i8
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8856, i8* %8857, align 1
  %8858 = and i32 %8851, 255
  %8859 = call i32 @llvm.ctpop.i32(i32 %8858)
  %8860 = trunc i32 %8859 to i8
  %8861 = and i8 %8860, 1
  %8862 = xor i8 %8861, 1
  %8863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8862, i8* %8863, align 1
  %8864 = xor i32 %8850, %8848
  %8865 = xor i32 %8864, %8851
  %8866 = lshr i32 %8865, 4
  %8867 = trunc i32 %8866 to i8
  %8868 = and i8 %8867, 1
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8868, i8* %8869, align 1
  %8870 = icmp eq i32 %8851, 0
  %8871 = zext i1 %8870 to i8
  %8872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8871, i8* %8872, align 1
  %8873 = lshr i32 %8851, 31
  %8874 = trunc i32 %8873 to i8
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8874, i8* %8875, align 1
  %8876 = lshr i32 %8848, 31
  %8877 = lshr i32 %8850, 31
  %8878 = xor i32 %8873, %8876
  %8879 = xor i32 %8873, %8877
  %8880 = add i32 %8878, %8879
  %8881 = icmp eq i32 %8880, 2
  %8882 = zext i1 %8881 to i8
  %8883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8882, i8* %8883, align 1
  store %struct.Memory* %loadMem_40fb2d, %struct.Memory** %MEMORY
  %loadMem_40fb30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8885 = getelementptr inbounds %struct.GPR, %struct.GPR* %8884, i32 0, i32 33
  %8886 = getelementptr inbounds %struct.Reg, %struct.Reg* %8885, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %8886 to i64*
  %8887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8888 = getelementptr inbounds %struct.GPR, %struct.GPR* %8887, i32 0, i32 1
  %8889 = getelementptr inbounds %struct.Reg, %struct.Reg* %8888, i32 0, i32 0
  %EAX.i472 = bitcast %union.anon* %8889 to i32*
  %8890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8891 = getelementptr inbounds %struct.GPR, %struct.GPR* %8890, i32 0, i32 15
  %8892 = getelementptr inbounds %struct.Reg, %struct.Reg* %8891, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %8892 to i64*
  %8893 = load i64, i64* %RBP.i473
  %8894 = sub i64 %8893, 64
  %8895 = load i32, i32* %EAX.i472
  %8896 = zext i32 %8895 to i64
  %8897 = load i64, i64* %PC.i471
  %8898 = add i64 %8897, 3
  store i64 %8898, i64* %PC.i471
  %8899 = inttoptr i64 %8894 to i32*
  store i32 %8895, i32* %8899
  store %struct.Memory* %loadMem_40fb30, %struct.Memory** %MEMORY
  %loadMem_40fb33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8901 = getelementptr inbounds %struct.GPR, %struct.GPR* %8900, i32 0, i32 33
  %8902 = getelementptr inbounds %struct.Reg, %struct.Reg* %8901, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %8902 to i64*
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8904 = getelementptr inbounds %struct.GPR, %struct.GPR* %8903, i32 0, i32 1
  %8905 = getelementptr inbounds %struct.Reg, %struct.Reg* %8904, i32 0, i32 0
  %RAX.i469 = bitcast %union.anon* %8905 to i64*
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8907 = getelementptr inbounds %struct.GPR, %struct.GPR* %8906, i32 0, i32 15
  %8908 = getelementptr inbounds %struct.Reg, %struct.Reg* %8907, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %8908 to i64*
  %8909 = load i64, i64* %RBP.i470
  %8910 = sub i64 %8909, 48
  %8911 = load i64, i64* %PC.i468
  %8912 = add i64 %8911, 3
  store i64 %8912, i64* %PC.i468
  %8913 = inttoptr i64 %8910 to i32*
  %8914 = load i32, i32* %8913
  %8915 = zext i32 %8914 to i64
  store i64 %8915, i64* %RAX.i469, align 8
  store %struct.Memory* %loadMem_40fb33, %struct.Memory** %MEMORY
  %loadMem_40fb36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8917 = getelementptr inbounds %struct.GPR, %struct.GPR* %8916, i32 0, i32 33
  %8918 = getelementptr inbounds %struct.Reg, %struct.Reg* %8917, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %8918 to i64*
  %8919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8920 = getelementptr inbounds %struct.GPR, %struct.GPR* %8919, i32 0, i32 1
  %8921 = getelementptr inbounds %struct.Reg, %struct.Reg* %8920, i32 0, i32 0
  %RAX.i466 = bitcast %union.anon* %8921 to i64*
  %8922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8923 = getelementptr inbounds %struct.GPR, %struct.GPR* %8922, i32 0, i32 15
  %8924 = getelementptr inbounds %struct.Reg, %struct.Reg* %8923, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %8924 to i64*
  %8925 = load i64, i64* %RAX.i466
  %8926 = load i64, i64* %RBP.i467
  %8927 = sub i64 %8926, 40
  %8928 = load i64, i64* %PC.i465
  %8929 = add i64 %8928, 3
  store i64 %8929, i64* %PC.i465
  %8930 = trunc i64 %8925 to i32
  %8931 = inttoptr i64 %8927 to i32*
  %8932 = load i32, i32* %8931
  %8933 = sub i32 %8930, %8932
  %8934 = zext i32 %8933 to i64
  store i64 %8934, i64* %RAX.i466, align 8
  %8935 = icmp ult i32 %8930, %8932
  %8936 = zext i1 %8935 to i8
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8936, i8* %8937, align 1
  %8938 = and i32 %8933, 255
  %8939 = call i32 @llvm.ctpop.i32(i32 %8938)
  %8940 = trunc i32 %8939 to i8
  %8941 = and i8 %8940, 1
  %8942 = xor i8 %8941, 1
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8942, i8* %8943, align 1
  %8944 = xor i32 %8932, %8930
  %8945 = xor i32 %8944, %8933
  %8946 = lshr i32 %8945, 4
  %8947 = trunc i32 %8946 to i8
  %8948 = and i8 %8947, 1
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8948, i8* %8949, align 1
  %8950 = icmp eq i32 %8933, 0
  %8951 = zext i1 %8950 to i8
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8951, i8* %8952, align 1
  %8953 = lshr i32 %8933, 31
  %8954 = trunc i32 %8953 to i8
  %8955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8954, i8* %8955, align 1
  %8956 = lshr i32 %8930, 31
  %8957 = lshr i32 %8932, 31
  %8958 = xor i32 %8957, %8956
  %8959 = xor i32 %8953, %8956
  %8960 = add i32 %8959, %8958
  %8961 = icmp eq i32 %8960, 2
  %8962 = zext i1 %8961 to i8
  %8963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8962, i8* %8963, align 1
  store %struct.Memory* %loadMem_40fb36, %struct.Memory** %MEMORY
  %loadMem_40fb39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8965 = getelementptr inbounds %struct.GPR, %struct.GPR* %8964, i32 0, i32 33
  %8966 = getelementptr inbounds %struct.Reg, %struct.Reg* %8965, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %8966 to i64*
  %8967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8968 = getelementptr inbounds %struct.GPR, %struct.GPR* %8967, i32 0, i32 1
  %8969 = getelementptr inbounds %struct.Reg, %struct.Reg* %8968, i32 0, i32 0
  %EAX.i463 = bitcast %union.anon* %8969 to i32*
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8971 = getelementptr inbounds %struct.GPR, %struct.GPR* %8970, i32 0, i32 15
  %8972 = getelementptr inbounds %struct.Reg, %struct.Reg* %8971, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %8972 to i64*
  %8973 = load i64, i64* %RBP.i464
  %8974 = sub i64 %8973, 60
  %8975 = load i32, i32* %EAX.i463
  %8976 = zext i32 %8975 to i64
  %8977 = load i64, i64* %PC.i462
  %8978 = add i64 %8977, 3
  store i64 %8978, i64* %PC.i462
  %8979 = inttoptr i64 %8974 to i32*
  store i32 %8975, i32* %8979
  store %struct.Memory* %loadMem_40fb39, %struct.Memory** %MEMORY
  %loadMem_40fb3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8981 = getelementptr inbounds %struct.GPR, %struct.GPR* %8980, i32 0, i32 33
  %8982 = getelementptr inbounds %struct.Reg, %struct.Reg* %8981, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %8982 to i64*
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8984 = getelementptr inbounds %struct.GPR, %struct.GPR* %8983, i32 0, i32 1
  %8985 = getelementptr inbounds %struct.Reg, %struct.Reg* %8984, i32 0, i32 0
  %RAX.i460 = bitcast %union.anon* %8985 to i64*
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8987 = getelementptr inbounds %struct.GPR, %struct.GPR* %8986, i32 0, i32 15
  %8988 = getelementptr inbounds %struct.Reg, %struct.Reg* %8987, i32 0, i32 0
  %RBP.i461 = bitcast %union.anon* %8988 to i64*
  %8989 = load i64, i64* %RBP.i461
  %8990 = sub i64 %8989, 44
  %8991 = load i64, i64* %PC.i459
  %8992 = add i64 %8991, 3
  store i64 %8992, i64* %PC.i459
  %8993 = inttoptr i64 %8990 to i32*
  %8994 = load i32, i32* %8993
  %8995 = zext i32 %8994 to i64
  store i64 %8995, i64* %RAX.i460, align 8
  store %struct.Memory* %loadMem_40fb3c, %struct.Memory** %MEMORY
  %loadMem_40fb3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8997 = getelementptr inbounds %struct.GPR, %struct.GPR* %8996, i32 0, i32 33
  %8998 = getelementptr inbounds %struct.Reg, %struct.Reg* %8997, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %8998 to i64*
  %8999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9000 = getelementptr inbounds %struct.GPR, %struct.GPR* %8999, i32 0, i32 1
  %9001 = getelementptr inbounds %struct.Reg, %struct.Reg* %9000, i32 0, i32 0
  %RAX.i458 = bitcast %union.anon* %9001 to i64*
  %9002 = load i64, i64* %RAX.i458
  %9003 = load i64, i64* %PC.i457
  %9004 = add i64 %9003, 2
  store i64 %9004, i64* %PC.i457
  %9005 = shl i64 %9002, 32
  %9006 = ashr i64 %9005, 33
  %9007 = trunc i64 %9002 to i8
  %9008 = and i8 %9007, 1
  %9009 = trunc i64 %9006 to i32
  %9010 = and i64 %9006, 4294967295
  store i64 %9010, i64* %RAX.i458, align 8
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9008, i8* %9011, align 1
  %9012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9013 = and i32 %9009, 255
  %9014 = call i32 @llvm.ctpop.i32(i32 %9013)
  %9015 = trunc i32 %9014 to i8
  %9016 = and i8 %9015, 1
  %9017 = xor i8 %9016, 1
  store i8 %9017, i8* %9012, align 1
  %9018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9018, align 1
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9020 = icmp eq i32 %9009, 0
  %9021 = zext i1 %9020 to i8
  store i8 %9021, i8* %9019, align 1
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9023 = lshr i32 %9009, 31
  %9024 = trunc i32 %9023 to i8
  store i8 %9024, i8* %9022, align 1
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9025, align 1
  store %struct.Memory* %loadMem_40fb3f, %struct.Memory** %MEMORY
  %loadMem_40fb42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 33
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %9028 to i64*
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9030 = getelementptr inbounds %struct.GPR, %struct.GPR* %9029, i32 0, i32 1
  %9031 = getelementptr inbounds %struct.Reg, %struct.Reg* %9030, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %9031 to i64*
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 15
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %9034 to i64*
  %9035 = load i64, i64* %RAX.i455
  %9036 = load i64, i64* %RBP.i456
  %9037 = sub i64 %9036, 36
  %9038 = load i64, i64* %PC.i454
  %9039 = add i64 %9038, 3
  store i64 %9039, i64* %PC.i454
  %9040 = trunc i64 %9035 to i32
  %9041 = inttoptr i64 %9037 to i32*
  %9042 = load i32, i32* %9041
  %9043 = sub i32 %9040, %9042
  %9044 = zext i32 %9043 to i64
  store i64 %9044, i64* %RAX.i455, align 8
  %9045 = icmp ult i32 %9040, %9042
  %9046 = zext i1 %9045 to i8
  %9047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9046, i8* %9047, align 1
  %9048 = and i32 %9043, 255
  %9049 = call i32 @llvm.ctpop.i32(i32 %9048)
  %9050 = trunc i32 %9049 to i8
  %9051 = and i8 %9050, 1
  %9052 = xor i8 %9051, 1
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9052, i8* %9053, align 1
  %9054 = xor i32 %9042, %9040
  %9055 = xor i32 %9054, %9043
  %9056 = lshr i32 %9055, 4
  %9057 = trunc i32 %9056 to i8
  %9058 = and i8 %9057, 1
  %9059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9058, i8* %9059, align 1
  %9060 = icmp eq i32 %9043, 0
  %9061 = zext i1 %9060 to i8
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9061, i8* %9062, align 1
  %9063 = lshr i32 %9043, 31
  %9064 = trunc i32 %9063 to i8
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9064, i8* %9065, align 1
  %9066 = lshr i32 %9040, 31
  %9067 = lshr i32 %9042, 31
  %9068 = xor i32 %9067, %9066
  %9069 = xor i32 %9063, %9066
  %9070 = add i32 %9069, %9068
  %9071 = icmp eq i32 %9070, 2
  %9072 = zext i1 %9071 to i8
  %9073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9072, i8* %9073, align 1
  store %struct.Memory* %loadMem_40fb42, %struct.Memory** %MEMORY
  %loadMem_40fb45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9075 = getelementptr inbounds %struct.GPR, %struct.GPR* %9074, i32 0, i32 33
  %9076 = getelementptr inbounds %struct.Reg, %struct.Reg* %9075, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %9076 to i64*
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9078 = getelementptr inbounds %struct.GPR, %struct.GPR* %9077, i32 0, i32 1
  %9079 = getelementptr inbounds %struct.Reg, %struct.Reg* %9078, i32 0, i32 0
  %EAX.i452 = bitcast %union.anon* %9079 to i32*
  %9080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9081 = getelementptr inbounds %struct.GPR, %struct.GPR* %9080, i32 0, i32 15
  %9082 = getelementptr inbounds %struct.Reg, %struct.Reg* %9081, i32 0, i32 0
  %RBP.i453 = bitcast %union.anon* %9082 to i64*
  %9083 = load i64, i64* %RBP.i453
  %9084 = sub i64 %9083, 56
  %9085 = load i32, i32* %EAX.i452
  %9086 = zext i32 %9085 to i64
  %9087 = load i64, i64* %PC.i451
  %9088 = add i64 %9087, 3
  store i64 %9088, i64* %PC.i451
  %9089 = inttoptr i64 %9084 to i32*
  store i32 %9085, i32* %9089
  store %struct.Memory* %loadMem_40fb45, %struct.Memory** %MEMORY
  %loadMem_40fb48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9091 = getelementptr inbounds %struct.GPR, %struct.GPR* %9090, i32 0, i32 33
  %9092 = getelementptr inbounds %struct.Reg, %struct.Reg* %9091, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %9092 to i64*
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9094 = getelementptr inbounds %struct.GPR, %struct.GPR* %9093, i32 0, i32 1
  %9095 = getelementptr inbounds %struct.Reg, %struct.Reg* %9094, i32 0, i32 0
  %RAX.i449 = bitcast %union.anon* %9095 to i64*
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 15
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %9098 to i64*
  %9099 = load i64, i64* %RBP.i450
  %9100 = sub i64 %9099, 44
  %9101 = load i64, i64* %PC.i448
  %9102 = add i64 %9101, 3
  store i64 %9102, i64* %PC.i448
  %9103 = inttoptr i64 %9100 to i32*
  %9104 = load i32, i32* %9103
  %9105 = zext i32 %9104 to i64
  store i64 %9105, i64* %RAX.i449, align 8
  store %struct.Memory* %loadMem_40fb48, %struct.Memory** %MEMORY
  %loadMem_40fb4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9107 = getelementptr inbounds %struct.GPR, %struct.GPR* %9106, i32 0, i32 33
  %9108 = getelementptr inbounds %struct.Reg, %struct.Reg* %9107, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %9108 to i64*
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 5
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %RCX.i446 = bitcast %union.anon* %9111 to i64*
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9113 = getelementptr inbounds %struct.GPR, %struct.GPR* %9112, i32 0, i32 15
  %9114 = getelementptr inbounds %struct.Reg, %struct.Reg* %9113, i32 0, i32 0
  %RBP.i447 = bitcast %union.anon* %9114 to i64*
  %9115 = load i64, i64* %RBP.i447
  %9116 = sub i64 %9115, 36
  %9117 = load i64, i64* %PC.i445
  %9118 = add i64 %9117, 3
  store i64 %9118, i64* %PC.i445
  %9119 = inttoptr i64 %9116 to i32*
  %9120 = load i32, i32* %9119
  %9121 = zext i32 %9120 to i64
  store i64 %9121, i64* %RCX.i446, align 8
  store %struct.Memory* %loadMem_40fb4b, %struct.Memory** %MEMORY
  %loadMem_40fb4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9123 = getelementptr inbounds %struct.GPR, %struct.GPR* %9122, i32 0, i32 33
  %9124 = getelementptr inbounds %struct.Reg, %struct.Reg* %9123, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %9124 to i64*
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9126 = getelementptr inbounds %struct.GPR, %struct.GPR* %9125, i32 0, i32 5
  %9127 = getelementptr inbounds %struct.Reg, %struct.Reg* %9126, i32 0, i32 0
  %RCX.i444 = bitcast %union.anon* %9127 to i64*
  %9128 = load i64, i64* %RCX.i444
  %9129 = load i64, i64* %PC.i443
  %9130 = add i64 %9129, 2
  store i64 %9130, i64* %PC.i443
  %9131 = shl i64 %9128, 32
  %9132 = ashr i64 %9131, 33
  %9133 = trunc i64 %9128 to i8
  %9134 = and i8 %9133, 1
  %9135 = trunc i64 %9132 to i32
  %9136 = and i64 %9132, 4294967295
  store i64 %9136, i64* %RCX.i444, align 8
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9134, i8* %9137, align 1
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9139 = and i32 %9135, 255
  %9140 = call i32 @llvm.ctpop.i32(i32 %9139)
  %9141 = trunc i32 %9140 to i8
  %9142 = and i8 %9141, 1
  %9143 = xor i8 %9142, 1
  store i8 %9143, i8* %9138, align 1
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9144, align 1
  %9145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9146 = icmp eq i32 %9135, 0
  %9147 = zext i1 %9146 to i8
  store i8 %9147, i8* %9145, align 1
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9149 = lshr i32 %9135, 31
  %9150 = trunc i32 %9149 to i8
  store i8 %9150, i8* %9148, align 1
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9151, align 1
  store %struct.Memory* %loadMem_40fb4e, %struct.Memory** %MEMORY
  %loadMem_40fb51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9153 = getelementptr inbounds %struct.GPR, %struct.GPR* %9152, i32 0, i32 33
  %9154 = getelementptr inbounds %struct.Reg, %struct.Reg* %9153, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %9154 to i64*
  %9155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9156 = getelementptr inbounds %struct.GPR, %struct.GPR* %9155, i32 0, i32 5
  %9157 = getelementptr inbounds %struct.Reg, %struct.Reg* %9156, i32 0, i32 0
  %ECX.i441 = bitcast %union.anon* %9157 to i32*
  %9158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9159 = getelementptr inbounds %struct.GPR, %struct.GPR* %9158, i32 0, i32 1
  %9160 = getelementptr inbounds %struct.Reg, %struct.Reg* %9159, i32 0, i32 0
  %RAX.i442 = bitcast %union.anon* %9160 to i64*
  %9161 = load i64, i64* %RAX.i442
  %9162 = load i32, i32* %ECX.i441
  %9163 = zext i32 %9162 to i64
  %9164 = load i64, i64* %PC.i440
  %9165 = add i64 %9164, 2
  store i64 %9165, i64* %PC.i440
  %9166 = trunc i64 %9161 to i32
  %9167 = add i32 %9162, %9166
  %9168 = zext i32 %9167 to i64
  store i64 %9168, i64* %RAX.i442, align 8
  %9169 = icmp ult i32 %9167, %9166
  %9170 = icmp ult i32 %9167, %9162
  %9171 = or i1 %9169, %9170
  %9172 = zext i1 %9171 to i8
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9172, i8* %9173, align 1
  %9174 = and i32 %9167, 255
  %9175 = call i32 @llvm.ctpop.i32(i32 %9174)
  %9176 = trunc i32 %9175 to i8
  %9177 = and i8 %9176, 1
  %9178 = xor i8 %9177, 1
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9178, i8* %9179, align 1
  %9180 = xor i64 %9163, %9161
  %9181 = trunc i64 %9180 to i32
  %9182 = xor i32 %9181, %9167
  %9183 = lshr i32 %9182, 4
  %9184 = trunc i32 %9183 to i8
  %9185 = and i8 %9184, 1
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9185, i8* %9186, align 1
  %9187 = icmp eq i32 %9167, 0
  %9188 = zext i1 %9187 to i8
  %9189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9188, i8* %9189, align 1
  %9190 = lshr i32 %9167, 31
  %9191 = trunc i32 %9190 to i8
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9191, i8* %9192, align 1
  %9193 = lshr i32 %9166, 31
  %9194 = lshr i32 %9162, 31
  %9195 = xor i32 %9190, %9193
  %9196 = xor i32 %9190, %9194
  %9197 = add i32 %9195, %9196
  %9198 = icmp eq i32 %9197, 2
  %9199 = zext i1 %9198 to i8
  %9200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9199, i8* %9200, align 1
  store %struct.Memory* %loadMem_40fb51, %struct.Memory** %MEMORY
  %loadMem_40fb53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9202 = getelementptr inbounds %struct.GPR, %struct.GPR* %9201, i32 0, i32 33
  %9203 = getelementptr inbounds %struct.Reg, %struct.Reg* %9202, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %9203 to i64*
  %9204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9205 = getelementptr inbounds %struct.GPR, %struct.GPR* %9204, i32 0, i32 1
  %9206 = getelementptr inbounds %struct.Reg, %struct.Reg* %9205, i32 0, i32 0
  %EAX.i438 = bitcast %union.anon* %9206 to i32*
  %9207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9208 = getelementptr inbounds %struct.GPR, %struct.GPR* %9207, i32 0, i32 15
  %9209 = getelementptr inbounds %struct.Reg, %struct.Reg* %9208, i32 0, i32 0
  %RBP.i439 = bitcast %union.anon* %9209 to i64*
  %9210 = load i64, i64* %RBP.i439
  %9211 = sub i64 %9210, 52
  %9212 = load i32, i32* %EAX.i438
  %9213 = zext i32 %9212 to i64
  %9214 = load i64, i64* %PC.i437
  %9215 = add i64 %9214, 3
  store i64 %9215, i64* %PC.i437
  %9216 = inttoptr i64 %9211 to i32*
  store i32 %9212, i32* %9216
  store %struct.Memory* %loadMem_40fb53, %struct.Memory** %MEMORY
  %loadMem_40fb56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9218 = getelementptr inbounds %struct.GPR, %struct.GPR* %9217, i32 0, i32 33
  %9219 = getelementptr inbounds %struct.Reg, %struct.Reg* %9218, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %9219 to i64*
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9221 = getelementptr inbounds %struct.GPR, %struct.GPR* %9220, i32 0, i32 15
  %9222 = getelementptr inbounds %struct.Reg, %struct.Reg* %9221, i32 0, i32 0
  %RBP.i436 = bitcast %union.anon* %9222 to i64*
  %9223 = load i64, i64* %RBP.i436
  %9224 = sub i64 %9223, 16
  %9225 = load i64, i64* %PC.i435
  %9226 = add i64 %9225, 7
  store i64 %9226, i64* %PC.i435
  %9227 = inttoptr i64 %9224 to i32*
  store i32 0, i32* %9227
  store %struct.Memory* %loadMem_40fb56, %struct.Memory** %MEMORY
  br label %block_.L_40fb5d

block_.L_40fb5d:                                  ; preds = %block_.L_40fd57, %block_.L_40fb2a
  %loadMem_40fb5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9229 = getelementptr inbounds %struct.GPR, %struct.GPR* %9228, i32 0, i32 33
  %9230 = getelementptr inbounds %struct.Reg, %struct.Reg* %9229, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %9230 to i64*
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9232 = getelementptr inbounds %struct.GPR, %struct.GPR* %9231, i32 0, i32 15
  %9233 = getelementptr inbounds %struct.Reg, %struct.Reg* %9232, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %9233 to i64*
  %9234 = load i64, i64* %RBP.i434
  %9235 = sub i64 %9234, 16
  %9236 = load i64, i64* %PC.i433
  %9237 = add i64 %9236, 4
  store i64 %9237, i64* %PC.i433
  %9238 = inttoptr i64 %9235 to i32*
  %9239 = load i32, i32* %9238
  %9240 = sub i32 %9239, 2
  %9241 = icmp ult i32 %9239, 2
  %9242 = zext i1 %9241 to i8
  %9243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9242, i8* %9243, align 1
  %9244 = and i32 %9240, 255
  %9245 = call i32 @llvm.ctpop.i32(i32 %9244)
  %9246 = trunc i32 %9245 to i8
  %9247 = and i8 %9246, 1
  %9248 = xor i8 %9247, 1
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9248, i8* %9249, align 1
  %9250 = xor i32 %9239, 2
  %9251 = xor i32 %9250, %9240
  %9252 = lshr i32 %9251, 4
  %9253 = trunc i32 %9252 to i8
  %9254 = and i8 %9253, 1
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9254, i8* %9255, align 1
  %9256 = icmp eq i32 %9240, 0
  %9257 = zext i1 %9256 to i8
  %9258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9257, i8* %9258, align 1
  %9259 = lshr i32 %9240, 31
  %9260 = trunc i32 %9259 to i8
  %9261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9260, i8* %9261, align 1
  %9262 = lshr i32 %9239, 31
  %9263 = xor i32 %9259, %9262
  %9264 = add i32 %9263, %9262
  %9265 = icmp eq i32 %9264, 2
  %9266 = zext i1 %9265 to i8
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9266, i8* %9267, align 1
  store %struct.Memory* %loadMem_40fb5d, %struct.Memory** %MEMORY
  %loadMem_40fb61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9269 = getelementptr inbounds %struct.GPR, %struct.GPR* %9268, i32 0, i32 33
  %9270 = getelementptr inbounds %struct.Reg, %struct.Reg* %9269, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %9270 to i64*
  %9271 = load i64, i64* %PC.i432
  %9272 = add i64 %9271, 555
  %9273 = load i64, i64* %PC.i432
  %9274 = add i64 %9273, 6
  %9275 = load i64, i64* %PC.i432
  %9276 = add i64 %9275, 6
  store i64 %9276, i64* %PC.i432
  %9277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9278 = load i8, i8* %9277, align 1
  %9279 = icmp ne i8 %9278, 0
  %9280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9281 = load i8, i8* %9280, align 1
  %9282 = icmp ne i8 %9281, 0
  %9283 = xor i1 %9279, %9282
  %9284 = xor i1 %9283, true
  %9285 = zext i1 %9284 to i8
  store i8 %9285, i8* %BRANCH_TAKEN, align 1
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9287 = select i1 %9283, i64 %9274, i64 %9272
  store i64 %9287, i64* %9286, align 8
  store %struct.Memory* %loadMem_40fb61, %struct.Memory** %MEMORY
  %loadBr_40fb61 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fb61 = icmp eq i8 %loadBr_40fb61, 1
  br i1 %cmpBr_40fb61, label %block_.L_40fd8c, label %block_40fb67

block_40fb67:                                     ; preds = %block_.L_40fb5d
  %loadMem_40fb67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9289 = getelementptr inbounds %struct.GPR, %struct.GPR* %9288, i32 0, i32 33
  %9290 = getelementptr inbounds %struct.Reg, %struct.Reg* %9289, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %9290 to i64*
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9292 = getelementptr inbounds %struct.GPR, %struct.GPR* %9291, i32 0, i32 1
  %9293 = getelementptr inbounds %struct.Reg, %struct.Reg* %9292, i32 0, i32 0
  %EAX.i430 = bitcast %union.anon* %9293 to i32*
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9295 = getelementptr inbounds %struct.GPR, %struct.GPR* %9294, i32 0, i32 1
  %9296 = getelementptr inbounds %struct.Reg, %struct.Reg* %9295, i32 0, i32 0
  %RAX.i431 = bitcast %union.anon* %9296 to i64*
  %9297 = load i64, i64* %RAX.i431
  %9298 = load i32, i32* %EAX.i430
  %9299 = zext i32 %9298 to i64
  %9300 = load i64, i64* %PC.i429
  %9301 = add i64 %9300, 2
  store i64 %9301, i64* %PC.i429
  %9302 = xor i64 %9299, %9297
  %9303 = trunc i64 %9302 to i32
  %9304 = and i64 %9302, 4294967295
  store i64 %9304, i64* %RAX.i431, align 8
  %9305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9305, align 1
  %9306 = and i32 %9303, 255
  %9307 = call i32 @llvm.ctpop.i32(i32 %9306)
  %9308 = trunc i32 %9307 to i8
  %9309 = and i8 %9308, 1
  %9310 = xor i8 %9309, 1
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9310, i8* %9311, align 1
  %9312 = icmp eq i32 %9303, 0
  %9313 = zext i1 %9312 to i8
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9313, i8* %9314, align 1
  %9315 = lshr i32 %9303, 31
  %9316 = trunc i32 %9315 to i8
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9316, i8* %9317, align 1
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9318, align 1
  %9319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9319, align 1
  store %struct.Memory* %loadMem_40fb67, %struct.Memory** %MEMORY
  %loadMem_40fb69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9321 = getelementptr inbounds %struct.GPR, %struct.GPR* %9320, i32 0, i32 33
  %9322 = getelementptr inbounds %struct.Reg, %struct.Reg* %9321, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %9322 to i64*
  %9323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9324 = getelementptr inbounds %struct.GPR, %struct.GPR* %9323, i32 0, i32 5
  %9325 = getelementptr inbounds %struct.Reg, %struct.Reg* %9324, i32 0, i32 0
  %RCX.i428 = bitcast %union.anon* %9325 to i64*
  %9326 = load i64, i64* %PC.i427
  %9327 = add i64 %9326, 5
  store i64 %9327, i64* %PC.i427
  store i64 3, i64* %RCX.i428, align 8
  store %struct.Memory* %loadMem_40fb69, %struct.Memory** %MEMORY
  %loadMem_40fb6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9329 = getelementptr inbounds %struct.GPR, %struct.GPR* %9328, i32 0, i32 33
  %9330 = getelementptr inbounds %struct.Reg, %struct.Reg* %9329, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %9330 to i64*
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9332 = getelementptr inbounds %struct.GPR, %struct.GPR* %9331, i32 0, i32 5
  %9333 = getelementptr inbounds %struct.Reg, %struct.Reg* %9332, i32 0, i32 0
  %RCX.i425 = bitcast %union.anon* %9333 to i64*
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9335 = getelementptr inbounds %struct.GPR, %struct.GPR* %9334, i32 0, i32 15
  %9336 = getelementptr inbounds %struct.Reg, %struct.Reg* %9335, i32 0, i32 0
  %RBP.i426 = bitcast %union.anon* %9336 to i64*
  %9337 = load i64, i64* %RCX.i425
  %9338 = load i64, i64* %RBP.i426
  %9339 = sub i64 %9338, 16
  %9340 = load i64, i64* %PC.i424
  %9341 = add i64 %9340, 3
  store i64 %9341, i64* %PC.i424
  %9342 = trunc i64 %9337 to i32
  %9343 = inttoptr i64 %9339 to i32*
  %9344 = load i32, i32* %9343
  %9345 = sub i32 %9342, %9344
  %9346 = zext i32 %9345 to i64
  store i64 %9346, i64* %RCX.i425, align 8
  %9347 = icmp ult i32 %9342, %9344
  %9348 = zext i1 %9347 to i8
  %9349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9348, i8* %9349, align 1
  %9350 = and i32 %9345, 255
  %9351 = call i32 @llvm.ctpop.i32(i32 %9350)
  %9352 = trunc i32 %9351 to i8
  %9353 = and i8 %9352, 1
  %9354 = xor i8 %9353, 1
  %9355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9354, i8* %9355, align 1
  %9356 = xor i32 %9344, %9342
  %9357 = xor i32 %9356, %9345
  %9358 = lshr i32 %9357, 4
  %9359 = trunc i32 %9358 to i8
  %9360 = and i8 %9359, 1
  %9361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9360, i8* %9361, align 1
  %9362 = icmp eq i32 %9345, 0
  %9363 = zext i1 %9362 to i8
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9363, i8* %9364, align 1
  %9365 = lshr i32 %9345, 31
  %9366 = trunc i32 %9365 to i8
  %9367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9366, i8* %9367, align 1
  %9368 = lshr i32 %9342, 31
  %9369 = lshr i32 %9344, 31
  %9370 = xor i32 %9369, %9368
  %9371 = xor i32 %9365, %9368
  %9372 = add i32 %9371, %9370
  %9373 = icmp eq i32 %9372, 2
  %9374 = zext i1 %9373 to i8
  %9375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9374, i8* %9375, align 1
  store %struct.Memory* %loadMem_40fb6e, %struct.Memory** %MEMORY
  %loadMem_40fb71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9377 = getelementptr inbounds %struct.GPR, %struct.GPR* %9376, i32 0, i32 33
  %9378 = getelementptr inbounds %struct.Reg, %struct.Reg* %9377, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %9378 to i64*
  %9379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9380 = getelementptr inbounds %struct.GPR, %struct.GPR* %9379, i32 0, i32 5
  %9381 = getelementptr inbounds %struct.Reg, %struct.Reg* %9380, i32 0, i32 0
  %ECX.i422 = bitcast %union.anon* %9381 to i32*
  %9382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9383 = getelementptr inbounds %struct.GPR, %struct.GPR* %9382, i32 0, i32 15
  %9384 = getelementptr inbounds %struct.Reg, %struct.Reg* %9383, i32 0, i32 0
  %RBP.i423 = bitcast %union.anon* %9384 to i64*
  %9385 = load i64, i64* %RBP.i423
  %9386 = sub i64 %9385, 24
  %9387 = load i32, i32* %ECX.i422
  %9388 = zext i32 %9387 to i64
  %9389 = load i64, i64* %PC.i421
  %9390 = add i64 %9389, 3
  store i64 %9390, i64* %PC.i421
  %9391 = inttoptr i64 %9386 to i32*
  store i32 %9387, i32* %9391
  store %struct.Memory* %loadMem_40fb71, %struct.Memory** %MEMORY
  %loadMem_40fb74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9393 = getelementptr inbounds %struct.GPR, %struct.GPR* %9392, i32 0, i32 33
  %9394 = getelementptr inbounds %struct.Reg, %struct.Reg* %9393, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %9394 to i64*
  %9395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9396 = getelementptr inbounds %struct.GPR, %struct.GPR* %9395, i32 0, i32 7
  %9397 = getelementptr inbounds %struct.Reg, %struct.Reg* %9396, i32 0, i32 0
  %RDX.i420 = bitcast %union.anon* %9397 to i64*
  %9398 = load i64, i64* %PC.i419
  %9399 = add i64 %9398, 8
  store i64 %9399, i64* %PC.i419
  %9400 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9400, i64* %RDX.i420, align 8
  store %struct.Memory* %loadMem_40fb74, %struct.Memory** %MEMORY
  %loadMem_40fb7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 33
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 5
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %RCX.i417 = bitcast %union.anon* %9406 to i64*
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 7
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %RDX.i418 = bitcast %union.anon* %9409 to i64*
  %9410 = load i64, i64* %RDX.i418
  %9411 = add i64 %9410, 72684
  %9412 = load i64, i64* %PC.i416
  %9413 = add i64 %9412, 6
  store i64 %9413, i64* %PC.i416
  %9414 = inttoptr i64 %9411 to i32*
  %9415 = load i32, i32* %9414
  %9416 = zext i32 %9415 to i64
  store i64 %9416, i64* %RCX.i417, align 8
  store %struct.Memory* %loadMem_40fb7c, %struct.Memory** %MEMORY
  %loadMem_40fb82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9418 = getelementptr inbounds %struct.GPR, %struct.GPR* %9417, i32 0, i32 33
  %9419 = getelementptr inbounds %struct.Reg, %struct.Reg* %9418, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %9419 to i64*
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9421 = getelementptr inbounds %struct.GPR, %struct.GPR* %9420, i32 0, i32 7
  %9422 = getelementptr inbounds %struct.Reg, %struct.Reg* %9421, i32 0, i32 0
  %RDX.i414 = bitcast %union.anon* %9422 to i64*
  %9423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9424 = getelementptr inbounds %struct.GPR, %struct.GPR* %9423, i32 0, i32 15
  %9425 = getelementptr inbounds %struct.Reg, %struct.Reg* %9424, i32 0, i32 0
  %RBP.i415 = bitcast %union.anon* %9425 to i64*
  %9426 = load i64, i64* %RBP.i415
  %9427 = sub i64 %9426, 16
  %9428 = load i64, i64* %PC.i413
  %9429 = add i64 %9428, 4
  store i64 %9429, i64* %PC.i413
  %9430 = inttoptr i64 %9427 to i32*
  %9431 = load i32, i32* %9430
  %9432 = sext i32 %9431 to i64
  store i64 %9432, i64* %RDX.i414, align 8
  store %struct.Memory* %loadMem_40fb82, %struct.Memory** %MEMORY
  %loadMem_40fb86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9434 = getelementptr inbounds %struct.GPR, %struct.GPR* %9433, i32 0, i32 33
  %9435 = getelementptr inbounds %struct.Reg, %struct.Reg* %9434, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %9435 to i64*
  %9436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9437 = getelementptr inbounds %struct.GPR, %struct.GPR* %9436, i32 0, i32 7
  %9438 = getelementptr inbounds %struct.Reg, %struct.Reg* %9437, i32 0, i32 0
  %RDX.i410 = bitcast %union.anon* %9438 to i64*
  %9439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9440 = getelementptr inbounds %struct.GPR, %struct.GPR* %9439, i32 0, i32 9
  %9441 = getelementptr inbounds %struct.Reg, %struct.Reg* %9440, i32 0, i32 0
  %RSI.i411 = bitcast %union.anon* %9441 to i64*
  %9442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9443 = getelementptr inbounds %struct.GPR, %struct.GPR* %9442, i32 0, i32 15
  %9444 = getelementptr inbounds %struct.Reg, %struct.Reg* %9443, i32 0, i32 0
  %RBP.i412 = bitcast %union.anon* %9444 to i64*
  %9445 = load i64, i64* %RBP.i412
  %9446 = load i64, i64* %RDX.i410
  %9447 = mul i64 %9446, 4
  %9448 = add i64 %9445, -64
  %9449 = add i64 %9448, %9447
  %9450 = load i64, i64* %PC.i409
  %9451 = add i64 %9450, 4
  store i64 %9451, i64* %PC.i409
  %9452 = inttoptr i64 %9449 to i32*
  %9453 = load i32, i32* %9452
  %9454 = zext i32 %9453 to i64
  store i64 %9454, i64* %RSI.i411, align 8
  store %struct.Memory* %loadMem_40fb86, %struct.Memory** %MEMORY
  %loadMem_40fb8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9456 = getelementptr inbounds %struct.GPR, %struct.GPR* %9455, i32 0, i32 33
  %9457 = getelementptr inbounds %struct.Reg, %struct.Reg* %9456, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %9457 to i64*
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9459 = getelementptr inbounds %struct.GPR, %struct.GPR* %9458, i32 0, i32 7
  %9460 = getelementptr inbounds %struct.Reg, %struct.Reg* %9459, i32 0, i32 0
  %RDX.i407 = bitcast %union.anon* %9460 to i64*
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9462 = getelementptr inbounds %struct.GPR, %struct.GPR* %9461, i32 0, i32 15
  %9463 = getelementptr inbounds %struct.Reg, %struct.Reg* %9462, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %9463 to i64*
  %9464 = load i64, i64* %RBP.i408
  %9465 = sub i64 %9464, 24
  %9466 = load i64, i64* %PC.i406
  %9467 = add i64 %9466, 4
  store i64 %9467, i64* %PC.i406
  %9468 = inttoptr i64 %9465 to i32*
  %9469 = load i32, i32* %9468
  %9470 = sext i32 %9469 to i64
  store i64 %9470, i64* %RDX.i407, align 8
  store %struct.Memory* %loadMem_40fb8a, %struct.Memory** %MEMORY
  %loadMem_40fb8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9472 = getelementptr inbounds %struct.GPR, %struct.GPR* %9471, i32 0, i32 33
  %9473 = getelementptr inbounds %struct.Reg, %struct.Reg* %9472, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %9473 to i64*
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9475 = getelementptr inbounds %struct.GPR, %struct.GPR* %9474, i32 0, i32 7
  %9476 = getelementptr inbounds %struct.Reg, %struct.Reg* %9475, i32 0, i32 0
  %RDX.i403 = bitcast %union.anon* %9476 to i64*
  %9477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9478 = getelementptr inbounds %struct.GPR, %struct.GPR* %9477, i32 0, i32 9
  %9479 = getelementptr inbounds %struct.Reg, %struct.Reg* %9478, i32 0, i32 0
  %RSI.i404 = bitcast %union.anon* %9479 to i64*
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9481 = getelementptr inbounds %struct.GPR, %struct.GPR* %9480, i32 0, i32 15
  %9482 = getelementptr inbounds %struct.Reg, %struct.Reg* %9481, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %9482 to i64*
  %9483 = load i64, i64* %RSI.i404
  %9484 = load i64, i64* %RBP.i405
  %9485 = load i64, i64* %RDX.i403
  %9486 = mul i64 %9485, 4
  %9487 = add i64 %9484, -64
  %9488 = add i64 %9487, %9486
  %9489 = load i64, i64* %PC.i402
  %9490 = add i64 %9489, 4
  store i64 %9490, i64* %PC.i402
  %9491 = trunc i64 %9483 to i32
  %9492 = inttoptr i64 %9488 to i32*
  %9493 = load i32, i32* %9492
  %9494 = add i32 %9493, %9491
  %9495 = zext i32 %9494 to i64
  store i64 %9495, i64* %RSI.i404, align 8
  %9496 = icmp ult i32 %9494, %9491
  %9497 = icmp ult i32 %9494, %9493
  %9498 = or i1 %9496, %9497
  %9499 = zext i1 %9498 to i8
  %9500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9499, i8* %9500, align 1
  %9501 = and i32 %9494, 255
  %9502 = call i32 @llvm.ctpop.i32(i32 %9501)
  %9503 = trunc i32 %9502 to i8
  %9504 = and i8 %9503, 1
  %9505 = xor i8 %9504, 1
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9505, i8* %9506, align 1
  %9507 = xor i32 %9493, %9491
  %9508 = xor i32 %9507, %9494
  %9509 = lshr i32 %9508, 4
  %9510 = trunc i32 %9509 to i8
  %9511 = and i8 %9510, 1
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9511, i8* %9512, align 1
  %9513 = icmp eq i32 %9494, 0
  %9514 = zext i1 %9513 to i8
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9514, i8* %9515, align 1
  %9516 = lshr i32 %9494, 31
  %9517 = trunc i32 %9516 to i8
  %9518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9517, i8* %9518, align 1
  %9519 = lshr i32 %9491, 31
  %9520 = lshr i32 %9493, 31
  %9521 = xor i32 %9516, %9519
  %9522 = xor i32 %9516, %9520
  %9523 = add i32 %9521, %9522
  %9524 = icmp eq i32 %9523, 2
  %9525 = zext i1 %9524 to i8
  %9526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9525, i8* %9526, align 1
  store %struct.Memory* %loadMem_40fb8e, %struct.Memory** %MEMORY
  %loadMem_40fb92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9528 = getelementptr inbounds %struct.GPR, %struct.GPR* %9527, i32 0, i32 33
  %9529 = getelementptr inbounds %struct.Reg, %struct.Reg* %9528, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %9529 to i64*
  %9530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9531 = getelementptr inbounds %struct.GPR, %struct.GPR* %9530, i32 0, i32 9
  %9532 = getelementptr inbounds %struct.Reg, %struct.Reg* %9531, i32 0, i32 0
  %RSI.i401 = bitcast %union.anon* %9532 to i64*
  %9533 = load i64, i64* %RSI.i401
  %9534 = load i64, i64* %PC.i400
  %9535 = add i64 %9534, 3
  store i64 %9535, i64* %PC.i400
  %9536 = trunc i64 %9533 to i32
  %9537 = add i32 32, %9536
  %9538 = zext i32 %9537 to i64
  store i64 %9538, i64* %RSI.i401, align 8
  %9539 = icmp ult i32 %9537, %9536
  %9540 = icmp ult i32 %9537, 32
  %9541 = or i1 %9539, %9540
  %9542 = zext i1 %9541 to i8
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9542, i8* %9543, align 1
  %9544 = and i32 %9537, 255
  %9545 = call i32 @llvm.ctpop.i32(i32 %9544)
  %9546 = trunc i32 %9545 to i8
  %9547 = and i8 %9546, 1
  %9548 = xor i8 %9547, 1
  %9549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9548, i8* %9549, align 1
  %9550 = xor i64 32, %9533
  %9551 = trunc i64 %9550 to i32
  %9552 = xor i32 %9551, %9537
  %9553 = lshr i32 %9552, 4
  %9554 = trunc i32 %9553 to i8
  %9555 = and i8 %9554, 1
  %9556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9555, i8* %9556, align 1
  %9557 = icmp eq i32 %9537, 0
  %9558 = zext i1 %9557 to i8
  %9559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9558, i8* %9559, align 1
  %9560 = lshr i32 %9537, 31
  %9561 = trunc i32 %9560 to i8
  %9562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9561, i8* %9562, align 1
  %9563 = lshr i32 %9536, 31
  %9564 = xor i32 %9560, %9563
  %9565 = add i32 %9564, %9560
  %9566 = icmp eq i32 %9565, 2
  %9567 = zext i1 %9566 to i8
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9567, i8* %9568, align 1
  store %struct.Memory* %loadMem_40fb92, %struct.Memory** %MEMORY
  %loadMem_40fb95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9570 = getelementptr inbounds %struct.GPR, %struct.GPR* %9569, i32 0, i32 33
  %9571 = getelementptr inbounds %struct.Reg, %struct.Reg* %9570, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %9571 to i64*
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 9
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %RSI.i399 = bitcast %union.anon* %9574 to i64*
  %9575 = load i64, i64* %RSI.i399
  %9576 = load i64, i64* %PC.i398
  %9577 = add i64 %9576, 3
  store i64 %9577, i64* %PC.i398
  %9578 = shl i64 %9575, 32
  %9579 = ashr exact i64 %9578, 32
  %9580 = ashr i64 %9579, 5
  %9581 = lshr i64 %9580, 1
  %9582 = trunc i64 %9580 to i8
  %9583 = and i8 %9582, 1
  %9584 = trunc i64 %9581 to i32
  %9585 = and i64 %9581, 4294967295
  store i64 %9585, i64* %RSI.i399, align 8
  %9586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9583, i8* %9586, align 1
  %9587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9588 = and i32 %9584, 255
  %9589 = call i32 @llvm.ctpop.i32(i32 %9588)
  %9590 = trunc i32 %9589 to i8
  %9591 = and i8 %9590, 1
  %9592 = xor i8 %9591, 1
  store i8 %9592, i8* %9587, align 1
  %9593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9593, align 1
  %9594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9595 = icmp eq i32 %9584, 0
  %9596 = zext i1 %9595 to i8
  store i8 %9596, i8* %9594, align 1
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9598 = lshr i32 %9584, 31
  %9599 = trunc i32 %9598 to i8
  store i8 %9599, i8* %9597, align 1
  %9600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9600, align 1
  store %struct.Memory* %loadMem_40fb95, %struct.Memory** %MEMORY
  %loadMem_40fb98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9602 = getelementptr inbounds %struct.GPR, %struct.GPR* %9601, i32 0, i32 33
  %9603 = getelementptr inbounds %struct.Reg, %struct.Reg* %9602, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %9603 to i64*
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9605 = getelementptr inbounds %struct.GPR, %struct.GPR* %9604, i32 0, i32 1
  %9606 = getelementptr inbounds %struct.Reg, %struct.Reg* %9605, i32 0, i32 0
  %EAX.i397 = bitcast %union.anon* %9606 to i32*
  %9607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9608 = getelementptr inbounds %struct.GPR, %struct.GPR* %9607, i32 0, i32 9
  %9609 = getelementptr inbounds %struct.Reg, %struct.Reg* %9608, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %9609 to i32*
  %9610 = load i32, i32* %EAX.i397
  %9611 = zext i32 %9610 to i64
  %9612 = load i32, i32* %ESI.i
  %9613 = zext i32 %9612 to i64
  %9614 = load i64, i64* %PC.i396
  %9615 = add i64 %9614, 2
  store i64 %9615, i64* %PC.i396
  %9616 = sub i32 %9610, %9612
  %9617 = icmp ult i32 %9610, %9612
  %9618 = zext i1 %9617 to i8
  %9619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9618, i8* %9619, align 1
  %9620 = and i32 %9616, 255
  %9621 = call i32 @llvm.ctpop.i32(i32 %9620)
  %9622 = trunc i32 %9621 to i8
  %9623 = and i8 %9622, 1
  %9624 = xor i8 %9623, 1
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9624, i8* %9625, align 1
  %9626 = xor i64 %9613, %9611
  %9627 = trunc i64 %9626 to i32
  %9628 = xor i32 %9627, %9616
  %9629 = lshr i32 %9628, 4
  %9630 = trunc i32 %9629 to i8
  %9631 = and i8 %9630, 1
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9631, i8* %9632, align 1
  %9633 = icmp eq i32 %9616, 0
  %9634 = zext i1 %9633 to i8
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9634, i8* %9635, align 1
  %9636 = lshr i32 %9616, 31
  %9637 = trunc i32 %9636 to i8
  %9638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9637, i8* %9638, align 1
  %9639 = lshr i32 %9610, 31
  %9640 = lshr i32 %9612, 31
  %9641 = xor i32 %9640, %9639
  %9642 = xor i32 %9636, %9639
  %9643 = add i32 %9642, %9641
  %9644 = icmp eq i32 %9643, 2
  %9645 = zext i1 %9644 to i8
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9645, i8* %9646, align 1
  store %struct.Memory* %loadMem_40fb98, %struct.Memory** %MEMORY
  %loadMem_40fb9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9648 = getelementptr inbounds %struct.GPR, %struct.GPR* %9647, i32 0, i32 33
  %9649 = getelementptr inbounds %struct.Reg, %struct.Reg* %9648, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %9649 to i64*
  %9650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9651 = getelementptr inbounds %struct.GPR, %struct.GPR* %9650, i32 0, i32 5
  %9652 = getelementptr inbounds %struct.Reg, %struct.Reg* %9651, i32 0, i32 0
  %ECX.i394 = bitcast %union.anon* %9652 to i32*
  %9653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9654 = getelementptr inbounds %struct.GPR, %struct.GPR* %9653, i32 0, i32 15
  %9655 = getelementptr inbounds %struct.Reg, %struct.Reg* %9654, i32 0, i32 0
  %RBP.i395 = bitcast %union.anon* %9655 to i64*
  %9656 = load i64, i64* %RBP.i395
  %9657 = sub i64 %9656, 188
  %9658 = load i32, i32* %ECX.i394
  %9659 = zext i32 %9658 to i64
  %9660 = load i64, i64* %PC.i393
  %9661 = add i64 %9660, 6
  store i64 %9661, i64* %PC.i393
  %9662 = inttoptr i64 %9657 to i32*
  store i32 %9658, i32* %9662
  store %struct.Memory* %loadMem_40fb9a, %struct.Memory** %MEMORY
  %loadMem_40fba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9664 = getelementptr inbounds %struct.GPR, %struct.GPR* %9663, i32 0, i32 33
  %9665 = getelementptr inbounds %struct.Reg, %struct.Reg* %9664, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %9665 to i64*
  %9666 = load i64, i64* %PC.i392
  %9667 = add i64 %9666, 19
  %9668 = load i64, i64* %PC.i392
  %9669 = add i64 %9668, 6
  %9670 = load i64, i64* %PC.i392
  %9671 = add i64 %9670, 6
  store i64 %9671, i64* %PC.i392
  %9672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9673 = load i8, i8* %9672, align 1
  %9674 = icmp ne i8 %9673, 0
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9676 = load i8, i8* %9675, align 1
  %9677 = icmp ne i8 %9676, 0
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9679 = load i8, i8* %9678, align 1
  %9680 = icmp ne i8 %9679, 0
  %9681 = xor i1 %9677, %9680
  %9682 = or i1 %9674, %9681
  %9683 = zext i1 %9682 to i8
  store i8 %9683, i8* %BRANCH_TAKEN, align 1
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9685 = select i1 %9682, i64 %9667, i64 %9669
  store i64 %9685, i64* %9684, align 8
  store %struct.Memory* %loadMem_40fba0, %struct.Memory** %MEMORY
  %loadBr_40fba0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fba0 = icmp eq i8 %loadBr_40fba0, 1
  br i1 %cmpBr_40fba0, label %block_.L_40fbb3, label %block_40fba6

block_40fba6:                                     ; preds = %block_40fb67
  %loadMem_40fba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9687 = getelementptr inbounds %struct.GPR, %struct.GPR* %9686, i32 0, i32 33
  %9688 = getelementptr inbounds %struct.Reg, %struct.Reg* %9687, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %9688 to i64*
  %9689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9690 = getelementptr inbounds %struct.GPR, %struct.GPR* %9689, i32 0, i32 1
  %9691 = getelementptr inbounds %struct.Reg, %struct.Reg* %9690, i32 0, i32 0
  %EAX.i390 = bitcast %union.anon* %9691 to i32*
  %9692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9693 = getelementptr inbounds %struct.GPR, %struct.GPR* %9692, i32 0, i32 1
  %9694 = getelementptr inbounds %struct.Reg, %struct.Reg* %9693, i32 0, i32 0
  %RAX.i391 = bitcast %union.anon* %9694 to i64*
  %9695 = load i64, i64* %RAX.i391
  %9696 = load i32, i32* %EAX.i390
  %9697 = zext i32 %9696 to i64
  %9698 = load i64, i64* %PC.i389
  %9699 = add i64 %9698, 2
  store i64 %9699, i64* %PC.i389
  %9700 = xor i64 %9697, %9695
  %9701 = trunc i64 %9700 to i32
  %9702 = and i64 %9700, 4294967295
  store i64 %9702, i64* %RAX.i391, align 8
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9703, align 1
  %9704 = and i32 %9701, 255
  %9705 = call i32 @llvm.ctpop.i32(i32 %9704)
  %9706 = trunc i32 %9705 to i8
  %9707 = and i8 %9706, 1
  %9708 = xor i8 %9707, 1
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9708, i8* %9709, align 1
  %9710 = icmp eq i32 %9701, 0
  %9711 = zext i1 %9710 to i8
  %9712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9711, i8* %9712, align 1
  %9713 = lshr i32 %9701, 31
  %9714 = trunc i32 %9713 to i8
  %9715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9714, i8* %9715, align 1
  %9716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9716, align 1
  %9717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9717, align 1
  store %struct.Memory* %loadMem_40fba6, %struct.Memory** %MEMORY
  %loadMem_40fba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9719 = getelementptr inbounds %struct.GPR, %struct.GPR* %9718, i32 0, i32 33
  %9720 = getelementptr inbounds %struct.Reg, %struct.Reg* %9719, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %9720 to i64*
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9722 = getelementptr inbounds %struct.GPR, %struct.GPR* %9721, i32 0, i32 1
  %9723 = getelementptr inbounds %struct.Reg, %struct.Reg* %9722, i32 0, i32 0
  %EAX.i387 = bitcast %union.anon* %9723 to i32*
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9725 = getelementptr inbounds %struct.GPR, %struct.GPR* %9724, i32 0, i32 15
  %9726 = getelementptr inbounds %struct.Reg, %struct.Reg* %9725, i32 0, i32 0
  %RBP.i388 = bitcast %union.anon* %9726 to i64*
  %9727 = load i64, i64* %RBP.i388
  %9728 = sub i64 %9727, 192
  %9729 = load i32, i32* %EAX.i387
  %9730 = zext i32 %9729 to i64
  %9731 = load i64, i64* %PC.i386
  %9732 = add i64 %9731, 6
  store i64 %9732, i64* %PC.i386
  %9733 = inttoptr i64 %9728 to i32*
  store i32 %9729, i32* %9733
  store %struct.Memory* %loadMem_40fba8, %struct.Memory** %MEMORY
  %loadMem_40fbae = load %struct.Memory*, %struct.Memory** %MEMORY
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9735 = getelementptr inbounds %struct.GPR, %struct.GPR* %9734, i32 0, i32 33
  %9736 = getelementptr inbounds %struct.Reg, %struct.Reg* %9735, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %9736 to i64*
  %9737 = load i64, i64* %PC.i385
  %9738 = add i64 %9737, 33
  %9739 = load i64, i64* %PC.i385
  %9740 = add i64 %9739, 5
  store i64 %9740, i64* %PC.i385
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9738, i64* %9741, align 8
  store %struct.Memory* %loadMem_40fbae, %struct.Memory** %MEMORY
  br label %block_.L_40fbcf

block_.L_40fbb3:                                  ; preds = %block_40fb67
  %loadMem_40fbb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9743 = getelementptr inbounds %struct.GPR, %struct.GPR* %9742, i32 0, i32 33
  %9744 = getelementptr inbounds %struct.Reg, %struct.Reg* %9743, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %9744 to i64*
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9746 = getelementptr inbounds %struct.GPR, %struct.GPR* %9745, i32 0, i32 1
  %9747 = getelementptr inbounds %struct.Reg, %struct.Reg* %9746, i32 0, i32 0
  %RAX.i383 = bitcast %union.anon* %9747 to i64*
  %9748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9749 = getelementptr inbounds %struct.GPR, %struct.GPR* %9748, i32 0, i32 15
  %9750 = getelementptr inbounds %struct.Reg, %struct.Reg* %9749, i32 0, i32 0
  %RBP.i384 = bitcast %union.anon* %9750 to i64*
  %9751 = load i64, i64* %RBP.i384
  %9752 = sub i64 %9751, 16
  %9753 = load i64, i64* %PC.i382
  %9754 = add i64 %9753, 4
  store i64 %9754, i64* %PC.i382
  %9755 = inttoptr i64 %9752 to i32*
  %9756 = load i32, i32* %9755
  %9757 = sext i32 %9756 to i64
  store i64 %9757, i64* %RAX.i383, align 8
  store %struct.Memory* %loadMem_40fbb3, %struct.Memory** %MEMORY
  %loadMem_40fbb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9759 = getelementptr inbounds %struct.GPR, %struct.GPR* %9758, i32 0, i32 33
  %9760 = getelementptr inbounds %struct.Reg, %struct.Reg* %9759, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %9760 to i64*
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9762 = getelementptr inbounds %struct.GPR, %struct.GPR* %9761, i32 0, i32 1
  %9763 = getelementptr inbounds %struct.Reg, %struct.Reg* %9762, i32 0, i32 0
  %RAX.i379 = bitcast %union.anon* %9763 to i64*
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9765 = getelementptr inbounds %struct.GPR, %struct.GPR* %9764, i32 0, i32 5
  %9766 = getelementptr inbounds %struct.Reg, %struct.Reg* %9765, i32 0, i32 0
  %RCX.i380 = bitcast %union.anon* %9766 to i64*
  %9767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9768 = getelementptr inbounds %struct.GPR, %struct.GPR* %9767, i32 0, i32 15
  %9769 = getelementptr inbounds %struct.Reg, %struct.Reg* %9768, i32 0, i32 0
  %RBP.i381 = bitcast %union.anon* %9769 to i64*
  %9770 = load i64, i64* %RBP.i381
  %9771 = load i64, i64* %RAX.i379
  %9772 = mul i64 %9771, 4
  %9773 = add i64 %9770, -64
  %9774 = add i64 %9773, %9772
  %9775 = load i64, i64* %PC.i378
  %9776 = add i64 %9775, 4
  store i64 %9776, i64* %PC.i378
  %9777 = inttoptr i64 %9774 to i32*
  %9778 = load i32, i32* %9777
  %9779 = zext i32 %9778 to i64
  store i64 %9779, i64* %RCX.i380, align 8
  store %struct.Memory* %loadMem_40fbb7, %struct.Memory** %MEMORY
  %loadMem_40fbbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9781 = getelementptr inbounds %struct.GPR, %struct.GPR* %9780, i32 0, i32 33
  %9782 = getelementptr inbounds %struct.Reg, %struct.Reg* %9781, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %9782 to i64*
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9784 = getelementptr inbounds %struct.GPR, %struct.GPR* %9783, i32 0, i32 1
  %9785 = getelementptr inbounds %struct.Reg, %struct.Reg* %9784, i32 0, i32 0
  %RAX.i376 = bitcast %union.anon* %9785 to i64*
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9787 = getelementptr inbounds %struct.GPR, %struct.GPR* %9786, i32 0, i32 15
  %9788 = getelementptr inbounds %struct.Reg, %struct.Reg* %9787, i32 0, i32 0
  %RBP.i377 = bitcast %union.anon* %9788 to i64*
  %9789 = load i64, i64* %RBP.i377
  %9790 = sub i64 %9789, 24
  %9791 = load i64, i64* %PC.i375
  %9792 = add i64 %9791, 4
  store i64 %9792, i64* %PC.i375
  %9793 = inttoptr i64 %9790 to i32*
  %9794 = load i32, i32* %9793
  %9795 = sext i32 %9794 to i64
  store i64 %9795, i64* %RAX.i376, align 8
  store %struct.Memory* %loadMem_40fbbb, %struct.Memory** %MEMORY
  %loadMem_40fbbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9797 = getelementptr inbounds %struct.GPR, %struct.GPR* %9796, i32 0, i32 33
  %9798 = getelementptr inbounds %struct.Reg, %struct.Reg* %9797, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %9798 to i64*
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9800 = getelementptr inbounds %struct.GPR, %struct.GPR* %9799, i32 0, i32 1
  %9801 = getelementptr inbounds %struct.Reg, %struct.Reg* %9800, i32 0, i32 0
  %RAX.i372 = bitcast %union.anon* %9801 to i64*
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9803 = getelementptr inbounds %struct.GPR, %struct.GPR* %9802, i32 0, i32 5
  %9804 = getelementptr inbounds %struct.Reg, %struct.Reg* %9803, i32 0, i32 0
  %RCX.i373 = bitcast %union.anon* %9804 to i64*
  %9805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9806 = getelementptr inbounds %struct.GPR, %struct.GPR* %9805, i32 0, i32 15
  %9807 = getelementptr inbounds %struct.Reg, %struct.Reg* %9806, i32 0, i32 0
  %RBP.i374 = bitcast %union.anon* %9807 to i64*
  %9808 = load i64, i64* %RCX.i373
  %9809 = load i64, i64* %RBP.i374
  %9810 = load i64, i64* %RAX.i372
  %9811 = mul i64 %9810, 4
  %9812 = add i64 %9809, -64
  %9813 = add i64 %9812, %9811
  %9814 = load i64, i64* %PC.i371
  %9815 = add i64 %9814, 4
  store i64 %9815, i64* %PC.i371
  %9816 = trunc i64 %9808 to i32
  %9817 = inttoptr i64 %9813 to i32*
  %9818 = load i32, i32* %9817
  %9819 = add i32 %9818, %9816
  %9820 = zext i32 %9819 to i64
  store i64 %9820, i64* %RCX.i373, align 8
  %9821 = icmp ult i32 %9819, %9816
  %9822 = icmp ult i32 %9819, %9818
  %9823 = or i1 %9821, %9822
  %9824 = zext i1 %9823 to i8
  %9825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9824, i8* %9825, align 1
  %9826 = and i32 %9819, 255
  %9827 = call i32 @llvm.ctpop.i32(i32 %9826)
  %9828 = trunc i32 %9827 to i8
  %9829 = and i8 %9828, 1
  %9830 = xor i8 %9829, 1
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9830, i8* %9831, align 1
  %9832 = xor i32 %9818, %9816
  %9833 = xor i32 %9832, %9819
  %9834 = lshr i32 %9833, 4
  %9835 = trunc i32 %9834 to i8
  %9836 = and i8 %9835, 1
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9836, i8* %9837, align 1
  %9838 = icmp eq i32 %9819, 0
  %9839 = zext i1 %9838 to i8
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9839, i8* %9840, align 1
  %9841 = lshr i32 %9819, 31
  %9842 = trunc i32 %9841 to i8
  %9843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9842, i8* %9843, align 1
  %9844 = lshr i32 %9816, 31
  %9845 = lshr i32 %9818, 31
  %9846 = xor i32 %9841, %9844
  %9847 = xor i32 %9841, %9845
  %9848 = add i32 %9846, %9847
  %9849 = icmp eq i32 %9848, 2
  %9850 = zext i1 %9849 to i8
  %9851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9850, i8* %9851, align 1
  store %struct.Memory* %loadMem_40fbbf, %struct.Memory** %MEMORY
  %loadMem_40fbc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9853 = getelementptr inbounds %struct.GPR, %struct.GPR* %9852, i32 0, i32 33
  %9854 = getelementptr inbounds %struct.Reg, %struct.Reg* %9853, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %9854 to i64*
  %9855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9856 = getelementptr inbounds %struct.GPR, %struct.GPR* %9855, i32 0, i32 5
  %9857 = getelementptr inbounds %struct.Reg, %struct.Reg* %9856, i32 0, i32 0
  %RCX.i370 = bitcast %union.anon* %9857 to i64*
  %9858 = load i64, i64* %RCX.i370
  %9859 = load i64, i64* %PC.i369
  %9860 = add i64 %9859, 3
  store i64 %9860, i64* %PC.i369
  %9861 = trunc i64 %9858 to i32
  %9862 = add i32 32, %9861
  %9863 = zext i32 %9862 to i64
  store i64 %9863, i64* %RCX.i370, align 8
  %9864 = icmp ult i32 %9862, %9861
  %9865 = icmp ult i32 %9862, 32
  %9866 = or i1 %9864, %9865
  %9867 = zext i1 %9866 to i8
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9867, i8* %9868, align 1
  %9869 = and i32 %9862, 255
  %9870 = call i32 @llvm.ctpop.i32(i32 %9869)
  %9871 = trunc i32 %9870 to i8
  %9872 = and i8 %9871, 1
  %9873 = xor i8 %9872, 1
  %9874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9873, i8* %9874, align 1
  %9875 = xor i64 32, %9858
  %9876 = trunc i64 %9875 to i32
  %9877 = xor i32 %9876, %9862
  %9878 = lshr i32 %9877, 4
  %9879 = trunc i32 %9878 to i8
  %9880 = and i8 %9879, 1
  %9881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9880, i8* %9881, align 1
  %9882 = icmp eq i32 %9862, 0
  %9883 = zext i1 %9882 to i8
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9883, i8* %9884, align 1
  %9885 = lshr i32 %9862, 31
  %9886 = trunc i32 %9885 to i8
  %9887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9886, i8* %9887, align 1
  %9888 = lshr i32 %9861, 31
  %9889 = xor i32 %9885, %9888
  %9890 = add i32 %9889, %9885
  %9891 = icmp eq i32 %9890, 2
  %9892 = zext i1 %9891 to i8
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9892, i8* %9893, align 1
  store %struct.Memory* %loadMem_40fbc3, %struct.Memory** %MEMORY
  %loadMem_40fbc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9895 = getelementptr inbounds %struct.GPR, %struct.GPR* %9894, i32 0, i32 33
  %9896 = getelementptr inbounds %struct.Reg, %struct.Reg* %9895, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %9896 to i64*
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9898 = getelementptr inbounds %struct.GPR, %struct.GPR* %9897, i32 0, i32 5
  %9899 = getelementptr inbounds %struct.Reg, %struct.Reg* %9898, i32 0, i32 0
  %RCX.i368 = bitcast %union.anon* %9899 to i64*
  %9900 = load i64, i64* %RCX.i368
  %9901 = load i64, i64* %PC.i367
  %9902 = add i64 %9901, 3
  store i64 %9902, i64* %PC.i367
  %9903 = shl i64 %9900, 32
  %9904 = ashr exact i64 %9903, 32
  %9905 = ashr i64 %9904, 5
  %9906 = lshr i64 %9905, 1
  %9907 = trunc i64 %9905 to i8
  %9908 = and i8 %9907, 1
  %9909 = trunc i64 %9906 to i32
  %9910 = and i64 %9906, 4294967295
  store i64 %9910, i64* %RCX.i368, align 8
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9908, i8* %9911, align 1
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9913 = and i32 %9909, 255
  %9914 = call i32 @llvm.ctpop.i32(i32 %9913)
  %9915 = trunc i32 %9914 to i8
  %9916 = and i8 %9915, 1
  %9917 = xor i8 %9916, 1
  store i8 %9917, i8* %9912, align 1
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9918, align 1
  %9919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9920 = icmp eq i32 %9909, 0
  %9921 = zext i1 %9920 to i8
  store i8 %9921, i8* %9919, align 1
  %9922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9923 = lshr i32 %9909, 31
  %9924 = trunc i32 %9923 to i8
  store i8 %9924, i8* %9922, align 1
  %9925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9925, align 1
  store %struct.Memory* %loadMem_40fbc6, %struct.Memory** %MEMORY
  %loadMem_40fbc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 33
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %9928 to i64*
  %9929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9930 = getelementptr inbounds %struct.GPR, %struct.GPR* %9929, i32 0, i32 5
  %9931 = getelementptr inbounds %struct.Reg, %struct.Reg* %9930, i32 0, i32 0
  %ECX.i365 = bitcast %union.anon* %9931 to i32*
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9933 = getelementptr inbounds %struct.GPR, %struct.GPR* %9932, i32 0, i32 15
  %9934 = getelementptr inbounds %struct.Reg, %struct.Reg* %9933, i32 0, i32 0
  %RBP.i366 = bitcast %union.anon* %9934 to i64*
  %9935 = load i64, i64* %RBP.i366
  %9936 = sub i64 %9935, 192
  %9937 = load i32, i32* %ECX.i365
  %9938 = zext i32 %9937 to i64
  %9939 = load i64, i64* %PC.i364
  %9940 = add i64 %9939, 6
  store i64 %9940, i64* %PC.i364
  %9941 = inttoptr i64 %9936 to i32*
  store i32 %9937, i32* %9941
  store %struct.Memory* %loadMem_40fbc9, %struct.Memory** %MEMORY
  br label %block_.L_40fbcf

block_.L_40fbcf:                                  ; preds = %block_.L_40fbb3, %block_40fba6
  %loadMem_40fbcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9943 = getelementptr inbounds %struct.GPR, %struct.GPR* %9942, i32 0, i32 33
  %9944 = getelementptr inbounds %struct.Reg, %struct.Reg* %9943, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %9944 to i64*
  %9945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9946 = getelementptr inbounds %struct.GPR, %struct.GPR* %9945, i32 0, i32 1
  %9947 = getelementptr inbounds %struct.Reg, %struct.Reg* %9946, i32 0, i32 0
  %RAX.i362 = bitcast %union.anon* %9947 to i64*
  %9948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9949 = getelementptr inbounds %struct.GPR, %struct.GPR* %9948, i32 0, i32 15
  %9950 = getelementptr inbounds %struct.Reg, %struct.Reg* %9949, i32 0, i32 0
  %RBP.i363 = bitcast %union.anon* %9950 to i64*
  %9951 = load i64, i64* %RBP.i363
  %9952 = sub i64 %9951, 192
  %9953 = load i64, i64* %PC.i361
  %9954 = add i64 %9953, 6
  store i64 %9954, i64* %PC.i361
  %9955 = inttoptr i64 %9952 to i32*
  %9956 = load i32, i32* %9955
  %9957 = zext i32 %9956 to i64
  store i64 %9957, i64* %RAX.i362, align 8
  store %struct.Memory* %loadMem_40fbcf, %struct.Memory** %MEMORY
  %loadMem_40fbd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9959 = getelementptr inbounds %struct.GPR, %struct.GPR* %9958, i32 0, i32 33
  %9960 = getelementptr inbounds %struct.Reg, %struct.Reg* %9959, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %9960 to i64*
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9962 = getelementptr inbounds %struct.GPR, %struct.GPR* %9961, i32 0, i32 5
  %9963 = getelementptr inbounds %struct.Reg, %struct.Reg* %9962, i32 0, i32 0
  %RCX.i359 = bitcast %union.anon* %9963 to i64*
  %9964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9965 = getelementptr inbounds %struct.GPR, %struct.GPR* %9964, i32 0, i32 15
  %9966 = getelementptr inbounds %struct.Reg, %struct.Reg* %9965, i32 0, i32 0
  %RBP.i360 = bitcast %union.anon* %9966 to i64*
  %9967 = load i64, i64* %RBP.i360
  %9968 = sub i64 %9967, 188
  %9969 = load i64, i64* %PC.i358
  %9970 = add i64 %9969, 6
  store i64 %9970, i64* %PC.i358
  %9971 = inttoptr i64 %9968 to i32*
  %9972 = load i32, i32* %9971
  %9973 = zext i32 %9972 to i64
  store i64 %9973, i64* %RCX.i359, align 8
  store %struct.Memory* %loadMem_40fbd5, %struct.Memory** %MEMORY
  %loadMem_40fbdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9975 = getelementptr inbounds %struct.GPR, %struct.GPR* %9974, i32 0, i32 33
  %9976 = getelementptr inbounds %struct.Reg, %struct.Reg* %9975, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %9976 to i64*
  %9977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9978 = getelementptr inbounds %struct.GPR, %struct.GPR* %9977, i32 0, i32 1
  %9979 = getelementptr inbounds %struct.Reg, %struct.Reg* %9978, i32 0, i32 0
  %EAX.i356 = bitcast %union.anon* %9979 to i32*
  %9980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9981 = getelementptr inbounds %struct.GPR, %struct.GPR* %9980, i32 0, i32 5
  %9982 = getelementptr inbounds %struct.Reg, %struct.Reg* %9981, i32 0, i32 0
  %ECX.i357 = bitcast %union.anon* %9982 to i32*
  %9983 = load i32, i32* %ECX.i357
  %9984 = zext i32 %9983 to i64
  %9985 = load i32, i32* %EAX.i356
  %9986 = zext i32 %9985 to i64
  %9987 = load i64, i64* %PC.i355
  %9988 = add i64 %9987, 2
  store i64 %9988, i64* %PC.i355
  %9989 = sub i32 %9983, %9985
  %9990 = icmp ult i32 %9983, %9985
  %9991 = zext i1 %9990 to i8
  %9992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9991, i8* %9992, align 1
  %9993 = and i32 %9989, 255
  %9994 = call i32 @llvm.ctpop.i32(i32 %9993)
  %9995 = trunc i32 %9994 to i8
  %9996 = and i8 %9995, 1
  %9997 = xor i8 %9996, 1
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9997, i8* %9998, align 1
  %9999 = xor i64 %9986, %9984
  %10000 = trunc i64 %9999 to i32
  %10001 = xor i32 %10000, %9989
  %10002 = lshr i32 %10001, 4
  %10003 = trunc i32 %10002 to i8
  %10004 = and i8 %10003, 1
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10004, i8* %10005, align 1
  %10006 = icmp eq i32 %9989, 0
  %10007 = zext i1 %10006 to i8
  %10008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10007, i8* %10008, align 1
  %10009 = lshr i32 %9989, 31
  %10010 = trunc i32 %10009 to i8
  %10011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10010, i8* %10011, align 1
  %10012 = lshr i32 %9983, 31
  %10013 = lshr i32 %9985, 31
  %10014 = xor i32 %10013, %10012
  %10015 = xor i32 %10009, %10012
  %10016 = add i32 %10015, %10014
  %10017 = icmp eq i32 %10016, 2
  %10018 = zext i1 %10017 to i8
  %10019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10018, i8* %10019, align 1
  store %struct.Memory* %loadMem_40fbdb, %struct.Memory** %MEMORY
  %loadMem_40fbdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10021 = getelementptr inbounds %struct.GPR, %struct.GPR* %10020, i32 0, i32 33
  %10022 = getelementptr inbounds %struct.Reg, %struct.Reg* %10021, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %10022 to i64*
  %10023 = load i64, i64* %PC.i354
  %10024 = add i64 %10023, 31
  %10025 = load i64, i64* %PC.i354
  %10026 = add i64 %10025, 6
  %10027 = load i64, i64* %PC.i354
  %10028 = add i64 %10027, 6
  store i64 %10028, i64* %PC.i354
  %10029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10030 = load i8, i8* %10029, align 1
  %10031 = icmp ne i8 %10030, 0
  %10032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10033 = load i8, i8* %10032, align 1
  %10034 = icmp ne i8 %10033, 0
  %10035 = xor i1 %10031, %10034
  %10036 = xor i1 %10035, true
  %10037 = zext i1 %10036 to i8
  store i8 %10037, i8* %BRANCH_TAKEN, align 1
  %10038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10039 = select i1 %10035, i64 %10026, i64 %10024
  store i64 %10039, i64* %10038, align 8
  store %struct.Memory* %loadMem_40fbdd, %struct.Memory** %MEMORY
  %loadBr_40fbdd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fbdd = icmp eq i8 %loadBr_40fbdd, 1
  br i1 %cmpBr_40fbdd, label %block_.L_40fbfc, label %block_40fbe3

block_40fbe3:                                     ; preds = %block_.L_40fbcf
  %loadMem_40fbe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10041 = getelementptr inbounds %struct.GPR, %struct.GPR* %10040, i32 0, i32 33
  %10042 = getelementptr inbounds %struct.Reg, %struct.Reg* %10041, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %10042 to i64*
  %10043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10044 = getelementptr inbounds %struct.GPR, %struct.GPR* %10043, i32 0, i32 1
  %10045 = getelementptr inbounds %struct.Reg, %struct.Reg* %10044, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %10045 to i64*
  %10046 = load i64, i64* %PC.i352
  %10047 = add i64 %10046, 8
  store i64 %10047, i64* %PC.i352
  %10048 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10048, i64* %RAX.i353, align 8
  store %struct.Memory* %loadMem_40fbe3, %struct.Memory** %MEMORY
  %loadMem_40fbeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10050 = getelementptr inbounds %struct.GPR, %struct.GPR* %10049, i32 0, i32 33
  %10051 = getelementptr inbounds %struct.Reg, %struct.Reg* %10050, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %10051 to i64*
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10053 = getelementptr inbounds %struct.GPR, %struct.GPR* %10052, i32 0, i32 1
  %10054 = getelementptr inbounds %struct.Reg, %struct.Reg* %10053, i32 0, i32 0
  %RAX.i350 = bitcast %union.anon* %10054 to i64*
  %10055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10056 = getelementptr inbounds %struct.GPR, %struct.GPR* %10055, i32 0, i32 5
  %10057 = getelementptr inbounds %struct.Reg, %struct.Reg* %10056, i32 0, i32 0
  %RCX.i351 = bitcast %union.anon* %10057 to i64*
  %10058 = load i64, i64* %RAX.i350
  %10059 = add i64 %10058, 72684
  %10060 = load i64, i64* %PC.i349
  %10061 = add i64 %10060, 6
  store i64 %10061, i64* %PC.i349
  %10062 = inttoptr i64 %10059 to i32*
  %10063 = load i32, i32* %10062
  %10064 = zext i32 %10063 to i64
  store i64 %10064, i64* %RCX.i351, align 8
  store %struct.Memory* %loadMem_40fbeb, %struct.Memory** %MEMORY
  %loadMem_40fbf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10066 = getelementptr inbounds %struct.GPR, %struct.GPR* %10065, i32 0, i32 33
  %10067 = getelementptr inbounds %struct.Reg, %struct.Reg* %10066, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %10067 to i64*
  %10068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10069 = getelementptr inbounds %struct.GPR, %struct.GPR* %10068, i32 0, i32 5
  %10070 = getelementptr inbounds %struct.Reg, %struct.Reg* %10069, i32 0, i32 0
  %ECX.i347 = bitcast %union.anon* %10070 to i32*
  %10071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10072 = getelementptr inbounds %struct.GPR, %struct.GPR* %10071, i32 0, i32 15
  %10073 = getelementptr inbounds %struct.Reg, %struct.Reg* %10072, i32 0, i32 0
  %RBP.i348 = bitcast %union.anon* %10073 to i64*
  %10074 = load i64, i64* %RBP.i348
  %10075 = sub i64 %10074, 196
  %10076 = load i32, i32* %ECX.i347
  %10077 = zext i32 %10076 to i64
  %10078 = load i64, i64* %PC.i346
  %10079 = add i64 %10078, 6
  store i64 %10079, i64* %PC.i346
  %10080 = inttoptr i64 %10075 to i32*
  store i32 %10076, i32* %10080
  store %struct.Memory* %loadMem_40fbf1, %struct.Memory** %MEMORY
  %loadMem_40fbf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10082 = getelementptr inbounds %struct.GPR, %struct.GPR* %10081, i32 0, i32 33
  %10083 = getelementptr inbounds %struct.Reg, %struct.Reg* %10082, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %10083 to i64*
  %10084 = load i64, i64* %PC.i345
  %10085 = add i64 %10084, 90
  %10086 = load i64, i64* %PC.i345
  %10087 = add i64 %10086, 5
  store i64 %10087, i64* %PC.i345
  %10088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10085, i64* %10088, align 8
  store %struct.Memory* %loadMem_40fbf7, %struct.Memory** %MEMORY
  br label %block_.L_40fc51

block_.L_40fbfc:                                  ; preds = %block_.L_40fbcf
  %loadMem_40fbfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10090 = getelementptr inbounds %struct.GPR, %struct.GPR* %10089, i32 0, i32 33
  %10091 = getelementptr inbounds %struct.Reg, %struct.Reg* %10090, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %10091 to i64*
  %10092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10093 = getelementptr inbounds %struct.GPR, %struct.GPR* %10092, i32 0, i32 1
  %10094 = getelementptr inbounds %struct.Reg, %struct.Reg* %10093, i32 0, i32 0
  %EAX.i343 = bitcast %union.anon* %10094 to i32*
  %10095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10096 = getelementptr inbounds %struct.GPR, %struct.GPR* %10095, i32 0, i32 1
  %10097 = getelementptr inbounds %struct.Reg, %struct.Reg* %10096, i32 0, i32 0
  %RAX.i344 = bitcast %union.anon* %10097 to i64*
  %10098 = load i64, i64* %RAX.i344
  %10099 = load i32, i32* %EAX.i343
  %10100 = zext i32 %10099 to i64
  %10101 = load i64, i64* %PC.i342
  %10102 = add i64 %10101, 2
  store i64 %10102, i64* %PC.i342
  %10103 = xor i64 %10100, %10098
  %10104 = trunc i64 %10103 to i32
  %10105 = and i64 %10103, 4294967295
  store i64 %10105, i64* %RAX.i344, align 8
  %10106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10106, align 1
  %10107 = and i32 %10104, 255
  %10108 = call i32 @llvm.ctpop.i32(i32 %10107)
  %10109 = trunc i32 %10108 to i8
  %10110 = and i8 %10109, 1
  %10111 = xor i8 %10110, 1
  %10112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10111, i8* %10112, align 1
  %10113 = icmp eq i32 %10104, 0
  %10114 = zext i1 %10113 to i8
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10114, i8* %10115, align 1
  %10116 = lshr i32 %10104, 31
  %10117 = trunc i32 %10116 to i8
  %10118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10117, i8* %10118, align 1
  %10119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10119, align 1
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10120, align 1
  store %struct.Memory* %loadMem_40fbfc, %struct.Memory** %MEMORY
  %loadMem_40fbfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10122 = getelementptr inbounds %struct.GPR, %struct.GPR* %10121, i32 0, i32 33
  %10123 = getelementptr inbounds %struct.Reg, %struct.Reg* %10122, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %10123 to i64*
  %10124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10125 = getelementptr inbounds %struct.GPR, %struct.GPR* %10124, i32 0, i32 5
  %10126 = getelementptr inbounds %struct.Reg, %struct.Reg* %10125, i32 0, i32 0
  %RCX.i340 = bitcast %union.anon* %10126 to i64*
  %10127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10128 = getelementptr inbounds %struct.GPR, %struct.GPR* %10127, i32 0, i32 15
  %10129 = getelementptr inbounds %struct.Reg, %struct.Reg* %10128, i32 0, i32 0
  %RBP.i341 = bitcast %union.anon* %10129 to i64*
  %10130 = load i64, i64* %RBP.i341
  %10131 = sub i64 %10130, 16
  %10132 = load i64, i64* %PC.i339
  %10133 = add i64 %10132, 4
  store i64 %10133, i64* %PC.i339
  %10134 = inttoptr i64 %10131 to i32*
  %10135 = load i32, i32* %10134
  %10136 = sext i32 %10135 to i64
  store i64 %10136, i64* %RCX.i340, align 8
  store %struct.Memory* %loadMem_40fbfe, %struct.Memory** %MEMORY
  %loadMem_40fc02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10138 = getelementptr inbounds %struct.GPR, %struct.GPR* %10137, i32 0, i32 33
  %10139 = getelementptr inbounds %struct.Reg, %struct.Reg* %10138, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %10139 to i64*
  %10140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10141 = getelementptr inbounds %struct.GPR, %struct.GPR* %10140, i32 0, i32 5
  %10142 = getelementptr inbounds %struct.Reg, %struct.Reg* %10141, i32 0, i32 0
  %RCX.i336 = bitcast %union.anon* %10142 to i64*
  %10143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10144 = getelementptr inbounds %struct.GPR, %struct.GPR* %10143, i32 0, i32 7
  %10145 = getelementptr inbounds %struct.Reg, %struct.Reg* %10144, i32 0, i32 0
  %RDX.i337 = bitcast %union.anon* %10145 to i64*
  %10146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10147 = getelementptr inbounds %struct.GPR, %struct.GPR* %10146, i32 0, i32 15
  %10148 = getelementptr inbounds %struct.Reg, %struct.Reg* %10147, i32 0, i32 0
  %RBP.i338 = bitcast %union.anon* %10148 to i64*
  %10149 = load i64, i64* %RBP.i338
  %10150 = load i64, i64* %RCX.i336
  %10151 = mul i64 %10150, 4
  %10152 = add i64 %10149, -64
  %10153 = add i64 %10152, %10151
  %10154 = load i64, i64* %PC.i335
  %10155 = add i64 %10154, 4
  store i64 %10155, i64* %PC.i335
  %10156 = inttoptr i64 %10153 to i32*
  %10157 = load i32, i32* %10156
  %10158 = zext i32 %10157 to i64
  store i64 %10158, i64* %RDX.i337, align 8
  store %struct.Memory* %loadMem_40fc02, %struct.Memory** %MEMORY
  %loadMem_40fc06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10160 = getelementptr inbounds %struct.GPR, %struct.GPR* %10159, i32 0, i32 33
  %10161 = getelementptr inbounds %struct.Reg, %struct.Reg* %10160, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %10161 to i64*
  %10162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10163 = getelementptr inbounds %struct.GPR, %struct.GPR* %10162, i32 0, i32 5
  %10164 = getelementptr inbounds %struct.Reg, %struct.Reg* %10163, i32 0, i32 0
  %RCX.i333 = bitcast %union.anon* %10164 to i64*
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10166 = getelementptr inbounds %struct.GPR, %struct.GPR* %10165, i32 0, i32 15
  %10167 = getelementptr inbounds %struct.Reg, %struct.Reg* %10166, i32 0, i32 0
  %RBP.i334 = bitcast %union.anon* %10167 to i64*
  %10168 = load i64, i64* %RBP.i334
  %10169 = sub i64 %10168, 24
  %10170 = load i64, i64* %PC.i332
  %10171 = add i64 %10170, 4
  store i64 %10171, i64* %PC.i332
  %10172 = inttoptr i64 %10169 to i32*
  %10173 = load i32, i32* %10172
  %10174 = sext i32 %10173 to i64
  store i64 %10174, i64* %RCX.i333, align 8
  store %struct.Memory* %loadMem_40fc06, %struct.Memory** %MEMORY
  %loadMem_40fc0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10176 = getelementptr inbounds %struct.GPR, %struct.GPR* %10175, i32 0, i32 33
  %10177 = getelementptr inbounds %struct.Reg, %struct.Reg* %10176, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %10177 to i64*
  %10178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10179 = getelementptr inbounds %struct.GPR, %struct.GPR* %10178, i32 0, i32 5
  %10180 = getelementptr inbounds %struct.Reg, %struct.Reg* %10179, i32 0, i32 0
  %RCX.i329 = bitcast %union.anon* %10180 to i64*
  %10181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10182 = getelementptr inbounds %struct.GPR, %struct.GPR* %10181, i32 0, i32 7
  %10183 = getelementptr inbounds %struct.Reg, %struct.Reg* %10182, i32 0, i32 0
  %RDX.i330 = bitcast %union.anon* %10183 to i64*
  %10184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10185 = getelementptr inbounds %struct.GPR, %struct.GPR* %10184, i32 0, i32 15
  %10186 = getelementptr inbounds %struct.Reg, %struct.Reg* %10185, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %10186 to i64*
  %10187 = load i64, i64* %RDX.i330
  %10188 = load i64, i64* %RBP.i331
  %10189 = load i64, i64* %RCX.i329
  %10190 = mul i64 %10189, 4
  %10191 = add i64 %10188, -64
  %10192 = add i64 %10191, %10190
  %10193 = load i64, i64* %PC.i328
  %10194 = add i64 %10193, 4
  store i64 %10194, i64* %PC.i328
  %10195 = trunc i64 %10187 to i32
  %10196 = inttoptr i64 %10192 to i32*
  %10197 = load i32, i32* %10196
  %10198 = add i32 %10197, %10195
  %10199 = zext i32 %10198 to i64
  store i64 %10199, i64* %RDX.i330, align 8
  %10200 = icmp ult i32 %10198, %10195
  %10201 = icmp ult i32 %10198, %10197
  %10202 = or i1 %10200, %10201
  %10203 = zext i1 %10202 to i8
  %10204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10203, i8* %10204, align 1
  %10205 = and i32 %10198, 255
  %10206 = call i32 @llvm.ctpop.i32(i32 %10205)
  %10207 = trunc i32 %10206 to i8
  %10208 = and i8 %10207, 1
  %10209 = xor i8 %10208, 1
  %10210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10209, i8* %10210, align 1
  %10211 = xor i32 %10197, %10195
  %10212 = xor i32 %10211, %10198
  %10213 = lshr i32 %10212, 4
  %10214 = trunc i32 %10213 to i8
  %10215 = and i8 %10214, 1
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10215, i8* %10216, align 1
  %10217 = icmp eq i32 %10198, 0
  %10218 = zext i1 %10217 to i8
  %10219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10218, i8* %10219, align 1
  %10220 = lshr i32 %10198, 31
  %10221 = trunc i32 %10220 to i8
  %10222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10221, i8* %10222, align 1
  %10223 = lshr i32 %10195, 31
  %10224 = lshr i32 %10197, 31
  %10225 = xor i32 %10220, %10223
  %10226 = xor i32 %10220, %10224
  %10227 = add i32 %10225, %10226
  %10228 = icmp eq i32 %10227, 2
  %10229 = zext i1 %10228 to i8
  %10230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10229, i8* %10230, align 1
  store %struct.Memory* %loadMem_40fc0a, %struct.Memory** %MEMORY
  %loadMem_40fc0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10232 = getelementptr inbounds %struct.GPR, %struct.GPR* %10231, i32 0, i32 33
  %10233 = getelementptr inbounds %struct.Reg, %struct.Reg* %10232, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %10233 to i64*
  %10234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10235 = getelementptr inbounds %struct.GPR, %struct.GPR* %10234, i32 0, i32 7
  %10236 = getelementptr inbounds %struct.Reg, %struct.Reg* %10235, i32 0, i32 0
  %RDX.i327 = bitcast %union.anon* %10236 to i64*
  %10237 = load i64, i64* %RDX.i327
  %10238 = load i64, i64* %PC.i326
  %10239 = add i64 %10238, 3
  store i64 %10239, i64* %PC.i326
  %10240 = trunc i64 %10237 to i32
  %10241 = add i32 32, %10240
  %10242 = zext i32 %10241 to i64
  store i64 %10242, i64* %RDX.i327, align 8
  %10243 = icmp ult i32 %10241, %10240
  %10244 = icmp ult i32 %10241, 32
  %10245 = or i1 %10243, %10244
  %10246 = zext i1 %10245 to i8
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10246, i8* %10247, align 1
  %10248 = and i32 %10241, 255
  %10249 = call i32 @llvm.ctpop.i32(i32 %10248)
  %10250 = trunc i32 %10249 to i8
  %10251 = and i8 %10250, 1
  %10252 = xor i8 %10251, 1
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10252, i8* %10253, align 1
  %10254 = xor i64 32, %10237
  %10255 = trunc i64 %10254 to i32
  %10256 = xor i32 %10255, %10241
  %10257 = lshr i32 %10256, 4
  %10258 = trunc i32 %10257 to i8
  %10259 = and i8 %10258, 1
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10259, i8* %10260, align 1
  %10261 = icmp eq i32 %10241, 0
  %10262 = zext i1 %10261 to i8
  %10263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10262, i8* %10263, align 1
  %10264 = lshr i32 %10241, 31
  %10265 = trunc i32 %10264 to i8
  %10266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10265, i8* %10266, align 1
  %10267 = lshr i32 %10240, 31
  %10268 = xor i32 %10264, %10267
  %10269 = add i32 %10268, %10264
  %10270 = icmp eq i32 %10269, 2
  %10271 = zext i1 %10270 to i8
  %10272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10271, i8* %10272, align 1
  store %struct.Memory* %loadMem_40fc0e, %struct.Memory** %MEMORY
  %loadMem_40fc11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10274 = getelementptr inbounds %struct.GPR, %struct.GPR* %10273, i32 0, i32 33
  %10275 = getelementptr inbounds %struct.Reg, %struct.Reg* %10274, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %10275 to i64*
  %10276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10277 = getelementptr inbounds %struct.GPR, %struct.GPR* %10276, i32 0, i32 7
  %10278 = getelementptr inbounds %struct.Reg, %struct.Reg* %10277, i32 0, i32 0
  %RDX.i325 = bitcast %union.anon* %10278 to i64*
  %10279 = load i64, i64* %RDX.i325
  %10280 = load i64, i64* %PC.i324
  %10281 = add i64 %10280, 3
  store i64 %10281, i64* %PC.i324
  %10282 = shl i64 %10279, 32
  %10283 = ashr exact i64 %10282, 32
  %10284 = ashr i64 %10283, 5
  %10285 = lshr i64 %10284, 1
  %10286 = trunc i64 %10284 to i8
  %10287 = and i8 %10286, 1
  %10288 = trunc i64 %10285 to i32
  %10289 = and i64 %10285, 4294967295
  store i64 %10289, i64* %RDX.i325, align 8
  %10290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10287, i8* %10290, align 1
  %10291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10292 = and i32 %10288, 255
  %10293 = call i32 @llvm.ctpop.i32(i32 %10292)
  %10294 = trunc i32 %10293 to i8
  %10295 = and i8 %10294, 1
  %10296 = xor i8 %10295, 1
  store i8 %10296, i8* %10291, align 1
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10297, align 1
  %10298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10299 = icmp eq i32 %10288, 0
  %10300 = zext i1 %10299 to i8
  store i8 %10300, i8* %10298, align 1
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10302 = lshr i32 %10288, 31
  %10303 = trunc i32 %10302 to i8
  store i8 %10303, i8* %10301, align 1
  %10304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10304, align 1
  store %struct.Memory* %loadMem_40fc11, %struct.Memory** %MEMORY
  %loadMem_40fc14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10306 = getelementptr inbounds %struct.GPR, %struct.GPR* %10305, i32 0, i32 33
  %10307 = getelementptr inbounds %struct.Reg, %struct.Reg* %10306, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %10307 to i64*
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10309 = getelementptr inbounds %struct.GPR, %struct.GPR* %10308, i32 0, i32 1
  %10310 = getelementptr inbounds %struct.Reg, %struct.Reg* %10309, i32 0, i32 0
  %EAX.i322 = bitcast %union.anon* %10310 to i32*
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10312 = getelementptr inbounds %struct.GPR, %struct.GPR* %10311, i32 0, i32 7
  %10313 = getelementptr inbounds %struct.Reg, %struct.Reg* %10312, i32 0, i32 0
  %EDX.i323 = bitcast %union.anon* %10313 to i32*
  %10314 = load i32, i32* %EAX.i322
  %10315 = zext i32 %10314 to i64
  %10316 = load i32, i32* %EDX.i323
  %10317 = zext i32 %10316 to i64
  %10318 = load i64, i64* %PC.i321
  %10319 = add i64 %10318, 2
  store i64 %10319, i64* %PC.i321
  %10320 = sub i32 %10314, %10316
  %10321 = icmp ult i32 %10314, %10316
  %10322 = zext i1 %10321 to i8
  %10323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10322, i8* %10323, align 1
  %10324 = and i32 %10320, 255
  %10325 = call i32 @llvm.ctpop.i32(i32 %10324)
  %10326 = trunc i32 %10325 to i8
  %10327 = and i8 %10326, 1
  %10328 = xor i8 %10327, 1
  %10329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10328, i8* %10329, align 1
  %10330 = xor i64 %10317, %10315
  %10331 = trunc i64 %10330 to i32
  %10332 = xor i32 %10331, %10320
  %10333 = lshr i32 %10332, 4
  %10334 = trunc i32 %10333 to i8
  %10335 = and i8 %10334, 1
  %10336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10335, i8* %10336, align 1
  %10337 = icmp eq i32 %10320, 0
  %10338 = zext i1 %10337 to i8
  %10339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10338, i8* %10339, align 1
  %10340 = lshr i32 %10320, 31
  %10341 = trunc i32 %10340 to i8
  %10342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10341, i8* %10342, align 1
  %10343 = lshr i32 %10314, 31
  %10344 = lshr i32 %10316, 31
  %10345 = xor i32 %10344, %10343
  %10346 = xor i32 %10340, %10343
  %10347 = add i32 %10346, %10345
  %10348 = icmp eq i32 %10347, 2
  %10349 = zext i1 %10348 to i8
  %10350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10349, i8* %10350, align 1
  store %struct.Memory* %loadMem_40fc14, %struct.Memory** %MEMORY
  %loadMem_40fc16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10352 = getelementptr inbounds %struct.GPR, %struct.GPR* %10351, i32 0, i32 33
  %10353 = getelementptr inbounds %struct.Reg, %struct.Reg* %10352, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %10353 to i64*
  %10354 = load i64, i64* %PC.i320
  %10355 = add i64 %10354, 19
  %10356 = load i64, i64* %PC.i320
  %10357 = add i64 %10356, 6
  %10358 = load i64, i64* %PC.i320
  %10359 = add i64 %10358, 6
  store i64 %10359, i64* %PC.i320
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10361 = load i8, i8* %10360, align 1
  %10362 = icmp ne i8 %10361, 0
  %10363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10364 = load i8, i8* %10363, align 1
  %10365 = icmp ne i8 %10364, 0
  %10366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10367 = load i8, i8* %10366, align 1
  %10368 = icmp ne i8 %10367, 0
  %10369 = xor i1 %10365, %10368
  %10370 = or i1 %10362, %10369
  %10371 = zext i1 %10370 to i8
  store i8 %10371, i8* %BRANCH_TAKEN, align 1
  %10372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10373 = select i1 %10370, i64 %10355, i64 %10357
  store i64 %10373, i64* %10372, align 8
  store %struct.Memory* %loadMem_40fc16, %struct.Memory** %MEMORY
  %loadBr_40fc16 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fc16 = icmp eq i8 %loadBr_40fc16, 1
  br i1 %cmpBr_40fc16, label %block_.L_40fc29, label %block_40fc1c

block_40fc1c:                                     ; preds = %block_.L_40fbfc
  %loadMem_40fc1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10375 = getelementptr inbounds %struct.GPR, %struct.GPR* %10374, i32 0, i32 33
  %10376 = getelementptr inbounds %struct.Reg, %struct.Reg* %10375, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %10376 to i64*
  %10377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10378 = getelementptr inbounds %struct.GPR, %struct.GPR* %10377, i32 0, i32 1
  %10379 = getelementptr inbounds %struct.Reg, %struct.Reg* %10378, i32 0, i32 0
  %EAX.i318 = bitcast %union.anon* %10379 to i32*
  %10380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10381 = getelementptr inbounds %struct.GPR, %struct.GPR* %10380, i32 0, i32 1
  %10382 = getelementptr inbounds %struct.Reg, %struct.Reg* %10381, i32 0, i32 0
  %RAX.i319 = bitcast %union.anon* %10382 to i64*
  %10383 = load i64, i64* %RAX.i319
  %10384 = load i32, i32* %EAX.i318
  %10385 = zext i32 %10384 to i64
  %10386 = load i64, i64* %PC.i317
  %10387 = add i64 %10386, 2
  store i64 %10387, i64* %PC.i317
  %10388 = xor i64 %10385, %10383
  %10389 = trunc i64 %10388 to i32
  %10390 = and i64 %10388, 4294967295
  store i64 %10390, i64* %RAX.i319, align 8
  %10391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10391, align 1
  %10392 = and i32 %10389, 255
  %10393 = call i32 @llvm.ctpop.i32(i32 %10392)
  %10394 = trunc i32 %10393 to i8
  %10395 = and i8 %10394, 1
  %10396 = xor i8 %10395, 1
  %10397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10396, i8* %10397, align 1
  %10398 = icmp eq i32 %10389, 0
  %10399 = zext i1 %10398 to i8
  %10400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10399, i8* %10400, align 1
  %10401 = lshr i32 %10389, 31
  %10402 = trunc i32 %10401 to i8
  %10403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10402, i8* %10403, align 1
  %10404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10404, align 1
  %10405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10405, align 1
  store %struct.Memory* %loadMem_40fc1c, %struct.Memory** %MEMORY
  %loadMem_40fc1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10407 = getelementptr inbounds %struct.GPR, %struct.GPR* %10406, i32 0, i32 33
  %10408 = getelementptr inbounds %struct.Reg, %struct.Reg* %10407, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %10408 to i64*
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10410 = getelementptr inbounds %struct.GPR, %struct.GPR* %10409, i32 0, i32 1
  %10411 = getelementptr inbounds %struct.Reg, %struct.Reg* %10410, i32 0, i32 0
  %EAX.i315 = bitcast %union.anon* %10411 to i32*
  %10412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10413 = getelementptr inbounds %struct.GPR, %struct.GPR* %10412, i32 0, i32 15
  %10414 = getelementptr inbounds %struct.Reg, %struct.Reg* %10413, i32 0, i32 0
  %RBP.i316 = bitcast %union.anon* %10414 to i64*
  %10415 = load i64, i64* %RBP.i316
  %10416 = sub i64 %10415, 200
  %10417 = load i32, i32* %EAX.i315
  %10418 = zext i32 %10417 to i64
  %10419 = load i64, i64* %PC.i314
  %10420 = add i64 %10419, 6
  store i64 %10420, i64* %PC.i314
  %10421 = inttoptr i64 %10416 to i32*
  store i32 %10417, i32* %10421
  store %struct.Memory* %loadMem_40fc1e, %struct.Memory** %MEMORY
  %loadMem_40fc24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10423 = getelementptr inbounds %struct.GPR, %struct.GPR* %10422, i32 0, i32 33
  %10424 = getelementptr inbounds %struct.Reg, %struct.Reg* %10423, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %10424 to i64*
  %10425 = load i64, i64* %PC.i313
  %10426 = add i64 %10425, 33
  %10427 = load i64, i64* %PC.i313
  %10428 = add i64 %10427, 5
  store i64 %10428, i64* %PC.i313
  %10429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10426, i64* %10429, align 8
  store %struct.Memory* %loadMem_40fc24, %struct.Memory** %MEMORY
  br label %block_.L_40fc45

block_.L_40fc29:                                  ; preds = %block_.L_40fbfc
  %loadMem_40fc29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10431 = getelementptr inbounds %struct.GPR, %struct.GPR* %10430, i32 0, i32 33
  %10432 = getelementptr inbounds %struct.Reg, %struct.Reg* %10431, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %10432 to i64*
  %10433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10434 = getelementptr inbounds %struct.GPR, %struct.GPR* %10433, i32 0, i32 1
  %10435 = getelementptr inbounds %struct.Reg, %struct.Reg* %10434, i32 0, i32 0
  %RAX.i311 = bitcast %union.anon* %10435 to i64*
  %10436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10437 = getelementptr inbounds %struct.GPR, %struct.GPR* %10436, i32 0, i32 15
  %10438 = getelementptr inbounds %struct.Reg, %struct.Reg* %10437, i32 0, i32 0
  %RBP.i312 = bitcast %union.anon* %10438 to i64*
  %10439 = load i64, i64* %RBP.i312
  %10440 = sub i64 %10439, 16
  %10441 = load i64, i64* %PC.i310
  %10442 = add i64 %10441, 4
  store i64 %10442, i64* %PC.i310
  %10443 = inttoptr i64 %10440 to i32*
  %10444 = load i32, i32* %10443
  %10445 = sext i32 %10444 to i64
  store i64 %10445, i64* %RAX.i311, align 8
  store %struct.Memory* %loadMem_40fc29, %struct.Memory** %MEMORY
  %loadMem_40fc2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10447 = getelementptr inbounds %struct.GPR, %struct.GPR* %10446, i32 0, i32 33
  %10448 = getelementptr inbounds %struct.Reg, %struct.Reg* %10447, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %10448 to i64*
  %10449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10450 = getelementptr inbounds %struct.GPR, %struct.GPR* %10449, i32 0, i32 1
  %10451 = getelementptr inbounds %struct.Reg, %struct.Reg* %10450, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %10451 to i64*
  %10452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10453 = getelementptr inbounds %struct.GPR, %struct.GPR* %10452, i32 0, i32 5
  %10454 = getelementptr inbounds %struct.Reg, %struct.Reg* %10453, i32 0, i32 0
  %RCX.i308 = bitcast %union.anon* %10454 to i64*
  %10455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10456 = getelementptr inbounds %struct.GPR, %struct.GPR* %10455, i32 0, i32 15
  %10457 = getelementptr inbounds %struct.Reg, %struct.Reg* %10456, i32 0, i32 0
  %RBP.i309 = bitcast %union.anon* %10457 to i64*
  %10458 = load i64, i64* %RBP.i309
  %10459 = load i64, i64* %RAX.i307
  %10460 = mul i64 %10459, 4
  %10461 = add i64 %10458, -64
  %10462 = add i64 %10461, %10460
  %10463 = load i64, i64* %PC.i306
  %10464 = add i64 %10463, 4
  store i64 %10464, i64* %PC.i306
  %10465 = inttoptr i64 %10462 to i32*
  %10466 = load i32, i32* %10465
  %10467 = zext i32 %10466 to i64
  store i64 %10467, i64* %RCX.i308, align 8
  store %struct.Memory* %loadMem_40fc2d, %struct.Memory** %MEMORY
  %loadMem_40fc31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10469 = getelementptr inbounds %struct.GPR, %struct.GPR* %10468, i32 0, i32 33
  %10470 = getelementptr inbounds %struct.Reg, %struct.Reg* %10469, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %10470 to i64*
  %10471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10472 = getelementptr inbounds %struct.GPR, %struct.GPR* %10471, i32 0, i32 1
  %10473 = getelementptr inbounds %struct.Reg, %struct.Reg* %10472, i32 0, i32 0
  %RAX.i304 = bitcast %union.anon* %10473 to i64*
  %10474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10475 = getelementptr inbounds %struct.GPR, %struct.GPR* %10474, i32 0, i32 15
  %10476 = getelementptr inbounds %struct.Reg, %struct.Reg* %10475, i32 0, i32 0
  %RBP.i305 = bitcast %union.anon* %10476 to i64*
  %10477 = load i64, i64* %RBP.i305
  %10478 = sub i64 %10477, 24
  %10479 = load i64, i64* %PC.i303
  %10480 = add i64 %10479, 4
  store i64 %10480, i64* %PC.i303
  %10481 = inttoptr i64 %10478 to i32*
  %10482 = load i32, i32* %10481
  %10483 = sext i32 %10482 to i64
  store i64 %10483, i64* %RAX.i304, align 8
  store %struct.Memory* %loadMem_40fc31, %struct.Memory** %MEMORY
  %loadMem_40fc35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10485 = getelementptr inbounds %struct.GPR, %struct.GPR* %10484, i32 0, i32 33
  %10486 = getelementptr inbounds %struct.Reg, %struct.Reg* %10485, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %10486 to i64*
  %10487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10488 = getelementptr inbounds %struct.GPR, %struct.GPR* %10487, i32 0, i32 1
  %10489 = getelementptr inbounds %struct.Reg, %struct.Reg* %10488, i32 0, i32 0
  %RAX.i300 = bitcast %union.anon* %10489 to i64*
  %10490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10491 = getelementptr inbounds %struct.GPR, %struct.GPR* %10490, i32 0, i32 5
  %10492 = getelementptr inbounds %struct.Reg, %struct.Reg* %10491, i32 0, i32 0
  %RCX.i301 = bitcast %union.anon* %10492 to i64*
  %10493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10494 = getelementptr inbounds %struct.GPR, %struct.GPR* %10493, i32 0, i32 15
  %10495 = getelementptr inbounds %struct.Reg, %struct.Reg* %10494, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %10495 to i64*
  %10496 = load i64, i64* %RCX.i301
  %10497 = load i64, i64* %RBP.i302
  %10498 = load i64, i64* %RAX.i300
  %10499 = mul i64 %10498, 4
  %10500 = add i64 %10497, -64
  %10501 = add i64 %10500, %10499
  %10502 = load i64, i64* %PC.i299
  %10503 = add i64 %10502, 4
  store i64 %10503, i64* %PC.i299
  %10504 = trunc i64 %10496 to i32
  %10505 = inttoptr i64 %10501 to i32*
  %10506 = load i32, i32* %10505
  %10507 = add i32 %10506, %10504
  %10508 = zext i32 %10507 to i64
  store i64 %10508, i64* %RCX.i301, align 8
  %10509 = icmp ult i32 %10507, %10504
  %10510 = icmp ult i32 %10507, %10506
  %10511 = or i1 %10509, %10510
  %10512 = zext i1 %10511 to i8
  %10513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10512, i8* %10513, align 1
  %10514 = and i32 %10507, 255
  %10515 = call i32 @llvm.ctpop.i32(i32 %10514)
  %10516 = trunc i32 %10515 to i8
  %10517 = and i8 %10516, 1
  %10518 = xor i8 %10517, 1
  %10519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10518, i8* %10519, align 1
  %10520 = xor i32 %10506, %10504
  %10521 = xor i32 %10520, %10507
  %10522 = lshr i32 %10521, 4
  %10523 = trunc i32 %10522 to i8
  %10524 = and i8 %10523, 1
  %10525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10524, i8* %10525, align 1
  %10526 = icmp eq i32 %10507, 0
  %10527 = zext i1 %10526 to i8
  %10528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10527, i8* %10528, align 1
  %10529 = lshr i32 %10507, 31
  %10530 = trunc i32 %10529 to i8
  %10531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10530, i8* %10531, align 1
  %10532 = lshr i32 %10504, 31
  %10533 = lshr i32 %10506, 31
  %10534 = xor i32 %10529, %10532
  %10535 = xor i32 %10529, %10533
  %10536 = add i32 %10534, %10535
  %10537 = icmp eq i32 %10536, 2
  %10538 = zext i1 %10537 to i8
  %10539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10538, i8* %10539, align 1
  store %struct.Memory* %loadMem_40fc35, %struct.Memory** %MEMORY
  %loadMem_40fc39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10541 = getelementptr inbounds %struct.GPR, %struct.GPR* %10540, i32 0, i32 33
  %10542 = getelementptr inbounds %struct.Reg, %struct.Reg* %10541, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %10542 to i64*
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10544 = getelementptr inbounds %struct.GPR, %struct.GPR* %10543, i32 0, i32 5
  %10545 = getelementptr inbounds %struct.Reg, %struct.Reg* %10544, i32 0, i32 0
  %RCX.i298 = bitcast %union.anon* %10545 to i64*
  %10546 = load i64, i64* %RCX.i298
  %10547 = load i64, i64* %PC.i297
  %10548 = add i64 %10547, 3
  store i64 %10548, i64* %PC.i297
  %10549 = trunc i64 %10546 to i32
  %10550 = add i32 32, %10549
  %10551 = zext i32 %10550 to i64
  store i64 %10551, i64* %RCX.i298, align 8
  %10552 = icmp ult i32 %10550, %10549
  %10553 = icmp ult i32 %10550, 32
  %10554 = or i1 %10552, %10553
  %10555 = zext i1 %10554 to i8
  %10556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10555, i8* %10556, align 1
  %10557 = and i32 %10550, 255
  %10558 = call i32 @llvm.ctpop.i32(i32 %10557)
  %10559 = trunc i32 %10558 to i8
  %10560 = and i8 %10559, 1
  %10561 = xor i8 %10560, 1
  %10562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10561, i8* %10562, align 1
  %10563 = xor i64 32, %10546
  %10564 = trunc i64 %10563 to i32
  %10565 = xor i32 %10564, %10550
  %10566 = lshr i32 %10565, 4
  %10567 = trunc i32 %10566 to i8
  %10568 = and i8 %10567, 1
  %10569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10568, i8* %10569, align 1
  %10570 = icmp eq i32 %10550, 0
  %10571 = zext i1 %10570 to i8
  %10572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10571, i8* %10572, align 1
  %10573 = lshr i32 %10550, 31
  %10574 = trunc i32 %10573 to i8
  %10575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10574, i8* %10575, align 1
  %10576 = lshr i32 %10549, 31
  %10577 = xor i32 %10573, %10576
  %10578 = add i32 %10577, %10573
  %10579 = icmp eq i32 %10578, 2
  %10580 = zext i1 %10579 to i8
  %10581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10580, i8* %10581, align 1
  store %struct.Memory* %loadMem_40fc39, %struct.Memory** %MEMORY
  %loadMem_40fc3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10583 = getelementptr inbounds %struct.GPR, %struct.GPR* %10582, i32 0, i32 33
  %10584 = getelementptr inbounds %struct.Reg, %struct.Reg* %10583, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %10584 to i64*
  %10585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10586 = getelementptr inbounds %struct.GPR, %struct.GPR* %10585, i32 0, i32 5
  %10587 = getelementptr inbounds %struct.Reg, %struct.Reg* %10586, i32 0, i32 0
  %RCX.i296 = bitcast %union.anon* %10587 to i64*
  %10588 = load i64, i64* %RCX.i296
  %10589 = load i64, i64* %PC.i295
  %10590 = add i64 %10589, 3
  store i64 %10590, i64* %PC.i295
  %10591 = shl i64 %10588, 32
  %10592 = ashr exact i64 %10591, 32
  %10593 = ashr i64 %10592, 5
  %10594 = lshr i64 %10593, 1
  %10595 = trunc i64 %10593 to i8
  %10596 = and i8 %10595, 1
  %10597 = trunc i64 %10594 to i32
  %10598 = and i64 %10594, 4294967295
  store i64 %10598, i64* %RCX.i296, align 8
  %10599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10596, i8* %10599, align 1
  %10600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10601 = and i32 %10597, 255
  %10602 = call i32 @llvm.ctpop.i32(i32 %10601)
  %10603 = trunc i32 %10602 to i8
  %10604 = and i8 %10603, 1
  %10605 = xor i8 %10604, 1
  store i8 %10605, i8* %10600, align 1
  %10606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10606, align 1
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10608 = icmp eq i32 %10597, 0
  %10609 = zext i1 %10608 to i8
  store i8 %10609, i8* %10607, align 1
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10611 = lshr i32 %10597, 31
  %10612 = trunc i32 %10611 to i8
  store i8 %10612, i8* %10610, align 1
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10613, align 1
  store %struct.Memory* %loadMem_40fc3c, %struct.Memory** %MEMORY
  %loadMem_40fc3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10615 = getelementptr inbounds %struct.GPR, %struct.GPR* %10614, i32 0, i32 33
  %10616 = getelementptr inbounds %struct.Reg, %struct.Reg* %10615, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %10616 to i64*
  %10617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10618 = getelementptr inbounds %struct.GPR, %struct.GPR* %10617, i32 0, i32 5
  %10619 = getelementptr inbounds %struct.Reg, %struct.Reg* %10618, i32 0, i32 0
  %ECX.i293 = bitcast %union.anon* %10619 to i32*
  %10620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10621 = getelementptr inbounds %struct.GPR, %struct.GPR* %10620, i32 0, i32 15
  %10622 = getelementptr inbounds %struct.Reg, %struct.Reg* %10621, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %10622 to i64*
  %10623 = load i64, i64* %RBP.i294
  %10624 = sub i64 %10623, 200
  %10625 = load i32, i32* %ECX.i293
  %10626 = zext i32 %10625 to i64
  %10627 = load i64, i64* %PC.i292
  %10628 = add i64 %10627, 6
  store i64 %10628, i64* %PC.i292
  %10629 = inttoptr i64 %10624 to i32*
  store i32 %10625, i32* %10629
  store %struct.Memory* %loadMem_40fc3f, %struct.Memory** %MEMORY
  br label %block_.L_40fc45

block_.L_40fc45:                                  ; preds = %block_.L_40fc29, %block_40fc1c
  %loadMem_40fc45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10631 = getelementptr inbounds %struct.GPR, %struct.GPR* %10630, i32 0, i32 33
  %10632 = getelementptr inbounds %struct.Reg, %struct.Reg* %10631, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %10632 to i64*
  %10633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10634 = getelementptr inbounds %struct.GPR, %struct.GPR* %10633, i32 0, i32 1
  %10635 = getelementptr inbounds %struct.Reg, %struct.Reg* %10634, i32 0, i32 0
  %RAX.i290 = bitcast %union.anon* %10635 to i64*
  %10636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10637 = getelementptr inbounds %struct.GPR, %struct.GPR* %10636, i32 0, i32 15
  %10638 = getelementptr inbounds %struct.Reg, %struct.Reg* %10637, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %10638 to i64*
  %10639 = load i64, i64* %RBP.i291
  %10640 = sub i64 %10639, 200
  %10641 = load i64, i64* %PC.i289
  %10642 = add i64 %10641, 6
  store i64 %10642, i64* %PC.i289
  %10643 = inttoptr i64 %10640 to i32*
  %10644 = load i32, i32* %10643
  %10645 = zext i32 %10644 to i64
  store i64 %10645, i64* %RAX.i290, align 8
  store %struct.Memory* %loadMem_40fc45, %struct.Memory** %MEMORY
  %loadMem_40fc4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10647 = getelementptr inbounds %struct.GPR, %struct.GPR* %10646, i32 0, i32 33
  %10648 = getelementptr inbounds %struct.Reg, %struct.Reg* %10647, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %10648 to i64*
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10650 = getelementptr inbounds %struct.GPR, %struct.GPR* %10649, i32 0, i32 1
  %10651 = getelementptr inbounds %struct.Reg, %struct.Reg* %10650, i32 0, i32 0
  %EAX.i287 = bitcast %union.anon* %10651 to i32*
  %10652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10653 = getelementptr inbounds %struct.GPR, %struct.GPR* %10652, i32 0, i32 15
  %10654 = getelementptr inbounds %struct.Reg, %struct.Reg* %10653, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %10654 to i64*
  %10655 = load i64, i64* %RBP.i288
  %10656 = sub i64 %10655, 196
  %10657 = load i32, i32* %EAX.i287
  %10658 = zext i32 %10657 to i64
  %10659 = load i64, i64* %PC.i286
  %10660 = add i64 %10659, 6
  store i64 %10660, i64* %PC.i286
  %10661 = inttoptr i64 %10656 to i32*
  store i32 %10657, i32* %10661
  store %struct.Memory* %loadMem_40fc4b, %struct.Memory** %MEMORY
  br label %block_.L_40fc51

block_.L_40fc51:                                  ; preds = %block_.L_40fc45, %block_40fbe3
  %loadMem_40fc51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10663 = getelementptr inbounds %struct.GPR, %struct.GPR* %10662, i32 0, i32 33
  %10664 = getelementptr inbounds %struct.Reg, %struct.Reg* %10663, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %10664 to i64*
  %10665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10666 = getelementptr inbounds %struct.GPR, %struct.GPR* %10665, i32 0, i32 1
  %10667 = getelementptr inbounds %struct.Reg, %struct.Reg* %10666, i32 0, i32 0
  %RAX.i284 = bitcast %union.anon* %10667 to i64*
  %10668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10669 = getelementptr inbounds %struct.GPR, %struct.GPR* %10668, i32 0, i32 15
  %10670 = getelementptr inbounds %struct.Reg, %struct.Reg* %10669, i32 0, i32 0
  %RBP.i285 = bitcast %union.anon* %10670 to i64*
  %10671 = load i64, i64* %RBP.i285
  %10672 = sub i64 %10671, 196
  %10673 = load i64, i64* %PC.i283
  %10674 = add i64 %10673, 6
  store i64 %10674, i64* %PC.i283
  %10675 = inttoptr i64 %10672 to i32*
  %10676 = load i32, i32* %10675
  %10677 = zext i32 %10676 to i64
  store i64 %10677, i64* %RAX.i284, align 8
  store %struct.Memory* %loadMem_40fc51, %struct.Memory** %MEMORY
  %loadMem_40fc57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10679 = getelementptr inbounds %struct.GPR, %struct.GPR* %10678, i32 0, i32 33
  %10680 = getelementptr inbounds %struct.Reg, %struct.Reg* %10679, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %10680 to i64*
  %10681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10682 = getelementptr inbounds %struct.GPR, %struct.GPR* %10681, i32 0, i32 5
  %10683 = getelementptr inbounds %struct.Reg, %struct.Reg* %10682, i32 0, i32 0
  %ECX.i281 = bitcast %union.anon* %10683 to i32*
  %10684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10685 = getelementptr inbounds %struct.GPR, %struct.GPR* %10684, i32 0, i32 5
  %10686 = getelementptr inbounds %struct.Reg, %struct.Reg* %10685, i32 0, i32 0
  %RCX.i282 = bitcast %union.anon* %10686 to i64*
  %10687 = load i64, i64* %RCX.i282
  %10688 = load i32, i32* %ECX.i281
  %10689 = zext i32 %10688 to i64
  %10690 = load i64, i64* %PC.i280
  %10691 = add i64 %10690, 2
  store i64 %10691, i64* %PC.i280
  %10692 = xor i64 %10689, %10687
  %10693 = trunc i64 %10692 to i32
  %10694 = and i64 %10692, 4294967295
  store i64 %10694, i64* %RCX.i282, align 8
  %10695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10695, align 1
  %10696 = and i32 %10693, 255
  %10697 = call i32 @llvm.ctpop.i32(i32 %10696)
  %10698 = trunc i32 %10697 to i8
  %10699 = and i8 %10698, 1
  %10700 = xor i8 %10699, 1
  %10701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10700, i8* %10701, align 1
  %10702 = icmp eq i32 %10693, 0
  %10703 = zext i1 %10702 to i8
  %10704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10703, i8* %10704, align 1
  %10705 = lshr i32 %10693, 31
  %10706 = trunc i32 %10705 to i8
  %10707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10706, i8* %10707, align 1
  %10708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10708, align 1
  %10709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10709, align 1
  store %struct.Memory* %loadMem_40fc57, %struct.Memory** %MEMORY
  %loadMem_40fc59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10711 = getelementptr inbounds %struct.GPR, %struct.GPR* %10710, i32 0, i32 33
  %10712 = getelementptr inbounds %struct.Reg, %struct.Reg* %10711, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %10712 to i64*
  %10713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10714 = getelementptr inbounds %struct.GPR, %struct.GPR* %10713, i32 0, i32 7
  %10715 = getelementptr inbounds %struct.Reg, %struct.Reg* %10714, i32 0, i32 0
  %RDX.i279 = bitcast %union.anon* %10715 to i64*
  %10716 = load i64, i64* %PC.i278
  %10717 = add i64 %10716, 8
  store i64 %10717, i64* %PC.i278
  %10718 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10718, i64* %RDX.i279, align 8
  store %struct.Memory* %loadMem_40fc59, %struct.Memory** %MEMORY
  %loadMem_40fc61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10720 = getelementptr inbounds %struct.GPR, %struct.GPR* %10719, i32 0, i32 33
  %10721 = getelementptr inbounds %struct.Reg, %struct.Reg* %10720, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %10721 to i64*
  %10722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10723 = getelementptr inbounds %struct.GPR, %struct.GPR* %10722, i32 0, i32 7
  %10724 = getelementptr inbounds %struct.Reg, %struct.Reg* %10723, i32 0, i32 0
  %RDX.i277 = bitcast %union.anon* %10724 to i64*
  %10725 = load i64, i64* %RDX.i277
  %10726 = load i64, i64* %PC.i276
  %10727 = add i64 %10726, 7
  store i64 %10727, i64* %PC.i276
  %10728 = add i64 13112, %10725
  store i64 %10728, i64* %RDX.i277, align 8
  %10729 = icmp ult i64 %10728, %10725
  %10730 = icmp ult i64 %10728, 13112
  %10731 = or i1 %10729, %10730
  %10732 = zext i1 %10731 to i8
  %10733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10732, i8* %10733, align 1
  %10734 = trunc i64 %10728 to i32
  %10735 = and i32 %10734, 255
  %10736 = call i32 @llvm.ctpop.i32(i32 %10735)
  %10737 = trunc i32 %10736 to i8
  %10738 = and i8 %10737, 1
  %10739 = xor i8 %10738, 1
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10739, i8* %10740, align 1
  %10741 = xor i64 13112, %10725
  %10742 = xor i64 %10741, %10728
  %10743 = lshr i64 %10742, 4
  %10744 = trunc i64 %10743 to i8
  %10745 = and i8 %10744, 1
  %10746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10745, i8* %10746, align 1
  %10747 = icmp eq i64 %10728, 0
  %10748 = zext i1 %10747 to i8
  %10749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10748, i8* %10749, align 1
  %10750 = lshr i64 %10728, 63
  %10751 = trunc i64 %10750 to i8
  %10752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10751, i8* %10752, align 1
  %10753 = lshr i64 %10725, 63
  %10754 = xor i64 %10750, %10753
  %10755 = add i64 %10754, %10750
  %10756 = icmp eq i64 %10755, 2
  %10757 = zext i1 %10756 to i8
  %10758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10757, i8* %10758, align 1
  store %struct.Memory* %loadMem_40fc61, %struct.Memory** %MEMORY
  %loadMem_40fc68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10760 = getelementptr inbounds %struct.GPR, %struct.GPR* %10759, i32 0, i32 33
  %10761 = getelementptr inbounds %struct.Reg, %struct.Reg* %10760, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %10761 to i64*
  %10762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10763 = getelementptr inbounds %struct.GPR, %struct.GPR* %10762, i32 0, i32 9
  %10764 = getelementptr inbounds %struct.Reg, %struct.Reg* %10763, i32 0, i32 0
  %RSI.i274 = bitcast %union.anon* %10764 to i64*
  %10765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10766 = getelementptr inbounds %struct.GPR, %struct.GPR* %10765, i32 0, i32 15
  %10767 = getelementptr inbounds %struct.Reg, %struct.Reg* %10766, i32 0, i32 0
  %RBP.i275 = bitcast %union.anon* %10767 to i64*
  %10768 = load i64, i64* %RBP.i275
  %10769 = sub i64 %10768, 12
  %10770 = load i64, i64* %PC.i273
  %10771 = add i64 %10770, 4
  store i64 %10771, i64* %PC.i273
  %10772 = inttoptr i64 %10769 to i32*
  %10773 = load i32, i32* %10772
  %10774 = sext i32 %10773 to i64
  store i64 %10774, i64* %RSI.i274, align 8
  store %struct.Memory* %loadMem_40fc68, %struct.Memory** %MEMORY
  %loadMem_40fc6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10776 = getelementptr inbounds %struct.GPR, %struct.GPR* %10775, i32 0, i32 33
  %10777 = getelementptr inbounds %struct.Reg, %struct.Reg* %10776, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %10777 to i64*
  %10778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10779 = getelementptr inbounds %struct.GPR, %struct.GPR* %10778, i32 0, i32 9
  %10780 = getelementptr inbounds %struct.Reg, %struct.Reg* %10779, i32 0, i32 0
  %RSI.i272 = bitcast %union.anon* %10780 to i64*
  %10781 = load i64, i64* %RSI.i272
  %10782 = load i64, i64* %PC.i271
  %10783 = add i64 %10782, 4
  store i64 %10783, i64* %PC.i271
  %10784 = shl i64 %10781, 5
  %10785 = icmp slt i64 %10784, 0
  %10786 = shl i64 %10784, 1
  store i64 %10786, i64* %RSI.i272, align 8
  %10787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10788 = zext i1 %10785 to i8
  store i8 %10788, i8* %10787, align 1
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10790 = trunc i64 %10786 to i32
  %10791 = and i32 %10790, 254
  %10792 = call i32 @llvm.ctpop.i32(i32 %10791)
  %10793 = trunc i32 %10792 to i8
  %10794 = and i8 %10793, 1
  %10795 = xor i8 %10794, 1
  store i8 %10795, i8* %10789, align 1
  %10796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10796, align 1
  %10797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10798 = icmp eq i64 %10786, 0
  %10799 = zext i1 %10798 to i8
  store i8 %10799, i8* %10797, align 1
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10801 = lshr i64 %10786, 63
  %10802 = trunc i64 %10801 to i8
  store i8 %10802, i8* %10800, align 1
  %10803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10803, align 1
  store %struct.Memory* %loadMem_40fc6c, %struct.Memory** %MEMORY
  %loadMem_40fc70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10805 = getelementptr inbounds %struct.GPR, %struct.GPR* %10804, i32 0, i32 33
  %10806 = getelementptr inbounds %struct.Reg, %struct.Reg* %10805, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %10806 to i64*
  %10807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10808 = getelementptr inbounds %struct.GPR, %struct.GPR* %10807, i32 0, i32 7
  %10809 = getelementptr inbounds %struct.Reg, %struct.Reg* %10808, i32 0, i32 0
  %RDX.i269 = bitcast %union.anon* %10809 to i64*
  %10810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10811 = getelementptr inbounds %struct.GPR, %struct.GPR* %10810, i32 0, i32 9
  %10812 = getelementptr inbounds %struct.Reg, %struct.Reg* %10811, i32 0, i32 0
  %RSI.i270 = bitcast %union.anon* %10812 to i64*
  %10813 = load i64, i64* %RDX.i269
  %10814 = load i64, i64* %RSI.i270
  %10815 = load i64, i64* %PC.i268
  %10816 = add i64 %10815, 3
  store i64 %10816, i64* %PC.i268
  %10817 = add i64 %10814, %10813
  store i64 %10817, i64* %RDX.i269, align 8
  %10818 = icmp ult i64 %10817, %10813
  %10819 = icmp ult i64 %10817, %10814
  %10820 = or i1 %10818, %10819
  %10821 = zext i1 %10820 to i8
  %10822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10821, i8* %10822, align 1
  %10823 = trunc i64 %10817 to i32
  %10824 = and i32 %10823, 255
  %10825 = call i32 @llvm.ctpop.i32(i32 %10824)
  %10826 = trunc i32 %10825 to i8
  %10827 = and i8 %10826, 1
  %10828 = xor i8 %10827, 1
  %10829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10828, i8* %10829, align 1
  %10830 = xor i64 %10814, %10813
  %10831 = xor i64 %10830, %10817
  %10832 = lshr i64 %10831, 4
  %10833 = trunc i64 %10832 to i8
  %10834 = and i8 %10833, 1
  %10835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10834, i8* %10835, align 1
  %10836 = icmp eq i64 %10817, 0
  %10837 = zext i1 %10836 to i8
  %10838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10837, i8* %10838, align 1
  %10839 = lshr i64 %10817, 63
  %10840 = trunc i64 %10839 to i8
  %10841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10840, i8* %10841, align 1
  %10842 = lshr i64 %10813, 63
  %10843 = lshr i64 %10814, 63
  %10844 = xor i64 %10839, %10842
  %10845 = xor i64 %10839, %10843
  %10846 = add i64 %10844, %10845
  %10847 = icmp eq i64 %10846, 2
  %10848 = zext i1 %10847 to i8
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10848, i8* %10849, align 1
  store %struct.Memory* %loadMem_40fc70, %struct.Memory** %MEMORY
  %loadMem_40fc73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10851 = getelementptr inbounds %struct.GPR, %struct.GPR* %10850, i32 0, i32 33
  %10852 = getelementptr inbounds %struct.Reg, %struct.Reg* %10851, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %10852 to i64*
  %10853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10854 = getelementptr inbounds %struct.GPR, %struct.GPR* %10853, i32 0, i32 9
  %10855 = getelementptr inbounds %struct.Reg, %struct.Reg* %10854, i32 0, i32 0
  %RSI.i266 = bitcast %union.anon* %10855 to i64*
  %10856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10857 = getelementptr inbounds %struct.GPR, %struct.GPR* %10856, i32 0, i32 15
  %10858 = getelementptr inbounds %struct.Reg, %struct.Reg* %10857, i32 0, i32 0
  %RBP.i267 = bitcast %union.anon* %10858 to i64*
  %10859 = load i64, i64* %RBP.i267
  %10860 = sub i64 %10859, 16
  %10861 = load i64, i64* %PC.i265
  %10862 = add i64 %10861, 4
  store i64 %10862, i64* %PC.i265
  %10863 = inttoptr i64 %10860 to i32*
  %10864 = load i32, i32* %10863
  %10865 = sext i32 %10864 to i64
  store i64 %10865, i64* %RSI.i266, align 8
  store %struct.Memory* %loadMem_40fc73, %struct.Memory** %MEMORY
  %loadMem_40fc77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10867 = getelementptr inbounds %struct.GPR, %struct.GPR* %10866, i32 0, i32 33
  %10868 = getelementptr inbounds %struct.Reg, %struct.Reg* %10867, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %10868 to i64*
  %10869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10870 = getelementptr inbounds %struct.GPR, %struct.GPR* %10869, i32 0, i32 1
  %10871 = getelementptr inbounds %struct.Reg, %struct.Reg* %10870, i32 0, i32 0
  %EAX.i263 = bitcast %union.anon* %10871 to i32*
  %10872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10873 = getelementptr inbounds %struct.GPR, %struct.GPR* %10872, i32 0, i32 7
  %10874 = getelementptr inbounds %struct.Reg, %struct.Reg* %10873, i32 0, i32 0
  %RDX.i264 = bitcast %union.anon* %10874 to i64*
  %10875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10876 = getelementptr inbounds %struct.GPR, %struct.GPR* %10875, i32 0, i32 9
  %10877 = getelementptr inbounds %struct.Reg, %struct.Reg* %10876, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %10877 to i64*
  %10878 = load i64, i64* %RDX.i264
  %10879 = load i64, i64* %RSI.i
  %10880 = mul i64 %10879, 4
  %10881 = add i64 %10880, %10878
  %10882 = load i32, i32* %EAX.i263
  %10883 = zext i32 %10882 to i64
  %10884 = load i64, i64* %PC.i262
  %10885 = add i64 %10884, 3
  store i64 %10885, i64* %PC.i262
  %10886 = inttoptr i64 %10881 to i32*
  store i32 %10882, i32* %10886
  store %struct.Memory* %loadMem_40fc77, %struct.Memory** %MEMORY
  %loadMem_40fc7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10888 = getelementptr inbounds %struct.GPR, %struct.GPR* %10887, i32 0, i32 33
  %10889 = getelementptr inbounds %struct.Reg, %struct.Reg* %10888, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %10889 to i64*
  %10890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10891 = getelementptr inbounds %struct.GPR, %struct.GPR* %10890, i32 0, i32 7
  %10892 = getelementptr inbounds %struct.Reg, %struct.Reg* %10891, i32 0, i32 0
  %RDX.i261 = bitcast %union.anon* %10892 to i64*
  %10893 = load i64, i64* %PC.i260
  %10894 = add i64 %10893, 8
  store i64 %10894, i64* %PC.i260
  %10895 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10895, i64* %RDX.i261, align 8
  store %struct.Memory* %loadMem_40fc7a, %struct.Memory** %MEMORY
  %loadMem_40fc82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10897 = getelementptr inbounds %struct.GPR, %struct.GPR* %10896, i32 0, i32 33
  %10898 = getelementptr inbounds %struct.Reg, %struct.Reg* %10897, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %10898 to i64*
  %10899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10900 = getelementptr inbounds %struct.GPR, %struct.GPR* %10899, i32 0, i32 1
  %10901 = getelementptr inbounds %struct.Reg, %struct.Reg* %10900, i32 0, i32 0
  %RAX.i258 = bitcast %union.anon* %10901 to i64*
  %10902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10903 = getelementptr inbounds %struct.GPR, %struct.GPR* %10902, i32 0, i32 7
  %10904 = getelementptr inbounds %struct.Reg, %struct.Reg* %10903, i32 0, i32 0
  %RDX.i259 = bitcast %union.anon* %10904 to i64*
  %10905 = load i64, i64* %RDX.i259
  %10906 = add i64 %10905, 72684
  %10907 = load i64, i64* %PC.i257
  %10908 = add i64 %10907, 6
  store i64 %10908, i64* %PC.i257
  %10909 = inttoptr i64 %10906 to i32*
  %10910 = load i32, i32* %10909
  %10911 = zext i32 %10910 to i64
  store i64 %10911, i64* %RAX.i258, align 8
  store %struct.Memory* %loadMem_40fc82, %struct.Memory** %MEMORY
  %loadMem_40fc88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10913 = getelementptr inbounds %struct.GPR, %struct.GPR* %10912, i32 0, i32 33
  %10914 = getelementptr inbounds %struct.Reg, %struct.Reg* %10913, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %10914 to i64*
  %10915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10916 = getelementptr inbounds %struct.GPR, %struct.GPR* %10915, i32 0, i32 7
  %10917 = getelementptr inbounds %struct.Reg, %struct.Reg* %10916, i32 0, i32 0
  %RDX.i255 = bitcast %union.anon* %10917 to i64*
  %10918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10919 = getelementptr inbounds %struct.GPR, %struct.GPR* %10918, i32 0, i32 15
  %10920 = getelementptr inbounds %struct.Reg, %struct.Reg* %10919, i32 0, i32 0
  %RBP.i256 = bitcast %union.anon* %10920 to i64*
  %10921 = load i64, i64* %RBP.i256
  %10922 = sub i64 %10921, 16
  %10923 = load i64, i64* %PC.i254
  %10924 = add i64 %10923, 4
  store i64 %10924, i64* %PC.i254
  %10925 = inttoptr i64 %10922 to i32*
  %10926 = load i32, i32* %10925
  %10927 = sext i32 %10926 to i64
  store i64 %10927, i64* %RDX.i255, align 8
  store %struct.Memory* %loadMem_40fc88, %struct.Memory** %MEMORY
  %loadMem_40fc8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10929 = getelementptr inbounds %struct.GPR, %struct.GPR* %10928, i32 0, i32 33
  %10930 = getelementptr inbounds %struct.Reg, %struct.Reg* %10929, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %10930 to i64*
  %10931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10932 = getelementptr inbounds %struct.GPR, %struct.GPR* %10931, i32 0, i32 7
  %10933 = getelementptr inbounds %struct.Reg, %struct.Reg* %10932, i32 0, i32 0
  %RDX.i251 = bitcast %union.anon* %10933 to i64*
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10935 = getelementptr inbounds %struct.GPR, %struct.GPR* %10934, i32 0, i32 11
  %10936 = getelementptr inbounds %struct.Reg, %struct.Reg* %10935, i32 0, i32 0
  %RDI.i252 = bitcast %union.anon* %10936 to i64*
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10938 = getelementptr inbounds %struct.GPR, %struct.GPR* %10937, i32 0, i32 15
  %10939 = getelementptr inbounds %struct.Reg, %struct.Reg* %10938, i32 0, i32 0
  %RBP.i253 = bitcast %union.anon* %10939 to i64*
  %10940 = load i64, i64* %RBP.i253
  %10941 = load i64, i64* %RDX.i251
  %10942 = mul i64 %10941, 4
  %10943 = add i64 %10940, -64
  %10944 = add i64 %10943, %10942
  %10945 = load i64, i64* %PC.i250
  %10946 = add i64 %10945, 4
  store i64 %10946, i64* %PC.i250
  %10947 = inttoptr i64 %10944 to i32*
  %10948 = load i32, i32* %10947
  %10949 = zext i32 %10948 to i64
  store i64 %10949, i64* %RDI.i252, align 8
  store %struct.Memory* %loadMem_40fc8c, %struct.Memory** %MEMORY
  %loadMem_40fc90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10951 = getelementptr inbounds %struct.GPR, %struct.GPR* %10950, i32 0, i32 33
  %10952 = getelementptr inbounds %struct.Reg, %struct.Reg* %10951, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %10952 to i64*
  %10953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10954 = getelementptr inbounds %struct.GPR, %struct.GPR* %10953, i32 0, i32 7
  %10955 = getelementptr inbounds %struct.Reg, %struct.Reg* %10954, i32 0, i32 0
  %RDX.i248 = bitcast %union.anon* %10955 to i64*
  %10956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10957 = getelementptr inbounds %struct.GPR, %struct.GPR* %10956, i32 0, i32 15
  %10958 = getelementptr inbounds %struct.Reg, %struct.Reg* %10957, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %10958 to i64*
  %10959 = load i64, i64* %RBP.i249
  %10960 = sub i64 %10959, 24
  %10961 = load i64, i64* %PC.i247
  %10962 = add i64 %10961, 4
  store i64 %10962, i64* %PC.i247
  %10963 = inttoptr i64 %10960 to i32*
  %10964 = load i32, i32* %10963
  %10965 = sext i32 %10964 to i64
  store i64 %10965, i64* %RDX.i248, align 8
  store %struct.Memory* %loadMem_40fc90, %struct.Memory** %MEMORY
  %loadMem_40fc94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10967 = getelementptr inbounds %struct.GPR, %struct.GPR* %10966, i32 0, i32 33
  %10968 = getelementptr inbounds %struct.Reg, %struct.Reg* %10967, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %10968 to i64*
  %10969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10970 = getelementptr inbounds %struct.GPR, %struct.GPR* %10969, i32 0, i32 7
  %10971 = getelementptr inbounds %struct.Reg, %struct.Reg* %10970, i32 0, i32 0
  %RDX.i244 = bitcast %union.anon* %10971 to i64*
  %10972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10973 = getelementptr inbounds %struct.GPR, %struct.GPR* %10972, i32 0, i32 11
  %10974 = getelementptr inbounds %struct.Reg, %struct.Reg* %10973, i32 0, i32 0
  %RDI.i245 = bitcast %union.anon* %10974 to i64*
  %10975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10976 = getelementptr inbounds %struct.GPR, %struct.GPR* %10975, i32 0, i32 15
  %10977 = getelementptr inbounds %struct.Reg, %struct.Reg* %10976, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %10977 to i64*
  %10978 = load i64, i64* %RDI.i245
  %10979 = load i64, i64* %RBP.i246
  %10980 = load i64, i64* %RDX.i244
  %10981 = mul i64 %10980, 4
  %10982 = add i64 %10979, -64
  %10983 = add i64 %10982, %10981
  %10984 = load i64, i64* %PC.i243
  %10985 = add i64 %10984, 4
  store i64 %10985, i64* %PC.i243
  %10986 = trunc i64 %10978 to i32
  %10987 = inttoptr i64 %10983 to i32*
  %10988 = load i32, i32* %10987
  %10989 = sub i32 %10986, %10988
  %10990 = zext i32 %10989 to i64
  store i64 %10990, i64* %RDI.i245, align 8
  %10991 = icmp ult i32 %10986, %10988
  %10992 = zext i1 %10991 to i8
  %10993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10992, i8* %10993, align 1
  %10994 = and i32 %10989, 255
  %10995 = call i32 @llvm.ctpop.i32(i32 %10994)
  %10996 = trunc i32 %10995 to i8
  %10997 = and i8 %10996, 1
  %10998 = xor i8 %10997, 1
  %10999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10998, i8* %10999, align 1
  %11000 = xor i32 %10988, %10986
  %11001 = xor i32 %11000, %10989
  %11002 = lshr i32 %11001, 4
  %11003 = trunc i32 %11002 to i8
  %11004 = and i8 %11003, 1
  %11005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11004, i8* %11005, align 1
  %11006 = icmp eq i32 %10989, 0
  %11007 = zext i1 %11006 to i8
  %11008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11007, i8* %11008, align 1
  %11009 = lshr i32 %10989, 31
  %11010 = trunc i32 %11009 to i8
  %11011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11010, i8* %11011, align 1
  %11012 = lshr i32 %10986, 31
  %11013 = lshr i32 %10988, 31
  %11014 = xor i32 %11013, %11012
  %11015 = xor i32 %11009, %11012
  %11016 = add i32 %11015, %11014
  %11017 = icmp eq i32 %11016, 2
  %11018 = zext i1 %11017 to i8
  %11019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11018, i8* %11019, align 1
  store %struct.Memory* %loadMem_40fc94, %struct.Memory** %MEMORY
  %loadMem_40fc98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11021 = getelementptr inbounds %struct.GPR, %struct.GPR* %11020, i32 0, i32 33
  %11022 = getelementptr inbounds %struct.Reg, %struct.Reg* %11021, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %11022 to i64*
  %11023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11024 = getelementptr inbounds %struct.GPR, %struct.GPR* %11023, i32 0, i32 11
  %11025 = getelementptr inbounds %struct.Reg, %struct.Reg* %11024, i32 0, i32 0
  %RDI.i242 = bitcast %union.anon* %11025 to i64*
  %11026 = load i64, i64* %RDI.i242
  %11027 = load i64, i64* %PC.i241
  %11028 = add i64 %11027, 3
  store i64 %11028, i64* %PC.i241
  %11029 = trunc i64 %11026 to i32
  %11030 = add i32 32, %11029
  %11031 = zext i32 %11030 to i64
  store i64 %11031, i64* %RDI.i242, align 8
  %11032 = icmp ult i32 %11030, %11029
  %11033 = icmp ult i32 %11030, 32
  %11034 = or i1 %11032, %11033
  %11035 = zext i1 %11034 to i8
  %11036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11035, i8* %11036, align 1
  %11037 = and i32 %11030, 255
  %11038 = call i32 @llvm.ctpop.i32(i32 %11037)
  %11039 = trunc i32 %11038 to i8
  %11040 = and i8 %11039, 1
  %11041 = xor i8 %11040, 1
  %11042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11041, i8* %11042, align 1
  %11043 = xor i64 32, %11026
  %11044 = trunc i64 %11043 to i32
  %11045 = xor i32 %11044, %11030
  %11046 = lshr i32 %11045, 4
  %11047 = trunc i32 %11046 to i8
  %11048 = and i8 %11047, 1
  %11049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11048, i8* %11049, align 1
  %11050 = icmp eq i32 %11030, 0
  %11051 = zext i1 %11050 to i8
  %11052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11051, i8* %11052, align 1
  %11053 = lshr i32 %11030, 31
  %11054 = trunc i32 %11053 to i8
  %11055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11054, i8* %11055, align 1
  %11056 = lshr i32 %11029, 31
  %11057 = xor i32 %11053, %11056
  %11058 = add i32 %11057, %11053
  %11059 = icmp eq i32 %11058, 2
  %11060 = zext i1 %11059 to i8
  %11061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11060, i8* %11061, align 1
  store %struct.Memory* %loadMem_40fc98, %struct.Memory** %MEMORY
  %loadMem_40fc9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11063 = getelementptr inbounds %struct.GPR, %struct.GPR* %11062, i32 0, i32 33
  %11064 = getelementptr inbounds %struct.Reg, %struct.Reg* %11063, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %11064 to i64*
  %11065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11066 = getelementptr inbounds %struct.GPR, %struct.GPR* %11065, i32 0, i32 11
  %11067 = getelementptr inbounds %struct.Reg, %struct.Reg* %11066, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %11067 to i64*
  %11068 = load i64, i64* %RDI.i
  %11069 = load i64, i64* %PC.i240
  %11070 = add i64 %11069, 3
  store i64 %11070, i64* %PC.i240
  %11071 = shl i64 %11068, 32
  %11072 = ashr exact i64 %11071, 32
  %11073 = ashr i64 %11072, 5
  %11074 = lshr i64 %11073, 1
  %11075 = trunc i64 %11073 to i8
  %11076 = and i8 %11075, 1
  %11077 = trunc i64 %11074 to i32
  %11078 = and i64 %11074, 4294967295
  store i64 %11078, i64* %RDI.i, align 8
  %11079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11076, i8* %11079, align 1
  %11080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11081 = and i32 %11077, 255
  %11082 = call i32 @llvm.ctpop.i32(i32 %11081)
  %11083 = trunc i32 %11082 to i8
  %11084 = and i8 %11083, 1
  %11085 = xor i8 %11084, 1
  store i8 %11085, i8* %11080, align 1
  %11086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11086, align 1
  %11087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11088 = icmp eq i32 %11077, 0
  %11089 = zext i1 %11088 to i8
  store i8 %11089, i8* %11087, align 1
  %11090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11091 = lshr i32 %11077, 31
  %11092 = trunc i32 %11091 to i8
  store i8 %11092, i8* %11090, align 1
  %11093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11093, align 1
  store %struct.Memory* %loadMem_40fc9b, %struct.Memory** %MEMORY
  %loadMem_40fc9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11095 = getelementptr inbounds %struct.GPR, %struct.GPR* %11094, i32 0, i32 33
  %11096 = getelementptr inbounds %struct.Reg, %struct.Reg* %11095, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %11096 to i64*
  %11097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11098 = getelementptr inbounds %struct.GPR, %struct.GPR* %11097, i32 0, i32 5
  %11099 = getelementptr inbounds %struct.Reg, %struct.Reg* %11098, i32 0, i32 0
  %ECX.i239 = bitcast %union.anon* %11099 to i32*
  %11100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11101 = getelementptr inbounds %struct.GPR, %struct.GPR* %11100, i32 0, i32 11
  %11102 = getelementptr inbounds %struct.Reg, %struct.Reg* %11101, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %11102 to i32*
  %11103 = load i32, i32* %ECX.i239
  %11104 = zext i32 %11103 to i64
  %11105 = load i32, i32* %EDI.i
  %11106 = zext i32 %11105 to i64
  %11107 = load i64, i64* %PC.i238
  %11108 = add i64 %11107, 2
  store i64 %11108, i64* %PC.i238
  %11109 = sub i32 %11103, %11105
  %11110 = icmp ult i32 %11103, %11105
  %11111 = zext i1 %11110 to i8
  %11112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11111, i8* %11112, align 1
  %11113 = and i32 %11109, 255
  %11114 = call i32 @llvm.ctpop.i32(i32 %11113)
  %11115 = trunc i32 %11114 to i8
  %11116 = and i8 %11115, 1
  %11117 = xor i8 %11116, 1
  %11118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11117, i8* %11118, align 1
  %11119 = xor i64 %11106, %11104
  %11120 = trunc i64 %11119 to i32
  %11121 = xor i32 %11120, %11109
  %11122 = lshr i32 %11121, 4
  %11123 = trunc i32 %11122 to i8
  %11124 = and i8 %11123, 1
  %11125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11124, i8* %11125, align 1
  %11126 = icmp eq i32 %11109, 0
  %11127 = zext i1 %11126 to i8
  %11128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11127, i8* %11128, align 1
  %11129 = lshr i32 %11109, 31
  %11130 = trunc i32 %11129 to i8
  %11131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11130, i8* %11131, align 1
  %11132 = lshr i32 %11103, 31
  %11133 = lshr i32 %11105, 31
  %11134 = xor i32 %11133, %11132
  %11135 = xor i32 %11129, %11132
  %11136 = add i32 %11135, %11134
  %11137 = icmp eq i32 %11136, 2
  %11138 = zext i1 %11137 to i8
  %11139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11138, i8* %11139, align 1
  store %struct.Memory* %loadMem_40fc9e, %struct.Memory** %MEMORY
  %loadMem_40fca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11141 = getelementptr inbounds %struct.GPR, %struct.GPR* %11140, i32 0, i32 33
  %11142 = getelementptr inbounds %struct.Reg, %struct.Reg* %11141, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %11142 to i64*
  %11143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11144 = getelementptr inbounds %struct.GPR, %struct.GPR* %11143, i32 0, i32 1
  %11145 = getelementptr inbounds %struct.Reg, %struct.Reg* %11144, i32 0, i32 0
  %EAX.i236 = bitcast %union.anon* %11145 to i32*
  %11146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11147 = getelementptr inbounds %struct.GPR, %struct.GPR* %11146, i32 0, i32 15
  %11148 = getelementptr inbounds %struct.Reg, %struct.Reg* %11147, i32 0, i32 0
  %RBP.i237 = bitcast %union.anon* %11148 to i64*
  %11149 = load i64, i64* %RBP.i237
  %11150 = sub i64 %11149, 204
  %11151 = load i32, i32* %EAX.i236
  %11152 = zext i32 %11151 to i64
  %11153 = load i64, i64* %PC.i235
  %11154 = add i64 %11153, 6
  store i64 %11154, i64* %PC.i235
  %11155 = inttoptr i64 %11150 to i32*
  store i32 %11151, i32* %11155
  store %struct.Memory* %loadMem_40fca0, %struct.Memory** %MEMORY
  %loadMem_40fca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11157 = getelementptr inbounds %struct.GPR, %struct.GPR* %11156, i32 0, i32 33
  %11158 = getelementptr inbounds %struct.Reg, %struct.Reg* %11157, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %11158 to i64*
  %11159 = load i64, i64* %PC.i234
  %11160 = add i64 %11159, 19
  %11161 = load i64, i64* %PC.i234
  %11162 = add i64 %11161, 6
  %11163 = load i64, i64* %PC.i234
  %11164 = add i64 %11163, 6
  store i64 %11164, i64* %PC.i234
  %11165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11166 = load i8, i8* %11165, align 1
  %11167 = icmp ne i8 %11166, 0
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11169 = load i8, i8* %11168, align 1
  %11170 = icmp ne i8 %11169, 0
  %11171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11172 = load i8, i8* %11171, align 1
  %11173 = icmp ne i8 %11172, 0
  %11174 = xor i1 %11170, %11173
  %11175 = or i1 %11167, %11174
  %11176 = zext i1 %11175 to i8
  store i8 %11176, i8* %BRANCH_TAKEN, align 1
  %11177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11178 = select i1 %11175, i64 %11160, i64 %11162
  store i64 %11178, i64* %11177, align 8
  store %struct.Memory* %loadMem_40fca6, %struct.Memory** %MEMORY
  %loadBr_40fca6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fca6 = icmp eq i8 %loadBr_40fca6, 1
  br i1 %cmpBr_40fca6, label %block_.L_40fcb9, label %block_40fcac

block_40fcac:                                     ; preds = %block_.L_40fc51
  %loadMem_40fcac = load %struct.Memory*, %struct.Memory** %MEMORY
  %11179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11180 = getelementptr inbounds %struct.GPR, %struct.GPR* %11179, i32 0, i32 33
  %11181 = getelementptr inbounds %struct.Reg, %struct.Reg* %11180, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %11181 to i64*
  %11182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11183 = getelementptr inbounds %struct.GPR, %struct.GPR* %11182, i32 0, i32 1
  %11184 = getelementptr inbounds %struct.Reg, %struct.Reg* %11183, i32 0, i32 0
  %EAX.i232 = bitcast %union.anon* %11184 to i32*
  %11185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11186 = getelementptr inbounds %struct.GPR, %struct.GPR* %11185, i32 0, i32 1
  %11187 = getelementptr inbounds %struct.Reg, %struct.Reg* %11186, i32 0, i32 0
  %RAX.i233 = bitcast %union.anon* %11187 to i64*
  %11188 = load i64, i64* %RAX.i233
  %11189 = load i32, i32* %EAX.i232
  %11190 = zext i32 %11189 to i64
  %11191 = load i64, i64* %PC.i231
  %11192 = add i64 %11191, 2
  store i64 %11192, i64* %PC.i231
  %11193 = xor i64 %11190, %11188
  %11194 = trunc i64 %11193 to i32
  %11195 = and i64 %11193, 4294967295
  store i64 %11195, i64* %RAX.i233, align 8
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11196, align 1
  %11197 = and i32 %11194, 255
  %11198 = call i32 @llvm.ctpop.i32(i32 %11197)
  %11199 = trunc i32 %11198 to i8
  %11200 = and i8 %11199, 1
  %11201 = xor i8 %11200, 1
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11201, i8* %11202, align 1
  %11203 = icmp eq i32 %11194, 0
  %11204 = zext i1 %11203 to i8
  %11205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11204, i8* %11205, align 1
  %11206 = lshr i32 %11194, 31
  %11207 = trunc i32 %11206 to i8
  %11208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11207, i8* %11208, align 1
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11209, align 1
  %11210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11210, align 1
  store %struct.Memory* %loadMem_40fcac, %struct.Memory** %MEMORY
  %loadMem_40fcae = load %struct.Memory*, %struct.Memory** %MEMORY
  %11211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11212 = getelementptr inbounds %struct.GPR, %struct.GPR* %11211, i32 0, i32 33
  %11213 = getelementptr inbounds %struct.Reg, %struct.Reg* %11212, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %11213 to i64*
  %11214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11215 = getelementptr inbounds %struct.GPR, %struct.GPR* %11214, i32 0, i32 1
  %11216 = getelementptr inbounds %struct.Reg, %struct.Reg* %11215, i32 0, i32 0
  %EAX.i229 = bitcast %union.anon* %11216 to i32*
  %11217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11218 = getelementptr inbounds %struct.GPR, %struct.GPR* %11217, i32 0, i32 15
  %11219 = getelementptr inbounds %struct.Reg, %struct.Reg* %11218, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %11219 to i64*
  %11220 = load i64, i64* %RBP.i230
  %11221 = sub i64 %11220, 208
  %11222 = load i32, i32* %EAX.i229
  %11223 = zext i32 %11222 to i64
  %11224 = load i64, i64* %PC.i228
  %11225 = add i64 %11224, 6
  store i64 %11225, i64* %PC.i228
  %11226 = inttoptr i64 %11221 to i32*
  store i32 %11222, i32* %11226
  store %struct.Memory* %loadMem_40fcae, %struct.Memory** %MEMORY
  %loadMem_40fcb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11228 = getelementptr inbounds %struct.GPR, %struct.GPR* %11227, i32 0, i32 33
  %11229 = getelementptr inbounds %struct.Reg, %struct.Reg* %11228, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %11229 to i64*
  %11230 = load i64, i64* %PC.i227
  %11231 = add i64 %11230, 33
  %11232 = load i64, i64* %PC.i227
  %11233 = add i64 %11232, 5
  store i64 %11233, i64* %PC.i227
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11231, i64* %11234, align 8
  store %struct.Memory* %loadMem_40fcb4, %struct.Memory** %MEMORY
  br label %block_.L_40fcd5

block_.L_40fcb9:                                  ; preds = %block_.L_40fc51
  %loadMem_40fcb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11236 = getelementptr inbounds %struct.GPR, %struct.GPR* %11235, i32 0, i32 33
  %11237 = getelementptr inbounds %struct.Reg, %struct.Reg* %11236, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %11237 to i64*
  %11238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11239 = getelementptr inbounds %struct.GPR, %struct.GPR* %11238, i32 0, i32 1
  %11240 = getelementptr inbounds %struct.Reg, %struct.Reg* %11239, i32 0, i32 0
  %RAX.i225 = bitcast %union.anon* %11240 to i64*
  %11241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11242 = getelementptr inbounds %struct.GPR, %struct.GPR* %11241, i32 0, i32 15
  %11243 = getelementptr inbounds %struct.Reg, %struct.Reg* %11242, i32 0, i32 0
  %RBP.i226 = bitcast %union.anon* %11243 to i64*
  %11244 = load i64, i64* %RBP.i226
  %11245 = sub i64 %11244, 16
  %11246 = load i64, i64* %PC.i224
  %11247 = add i64 %11246, 4
  store i64 %11247, i64* %PC.i224
  %11248 = inttoptr i64 %11245 to i32*
  %11249 = load i32, i32* %11248
  %11250 = sext i32 %11249 to i64
  store i64 %11250, i64* %RAX.i225, align 8
  store %struct.Memory* %loadMem_40fcb9, %struct.Memory** %MEMORY
  %loadMem_40fcbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11252 = getelementptr inbounds %struct.GPR, %struct.GPR* %11251, i32 0, i32 33
  %11253 = getelementptr inbounds %struct.Reg, %struct.Reg* %11252, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %11253 to i64*
  %11254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11255 = getelementptr inbounds %struct.GPR, %struct.GPR* %11254, i32 0, i32 1
  %11256 = getelementptr inbounds %struct.Reg, %struct.Reg* %11255, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %11256 to i64*
  %11257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11258 = getelementptr inbounds %struct.GPR, %struct.GPR* %11257, i32 0, i32 5
  %11259 = getelementptr inbounds %struct.Reg, %struct.Reg* %11258, i32 0, i32 0
  %RCX.i222 = bitcast %union.anon* %11259 to i64*
  %11260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11261 = getelementptr inbounds %struct.GPR, %struct.GPR* %11260, i32 0, i32 15
  %11262 = getelementptr inbounds %struct.Reg, %struct.Reg* %11261, i32 0, i32 0
  %RBP.i223 = bitcast %union.anon* %11262 to i64*
  %11263 = load i64, i64* %RBP.i223
  %11264 = load i64, i64* %RAX.i221
  %11265 = mul i64 %11264, 4
  %11266 = add i64 %11263, -64
  %11267 = add i64 %11266, %11265
  %11268 = load i64, i64* %PC.i220
  %11269 = add i64 %11268, 4
  store i64 %11269, i64* %PC.i220
  %11270 = inttoptr i64 %11267 to i32*
  %11271 = load i32, i32* %11270
  %11272 = zext i32 %11271 to i64
  store i64 %11272, i64* %RCX.i222, align 8
  store %struct.Memory* %loadMem_40fcbd, %struct.Memory** %MEMORY
  %loadMem_40fcc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11274 = getelementptr inbounds %struct.GPR, %struct.GPR* %11273, i32 0, i32 33
  %11275 = getelementptr inbounds %struct.Reg, %struct.Reg* %11274, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %11275 to i64*
  %11276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11277 = getelementptr inbounds %struct.GPR, %struct.GPR* %11276, i32 0, i32 1
  %11278 = getelementptr inbounds %struct.Reg, %struct.Reg* %11277, i32 0, i32 0
  %RAX.i218 = bitcast %union.anon* %11278 to i64*
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11280 = getelementptr inbounds %struct.GPR, %struct.GPR* %11279, i32 0, i32 15
  %11281 = getelementptr inbounds %struct.Reg, %struct.Reg* %11280, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %11281 to i64*
  %11282 = load i64, i64* %RBP.i219
  %11283 = sub i64 %11282, 24
  %11284 = load i64, i64* %PC.i217
  %11285 = add i64 %11284, 4
  store i64 %11285, i64* %PC.i217
  %11286 = inttoptr i64 %11283 to i32*
  %11287 = load i32, i32* %11286
  %11288 = sext i32 %11287 to i64
  store i64 %11288, i64* %RAX.i218, align 8
  store %struct.Memory* %loadMem_40fcc1, %struct.Memory** %MEMORY
  %loadMem_40fcc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11290 = getelementptr inbounds %struct.GPR, %struct.GPR* %11289, i32 0, i32 33
  %11291 = getelementptr inbounds %struct.Reg, %struct.Reg* %11290, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %11291 to i64*
  %11292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11293 = getelementptr inbounds %struct.GPR, %struct.GPR* %11292, i32 0, i32 1
  %11294 = getelementptr inbounds %struct.Reg, %struct.Reg* %11293, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %11294 to i64*
  %11295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11296 = getelementptr inbounds %struct.GPR, %struct.GPR* %11295, i32 0, i32 5
  %11297 = getelementptr inbounds %struct.Reg, %struct.Reg* %11296, i32 0, i32 0
  %RCX.i215 = bitcast %union.anon* %11297 to i64*
  %11298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11299 = getelementptr inbounds %struct.GPR, %struct.GPR* %11298, i32 0, i32 15
  %11300 = getelementptr inbounds %struct.Reg, %struct.Reg* %11299, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %11300 to i64*
  %11301 = load i64, i64* %RCX.i215
  %11302 = load i64, i64* %RBP.i216
  %11303 = load i64, i64* %RAX.i214
  %11304 = mul i64 %11303, 4
  %11305 = add i64 %11302, -64
  %11306 = add i64 %11305, %11304
  %11307 = load i64, i64* %PC.i213
  %11308 = add i64 %11307, 4
  store i64 %11308, i64* %PC.i213
  %11309 = trunc i64 %11301 to i32
  %11310 = inttoptr i64 %11306 to i32*
  %11311 = load i32, i32* %11310
  %11312 = sub i32 %11309, %11311
  %11313 = zext i32 %11312 to i64
  store i64 %11313, i64* %RCX.i215, align 8
  %11314 = icmp ult i32 %11309, %11311
  %11315 = zext i1 %11314 to i8
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11315, i8* %11316, align 1
  %11317 = and i32 %11312, 255
  %11318 = call i32 @llvm.ctpop.i32(i32 %11317)
  %11319 = trunc i32 %11318 to i8
  %11320 = and i8 %11319, 1
  %11321 = xor i8 %11320, 1
  %11322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11321, i8* %11322, align 1
  %11323 = xor i32 %11311, %11309
  %11324 = xor i32 %11323, %11312
  %11325 = lshr i32 %11324, 4
  %11326 = trunc i32 %11325 to i8
  %11327 = and i8 %11326, 1
  %11328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11327, i8* %11328, align 1
  %11329 = icmp eq i32 %11312, 0
  %11330 = zext i1 %11329 to i8
  %11331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11330, i8* %11331, align 1
  %11332 = lshr i32 %11312, 31
  %11333 = trunc i32 %11332 to i8
  %11334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11333, i8* %11334, align 1
  %11335 = lshr i32 %11309, 31
  %11336 = lshr i32 %11311, 31
  %11337 = xor i32 %11336, %11335
  %11338 = xor i32 %11332, %11335
  %11339 = add i32 %11338, %11337
  %11340 = icmp eq i32 %11339, 2
  %11341 = zext i1 %11340 to i8
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11341, i8* %11342, align 1
  store %struct.Memory* %loadMem_40fcc5, %struct.Memory** %MEMORY
  %loadMem_40fcc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11344 = getelementptr inbounds %struct.GPR, %struct.GPR* %11343, i32 0, i32 33
  %11345 = getelementptr inbounds %struct.Reg, %struct.Reg* %11344, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %11345 to i64*
  %11346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11347 = getelementptr inbounds %struct.GPR, %struct.GPR* %11346, i32 0, i32 5
  %11348 = getelementptr inbounds %struct.Reg, %struct.Reg* %11347, i32 0, i32 0
  %RCX.i212 = bitcast %union.anon* %11348 to i64*
  %11349 = load i64, i64* %RCX.i212
  %11350 = load i64, i64* %PC.i211
  %11351 = add i64 %11350, 3
  store i64 %11351, i64* %PC.i211
  %11352 = trunc i64 %11349 to i32
  %11353 = add i32 32, %11352
  %11354 = zext i32 %11353 to i64
  store i64 %11354, i64* %RCX.i212, align 8
  %11355 = icmp ult i32 %11353, %11352
  %11356 = icmp ult i32 %11353, 32
  %11357 = or i1 %11355, %11356
  %11358 = zext i1 %11357 to i8
  %11359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11358, i8* %11359, align 1
  %11360 = and i32 %11353, 255
  %11361 = call i32 @llvm.ctpop.i32(i32 %11360)
  %11362 = trunc i32 %11361 to i8
  %11363 = and i8 %11362, 1
  %11364 = xor i8 %11363, 1
  %11365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11364, i8* %11365, align 1
  %11366 = xor i64 32, %11349
  %11367 = trunc i64 %11366 to i32
  %11368 = xor i32 %11367, %11353
  %11369 = lshr i32 %11368, 4
  %11370 = trunc i32 %11369 to i8
  %11371 = and i8 %11370, 1
  %11372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11371, i8* %11372, align 1
  %11373 = icmp eq i32 %11353, 0
  %11374 = zext i1 %11373 to i8
  %11375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11374, i8* %11375, align 1
  %11376 = lshr i32 %11353, 31
  %11377 = trunc i32 %11376 to i8
  %11378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11377, i8* %11378, align 1
  %11379 = lshr i32 %11352, 31
  %11380 = xor i32 %11376, %11379
  %11381 = add i32 %11380, %11376
  %11382 = icmp eq i32 %11381, 2
  %11383 = zext i1 %11382 to i8
  %11384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11383, i8* %11384, align 1
  store %struct.Memory* %loadMem_40fcc9, %struct.Memory** %MEMORY
  %loadMem_40fccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11386 = getelementptr inbounds %struct.GPR, %struct.GPR* %11385, i32 0, i32 33
  %11387 = getelementptr inbounds %struct.Reg, %struct.Reg* %11386, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %11387 to i64*
  %11388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11389 = getelementptr inbounds %struct.GPR, %struct.GPR* %11388, i32 0, i32 5
  %11390 = getelementptr inbounds %struct.Reg, %struct.Reg* %11389, i32 0, i32 0
  %RCX.i210 = bitcast %union.anon* %11390 to i64*
  %11391 = load i64, i64* %RCX.i210
  %11392 = load i64, i64* %PC.i209
  %11393 = add i64 %11392, 3
  store i64 %11393, i64* %PC.i209
  %11394 = shl i64 %11391, 32
  %11395 = ashr exact i64 %11394, 32
  %11396 = ashr i64 %11395, 5
  %11397 = lshr i64 %11396, 1
  %11398 = trunc i64 %11396 to i8
  %11399 = and i8 %11398, 1
  %11400 = trunc i64 %11397 to i32
  %11401 = and i64 %11397, 4294967295
  store i64 %11401, i64* %RCX.i210, align 8
  %11402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11399, i8* %11402, align 1
  %11403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11404 = and i32 %11400, 255
  %11405 = call i32 @llvm.ctpop.i32(i32 %11404)
  %11406 = trunc i32 %11405 to i8
  %11407 = and i8 %11406, 1
  %11408 = xor i8 %11407, 1
  store i8 %11408, i8* %11403, align 1
  %11409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11409, align 1
  %11410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11411 = icmp eq i32 %11400, 0
  %11412 = zext i1 %11411 to i8
  store i8 %11412, i8* %11410, align 1
  %11413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11414 = lshr i32 %11400, 31
  %11415 = trunc i32 %11414 to i8
  store i8 %11415, i8* %11413, align 1
  %11416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11416, align 1
  store %struct.Memory* %loadMem_40fccc, %struct.Memory** %MEMORY
  %loadMem_40fccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11418 = getelementptr inbounds %struct.GPR, %struct.GPR* %11417, i32 0, i32 33
  %11419 = getelementptr inbounds %struct.Reg, %struct.Reg* %11418, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %11419 to i64*
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11421 = getelementptr inbounds %struct.GPR, %struct.GPR* %11420, i32 0, i32 5
  %11422 = getelementptr inbounds %struct.Reg, %struct.Reg* %11421, i32 0, i32 0
  %ECX.i207 = bitcast %union.anon* %11422 to i32*
  %11423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11424 = getelementptr inbounds %struct.GPR, %struct.GPR* %11423, i32 0, i32 15
  %11425 = getelementptr inbounds %struct.Reg, %struct.Reg* %11424, i32 0, i32 0
  %RBP.i208 = bitcast %union.anon* %11425 to i64*
  %11426 = load i64, i64* %RBP.i208
  %11427 = sub i64 %11426, 208
  %11428 = load i32, i32* %ECX.i207
  %11429 = zext i32 %11428 to i64
  %11430 = load i64, i64* %PC.i206
  %11431 = add i64 %11430, 6
  store i64 %11431, i64* %PC.i206
  %11432 = inttoptr i64 %11427 to i32*
  store i32 %11428, i32* %11432
  store %struct.Memory* %loadMem_40fccf, %struct.Memory** %MEMORY
  br label %block_.L_40fcd5

block_.L_40fcd5:                                  ; preds = %block_.L_40fcb9, %block_40fcac
  %loadMem_40fcd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11434 = getelementptr inbounds %struct.GPR, %struct.GPR* %11433, i32 0, i32 33
  %11435 = getelementptr inbounds %struct.Reg, %struct.Reg* %11434, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %11435 to i64*
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11437 = getelementptr inbounds %struct.GPR, %struct.GPR* %11436, i32 0, i32 1
  %11438 = getelementptr inbounds %struct.Reg, %struct.Reg* %11437, i32 0, i32 0
  %RAX.i204 = bitcast %union.anon* %11438 to i64*
  %11439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11440 = getelementptr inbounds %struct.GPR, %struct.GPR* %11439, i32 0, i32 15
  %11441 = getelementptr inbounds %struct.Reg, %struct.Reg* %11440, i32 0, i32 0
  %RBP.i205 = bitcast %union.anon* %11441 to i64*
  %11442 = load i64, i64* %RBP.i205
  %11443 = sub i64 %11442, 208
  %11444 = load i64, i64* %PC.i203
  %11445 = add i64 %11444, 6
  store i64 %11445, i64* %PC.i203
  %11446 = inttoptr i64 %11443 to i32*
  %11447 = load i32, i32* %11446
  %11448 = zext i32 %11447 to i64
  store i64 %11448, i64* %RAX.i204, align 8
  store %struct.Memory* %loadMem_40fcd5, %struct.Memory** %MEMORY
  %loadMem_40fcdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11450 = getelementptr inbounds %struct.GPR, %struct.GPR* %11449, i32 0, i32 33
  %11451 = getelementptr inbounds %struct.Reg, %struct.Reg* %11450, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %11451 to i64*
  %11452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11453 = getelementptr inbounds %struct.GPR, %struct.GPR* %11452, i32 0, i32 5
  %11454 = getelementptr inbounds %struct.Reg, %struct.Reg* %11453, i32 0, i32 0
  %RCX.i201 = bitcast %union.anon* %11454 to i64*
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11456 = getelementptr inbounds %struct.GPR, %struct.GPR* %11455, i32 0, i32 15
  %11457 = getelementptr inbounds %struct.Reg, %struct.Reg* %11456, i32 0, i32 0
  %RBP.i202 = bitcast %union.anon* %11457 to i64*
  %11458 = load i64, i64* %RBP.i202
  %11459 = sub i64 %11458, 204
  %11460 = load i64, i64* %PC.i200
  %11461 = add i64 %11460, 6
  store i64 %11461, i64* %PC.i200
  %11462 = inttoptr i64 %11459 to i32*
  %11463 = load i32, i32* %11462
  %11464 = zext i32 %11463 to i64
  store i64 %11464, i64* %RCX.i201, align 8
  store %struct.Memory* %loadMem_40fcdb, %struct.Memory** %MEMORY
  %loadMem_40fce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11466 = getelementptr inbounds %struct.GPR, %struct.GPR* %11465, i32 0, i32 33
  %11467 = getelementptr inbounds %struct.Reg, %struct.Reg* %11466, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %11467 to i64*
  %11468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11469 = getelementptr inbounds %struct.GPR, %struct.GPR* %11468, i32 0, i32 1
  %11470 = getelementptr inbounds %struct.Reg, %struct.Reg* %11469, i32 0, i32 0
  %EAX.i198 = bitcast %union.anon* %11470 to i32*
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11472 = getelementptr inbounds %struct.GPR, %struct.GPR* %11471, i32 0, i32 5
  %11473 = getelementptr inbounds %struct.Reg, %struct.Reg* %11472, i32 0, i32 0
  %ECX.i199 = bitcast %union.anon* %11473 to i32*
  %11474 = load i32, i32* %ECX.i199
  %11475 = zext i32 %11474 to i64
  %11476 = load i32, i32* %EAX.i198
  %11477 = zext i32 %11476 to i64
  %11478 = load i64, i64* %PC.i197
  %11479 = add i64 %11478, 2
  store i64 %11479, i64* %PC.i197
  %11480 = sub i32 %11474, %11476
  %11481 = icmp ult i32 %11474, %11476
  %11482 = zext i1 %11481 to i8
  %11483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11482, i8* %11483, align 1
  %11484 = and i32 %11480, 255
  %11485 = call i32 @llvm.ctpop.i32(i32 %11484)
  %11486 = trunc i32 %11485 to i8
  %11487 = and i8 %11486, 1
  %11488 = xor i8 %11487, 1
  %11489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11488, i8* %11489, align 1
  %11490 = xor i64 %11477, %11475
  %11491 = trunc i64 %11490 to i32
  %11492 = xor i32 %11491, %11480
  %11493 = lshr i32 %11492, 4
  %11494 = trunc i32 %11493 to i8
  %11495 = and i8 %11494, 1
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11495, i8* %11496, align 1
  %11497 = icmp eq i32 %11480, 0
  %11498 = zext i1 %11497 to i8
  %11499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11498, i8* %11499, align 1
  %11500 = lshr i32 %11480, 31
  %11501 = trunc i32 %11500 to i8
  %11502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11501, i8* %11502, align 1
  %11503 = lshr i32 %11474, 31
  %11504 = lshr i32 %11476, 31
  %11505 = xor i32 %11504, %11503
  %11506 = xor i32 %11500, %11503
  %11507 = add i32 %11506, %11505
  %11508 = icmp eq i32 %11507, 2
  %11509 = zext i1 %11508 to i8
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11509, i8* %11510, align 1
  store %struct.Memory* %loadMem_40fce1, %struct.Memory** %MEMORY
  %loadMem_40fce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11512 = getelementptr inbounds %struct.GPR, %struct.GPR* %11511, i32 0, i32 33
  %11513 = getelementptr inbounds %struct.Reg, %struct.Reg* %11512, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %11513 to i64*
  %11514 = load i64, i64* %PC.i196
  %11515 = add i64 %11514, 31
  %11516 = load i64, i64* %PC.i196
  %11517 = add i64 %11516, 6
  %11518 = load i64, i64* %PC.i196
  %11519 = add i64 %11518, 6
  store i64 %11519, i64* %PC.i196
  %11520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11521 = load i8, i8* %11520, align 1
  %11522 = icmp ne i8 %11521, 0
  %11523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11524 = load i8, i8* %11523, align 1
  %11525 = icmp ne i8 %11524, 0
  %11526 = xor i1 %11522, %11525
  %11527 = xor i1 %11526, true
  %11528 = zext i1 %11527 to i8
  store i8 %11528, i8* %BRANCH_TAKEN, align 1
  %11529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11530 = select i1 %11526, i64 %11517, i64 %11515
  store i64 %11530, i64* %11529, align 8
  store %struct.Memory* %loadMem_40fce3, %struct.Memory** %MEMORY
  %loadBr_40fce3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fce3 = icmp eq i8 %loadBr_40fce3, 1
  br i1 %cmpBr_40fce3, label %block_.L_40fd02, label %block_40fce9

block_40fce9:                                     ; preds = %block_.L_40fcd5
  %loadMem_40fce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11532 = getelementptr inbounds %struct.GPR, %struct.GPR* %11531, i32 0, i32 33
  %11533 = getelementptr inbounds %struct.Reg, %struct.Reg* %11532, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %11533 to i64*
  %11534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11535 = getelementptr inbounds %struct.GPR, %struct.GPR* %11534, i32 0, i32 1
  %11536 = getelementptr inbounds %struct.Reg, %struct.Reg* %11535, i32 0, i32 0
  %RAX.i195 = bitcast %union.anon* %11536 to i64*
  %11537 = load i64, i64* %PC.i194
  %11538 = add i64 %11537, 8
  store i64 %11538, i64* %PC.i194
  %11539 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11539, i64* %RAX.i195, align 8
  store %struct.Memory* %loadMem_40fce9, %struct.Memory** %MEMORY
  %loadMem_40fcf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11541 = getelementptr inbounds %struct.GPR, %struct.GPR* %11540, i32 0, i32 33
  %11542 = getelementptr inbounds %struct.Reg, %struct.Reg* %11541, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %11542 to i64*
  %11543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11544 = getelementptr inbounds %struct.GPR, %struct.GPR* %11543, i32 0, i32 1
  %11545 = getelementptr inbounds %struct.Reg, %struct.Reg* %11544, i32 0, i32 0
  %RAX.i192 = bitcast %union.anon* %11545 to i64*
  %11546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11547 = getelementptr inbounds %struct.GPR, %struct.GPR* %11546, i32 0, i32 5
  %11548 = getelementptr inbounds %struct.Reg, %struct.Reg* %11547, i32 0, i32 0
  %RCX.i193 = bitcast %union.anon* %11548 to i64*
  %11549 = load i64, i64* %RAX.i192
  %11550 = add i64 %11549, 72684
  %11551 = load i64, i64* %PC.i191
  %11552 = add i64 %11551, 6
  store i64 %11552, i64* %PC.i191
  %11553 = inttoptr i64 %11550 to i32*
  %11554 = load i32, i32* %11553
  %11555 = zext i32 %11554 to i64
  store i64 %11555, i64* %RCX.i193, align 8
  store %struct.Memory* %loadMem_40fcf1, %struct.Memory** %MEMORY
  %loadMem_40fcf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11557 = getelementptr inbounds %struct.GPR, %struct.GPR* %11556, i32 0, i32 33
  %11558 = getelementptr inbounds %struct.Reg, %struct.Reg* %11557, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %11558 to i64*
  %11559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11560 = getelementptr inbounds %struct.GPR, %struct.GPR* %11559, i32 0, i32 5
  %11561 = getelementptr inbounds %struct.Reg, %struct.Reg* %11560, i32 0, i32 0
  %ECX.i189 = bitcast %union.anon* %11561 to i32*
  %11562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11563 = getelementptr inbounds %struct.GPR, %struct.GPR* %11562, i32 0, i32 15
  %11564 = getelementptr inbounds %struct.Reg, %struct.Reg* %11563, i32 0, i32 0
  %RBP.i190 = bitcast %union.anon* %11564 to i64*
  %11565 = load i64, i64* %RBP.i190
  %11566 = sub i64 %11565, 212
  %11567 = load i32, i32* %ECX.i189
  %11568 = zext i32 %11567 to i64
  %11569 = load i64, i64* %PC.i188
  %11570 = add i64 %11569, 6
  store i64 %11570, i64* %PC.i188
  %11571 = inttoptr i64 %11566 to i32*
  store i32 %11567, i32* %11571
  store %struct.Memory* %loadMem_40fcf7, %struct.Memory** %MEMORY
  %loadMem_40fcfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11573 = getelementptr inbounds %struct.GPR, %struct.GPR* %11572, i32 0, i32 33
  %11574 = getelementptr inbounds %struct.Reg, %struct.Reg* %11573, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %11574 to i64*
  %11575 = load i64, i64* %PC.i187
  %11576 = add i64 %11575, 90
  %11577 = load i64, i64* %PC.i187
  %11578 = add i64 %11577, 5
  store i64 %11578, i64* %PC.i187
  %11579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11576, i64* %11579, align 8
  store %struct.Memory* %loadMem_40fcfd, %struct.Memory** %MEMORY
  br label %block_.L_40fd57

block_.L_40fd02:                                  ; preds = %block_.L_40fcd5
  %loadMem_40fd02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11581 = getelementptr inbounds %struct.GPR, %struct.GPR* %11580, i32 0, i32 33
  %11582 = getelementptr inbounds %struct.Reg, %struct.Reg* %11581, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %11582 to i64*
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11584 = getelementptr inbounds %struct.GPR, %struct.GPR* %11583, i32 0, i32 1
  %11585 = getelementptr inbounds %struct.Reg, %struct.Reg* %11584, i32 0, i32 0
  %EAX.i185 = bitcast %union.anon* %11585 to i32*
  %11586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11587 = getelementptr inbounds %struct.GPR, %struct.GPR* %11586, i32 0, i32 1
  %11588 = getelementptr inbounds %struct.Reg, %struct.Reg* %11587, i32 0, i32 0
  %RAX.i186 = bitcast %union.anon* %11588 to i64*
  %11589 = load i64, i64* %RAX.i186
  %11590 = load i32, i32* %EAX.i185
  %11591 = zext i32 %11590 to i64
  %11592 = load i64, i64* %PC.i184
  %11593 = add i64 %11592, 2
  store i64 %11593, i64* %PC.i184
  %11594 = xor i64 %11591, %11589
  %11595 = trunc i64 %11594 to i32
  %11596 = and i64 %11594, 4294967295
  store i64 %11596, i64* %RAX.i186, align 8
  %11597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11597, align 1
  %11598 = and i32 %11595, 255
  %11599 = call i32 @llvm.ctpop.i32(i32 %11598)
  %11600 = trunc i32 %11599 to i8
  %11601 = and i8 %11600, 1
  %11602 = xor i8 %11601, 1
  %11603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11602, i8* %11603, align 1
  %11604 = icmp eq i32 %11595, 0
  %11605 = zext i1 %11604 to i8
  %11606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11605, i8* %11606, align 1
  %11607 = lshr i32 %11595, 31
  %11608 = trunc i32 %11607 to i8
  %11609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11608, i8* %11609, align 1
  %11610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11610, align 1
  %11611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11611, align 1
  store %struct.Memory* %loadMem_40fd02, %struct.Memory** %MEMORY
  %loadMem_40fd04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11613 = getelementptr inbounds %struct.GPR, %struct.GPR* %11612, i32 0, i32 33
  %11614 = getelementptr inbounds %struct.Reg, %struct.Reg* %11613, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %11614 to i64*
  %11615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11616 = getelementptr inbounds %struct.GPR, %struct.GPR* %11615, i32 0, i32 5
  %11617 = getelementptr inbounds %struct.Reg, %struct.Reg* %11616, i32 0, i32 0
  %RCX.i182 = bitcast %union.anon* %11617 to i64*
  %11618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11619 = getelementptr inbounds %struct.GPR, %struct.GPR* %11618, i32 0, i32 15
  %11620 = getelementptr inbounds %struct.Reg, %struct.Reg* %11619, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %11620 to i64*
  %11621 = load i64, i64* %RBP.i183
  %11622 = sub i64 %11621, 16
  %11623 = load i64, i64* %PC.i181
  %11624 = add i64 %11623, 4
  store i64 %11624, i64* %PC.i181
  %11625 = inttoptr i64 %11622 to i32*
  %11626 = load i32, i32* %11625
  %11627 = sext i32 %11626 to i64
  store i64 %11627, i64* %RCX.i182, align 8
  store %struct.Memory* %loadMem_40fd04, %struct.Memory** %MEMORY
  %loadMem_40fd08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11629 = getelementptr inbounds %struct.GPR, %struct.GPR* %11628, i32 0, i32 33
  %11630 = getelementptr inbounds %struct.Reg, %struct.Reg* %11629, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %11630 to i64*
  %11631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11632 = getelementptr inbounds %struct.GPR, %struct.GPR* %11631, i32 0, i32 5
  %11633 = getelementptr inbounds %struct.Reg, %struct.Reg* %11632, i32 0, i32 0
  %RCX.i178 = bitcast %union.anon* %11633 to i64*
  %11634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11635 = getelementptr inbounds %struct.GPR, %struct.GPR* %11634, i32 0, i32 7
  %11636 = getelementptr inbounds %struct.Reg, %struct.Reg* %11635, i32 0, i32 0
  %RDX.i179 = bitcast %union.anon* %11636 to i64*
  %11637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11638 = getelementptr inbounds %struct.GPR, %struct.GPR* %11637, i32 0, i32 15
  %11639 = getelementptr inbounds %struct.Reg, %struct.Reg* %11638, i32 0, i32 0
  %RBP.i180 = bitcast %union.anon* %11639 to i64*
  %11640 = load i64, i64* %RBP.i180
  %11641 = load i64, i64* %RCX.i178
  %11642 = mul i64 %11641, 4
  %11643 = add i64 %11640, -64
  %11644 = add i64 %11643, %11642
  %11645 = load i64, i64* %PC.i177
  %11646 = add i64 %11645, 4
  store i64 %11646, i64* %PC.i177
  %11647 = inttoptr i64 %11644 to i32*
  %11648 = load i32, i32* %11647
  %11649 = zext i32 %11648 to i64
  store i64 %11649, i64* %RDX.i179, align 8
  store %struct.Memory* %loadMem_40fd08, %struct.Memory** %MEMORY
  %loadMem_40fd0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11651 = getelementptr inbounds %struct.GPR, %struct.GPR* %11650, i32 0, i32 33
  %11652 = getelementptr inbounds %struct.Reg, %struct.Reg* %11651, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %11652 to i64*
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11654 = getelementptr inbounds %struct.GPR, %struct.GPR* %11653, i32 0, i32 5
  %11655 = getelementptr inbounds %struct.Reg, %struct.Reg* %11654, i32 0, i32 0
  %RCX.i175 = bitcast %union.anon* %11655 to i64*
  %11656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11657 = getelementptr inbounds %struct.GPR, %struct.GPR* %11656, i32 0, i32 15
  %11658 = getelementptr inbounds %struct.Reg, %struct.Reg* %11657, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %11658 to i64*
  %11659 = load i64, i64* %RBP.i176
  %11660 = sub i64 %11659, 24
  %11661 = load i64, i64* %PC.i174
  %11662 = add i64 %11661, 4
  store i64 %11662, i64* %PC.i174
  %11663 = inttoptr i64 %11660 to i32*
  %11664 = load i32, i32* %11663
  %11665 = sext i32 %11664 to i64
  store i64 %11665, i64* %RCX.i175, align 8
  store %struct.Memory* %loadMem_40fd0c, %struct.Memory** %MEMORY
  %loadMem_40fd10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11667 = getelementptr inbounds %struct.GPR, %struct.GPR* %11666, i32 0, i32 33
  %11668 = getelementptr inbounds %struct.Reg, %struct.Reg* %11667, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %11668 to i64*
  %11669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11670 = getelementptr inbounds %struct.GPR, %struct.GPR* %11669, i32 0, i32 5
  %11671 = getelementptr inbounds %struct.Reg, %struct.Reg* %11670, i32 0, i32 0
  %RCX.i171 = bitcast %union.anon* %11671 to i64*
  %11672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11673 = getelementptr inbounds %struct.GPR, %struct.GPR* %11672, i32 0, i32 7
  %11674 = getelementptr inbounds %struct.Reg, %struct.Reg* %11673, i32 0, i32 0
  %RDX.i172 = bitcast %union.anon* %11674 to i64*
  %11675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11676 = getelementptr inbounds %struct.GPR, %struct.GPR* %11675, i32 0, i32 15
  %11677 = getelementptr inbounds %struct.Reg, %struct.Reg* %11676, i32 0, i32 0
  %RBP.i173 = bitcast %union.anon* %11677 to i64*
  %11678 = load i64, i64* %RDX.i172
  %11679 = load i64, i64* %RBP.i173
  %11680 = load i64, i64* %RCX.i171
  %11681 = mul i64 %11680, 4
  %11682 = add i64 %11679, -64
  %11683 = add i64 %11682, %11681
  %11684 = load i64, i64* %PC.i170
  %11685 = add i64 %11684, 4
  store i64 %11685, i64* %PC.i170
  %11686 = trunc i64 %11678 to i32
  %11687 = inttoptr i64 %11683 to i32*
  %11688 = load i32, i32* %11687
  %11689 = sub i32 %11686, %11688
  %11690 = zext i32 %11689 to i64
  store i64 %11690, i64* %RDX.i172, align 8
  %11691 = icmp ult i32 %11686, %11688
  %11692 = zext i1 %11691 to i8
  %11693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11692, i8* %11693, align 1
  %11694 = and i32 %11689, 255
  %11695 = call i32 @llvm.ctpop.i32(i32 %11694)
  %11696 = trunc i32 %11695 to i8
  %11697 = and i8 %11696, 1
  %11698 = xor i8 %11697, 1
  %11699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11698, i8* %11699, align 1
  %11700 = xor i32 %11688, %11686
  %11701 = xor i32 %11700, %11689
  %11702 = lshr i32 %11701, 4
  %11703 = trunc i32 %11702 to i8
  %11704 = and i8 %11703, 1
  %11705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11704, i8* %11705, align 1
  %11706 = icmp eq i32 %11689, 0
  %11707 = zext i1 %11706 to i8
  %11708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11707, i8* %11708, align 1
  %11709 = lshr i32 %11689, 31
  %11710 = trunc i32 %11709 to i8
  %11711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11710, i8* %11711, align 1
  %11712 = lshr i32 %11686, 31
  %11713 = lshr i32 %11688, 31
  %11714 = xor i32 %11713, %11712
  %11715 = xor i32 %11709, %11712
  %11716 = add i32 %11715, %11714
  %11717 = icmp eq i32 %11716, 2
  %11718 = zext i1 %11717 to i8
  %11719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11718, i8* %11719, align 1
  store %struct.Memory* %loadMem_40fd10, %struct.Memory** %MEMORY
  %loadMem_40fd14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11721 = getelementptr inbounds %struct.GPR, %struct.GPR* %11720, i32 0, i32 33
  %11722 = getelementptr inbounds %struct.Reg, %struct.Reg* %11721, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %11722 to i64*
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11724 = getelementptr inbounds %struct.GPR, %struct.GPR* %11723, i32 0, i32 7
  %11725 = getelementptr inbounds %struct.Reg, %struct.Reg* %11724, i32 0, i32 0
  %RDX.i169 = bitcast %union.anon* %11725 to i64*
  %11726 = load i64, i64* %RDX.i169
  %11727 = load i64, i64* %PC.i168
  %11728 = add i64 %11727, 3
  store i64 %11728, i64* %PC.i168
  %11729 = trunc i64 %11726 to i32
  %11730 = add i32 32, %11729
  %11731 = zext i32 %11730 to i64
  store i64 %11731, i64* %RDX.i169, align 8
  %11732 = icmp ult i32 %11730, %11729
  %11733 = icmp ult i32 %11730, 32
  %11734 = or i1 %11732, %11733
  %11735 = zext i1 %11734 to i8
  %11736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11735, i8* %11736, align 1
  %11737 = and i32 %11730, 255
  %11738 = call i32 @llvm.ctpop.i32(i32 %11737)
  %11739 = trunc i32 %11738 to i8
  %11740 = and i8 %11739, 1
  %11741 = xor i8 %11740, 1
  %11742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11741, i8* %11742, align 1
  %11743 = xor i64 32, %11726
  %11744 = trunc i64 %11743 to i32
  %11745 = xor i32 %11744, %11730
  %11746 = lshr i32 %11745, 4
  %11747 = trunc i32 %11746 to i8
  %11748 = and i8 %11747, 1
  %11749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11748, i8* %11749, align 1
  %11750 = icmp eq i32 %11730, 0
  %11751 = zext i1 %11750 to i8
  %11752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11751, i8* %11752, align 1
  %11753 = lshr i32 %11730, 31
  %11754 = trunc i32 %11753 to i8
  %11755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11754, i8* %11755, align 1
  %11756 = lshr i32 %11729, 31
  %11757 = xor i32 %11753, %11756
  %11758 = add i32 %11757, %11753
  %11759 = icmp eq i32 %11758, 2
  %11760 = zext i1 %11759 to i8
  %11761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11760, i8* %11761, align 1
  store %struct.Memory* %loadMem_40fd14, %struct.Memory** %MEMORY
  %loadMem_40fd17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11763 = getelementptr inbounds %struct.GPR, %struct.GPR* %11762, i32 0, i32 33
  %11764 = getelementptr inbounds %struct.Reg, %struct.Reg* %11763, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %11764 to i64*
  %11765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11766 = getelementptr inbounds %struct.GPR, %struct.GPR* %11765, i32 0, i32 7
  %11767 = getelementptr inbounds %struct.Reg, %struct.Reg* %11766, i32 0, i32 0
  %RDX.i167 = bitcast %union.anon* %11767 to i64*
  %11768 = load i64, i64* %RDX.i167
  %11769 = load i64, i64* %PC.i166
  %11770 = add i64 %11769, 3
  store i64 %11770, i64* %PC.i166
  %11771 = shl i64 %11768, 32
  %11772 = ashr exact i64 %11771, 32
  %11773 = ashr i64 %11772, 5
  %11774 = lshr i64 %11773, 1
  %11775 = trunc i64 %11773 to i8
  %11776 = and i8 %11775, 1
  %11777 = trunc i64 %11774 to i32
  %11778 = and i64 %11774, 4294967295
  store i64 %11778, i64* %RDX.i167, align 8
  %11779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11776, i8* %11779, align 1
  %11780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11781 = and i32 %11777, 255
  %11782 = call i32 @llvm.ctpop.i32(i32 %11781)
  %11783 = trunc i32 %11782 to i8
  %11784 = and i8 %11783, 1
  %11785 = xor i8 %11784, 1
  store i8 %11785, i8* %11780, align 1
  %11786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11786, align 1
  %11787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11788 = icmp eq i32 %11777, 0
  %11789 = zext i1 %11788 to i8
  store i8 %11789, i8* %11787, align 1
  %11790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11791 = lshr i32 %11777, 31
  %11792 = trunc i32 %11791 to i8
  store i8 %11792, i8* %11790, align 1
  %11793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11793, align 1
  store %struct.Memory* %loadMem_40fd17, %struct.Memory** %MEMORY
  %loadMem_40fd1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11795 = getelementptr inbounds %struct.GPR, %struct.GPR* %11794, i32 0, i32 33
  %11796 = getelementptr inbounds %struct.Reg, %struct.Reg* %11795, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %11796 to i64*
  %11797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11798 = getelementptr inbounds %struct.GPR, %struct.GPR* %11797, i32 0, i32 1
  %11799 = getelementptr inbounds %struct.Reg, %struct.Reg* %11798, i32 0, i32 0
  %EAX.i164 = bitcast %union.anon* %11799 to i32*
  %11800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11801 = getelementptr inbounds %struct.GPR, %struct.GPR* %11800, i32 0, i32 7
  %11802 = getelementptr inbounds %struct.Reg, %struct.Reg* %11801, i32 0, i32 0
  %EDX.i165 = bitcast %union.anon* %11802 to i32*
  %11803 = load i32, i32* %EAX.i164
  %11804 = zext i32 %11803 to i64
  %11805 = load i32, i32* %EDX.i165
  %11806 = zext i32 %11805 to i64
  %11807 = load i64, i64* %PC.i163
  %11808 = add i64 %11807, 2
  store i64 %11808, i64* %PC.i163
  %11809 = sub i32 %11803, %11805
  %11810 = icmp ult i32 %11803, %11805
  %11811 = zext i1 %11810 to i8
  %11812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11811, i8* %11812, align 1
  %11813 = and i32 %11809, 255
  %11814 = call i32 @llvm.ctpop.i32(i32 %11813)
  %11815 = trunc i32 %11814 to i8
  %11816 = and i8 %11815, 1
  %11817 = xor i8 %11816, 1
  %11818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11817, i8* %11818, align 1
  %11819 = xor i64 %11806, %11804
  %11820 = trunc i64 %11819 to i32
  %11821 = xor i32 %11820, %11809
  %11822 = lshr i32 %11821, 4
  %11823 = trunc i32 %11822 to i8
  %11824 = and i8 %11823, 1
  %11825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11824, i8* %11825, align 1
  %11826 = icmp eq i32 %11809, 0
  %11827 = zext i1 %11826 to i8
  %11828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11827, i8* %11828, align 1
  %11829 = lshr i32 %11809, 31
  %11830 = trunc i32 %11829 to i8
  %11831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11830, i8* %11831, align 1
  %11832 = lshr i32 %11803, 31
  %11833 = lshr i32 %11805, 31
  %11834 = xor i32 %11833, %11832
  %11835 = xor i32 %11829, %11832
  %11836 = add i32 %11835, %11834
  %11837 = icmp eq i32 %11836, 2
  %11838 = zext i1 %11837 to i8
  %11839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11838, i8* %11839, align 1
  store %struct.Memory* %loadMem_40fd1a, %struct.Memory** %MEMORY
  %loadMem_40fd1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11841 = getelementptr inbounds %struct.GPR, %struct.GPR* %11840, i32 0, i32 33
  %11842 = getelementptr inbounds %struct.Reg, %struct.Reg* %11841, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %11842 to i64*
  %11843 = load i64, i64* %PC.i162
  %11844 = add i64 %11843, 19
  %11845 = load i64, i64* %PC.i162
  %11846 = add i64 %11845, 6
  %11847 = load i64, i64* %PC.i162
  %11848 = add i64 %11847, 6
  store i64 %11848, i64* %PC.i162
  %11849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11850 = load i8, i8* %11849, align 1
  %11851 = icmp ne i8 %11850, 0
  %11852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11853 = load i8, i8* %11852, align 1
  %11854 = icmp ne i8 %11853, 0
  %11855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11856 = load i8, i8* %11855, align 1
  %11857 = icmp ne i8 %11856, 0
  %11858 = xor i1 %11854, %11857
  %11859 = or i1 %11851, %11858
  %11860 = zext i1 %11859 to i8
  store i8 %11860, i8* %BRANCH_TAKEN, align 1
  %11861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11862 = select i1 %11859, i64 %11844, i64 %11846
  store i64 %11862, i64* %11861, align 8
  store %struct.Memory* %loadMem_40fd1c, %struct.Memory** %MEMORY
  %loadBr_40fd1c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fd1c = icmp eq i8 %loadBr_40fd1c, 1
  br i1 %cmpBr_40fd1c, label %block_.L_40fd2f, label %block_40fd22

block_40fd22:                                     ; preds = %block_.L_40fd02
  %loadMem_40fd22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11864 = getelementptr inbounds %struct.GPR, %struct.GPR* %11863, i32 0, i32 33
  %11865 = getelementptr inbounds %struct.Reg, %struct.Reg* %11864, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %11865 to i64*
  %11866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11867 = getelementptr inbounds %struct.GPR, %struct.GPR* %11866, i32 0, i32 1
  %11868 = getelementptr inbounds %struct.Reg, %struct.Reg* %11867, i32 0, i32 0
  %EAX.i160 = bitcast %union.anon* %11868 to i32*
  %11869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11870 = getelementptr inbounds %struct.GPR, %struct.GPR* %11869, i32 0, i32 1
  %11871 = getelementptr inbounds %struct.Reg, %struct.Reg* %11870, i32 0, i32 0
  %RAX.i161 = bitcast %union.anon* %11871 to i64*
  %11872 = load i64, i64* %RAX.i161
  %11873 = load i32, i32* %EAX.i160
  %11874 = zext i32 %11873 to i64
  %11875 = load i64, i64* %PC.i159
  %11876 = add i64 %11875, 2
  store i64 %11876, i64* %PC.i159
  %11877 = xor i64 %11874, %11872
  %11878 = trunc i64 %11877 to i32
  %11879 = and i64 %11877, 4294967295
  store i64 %11879, i64* %RAX.i161, align 8
  %11880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11880, align 1
  %11881 = and i32 %11878, 255
  %11882 = call i32 @llvm.ctpop.i32(i32 %11881)
  %11883 = trunc i32 %11882 to i8
  %11884 = and i8 %11883, 1
  %11885 = xor i8 %11884, 1
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11885, i8* %11886, align 1
  %11887 = icmp eq i32 %11878, 0
  %11888 = zext i1 %11887 to i8
  %11889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11888, i8* %11889, align 1
  %11890 = lshr i32 %11878, 31
  %11891 = trunc i32 %11890 to i8
  %11892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11891, i8* %11892, align 1
  %11893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11893, align 1
  %11894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11894, align 1
  store %struct.Memory* %loadMem_40fd22, %struct.Memory** %MEMORY
  %loadMem_40fd24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11896 = getelementptr inbounds %struct.GPR, %struct.GPR* %11895, i32 0, i32 33
  %11897 = getelementptr inbounds %struct.Reg, %struct.Reg* %11896, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %11897 to i64*
  %11898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11899 = getelementptr inbounds %struct.GPR, %struct.GPR* %11898, i32 0, i32 1
  %11900 = getelementptr inbounds %struct.Reg, %struct.Reg* %11899, i32 0, i32 0
  %EAX.i157 = bitcast %union.anon* %11900 to i32*
  %11901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11902 = getelementptr inbounds %struct.GPR, %struct.GPR* %11901, i32 0, i32 15
  %11903 = getelementptr inbounds %struct.Reg, %struct.Reg* %11902, i32 0, i32 0
  %RBP.i158 = bitcast %union.anon* %11903 to i64*
  %11904 = load i64, i64* %RBP.i158
  %11905 = sub i64 %11904, 216
  %11906 = load i32, i32* %EAX.i157
  %11907 = zext i32 %11906 to i64
  %11908 = load i64, i64* %PC.i156
  %11909 = add i64 %11908, 6
  store i64 %11909, i64* %PC.i156
  %11910 = inttoptr i64 %11905 to i32*
  store i32 %11906, i32* %11910
  store %struct.Memory* %loadMem_40fd24, %struct.Memory** %MEMORY
  %loadMem_40fd2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11912 = getelementptr inbounds %struct.GPR, %struct.GPR* %11911, i32 0, i32 33
  %11913 = getelementptr inbounds %struct.Reg, %struct.Reg* %11912, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %11913 to i64*
  %11914 = load i64, i64* %PC.i155
  %11915 = add i64 %11914, 33
  %11916 = load i64, i64* %PC.i155
  %11917 = add i64 %11916, 5
  store i64 %11917, i64* %PC.i155
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11915, i64* %11918, align 8
  store %struct.Memory* %loadMem_40fd2a, %struct.Memory** %MEMORY
  br label %block_.L_40fd4b

block_.L_40fd2f:                                  ; preds = %block_.L_40fd02
  %loadMem_40fd2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11920 = getelementptr inbounds %struct.GPR, %struct.GPR* %11919, i32 0, i32 33
  %11921 = getelementptr inbounds %struct.Reg, %struct.Reg* %11920, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %11921 to i64*
  %11922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11923 = getelementptr inbounds %struct.GPR, %struct.GPR* %11922, i32 0, i32 1
  %11924 = getelementptr inbounds %struct.Reg, %struct.Reg* %11923, i32 0, i32 0
  %RAX.i153 = bitcast %union.anon* %11924 to i64*
  %11925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11926 = getelementptr inbounds %struct.GPR, %struct.GPR* %11925, i32 0, i32 15
  %11927 = getelementptr inbounds %struct.Reg, %struct.Reg* %11926, i32 0, i32 0
  %RBP.i154 = bitcast %union.anon* %11927 to i64*
  %11928 = load i64, i64* %RBP.i154
  %11929 = sub i64 %11928, 16
  %11930 = load i64, i64* %PC.i152
  %11931 = add i64 %11930, 4
  store i64 %11931, i64* %PC.i152
  %11932 = inttoptr i64 %11929 to i32*
  %11933 = load i32, i32* %11932
  %11934 = sext i32 %11933 to i64
  store i64 %11934, i64* %RAX.i153, align 8
  store %struct.Memory* %loadMem_40fd2f, %struct.Memory** %MEMORY
  %loadMem_40fd33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11936 = getelementptr inbounds %struct.GPR, %struct.GPR* %11935, i32 0, i32 33
  %11937 = getelementptr inbounds %struct.Reg, %struct.Reg* %11936, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %11937 to i64*
  %11938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11939 = getelementptr inbounds %struct.GPR, %struct.GPR* %11938, i32 0, i32 1
  %11940 = getelementptr inbounds %struct.Reg, %struct.Reg* %11939, i32 0, i32 0
  %RAX.i149 = bitcast %union.anon* %11940 to i64*
  %11941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11942 = getelementptr inbounds %struct.GPR, %struct.GPR* %11941, i32 0, i32 5
  %11943 = getelementptr inbounds %struct.Reg, %struct.Reg* %11942, i32 0, i32 0
  %RCX.i150 = bitcast %union.anon* %11943 to i64*
  %11944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11945 = getelementptr inbounds %struct.GPR, %struct.GPR* %11944, i32 0, i32 15
  %11946 = getelementptr inbounds %struct.Reg, %struct.Reg* %11945, i32 0, i32 0
  %RBP.i151 = bitcast %union.anon* %11946 to i64*
  %11947 = load i64, i64* %RBP.i151
  %11948 = load i64, i64* %RAX.i149
  %11949 = mul i64 %11948, 4
  %11950 = add i64 %11947, -64
  %11951 = add i64 %11950, %11949
  %11952 = load i64, i64* %PC.i148
  %11953 = add i64 %11952, 4
  store i64 %11953, i64* %PC.i148
  %11954 = inttoptr i64 %11951 to i32*
  %11955 = load i32, i32* %11954
  %11956 = zext i32 %11955 to i64
  store i64 %11956, i64* %RCX.i150, align 8
  store %struct.Memory* %loadMem_40fd33, %struct.Memory** %MEMORY
  %loadMem_40fd37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11958 = getelementptr inbounds %struct.GPR, %struct.GPR* %11957, i32 0, i32 33
  %11959 = getelementptr inbounds %struct.Reg, %struct.Reg* %11958, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %11959 to i64*
  %11960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11961 = getelementptr inbounds %struct.GPR, %struct.GPR* %11960, i32 0, i32 1
  %11962 = getelementptr inbounds %struct.Reg, %struct.Reg* %11961, i32 0, i32 0
  %RAX.i146 = bitcast %union.anon* %11962 to i64*
  %11963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11964 = getelementptr inbounds %struct.GPR, %struct.GPR* %11963, i32 0, i32 15
  %11965 = getelementptr inbounds %struct.Reg, %struct.Reg* %11964, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %11965 to i64*
  %11966 = load i64, i64* %RBP.i147
  %11967 = sub i64 %11966, 24
  %11968 = load i64, i64* %PC.i145
  %11969 = add i64 %11968, 4
  store i64 %11969, i64* %PC.i145
  %11970 = inttoptr i64 %11967 to i32*
  %11971 = load i32, i32* %11970
  %11972 = sext i32 %11971 to i64
  store i64 %11972, i64* %RAX.i146, align 8
  store %struct.Memory* %loadMem_40fd37, %struct.Memory** %MEMORY
  %loadMem_40fd3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11974 = getelementptr inbounds %struct.GPR, %struct.GPR* %11973, i32 0, i32 33
  %11975 = getelementptr inbounds %struct.Reg, %struct.Reg* %11974, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %11975 to i64*
  %11976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11977 = getelementptr inbounds %struct.GPR, %struct.GPR* %11976, i32 0, i32 1
  %11978 = getelementptr inbounds %struct.Reg, %struct.Reg* %11977, i32 0, i32 0
  %RAX.i142 = bitcast %union.anon* %11978 to i64*
  %11979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11980 = getelementptr inbounds %struct.GPR, %struct.GPR* %11979, i32 0, i32 5
  %11981 = getelementptr inbounds %struct.Reg, %struct.Reg* %11980, i32 0, i32 0
  %RCX.i143 = bitcast %union.anon* %11981 to i64*
  %11982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11983 = getelementptr inbounds %struct.GPR, %struct.GPR* %11982, i32 0, i32 15
  %11984 = getelementptr inbounds %struct.Reg, %struct.Reg* %11983, i32 0, i32 0
  %RBP.i144 = bitcast %union.anon* %11984 to i64*
  %11985 = load i64, i64* %RCX.i143
  %11986 = load i64, i64* %RBP.i144
  %11987 = load i64, i64* %RAX.i142
  %11988 = mul i64 %11987, 4
  %11989 = add i64 %11986, -64
  %11990 = add i64 %11989, %11988
  %11991 = load i64, i64* %PC.i141
  %11992 = add i64 %11991, 4
  store i64 %11992, i64* %PC.i141
  %11993 = trunc i64 %11985 to i32
  %11994 = inttoptr i64 %11990 to i32*
  %11995 = load i32, i32* %11994
  %11996 = sub i32 %11993, %11995
  %11997 = zext i32 %11996 to i64
  store i64 %11997, i64* %RCX.i143, align 8
  %11998 = icmp ult i32 %11993, %11995
  %11999 = zext i1 %11998 to i8
  %12000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11999, i8* %12000, align 1
  %12001 = and i32 %11996, 255
  %12002 = call i32 @llvm.ctpop.i32(i32 %12001)
  %12003 = trunc i32 %12002 to i8
  %12004 = and i8 %12003, 1
  %12005 = xor i8 %12004, 1
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12005, i8* %12006, align 1
  %12007 = xor i32 %11995, %11993
  %12008 = xor i32 %12007, %11996
  %12009 = lshr i32 %12008, 4
  %12010 = trunc i32 %12009 to i8
  %12011 = and i8 %12010, 1
  %12012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12011, i8* %12012, align 1
  %12013 = icmp eq i32 %11996, 0
  %12014 = zext i1 %12013 to i8
  %12015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12014, i8* %12015, align 1
  %12016 = lshr i32 %11996, 31
  %12017 = trunc i32 %12016 to i8
  %12018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12017, i8* %12018, align 1
  %12019 = lshr i32 %11993, 31
  %12020 = lshr i32 %11995, 31
  %12021 = xor i32 %12020, %12019
  %12022 = xor i32 %12016, %12019
  %12023 = add i32 %12022, %12021
  %12024 = icmp eq i32 %12023, 2
  %12025 = zext i1 %12024 to i8
  %12026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12025, i8* %12026, align 1
  store %struct.Memory* %loadMem_40fd3b, %struct.Memory** %MEMORY
  %loadMem_40fd3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12028 = getelementptr inbounds %struct.GPR, %struct.GPR* %12027, i32 0, i32 33
  %12029 = getelementptr inbounds %struct.Reg, %struct.Reg* %12028, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %12029 to i64*
  %12030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12031 = getelementptr inbounds %struct.GPR, %struct.GPR* %12030, i32 0, i32 5
  %12032 = getelementptr inbounds %struct.Reg, %struct.Reg* %12031, i32 0, i32 0
  %RCX.i140 = bitcast %union.anon* %12032 to i64*
  %12033 = load i64, i64* %RCX.i140
  %12034 = load i64, i64* %PC.i139
  %12035 = add i64 %12034, 3
  store i64 %12035, i64* %PC.i139
  %12036 = trunc i64 %12033 to i32
  %12037 = add i32 32, %12036
  %12038 = zext i32 %12037 to i64
  store i64 %12038, i64* %RCX.i140, align 8
  %12039 = icmp ult i32 %12037, %12036
  %12040 = icmp ult i32 %12037, 32
  %12041 = or i1 %12039, %12040
  %12042 = zext i1 %12041 to i8
  %12043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12042, i8* %12043, align 1
  %12044 = and i32 %12037, 255
  %12045 = call i32 @llvm.ctpop.i32(i32 %12044)
  %12046 = trunc i32 %12045 to i8
  %12047 = and i8 %12046, 1
  %12048 = xor i8 %12047, 1
  %12049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12048, i8* %12049, align 1
  %12050 = xor i64 32, %12033
  %12051 = trunc i64 %12050 to i32
  %12052 = xor i32 %12051, %12037
  %12053 = lshr i32 %12052, 4
  %12054 = trunc i32 %12053 to i8
  %12055 = and i8 %12054, 1
  %12056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12055, i8* %12056, align 1
  %12057 = icmp eq i32 %12037, 0
  %12058 = zext i1 %12057 to i8
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12058, i8* %12059, align 1
  %12060 = lshr i32 %12037, 31
  %12061 = trunc i32 %12060 to i8
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12061, i8* %12062, align 1
  %12063 = lshr i32 %12036, 31
  %12064 = xor i32 %12060, %12063
  %12065 = add i32 %12064, %12060
  %12066 = icmp eq i32 %12065, 2
  %12067 = zext i1 %12066 to i8
  %12068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12067, i8* %12068, align 1
  store %struct.Memory* %loadMem_40fd3f, %struct.Memory** %MEMORY
  %loadMem_40fd42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12070 = getelementptr inbounds %struct.GPR, %struct.GPR* %12069, i32 0, i32 33
  %12071 = getelementptr inbounds %struct.Reg, %struct.Reg* %12070, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %12071 to i64*
  %12072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12073 = getelementptr inbounds %struct.GPR, %struct.GPR* %12072, i32 0, i32 5
  %12074 = getelementptr inbounds %struct.Reg, %struct.Reg* %12073, i32 0, i32 0
  %RCX.i138 = bitcast %union.anon* %12074 to i64*
  %12075 = load i64, i64* %RCX.i138
  %12076 = load i64, i64* %PC.i137
  %12077 = add i64 %12076, 3
  store i64 %12077, i64* %PC.i137
  %12078 = shl i64 %12075, 32
  %12079 = ashr exact i64 %12078, 32
  %12080 = ashr i64 %12079, 5
  %12081 = lshr i64 %12080, 1
  %12082 = trunc i64 %12080 to i8
  %12083 = and i8 %12082, 1
  %12084 = trunc i64 %12081 to i32
  %12085 = and i64 %12081, 4294967295
  store i64 %12085, i64* %RCX.i138, align 8
  %12086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12083, i8* %12086, align 1
  %12087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12088 = and i32 %12084, 255
  %12089 = call i32 @llvm.ctpop.i32(i32 %12088)
  %12090 = trunc i32 %12089 to i8
  %12091 = and i8 %12090, 1
  %12092 = xor i8 %12091, 1
  store i8 %12092, i8* %12087, align 1
  %12093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12093, align 1
  %12094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12095 = icmp eq i32 %12084, 0
  %12096 = zext i1 %12095 to i8
  store i8 %12096, i8* %12094, align 1
  %12097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12098 = lshr i32 %12084, 31
  %12099 = trunc i32 %12098 to i8
  store i8 %12099, i8* %12097, align 1
  %12100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12100, align 1
  store %struct.Memory* %loadMem_40fd42, %struct.Memory** %MEMORY
  %loadMem_40fd45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12102 = getelementptr inbounds %struct.GPR, %struct.GPR* %12101, i32 0, i32 33
  %12103 = getelementptr inbounds %struct.Reg, %struct.Reg* %12102, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %12103 to i64*
  %12104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12105 = getelementptr inbounds %struct.GPR, %struct.GPR* %12104, i32 0, i32 5
  %12106 = getelementptr inbounds %struct.Reg, %struct.Reg* %12105, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %12106 to i32*
  %12107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12108 = getelementptr inbounds %struct.GPR, %struct.GPR* %12107, i32 0, i32 15
  %12109 = getelementptr inbounds %struct.Reg, %struct.Reg* %12108, i32 0, i32 0
  %RBP.i136 = bitcast %union.anon* %12109 to i64*
  %12110 = load i64, i64* %RBP.i136
  %12111 = sub i64 %12110, 216
  %12112 = load i32, i32* %ECX.i
  %12113 = zext i32 %12112 to i64
  %12114 = load i64, i64* %PC.i135
  %12115 = add i64 %12114, 6
  store i64 %12115, i64* %PC.i135
  %12116 = inttoptr i64 %12111 to i32*
  store i32 %12112, i32* %12116
  store %struct.Memory* %loadMem_40fd45, %struct.Memory** %MEMORY
  br label %block_.L_40fd4b

block_.L_40fd4b:                                  ; preds = %block_.L_40fd2f, %block_40fd22
  %loadMem_40fd4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12118 = getelementptr inbounds %struct.GPR, %struct.GPR* %12117, i32 0, i32 33
  %12119 = getelementptr inbounds %struct.Reg, %struct.Reg* %12118, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %12119 to i64*
  %12120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12121 = getelementptr inbounds %struct.GPR, %struct.GPR* %12120, i32 0, i32 1
  %12122 = getelementptr inbounds %struct.Reg, %struct.Reg* %12121, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %12122 to i64*
  %12123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12124 = getelementptr inbounds %struct.GPR, %struct.GPR* %12123, i32 0, i32 15
  %12125 = getelementptr inbounds %struct.Reg, %struct.Reg* %12124, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %12125 to i64*
  %12126 = load i64, i64* %RBP.i134
  %12127 = sub i64 %12126, 216
  %12128 = load i64, i64* %PC.i132
  %12129 = add i64 %12128, 6
  store i64 %12129, i64* %PC.i132
  %12130 = inttoptr i64 %12127 to i32*
  %12131 = load i32, i32* %12130
  %12132 = zext i32 %12131 to i64
  store i64 %12132, i64* %RAX.i133, align 8
  store %struct.Memory* %loadMem_40fd4b, %struct.Memory** %MEMORY
  %loadMem_40fd51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12134 = getelementptr inbounds %struct.GPR, %struct.GPR* %12133, i32 0, i32 33
  %12135 = getelementptr inbounds %struct.Reg, %struct.Reg* %12134, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %12135 to i64*
  %12136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12137 = getelementptr inbounds %struct.GPR, %struct.GPR* %12136, i32 0, i32 1
  %12138 = getelementptr inbounds %struct.Reg, %struct.Reg* %12137, i32 0, i32 0
  %EAX.i130 = bitcast %union.anon* %12138 to i32*
  %12139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12140 = getelementptr inbounds %struct.GPR, %struct.GPR* %12139, i32 0, i32 15
  %12141 = getelementptr inbounds %struct.Reg, %struct.Reg* %12140, i32 0, i32 0
  %RBP.i131 = bitcast %union.anon* %12141 to i64*
  %12142 = load i64, i64* %RBP.i131
  %12143 = sub i64 %12142, 212
  %12144 = load i32, i32* %EAX.i130
  %12145 = zext i32 %12144 to i64
  %12146 = load i64, i64* %PC.i129
  %12147 = add i64 %12146, 6
  store i64 %12147, i64* %PC.i129
  %12148 = inttoptr i64 %12143 to i32*
  store i32 %12144, i32* %12148
  store %struct.Memory* %loadMem_40fd51, %struct.Memory** %MEMORY
  br label %block_.L_40fd57

block_.L_40fd57:                                  ; preds = %block_.L_40fd4b, %block_40fce9
  %loadMem_40fd57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12150 = getelementptr inbounds %struct.GPR, %struct.GPR* %12149, i32 0, i32 33
  %12151 = getelementptr inbounds %struct.Reg, %struct.Reg* %12150, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %12151 to i64*
  %12152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12153 = getelementptr inbounds %struct.GPR, %struct.GPR* %12152, i32 0, i32 1
  %12154 = getelementptr inbounds %struct.Reg, %struct.Reg* %12153, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %12154 to i64*
  %12155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12156 = getelementptr inbounds %struct.GPR, %struct.GPR* %12155, i32 0, i32 15
  %12157 = getelementptr inbounds %struct.Reg, %struct.Reg* %12156, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %12157 to i64*
  %12158 = load i64, i64* %RBP.i128
  %12159 = sub i64 %12158, 212
  %12160 = load i64, i64* %PC.i126
  %12161 = add i64 %12160, 6
  store i64 %12161, i64* %PC.i126
  %12162 = inttoptr i64 %12159 to i32*
  %12163 = load i32, i32* %12162
  %12164 = zext i32 %12163 to i64
  store i64 %12164, i64* %RAX.i127, align 8
  store %struct.Memory* %loadMem_40fd57, %struct.Memory** %MEMORY
  %loadMem_40fd5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12166 = getelementptr inbounds %struct.GPR, %struct.GPR* %12165, i32 0, i32 33
  %12167 = getelementptr inbounds %struct.Reg, %struct.Reg* %12166, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %12167 to i64*
  %12168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12169 = getelementptr inbounds %struct.GPR, %struct.GPR* %12168, i32 0, i32 5
  %12170 = getelementptr inbounds %struct.Reg, %struct.Reg* %12169, i32 0, i32 0
  %RCX.i125 = bitcast %union.anon* %12170 to i64*
  %12171 = load i64, i64* %PC.i124
  %12172 = add i64 %12171, 8
  store i64 %12172, i64* %PC.i124
  %12173 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12173, i64* %RCX.i125, align 8
  store %struct.Memory* %loadMem_40fd5d, %struct.Memory** %MEMORY
  %loadMem_40fd65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12175 = getelementptr inbounds %struct.GPR, %struct.GPR* %12174, i32 0, i32 33
  %12176 = getelementptr inbounds %struct.Reg, %struct.Reg* %12175, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %12176 to i64*
  %12177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12178 = getelementptr inbounds %struct.GPR, %struct.GPR* %12177, i32 0, i32 5
  %12179 = getelementptr inbounds %struct.Reg, %struct.Reg* %12178, i32 0, i32 0
  %RCX.i123 = bitcast %union.anon* %12179 to i64*
  %12180 = load i64, i64* %RCX.i123
  %12181 = load i64, i64* %PC.i122
  %12182 = add i64 %12181, 7
  store i64 %12182, i64* %PC.i122
  %12183 = add i64 13112, %12180
  store i64 %12183, i64* %RCX.i123, align 8
  %12184 = icmp ult i64 %12183, %12180
  %12185 = icmp ult i64 %12183, 13112
  %12186 = or i1 %12184, %12185
  %12187 = zext i1 %12186 to i8
  %12188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12187, i8* %12188, align 1
  %12189 = trunc i64 %12183 to i32
  %12190 = and i32 %12189, 255
  %12191 = call i32 @llvm.ctpop.i32(i32 %12190)
  %12192 = trunc i32 %12191 to i8
  %12193 = and i8 %12192, 1
  %12194 = xor i8 %12193, 1
  %12195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12194, i8* %12195, align 1
  %12196 = xor i64 13112, %12180
  %12197 = xor i64 %12196, %12183
  %12198 = lshr i64 %12197, 4
  %12199 = trunc i64 %12198 to i8
  %12200 = and i8 %12199, 1
  %12201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12200, i8* %12201, align 1
  %12202 = icmp eq i64 %12183, 0
  %12203 = zext i1 %12202 to i8
  %12204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12203, i8* %12204, align 1
  %12205 = lshr i64 %12183, 63
  %12206 = trunc i64 %12205 to i8
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12206, i8* %12207, align 1
  %12208 = lshr i64 %12180, 63
  %12209 = xor i64 %12205, %12208
  %12210 = add i64 %12209, %12205
  %12211 = icmp eq i64 %12210, 2
  %12212 = zext i1 %12211 to i8
  %12213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12212, i8* %12213, align 1
  store %struct.Memory* %loadMem_40fd65, %struct.Memory** %MEMORY
  %loadMem_40fd6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12215 = getelementptr inbounds %struct.GPR, %struct.GPR* %12214, i32 0, i32 33
  %12216 = getelementptr inbounds %struct.Reg, %struct.Reg* %12215, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %12216 to i64*
  %12217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12218 = getelementptr inbounds %struct.GPR, %struct.GPR* %12217, i32 0, i32 7
  %12219 = getelementptr inbounds %struct.Reg, %struct.Reg* %12218, i32 0, i32 0
  %RDX.i120 = bitcast %union.anon* %12219 to i64*
  %12220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12221 = getelementptr inbounds %struct.GPR, %struct.GPR* %12220, i32 0, i32 15
  %12222 = getelementptr inbounds %struct.Reg, %struct.Reg* %12221, i32 0, i32 0
  %RBP.i121 = bitcast %union.anon* %12222 to i64*
  %12223 = load i64, i64* %RBP.i121
  %12224 = sub i64 %12223, 12
  %12225 = load i64, i64* %PC.i119
  %12226 = add i64 %12225, 4
  store i64 %12226, i64* %PC.i119
  %12227 = inttoptr i64 %12224 to i32*
  %12228 = load i32, i32* %12227
  %12229 = sext i32 %12228 to i64
  store i64 %12229, i64* %RDX.i120, align 8
  store %struct.Memory* %loadMem_40fd6c, %struct.Memory** %MEMORY
  %loadMem_40fd70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12231 = getelementptr inbounds %struct.GPR, %struct.GPR* %12230, i32 0, i32 33
  %12232 = getelementptr inbounds %struct.Reg, %struct.Reg* %12231, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %12232 to i64*
  %12233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12234 = getelementptr inbounds %struct.GPR, %struct.GPR* %12233, i32 0, i32 7
  %12235 = getelementptr inbounds %struct.Reg, %struct.Reg* %12234, i32 0, i32 0
  %RDX.i118 = bitcast %union.anon* %12235 to i64*
  %12236 = load i64, i64* %RDX.i118
  %12237 = load i64, i64* %PC.i117
  %12238 = add i64 %12237, 4
  store i64 %12238, i64* %PC.i117
  %12239 = shl i64 %12236, 5
  %12240 = icmp slt i64 %12239, 0
  %12241 = shl i64 %12239, 1
  store i64 %12241, i64* %RDX.i118, align 8
  %12242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12243 = zext i1 %12240 to i8
  store i8 %12243, i8* %12242, align 1
  %12244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12245 = trunc i64 %12241 to i32
  %12246 = and i32 %12245, 254
  %12247 = call i32 @llvm.ctpop.i32(i32 %12246)
  %12248 = trunc i32 %12247 to i8
  %12249 = and i8 %12248, 1
  %12250 = xor i8 %12249, 1
  store i8 %12250, i8* %12244, align 1
  %12251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12251, align 1
  %12252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12253 = icmp eq i64 %12241, 0
  %12254 = zext i1 %12253 to i8
  store i8 %12254, i8* %12252, align 1
  %12255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12256 = lshr i64 %12241, 63
  %12257 = trunc i64 %12256 to i8
  store i8 %12257, i8* %12255, align 1
  %12258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12258, align 1
  store %struct.Memory* %loadMem_40fd70, %struct.Memory** %MEMORY
  %loadMem_40fd74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12260 = getelementptr inbounds %struct.GPR, %struct.GPR* %12259, i32 0, i32 33
  %12261 = getelementptr inbounds %struct.Reg, %struct.Reg* %12260, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %12261 to i64*
  %12262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12263 = getelementptr inbounds %struct.GPR, %struct.GPR* %12262, i32 0, i32 5
  %12264 = getelementptr inbounds %struct.Reg, %struct.Reg* %12263, i32 0, i32 0
  %RCX.i115 = bitcast %union.anon* %12264 to i64*
  %12265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12266 = getelementptr inbounds %struct.GPR, %struct.GPR* %12265, i32 0, i32 7
  %12267 = getelementptr inbounds %struct.Reg, %struct.Reg* %12266, i32 0, i32 0
  %RDX.i116 = bitcast %union.anon* %12267 to i64*
  %12268 = load i64, i64* %RCX.i115
  %12269 = load i64, i64* %RDX.i116
  %12270 = load i64, i64* %PC.i114
  %12271 = add i64 %12270, 3
  store i64 %12271, i64* %PC.i114
  %12272 = add i64 %12269, %12268
  store i64 %12272, i64* %RCX.i115, align 8
  %12273 = icmp ult i64 %12272, %12268
  %12274 = icmp ult i64 %12272, %12269
  %12275 = or i1 %12273, %12274
  %12276 = zext i1 %12275 to i8
  %12277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12276, i8* %12277, align 1
  %12278 = trunc i64 %12272 to i32
  %12279 = and i32 %12278, 255
  %12280 = call i32 @llvm.ctpop.i32(i32 %12279)
  %12281 = trunc i32 %12280 to i8
  %12282 = and i8 %12281, 1
  %12283 = xor i8 %12282, 1
  %12284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12283, i8* %12284, align 1
  %12285 = xor i64 %12269, %12268
  %12286 = xor i64 %12285, %12272
  %12287 = lshr i64 %12286, 4
  %12288 = trunc i64 %12287 to i8
  %12289 = and i8 %12288, 1
  %12290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12289, i8* %12290, align 1
  %12291 = icmp eq i64 %12272, 0
  %12292 = zext i1 %12291 to i8
  %12293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12292, i8* %12293, align 1
  %12294 = lshr i64 %12272, 63
  %12295 = trunc i64 %12294 to i8
  %12296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12295, i8* %12296, align 1
  %12297 = lshr i64 %12268, 63
  %12298 = lshr i64 %12269, 63
  %12299 = xor i64 %12294, %12297
  %12300 = xor i64 %12294, %12298
  %12301 = add i64 %12299, %12300
  %12302 = icmp eq i64 %12301, 2
  %12303 = zext i1 %12302 to i8
  %12304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12303, i8* %12304, align 1
  store %struct.Memory* %loadMem_40fd74, %struct.Memory** %MEMORY
  %loadMem_40fd77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12306 = getelementptr inbounds %struct.GPR, %struct.GPR* %12305, i32 0, i32 33
  %12307 = getelementptr inbounds %struct.Reg, %struct.Reg* %12306, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %12307 to i64*
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12309 = getelementptr inbounds %struct.GPR, %struct.GPR* %12308, i32 0, i32 7
  %12310 = getelementptr inbounds %struct.Reg, %struct.Reg* %12309, i32 0, i32 0
  %RDX.i112 = bitcast %union.anon* %12310 to i64*
  %12311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12312 = getelementptr inbounds %struct.GPR, %struct.GPR* %12311, i32 0, i32 15
  %12313 = getelementptr inbounds %struct.Reg, %struct.Reg* %12312, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %12313 to i64*
  %12314 = load i64, i64* %RBP.i113
  %12315 = sub i64 %12314, 24
  %12316 = load i64, i64* %PC.i111
  %12317 = add i64 %12316, 4
  store i64 %12317, i64* %PC.i111
  %12318 = inttoptr i64 %12315 to i32*
  %12319 = load i32, i32* %12318
  %12320 = sext i32 %12319 to i64
  store i64 %12320, i64* %RDX.i112, align 8
  store %struct.Memory* %loadMem_40fd77, %struct.Memory** %MEMORY
  %loadMem_40fd7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12322 = getelementptr inbounds %struct.GPR, %struct.GPR* %12321, i32 0, i32 33
  %12323 = getelementptr inbounds %struct.Reg, %struct.Reg* %12322, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %12323 to i64*
  %12324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12325 = getelementptr inbounds %struct.GPR, %struct.GPR* %12324, i32 0, i32 1
  %12326 = getelementptr inbounds %struct.Reg, %struct.Reg* %12325, i32 0, i32 0
  %EAX.i108 = bitcast %union.anon* %12326 to i32*
  %12327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12328 = getelementptr inbounds %struct.GPR, %struct.GPR* %12327, i32 0, i32 5
  %12329 = getelementptr inbounds %struct.Reg, %struct.Reg* %12328, i32 0, i32 0
  %RCX.i109 = bitcast %union.anon* %12329 to i64*
  %12330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12331 = getelementptr inbounds %struct.GPR, %struct.GPR* %12330, i32 0, i32 7
  %12332 = getelementptr inbounds %struct.Reg, %struct.Reg* %12331, i32 0, i32 0
  %RDX.i110 = bitcast %union.anon* %12332 to i64*
  %12333 = load i64, i64* %RCX.i109
  %12334 = load i64, i64* %RDX.i110
  %12335 = mul i64 %12334, 4
  %12336 = add i64 %12335, %12333
  %12337 = load i32, i32* %EAX.i108
  %12338 = zext i32 %12337 to i64
  %12339 = load i64, i64* %PC.i107
  %12340 = add i64 %12339, 3
  store i64 %12340, i64* %PC.i107
  %12341 = inttoptr i64 %12336 to i32*
  store i32 %12337, i32* %12341
  store %struct.Memory* %loadMem_40fd7b, %struct.Memory** %MEMORY
  %loadMem_40fd7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12343 = getelementptr inbounds %struct.GPR, %struct.GPR* %12342, i32 0, i32 33
  %12344 = getelementptr inbounds %struct.Reg, %struct.Reg* %12343, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %12344 to i64*
  %12345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12346 = getelementptr inbounds %struct.GPR, %struct.GPR* %12345, i32 0, i32 1
  %12347 = getelementptr inbounds %struct.Reg, %struct.Reg* %12346, i32 0, i32 0
  %RAX.i105 = bitcast %union.anon* %12347 to i64*
  %12348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12349 = getelementptr inbounds %struct.GPR, %struct.GPR* %12348, i32 0, i32 15
  %12350 = getelementptr inbounds %struct.Reg, %struct.Reg* %12349, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %12350 to i64*
  %12351 = load i64, i64* %RBP.i106
  %12352 = sub i64 %12351, 16
  %12353 = load i64, i64* %PC.i104
  %12354 = add i64 %12353, 3
  store i64 %12354, i64* %PC.i104
  %12355 = inttoptr i64 %12352 to i32*
  %12356 = load i32, i32* %12355
  %12357 = zext i32 %12356 to i64
  store i64 %12357, i64* %RAX.i105, align 8
  store %struct.Memory* %loadMem_40fd7e, %struct.Memory** %MEMORY
  %loadMem_40fd81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12359 = getelementptr inbounds %struct.GPR, %struct.GPR* %12358, i32 0, i32 33
  %12360 = getelementptr inbounds %struct.Reg, %struct.Reg* %12359, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %12360 to i64*
  %12361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12362 = getelementptr inbounds %struct.GPR, %struct.GPR* %12361, i32 0, i32 1
  %12363 = getelementptr inbounds %struct.Reg, %struct.Reg* %12362, i32 0, i32 0
  %RAX.i103 = bitcast %union.anon* %12363 to i64*
  %12364 = load i64, i64* %RAX.i103
  %12365 = load i64, i64* %PC.i102
  %12366 = add i64 %12365, 3
  store i64 %12366, i64* %PC.i102
  %12367 = trunc i64 %12364 to i32
  %12368 = add i32 1, %12367
  %12369 = zext i32 %12368 to i64
  store i64 %12369, i64* %RAX.i103, align 8
  %12370 = icmp ult i32 %12368, %12367
  %12371 = icmp ult i32 %12368, 1
  %12372 = or i1 %12370, %12371
  %12373 = zext i1 %12372 to i8
  %12374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12373, i8* %12374, align 1
  %12375 = and i32 %12368, 255
  %12376 = call i32 @llvm.ctpop.i32(i32 %12375)
  %12377 = trunc i32 %12376 to i8
  %12378 = and i8 %12377, 1
  %12379 = xor i8 %12378, 1
  %12380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12379, i8* %12380, align 1
  %12381 = xor i64 1, %12364
  %12382 = trunc i64 %12381 to i32
  %12383 = xor i32 %12382, %12368
  %12384 = lshr i32 %12383, 4
  %12385 = trunc i32 %12384 to i8
  %12386 = and i8 %12385, 1
  %12387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12386, i8* %12387, align 1
  %12388 = icmp eq i32 %12368, 0
  %12389 = zext i1 %12388 to i8
  %12390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12389, i8* %12390, align 1
  %12391 = lshr i32 %12368, 31
  %12392 = trunc i32 %12391 to i8
  %12393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12392, i8* %12393, align 1
  %12394 = lshr i32 %12367, 31
  %12395 = xor i32 %12391, %12394
  %12396 = add i32 %12395, %12391
  %12397 = icmp eq i32 %12396, 2
  %12398 = zext i1 %12397 to i8
  %12399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12398, i8* %12399, align 1
  store %struct.Memory* %loadMem_40fd81, %struct.Memory** %MEMORY
  %loadMem_40fd84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12401 = getelementptr inbounds %struct.GPR, %struct.GPR* %12400, i32 0, i32 33
  %12402 = getelementptr inbounds %struct.Reg, %struct.Reg* %12401, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %12402 to i64*
  %12403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12404 = getelementptr inbounds %struct.GPR, %struct.GPR* %12403, i32 0, i32 1
  %12405 = getelementptr inbounds %struct.Reg, %struct.Reg* %12404, i32 0, i32 0
  %EAX.i100 = bitcast %union.anon* %12405 to i32*
  %12406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12407 = getelementptr inbounds %struct.GPR, %struct.GPR* %12406, i32 0, i32 15
  %12408 = getelementptr inbounds %struct.Reg, %struct.Reg* %12407, i32 0, i32 0
  %RBP.i101 = bitcast %union.anon* %12408 to i64*
  %12409 = load i64, i64* %RBP.i101
  %12410 = sub i64 %12409, 16
  %12411 = load i32, i32* %EAX.i100
  %12412 = zext i32 %12411 to i64
  %12413 = load i64, i64* %PC.i99
  %12414 = add i64 %12413, 3
  store i64 %12414, i64* %PC.i99
  %12415 = inttoptr i64 %12410 to i32*
  store i32 %12411, i32* %12415
  store %struct.Memory* %loadMem_40fd84, %struct.Memory** %MEMORY
  %loadMem_40fd87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12417 = getelementptr inbounds %struct.GPR, %struct.GPR* %12416, i32 0, i32 33
  %12418 = getelementptr inbounds %struct.Reg, %struct.Reg* %12417, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %12418 to i64*
  %12419 = load i64, i64* %PC.i98
  %12420 = add i64 %12419, -554
  %12421 = load i64, i64* %PC.i98
  %12422 = add i64 %12421, 5
  store i64 %12422, i64* %PC.i98
  %12423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12420, i64* %12423, align 8
  store %struct.Memory* %loadMem_40fd87, %struct.Memory** %MEMORY
  br label %block_.L_40fb5d

block_.L_40fd8c:                                  ; preds = %block_.L_40fb5d
  %loadMem_40fd8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12425 = getelementptr inbounds %struct.GPR, %struct.GPR* %12424, i32 0, i32 33
  %12426 = getelementptr inbounds %struct.Reg, %struct.Reg* %12425, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %12426 to i64*
  %12427 = load i64, i64* %PC.i97
  %12428 = add i64 %12427, 5
  %12429 = load i64, i64* %PC.i97
  %12430 = add i64 %12429, 5
  store i64 %12430, i64* %PC.i97
  %12431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12428, i64* %12431, align 8
  store %struct.Memory* %loadMem_40fd8c, %struct.Memory** %MEMORY
  br label %block_.L_40fd91

block_.L_40fd91:                                  ; preds = %block_.L_40fd8c
  %loadMem_40fd91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12433 = getelementptr inbounds %struct.GPR, %struct.GPR* %12432, i32 0, i32 33
  %12434 = getelementptr inbounds %struct.Reg, %struct.Reg* %12433, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %12434 to i64*
  %12435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12436 = getelementptr inbounds %struct.GPR, %struct.GPR* %12435, i32 0, i32 1
  %12437 = getelementptr inbounds %struct.Reg, %struct.Reg* %12436, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %12437 to i64*
  %12438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12439 = getelementptr inbounds %struct.GPR, %struct.GPR* %12438, i32 0, i32 15
  %12440 = getelementptr inbounds %struct.Reg, %struct.Reg* %12439, i32 0, i32 0
  %RBP.i96 = bitcast %union.anon* %12440 to i64*
  %12441 = load i64, i64* %RBP.i96
  %12442 = sub i64 %12441, 12
  %12443 = load i64, i64* %PC.i94
  %12444 = add i64 %12443, 3
  store i64 %12444, i64* %PC.i94
  %12445 = inttoptr i64 %12442 to i32*
  %12446 = load i32, i32* %12445
  %12447 = zext i32 %12446 to i64
  store i64 %12447, i64* %RAX.i95, align 8
  store %struct.Memory* %loadMem_40fd91, %struct.Memory** %MEMORY
  %loadMem_40fd94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12449 = getelementptr inbounds %struct.GPR, %struct.GPR* %12448, i32 0, i32 33
  %12450 = getelementptr inbounds %struct.Reg, %struct.Reg* %12449, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %12450 to i64*
  %12451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12452 = getelementptr inbounds %struct.GPR, %struct.GPR* %12451, i32 0, i32 1
  %12453 = getelementptr inbounds %struct.Reg, %struct.Reg* %12452, i32 0, i32 0
  %RAX.i93 = bitcast %union.anon* %12453 to i64*
  %12454 = load i64, i64* %RAX.i93
  %12455 = load i64, i64* %PC.i92
  %12456 = add i64 %12455, 3
  store i64 %12456, i64* %PC.i92
  %12457 = trunc i64 %12454 to i32
  %12458 = add i32 1, %12457
  %12459 = zext i32 %12458 to i64
  store i64 %12459, i64* %RAX.i93, align 8
  %12460 = icmp ult i32 %12458, %12457
  %12461 = icmp ult i32 %12458, 1
  %12462 = or i1 %12460, %12461
  %12463 = zext i1 %12462 to i8
  %12464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12463, i8* %12464, align 1
  %12465 = and i32 %12458, 255
  %12466 = call i32 @llvm.ctpop.i32(i32 %12465)
  %12467 = trunc i32 %12466 to i8
  %12468 = and i8 %12467, 1
  %12469 = xor i8 %12468, 1
  %12470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12469, i8* %12470, align 1
  %12471 = xor i64 1, %12454
  %12472 = trunc i64 %12471 to i32
  %12473 = xor i32 %12472, %12458
  %12474 = lshr i32 %12473, 4
  %12475 = trunc i32 %12474 to i8
  %12476 = and i8 %12475, 1
  %12477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12476, i8* %12477, align 1
  %12478 = icmp eq i32 %12458, 0
  %12479 = zext i1 %12478 to i8
  %12480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12479, i8* %12480, align 1
  %12481 = lshr i32 %12458, 31
  %12482 = trunc i32 %12481 to i8
  %12483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12482, i8* %12483, align 1
  %12484 = lshr i32 %12457, 31
  %12485 = xor i32 %12481, %12484
  %12486 = add i32 %12485, %12481
  %12487 = icmp eq i32 %12486, 2
  %12488 = zext i1 %12487 to i8
  %12489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12488, i8* %12489, align 1
  store %struct.Memory* %loadMem_40fd94, %struct.Memory** %MEMORY
  %loadMem_40fd97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12491 = getelementptr inbounds %struct.GPR, %struct.GPR* %12490, i32 0, i32 33
  %12492 = getelementptr inbounds %struct.Reg, %struct.Reg* %12491, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %12492 to i64*
  %12493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12494 = getelementptr inbounds %struct.GPR, %struct.GPR* %12493, i32 0, i32 1
  %12495 = getelementptr inbounds %struct.Reg, %struct.Reg* %12494, i32 0, i32 0
  %EAX.i90 = bitcast %union.anon* %12495 to i32*
  %12496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12497 = getelementptr inbounds %struct.GPR, %struct.GPR* %12496, i32 0, i32 15
  %12498 = getelementptr inbounds %struct.Reg, %struct.Reg* %12497, i32 0, i32 0
  %RBP.i91 = bitcast %union.anon* %12498 to i64*
  %12499 = load i64, i64* %RBP.i91
  %12500 = sub i64 %12499, 12
  %12501 = load i32, i32* %EAX.i90
  %12502 = zext i32 %12501 to i64
  %12503 = load i64, i64* %PC.i89
  %12504 = add i64 %12503, 3
  store i64 %12504, i64* %PC.i89
  %12505 = inttoptr i64 %12500 to i32*
  store i32 %12501, i32* %12505
  store %struct.Memory* %loadMem_40fd97, %struct.Memory** %MEMORY
  %loadMem_40fd9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12507 = getelementptr inbounds %struct.GPR, %struct.GPR* %12506, i32 0, i32 33
  %12508 = getelementptr inbounds %struct.Reg, %struct.Reg* %12507, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %12508 to i64*
  %12509 = load i64, i64* %PC.i88
  %12510 = add i64 %12509, -705
  %12511 = load i64, i64* %PC.i88
  %12512 = add i64 %12511, 5
  store i64 %12512, i64* %PC.i88
  %12513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12510, i64* %12513, align 8
  store %struct.Memory* %loadMem_40fd9a, %struct.Memory** %MEMORY
  br label %block_.L_40fad9

block_.L_40fd9f:                                  ; preds = %block_.L_40fad9
  %loadMem_40fd9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12515 = getelementptr inbounds %struct.GPR, %struct.GPR* %12514, i32 0, i32 33
  %12516 = getelementptr inbounds %struct.Reg, %struct.Reg* %12515, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %12516 to i64*
  %12517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12518 = getelementptr inbounds %struct.GPR, %struct.GPR* %12517, i32 0, i32 15
  %12519 = getelementptr inbounds %struct.Reg, %struct.Reg* %12518, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %12519 to i64*
  %12520 = load i64, i64* %RBP.i87
  %12521 = sub i64 %12520, 16
  %12522 = load i64, i64* %PC.i86
  %12523 = add i64 %12522, 7
  store i64 %12523, i64* %PC.i86
  %12524 = inttoptr i64 %12521 to i32*
  store i32 0, i32* %12524
  store %struct.Memory* %loadMem_40fd9f, %struct.Memory** %MEMORY
  br label %block_.L_40fda6

block_.L_40fda6:                                  ; preds = %block_.L_40fe3c, %block_.L_40fd9f
  %loadMem_40fda6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12526 = getelementptr inbounds %struct.GPR, %struct.GPR* %12525, i32 0, i32 33
  %12527 = getelementptr inbounds %struct.Reg, %struct.Reg* %12526, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %12527 to i64*
  %12528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12529 = getelementptr inbounds %struct.GPR, %struct.GPR* %12528, i32 0, i32 15
  %12530 = getelementptr inbounds %struct.Reg, %struct.Reg* %12529, i32 0, i32 0
  %RBP.i85 = bitcast %union.anon* %12530 to i64*
  %12531 = load i64, i64* %RBP.i85
  %12532 = sub i64 %12531, 16
  %12533 = load i64, i64* %PC.i84
  %12534 = add i64 %12533, 4
  store i64 %12534, i64* %PC.i84
  %12535 = inttoptr i64 %12532 to i32*
  %12536 = load i32, i32* %12535
  %12537 = sub i32 %12536, 4
  %12538 = icmp ult i32 %12536, 4
  %12539 = zext i1 %12538 to i8
  %12540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12539, i8* %12540, align 1
  %12541 = and i32 %12537, 255
  %12542 = call i32 @llvm.ctpop.i32(i32 %12541)
  %12543 = trunc i32 %12542 to i8
  %12544 = and i8 %12543, 1
  %12545 = xor i8 %12544, 1
  %12546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12545, i8* %12546, align 1
  %12547 = xor i32 %12536, 4
  %12548 = xor i32 %12547, %12537
  %12549 = lshr i32 %12548, 4
  %12550 = trunc i32 %12549 to i8
  %12551 = and i8 %12550, 1
  %12552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12551, i8* %12552, align 1
  %12553 = icmp eq i32 %12537, 0
  %12554 = zext i1 %12553 to i8
  %12555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12554, i8* %12555, align 1
  %12556 = lshr i32 %12537, 31
  %12557 = trunc i32 %12556 to i8
  %12558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12557, i8* %12558, align 1
  %12559 = lshr i32 %12536, 31
  %12560 = xor i32 %12556, %12559
  %12561 = add i32 %12560, %12559
  %12562 = icmp eq i32 %12561, 2
  %12563 = zext i1 %12562 to i8
  %12564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12563, i8* %12564, align 1
  store %struct.Memory* %loadMem_40fda6, %struct.Memory** %MEMORY
  %loadMem_40fdaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12566 = getelementptr inbounds %struct.GPR, %struct.GPR* %12565, i32 0, i32 33
  %12567 = getelementptr inbounds %struct.Reg, %struct.Reg* %12566, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %12567 to i64*
  %12568 = load i64, i64* %PC.i83
  %12569 = add i64 %12568, 160
  %12570 = load i64, i64* %PC.i83
  %12571 = add i64 %12570, 6
  %12572 = load i64, i64* %PC.i83
  %12573 = add i64 %12572, 6
  store i64 %12573, i64* %PC.i83
  %12574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12575 = load i8, i8* %12574, align 1
  %12576 = icmp ne i8 %12575, 0
  %12577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12578 = load i8, i8* %12577, align 1
  %12579 = icmp ne i8 %12578, 0
  %12580 = xor i1 %12576, %12579
  %12581 = xor i1 %12580, true
  %12582 = zext i1 %12581 to i8
  store i8 %12582, i8* %BRANCH_TAKEN, align 1
  %12583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12584 = select i1 %12580, i64 %12571, i64 %12569
  store i64 %12584, i64* %12583, align 8
  store %struct.Memory* %loadMem_40fdaa, %struct.Memory** %MEMORY
  %loadBr_40fdaa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fdaa = icmp eq i8 %loadBr_40fdaa, 1
  br i1 %cmpBr_40fdaa, label %block_.L_40fe4a, label %block_40fdb0

block_40fdb0:                                     ; preds = %block_.L_40fda6
  %loadMem_40fdb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12586 = getelementptr inbounds %struct.GPR, %struct.GPR* %12585, i32 0, i32 33
  %12587 = getelementptr inbounds %struct.Reg, %struct.Reg* %12586, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %12587 to i64*
  %12588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12589 = getelementptr inbounds %struct.GPR, %struct.GPR* %12588, i32 0, i32 15
  %12590 = getelementptr inbounds %struct.Reg, %struct.Reg* %12589, i32 0, i32 0
  %RBP.i82 = bitcast %union.anon* %12590 to i64*
  %12591 = load i64, i64* %RBP.i82
  %12592 = sub i64 %12591, 12
  %12593 = load i64, i64* %PC.i81
  %12594 = add i64 %12593, 7
  store i64 %12594, i64* %PC.i81
  %12595 = inttoptr i64 %12592 to i32*
  store i32 0, i32* %12595
  store %struct.Memory* %loadMem_40fdb0, %struct.Memory** %MEMORY
  br label %block_.L_40fdb7

block_.L_40fdb7:                                  ; preds = %block_40fdc1, %block_40fdb0
  %loadMem_40fdb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12597 = getelementptr inbounds %struct.GPR, %struct.GPR* %12596, i32 0, i32 33
  %12598 = getelementptr inbounds %struct.Reg, %struct.Reg* %12597, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %12598 to i64*
  %12599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12600 = getelementptr inbounds %struct.GPR, %struct.GPR* %12599, i32 0, i32 15
  %12601 = getelementptr inbounds %struct.Reg, %struct.Reg* %12600, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %12601 to i64*
  %12602 = load i64, i64* %RBP.i80
  %12603 = sub i64 %12602, 12
  %12604 = load i64, i64* %PC.i79
  %12605 = add i64 %12604, 4
  store i64 %12605, i64* %PC.i79
  %12606 = inttoptr i64 %12603 to i32*
  %12607 = load i32, i32* %12606
  %12608 = sub i32 %12607, 4
  %12609 = icmp ult i32 %12607, 4
  %12610 = zext i1 %12609 to i8
  %12611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12610, i8* %12611, align 1
  %12612 = and i32 %12608, 255
  %12613 = call i32 @llvm.ctpop.i32(i32 %12612)
  %12614 = trunc i32 %12613 to i8
  %12615 = and i8 %12614, 1
  %12616 = xor i8 %12615, 1
  %12617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12616, i8* %12617, align 1
  %12618 = xor i32 %12607, 4
  %12619 = xor i32 %12618, %12608
  %12620 = lshr i32 %12619, 4
  %12621 = trunc i32 %12620 to i8
  %12622 = and i8 %12621, 1
  %12623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12622, i8* %12623, align 1
  %12624 = icmp eq i32 %12608, 0
  %12625 = zext i1 %12624 to i8
  %12626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12625, i8* %12626, align 1
  %12627 = lshr i32 %12608, 31
  %12628 = trunc i32 %12627 to i8
  %12629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12628, i8* %12629, align 1
  %12630 = lshr i32 %12607, 31
  %12631 = xor i32 %12627, %12630
  %12632 = add i32 %12631, %12630
  %12633 = icmp eq i32 %12632, 2
  %12634 = zext i1 %12633 to i8
  %12635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12634, i8* %12635, align 1
  store %struct.Memory* %loadMem_40fdb7, %struct.Memory** %MEMORY
  %loadMem_40fdbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12637 = getelementptr inbounds %struct.GPR, %struct.GPR* %12636, i32 0, i32 33
  %12638 = getelementptr inbounds %struct.Reg, %struct.Reg* %12637, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %12638 to i64*
  %12639 = load i64, i64* %PC.i78
  %12640 = add i64 %12639, 124
  %12641 = load i64, i64* %PC.i78
  %12642 = add i64 %12641, 6
  %12643 = load i64, i64* %PC.i78
  %12644 = add i64 %12643, 6
  store i64 %12644, i64* %PC.i78
  %12645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12646 = load i8, i8* %12645, align 1
  %12647 = icmp ne i8 %12646, 0
  %12648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12649 = load i8, i8* %12648, align 1
  %12650 = icmp ne i8 %12649, 0
  %12651 = xor i1 %12647, %12650
  %12652 = xor i1 %12651, true
  %12653 = zext i1 %12652 to i8
  store i8 %12653, i8* %BRANCH_TAKEN, align 1
  %12654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12655 = select i1 %12651, i64 %12642, i64 %12640
  store i64 %12655, i64* %12654, align 8
  store %struct.Memory* %loadMem_40fdbb, %struct.Memory** %MEMORY
  %loadBr_40fdbb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40fdbb = icmp eq i8 %loadBr_40fdbb, 1
  br i1 %cmpBr_40fdbb, label %block_.L_40fe37, label %block_40fdc1

block_40fdc1:                                     ; preds = %block_.L_40fdb7
  %loadMem_40fdc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12657 = getelementptr inbounds %struct.GPR, %struct.GPR* %12656, i32 0, i32 33
  %12658 = getelementptr inbounds %struct.Reg, %struct.Reg* %12657, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %12658 to i64*
  %12659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12660 = getelementptr inbounds %struct.GPR, %struct.GPR* %12659, i32 0, i32 1
  %12661 = getelementptr inbounds %struct.Reg, %struct.Reg* %12660, i32 0, i32 0
  %RAX.i77 = bitcast %union.anon* %12661 to i64*
  %12662 = load i64, i64* %PC.i76
  %12663 = add i64 %12662, 8
  store i64 %12663, i64* %PC.i76
  %12664 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12664, i64* %RAX.i77, align 8
  store %struct.Memory* %loadMem_40fdc1, %struct.Memory** %MEMORY
  %loadMem_40fdc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12666 = getelementptr inbounds %struct.GPR, %struct.GPR* %12665, i32 0, i32 33
  %12667 = getelementptr inbounds %struct.Reg, %struct.Reg* %12666, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %12667 to i64*
  %12668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12669 = getelementptr inbounds %struct.GPR, %struct.GPR* %12668, i32 0, i32 1
  %12670 = getelementptr inbounds %struct.Reg, %struct.Reg* %12669, i32 0, i32 0
  %RAX.i75 = bitcast %union.anon* %12670 to i64*
  %12671 = load i64, i64* %RAX.i75
  %12672 = load i64, i64* %PC.i74
  %12673 = add i64 %12672, 6
  store i64 %12673, i64* %PC.i74
  %12674 = add i64 13112, %12671
  store i64 %12674, i64* %RAX.i75, align 8
  %12675 = icmp ult i64 %12674, %12671
  %12676 = icmp ult i64 %12674, 13112
  %12677 = or i1 %12675, %12676
  %12678 = zext i1 %12677 to i8
  %12679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12678, i8* %12679, align 1
  %12680 = trunc i64 %12674 to i32
  %12681 = and i32 %12680, 255
  %12682 = call i32 @llvm.ctpop.i32(i32 %12681)
  %12683 = trunc i32 %12682 to i8
  %12684 = and i8 %12683, 1
  %12685 = xor i8 %12684, 1
  %12686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12685, i8* %12686, align 1
  %12687 = xor i64 13112, %12671
  %12688 = xor i64 %12687, %12674
  %12689 = lshr i64 %12688, 4
  %12690 = trunc i64 %12689 to i8
  %12691 = and i8 %12690, 1
  %12692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12691, i8* %12692, align 1
  %12693 = icmp eq i64 %12674, 0
  %12694 = zext i1 %12693 to i8
  %12695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12694, i8* %12695, align 1
  %12696 = lshr i64 %12674, 63
  %12697 = trunc i64 %12696 to i8
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12697, i8* %12698, align 1
  %12699 = lshr i64 %12671, 63
  %12700 = xor i64 %12696, %12699
  %12701 = add i64 %12700, %12696
  %12702 = icmp eq i64 %12701, 2
  %12703 = zext i1 %12702 to i8
  %12704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12703, i8* %12704, align 1
  store %struct.Memory* %loadMem_40fdc9, %struct.Memory** %MEMORY
  %loadMem_40fdcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12706 = getelementptr inbounds %struct.GPR, %struct.GPR* %12705, i32 0, i32 33
  %12707 = getelementptr inbounds %struct.Reg, %struct.Reg* %12706, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %12707 to i64*
  %12708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12709 = getelementptr inbounds %struct.GPR, %struct.GPR* %12708, i32 0, i32 5
  %12710 = getelementptr inbounds %struct.Reg, %struct.Reg* %12709, i32 0, i32 0
  %RCX.i72 = bitcast %union.anon* %12710 to i64*
  %12711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12712 = getelementptr inbounds %struct.GPR, %struct.GPR* %12711, i32 0, i32 15
  %12713 = getelementptr inbounds %struct.Reg, %struct.Reg* %12712, i32 0, i32 0
  %RBP.i73 = bitcast %union.anon* %12713 to i64*
  %12714 = load i64, i64* %RBP.i73
  %12715 = sub i64 %12714, 12
  %12716 = load i64, i64* %PC.i71
  %12717 = add i64 %12716, 4
  store i64 %12717, i64* %PC.i71
  %12718 = inttoptr i64 %12715 to i32*
  %12719 = load i32, i32* %12718
  %12720 = sext i32 %12719 to i64
  store i64 %12720, i64* %RCX.i72, align 8
  store %struct.Memory* %loadMem_40fdcf, %struct.Memory** %MEMORY
  %loadMem_40fdd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12722 = getelementptr inbounds %struct.GPR, %struct.GPR* %12721, i32 0, i32 33
  %12723 = getelementptr inbounds %struct.Reg, %struct.Reg* %12722, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %12723 to i64*
  %12724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12725 = getelementptr inbounds %struct.GPR, %struct.GPR* %12724, i32 0, i32 5
  %12726 = getelementptr inbounds %struct.Reg, %struct.Reg* %12725, i32 0, i32 0
  %RCX.i70 = bitcast %union.anon* %12726 to i64*
  %12727 = load i64, i64* %RCX.i70
  %12728 = load i64, i64* %PC.i69
  %12729 = add i64 %12728, 4
  store i64 %12729, i64* %PC.i69
  %12730 = shl i64 %12727, 5
  %12731 = icmp slt i64 %12730, 0
  %12732 = shl i64 %12730, 1
  store i64 %12732, i64* %RCX.i70, align 8
  %12733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12734 = zext i1 %12731 to i8
  store i8 %12734, i8* %12733, align 1
  %12735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12736 = trunc i64 %12732 to i32
  %12737 = and i32 %12736, 254
  %12738 = call i32 @llvm.ctpop.i32(i32 %12737)
  %12739 = trunc i32 %12738 to i8
  %12740 = and i8 %12739, 1
  %12741 = xor i8 %12740, 1
  store i8 %12741, i8* %12735, align 1
  %12742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12742, align 1
  %12743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12744 = icmp eq i64 %12732, 0
  %12745 = zext i1 %12744 to i8
  store i8 %12745, i8* %12743, align 1
  %12746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12747 = lshr i64 %12732, 63
  %12748 = trunc i64 %12747 to i8
  store i8 %12748, i8* %12746, align 1
  %12749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12749, align 1
  store %struct.Memory* %loadMem_40fdd3, %struct.Memory** %MEMORY
  %loadMem_40fdd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12751 = getelementptr inbounds %struct.GPR, %struct.GPR* %12750, i32 0, i32 33
  %12752 = getelementptr inbounds %struct.Reg, %struct.Reg* %12751, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %12752 to i64*
  %12753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12754 = getelementptr inbounds %struct.GPR, %struct.GPR* %12753, i32 0, i32 1
  %12755 = getelementptr inbounds %struct.Reg, %struct.Reg* %12754, i32 0, i32 0
  %RAX.i67 = bitcast %union.anon* %12755 to i64*
  %12756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12757 = getelementptr inbounds %struct.GPR, %struct.GPR* %12756, i32 0, i32 5
  %12758 = getelementptr inbounds %struct.Reg, %struct.Reg* %12757, i32 0, i32 0
  %RCX.i68 = bitcast %union.anon* %12758 to i64*
  %12759 = load i64, i64* %RAX.i67
  %12760 = load i64, i64* %RCX.i68
  %12761 = load i64, i64* %PC.i66
  %12762 = add i64 %12761, 3
  store i64 %12762, i64* %PC.i66
  %12763 = add i64 %12760, %12759
  store i64 %12763, i64* %RAX.i67, align 8
  %12764 = icmp ult i64 %12763, %12759
  %12765 = icmp ult i64 %12763, %12760
  %12766 = or i1 %12764, %12765
  %12767 = zext i1 %12766 to i8
  %12768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12767, i8* %12768, align 1
  %12769 = trunc i64 %12763 to i32
  %12770 = and i32 %12769, 255
  %12771 = call i32 @llvm.ctpop.i32(i32 %12770)
  %12772 = trunc i32 %12771 to i8
  %12773 = and i8 %12772, 1
  %12774 = xor i8 %12773, 1
  %12775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12774, i8* %12775, align 1
  %12776 = xor i64 %12760, %12759
  %12777 = xor i64 %12776, %12763
  %12778 = lshr i64 %12777, 4
  %12779 = trunc i64 %12778 to i8
  %12780 = and i8 %12779, 1
  %12781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12780, i8* %12781, align 1
  %12782 = icmp eq i64 %12763, 0
  %12783 = zext i1 %12782 to i8
  %12784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12783, i8* %12784, align 1
  %12785 = lshr i64 %12763, 63
  %12786 = trunc i64 %12785 to i8
  %12787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12786, i8* %12787, align 1
  %12788 = lshr i64 %12759, 63
  %12789 = lshr i64 %12760, 63
  %12790 = xor i64 %12785, %12788
  %12791 = xor i64 %12785, %12789
  %12792 = add i64 %12790, %12791
  %12793 = icmp eq i64 %12792, 2
  %12794 = zext i1 %12793 to i8
  %12795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12794, i8* %12795, align 1
  store %struct.Memory* %loadMem_40fdd7, %struct.Memory** %MEMORY
  %loadMem_40fdda = load %struct.Memory*, %struct.Memory** %MEMORY
  %12796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12797 = getelementptr inbounds %struct.GPR, %struct.GPR* %12796, i32 0, i32 33
  %12798 = getelementptr inbounds %struct.Reg, %struct.Reg* %12797, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %12798 to i64*
  %12799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12800 = getelementptr inbounds %struct.GPR, %struct.GPR* %12799, i32 0, i32 5
  %12801 = getelementptr inbounds %struct.Reg, %struct.Reg* %12800, i32 0, i32 0
  %RCX.i64 = bitcast %union.anon* %12801 to i64*
  %12802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12803 = getelementptr inbounds %struct.GPR, %struct.GPR* %12802, i32 0, i32 15
  %12804 = getelementptr inbounds %struct.Reg, %struct.Reg* %12803, i32 0, i32 0
  %RBP.i65 = bitcast %union.anon* %12804 to i64*
  %12805 = load i64, i64* %RBP.i65
  %12806 = sub i64 %12805, 16
  %12807 = load i64, i64* %PC.i63
  %12808 = add i64 %12807, 4
  store i64 %12808, i64* %PC.i63
  %12809 = inttoptr i64 %12806 to i32*
  %12810 = load i32, i32* %12809
  %12811 = sext i32 %12810 to i64
  store i64 %12811, i64* %RCX.i64, align 8
  store %struct.Memory* %loadMem_40fdda, %struct.Memory** %MEMORY
  %loadMem_40fdde = load %struct.Memory*, %struct.Memory** %MEMORY
  %12812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12813 = getelementptr inbounds %struct.GPR, %struct.GPR* %12812, i32 0, i32 33
  %12814 = getelementptr inbounds %struct.Reg, %struct.Reg* %12813, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %12814 to i64*
  %12815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12816 = getelementptr inbounds %struct.GPR, %struct.GPR* %12815, i32 0, i32 1
  %12817 = getelementptr inbounds %struct.Reg, %struct.Reg* %12816, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %12817 to i64*
  %12818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12819 = getelementptr inbounds %struct.GPR, %struct.GPR* %12818, i32 0, i32 5
  %12820 = getelementptr inbounds %struct.Reg, %struct.Reg* %12819, i32 0, i32 0
  %RCX.i61 = bitcast %union.anon* %12820 to i64*
  %12821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12822 = getelementptr inbounds %struct.GPR, %struct.GPR* %12821, i32 0, i32 7
  %12823 = getelementptr inbounds %struct.Reg, %struct.Reg* %12822, i32 0, i32 0
  %RDX.i62 = bitcast %union.anon* %12823 to i64*
  %12824 = load i64, i64* %RAX.i60
  %12825 = load i64, i64* %RCX.i61
  %12826 = mul i64 %12825, 4
  %12827 = add i64 %12826, %12824
  %12828 = load i64, i64* %PC.i59
  %12829 = add i64 %12828, 3
  store i64 %12829, i64* %PC.i59
  %12830 = inttoptr i64 %12827 to i32*
  %12831 = load i32, i32* %12830
  %12832 = zext i32 %12831 to i64
  store i64 %12832, i64* %RDX.i62, align 8
  store %struct.Memory* %loadMem_40fdde, %struct.Memory** %MEMORY
  %loadMem_40fde1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12834 = getelementptr inbounds %struct.GPR, %struct.GPR* %12833, i32 0, i32 33
  %12835 = getelementptr inbounds %struct.Reg, %struct.Reg* %12834, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %12835 to i64*
  %12836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12837 = getelementptr inbounds %struct.GPR, %struct.GPR* %12836, i32 0, i32 7
  %12838 = getelementptr inbounds %struct.Reg, %struct.Reg* %12837, i32 0, i32 0
  %DX.i = bitcast %union.anon* %12838 to i16*
  %12839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12840 = getelementptr inbounds %struct.GPR, %struct.GPR* %12839, i32 0, i32 9
  %12841 = getelementptr inbounds %struct.Reg, %struct.Reg* %12840, i32 0, i32 0
  %SI.i58 = bitcast %union.anon* %12841 to i16*
  %12842 = load i16, i16* %DX.i
  %12843 = zext i16 %12842 to i64
  %12844 = load i64, i64* %PC.i57
  %12845 = add i64 %12844, 3
  store i64 %12845, i64* %PC.i57
  store i16 %12842, i16* %SI.i58, align 2
  store %struct.Memory* %loadMem_40fde1, %struct.Memory** %MEMORY
  %loadMem_40fde4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12847 = getelementptr inbounds %struct.GPR, %struct.GPR* %12846, i32 0, i32 33
  %12848 = getelementptr inbounds %struct.Reg, %struct.Reg* %12847, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %12848 to i64*
  %12849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12850 = getelementptr inbounds %struct.GPR, %struct.GPR* %12849, i32 0, i32 1
  %12851 = getelementptr inbounds %struct.Reg, %struct.Reg* %12850, i32 0, i32 0
  %RAX.i56 = bitcast %union.anon* %12851 to i64*
  %12852 = load i64, i64* %PC.i55
  %12853 = add i64 %12852, 8
  store i64 %12853, i64* %PC.i55
  %12854 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %12854, i64* %RAX.i56, align 8
  store %struct.Memory* %loadMem_40fde4, %struct.Memory** %MEMORY
  %loadMem_40fdec = load %struct.Memory*, %struct.Memory** %MEMORY
  %12855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12856 = getelementptr inbounds %struct.GPR, %struct.GPR* %12855, i32 0, i32 33
  %12857 = getelementptr inbounds %struct.Reg, %struct.Reg* %12856, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %12857 to i64*
  %12858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12859 = getelementptr inbounds %struct.GPR, %struct.GPR* %12858, i32 0, i32 1
  %12860 = getelementptr inbounds %struct.Reg, %struct.Reg* %12859, i32 0, i32 0
  %RAX.i54 = bitcast %union.anon* %12860 to i64*
  %12861 = load i64, i64* %RAX.i54
  %12862 = add i64 %12861, 6424
  %12863 = load i64, i64* %PC.i53
  %12864 = add i64 %12863, 7
  store i64 %12864, i64* %PC.i53
  %12865 = inttoptr i64 %12862 to i64*
  %12866 = load i64, i64* %12865
  store i64 %12866, i64* %RAX.i54, align 8
  store %struct.Memory* %loadMem_40fdec, %struct.Memory** %MEMORY
  %loadMem_40fdf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12868 = getelementptr inbounds %struct.GPR, %struct.GPR* %12867, i32 0, i32 33
  %12869 = getelementptr inbounds %struct.Reg, %struct.Reg* %12868, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %12869 to i64*
  %12870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12871 = getelementptr inbounds %struct.GPR, %struct.GPR* %12870, i32 0, i32 5
  %12872 = getelementptr inbounds %struct.Reg, %struct.Reg* %12871, i32 0, i32 0
  %RCX.i52 = bitcast %union.anon* %12872 to i64*
  %12873 = load i64, i64* %PC.i51
  %12874 = add i64 %12873, 8
  store i64 %12874, i64* %PC.i51
  %12875 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12875, i64* %RCX.i52, align 8
  store %struct.Memory* %loadMem_40fdf3, %struct.Memory** %MEMORY
  %loadMem_40fdfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12877 = getelementptr inbounds %struct.GPR, %struct.GPR* %12876, i32 0, i32 33
  %12878 = getelementptr inbounds %struct.Reg, %struct.Reg* %12877, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %12878 to i64*
  %12879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12880 = getelementptr inbounds %struct.GPR, %struct.GPR* %12879, i32 0, i32 5
  %12881 = getelementptr inbounds %struct.Reg, %struct.Reg* %12880, i32 0, i32 0
  %RCX.i49 = bitcast %union.anon* %12881 to i64*
  %12882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12883 = getelementptr inbounds %struct.GPR, %struct.GPR* %12882, i32 0, i32 7
  %12884 = getelementptr inbounds %struct.Reg, %struct.Reg* %12883, i32 0, i32 0
  %RDX.i50 = bitcast %union.anon* %12884 to i64*
  %12885 = load i64, i64* %RCX.i49
  %12886 = add i64 %12885, 156
  %12887 = load i64, i64* %PC.i48
  %12888 = add i64 %12887, 6
  store i64 %12888, i64* %PC.i48
  %12889 = inttoptr i64 %12886 to i32*
  %12890 = load i32, i32* %12889
  %12891 = zext i32 %12890 to i64
  store i64 %12891, i64* %RDX.i50, align 8
  store %struct.Memory* %loadMem_40fdfb, %struct.Memory** %MEMORY
  %loadMem_40fe01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12893 = getelementptr inbounds %struct.GPR, %struct.GPR* %12892, i32 0, i32 33
  %12894 = getelementptr inbounds %struct.Reg, %struct.Reg* %12893, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %12894 to i64*
  %12895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12896 = getelementptr inbounds %struct.GPR, %struct.GPR* %12895, i32 0, i32 7
  %12897 = getelementptr inbounds %struct.Reg, %struct.Reg* %12896, i32 0, i32 0
  %RDX.i46 = bitcast %union.anon* %12897 to i64*
  %12898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12899 = getelementptr inbounds %struct.GPR, %struct.GPR* %12898, i32 0, i32 15
  %12900 = getelementptr inbounds %struct.Reg, %struct.Reg* %12899, i32 0, i32 0
  %RBP.i47 = bitcast %union.anon* %12900 to i64*
  %12901 = load i64, i64* %RDX.i46
  %12902 = load i64, i64* %RBP.i47
  %12903 = sub i64 %12902, 8
  %12904 = load i64, i64* %PC.i45
  %12905 = add i64 %12904, 3
  store i64 %12905, i64* %PC.i45
  %12906 = trunc i64 %12901 to i32
  %12907 = inttoptr i64 %12903 to i32*
  %12908 = load i32, i32* %12907
  %12909 = add i32 %12908, %12906
  %12910 = zext i32 %12909 to i64
  store i64 %12910, i64* %RDX.i46, align 8
  %12911 = icmp ult i32 %12909, %12906
  %12912 = icmp ult i32 %12909, %12908
  %12913 = or i1 %12911, %12912
  %12914 = zext i1 %12913 to i8
  %12915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12914, i8* %12915, align 1
  %12916 = and i32 %12909, 255
  %12917 = call i32 @llvm.ctpop.i32(i32 %12916)
  %12918 = trunc i32 %12917 to i8
  %12919 = and i8 %12918, 1
  %12920 = xor i8 %12919, 1
  %12921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12920, i8* %12921, align 1
  %12922 = xor i32 %12908, %12906
  %12923 = xor i32 %12922, %12909
  %12924 = lshr i32 %12923, 4
  %12925 = trunc i32 %12924 to i8
  %12926 = and i8 %12925, 1
  %12927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12926, i8* %12927, align 1
  %12928 = icmp eq i32 %12909, 0
  %12929 = zext i1 %12928 to i8
  %12930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12929, i8* %12930, align 1
  %12931 = lshr i32 %12909, 31
  %12932 = trunc i32 %12931 to i8
  %12933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12932, i8* %12933, align 1
  %12934 = lshr i32 %12906, 31
  %12935 = lshr i32 %12908, 31
  %12936 = xor i32 %12931, %12934
  %12937 = xor i32 %12931, %12935
  %12938 = add i32 %12936, %12937
  %12939 = icmp eq i32 %12938, 2
  %12940 = zext i1 %12939 to i8
  %12941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12940, i8* %12941, align 1
  store %struct.Memory* %loadMem_40fe01, %struct.Memory** %MEMORY
  %loadMem_40fe04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12943 = getelementptr inbounds %struct.GPR, %struct.GPR* %12942, i32 0, i32 33
  %12944 = getelementptr inbounds %struct.Reg, %struct.Reg* %12943, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %12944 to i64*
  %12945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12946 = getelementptr inbounds %struct.GPR, %struct.GPR* %12945, i32 0, i32 7
  %12947 = getelementptr inbounds %struct.Reg, %struct.Reg* %12946, i32 0, i32 0
  %RDX.i43 = bitcast %union.anon* %12947 to i64*
  %12948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12949 = getelementptr inbounds %struct.GPR, %struct.GPR* %12948, i32 0, i32 15
  %12950 = getelementptr inbounds %struct.Reg, %struct.Reg* %12949, i32 0, i32 0
  %RBP.i44 = bitcast %union.anon* %12950 to i64*
  %12951 = load i64, i64* %RDX.i43
  %12952 = load i64, i64* %RBP.i44
  %12953 = sub i64 %12952, 16
  %12954 = load i64, i64* %PC.i42
  %12955 = add i64 %12954, 3
  store i64 %12955, i64* %PC.i42
  %12956 = trunc i64 %12951 to i32
  %12957 = inttoptr i64 %12953 to i32*
  %12958 = load i32, i32* %12957
  %12959 = add i32 %12958, %12956
  %12960 = zext i32 %12959 to i64
  store i64 %12960, i64* %RDX.i43, align 8
  %12961 = icmp ult i32 %12959, %12956
  %12962 = icmp ult i32 %12959, %12958
  %12963 = or i1 %12961, %12962
  %12964 = zext i1 %12963 to i8
  %12965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12964, i8* %12965, align 1
  %12966 = and i32 %12959, 255
  %12967 = call i32 @llvm.ctpop.i32(i32 %12966)
  %12968 = trunc i32 %12967 to i8
  %12969 = and i8 %12968, 1
  %12970 = xor i8 %12969, 1
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12970, i8* %12971, align 1
  %12972 = xor i32 %12958, %12956
  %12973 = xor i32 %12972, %12959
  %12974 = lshr i32 %12973, 4
  %12975 = trunc i32 %12974 to i8
  %12976 = and i8 %12975, 1
  %12977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12976, i8* %12977, align 1
  %12978 = icmp eq i32 %12959, 0
  %12979 = zext i1 %12978 to i8
  %12980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12979, i8* %12980, align 1
  %12981 = lshr i32 %12959, 31
  %12982 = trunc i32 %12981 to i8
  %12983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12982, i8* %12983, align 1
  %12984 = lshr i32 %12956, 31
  %12985 = lshr i32 %12958, 31
  %12986 = xor i32 %12981, %12984
  %12987 = xor i32 %12981, %12985
  %12988 = add i32 %12986, %12987
  %12989 = icmp eq i32 %12988, 2
  %12990 = zext i1 %12989 to i8
  %12991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12990, i8* %12991, align 1
  store %struct.Memory* %loadMem_40fe04, %struct.Memory** %MEMORY
  %loadMem_40fe07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12993 = getelementptr inbounds %struct.GPR, %struct.GPR* %12992, i32 0, i32 33
  %12994 = getelementptr inbounds %struct.Reg, %struct.Reg* %12993, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %12994 to i64*
  %12995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12996 = getelementptr inbounds %struct.GPR, %struct.GPR* %12995, i32 0, i32 7
  %12997 = getelementptr inbounds %struct.Reg, %struct.Reg* %12996, i32 0, i32 0
  %EDX.i40 = bitcast %union.anon* %12997 to i32*
  %12998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12999 = getelementptr inbounds %struct.GPR, %struct.GPR* %12998, i32 0, i32 5
  %13000 = getelementptr inbounds %struct.Reg, %struct.Reg* %12999, i32 0, i32 0
  %RCX.i41 = bitcast %union.anon* %13000 to i64*
  %13001 = load i32, i32* %EDX.i40
  %13002 = zext i32 %13001 to i64
  %13003 = load i64, i64* %PC.i39
  %13004 = add i64 %13003, 3
  store i64 %13004, i64* %PC.i39
  %13005 = shl i64 %13002, 32
  %13006 = ashr exact i64 %13005, 32
  store i64 %13006, i64* %RCX.i41, align 8
  store %struct.Memory* %loadMem_40fe07, %struct.Memory** %MEMORY
  %loadMem_40fe0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13008 = getelementptr inbounds %struct.GPR, %struct.GPR* %13007, i32 0, i32 33
  %13009 = getelementptr inbounds %struct.Reg, %struct.Reg* %13008, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %13009 to i64*
  %13010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13011 = getelementptr inbounds %struct.GPR, %struct.GPR* %13010, i32 0, i32 1
  %13012 = getelementptr inbounds %struct.Reg, %struct.Reg* %13011, i32 0, i32 0
  %RAX.i37 = bitcast %union.anon* %13012 to i64*
  %13013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13014 = getelementptr inbounds %struct.GPR, %struct.GPR* %13013, i32 0, i32 5
  %13015 = getelementptr inbounds %struct.Reg, %struct.Reg* %13014, i32 0, i32 0
  %RCX.i38 = bitcast %union.anon* %13015 to i64*
  %13016 = load i64, i64* %RAX.i37
  %13017 = load i64, i64* %RCX.i38
  %13018 = mul i64 %13017, 8
  %13019 = add i64 %13018, %13016
  %13020 = load i64, i64* %PC.i36
  %13021 = add i64 %13020, 4
  store i64 %13021, i64* %PC.i36
  %13022 = inttoptr i64 %13019 to i64*
  %13023 = load i64, i64* %13022
  store i64 %13023, i64* %RAX.i37, align 8
  store %struct.Memory* %loadMem_40fe0a, %struct.Memory** %MEMORY
  %loadMem_40fe0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13025 = getelementptr inbounds %struct.GPR, %struct.GPR* %13024, i32 0, i32 33
  %13026 = getelementptr inbounds %struct.Reg, %struct.Reg* %13025, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %13026 to i64*
  %13027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13028 = getelementptr inbounds %struct.GPR, %struct.GPR* %13027, i32 0, i32 5
  %13029 = getelementptr inbounds %struct.Reg, %struct.Reg* %13028, i32 0, i32 0
  %RCX.i35 = bitcast %union.anon* %13029 to i64*
  %13030 = load i64, i64* %PC.i34
  %13031 = add i64 %13030, 8
  store i64 %13031, i64* %PC.i34
  %13032 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13032, i64* %RCX.i35, align 8
  store %struct.Memory* %loadMem_40fe0e, %struct.Memory** %MEMORY
  %loadMem_40fe16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13034 = getelementptr inbounds %struct.GPR, %struct.GPR* %13033, i32 0, i32 33
  %13035 = getelementptr inbounds %struct.Reg, %struct.Reg* %13034, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %13035 to i64*
  %13036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13037 = getelementptr inbounds %struct.GPR, %struct.GPR* %13036, i32 0, i32 5
  %13038 = getelementptr inbounds %struct.Reg, %struct.Reg* %13037, i32 0, i32 0
  %RCX.i32 = bitcast %union.anon* %13038 to i64*
  %13039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13040 = getelementptr inbounds %struct.GPR, %struct.GPR* %13039, i32 0, i32 7
  %13041 = getelementptr inbounds %struct.Reg, %struct.Reg* %13040, i32 0, i32 0
  %RDX.i33 = bitcast %union.anon* %13041 to i64*
  %13042 = load i64, i64* %RCX.i32
  %13043 = add i64 %13042, 152
  %13044 = load i64, i64* %PC.i31
  %13045 = add i64 %13044, 6
  store i64 %13045, i64* %PC.i31
  %13046 = inttoptr i64 %13043 to i32*
  %13047 = load i32, i32* %13046
  %13048 = zext i32 %13047 to i64
  store i64 %13048, i64* %RDX.i33, align 8
  store %struct.Memory* %loadMem_40fe16, %struct.Memory** %MEMORY
  %loadMem_40fe1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13050 = getelementptr inbounds %struct.GPR, %struct.GPR* %13049, i32 0, i32 33
  %13051 = getelementptr inbounds %struct.Reg, %struct.Reg* %13050, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %13051 to i64*
  %13052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13053 = getelementptr inbounds %struct.GPR, %struct.GPR* %13052, i32 0, i32 7
  %13054 = getelementptr inbounds %struct.Reg, %struct.Reg* %13053, i32 0, i32 0
  %RDX.i29 = bitcast %union.anon* %13054 to i64*
  %13055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13056 = getelementptr inbounds %struct.GPR, %struct.GPR* %13055, i32 0, i32 15
  %13057 = getelementptr inbounds %struct.Reg, %struct.Reg* %13056, i32 0, i32 0
  %RBP.i30 = bitcast %union.anon* %13057 to i64*
  %13058 = load i64, i64* %RDX.i29
  %13059 = load i64, i64* %RBP.i30
  %13060 = sub i64 %13059, 4
  %13061 = load i64, i64* %PC.i28
  %13062 = add i64 %13061, 3
  store i64 %13062, i64* %PC.i28
  %13063 = trunc i64 %13058 to i32
  %13064 = inttoptr i64 %13060 to i32*
  %13065 = load i32, i32* %13064
  %13066 = add i32 %13065, %13063
  %13067 = zext i32 %13066 to i64
  store i64 %13067, i64* %RDX.i29, align 8
  %13068 = icmp ult i32 %13066, %13063
  %13069 = icmp ult i32 %13066, %13065
  %13070 = or i1 %13068, %13069
  %13071 = zext i1 %13070 to i8
  %13072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13071, i8* %13072, align 1
  %13073 = and i32 %13066, 255
  %13074 = call i32 @llvm.ctpop.i32(i32 %13073)
  %13075 = trunc i32 %13074 to i8
  %13076 = and i8 %13075, 1
  %13077 = xor i8 %13076, 1
  %13078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13077, i8* %13078, align 1
  %13079 = xor i32 %13065, %13063
  %13080 = xor i32 %13079, %13066
  %13081 = lshr i32 %13080, 4
  %13082 = trunc i32 %13081 to i8
  %13083 = and i8 %13082, 1
  %13084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13083, i8* %13084, align 1
  %13085 = icmp eq i32 %13066, 0
  %13086 = zext i1 %13085 to i8
  %13087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13086, i8* %13087, align 1
  %13088 = lshr i32 %13066, 31
  %13089 = trunc i32 %13088 to i8
  %13090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13089, i8* %13090, align 1
  %13091 = lshr i32 %13063, 31
  %13092 = lshr i32 %13065, 31
  %13093 = xor i32 %13088, %13091
  %13094 = xor i32 %13088, %13092
  %13095 = add i32 %13093, %13094
  %13096 = icmp eq i32 %13095, 2
  %13097 = zext i1 %13096 to i8
  %13098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13097, i8* %13098, align 1
  store %struct.Memory* %loadMem_40fe1c, %struct.Memory** %MEMORY
  %loadMem_40fe1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13100 = getelementptr inbounds %struct.GPR, %struct.GPR* %13099, i32 0, i32 33
  %13101 = getelementptr inbounds %struct.Reg, %struct.Reg* %13100, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %13101 to i64*
  %13102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13103 = getelementptr inbounds %struct.GPR, %struct.GPR* %13102, i32 0, i32 7
  %13104 = getelementptr inbounds %struct.Reg, %struct.Reg* %13103, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %13104 to i64*
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13106 = getelementptr inbounds %struct.GPR, %struct.GPR* %13105, i32 0, i32 15
  %13107 = getelementptr inbounds %struct.Reg, %struct.Reg* %13106, i32 0, i32 0
  %RBP.i27 = bitcast %union.anon* %13107 to i64*
  %13108 = load i64, i64* %RDX.i
  %13109 = load i64, i64* %RBP.i27
  %13110 = sub i64 %13109, 12
  %13111 = load i64, i64* %PC.i26
  %13112 = add i64 %13111, 3
  store i64 %13112, i64* %PC.i26
  %13113 = trunc i64 %13108 to i32
  %13114 = inttoptr i64 %13110 to i32*
  %13115 = load i32, i32* %13114
  %13116 = add i32 %13115, %13113
  %13117 = zext i32 %13116 to i64
  store i64 %13117, i64* %RDX.i, align 8
  %13118 = icmp ult i32 %13116, %13113
  %13119 = icmp ult i32 %13116, %13115
  %13120 = or i1 %13118, %13119
  %13121 = zext i1 %13120 to i8
  %13122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13121, i8* %13122, align 1
  %13123 = and i32 %13116, 255
  %13124 = call i32 @llvm.ctpop.i32(i32 %13123)
  %13125 = trunc i32 %13124 to i8
  %13126 = and i8 %13125, 1
  %13127 = xor i8 %13126, 1
  %13128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13127, i8* %13128, align 1
  %13129 = xor i32 %13115, %13113
  %13130 = xor i32 %13129, %13116
  %13131 = lshr i32 %13130, 4
  %13132 = trunc i32 %13131 to i8
  %13133 = and i8 %13132, 1
  %13134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13133, i8* %13134, align 1
  %13135 = icmp eq i32 %13116, 0
  %13136 = zext i1 %13135 to i8
  %13137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13136, i8* %13137, align 1
  %13138 = lshr i32 %13116, 31
  %13139 = trunc i32 %13138 to i8
  %13140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13139, i8* %13140, align 1
  %13141 = lshr i32 %13113, 31
  %13142 = lshr i32 %13115, 31
  %13143 = xor i32 %13138, %13141
  %13144 = xor i32 %13138, %13142
  %13145 = add i32 %13143, %13144
  %13146 = icmp eq i32 %13145, 2
  %13147 = zext i1 %13146 to i8
  %13148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13147, i8* %13148, align 1
  store %struct.Memory* %loadMem_40fe1f, %struct.Memory** %MEMORY
  %loadMem_40fe22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13150 = getelementptr inbounds %struct.GPR, %struct.GPR* %13149, i32 0, i32 33
  %13151 = getelementptr inbounds %struct.Reg, %struct.Reg* %13150, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %13151 to i64*
  %13152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13153 = getelementptr inbounds %struct.GPR, %struct.GPR* %13152, i32 0, i32 7
  %13154 = getelementptr inbounds %struct.Reg, %struct.Reg* %13153, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %13154 to i32*
  %13155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13156 = getelementptr inbounds %struct.GPR, %struct.GPR* %13155, i32 0, i32 5
  %13157 = getelementptr inbounds %struct.Reg, %struct.Reg* %13156, i32 0, i32 0
  %RCX.i25 = bitcast %union.anon* %13157 to i64*
  %13158 = load i32, i32* %EDX.i
  %13159 = zext i32 %13158 to i64
  %13160 = load i64, i64* %PC.i24
  %13161 = add i64 %13160, 3
  store i64 %13161, i64* %PC.i24
  %13162 = shl i64 %13159, 32
  %13163 = ashr exact i64 %13162, 32
  store i64 %13163, i64* %RCX.i25, align 8
  store %struct.Memory* %loadMem_40fe22, %struct.Memory** %MEMORY
  %loadMem_40fe25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13165 = getelementptr inbounds %struct.GPR, %struct.GPR* %13164, i32 0, i32 33
  %13166 = getelementptr inbounds %struct.Reg, %struct.Reg* %13165, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %13166 to i64*
  %13167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13168 = getelementptr inbounds %struct.GPR, %struct.GPR* %13167, i32 0, i32 9
  %13169 = getelementptr inbounds %struct.Reg, %struct.Reg* %13168, i32 0, i32 0
  %SI.i = bitcast %union.anon* %13169 to i16*
  %13170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13171 = getelementptr inbounds %struct.GPR, %struct.GPR* %13170, i32 0, i32 1
  %13172 = getelementptr inbounds %struct.Reg, %struct.Reg* %13171, i32 0, i32 0
  %RAX.i23 = bitcast %union.anon* %13172 to i64*
  %13173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13174 = getelementptr inbounds %struct.GPR, %struct.GPR* %13173, i32 0, i32 5
  %13175 = getelementptr inbounds %struct.Reg, %struct.Reg* %13174, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %13175 to i64*
  %13176 = load i64, i64* %RAX.i23
  %13177 = load i64, i64* %RCX.i
  %13178 = mul i64 %13177, 2
  %13179 = add i64 %13178, %13176
  %13180 = load i16, i16* %SI.i
  %13181 = zext i16 %13180 to i64
  %13182 = load i64, i64* %PC.i22
  %13183 = add i64 %13182, 4
  store i64 %13183, i64* %PC.i22
  %13184 = inttoptr i64 %13179 to i16*
  store i16 %13180, i16* %13184
  store %struct.Memory* %loadMem_40fe25, %struct.Memory** %MEMORY
  %loadMem_40fe29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13186 = getelementptr inbounds %struct.GPR, %struct.GPR* %13185, i32 0, i32 33
  %13187 = getelementptr inbounds %struct.Reg, %struct.Reg* %13186, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %13187 to i64*
  %13188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13189 = getelementptr inbounds %struct.GPR, %struct.GPR* %13188, i32 0, i32 1
  %13190 = getelementptr inbounds %struct.Reg, %struct.Reg* %13189, i32 0, i32 0
  %RAX.i20 = bitcast %union.anon* %13190 to i64*
  %13191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13192 = getelementptr inbounds %struct.GPR, %struct.GPR* %13191, i32 0, i32 15
  %13193 = getelementptr inbounds %struct.Reg, %struct.Reg* %13192, i32 0, i32 0
  %RBP.i21 = bitcast %union.anon* %13193 to i64*
  %13194 = load i64, i64* %RBP.i21
  %13195 = sub i64 %13194, 12
  %13196 = load i64, i64* %PC.i19
  %13197 = add i64 %13196, 3
  store i64 %13197, i64* %PC.i19
  %13198 = inttoptr i64 %13195 to i32*
  %13199 = load i32, i32* %13198
  %13200 = zext i32 %13199 to i64
  store i64 %13200, i64* %RAX.i20, align 8
  store %struct.Memory* %loadMem_40fe29, %struct.Memory** %MEMORY
  %loadMem_40fe2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13202 = getelementptr inbounds %struct.GPR, %struct.GPR* %13201, i32 0, i32 33
  %13203 = getelementptr inbounds %struct.Reg, %struct.Reg* %13202, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %13203 to i64*
  %13204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13205 = getelementptr inbounds %struct.GPR, %struct.GPR* %13204, i32 0, i32 1
  %13206 = getelementptr inbounds %struct.Reg, %struct.Reg* %13205, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %13206 to i64*
  %13207 = load i64, i64* %RAX.i18
  %13208 = load i64, i64* %PC.i17
  %13209 = add i64 %13208, 3
  store i64 %13209, i64* %PC.i17
  %13210 = trunc i64 %13207 to i32
  %13211 = add i32 1, %13210
  %13212 = zext i32 %13211 to i64
  store i64 %13212, i64* %RAX.i18, align 8
  %13213 = icmp ult i32 %13211, %13210
  %13214 = icmp ult i32 %13211, 1
  %13215 = or i1 %13213, %13214
  %13216 = zext i1 %13215 to i8
  %13217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13216, i8* %13217, align 1
  %13218 = and i32 %13211, 255
  %13219 = call i32 @llvm.ctpop.i32(i32 %13218)
  %13220 = trunc i32 %13219 to i8
  %13221 = and i8 %13220, 1
  %13222 = xor i8 %13221, 1
  %13223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13222, i8* %13223, align 1
  %13224 = xor i64 1, %13207
  %13225 = trunc i64 %13224 to i32
  %13226 = xor i32 %13225, %13211
  %13227 = lshr i32 %13226, 4
  %13228 = trunc i32 %13227 to i8
  %13229 = and i8 %13228, 1
  %13230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13229, i8* %13230, align 1
  %13231 = icmp eq i32 %13211, 0
  %13232 = zext i1 %13231 to i8
  %13233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13232, i8* %13233, align 1
  %13234 = lshr i32 %13211, 31
  %13235 = trunc i32 %13234 to i8
  %13236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13235, i8* %13236, align 1
  %13237 = lshr i32 %13210, 31
  %13238 = xor i32 %13234, %13237
  %13239 = add i32 %13238, %13234
  %13240 = icmp eq i32 %13239, 2
  %13241 = zext i1 %13240 to i8
  %13242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13241, i8* %13242, align 1
  store %struct.Memory* %loadMem_40fe2c, %struct.Memory** %MEMORY
  %loadMem_40fe2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13244 = getelementptr inbounds %struct.GPR, %struct.GPR* %13243, i32 0, i32 33
  %13245 = getelementptr inbounds %struct.Reg, %struct.Reg* %13244, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %13245 to i64*
  %13246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13247 = getelementptr inbounds %struct.GPR, %struct.GPR* %13246, i32 0, i32 1
  %13248 = getelementptr inbounds %struct.Reg, %struct.Reg* %13247, i32 0, i32 0
  %EAX.i15 = bitcast %union.anon* %13248 to i32*
  %13249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13250 = getelementptr inbounds %struct.GPR, %struct.GPR* %13249, i32 0, i32 15
  %13251 = getelementptr inbounds %struct.Reg, %struct.Reg* %13250, i32 0, i32 0
  %RBP.i16 = bitcast %union.anon* %13251 to i64*
  %13252 = load i64, i64* %RBP.i16
  %13253 = sub i64 %13252, 12
  %13254 = load i32, i32* %EAX.i15
  %13255 = zext i32 %13254 to i64
  %13256 = load i64, i64* %PC.i14
  %13257 = add i64 %13256, 3
  store i64 %13257, i64* %PC.i14
  %13258 = inttoptr i64 %13253 to i32*
  store i32 %13254, i32* %13258
  store %struct.Memory* %loadMem_40fe2f, %struct.Memory** %MEMORY
  %loadMem_40fe32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13260 = getelementptr inbounds %struct.GPR, %struct.GPR* %13259, i32 0, i32 33
  %13261 = getelementptr inbounds %struct.Reg, %struct.Reg* %13260, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %13261 to i64*
  %13262 = load i64, i64* %PC.i13
  %13263 = add i64 %13262, -123
  %13264 = load i64, i64* %PC.i13
  %13265 = add i64 %13264, 5
  store i64 %13265, i64* %PC.i13
  %13266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13263, i64* %13266, align 8
  store %struct.Memory* %loadMem_40fe32, %struct.Memory** %MEMORY
  br label %block_.L_40fdb7

block_.L_40fe37:                                  ; preds = %block_.L_40fdb7
  %loadMem_40fe37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13268 = getelementptr inbounds %struct.GPR, %struct.GPR* %13267, i32 0, i32 33
  %13269 = getelementptr inbounds %struct.Reg, %struct.Reg* %13268, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %13269 to i64*
  %13270 = load i64, i64* %PC.i12
  %13271 = add i64 %13270, 5
  %13272 = load i64, i64* %PC.i12
  %13273 = add i64 %13272, 5
  store i64 %13273, i64* %PC.i12
  %13274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13271, i64* %13274, align 8
  store %struct.Memory* %loadMem_40fe37, %struct.Memory** %MEMORY
  br label %block_.L_40fe3c

block_.L_40fe3c:                                  ; preds = %block_.L_40fe37
  %loadMem_40fe3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13276 = getelementptr inbounds %struct.GPR, %struct.GPR* %13275, i32 0, i32 33
  %13277 = getelementptr inbounds %struct.Reg, %struct.Reg* %13276, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %13277 to i64*
  %13278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13279 = getelementptr inbounds %struct.GPR, %struct.GPR* %13278, i32 0, i32 1
  %13280 = getelementptr inbounds %struct.Reg, %struct.Reg* %13279, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %13280 to i64*
  %13281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13282 = getelementptr inbounds %struct.GPR, %struct.GPR* %13281, i32 0, i32 15
  %13283 = getelementptr inbounds %struct.Reg, %struct.Reg* %13282, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %13283 to i64*
  %13284 = load i64, i64* %RBP.i11
  %13285 = sub i64 %13284, 16
  %13286 = load i64, i64* %PC.i9
  %13287 = add i64 %13286, 3
  store i64 %13287, i64* %PC.i9
  %13288 = inttoptr i64 %13285 to i32*
  %13289 = load i32, i32* %13288
  %13290 = zext i32 %13289 to i64
  store i64 %13290, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_40fe3c, %struct.Memory** %MEMORY
  %loadMem_40fe3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13292 = getelementptr inbounds %struct.GPR, %struct.GPR* %13291, i32 0, i32 33
  %13293 = getelementptr inbounds %struct.Reg, %struct.Reg* %13292, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %13293 to i64*
  %13294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13295 = getelementptr inbounds %struct.GPR, %struct.GPR* %13294, i32 0, i32 1
  %13296 = getelementptr inbounds %struct.Reg, %struct.Reg* %13295, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %13296 to i64*
  %13297 = load i64, i64* %RAX.i
  %13298 = load i64, i64* %PC.i8
  %13299 = add i64 %13298, 3
  store i64 %13299, i64* %PC.i8
  %13300 = trunc i64 %13297 to i32
  %13301 = add i32 1, %13300
  %13302 = zext i32 %13301 to i64
  store i64 %13302, i64* %RAX.i, align 8
  %13303 = icmp ult i32 %13301, %13300
  %13304 = icmp ult i32 %13301, 1
  %13305 = or i1 %13303, %13304
  %13306 = zext i1 %13305 to i8
  %13307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13306, i8* %13307, align 1
  %13308 = and i32 %13301, 255
  %13309 = call i32 @llvm.ctpop.i32(i32 %13308)
  %13310 = trunc i32 %13309 to i8
  %13311 = and i8 %13310, 1
  %13312 = xor i8 %13311, 1
  %13313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13312, i8* %13313, align 1
  %13314 = xor i64 1, %13297
  %13315 = trunc i64 %13314 to i32
  %13316 = xor i32 %13315, %13301
  %13317 = lshr i32 %13316, 4
  %13318 = trunc i32 %13317 to i8
  %13319 = and i8 %13318, 1
  %13320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13319, i8* %13320, align 1
  %13321 = icmp eq i32 %13301, 0
  %13322 = zext i1 %13321 to i8
  %13323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13322, i8* %13323, align 1
  %13324 = lshr i32 %13301, 31
  %13325 = trunc i32 %13324 to i8
  %13326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13325, i8* %13326, align 1
  %13327 = lshr i32 %13300, 31
  %13328 = xor i32 %13324, %13327
  %13329 = add i32 %13328, %13324
  %13330 = icmp eq i32 %13329, 2
  %13331 = zext i1 %13330 to i8
  %13332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13331, i8* %13332, align 1
  store %struct.Memory* %loadMem_40fe3f, %struct.Memory** %MEMORY
  %loadMem_40fe42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13334 = getelementptr inbounds %struct.GPR, %struct.GPR* %13333, i32 0, i32 33
  %13335 = getelementptr inbounds %struct.Reg, %struct.Reg* %13334, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %13335 to i64*
  %13336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13337 = getelementptr inbounds %struct.GPR, %struct.GPR* %13336, i32 0, i32 1
  %13338 = getelementptr inbounds %struct.Reg, %struct.Reg* %13337, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %13338 to i32*
  %13339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13340 = getelementptr inbounds %struct.GPR, %struct.GPR* %13339, i32 0, i32 15
  %13341 = getelementptr inbounds %struct.Reg, %struct.Reg* %13340, i32 0, i32 0
  %RBP.i7 = bitcast %union.anon* %13341 to i64*
  %13342 = load i64, i64* %RBP.i7
  %13343 = sub i64 %13342, 16
  %13344 = load i32, i32* %EAX.i
  %13345 = zext i32 %13344 to i64
  %13346 = load i64, i64* %PC.i6
  %13347 = add i64 %13346, 3
  store i64 %13347, i64* %PC.i6
  %13348 = inttoptr i64 %13343 to i32*
  store i32 %13344, i32* %13348
  store %struct.Memory* %loadMem_40fe42, %struct.Memory** %MEMORY
  %loadMem_40fe45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13350 = getelementptr inbounds %struct.GPR, %struct.GPR* %13349, i32 0, i32 33
  %13351 = getelementptr inbounds %struct.Reg, %struct.Reg* %13350, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %13351 to i64*
  %13352 = load i64, i64* %PC.i5
  %13353 = add i64 %13352, -159
  %13354 = load i64, i64* %PC.i5
  %13355 = add i64 %13354, 5
  store i64 %13355, i64* %PC.i5
  %13356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13353, i64* %13356, align 8
  store %struct.Memory* %loadMem_40fe45, %struct.Memory** %MEMORY
  br label %block_.L_40fda6

block_.L_40fe4a:                                  ; preds = %block_.L_40fda6
  %loadMem_40fe4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13358 = getelementptr inbounds %struct.GPR, %struct.GPR* %13357, i32 0, i32 33
  %13359 = getelementptr inbounds %struct.Reg, %struct.Reg* %13358, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %13359 to i64*
  %13360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13361 = getelementptr inbounds %struct.GPR, %struct.GPR* %13360, i32 0, i32 13
  %13362 = getelementptr inbounds %struct.Reg, %struct.Reg* %13361, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %13362 to i64*
  %13363 = load i64, i64* %RSP.i
  %13364 = load i64, i64* %PC.i4
  %13365 = add i64 %13364, 7
  store i64 %13365, i64* %PC.i4
  %13366 = add i64 224, %13363
  store i64 %13366, i64* %RSP.i, align 8
  %13367 = icmp ult i64 %13366, %13363
  %13368 = icmp ult i64 %13366, 224
  %13369 = or i1 %13367, %13368
  %13370 = zext i1 %13369 to i8
  %13371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13370, i8* %13371, align 1
  %13372 = trunc i64 %13366 to i32
  %13373 = and i32 %13372, 255
  %13374 = call i32 @llvm.ctpop.i32(i32 %13373)
  %13375 = trunc i32 %13374 to i8
  %13376 = and i8 %13375, 1
  %13377 = xor i8 %13376, 1
  %13378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13377, i8* %13378, align 1
  %13379 = xor i64 224, %13363
  %13380 = xor i64 %13379, %13366
  %13381 = lshr i64 %13380, 4
  %13382 = trunc i64 %13381 to i8
  %13383 = and i8 %13382, 1
  %13384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13383, i8* %13384, align 1
  %13385 = icmp eq i64 %13366, 0
  %13386 = zext i1 %13385 to i8
  %13387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13386, i8* %13387, align 1
  %13388 = lshr i64 %13366, 63
  %13389 = trunc i64 %13388 to i8
  %13390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13389, i8* %13390, align 1
  %13391 = lshr i64 %13363, 63
  %13392 = xor i64 %13388, %13391
  %13393 = add i64 %13392, %13388
  %13394 = icmp eq i64 %13393, 2
  %13395 = zext i1 %13394 to i8
  %13396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13395, i8* %13396, align 1
  store %struct.Memory* %loadMem_40fe4a, %struct.Memory** %MEMORY
  %loadMem_40fe51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13398 = getelementptr inbounds %struct.GPR, %struct.GPR* %13397, i32 0, i32 33
  %13399 = getelementptr inbounds %struct.Reg, %struct.Reg* %13398, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %13399 to i64*
  %13400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13401 = getelementptr inbounds %struct.GPR, %struct.GPR* %13400, i32 0, i32 15
  %13402 = getelementptr inbounds %struct.Reg, %struct.Reg* %13401, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %13402 to i64*
  %13403 = load i64, i64* %PC.i2
  %13404 = add i64 %13403, 1
  store i64 %13404, i64* %PC.i2
  %13405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13406 = load i64, i64* %13405, align 8
  %13407 = add i64 %13406, 8
  %13408 = inttoptr i64 %13406 to i64*
  %13409 = load i64, i64* %13408
  store i64 %13409, i64* %RBP.i3, align 8
  store i64 %13407, i64* %13405, align 8
  store %struct.Memory* %loadMem_40fe51, %struct.Memory** %MEMORY
  %loadMem_40fe52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13411 = getelementptr inbounds %struct.GPR, %struct.GPR* %13410, i32 0, i32 33
  %13412 = getelementptr inbounds %struct.Reg, %struct.Reg* %13411, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %13412 to i64*
  %13413 = load i64, i64* %PC.i1
  %13414 = add i64 %13413, 1
  store i64 %13414, i64* %PC.i1
  %13415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13417 = load i64, i64* %13416, align 8
  %13418 = inttoptr i64 %13417 to i64*
  %13419 = load i64, i64* %13418
  store i64 %13419, i64* %13415, align 8
  %13420 = add i64 %13417, 8
  store i64 %13420, i64* %13416, align 8
  store %struct.Memory* %loadMem_40fe52, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_40fe52
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0xe0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 224
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 224
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 224, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__r8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__r9____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___r9___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R9, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r9___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__r8____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %RSI, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %12, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = trunc i64 %9 to i32
  %22 = xor i32 %21, %12
  %23 = lshr i32 %22, 4
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %12, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %12, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %12, 31
  %34 = xor i32 %30, %33
  %35 = add i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__r8____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %RAX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %12, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = trunc i64 %9 to i32
  %22 = xor i32 %21, %12
  %23 = lshr i32 %22, 4
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %12, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %12, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %12, 31
  %34 = xor i32 %30, %33
  %35 = add i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xf___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 15, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 15
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 15, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x9c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40f683(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40f670(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x90__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rsi_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f613(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f675(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f602(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40f777(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40f726(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rsi__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RCX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x30__rbp__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -48
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RCX, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x30__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -48
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f69b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x90__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -144
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -112
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -96
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f68a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40f88f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40f81a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x10__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f78f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x2c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x2c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f77e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40f9af(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40f99c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abs_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x90__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b2750___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b2750_type* @G__0x4b2750 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x98__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rdx__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xa0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 160
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x9c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RAX, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xb8__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rsi__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sign(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b28d0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b28d0_type* @G__0x4b28d0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x98__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rdx__r8_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rdx__r8_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f8a7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f9a1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f896(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40fad2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40fa07(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x30__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -48
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f9c7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40fabf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x40__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x40__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fa3a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fac4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40f9b6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40fd9f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40fb2a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40faea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40fd8c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x40__rbp__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40fbb3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fbcf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x40__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40fbfc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xc4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fc51(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x40__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RDX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40fc29(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fc45(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp__rdx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x40__rbp__rdx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDI, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RDI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xcc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40fcb9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fcd5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x40__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xcc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40fd02(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fd57(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x40__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40fd2f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fd4b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fb5d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fd91(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fad9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40fe4a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40fe37(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx___si(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %SI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x10__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fdb7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fe3c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40fda6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xe0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 224, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 224
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 224, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
