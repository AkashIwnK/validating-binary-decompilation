; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb8f8 = global %G_0x6cb8f8_type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_44b1b0.getNeighbour(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @intrapred_luma_16x16(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_403980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_403980, %struct.Memory** %MEMORY
  %loadMem_403981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i56 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i57 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i56
  %27 = load i64, i64* %PC.i55
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i55
  store i64 %26, i64* %RBP.i57, align 8
  store %struct.Memory* %loadMem_403981, %struct.Memory** %MEMORY
  %loadMem_403984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i111 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i111
  %36 = load i64, i64* %PC.i110
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i110
  %38 = sub i64 %35, 704
  store i64 %38, i64* %RSP.i111, align 8
  %39 = icmp ult i64 %35, 704
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 704, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_403984, %struct.Memory** %MEMORY
  %loadMem_40398b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 15
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %RBP.i183
  %74 = sub i64 %73, 4
  %75 = load i64, i64* %PC.i182
  %76 = add i64 %75, 7
  store i64 %76, i64* %PC.i182
  %77 = inttoptr i64 %74 to i32*
  store i32 0, i32* %77
  store %struct.Memory* %loadMem_40398b, %struct.Memory** %MEMORY
  %loadMem_403992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 33
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %80 to i64*
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 1
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %RAX.i243 = bitcast %union.anon* %83 to i64*
  %84 = load i64, i64* %PC.i242
  %85 = add i64 %84, 8
  store i64 %85, i64* %PC.i242
  %86 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %86, i64* %RAX.i243, align 8
  store %struct.Memory* %loadMem_403992, %struct.Memory** %MEMORY
  %loadMem_40399a = load %struct.Memory*, %struct.Memory** %MEMORY
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 33
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %89 to i64*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 1
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %RAX.i864 = bitcast %union.anon* %92 to i64*
  %93 = load i64, i64* %RAX.i864
  %94 = add i64 %93, 6424
  %95 = load i64, i64* %PC.i863
  %96 = add i64 %95, 7
  store i64 %96, i64* %PC.i863
  %97 = inttoptr i64 %94 to i64*
  %98 = load i64, i64* %97
  store i64 %98, i64* %RAX.i864, align 8
  store %struct.Memory* %loadMem_40399a, %struct.Memory** %MEMORY
  %loadMem_4039a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 1
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %RAX.i895 = bitcast %union.anon* %104 to i64*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 15
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %RBP.i896 = bitcast %union.anon* %107 to i64*
  %108 = load i64, i64* %RBP.i896
  %109 = sub i64 %108, 184
  %110 = load i64, i64* %RAX.i895
  %111 = load i64, i64* %PC.i894
  %112 = add i64 %111, 7
  store i64 %112, i64* %PC.i894
  %113 = inttoptr i64 %109 to i64*
  store i64 %110, i64* %113
  store %struct.Memory* %loadMem_4039a1, %struct.Memory** %MEMORY
  %loadMem_4039a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 33
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %116 to i64*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 1
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %RAX.i927 = bitcast %union.anon* %119 to i64*
  %120 = load i64, i64* %PC.i926
  %121 = add i64 %120, 8
  store i64 %121, i64* %PC.i926
  %122 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %122, i64* %RAX.i927, align 8
  store %struct.Memory* %loadMem_4039a8, %struct.Memory** %MEMORY
  %loadMem_4039b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 33
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %PC.i1275 = bitcast %union.anon* %125 to i64*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 1
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %RAX.i1276 = bitcast %union.anon* %128 to i64*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 5
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %RCX.i1277 = bitcast %union.anon* %131 to i64*
  %132 = load i64, i64* %RAX.i1276
  %133 = add i64 %132, 12
  %134 = load i64, i64* %PC.i1275
  %135 = add i64 %134, 3
  store i64 %135, i64* %PC.i1275
  %136 = inttoptr i64 %133 to i32*
  %137 = load i32, i32* %136
  %138 = zext i32 %137 to i64
  store i64 %138, i64* %RCX.i1277, align 8
  store %struct.Memory* %loadMem_4039b0, %struct.Memory** %MEMORY
  %loadMem_4039b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %140 = getelementptr inbounds %struct.GPR, %struct.GPR* %139, i32 0, i32 33
  %141 = getelementptr inbounds %struct.Reg, %struct.Reg* %140, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %141 to i64*
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.GPR, %struct.GPR* %142, i32 0, i32 5
  %144 = getelementptr inbounds %struct.Reg, %struct.Reg* %143, i32 0, i32 0
  %ECX.i1273 = bitcast %union.anon* %144 to i32*
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 15
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %RBP.i1274 = bitcast %union.anon* %147 to i64*
  %148 = load i64, i64* %RBP.i1274
  %149 = sub i64 %148, 188
  %150 = load i32, i32* %ECX.i1273
  %151 = zext i32 %150 to i64
  %152 = load i64, i64* %PC.i1272
  %153 = add i64 %152, 6
  store i64 %153, i64* %PC.i1272
  %154 = inttoptr i64 %149 to i32*
  store i32 %150, i32* %154
  store %struct.Memory* %loadMem_4039b3, %struct.Memory** %MEMORY
  %loadMem_4039b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %156 = getelementptr inbounds %struct.GPR, %struct.GPR* %155, i32 0, i32 33
  %157 = getelementptr inbounds %struct.Reg, %struct.Reg* %156, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %157 to i64*
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 15
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %RBP.i1271 = bitcast %union.anon* %160 to i64*
  %161 = load i64, i64* %RBP.i1271
  %162 = sub i64 %161, 148
  %163 = load i64, i64* %PC.i1270
  %164 = add i64 %163, 10
  store i64 %164, i64* %PC.i1270
  %165 = inttoptr i64 %162 to i32*
  store i32 0, i32* %165
  store %struct.Memory* %loadMem_4039b9, %struct.Memory** %MEMORY
  br label %block_.L_4039c3

block_.L_4039c3:                                  ; preds = %block_4039d0, %entry
  %loadMem_4039c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %167 = getelementptr inbounds %struct.GPR, %struct.GPR* %166, i32 0, i32 33
  %168 = getelementptr inbounds %struct.Reg, %struct.Reg* %167, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %168 to i64*
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 15
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %RBP.i1269 = bitcast %union.anon* %171 to i64*
  %172 = load i64, i64* %RBP.i1269
  %173 = sub i64 %172, 148
  %174 = load i64, i64* %PC.i1268
  %175 = add i64 %174, 7
  store i64 %175, i64* %PC.i1268
  %176 = inttoptr i64 %173 to i32*
  %177 = load i32, i32* %176
  %178 = sub i32 %177, 17
  %179 = icmp ult i32 %177, 17
  %180 = zext i1 %179 to i8
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %180, i8* %181, align 1
  %182 = and i32 %178, 255
  %183 = call i32 @llvm.ctpop.i32(i32 %182)
  %184 = trunc i32 %183 to i8
  %185 = and i8 %184, 1
  %186 = xor i8 %185, 1
  %187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %186, i8* %187, align 1
  %188 = xor i32 %177, 17
  %189 = xor i32 %188, %178
  %190 = lshr i32 %189, 4
  %191 = trunc i32 %190 to i8
  %192 = and i8 %191, 1
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %192, i8* %193, align 1
  %194 = icmp eq i32 %178, 0
  %195 = zext i1 %194 to i8
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %195, i8* %196, align 1
  %197 = lshr i32 %178, 31
  %198 = trunc i32 %197 to i8
  %199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %198, i8* %199, align 1
  %200 = lshr i32 %177, 31
  %201 = xor i32 %197, %200
  %202 = add i32 %201, %200
  %203 = icmp eq i32 %202, 2
  %204 = zext i1 %203 to i8
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %204, i8* %205, align 1
  store %struct.Memory* %loadMem_4039c3, %struct.Memory** %MEMORY
  %loadMem_4039ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 33
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %208 to i64*
  %209 = load i64, i64* %PC.i1267
  %210 = add i64 %209, 80
  %211 = load i64, i64* %PC.i1267
  %212 = add i64 %211, 6
  %213 = load i64, i64* %PC.i1267
  %214 = add i64 %213, 6
  store i64 %214, i64* %PC.i1267
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %216 = load i8, i8* %215, align 1
  %217 = icmp ne i8 %216, 0
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %219 = load i8, i8* %218, align 1
  %220 = icmp ne i8 %219, 0
  %221 = xor i1 %217, %220
  %222 = xor i1 %221, true
  %223 = zext i1 %222 to i8
  store i8 %223, i8* %BRANCH_TAKEN, align 1
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %225 = select i1 %221, i64 %212, i64 %210
  store i64 %225, i64* %224, align 8
  store %struct.Memory* %loadMem_4039ca, %struct.Memory** %MEMORY
  %loadBr_4039ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4039ca = icmp eq i8 %loadBr_4039ca, 1
  br i1 %cmpBr_4039ca, label %block_.L_403a1a, label %block_4039d0

block_4039d0:                                     ; preds = %block_.L_4039c3
  %loadMem_4039d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %227 = getelementptr inbounds %struct.GPR, %struct.GPR* %226, i32 0, i32 33
  %228 = getelementptr inbounds %struct.Reg, %struct.Reg* %227, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %228 to i64*
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %230 = getelementptr inbounds %struct.GPR, %struct.GPR* %229, i32 0, i32 9
  %231 = getelementptr inbounds %struct.Reg, %struct.Reg* %230, i32 0, i32 0
  %RSI.i1266 = bitcast %union.anon* %231 to i64*
  %232 = load i64, i64* %PC.i1265
  %233 = add i64 %232, 5
  store i64 %233, i64* %PC.i1265
  store i64 4294967295, i64* %RSI.i1266, align 8
  store %struct.Memory* %loadMem_4039d0, %struct.Memory** %MEMORY
  %loadMem_4039d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 33
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 5
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RCX.i1264 = bitcast %union.anon* %239 to i64*
  %240 = load i64, i64* %PC.i1263
  %241 = add i64 %240, 5
  store i64 %241, i64* %PC.i1263
  store i64 1, i64* %RCX.i1264, align 8
  store %struct.Memory* %loadMem_4039d5, %struct.Memory** %MEMORY
  %loadMem_4039da = load %struct.Memory*, %struct.Memory** %MEMORY
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %243 = getelementptr inbounds %struct.GPR, %struct.GPR* %242, i32 0, i32 33
  %244 = getelementptr inbounds %struct.Reg, %struct.Reg* %243, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %244 to i64*
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %246 = getelementptr inbounds %struct.GPR, %struct.GPR* %245, i32 0, i32 1
  %247 = getelementptr inbounds %struct.Reg, %struct.Reg* %246, i32 0, i32 0
  %RAX.i1261 = bitcast %union.anon* %247 to i64*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %249 = getelementptr inbounds %struct.GPR, %struct.GPR* %248, i32 0, i32 15
  %250 = getelementptr inbounds %struct.Reg, %struct.Reg* %249, i32 0, i32 0
  %RBP.i1262 = bitcast %union.anon* %250 to i64*
  %251 = load i64, i64* %RBP.i1262
  %252 = sub i64 %251, 624
  %253 = load i64, i64* %PC.i1260
  %254 = add i64 %253, 7
  store i64 %254, i64* %PC.i1260
  store i64 %252, i64* %RAX.i1261, align 8
  store %struct.Memory* %loadMem_4039da, %struct.Memory** %MEMORY
  %loadMem_4039e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %256 = getelementptr inbounds %struct.GPR, %struct.GPR* %255, i32 0, i32 33
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %259 = getelementptr inbounds %struct.GPR, %struct.GPR* %258, i32 0, i32 11
  %260 = getelementptr inbounds %struct.Reg, %struct.Reg* %259, i32 0, i32 0
  %RDI.i1258 = bitcast %union.anon* %260 to i64*
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %262 = getelementptr inbounds %struct.GPR, %struct.GPR* %261, i32 0, i32 15
  %263 = getelementptr inbounds %struct.Reg, %struct.Reg* %262, i32 0, i32 0
  %RBP.i1259 = bitcast %union.anon* %263 to i64*
  %264 = load i64, i64* %RBP.i1259
  %265 = sub i64 %264, 188
  %266 = load i64, i64* %PC.i1257
  %267 = add i64 %266, 6
  store i64 %267, i64* %PC.i1257
  %268 = inttoptr i64 %265 to i32*
  %269 = load i32, i32* %268
  %270 = zext i32 %269 to i64
  store i64 %270, i64* %RDI.i1258, align 8
  store %struct.Memory* %loadMem_4039e1, %struct.Memory** %MEMORY
  %loadMem_4039e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %272 = getelementptr inbounds %struct.GPR, %struct.GPR* %271, i32 0, i32 33
  %273 = getelementptr inbounds %struct.Reg, %struct.Reg* %272, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %273 to i64*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %275 = getelementptr inbounds %struct.GPR, %struct.GPR* %274, i32 0, i32 7
  %276 = getelementptr inbounds %struct.Reg, %struct.Reg* %275, i32 0, i32 0
  %RDX.i1255 = bitcast %union.anon* %276 to i64*
  %277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %278 = getelementptr inbounds %struct.GPR, %struct.GPR* %277, i32 0, i32 15
  %279 = getelementptr inbounds %struct.Reg, %struct.Reg* %278, i32 0, i32 0
  %RBP.i1256 = bitcast %union.anon* %279 to i64*
  %280 = load i64, i64* %RBP.i1256
  %281 = sub i64 %280, 148
  %282 = load i64, i64* %PC.i1254
  %283 = add i64 %282, 6
  store i64 %283, i64* %PC.i1254
  %284 = inttoptr i64 %281 to i32*
  %285 = load i32, i32* %284
  %286 = zext i32 %285 to i64
  store i64 %286, i64* %RDX.i1255, align 8
  store %struct.Memory* %loadMem_4039e7, %struct.Memory** %MEMORY
  %loadMem_4039ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %288 = getelementptr inbounds %struct.GPR, %struct.GPR* %287, i32 0, i32 33
  %289 = getelementptr inbounds %struct.Reg, %struct.Reg* %288, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %289 to i64*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %291 = getelementptr inbounds %struct.GPR, %struct.GPR* %290, i32 0, i32 7
  %292 = getelementptr inbounds %struct.Reg, %struct.Reg* %291, i32 0, i32 0
  %RDX.i1253 = bitcast %union.anon* %292 to i64*
  %293 = load i64, i64* %RDX.i1253
  %294 = load i64, i64* %PC.i1252
  %295 = add i64 %294, 3
  store i64 %295, i64* %PC.i1252
  %296 = trunc i64 %293 to i32
  %297 = sub i32 %296, 1
  %298 = zext i32 %297 to i64
  store i64 %298, i64* %RDX.i1253, align 8
  %299 = icmp ult i32 %296, 1
  %300 = zext i1 %299 to i8
  %301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %300, i8* %301, align 1
  %302 = and i32 %297, 255
  %303 = call i32 @llvm.ctpop.i32(i32 %302)
  %304 = trunc i32 %303 to i8
  %305 = and i8 %304, 1
  %306 = xor i8 %305, 1
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %306, i8* %307, align 1
  %308 = xor i64 1, %293
  %309 = trunc i64 %308 to i32
  %310 = xor i32 %309, %297
  %311 = lshr i32 %310, 4
  %312 = trunc i32 %311 to i8
  %313 = and i8 %312, 1
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %313, i8* %314, align 1
  %315 = icmp eq i32 %297, 0
  %316 = zext i1 %315 to i8
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %316, i8* %317, align 1
  %318 = lshr i32 %297, 31
  %319 = trunc i32 %318 to i8
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %319, i8* %320, align 1
  %321 = lshr i32 %296, 31
  %322 = xor i32 %318, %321
  %323 = add i32 %322, %321
  %324 = icmp eq i32 %323, 2
  %325 = zext i1 %324 to i8
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %325, i8* %326, align 1
  store %struct.Memory* %loadMem_4039ed, %struct.Memory** %MEMORY
  %loadMem_4039f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %328 = getelementptr inbounds %struct.GPR, %struct.GPR* %327, i32 0, i32 33
  %329 = getelementptr inbounds %struct.Reg, %struct.Reg* %328, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %329 to i64*
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %331 = getelementptr inbounds %struct.GPR, %struct.GPR* %330, i32 0, i32 15
  %332 = getelementptr inbounds %struct.Reg, %struct.Reg* %331, i32 0, i32 0
  %RBP.i1250 = bitcast %union.anon* %332 to i64*
  %333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %334 = getelementptr inbounds %struct.GPR, %struct.GPR* %333, i32 0, i32 17
  %335 = getelementptr inbounds %struct.Reg, %struct.Reg* %334, i32 0, i32 0
  %R8.i1251 = bitcast %union.anon* %335 to i64*
  %336 = load i64, i64* %RBP.i1250
  %337 = sub i64 %336, 148
  %338 = load i64, i64* %PC.i1249
  %339 = add i64 %338, 7
  store i64 %339, i64* %PC.i1249
  %340 = inttoptr i64 %337 to i32*
  %341 = load i32, i32* %340
  %342 = sext i32 %341 to i64
  store i64 %342, i64* %R8.i1251, align 8
  store %struct.Memory* %loadMem_4039f0, %struct.Memory** %MEMORY
  %loadMem_4039f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %344 = getelementptr inbounds %struct.GPR, %struct.GPR* %343, i32 0, i32 33
  %345 = getelementptr inbounds %struct.Reg, %struct.Reg* %344, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %345 to i64*
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %347 = getelementptr inbounds %struct.GPR, %struct.GPR* %346, i32 0, i32 17
  %348 = getelementptr inbounds %struct.Reg, %struct.Reg* %347, i32 0, i32 0
  %R8.i1248 = bitcast %union.anon* %348 to i64*
  %349 = load i64, i64* %R8.i1248
  %350 = load i64, i64* %PC.i1247
  %351 = add i64 %350, 4
  store i64 %351, i64* %PC.i1247
  %352 = sext i64 %349 to i128
  %353 = and i128 %352, -18446744073709551616
  %354 = zext i64 %349 to i128
  %355 = or i128 %353, %354
  %356 = mul i128 24, %355
  %357 = trunc i128 %356 to i64
  store i64 %357, i64* %R8.i1248, align 8
  %358 = sext i64 %357 to i128
  %359 = icmp ne i128 %358, %356
  %360 = zext i1 %359 to i8
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %360, i8* %361, align 1
  %362 = trunc i128 %356 to i32
  %363 = and i32 %362, 255
  %364 = call i32 @llvm.ctpop.i32(i32 %363)
  %365 = trunc i32 %364 to i8
  %366 = and i8 %365, 1
  %367 = xor i8 %366, 1
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %367, i8* %368, align 1
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %369, align 1
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %370, align 1
  %371 = lshr i64 %357, 63
  %372 = trunc i64 %371 to i8
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %372, i8* %373, align 1
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %360, i8* %374, align 1
  store %struct.Memory* %loadMem_4039f7, %struct.Memory** %MEMORY
  %loadMem_4039fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %376 = getelementptr inbounds %struct.GPR, %struct.GPR* %375, i32 0, i32 33
  %377 = getelementptr inbounds %struct.Reg, %struct.Reg* %376, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %377 to i64*
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %379 = getelementptr inbounds %struct.GPR, %struct.GPR* %378, i32 0, i32 1
  %380 = getelementptr inbounds %struct.Reg, %struct.Reg* %379, i32 0, i32 0
  %RAX.i1245 = bitcast %union.anon* %380 to i64*
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %382 = getelementptr inbounds %struct.GPR, %struct.GPR* %381, i32 0, i32 17
  %383 = getelementptr inbounds %struct.Reg, %struct.Reg* %382, i32 0, i32 0
  %R8.i1246 = bitcast %union.anon* %383 to i64*
  %384 = load i64, i64* %RAX.i1245
  %385 = load i64, i64* %R8.i1246
  %386 = load i64, i64* %PC.i1244
  %387 = add i64 %386, 3
  store i64 %387, i64* %PC.i1244
  %388 = add i64 %385, %384
  store i64 %388, i64* %RAX.i1245, align 8
  %389 = icmp ult i64 %388, %384
  %390 = icmp ult i64 %388, %385
  %391 = or i1 %389, %390
  %392 = zext i1 %391 to i8
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %392, i8* %393, align 1
  %394 = trunc i64 %388 to i32
  %395 = and i32 %394, 255
  %396 = call i32 @llvm.ctpop.i32(i32 %395)
  %397 = trunc i32 %396 to i8
  %398 = and i8 %397, 1
  %399 = xor i8 %398, 1
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %399, i8* %400, align 1
  %401 = xor i64 %385, %384
  %402 = xor i64 %401, %388
  %403 = lshr i64 %402, 4
  %404 = trunc i64 %403 to i8
  %405 = and i8 %404, 1
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %405, i8* %406, align 1
  %407 = icmp eq i64 %388, 0
  %408 = zext i1 %407 to i8
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %408, i8* %409, align 1
  %410 = lshr i64 %388, 63
  %411 = trunc i64 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %411, i8* %412, align 1
  %413 = lshr i64 %384, 63
  %414 = lshr i64 %385, 63
  %415 = xor i64 %410, %413
  %416 = xor i64 %410, %414
  %417 = add i64 %415, %416
  %418 = icmp eq i64 %417, 2
  %419 = zext i1 %418 to i8
  %420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %419, i8* %420, align 1
  store %struct.Memory* %loadMem_4039fb, %struct.Memory** %MEMORY
  %loadMem_4039fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %422 = getelementptr inbounds %struct.GPR, %struct.GPR* %421, i32 0, i32 33
  %423 = getelementptr inbounds %struct.Reg, %struct.Reg* %422, i32 0, i32 0
  %PC.i1241 = bitcast %union.anon* %423 to i64*
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %425 = getelementptr inbounds %struct.GPR, %struct.GPR* %424, i32 0, i32 1
  %426 = getelementptr inbounds %struct.Reg, %struct.Reg* %425, i32 0, i32 0
  %RAX.i1242 = bitcast %union.anon* %426 to i64*
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %428 = getelementptr inbounds %struct.GPR, %struct.GPR* %427, i32 0, i32 17
  %429 = getelementptr inbounds %struct.Reg, %struct.Reg* %428, i32 0, i32 0
  %R8.i1243 = bitcast %union.anon* %429 to i64*
  %430 = load i64, i64* %RAX.i1242
  %431 = load i64, i64* %PC.i1241
  %432 = add i64 %431, 3
  store i64 %432, i64* %PC.i1241
  store i64 %430, i64* %R8.i1243, align 8
  store %struct.Memory* %loadMem_4039fe, %struct.Memory** %MEMORY
  %loadMem1_403a01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %434 = getelementptr inbounds %struct.GPR, %struct.GPR* %433, i32 0, i32 33
  %435 = getelementptr inbounds %struct.Reg, %struct.Reg* %434, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %435 to i64*
  %436 = load i64, i64* %PC.i1240
  %437 = add i64 %436, 292783
  %438 = load i64, i64* %PC.i1240
  %439 = add i64 %438, 5
  %440 = load i64, i64* %PC.i1240
  %441 = add i64 %440, 5
  store i64 %441, i64* %PC.i1240
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %443 = load i64, i64* %442, align 8
  %444 = add i64 %443, -8
  %445 = inttoptr i64 %444 to i64*
  store i64 %439, i64* %445
  store i64 %444, i64* %442, align 8
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %437, i64* %446, align 8
  store %struct.Memory* %loadMem1_403a01, %struct.Memory** %MEMORY
  %loadMem2_403a01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_403a01 = load i64, i64* %3
  %call2_403a01 = call %struct.Memory* @sub_44b1b0.getNeighbour(%struct.State* %0, i64 %loadPC_403a01, %struct.Memory* %loadMem2_403a01)
  store %struct.Memory* %call2_403a01, %struct.Memory** %MEMORY
  %loadMem_403a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %448 = getelementptr inbounds %struct.GPR, %struct.GPR* %447, i32 0, i32 33
  %449 = getelementptr inbounds %struct.Reg, %struct.Reg* %448, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %449 to i64*
  %450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %451 = getelementptr inbounds %struct.GPR, %struct.GPR* %450, i32 0, i32 1
  %452 = getelementptr inbounds %struct.Reg, %struct.Reg* %451, i32 0, i32 0
  %RAX.i1238 = bitcast %union.anon* %452 to i64*
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %454 = getelementptr inbounds %struct.GPR, %struct.GPR* %453, i32 0, i32 15
  %455 = getelementptr inbounds %struct.Reg, %struct.Reg* %454, i32 0, i32 0
  %RBP.i1239 = bitcast %union.anon* %455 to i64*
  %456 = load i64, i64* %RBP.i1239
  %457 = sub i64 %456, 148
  %458 = load i64, i64* %PC.i1237
  %459 = add i64 %458, 6
  store i64 %459, i64* %PC.i1237
  %460 = inttoptr i64 %457 to i32*
  %461 = load i32, i32* %460
  %462 = zext i32 %461 to i64
  store i64 %462, i64* %RAX.i1238, align 8
  store %struct.Memory* %loadMem_403a06, %struct.Memory** %MEMORY
  %loadMem_403a0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %464 = getelementptr inbounds %struct.GPR, %struct.GPR* %463, i32 0, i32 33
  %465 = getelementptr inbounds %struct.Reg, %struct.Reg* %464, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %465 to i64*
  %466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %467 = getelementptr inbounds %struct.GPR, %struct.GPR* %466, i32 0, i32 1
  %468 = getelementptr inbounds %struct.Reg, %struct.Reg* %467, i32 0, i32 0
  %RAX.i1236 = bitcast %union.anon* %468 to i64*
  %469 = load i64, i64* %RAX.i1236
  %470 = load i64, i64* %PC.i1235
  %471 = add i64 %470, 3
  store i64 %471, i64* %PC.i1235
  %472 = trunc i64 %469 to i32
  %473 = add i32 1, %472
  %474 = zext i32 %473 to i64
  store i64 %474, i64* %RAX.i1236, align 8
  %475 = icmp ult i32 %473, %472
  %476 = icmp ult i32 %473, 1
  %477 = or i1 %475, %476
  %478 = zext i1 %477 to i8
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %478, i8* %479, align 1
  %480 = and i32 %473, 255
  %481 = call i32 @llvm.ctpop.i32(i32 %480)
  %482 = trunc i32 %481 to i8
  %483 = and i8 %482, 1
  %484 = xor i8 %483, 1
  %485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %484, i8* %485, align 1
  %486 = xor i64 1, %469
  %487 = trunc i64 %486 to i32
  %488 = xor i32 %487, %473
  %489 = lshr i32 %488, 4
  %490 = trunc i32 %489 to i8
  %491 = and i8 %490, 1
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %491, i8* %492, align 1
  %493 = icmp eq i32 %473, 0
  %494 = zext i1 %493 to i8
  %495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %494, i8* %495, align 1
  %496 = lshr i32 %473, 31
  %497 = trunc i32 %496 to i8
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %497, i8* %498, align 1
  %499 = lshr i32 %472, 31
  %500 = xor i32 %496, %499
  %501 = add i32 %500, %496
  %502 = icmp eq i32 %501, 2
  %503 = zext i1 %502 to i8
  %504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %503, i8* %504, align 1
  store %struct.Memory* %loadMem_403a0c, %struct.Memory** %MEMORY
  %loadMem_403a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %506 = getelementptr inbounds %struct.GPR, %struct.GPR* %505, i32 0, i32 33
  %507 = getelementptr inbounds %struct.Reg, %struct.Reg* %506, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %507 to i64*
  %508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %509 = getelementptr inbounds %struct.GPR, %struct.GPR* %508, i32 0, i32 1
  %510 = getelementptr inbounds %struct.Reg, %struct.Reg* %509, i32 0, i32 0
  %EAX.i1233 = bitcast %union.anon* %510 to i32*
  %511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %512 = getelementptr inbounds %struct.GPR, %struct.GPR* %511, i32 0, i32 15
  %513 = getelementptr inbounds %struct.Reg, %struct.Reg* %512, i32 0, i32 0
  %RBP.i1234 = bitcast %union.anon* %513 to i64*
  %514 = load i64, i64* %RBP.i1234
  %515 = sub i64 %514, 148
  %516 = load i32, i32* %EAX.i1233
  %517 = zext i32 %516 to i64
  %518 = load i64, i64* %PC.i1232
  %519 = add i64 %518, 6
  store i64 %519, i64* %PC.i1232
  %520 = inttoptr i64 %515 to i32*
  store i32 %516, i32* %520
  store %struct.Memory* %loadMem_403a0f, %struct.Memory** %MEMORY
  %loadMem_403a15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %522 = getelementptr inbounds %struct.GPR, %struct.GPR* %521, i32 0, i32 33
  %523 = getelementptr inbounds %struct.Reg, %struct.Reg* %522, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %523 to i64*
  %524 = load i64, i64* %PC.i1231
  %525 = add i64 %524, -82
  %526 = load i64, i64* %PC.i1231
  %527 = add i64 %526, 5
  store i64 %527, i64* %PC.i1231
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %525, i64* %528, align 8
  store %struct.Memory* %loadMem_403a15, %struct.Memory** %MEMORY
  br label %block_.L_4039c3

block_.L_403a1a:                                  ; preds = %block_.L_4039c3
  %loadMem_403a1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 33
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %531 to i64*
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %533 = getelementptr inbounds %struct.GPR, %struct.GPR* %532, i32 0, i32 9
  %534 = getelementptr inbounds %struct.Reg, %struct.Reg* %533, i32 0, i32 0
  %ESI.i1229 = bitcast %union.anon* %534 to i32*
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %536 = getelementptr inbounds %struct.GPR, %struct.GPR* %535, i32 0, i32 9
  %537 = getelementptr inbounds %struct.Reg, %struct.Reg* %536, i32 0, i32 0
  %RSI.i1230 = bitcast %union.anon* %537 to i64*
  %538 = load i64, i64* %RSI.i1230
  %539 = load i32, i32* %ESI.i1229
  %540 = zext i32 %539 to i64
  %541 = load i64, i64* %PC.i1228
  %542 = add i64 %541, 2
  store i64 %542, i64* %PC.i1228
  %543 = xor i64 %540, %538
  %544 = trunc i64 %543 to i32
  %545 = and i64 %543, 4294967295
  store i64 %545, i64* %RSI.i1230, align 8
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %546, align 1
  %547 = and i32 %544, 255
  %548 = call i32 @llvm.ctpop.i32(i32 %547)
  %549 = trunc i32 %548 to i8
  %550 = and i8 %549, 1
  %551 = xor i8 %550, 1
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %551, i8* %552, align 1
  %553 = icmp eq i32 %544, 0
  %554 = zext i1 %553 to i8
  %555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %554, i8* %555, align 1
  %556 = lshr i32 %544, 31
  %557 = trunc i32 %556 to i8
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %557, i8* %558, align 1
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %559, align 1
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %560, align 1
  store %struct.Memory* %loadMem_403a1a, %struct.Memory** %MEMORY
  %loadMem_403a1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %562 = getelementptr inbounds %struct.GPR, %struct.GPR* %561, i32 0, i32 33
  %563 = getelementptr inbounds %struct.Reg, %struct.Reg* %562, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %563 to i64*
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %565 = getelementptr inbounds %struct.GPR, %struct.GPR* %564, i32 0, i32 7
  %566 = getelementptr inbounds %struct.Reg, %struct.Reg* %565, i32 0, i32 0
  %RDX.i1227 = bitcast %union.anon* %566 to i64*
  %567 = load i64, i64* %PC.i1226
  %568 = add i64 %567, 5
  store i64 %568, i64* %PC.i1226
  store i64 4294967295, i64* %RDX.i1227, align 8
  store %struct.Memory* %loadMem_403a1c, %struct.Memory** %MEMORY
  %loadMem_403a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %570 = getelementptr inbounds %struct.GPR, %struct.GPR* %569, i32 0, i32 33
  %571 = getelementptr inbounds %struct.Reg, %struct.Reg* %570, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %571 to i64*
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 5
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %RCX.i1225 = bitcast %union.anon* %574 to i64*
  %575 = load i64, i64* %PC.i1224
  %576 = add i64 %575, 5
  store i64 %576, i64* %PC.i1224
  store i64 1, i64* %RCX.i1225, align 8
  store %struct.Memory* %loadMem_403a21, %struct.Memory** %MEMORY
  %loadMem_403a26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %578 = getelementptr inbounds %struct.GPR, %struct.GPR* %577, i32 0, i32 33
  %579 = getelementptr inbounds %struct.Reg, %struct.Reg* %578, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %579 to i64*
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %581 = getelementptr inbounds %struct.GPR, %struct.GPR* %580, i32 0, i32 15
  %582 = getelementptr inbounds %struct.Reg, %struct.Reg* %581, i32 0, i32 0
  %RBP.i1222 = bitcast %union.anon* %582 to i64*
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %584 = getelementptr inbounds %struct.GPR, %struct.GPR* %583, i32 0, i32 17
  %585 = getelementptr inbounds %struct.Reg, %struct.Reg* %584, i32 0, i32 0
  %R8.i1223 = bitcast %union.anon* %585 to i64*
  %586 = load i64, i64* %RBP.i1222
  %587 = sub i64 %586, 216
  %588 = load i64, i64* %PC.i1221
  %589 = add i64 %588, 7
  store i64 %589, i64* %PC.i1221
  store i64 %587, i64* %R8.i1223, align 8
  store %struct.Memory* %loadMem_403a26, %struct.Memory** %MEMORY
  %loadMem_403a2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %591 = getelementptr inbounds %struct.GPR, %struct.GPR* %590, i32 0, i32 33
  %592 = getelementptr inbounds %struct.Reg, %struct.Reg* %591, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %592 to i64*
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %594 = getelementptr inbounds %struct.GPR, %struct.GPR* %593, i32 0, i32 11
  %595 = getelementptr inbounds %struct.Reg, %struct.Reg* %594, i32 0, i32 0
  %RDI.i1219 = bitcast %union.anon* %595 to i64*
  %596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %597 = getelementptr inbounds %struct.GPR, %struct.GPR* %596, i32 0, i32 15
  %598 = getelementptr inbounds %struct.Reg, %struct.Reg* %597, i32 0, i32 0
  %RBP.i1220 = bitcast %union.anon* %598 to i64*
  %599 = load i64, i64* %RBP.i1220
  %600 = sub i64 %599, 188
  %601 = load i64, i64* %PC.i1218
  %602 = add i64 %601, 6
  store i64 %602, i64* %PC.i1218
  %603 = inttoptr i64 %600 to i32*
  %604 = load i32, i32* %603
  %605 = zext i32 %604 to i64
  store i64 %605, i64* %RDI.i1219, align 8
  store %struct.Memory* %loadMem_403a2d, %struct.Memory** %MEMORY
  %loadMem1_403a33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %607 = getelementptr inbounds %struct.GPR, %struct.GPR* %606, i32 0, i32 33
  %608 = getelementptr inbounds %struct.Reg, %struct.Reg* %607, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %608 to i64*
  %609 = load i64, i64* %PC.i1217
  %610 = add i64 %609, 292733
  %611 = load i64, i64* %PC.i1217
  %612 = add i64 %611, 5
  %613 = load i64, i64* %PC.i1217
  %614 = add i64 %613, 5
  store i64 %614, i64* %PC.i1217
  %615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %616 = load i64, i64* %615, align 8
  %617 = add i64 %616, -8
  %618 = inttoptr i64 %617 to i64*
  store i64 %612, i64* %618
  store i64 %617, i64* %615, align 8
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %610, i64* %619, align 8
  store %struct.Memory* %loadMem1_403a33, %struct.Memory** %MEMORY
  %loadMem2_403a33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_403a33 = load i64, i64* %3
  %call2_403a33 = call %struct.Memory* @sub_44b1b0.getNeighbour(%struct.State* %0, i64 %loadPC_403a33, %struct.Memory* %loadMem2_403a33)
  store %struct.Memory* %call2_403a33, %struct.Memory** %MEMORY
  %loadMem_403a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %621 = getelementptr inbounds %struct.GPR, %struct.GPR* %620, i32 0, i32 33
  %622 = getelementptr inbounds %struct.Reg, %struct.Reg* %621, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %622 to i64*
  %623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %624 = getelementptr inbounds %struct.GPR, %struct.GPR* %623, i32 0, i32 17
  %625 = getelementptr inbounds %struct.Reg, %struct.Reg* %624, i32 0, i32 0
  %R8.i1216 = bitcast %union.anon* %625 to i64*
  %626 = load i64, i64* %PC.i1215
  %627 = add i64 %626, 8
  store i64 %627, i64* %PC.i1215
  %628 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %628, i64* %R8.i1216, align 8
  store %struct.Memory* %loadMem_403a38, %struct.Memory** %MEMORY
  %loadMem_403a40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %630 = getelementptr inbounds %struct.GPR, %struct.GPR* %629, i32 0, i32 33
  %631 = getelementptr inbounds %struct.Reg, %struct.Reg* %630, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %631 to i64*
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %633 = getelementptr inbounds %struct.GPR, %struct.GPR* %632, i32 0, i32 17
  %634 = getelementptr inbounds %struct.Reg, %struct.Reg* %633, i32 0, i32 0
  %R8.i1214 = bitcast %union.anon* %634 to i64*
  %635 = load i64, i64* %R8.i1214
  %636 = add i64 %635, 216
  %637 = load i64, i64* %PC.i1213
  %638 = add i64 %637, 8
  store i64 %638, i64* %PC.i1213
  %639 = inttoptr i64 %636 to i32*
  %640 = load i32, i32* %639
  %641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %641, align 1
  %642 = and i32 %640, 255
  %643 = call i32 @llvm.ctpop.i32(i32 %642)
  %644 = trunc i32 %643 to i8
  %645 = and i8 %644, 1
  %646 = xor i8 %645, 1
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %646, i8* %647, align 1
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %648, align 1
  %649 = icmp eq i32 %640, 0
  %650 = zext i1 %649 to i8
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %650, i8* %651, align 1
  %652 = lshr i32 %640, 31
  %653 = trunc i32 %652 to i8
  %654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %653, i8* %654, align 1
  %655 = lshr i32 %640, 31
  %656 = xor i32 %652, %655
  %657 = add i32 %656, %655
  %658 = icmp eq i32 %657, 2
  %659 = zext i1 %658 to i8
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %659, i8* %660, align 1
  store %struct.Memory* %loadMem_403a40, %struct.Memory** %MEMORY
  %loadMem_403a48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %662 = getelementptr inbounds %struct.GPR, %struct.GPR* %661, i32 0, i32 33
  %663 = getelementptr inbounds %struct.Reg, %struct.Reg* %662, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %663 to i64*
  %664 = load i64, i64* %PC.i1212
  %665 = add i64 %664, 47
  %666 = load i64, i64* %PC.i1212
  %667 = add i64 %666, 6
  %668 = load i64, i64* %PC.i1212
  %669 = add i64 %668, 6
  store i64 %669, i64* %PC.i1212
  %670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %671 = load i8, i8* %670, align 1
  %672 = icmp eq i8 %671, 0
  %673 = zext i1 %672 to i8
  store i8 %673, i8* %BRANCH_TAKEN, align 1
  %674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %675 = select i1 %672, i64 %665, i64 %667
  store i64 %675, i64* %674, align 8
  store %struct.Memory* %loadMem_403a48, %struct.Memory** %MEMORY
  %loadBr_403a48 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403a48 = icmp eq i8 %loadBr_403a48, 1
  br i1 %cmpBr_403a48, label %block_.L_403a77, label %block_403a4e

block_403a4e:                                     ; preds = %block_.L_403a1a
  %loadMem_403a4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %677 = getelementptr inbounds %struct.GPR, %struct.GPR* %676, i32 0, i32 33
  %678 = getelementptr inbounds %struct.Reg, %struct.Reg* %677, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %678 to i64*
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %680 = getelementptr inbounds %struct.GPR, %struct.GPR* %679, i32 0, i32 1
  %681 = getelementptr inbounds %struct.Reg, %struct.Reg* %680, i32 0, i32 0
  %RAX.i1210 = bitcast %union.anon* %681 to i64*
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %683 = getelementptr inbounds %struct.GPR, %struct.GPR* %682, i32 0, i32 15
  %684 = getelementptr inbounds %struct.Reg, %struct.Reg* %683, i32 0, i32 0
  %RBP.i1211 = bitcast %union.anon* %684 to i64*
  %685 = load i64, i64* %RBP.i1211
  %686 = sub i64 %685, 216
  %687 = load i64, i64* %PC.i1209
  %688 = add i64 %687, 6
  store i64 %688, i64* %PC.i1209
  %689 = inttoptr i64 %686 to i32*
  %690 = load i32, i32* %689
  %691 = zext i32 %690 to i64
  store i64 %691, i64* %RAX.i1210, align 8
  store %struct.Memory* %loadMem_403a4e, %struct.Memory** %MEMORY
  %loadMem_403a54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %693 = getelementptr inbounds %struct.GPR, %struct.GPR* %692, i32 0, i32 33
  %694 = getelementptr inbounds %struct.Reg, %struct.Reg* %693, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %694 to i64*
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %696 = getelementptr inbounds %struct.GPR, %struct.GPR* %695, i32 0, i32 1
  %697 = getelementptr inbounds %struct.Reg, %struct.Reg* %696, i32 0, i32 0
  %EAX.i1207 = bitcast %union.anon* %697 to i32*
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %699 = getelementptr inbounds %struct.GPR, %struct.GPR* %698, i32 0, i32 15
  %700 = getelementptr inbounds %struct.Reg, %struct.Reg* %699, i32 0, i32 0
  %RBP.i1208 = bitcast %union.anon* %700 to i64*
  %701 = load i64, i64* %RBP.i1208
  %702 = sub i64 %701, 628
  %703 = load i32, i32* %EAX.i1207
  %704 = zext i32 %703 to i64
  %705 = load i64, i64* %PC.i1206
  %706 = add i64 %705, 6
  store i64 %706, i64* %PC.i1206
  %707 = inttoptr i64 %702 to i32*
  store i32 %703, i32* %707
  store %struct.Memory* %loadMem_403a54, %struct.Memory** %MEMORY
  %loadMem_403a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %709 = getelementptr inbounds %struct.GPR, %struct.GPR* %708, i32 0, i32 33
  %710 = getelementptr inbounds %struct.Reg, %struct.Reg* %709, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %710 to i64*
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %712 = getelementptr inbounds %struct.GPR, %struct.GPR* %711, i32 0, i32 1
  %713 = getelementptr inbounds %struct.Reg, %struct.Reg* %712, i32 0, i32 0
  %RAX.i1204 = bitcast %union.anon* %713 to i64*
  %714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %715 = getelementptr inbounds %struct.GPR, %struct.GPR* %714, i32 0, i32 15
  %716 = getelementptr inbounds %struct.Reg, %struct.Reg* %715, i32 0, i32 0
  %RBP.i1205 = bitcast %union.anon* %716 to i64*
  %717 = load i64, i64* %RBP.i1205
  %718 = sub i64 %717, 600
  %719 = load i64, i64* %PC.i1203
  %720 = add i64 %719, 6
  store i64 %720, i64* %PC.i1203
  %721 = inttoptr i64 %718 to i32*
  %722 = load i32, i32* %721
  %723 = zext i32 %722 to i64
  store i64 %723, i64* %RAX.i1204, align 8
  store %struct.Memory* %loadMem_403a5a, %struct.Memory** %MEMORY
  %loadMem_403a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %725 = getelementptr inbounds %struct.GPR, %struct.GPR* %724, i32 0, i32 33
  %726 = getelementptr inbounds %struct.Reg, %struct.Reg* %725, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %726 to i64*
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %728 = getelementptr inbounds %struct.GPR, %struct.GPR* %727, i32 0, i32 1
  %729 = getelementptr inbounds %struct.Reg, %struct.Reg* %728, i32 0, i32 0
  %EAX.i1201 = bitcast %union.anon* %729 to i32*
  %730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %731 = getelementptr inbounds %struct.GPR, %struct.GPR* %730, i32 0, i32 15
  %732 = getelementptr inbounds %struct.Reg, %struct.Reg* %731, i32 0, i32 0
  %RBP.i1202 = bitcast %union.anon* %732 to i64*
  %733 = load i64, i64* %RBP.i1202
  %734 = sub i64 %733, 632
  %735 = load i32, i32* %EAX.i1201
  %736 = zext i32 %735 to i64
  %737 = load i64, i64* %PC.i1200
  %738 = add i64 %737, 6
  store i64 %738, i64* %PC.i1200
  %739 = inttoptr i64 %734 to i32*
  store i32 %735, i32* %739
  store %struct.Memory* %loadMem_403a60, %struct.Memory** %MEMORY
  %loadMem_403a66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %741 = getelementptr inbounds %struct.GPR, %struct.GPR* %740, i32 0, i32 33
  %742 = getelementptr inbounds %struct.Reg, %struct.Reg* %741, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %742 to i64*
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %744 = getelementptr inbounds %struct.GPR, %struct.GPR* %743, i32 0, i32 1
  %745 = getelementptr inbounds %struct.Reg, %struct.Reg* %744, i32 0, i32 0
  %RAX.i1198 = bitcast %union.anon* %745 to i64*
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %747 = getelementptr inbounds %struct.GPR, %struct.GPR* %746, i32 0, i32 15
  %748 = getelementptr inbounds %struct.Reg, %struct.Reg* %747, i32 0, i32 0
  %RBP.i1199 = bitcast %union.anon* %748 to i64*
  %749 = load i64, i64* %RBP.i1199
  %750 = sub i64 %749, 624
  %751 = load i64, i64* %PC.i1197
  %752 = add i64 %751, 6
  store i64 %752, i64* %PC.i1197
  %753 = inttoptr i64 %750 to i32*
  %754 = load i32, i32* %753
  %755 = zext i32 %754 to i64
  store i64 %755, i64* %RAX.i1198, align 8
  store %struct.Memory* %loadMem_403a66, %struct.Memory** %MEMORY
  %loadMem_403a6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %757 = getelementptr inbounds %struct.GPR, %struct.GPR* %756, i32 0, i32 33
  %758 = getelementptr inbounds %struct.Reg, %struct.Reg* %757, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %758 to i64*
  %759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %760 = getelementptr inbounds %struct.GPR, %struct.GPR* %759, i32 0, i32 1
  %761 = getelementptr inbounds %struct.Reg, %struct.Reg* %760, i32 0, i32 0
  %EAX.i1195 = bitcast %union.anon* %761 to i32*
  %762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %763 = getelementptr inbounds %struct.GPR, %struct.GPR* %762, i32 0, i32 15
  %764 = getelementptr inbounds %struct.Reg, %struct.Reg* %763, i32 0, i32 0
  %RBP.i1196 = bitcast %union.anon* %764 to i64*
  %765 = load i64, i64* %RBP.i1196
  %766 = sub i64 %765, 636
  %767 = load i32, i32* %EAX.i1195
  %768 = zext i32 %767 to i64
  %769 = load i64, i64* %PC.i1194
  %770 = add i64 %769, 6
  store i64 %770, i64* %PC.i1194
  %771 = inttoptr i64 %766 to i32*
  store i32 %767, i32* %771
  store %struct.Memory* %loadMem_403a6c, %struct.Memory** %MEMORY
  %loadMem_403a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %773 = getelementptr inbounds %struct.GPR, %struct.GPR* %772, i32 0, i32 33
  %774 = getelementptr inbounds %struct.Reg, %struct.Reg* %773, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %774 to i64*
  %775 = load i64, i64* %PC.i1193
  %776 = add i64 %775, 321
  %777 = load i64, i64* %PC.i1193
  %778 = add i64 %777, 5
  store i64 %778, i64* %PC.i1193
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %776, i64* %779, align 8
  store %struct.Memory* %loadMem_403a72, %struct.Memory** %MEMORY
  br label %block_.L_403bb3

block_.L_403a77:                                  ; preds = %block_.L_403a1a
  %loadMem_403a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %781 = getelementptr inbounds %struct.GPR, %struct.GPR* %780, i32 0, i32 33
  %782 = getelementptr inbounds %struct.Reg, %struct.Reg* %781, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %782 to i64*
  %783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %784 = getelementptr inbounds %struct.GPR, %struct.GPR* %783, i32 0, i32 15
  %785 = getelementptr inbounds %struct.Reg, %struct.Reg* %784, i32 0, i32 0
  %RBP.i1192 = bitcast %union.anon* %785 to i64*
  %786 = load i64, i64* %RBP.i1192
  %787 = sub i64 %786, 216
  %788 = load i64, i64* %PC.i1191
  %789 = add i64 %788, 7
  store i64 %789, i64* %PC.i1191
  %790 = inttoptr i64 %787 to i32*
  %791 = load i32, i32* %790
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %792, align 1
  %793 = and i32 %791, 255
  %794 = call i32 @llvm.ctpop.i32(i32 %793)
  %795 = trunc i32 %794 to i8
  %796 = and i8 %795, 1
  %797 = xor i8 %796, 1
  %798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %797, i8* %798, align 1
  %799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %799, align 1
  %800 = icmp eq i32 %791, 0
  %801 = zext i1 %800 to i8
  %802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %801, i8* %802, align 1
  %803 = lshr i32 %791, 31
  %804 = trunc i32 %803 to i8
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %804, i8* %805, align 1
  %806 = lshr i32 %791, 31
  %807 = xor i32 %803, %806
  %808 = add i32 %807, %806
  %809 = icmp eq i32 %808, 2
  %810 = zext i1 %809 to i8
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %810, i8* %811, align 1
  store %struct.Memory* %loadMem_403a77, %struct.Memory** %MEMORY
  %loadMem_403a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 33
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %814 to i64*
  %815 = load i64, i64* %PC.i1190
  %816 = add i64 %815, 42
  %817 = load i64, i64* %PC.i1190
  %818 = add i64 %817, 6
  %819 = load i64, i64* %PC.i1190
  %820 = add i64 %819, 6
  store i64 %820, i64* %PC.i1190
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %822 = load i8, i8* %821, align 1
  store i8 %822, i8* %BRANCH_TAKEN, align 1
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %824 = icmp ne i8 %822, 0
  %825 = select i1 %824, i64 %816, i64 %818
  store i64 %825, i64* %823, align 8
  store %struct.Memory* %loadMem_403a7e, %struct.Memory** %MEMORY
  %loadBr_403a7e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403a7e = icmp eq i8 %loadBr_403a7e, 1
  br i1 %cmpBr_403a7e, label %block_.L_403aa8, label %block_403a84

block_403a84:                                     ; preds = %block_.L_403a77
  %loadMem_403a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %827 = getelementptr inbounds %struct.GPR, %struct.GPR* %826, i32 0, i32 33
  %828 = getelementptr inbounds %struct.Reg, %struct.Reg* %827, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %828 to i64*
  %829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %830 = getelementptr inbounds %struct.GPR, %struct.GPR* %829, i32 0, i32 1
  %831 = getelementptr inbounds %struct.Reg, %struct.Reg* %830, i32 0, i32 0
  %RAX.i1189 = bitcast %union.anon* %831 to i64*
  %832 = load i64, i64* %PC.i1188
  %833 = add i64 %832, 8
  store i64 %833, i64* %PC.i1188
  %834 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %834, i64* %RAX.i1189, align 8
  store %struct.Memory* %loadMem_403a84, %struct.Memory** %MEMORY
  %loadMem_403a8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %836 = getelementptr inbounds %struct.GPR, %struct.GPR* %835, i32 0, i32 33
  %837 = getelementptr inbounds %struct.Reg, %struct.Reg* %836, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %837 to i64*
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %839 = getelementptr inbounds %struct.GPR, %struct.GPR* %838, i32 0, i32 1
  %840 = getelementptr inbounds %struct.Reg, %struct.Reg* %839, i32 0, i32 0
  %RAX.i1187 = bitcast %union.anon* %840 to i64*
  %841 = load i64, i64* %RAX.i1187
  %842 = add i64 %841, 71784
  %843 = load i64, i64* %PC.i1186
  %844 = add i64 %843, 7
  store i64 %844, i64* %PC.i1186
  %845 = inttoptr i64 %842 to i64*
  %846 = load i64, i64* %845
  store i64 %846, i64* %RAX.i1187, align 8
  store %struct.Memory* %loadMem_403a8c, %struct.Memory** %MEMORY
  %loadMem_403a93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %848 = getelementptr inbounds %struct.GPR, %struct.GPR* %847, i32 0, i32 33
  %849 = getelementptr inbounds %struct.Reg, %struct.Reg* %848, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %849 to i64*
  %850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %851 = getelementptr inbounds %struct.GPR, %struct.GPR* %850, i32 0, i32 5
  %852 = getelementptr inbounds %struct.Reg, %struct.Reg* %851, i32 0, i32 0
  %RCX.i1184 = bitcast %union.anon* %852 to i64*
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %854 = getelementptr inbounds %struct.GPR, %struct.GPR* %853, i32 0, i32 15
  %855 = getelementptr inbounds %struct.Reg, %struct.Reg* %854, i32 0, i32 0
  %RBP.i1185 = bitcast %union.anon* %855 to i64*
  %856 = load i64, i64* %RBP.i1185
  %857 = sub i64 %856, 212
  %858 = load i64, i64* %PC.i1183
  %859 = add i64 %858, 7
  store i64 %859, i64* %PC.i1183
  %860 = inttoptr i64 %857 to i32*
  %861 = load i32, i32* %860
  %862 = sext i32 %861 to i64
  store i64 %862, i64* %RCX.i1184, align 8
  store %struct.Memory* %loadMem_403a93, %struct.Memory** %MEMORY
  %loadMem_403a9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %864 = getelementptr inbounds %struct.GPR, %struct.GPR* %863, i32 0, i32 33
  %865 = getelementptr inbounds %struct.Reg, %struct.Reg* %864, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %865 to i64*
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %867 = getelementptr inbounds %struct.GPR, %struct.GPR* %866, i32 0, i32 1
  %868 = getelementptr inbounds %struct.Reg, %struct.Reg* %867, i32 0, i32 0
  %RAX.i1180 = bitcast %union.anon* %868 to i64*
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %870 = getelementptr inbounds %struct.GPR, %struct.GPR* %869, i32 0, i32 5
  %871 = getelementptr inbounds %struct.Reg, %struct.Reg* %870, i32 0, i32 0
  %RCX.i1181 = bitcast %union.anon* %871 to i64*
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %873 = getelementptr inbounds %struct.GPR, %struct.GPR* %872, i32 0, i32 7
  %874 = getelementptr inbounds %struct.Reg, %struct.Reg* %873, i32 0, i32 0
  %RDX.i1182 = bitcast %union.anon* %874 to i64*
  %875 = load i64, i64* %RAX.i1180
  %876 = load i64, i64* %RCX.i1181
  %877 = mul i64 %876, 4
  %878 = add i64 %877, %875
  %879 = load i64, i64* %PC.i1179
  %880 = add i64 %879, 3
  store i64 %880, i64* %PC.i1179
  %881 = inttoptr i64 %878 to i32*
  %882 = load i32, i32* %881
  %883 = zext i32 %882 to i64
  store i64 %883, i64* %RDX.i1182, align 8
  store %struct.Memory* %loadMem_403a9a, %struct.Memory** %MEMORY
  %loadMem_403a9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 33
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %886 to i64*
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 7
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %EDX.i1177 = bitcast %union.anon* %889 to i32*
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %891 = getelementptr inbounds %struct.GPR, %struct.GPR* %890, i32 0, i32 15
  %892 = getelementptr inbounds %struct.Reg, %struct.Reg* %891, i32 0, i32 0
  %RBP.i1178 = bitcast %union.anon* %892 to i64*
  %893 = load i64, i64* %RBP.i1178
  %894 = sub i64 %893, 640
  %895 = load i32, i32* %EDX.i1177
  %896 = zext i32 %895 to i64
  %897 = load i64, i64* %PC.i1176
  %898 = add i64 %897, 6
  store i64 %898, i64* %PC.i1176
  %899 = inttoptr i64 %894 to i32*
  store i32 %895, i32* %899
  store %struct.Memory* %loadMem_403a9d, %struct.Memory** %MEMORY
  %loadMem_403aa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %901 = getelementptr inbounds %struct.GPR, %struct.GPR* %900, i32 0, i32 33
  %902 = getelementptr inbounds %struct.Reg, %struct.Reg* %901, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %902 to i64*
  %903 = load i64, i64* %PC.i1175
  %904 = add i64 %903, 18
  %905 = load i64, i64* %PC.i1175
  %906 = add i64 %905, 5
  store i64 %906, i64* %PC.i1175
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %904, i64* %907, align 8
  store %struct.Memory* %loadMem_403aa3, %struct.Memory** %MEMORY
  br label %block_.L_403ab5

block_.L_403aa8:                                  ; preds = %block_.L_403a77
  %loadMem_403aa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 33
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %910 to i64*
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %912 = getelementptr inbounds %struct.GPR, %struct.GPR* %911, i32 0, i32 1
  %913 = getelementptr inbounds %struct.Reg, %struct.Reg* %912, i32 0, i32 0
  %EAX.i1173 = bitcast %union.anon* %913 to i32*
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %915 = getelementptr inbounds %struct.GPR, %struct.GPR* %914, i32 0, i32 1
  %916 = getelementptr inbounds %struct.Reg, %struct.Reg* %915, i32 0, i32 0
  %RAX.i1174 = bitcast %union.anon* %916 to i64*
  %917 = load i64, i64* %RAX.i1174
  %918 = load i32, i32* %EAX.i1173
  %919 = zext i32 %918 to i64
  %920 = load i64, i64* %PC.i1172
  %921 = add i64 %920, 2
  store i64 %921, i64* %PC.i1172
  %922 = xor i64 %919, %917
  %923 = trunc i64 %922 to i32
  %924 = and i64 %922, 4294967295
  store i64 %924, i64* %RAX.i1174, align 8
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %925, align 1
  %926 = and i32 %923, 255
  %927 = call i32 @llvm.ctpop.i32(i32 %926)
  %928 = trunc i32 %927 to i8
  %929 = and i8 %928, 1
  %930 = xor i8 %929, 1
  %931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %930, i8* %931, align 1
  %932 = icmp eq i32 %923, 0
  %933 = zext i1 %932 to i8
  %934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %933, i8* %934, align 1
  %935 = lshr i32 %923, 31
  %936 = trunc i32 %935 to i8
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %936, i8* %937, align 1
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %938, align 1
  %939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %939, align 1
  store %struct.Memory* %loadMem_403aa8, %struct.Memory** %MEMORY
  %loadMem_403aaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %941 = getelementptr inbounds %struct.GPR, %struct.GPR* %940, i32 0, i32 33
  %942 = getelementptr inbounds %struct.Reg, %struct.Reg* %941, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %942 to i64*
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %944 = getelementptr inbounds %struct.GPR, %struct.GPR* %943, i32 0, i32 1
  %945 = getelementptr inbounds %struct.Reg, %struct.Reg* %944, i32 0, i32 0
  %EAX.i1170 = bitcast %union.anon* %945 to i32*
  %946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %947 = getelementptr inbounds %struct.GPR, %struct.GPR* %946, i32 0, i32 15
  %948 = getelementptr inbounds %struct.Reg, %struct.Reg* %947, i32 0, i32 0
  %RBP.i1171 = bitcast %union.anon* %948 to i64*
  %949 = load i64, i64* %RBP.i1171
  %950 = sub i64 %949, 640
  %951 = load i32, i32* %EAX.i1170
  %952 = zext i32 %951 to i64
  %953 = load i64, i64* %PC.i1169
  %954 = add i64 %953, 6
  store i64 %954, i64* %PC.i1169
  %955 = inttoptr i64 %950 to i32*
  store i32 %951, i32* %955
  store %struct.Memory* %loadMem_403aaa, %struct.Memory** %MEMORY
  %loadMem_403ab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %957 = getelementptr inbounds %struct.GPR, %struct.GPR* %956, i32 0, i32 33
  %958 = getelementptr inbounds %struct.Reg, %struct.Reg* %957, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %958 to i64*
  %959 = load i64, i64* %PC.i1168
  %960 = add i64 %959, 5
  %961 = load i64, i64* %PC.i1168
  %962 = add i64 %961, 5
  store i64 %962, i64* %PC.i1168
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %960, i64* %963, align 8
  store %struct.Memory* %loadMem_403ab0, %struct.Memory** %MEMORY
  br label %block_.L_403ab5

block_.L_403ab5:                                  ; preds = %block_.L_403aa8, %block_403a84
  %loadMem_403ab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %965 = getelementptr inbounds %struct.GPR, %struct.GPR* %964, i32 0, i32 33
  %966 = getelementptr inbounds %struct.Reg, %struct.Reg* %965, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %966 to i64*
  %967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %968 = getelementptr inbounds %struct.GPR, %struct.GPR* %967, i32 0, i32 1
  %969 = getelementptr inbounds %struct.Reg, %struct.Reg* %968, i32 0, i32 0
  %RAX.i1166 = bitcast %union.anon* %969 to i64*
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %971 = getelementptr inbounds %struct.GPR, %struct.GPR* %970, i32 0, i32 15
  %972 = getelementptr inbounds %struct.Reg, %struct.Reg* %971, i32 0, i32 0
  %RBP.i1167 = bitcast %union.anon* %972 to i64*
  %973 = load i64, i64* %RBP.i1167
  %974 = sub i64 %973, 640
  %975 = load i64, i64* %PC.i1165
  %976 = add i64 %975, 6
  store i64 %976, i64* %PC.i1165
  %977 = inttoptr i64 %974 to i32*
  %978 = load i32, i32* %977
  %979 = zext i32 %978 to i64
  store i64 %979, i64* %RAX.i1166, align 8
  store %struct.Memory* %loadMem_403ab5, %struct.Memory** %MEMORY
  %loadMem_403abb = load %struct.Memory*, %struct.Memory** %MEMORY
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %981 = getelementptr inbounds %struct.GPR, %struct.GPR* %980, i32 0, i32 33
  %982 = getelementptr inbounds %struct.Reg, %struct.Reg* %981, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %982 to i64*
  %983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %984 = getelementptr inbounds %struct.GPR, %struct.GPR* %983, i32 0, i32 1
  %985 = getelementptr inbounds %struct.Reg, %struct.Reg* %984, i32 0, i32 0
  %EAX.i1163 = bitcast %union.anon* %985 to i32*
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %987 = getelementptr inbounds %struct.GPR, %struct.GPR* %986, i32 0, i32 15
  %988 = getelementptr inbounds %struct.Reg, %struct.Reg* %987, i32 0, i32 0
  %RBP.i1164 = bitcast %union.anon* %988 to i64*
  %989 = load i64, i64* %RBP.i1164
  %990 = sub i64 %989, 628
  %991 = load i32, i32* %EAX.i1163
  %992 = zext i32 %991 to i64
  %993 = load i64, i64* %PC.i1162
  %994 = add i64 %993, 6
  store i64 %994, i64* %PC.i1162
  %995 = inttoptr i64 %990 to i32*
  store i32 %991, i32* %995
  store %struct.Memory* %loadMem_403abb, %struct.Memory** %MEMORY
  %loadMem_403ac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %997 = getelementptr inbounds %struct.GPR, %struct.GPR* %996, i32 0, i32 33
  %998 = getelementptr inbounds %struct.Reg, %struct.Reg* %997, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %998 to i64*
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1000 = getelementptr inbounds %struct.GPR, %struct.GPR* %999, i32 0, i32 15
  %1001 = getelementptr inbounds %struct.Reg, %struct.Reg* %1000, i32 0, i32 0
  %RBP.i1161 = bitcast %union.anon* %1001 to i64*
  %1002 = load i64, i64* %RBP.i1161
  %1003 = sub i64 %1002, 148
  %1004 = load i64, i64* %PC.i1160
  %1005 = add i64 %1004, 10
  store i64 %1005, i64* %PC.i1160
  %1006 = inttoptr i64 %1003 to i32*
  store i32 1, i32* %1006
  store %struct.Memory* %loadMem_403ac1, %struct.Memory** %MEMORY
  %loadMem_403acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1008 = getelementptr inbounds %struct.GPR, %struct.GPR* %1007, i32 0, i32 33
  %1009 = getelementptr inbounds %struct.Reg, %struct.Reg* %1008, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %1009 to i64*
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1011 = getelementptr inbounds %struct.GPR, %struct.GPR* %1010, i32 0, i32 15
  %1012 = getelementptr inbounds %struct.Reg, %struct.Reg* %1011, i32 0, i32 0
  %RBP.i1159 = bitcast %union.anon* %1012 to i64*
  %1013 = load i64, i64* %RBP.i1159
  %1014 = sub i64 %1013, 632
  %1015 = load i64, i64* %PC.i1158
  %1016 = add i64 %1015, 10
  store i64 %1016, i64* %PC.i1158
  %1017 = inttoptr i64 %1014 to i32*
  store i32 1, i32* %1017
  store %struct.Memory* %loadMem_403acb, %struct.Memory** %MEMORY
  br label %block_.L_403ad5

block_.L_403ad5:                                  ; preds = %block_.L_403b43, %block_.L_403ab5
  %loadMem_403ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1019 = getelementptr inbounds %struct.GPR, %struct.GPR* %1018, i32 0, i32 33
  %1020 = getelementptr inbounds %struct.Reg, %struct.Reg* %1019, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %1020 to i64*
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1022 = getelementptr inbounds %struct.GPR, %struct.GPR* %1021, i32 0, i32 15
  %1023 = getelementptr inbounds %struct.Reg, %struct.Reg* %1022, i32 0, i32 0
  %RBP.i1157 = bitcast %union.anon* %1023 to i64*
  %1024 = load i64, i64* %RBP.i1157
  %1025 = sub i64 %1024, 148
  %1026 = load i64, i64* %PC.i1156
  %1027 = add i64 %1026, 7
  store i64 %1027, i64* %PC.i1156
  %1028 = inttoptr i64 %1025 to i32*
  %1029 = load i32, i32* %1028
  %1030 = sub i32 %1029, 17
  %1031 = icmp ult i32 %1029, 17
  %1032 = zext i1 %1031 to i8
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1032, i8* %1033, align 1
  %1034 = and i32 %1030, 255
  %1035 = call i32 @llvm.ctpop.i32(i32 %1034)
  %1036 = trunc i32 %1035 to i8
  %1037 = and i8 %1036, 1
  %1038 = xor i8 %1037, 1
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1038, i8* %1039, align 1
  %1040 = xor i32 %1029, 17
  %1041 = xor i32 %1040, %1030
  %1042 = lshr i32 %1041, 4
  %1043 = trunc i32 %1042 to i8
  %1044 = and i8 %1043, 1
  %1045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1044, i8* %1045, align 1
  %1046 = icmp eq i32 %1030, 0
  %1047 = zext i1 %1046 to i8
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1047, i8* %1048, align 1
  %1049 = lshr i32 %1030, 31
  %1050 = trunc i32 %1049 to i8
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1050, i8* %1051, align 1
  %1052 = lshr i32 %1029, 31
  %1053 = xor i32 %1049, %1052
  %1054 = add i32 %1053, %1052
  %1055 = icmp eq i32 %1054, 2
  %1056 = zext i1 %1055 to i8
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1056, i8* %1057, align 1
  store %struct.Memory* %loadMem_403ad5, %struct.Memory** %MEMORY
  %loadMem_403adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1059 = getelementptr inbounds %struct.GPR, %struct.GPR* %1058, i32 0, i32 33
  %1060 = getelementptr inbounds %struct.Reg, %struct.Reg* %1059, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %1060 to i64*
  %1061 = load i64, i64* %PC.i1155
  %1062 = add i64 %1061, 141
  %1063 = load i64, i64* %PC.i1155
  %1064 = add i64 %1063, 6
  %1065 = load i64, i64* %PC.i1155
  %1066 = add i64 %1065, 6
  store i64 %1066, i64* %PC.i1155
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1068 = load i8, i8* %1067, align 1
  %1069 = icmp ne i8 %1068, 0
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1071 = load i8, i8* %1070, align 1
  %1072 = icmp ne i8 %1071, 0
  %1073 = xor i1 %1069, %1072
  %1074 = xor i1 %1073, true
  %1075 = zext i1 %1074 to i8
  store i8 %1075, i8* %BRANCH_TAKEN, align 1
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1077 = select i1 %1073, i64 %1064, i64 %1062
  store i64 %1077, i64* %1076, align 8
  store %struct.Memory* %loadMem_403adc, %struct.Memory** %MEMORY
  %loadBr_403adc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403adc = icmp eq i8 %loadBr_403adc, 1
  br i1 %cmpBr_403adc, label %block_.L_403b69, label %block_403ae2

block_403ae2:                                     ; preds = %block_.L_403ad5
  %loadMem_403ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1079 = getelementptr inbounds %struct.GPR, %struct.GPR* %1078, i32 0, i32 33
  %1080 = getelementptr inbounds %struct.Reg, %struct.Reg* %1079, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %1080 to i64*
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1082 = getelementptr inbounds %struct.GPR, %struct.GPR* %1081, i32 0, i32 1
  %1083 = getelementptr inbounds %struct.Reg, %struct.Reg* %1082, i32 0, i32 0
  %RAX.i1153 = bitcast %union.anon* %1083 to i64*
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1085 = getelementptr inbounds %struct.GPR, %struct.GPR* %1084, i32 0, i32 15
  %1086 = getelementptr inbounds %struct.Reg, %struct.Reg* %1085, i32 0, i32 0
  %RBP.i1154 = bitcast %union.anon* %1086 to i64*
  %1087 = load i64, i64* %RBP.i1154
  %1088 = sub i64 %1087, 624
  %1089 = load i64, i64* %PC.i1152
  %1090 = add i64 %1089, 7
  store i64 %1090, i64* %PC.i1152
  store i64 %1088, i64* %RAX.i1153, align 8
  store %struct.Memory* %loadMem_403ae2, %struct.Memory** %MEMORY
  %loadMem_403ae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1092 = getelementptr inbounds %struct.GPR, %struct.GPR* %1091, i32 0, i32 33
  %1093 = getelementptr inbounds %struct.Reg, %struct.Reg* %1092, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %1093 to i64*
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1095 = getelementptr inbounds %struct.GPR, %struct.GPR* %1094, i32 0, i32 5
  %1096 = getelementptr inbounds %struct.Reg, %struct.Reg* %1095, i32 0, i32 0
  %RCX.i1150 = bitcast %union.anon* %1096 to i64*
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1098 = getelementptr inbounds %struct.GPR, %struct.GPR* %1097, i32 0, i32 15
  %1099 = getelementptr inbounds %struct.Reg, %struct.Reg* %1098, i32 0, i32 0
  %RBP.i1151 = bitcast %union.anon* %1099 to i64*
  %1100 = load i64, i64* %RBP.i1151
  %1101 = sub i64 %1100, 148
  %1102 = load i64, i64* %PC.i1149
  %1103 = add i64 %1102, 7
  store i64 %1103, i64* %PC.i1149
  %1104 = inttoptr i64 %1101 to i32*
  %1105 = load i32, i32* %1104
  %1106 = sext i32 %1105 to i64
  store i64 %1106, i64* %RCX.i1150, align 8
  store %struct.Memory* %loadMem_403ae9, %struct.Memory** %MEMORY
  %loadMem_403af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1108 = getelementptr inbounds %struct.GPR, %struct.GPR* %1107, i32 0, i32 33
  %1109 = getelementptr inbounds %struct.Reg, %struct.Reg* %1108, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %1109 to i64*
  %1110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1111 = getelementptr inbounds %struct.GPR, %struct.GPR* %1110, i32 0, i32 5
  %1112 = getelementptr inbounds %struct.Reg, %struct.Reg* %1111, i32 0, i32 0
  %RCX.i1148 = bitcast %union.anon* %1112 to i64*
  %1113 = load i64, i64* %RCX.i1148
  %1114 = load i64, i64* %PC.i1147
  %1115 = add i64 %1114, 4
  store i64 %1115, i64* %PC.i1147
  %1116 = sext i64 %1113 to i128
  %1117 = and i128 %1116, -18446744073709551616
  %1118 = zext i64 %1113 to i128
  %1119 = or i128 %1117, %1118
  %1120 = mul i128 24, %1119
  %1121 = trunc i128 %1120 to i64
  store i64 %1121, i64* %RCX.i1148, align 8
  %1122 = sext i64 %1121 to i128
  %1123 = icmp ne i128 %1122, %1120
  %1124 = zext i1 %1123 to i8
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1124, i8* %1125, align 1
  %1126 = trunc i128 %1120 to i32
  %1127 = and i32 %1126, 255
  %1128 = call i32 @llvm.ctpop.i32(i32 %1127)
  %1129 = trunc i32 %1128 to i8
  %1130 = and i8 %1129, 1
  %1131 = xor i8 %1130, 1
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1131, i8* %1132, align 1
  %1133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1133, align 1
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1134, align 1
  %1135 = lshr i64 %1121, 63
  %1136 = trunc i64 %1135 to i8
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1136, i8* %1137, align 1
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1124, i8* %1138, align 1
  store %struct.Memory* %loadMem_403af0, %struct.Memory** %MEMORY
  %loadMem_403af4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1140 = getelementptr inbounds %struct.GPR, %struct.GPR* %1139, i32 0, i32 33
  %1141 = getelementptr inbounds %struct.Reg, %struct.Reg* %1140, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %1141 to i64*
  %1142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1143 = getelementptr inbounds %struct.GPR, %struct.GPR* %1142, i32 0, i32 1
  %1144 = getelementptr inbounds %struct.Reg, %struct.Reg* %1143, i32 0, i32 0
  %RAX.i1145 = bitcast %union.anon* %1144 to i64*
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1146 = getelementptr inbounds %struct.GPR, %struct.GPR* %1145, i32 0, i32 5
  %1147 = getelementptr inbounds %struct.Reg, %struct.Reg* %1146, i32 0, i32 0
  %RCX.i1146 = bitcast %union.anon* %1147 to i64*
  %1148 = load i64, i64* %RAX.i1145
  %1149 = load i64, i64* %RCX.i1146
  %1150 = load i64, i64* %PC.i1144
  %1151 = add i64 %1150, 3
  store i64 %1151, i64* %PC.i1144
  %1152 = add i64 %1149, %1148
  store i64 %1152, i64* %RAX.i1145, align 8
  %1153 = icmp ult i64 %1152, %1148
  %1154 = icmp ult i64 %1152, %1149
  %1155 = or i1 %1153, %1154
  %1156 = zext i1 %1155 to i8
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1156, i8* %1157, align 1
  %1158 = trunc i64 %1152 to i32
  %1159 = and i32 %1158, 255
  %1160 = call i32 @llvm.ctpop.i32(i32 %1159)
  %1161 = trunc i32 %1160 to i8
  %1162 = and i8 %1161, 1
  %1163 = xor i8 %1162, 1
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1163, i8* %1164, align 1
  %1165 = xor i64 %1149, %1148
  %1166 = xor i64 %1165, %1152
  %1167 = lshr i64 %1166, 4
  %1168 = trunc i64 %1167 to i8
  %1169 = and i8 %1168, 1
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1169, i8* %1170, align 1
  %1171 = icmp eq i64 %1152, 0
  %1172 = zext i1 %1171 to i8
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1172, i8* %1173, align 1
  %1174 = lshr i64 %1152, 63
  %1175 = trunc i64 %1174 to i8
  %1176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1175, i8* %1176, align 1
  %1177 = lshr i64 %1148, 63
  %1178 = lshr i64 %1149, 63
  %1179 = xor i64 %1174, %1177
  %1180 = xor i64 %1174, %1178
  %1181 = add i64 %1179, %1180
  %1182 = icmp eq i64 %1181, 2
  %1183 = zext i1 %1182 to i8
  %1184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1183, i8* %1184, align 1
  store %struct.Memory* %loadMem_403af4, %struct.Memory** %MEMORY
  %loadMem_403af7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1186 = getelementptr inbounds %struct.GPR, %struct.GPR* %1185, i32 0, i32 33
  %1187 = getelementptr inbounds %struct.Reg, %struct.Reg* %1186, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %1187 to i64*
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1189 = getelementptr inbounds %struct.GPR, %struct.GPR* %1188, i32 0, i32 1
  %1190 = getelementptr inbounds %struct.Reg, %struct.Reg* %1189, i32 0, i32 0
  %RAX.i1143 = bitcast %union.anon* %1190 to i64*
  %1191 = load i64, i64* %RAX.i1143
  %1192 = load i64, i64* %PC.i1142
  %1193 = add i64 %1192, 3
  store i64 %1193, i64* %PC.i1142
  %1194 = inttoptr i64 %1191 to i32*
  %1195 = load i32, i32* %1194
  %1196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1196, align 1
  %1197 = and i32 %1195, 255
  %1198 = call i32 @llvm.ctpop.i32(i32 %1197)
  %1199 = trunc i32 %1198 to i8
  %1200 = and i8 %1199, 1
  %1201 = xor i8 %1200, 1
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1201, i8* %1202, align 1
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1203, align 1
  %1204 = icmp eq i32 %1195, 0
  %1205 = zext i1 %1204 to i8
  %1206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1205, i8* %1206, align 1
  %1207 = lshr i32 %1195, 31
  %1208 = trunc i32 %1207 to i8
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1208, i8* %1209, align 1
  %1210 = lshr i32 %1195, 31
  %1211 = xor i32 %1207, %1210
  %1212 = add i32 %1211, %1210
  %1213 = icmp eq i32 %1212, 2
  %1214 = zext i1 %1213 to i8
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1214, i8* %1215, align 1
  store %struct.Memory* %loadMem_403af7, %struct.Memory** %MEMORY
  %loadMem_403afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1217 = getelementptr inbounds %struct.GPR, %struct.GPR* %1216, i32 0, i32 33
  %1218 = getelementptr inbounds %struct.Reg, %struct.Reg* %1217, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %1218 to i64*
  %1219 = load i64, i64* %PC.i1141
  %1220 = add i64 %1219, 60
  %1221 = load i64, i64* %PC.i1141
  %1222 = add i64 %1221, 6
  %1223 = load i64, i64* %PC.i1141
  %1224 = add i64 %1223, 6
  store i64 %1224, i64* %PC.i1141
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1226 = load i8, i8* %1225, align 1
  store i8 %1226, i8* %BRANCH_TAKEN, align 1
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1228 = icmp ne i8 %1226, 0
  %1229 = select i1 %1228, i64 %1220, i64 %1222
  store i64 %1229, i64* %1227, align 8
  store %struct.Memory* %loadMem_403afa, %struct.Memory** %MEMORY
  %loadBr_403afa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403afa = icmp eq i8 %loadBr_403afa, 1
  br i1 %cmpBr_403afa, label %block_.L_403b36, label %block_403b00

block_403b00:                                     ; preds = %block_403ae2
  %loadMem_403b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1231 = getelementptr inbounds %struct.GPR, %struct.GPR* %1230, i32 0, i32 33
  %1232 = getelementptr inbounds %struct.Reg, %struct.Reg* %1231, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %1232 to i64*
  %1233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1234 = getelementptr inbounds %struct.GPR, %struct.GPR* %1233, i32 0, i32 1
  %1235 = getelementptr inbounds %struct.Reg, %struct.Reg* %1234, i32 0, i32 0
  %RAX.i1139 = bitcast %union.anon* %1235 to i64*
  %1236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1237 = getelementptr inbounds %struct.GPR, %struct.GPR* %1236, i32 0, i32 15
  %1238 = getelementptr inbounds %struct.Reg, %struct.Reg* %1237, i32 0, i32 0
  %RBP.i1140 = bitcast %union.anon* %1238 to i64*
  %1239 = load i64, i64* %RBP.i1140
  %1240 = sub i64 %1239, 624
  %1241 = load i64, i64* %PC.i1138
  %1242 = add i64 %1241, 7
  store i64 %1242, i64* %PC.i1138
  store i64 %1240, i64* %RAX.i1139, align 8
  store %struct.Memory* %loadMem_403b00, %struct.Memory** %MEMORY
  %loadMem_403b07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1244 = getelementptr inbounds %struct.GPR, %struct.GPR* %1243, i32 0, i32 33
  %1245 = getelementptr inbounds %struct.Reg, %struct.Reg* %1244, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %1245 to i64*
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1247 = getelementptr inbounds %struct.GPR, %struct.GPR* %1246, i32 0, i32 5
  %1248 = getelementptr inbounds %struct.Reg, %struct.Reg* %1247, i32 0, i32 0
  %RCX.i1137 = bitcast %union.anon* %1248 to i64*
  %1249 = load i64, i64* %PC.i1136
  %1250 = add i64 %1249, 8
  store i64 %1250, i64* %PC.i1136
  %1251 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1251, i64* %RCX.i1137, align 8
  store %struct.Memory* %loadMem_403b07, %struct.Memory** %MEMORY
  %loadMem_403b0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1253 = getelementptr inbounds %struct.GPR, %struct.GPR* %1252, i32 0, i32 33
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %1254 to i64*
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 5
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %RCX.i1135 = bitcast %union.anon* %1257 to i64*
  %1258 = load i64, i64* %RCX.i1135
  %1259 = add i64 %1258, 71784
  %1260 = load i64, i64* %PC.i1134
  %1261 = add i64 %1260, 7
  store i64 %1261, i64* %PC.i1134
  %1262 = inttoptr i64 %1259 to i64*
  %1263 = load i64, i64* %1262
  store i64 %1263, i64* %RCX.i1135, align 8
  store %struct.Memory* %loadMem_403b0f, %struct.Memory** %MEMORY
  %loadMem_403b16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 33
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %1266 to i64*
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1268 = getelementptr inbounds %struct.GPR, %struct.GPR* %1267, i32 0, i32 7
  %1269 = getelementptr inbounds %struct.Reg, %struct.Reg* %1268, i32 0, i32 0
  %RDX.i1132 = bitcast %union.anon* %1269 to i64*
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1271 = getelementptr inbounds %struct.GPR, %struct.GPR* %1270, i32 0, i32 15
  %1272 = getelementptr inbounds %struct.Reg, %struct.Reg* %1271, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %1272 to i64*
  %1273 = load i64, i64* %RBP.i1133
  %1274 = sub i64 %1273, 148
  %1275 = load i64, i64* %PC.i1131
  %1276 = add i64 %1275, 7
  store i64 %1276, i64* %PC.i1131
  %1277 = inttoptr i64 %1274 to i32*
  %1278 = load i32, i32* %1277
  %1279 = sext i32 %1278 to i64
  store i64 %1279, i64* %RDX.i1132, align 8
  store %struct.Memory* %loadMem_403b16, %struct.Memory** %MEMORY
  %loadMem_403b1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 33
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %1282 to i64*
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1284 = getelementptr inbounds %struct.GPR, %struct.GPR* %1283, i32 0, i32 7
  %1285 = getelementptr inbounds %struct.Reg, %struct.Reg* %1284, i32 0, i32 0
  %RDX.i1130 = bitcast %union.anon* %1285 to i64*
  %1286 = load i64, i64* %RDX.i1130
  %1287 = load i64, i64* %PC.i1129
  %1288 = add i64 %1287, 4
  store i64 %1288, i64* %PC.i1129
  %1289 = sext i64 %1286 to i128
  %1290 = and i128 %1289, -18446744073709551616
  %1291 = zext i64 %1286 to i128
  %1292 = or i128 %1290, %1291
  %1293 = mul i128 24, %1292
  %1294 = trunc i128 %1293 to i64
  store i64 %1294, i64* %RDX.i1130, align 8
  %1295 = sext i64 %1294 to i128
  %1296 = icmp ne i128 %1295, %1293
  %1297 = zext i1 %1296 to i8
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1297, i8* %1298, align 1
  %1299 = trunc i128 %1293 to i32
  %1300 = and i32 %1299, 255
  %1301 = call i32 @llvm.ctpop.i32(i32 %1300)
  %1302 = trunc i32 %1301 to i8
  %1303 = and i8 %1302, 1
  %1304 = xor i8 %1303, 1
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1304, i8* %1305, align 1
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1306, align 1
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1307, align 1
  %1308 = lshr i64 %1294, 63
  %1309 = trunc i64 %1308 to i8
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1309, i8* %1310, align 1
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1297, i8* %1311, align 1
  store %struct.Memory* %loadMem_403b1d, %struct.Memory** %MEMORY
  %loadMem_403b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1313 = getelementptr inbounds %struct.GPR, %struct.GPR* %1312, i32 0, i32 33
  %1314 = getelementptr inbounds %struct.Reg, %struct.Reg* %1313, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %1314 to i64*
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1316 = getelementptr inbounds %struct.GPR, %struct.GPR* %1315, i32 0, i32 1
  %1317 = getelementptr inbounds %struct.Reg, %struct.Reg* %1316, i32 0, i32 0
  %RAX.i1127 = bitcast %union.anon* %1317 to i64*
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1319 = getelementptr inbounds %struct.GPR, %struct.GPR* %1318, i32 0, i32 7
  %1320 = getelementptr inbounds %struct.Reg, %struct.Reg* %1319, i32 0, i32 0
  %RDX.i1128 = bitcast %union.anon* %1320 to i64*
  %1321 = load i64, i64* %RAX.i1127
  %1322 = load i64, i64* %RDX.i1128
  %1323 = load i64, i64* %PC.i1126
  %1324 = add i64 %1323, 3
  store i64 %1324, i64* %PC.i1126
  %1325 = add i64 %1322, %1321
  store i64 %1325, i64* %RAX.i1127, align 8
  %1326 = icmp ult i64 %1325, %1321
  %1327 = icmp ult i64 %1325, %1322
  %1328 = or i1 %1326, %1327
  %1329 = zext i1 %1328 to i8
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1329, i8* %1330, align 1
  %1331 = trunc i64 %1325 to i32
  %1332 = and i32 %1331, 255
  %1333 = call i32 @llvm.ctpop.i32(i32 %1332)
  %1334 = trunc i32 %1333 to i8
  %1335 = and i8 %1334, 1
  %1336 = xor i8 %1335, 1
  %1337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1336, i8* %1337, align 1
  %1338 = xor i64 %1322, %1321
  %1339 = xor i64 %1338, %1325
  %1340 = lshr i64 %1339, 4
  %1341 = trunc i64 %1340 to i8
  %1342 = and i8 %1341, 1
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1342, i8* %1343, align 1
  %1344 = icmp eq i64 %1325, 0
  %1345 = zext i1 %1344 to i8
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1345, i8* %1346, align 1
  %1347 = lshr i64 %1325, 63
  %1348 = trunc i64 %1347 to i8
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1348, i8* %1349, align 1
  %1350 = lshr i64 %1321, 63
  %1351 = lshr i64 %1322, 63
  %1352 = xor i64 %1347, %1350
  %1353 = xor i64 %1347, %1351
  %1354 = add i64 %1352, %1353
  %1355 = icmp eq i64 %1354, 2
  %1356 = zext i1 %1355 to i8
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1356, i8* %1357, align 1
  store %struct.Memory* %loadMem_403b21, %struct.Memory** %MEMORY
  %loadMem_403b24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1359 = getelementptr inbounds %struct.GPR, %struct.GPR* %1358, i32 0, i32 33
  %1360 = getelementptr inbounds %struct.Reg, %struct.Reg* %1359, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %1360 to i64*
  %1361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1362 = getelementptr inbounds %struct.GPR, %struct.GPR* %1361, i32 0, i32 1
  %1363 = getelementptr inbounds %struct.Reg, %struct.Reg* %1362, i32 0, i32 0
  %RAX.i1125 = bitcast %union.anon* %1363 to i64*
  %1364 = load i64, i64* %RAX.i1125
  %1365 = add i64 %1364, 4
  %1366 = load i64, i64* %PC.i1124
  %1367 = add i64 %1366, 4
  store i64 %1367, i64* %PC.i1124
  %1368 = inttoptr i64 %1365 to i32*
  %1369 = load i32, i32* %1368
  %1370 = sext i32 %1369 to i64
  store i64 %1370, i64* %RAX.i1125, align 8
  store %struct.Memory* %loadMem_403b24, %struct.Memory** %MEMORY
  %loadMem_403b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1372 = getelementptr inbounds %struct.GPR, %struct.GPR* %1371, i32 0, i32 33
  %1373 = getelementptr inbounds %struct.Reg, %struct.Reg* %1372, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %1373 to i64*
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1375 = getelementptr inbounds %struct.GPR, %struct.GPR* %1374, i32 0, i32 1
  %1376 = getelementptr inbounds %struct.Reg, %struct.Reg* %1375, i32 0, i32 0
  %RAX.i1121 = bitcast %union.anon* %1376 to i64*
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1378 = getelementptr inbounds %struct.GPR, %struct.GPR* %1377, i32 0, i32 5
  %1379 = getelementptr inbounds %struct.Reg, %struct.Reg* %1378, i32 0, i32 0
  %RCX.i1122 = bitcast %union.anon* %1379 to i64*
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1381 = getelementptr inbounds %struct.GPR, %struct.GPR* %1380, i32 0, i32 9
  %1382 = getelementptr inbounds %struct.Reg, %struct.Reg* %1381, i32 0, i32 0
  %RSI.i1123 = bitcast %union.anon* %1382 to i64*
  %1383 = load i64, i64* %RCX.i1122
  %1384 = load i64, i64* %RAX.i1121
  %1385 = mul i64 %1384, 4
  %1386 = add i64 %1385, %1383
  %1387 = load i64, i64* %PC.i1120
  %1388 = add i64 %1387, 3
  store i64 %1388, i64* %PC.i1120
  %1389 = inttoptr i64 %1386 to i32*
  %1390 = load i32, i32* %1389
  %1391 = zext i32 %1390 to i64
  store i64 %1391, i64* %RSI.i1123, align 8
  store %struct.Memory* %loadMem_403b28, %struct.Memory** %MEMORY
  %loadMem_403b2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1393 = getelementptr inbounds %struct.GPR, %struct.GPR* %1392, i32 0, i32 33
  %1394 = getelementptr inbounds %struct.Reg, %struct.Reg* %1393, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %1394 to i64*
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1396 = getelementptr inbounds %struct.GPR, %struct.GPR* %1395, i32 0, i32 9
  %1397 = getelementptr inbounds %struct.Reg, %struct.Reg* %1396, i32 0, i32 0
  %ESI.i1118 = bitcast %union.anon* %1397 to i32*
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1399 = getelementptr inbounds %struct.GPR, %struct.GPR* %1398, i32 0, i32 15
  %1400 = getelementptr inbounds %struct.Reg, %struct.Reg* %1399, i32 0, i32 0
  %RBP.i1119 = bitcast %union.anon* %1400 to i64*
  %1401 = load i64, i64* %RBP.i1119
  %1402 = sub i64 %1401, 644
  %1403 = load i32, i32* %ESI.i1118
  %1404 = zext i32 %1403 to i64
  %1405 = load i64, i64* %PC.i1117
  %1406 = add i64 %1405, 6
  store i64 %1406, i64* %PC.i1117
  %1407 = inttoptr i64 %1402 to i32*
  store i32 %1403, i32* %1407
  store %struct.Memory* %loadMem_403b2b, %struct.Memory** %MEMORY
  %loadMem_403b31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 33
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %1410 to i64*
  %1411 = load i64, i64* %PC.i1116
  %1412 = add i64 %1411, 18
  %1413 = load i64, i64* %PC.i1116
  %1414 = add i64 %1413, 5
  store i64 %1414, i64* %PC.i1116
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1412, i64* %1415, align 8
  store %struct.Memory* %loadMem_403b31, %struct.Memory** %MEMORY
  br label %block_.L_403b43

block_.L_403b36:                                  ; preds = %block_403ae2
  %loadMem_403b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1417 = getelementptr inbounds %struct.GPR, %struct.GPR* %1416, i32 0, i32 33
  %1418 = getelementptr inbounds %struct.Reg, %struct.Reg* %1417, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %1418 to i64*
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1420 = getelementptr inbounds %struct.GPR, %struct.GPR* %1419, i32 0, i32 1
  %1421 = getelementptr inbounds %struct.Reg, %struct.Reg* %1420, i32 0, i32 0
  %EAX.i1114 = bitcast %union.anon* %1421 to i32*
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1423 = getelementptr inbounds %struct.GPR, %struct.GPR* %1422, i32 0, i32 1
  %1424 = getelementptr inbounds %struct.Reg, %struct.Reg* %1423, i32 0, i32 0
  %RAX.i1115 = bitcast %union.anon* %1424 to i64*
  %1425 = load i64, i64* %RAX.i1115
  %1426 = load i32, i32* %EAX.i1114
  %1427 = zext i32 %1426 to i64
  %1428 = load i64, i64* %PC.i1113
  %1429 = add i64 %1428, 2
  store i64 %1429, i64* %PC.i1113
  %1430 = xor i64 %1427, %1425
  %1431 = trunc i64 %1430 to i32
  %1432 = and i64 %1430, 4294967295
  store i64 %1432, i64* %RAX.i1115, align 8
  %1433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1433, align 1
  %1434 = and i32 %1431, 255
  %1435 = call i32 @llvm.ctpop.i32(i32 %1434)
  %1436 = trunc i32 %1435 to i8
  %1437 = and i8 %1436, 1
  %1438 = xor i8 %1437, 1
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1438, i8* %1439, align 1
  %1440 = icmp eq i32 %1431, 0
  %1441 = zext i1 %1440 to i8
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1441, i8* %1442, align 1
  %1443 = lshr i32 %1431, 31
  %1444 = trunc i32 %1443 to i8
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1444, i8* %1445, align 1
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1446, align 1
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1447, align 1
  store %struct.Memory* %loadMem_403b36, %struct.Memory** %MEMORY
  %loadMem_403b38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1449 = getelementptr inbounds %struct.GPR, %struct.GPR* %1448, i32 0, i32 33
  %1450 = getelementptr inbounds %struct.Reg, %struct.Reg* %1449, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %1450 to i64*
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1452 = getelementptr inbounds %struct.GPR, %struct.GPR* %1451, i32 0, i32 1
  %1453 = getelementptr inbounds %struct.Reg, %struct.Reg* %1452, i32 0, i32 0
  %EAX.i1111 = bitcast %union.anon* %1453 to i32*
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1455 = getelementptr inbounds %struct.GPR, %struct.GPR* %1454, i32 0, i32 15
  %1456 = getelementptr inbounds %struct.Reg, %struct.Reg* %1455, i32 0, i32 0
  %RBP.i1112 = bitcast %union.anon* %1456 to i64*
  %1457 = load i64, i64* %RBP.i1112
  %1458 = sub i64 %1457, 644
  %1459 = load i32, i32* %EAX.i1111
  %1460 = zext i32 %1459 to i64
  %1461 = load i64, i64* %PC.i1110
  %1462 = add i64 %1461, 6
  store i64 %1462, i64* %PC.i1110
  %1463 = inttoptr i64 %1458 to i32*
  store i32 %1459, i32* %1463
  store %struct.Memory* %loadMem_403b38, %struct.Memory** %MEMORY
  %loadMem_403b3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1465 = getelementptr inbounds %struct.GPR, %struct.GPR* %1464, i32 0, i32 33
  %1466 = getelementptr inbounds %struct.Reg, %struct.Reg* %1465, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %1466 to i64*
  %1467 = load i64, i64* %PC.i1109
  %1468 = add i64 %1467, 5
  %1469 = load i64, i64* %PC.i1109
  %1470 = add i64 %1469, 5
  store i64 %1470, i64* %PC.i1109
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1468, i64* %1471, align 8
  store %struct.Memory* %loadMem_403b3e, %struct.Memory** %MEMORY
  br label %block_.L_403b43

block_.L_403b43:                                  ; preds = %block_.L_403b36, %block_403b00
  %loadMem_403b43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1473 = getelementptr inbounds %struct.GPR, %struct.GPR* %1472, i32 0, i32 33
  %1474 = getelementptr inbounds %struct.Reg, %struct.Reg* %1473, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %1474 to i64*
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1476 = getelementptr inbounds %struct.GPR, %struct.GPR* %1475, i32 0, i32 1
  %1477 = getelementptr inbounds %struct.Reg, %struct.Reg* %1476, i32 0, i32 0
  %RAX.i1107 = bitcast %union.anon* %1477 to i64*
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 15
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %RBP.i1108 = bitcast %union.anon* %1480 to i64*
  %1481 = load i64, i64* %RBP.i1108
  %1482 = sub i64 %1481, 644
  %1483 = load i64, i64* %PC.i1106
  %1484 = add i64 %1483, 6
  store i64 %1484, i64* %PC.i1106
  %1485 = inttoptr i64 %1482 to i32*
  %1486 = load i32, i32* %1485
  %1487 = zext i32 %1486 to i64
  store i64 %1487, i64* %RAX.i1107, align 8
  store %struct.Memory* %loadMem_403b43, %struct.Memory** %MEMORY
  %loadMem_403b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1489 = getelementptr inbounds %struct.GPR, %struct.GPR* %1488, i32 0, i32 33
  %1490 = getelementptr inbounds %struct.Reg, %struct.Reg* %1489, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %1490 to i64*
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1492 = getelementptr inbounds %struct.GPR, %struct.GPR* %1491, i32 0, i32 1
  %1493 = getelementptr inbounds %struct.Reg, %struct.Reg* %1492, i32 0, i32 0
  %RAX.i1104 = bitcast %union.anon* %1493 to i64*
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1495 = getelementptr inbounds %struct.GPR, %struct.GPR* %1494, i32 0, i32 15
  %1496 = getelementptr inbounds %struct.Reg, %struct.Reg* %1495, i32 0, i32 0
  %RBP.i1105 = bitcast %union.anon* %1496 to i64*
  %1497 = load i64, i64* %RAX.i1104
  %1498 = load i64, i64* %RBP.i1105
  %1499 = sub i64 %1498, 632
  %1500 = load i64, i64* %PC.i1103
  %1501 = add i64 %1500, 6
  store i64 %1501, i64* %PC.i1103
  %1502 = trunc i64 %1497 to i32
  %1503 = inttoptr i64 %1499 to i32*
  %1504 = load i32, i32* %1503
  %1505 = and i32 %1504, %1502
  %1506 = zext i32 %1505 to i64
  store i64 %1506, i64* %RAX.i1104, align 8
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1507, align 1
  %1508 = and i32 %1505, 255
  %1509 = call i32 @llvm.ctpop.i32(i32 %1508)
  %1510 = trunc i32 %1509 to i8
  %1511 = and i8 %1510, 1
  %1512 = xor i8 %1511, 1
  %1513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1512, i8* %1513, align 1
  %1514 = icmp eq i32 %1505, 0
  %1515 = zext i1 %1514 to i8
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1515, i8* %1516, align 1
  %1517 = lshr i32 %1505, 31
  %1518 = trunc i32 %1517 to i8
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1518, i8* %1519, align 1
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1520, align 1
  %1521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1521, align 1
  store %struct.Memory* %loadMem_403b49, %struct.Memory** %MEMORY
  %loadMem_403b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1523 = getelementptr inbounds %struct.GPR, %struct.GPR* %1522, i32 0, i32 33
  %1524 = getelementptr inbounds %struct.Reg, %struct.Reg* %1523, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %1524 to i64*
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1526 = getelementptr inbounds %struct.GPR, %struct.GPR* %1525, i32 0, i32 1
  %1527 = getelementptr inbounds %struct.Reg, %struct.Reg* %1526, i32 0, i32 0
  %EAX.i1101 = bitcast %union.anon* %1527 to i32*
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1529 = getelementptr inbounds %struct.GPR, %struct.GPR* %1528, i32 0, i32 15
  %1530 = getelementptr inbounds %struct.Reg, %struct.Reg* %1529, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %1530 to i64*
  %1531 = load i64, i64* %RBP.i1102
  %1532 = sub i64 %1531, 632
  %1533 = load i32, i32* %EAX.i1101
  %1534 = zext i32 %1533 to i64
  %1535 = load i64, i64* %PC.i1100
  %1536 = add i64 %1535, 6
  store i64 %1536, i64* %PC.i1100
  %1537 = inttoptr i64 %1532 to i32*
  store i32 %1533, i32* %1537
  store %struct.Memory* %loadMem_403b4f, %struct.Memory** %MEMORY
  %loadMem_403b55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1539 = getelementptr inbounds %struct.GPR, %struct.GPR* %1538, i32 0, i32 33
  %1540 = getelementptr inbounds %struct.Reg, %struct.Reg* %1539, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %1540 to i64*
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1542 = getelementptr inbounds %struct.GPR, %struct.GPR* %1541, i32 0, i32 1
  %1543 = getelementptr inbounds %struct.Reg, %struct.Reg* %1542, i32 0, i32 0
  %RAX.i1098 = bitcast %union.anon* %1543 to i64*
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1545 = getelementptr inbounds %struct.GPR, %struct.GPR* %1544, i32 0, i32 15
  %1546 = getelementptr inbounds %struct.Reg, %struct.Reg* %1545, i32 0, i32 0
  %RBP.i1099 = bitcast %union.anon* %1546 to i64*
  %1547 = load i64, i64* %RBP.i1099
  %1548 = sub i64 %1547, 148
  %1549 = load i64, i64* %PC.i1097
  %1550 = add i64 %1549, 6
  store i64 %1550, i64* %PC.i1097
  %1551 = inttoptr i64 %1548 to i32*
  %1552 = load i32, i32* %1551
  %1553 = zext i32 %1552 to i64
  store i64 %1553, i64* %RAX.i1098, align 8
  store %struct.Memory* %loadMem_403b55, %struct.Memory** %MEMORY
  %loadMem_403b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1555 = getelementptr inbounds %struct.GPR, %struct.GPR* %1554, i32 0, i32 33
  %1556 = getelementptr inbounds %struct.Reg, %struct.Reg* %1555, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %1556 to i64*
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1558 = getelementptr inbounds %struct.GPR, %struct.GPR* %1557, i32 0, i32 1
  %1559 = getelementptr inbounds %struct.Reg, %struct.Reg* %1558, i32 0, i32 0
  %RAX.i1096 = bitcast %union.anon* %1559 to i64*
  %1560 = load i64, i64* %RAX.i1096
  %1561 = load i64, i64* %PC.i1095
  %1562 = add i64 %1561, 3
  store i64 %1562, i64* %PC.i1095
  %1563 = trunc i64 %1560 to i32
  %1564 = add i32 1, %1563
  %1565 = zext i32 %1564 to i64
  store i64 %1565, i64* %RAX.i1096, align 8
  %1566 = icmp ult i32 %1564, %1563
  %1567 = icmp ult i32 %1564, 1
  %1568 = or i1 %1566, %1567
  %1569 = zext i1 %1568 to i8
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1569, i8* %1570, align 1
  %1571 = and i32 %1564, 255
  %1572 = call i32 @llvm.ctpop.i32(i32 %1571)
  %1573 = trunc i32 %1572 to i8
  %1574 = and i8 %1573, 1
  %1575 = xor i8 %1574, 1
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1575, i8* %1576, align 1
  %1577 = xor i64 1, %1560
  %1578 = trunc i64 %1577 to i32
  %1579 = xor i32 %1578, %1564
  %1580 = lshr i32 %1579, 4
  %1581 = trunc i32 %1580 to i8
  %1582 = and i8 %1581, 1
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1582, i8* %1583, align 1
  %1584 = icmp eq i32 %1564, 0
  %1585 = zext i1 %1584 to i8
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1585, i8* %1586, align 1
  %1587 = lshr i32 %1564, 31
  %1588 = trunc i32 %1587 to i8
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1588, i8* %1589, align 1
  %1590 = lshr i32 %1563, 31
  %1591 = xor i32 %1587, %1590
  %1592 = add i32 %1591, %1587
  %1593 = icmp eq i32 %1592, 2
  %1594 = zext i1 %1593 to i8
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1594, i8* %1595, align 1
  store %struct.Memory* %loadMem_403b5b, %struct.Memory** %MEMORY
  %loadMem_403b5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1597 = getelementptr inbounds %struct.GPR, %struct.GPR* %1596, i32 0, i32 33
  %1598 = getelementptr inbounds %struct.Reg, %struct.Reg* %1597, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %1598 to i64*
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1600 = getelementptr inbounds %struct.GPR, %struct.GPR* %1599, i32 0, i32 1
  %1601 = getelementptr inbounds %struct.Reg, %struct.Reg* %1600, i32 0, i32 0
  %EAX.i1093 = bitcast %union.anon* %1601 to i32*
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1603 = getelementptr inbounds %struct.GPR, %struct.GPR* %1602, i32 0, i32 15
  %1604 = getelementptr inbounds %struct.Reg, %struct.Reg* %1603, i32 0, i32 0
  %RBP.i1094 = bitcast %union.anon* %1604 to i64*
  %1605 = load i64, i64* %RBP.i1094
  %1606 = sub i64 %1605, 148
  %1607 = load i32, i32* %EAX.i1093
  %1608 = zext i32 %1607 to i64
  %1609 = load i64, i64* %PC.i1092
  %1610 = add i64 %1609, 6
  store i64 %1610, i64* %PC.i1092
  %1611 = inttoptr i64 %1606 to i32*
  store i32 %1607, i32* %1611
  store %struct.Memory* %loadMem_403b5e, %struct.Memory** %MEMORY
  %loadMem_403b64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1613 = getelementptr inbounds %struct.GPR, %struct.GPR* %1612, i32 0, i32 33
  %1614 = getelementptr inbounds %struct.Reg, %struct.Reg* %1613, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %1614 to i64*
  %1615 = load i64, i64* %PC.i1091
  %1616 = add i64 %1615, -143
  %1617 = load i64, i64* %PC.i1091
  %1618 = add i64 %1617, 5
  store i64 %1618, i64* %PC.i1091
  %1619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1616, i64* %1619, align 8
  store %struct.Memory* %loadMem_403b64, %struct.Memory** %MEMORY
  br label %block_.L_403ad5

block_.L_403b69:                                  ; preds = %block_.L_403ad5
  %loadMem_403b69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1621 = getelementptr inbounds %struct.GPR, %struct.GPR* %1620, i32 0, i32 33
  %1622 = getelementptr inbounds %struct.Reg, %struct.Reg* %1621, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %1622 to i64*
  %1623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1624 = getelementptr inbounds %struct.GPR, %struct.GPR* %1623, i32 0, i32 15
  %1625 = getelementptr inbounds %struct.Reg, %struct.Reg* %1624, i32 0, i32 0
  %RBP.i1090 = bitcast %union.anon* %1625 to i64*
  %1626 = load i64, i64* %RBP.i1090
  %1627 = sub i64 %1626, 624
  %1628 = load i64, i64* %PC.i1089
  %1629 = add i64 %1628, 7
  store i64 %1629, i64* %PC.i1089
  %1630 = inttoptr i64 %1627 to i32*
  %1631 = load i32, i32* %1630
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1632, align 1
  %1633 = and i32 %1631, 255
  %1634 = call i32 @llvm.ctpop.i32(i32 %1633)
  %1635 = trunc i32 %1634 to i8
  %1636 = and i8 %1635, 1
  %1637 = xor i8 %1636, 1
  %1638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1637, i8* %1638, align 1
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1639, align 1
  %1640 = icmp eq i32 %1631, 0
  %1641 = zext i1 %1640 to i8
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1641, i8* %1642, align 1
  %1643 = lshr i32 %1631, 31
  %1644 = trunc i32 %1643 to i8
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1644, i8* %1645, align 1
  %1646 = lshr i32 %1631, 31
  %1647 = xor i32 %1643, %1646
  %1648 = add i32 %1647, %1646
  %1649 = icmp eq i32 %1648, 2
  %1650 = zext i1 %1649 to i8
  %1651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1650, i8* %1651, align 1
  store %struct.Memory* %loadMem_403b69, %struct.Memory** %MEMORY
  %loadMem_403b70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1653 = getelementptr inbounds %struct.GPR, %struct.GPR* %1652, i32 0, i32 33
  %1654 = getelementptr inbounds %struct.Reg, %struct.Reg* %1653, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %1654 to i64*
  %1655 = load i64, i64* %PC.i1088
  %1656 = add i64 %1655, 42
  %1657 = load i64, i64* %PC.i1088
  %1658 = add i64 %1657, 6
  %1659 = load i64, i64* %PC.i1088
  %1660 = add i64 %1659, 6
  store i64 %1660, i64* %PC.i1088
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1662 = load i8, i8* %1661, align 1
  store i8 %1662, i8* %BRANCH_TAKEN, align 1
  %1663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1664 = icmp ne i8 %1662, 0
  %1665 = select i1 %1664, i64 %1656, i64 %1658
  store i64 %1665, i64* %1663, align 8
  store %struct.Memory* %loadMem_403b70, %struct.Memory** %MEMORY
  %loadBr_403b70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403b70 = icmp eq i8 %loadBr_403b70, 1
  br i1 %cmpBr_403b70, label %block_.L_403b9a, label %block_403b76

block_403b76:                                     ; preds = %block_.L_403b69
  %loadMem_403b76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1667 = getelementptr inbounds %struct.GPR, %struct.GPR* %1666, i32 0, i32 33
  %1668 = getelementptr inbounds %struct.Reg, %struct.Reg* %1667, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %1668 to i64*
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1670 = getelementptr inbounds %struct.GPR, %struct.GPR* %1669, i32 0, i32 1
  %1671 = getelementptr inbounds %struct.Reg, %struct.Reg* %1670, i32 0, i32 0
  %RAX.i1087 = bitcast %union.anon* %1671 to i64*
  %1672 = load i64, i64* %PC.i1086
  %1673 = add i64 %1672, 8
  store i64 %1673, i64* %PC.i1086
  %1674 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1674, i64* %RAX.i1087, align 8
  store %struct.Memory* %loadMem_403b76, %struct.Memory** %MEMORY
  %loadMem_403b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1676 = getelementptr inbounds %struct.GPR, %struct.GPR* %1675, i32 0, i32 33
  %1677 = getelementptr inbounds %struct.Reg, %struct.Reg* %1676, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %1677 to i64*
  %1678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1679 = getelementptr inbounds %struct.GPR, %struct.GPR* %1678, i32 0, i32 1
  %1680 = getelementptr inbounds %struct.Reg, %struct.Reg* %1679, i32 0, i32 0
  %RAX.i1085 = bitcast %union.anon* %1680 to i64*
  %1681 = load i64, i64* %RAX.i1085
  %1682 = add i64 %1681, 71784
  %1683 = load i64, i64* %PC.i1084
  %1684 = add i64 %1683, 7
  store i64 %1684, i64* %PC.i1084
  %1685 = inttoptr i64 %1682 to i64*
  %1686 = load i64, i64* %1685
  store i64 %1686, i64* %RAX.i1085, align 8
  store %struct.Memory* %loadMem_403b7e, %struct.Memory** %MEMORY
  %loadMem_403b85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1688 = getelementptr inbounds %struct.GPR, %struct.GPR* %1687, i32 0, i32 33
  %1689 = getelementptr inbounds %struct.Reg, %struct.Reg* %1688, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %1689 to i64*
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1691 = getelementptr inbounds %struct.GPR, %struct.GPR* %1690, i32 0, i32 5
  %1692 = getelementptr inbounds %struct.Reg, %struct.Reg* %1691, i32 0, i32 0
  %RCX.i1082 = bitcast %union.anon* %1692 to i64*
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1694 = getelementptr inbounds %struct.GPR, %struct.GPR* %1693, i32 0, i32 15
  %1695 = getelementptr inbounds %struct.Reg, %struct.Reg* %1694, i32 0, i32 0
  %RBP.i1083 = bitcast %union.anon* %1695 to i64*
  %1696 = load i64, i64* %RBP.i1083
  %1697 = sub i64 %1696, 620
  %1698 = load i64, i64* %PC.i1081
  %1699 = add i64 %1698, 7
  store i64 %1699, i64* %PC.i1081
  %1700 = inttoptr i64 %1697 to i32*
  %1701 = load i32, i32* %1700
  %1702 = sext i32 %1701 to i64
  store i64 %1702, i64* %RCX.i1082, align 8
  store %struct.Memory* %loadMem_403b85, %struct.Memory** %MEMORY
  %loadMem_403b8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1704 = getelementptr inbounds %struct.GPR, %struct.GPR* %1703, i32 0, i32 33
  %1705 = getelementptr inbounds %struct.Reg, %struct.Reg* %1704, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %1705 to i64*
  %1706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1707 = getelementptr inbounds %struct.GPR, %struct.GPR* %1706, i32 0, i32 1
  %1708 = getelementptr inbounds %struct.Reg, %struct.Reg* %1707, i32 0, i32 0
  %RAX.i1078 = bitcast %union.anon* %1708 to i64*
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1710 = getelementptr inbounds %struct.GPR, %struct.GPR* %1709, i32 0, i32 5
  %1711 = getelementptr inbounds %struct.Reg, %struct.Reg* %1710, i32 0, i32 0
  %RCX.i1079 = bitcast %union.anon* %1711 to i64*
  %1712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1713 = getelementptr inbounds %struct.GPR, %struct.GPR* %1712, i32 0, i32 7
  %1714 = getelementptr inbounds %struct.Reg, %struct.Reg* %1713, i32 0, i32 0
  %RDX.i1080 = bitcast %union.anon* %1714 to i64*
  %1715 = load i64, i64* %RAX.i1078
  %1716 = load i64, i64* %RCX.i1079
  %1717 = mul i64 %1716, 4
  %1718 = add i64 %1717, %1715
  %1719 = load i64, i64* %PC.i1077
  %1720 = add i64 %1719, 3
  store i64 %1720, i64* %PC.i1077
  %1721 = inttoptr i64 %1718 to i32*
  %1722 = load i32, i32* %1721
  %1723 = zext i32 %1722 to i64
  store i64 %1723, i64* %RDX.i1080, align 8
  store %struct.Memory* %loadMem_403b8c, %struct.Memory** %MEMORY
  %loadMem_403b8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1725 = getelementptr inbounds %struct.GPR, %struct.GPR* %1724, i32 0, i32 33
  %1726 = getelementptr inbounds %struct.Reg, %struct.Reg* %1725, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %1726 to i64*
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1728 = getelementptr inbounds %struct.GPR, %struct.GPR* %1727, i32 0, i32 7
  %1729 = getelementptr inbounds %struct.Reg, %struct.Reg* %1728, i32 0, i32 0
  %EDX.i1075 = bitcast %union.anon* %1729 to i32*
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 15
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %RBP.i1076 = bitcast %union.anon* %1732 to i64*
  %1733 = load i64, i64* %RBP.i1076
  %1734 = sub i64 %1733, 648
  %1735 = load i32, i32* %EDX.i1075
  %1736 = zext i32 %1735 to i64
  %1737 = load i64, i64* %PC.i1074
  %1738 = add i64 %1737, 6
  store i64 %1738, i64* %PC.i1074
  %1739 = inttoptr i64 %1734 to i32*
  store i32 %1735, i32* %1739
  store %struct.Memory* %loadMem_403b8f, %struct.Memory** %MEMORY
  %loadMem_403b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1741 = getelementptr inbounds %struct.GPR, %struct.GPR* %1740, i32 0, i32 33
  %1742 = getelementptr inbounds %struct.Reg, %struct.Reg* %1741, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %1742 to i64*
  %1743 = load i64, i64* %PC.i1073
  %1744 = add i64 %1743, 18
  %1745 = load i64, i64* %PC.i1073
  %1746 = add i64 %1745, 5
  store i64 %1746, i64* %PC.i1073
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1744, i64* %1747, align 8
  store %struct.Memory* %loadMem_403b95, %struct.Memory** %MEMORY
  br label %block_.L_403ba7

block_.L_403b9a:                                  ; preds = %block_.L_403b69
  %loadMem_403b9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1749 = getelementptr inbounds %struct.GPR, %struct.GPR* %1748, i32 0, i32 33
  %1750 = getelementptr inbounds %struct.Reg, %struct.Reg* %1749, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %1750 to i64*
  %1751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1752 = getelementptr inbounds %struct.GPR, %struct.GPR* %1751, i32 0, i32 1
  %1753 = getelementptr inbounds %struct.Reg, %struct.Reg* %1752, i32 0, i32 0
  %EAX.i1071 = bitcast %union.anon* %1753 to i32*
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1755 = getelementptr inbounds %struct.GPR, %struct.GPR* %1754, i32 0, i32 1
  %1756 = getelementptr inbounds %struct.Reg, %struct.Reg* %1755, i32 0, i32 0
  %RAX.i1072 = bitcast %union.anon* %1756 to i64*
  %1757 = load i64, i64* %RAX.i1072
  %1758 = load i32, i32* %EAX.i1071
  %1759 = zext i32 %1758 to i64
  %1760 = load i64, i64* %PC.i1070
  %1761 = add i64 %1760, 2
  store i64 %1761, i64* %PC.i1070
  %1762 = xor i64 %1759, %1757
  %1763 = trunc i64 %1762 to i32
  %1764 = and i64 %1762, 4294967295
  store i64 %1764, i64* %RAX.i1072, align 8
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1765, align 1
  %1766 = and i32 %1763, 255
  %1767 = call i32 @llvm.ctpop.i32(i32 %1766)
  %1768 = trunc i32 %1767 to i8
  %1769 = and i8 %1768, 1
  %1770 = xor i8 %1769, 1
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1770, i8* %1771, align 1
  %1772 = icmp eq i32 %1763, 0
  %1773 = zext i1 %1772 to i8
  %1774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1773, i8* %1774, align 1
  %1775 = lshr i32 %1763, 31
  %1776 = trunc i32 %1775 to i8
  %1777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1776, i8* %1777, align 1
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1778, align 1
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1779, align 1
  store %struct.Memory* %loadMem_403b9a, %struct.Memory** %MEMORY
  %loadMem_403b9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1781 = getelementptr inbounds %struct.GPR, %struct.GPR* %1780, i32 0, i32 33
  %1782 = getelementptr inbounds %struct.Reg, %struct.Reg* %1781, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %1782 to i64*
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1784 = getelementptr inbounds %struct.GPR, %struct.GPR* %1783, i32 0, i32 1
  %1785 = getelementptr inbounds %struct.Reg, %struct.Reg* %1784, i32 0, i32 0
  %EAX.i1068 = bitcast %union.anon* %1785 to i32*
  %1786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1787 = getelementptr inbounds %struct.GPR, %struct.GPR* %1786, i32 0, i32 15
  %1788 = getelementptr inbounds %struct.Reg, %struct.Reg* %1787, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %1788 to i64*
  %1789 = load i64, i64* %RBP.i1069
  %1790 = sub i64 %1789, 648
  %1791 = load i32, i32* %EAX.i1068
  %1792 = zext i32 %1791 to i64
  %1793 = load i64, i64* %PC.i1067
  %1794 = add i64 %1793, 6
  store i64 %1794, i64* %PC.i1067
  %1795 = inttoptr i64 %1790 to i32*
  store i32 %1791, i32* %1795
  store %struct.Memory* %loadMem_403b9c, %struct.Memory** %MEMORY
  %loadMem_403ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1797 = getelementptr inbounds %struct.GPR, %struct.GPR* %1796, i32 0, i32 33
  %1798 = getelementptr inbounds %struct.Reg, %struct.Reg* %1797, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %1798 to i64*
  %1799 = load i64, i64* %PC.i1066
  %1800 = add i64 %1799, 5
  %1801 = load i64, i64* %PC.i1066
  %1802 = add i64 %1801, 5
  store i64 %1802, i64* %PC.i1066
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1800, i64* %1803, align 8
  store %struct.Memory* %loadMem_403ba2, %struct.Memory** %MEMORY
  br label %block_.L_403ba7

block_.L_403ba7:                                  ; preds = %block_.L_403b9a, %block_403b76
  %loadMem_403ba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1805 = getelementptr inbounds %struct.GPR, %struct.GPR* %1804, i32 0, i32 33
  %1806 = getelementptr inbounds %struct.Reg, %struct.Reg* %1805, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %1806 to i64*
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1808 = getelementptr inbounds %struct.GPR, %struct.GPR* %1807, i32 0, i32 1
  %1809 = getelementptr inbounds %struct.Reg, %struct.Reg* %1808, i32 0, i32 0
  %RAX.i1064 = bitcast %union.anon* %1809 to i64*
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1811 = getelementptr inbounds %struct.GPR, %struct.GPR* %1810, i32 0, i32 15
  %1812 = getelementptr inbounds %struct.Reg, %struct.Reg* %1811, i32 0, i32 0
  %RBP.i1065 = bitcast %union.anon* %1812 to i64*
  %1813 = load i64, i64* %RBP.i1065
  %1814 = sub i64 %1813, 648
  %1815 = load i64, i64* %PC.i1063
  %1816 = add i64 %1815, 6
  store i64 %1816, i64* %PC.i1063
  %1817 = inttoptr i64 %1814 to i32*
  %1818 = load i32, i32* %1817
  %1819 = zext i32 %1818 to i64
  store i64 %1819, i64* %RAX.i1064, align 8
  store %struct.Memory* %loadMem_403ba7, %struct.Memory** %MEMORY
  %loadMem_403bad = load %struct.Memory*, %struct.Memory** %MEMORY
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1821 = getelementptr inbounds %struct.GPR, %struct.GPR* %1820, i32 0, i32 33
  %1822 = getelementptr inbounds %struct.Reg, %struct.Reg* %1821, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %1822 to i64*
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1824 = getelementptr inbounds %struct.GPR, %struct.GPR* %1823, i32 0, i32 1
  %1825 = getelementptr inbounds %struct.Reg, %struct.Reg* %1824, i32 0, i32 0
  %EAX.i1061 = bitcast %union.anon* %1825 to i32*
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1827 = getelementptr inbounds %struct.GPR, %struct.GPR* %1826, i32 0, i32 15
  %1828 = getelementptr inbounds %struct.Reg, %struct.Reg* %1827, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %1828 to i64*
  %1829 = load i64, i64* %RBP.i1062
  %1830 = sub i64 %1829, 636
  %1831 = load i32, i32* %EAX.i1061
  %1832 = zext i32 %1831 to i64
  %1833 = load i64, i64* %PC.i1060
  %1834 = add i64 %1833, 6
  store i64 %1834, i64* %PC.i1060
  %1835 = inttoptr i64 %1830 to i32*
  store i32 %1831, i32* %1835
  store %struct.Memory* %loadMem_403bad, %struct.Memory** %MEMORY
  br label %block_.L_403bb3

block_.L_403bb3:                                  ; preds = %block_.L_403ba7, %block_403a4e
  %loadMem_403bb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1837 = getelementptr inbounds %struct.GPR, %struct.GPR* %1836, i32 0, i32 33
  %1838 = getelementptr inbounds %struct.Reg, %struct.Reg* %1837, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %1838 to i64*
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1840 = getelementptr inbounds %struct.GPR, %struct.GPR* %1839, i32 0, i32 15
  %1841 = getelementptr inbounds %struct.Reg, %struct.Reg* %1840, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %1841 to i64*
  %1842 = load i64, i64* %RBP.i1059
  %1843 = sub i64 %1842, 12
  %1844 = load i64, i64* %PC.i1058
  %1845 = add i64 %1844, 7
  store i64 %1845, i64* %PC.i1058
  %1846 = inttoptr i64 %1843 to i32*
  store i32 0, i32* %1846
  store %struct.Memory* %loadMem_403bb3, %struct.Memory** %MEMORY
  %loadMem_403bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1848 = getelementptr inbounds %struct.GPR, %struct.GPR* %1847, i32 0, i32 33
  %1849 = getelementptr inbounds %struct.Reg, %struct.Reg* %1848, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %1849 to i64*
  %1850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1851 = getelementptr inbounds %struct.GPR, %struct.GPR* %1850, i32 0, i32 15
  %1852 = getelementptr inbounds %struct.Reg, %struct.Reg* %1851, i32 0, i32 0
  %RBP.i1057 = bitcast %union.anon* %1852 to i64*
  %1853 = load i64, i64* %RBP.i1057
  %1854 = sub i64 %1853, 8
  %1855 = load i64, i64* %PC.i1056
  %1856 = add i64 %1855, 7
  store i64 %1856, i64* %PC.i1056
  %1857 = inttoptr i64 %1854 to i32*
  store i32 0, i32* %1857
  store %struct.Memory* %loadMem_403bba, %struct.Memory** %MEMORY
  %loadMem_403bc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1859 = getelementptr inbounds %struct.GPR, %struct.GPR* %1858, i32 0, i32 33
  %1860 = getelementptr inbounds %struct.Reg, %struct.Reg* %1859, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %1860 to i64*
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 15
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %RBP.i1055 = bitcast %union.anon* %1863 to i64*
  %1864 = load i64, i64* %RBP.i1055
  %1865 = sub i64 %1864, 148
  %1866 = load i64, i64* %PC.i1054
  %1867 = add i64 %1866, 10
  store i64 %1867, i64* %PC.i1054
  %1868 = inttoptr i64 %1865 to i32*
  store i32 0, i32* %1868
  store %struct.Memory* %loadMem_403bc1, %struct.Memory** %MEMORY
  br label %block_.L_403bcb

block_.L_403bcb:                                  ; preds = %block_.L_403c6f, %block_.L_403bb3
  %loadMem_403bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1870 = getelementptr inbounds %struct.GPR, %struct.GPR* %1869, i32 0, i32 33
  %1871 = getelementptr inbounds %struct.Reg, %struct.Reg* %1870, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %1871 to i64*
  %1872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1873 = getelementptr inbounds %struct.GPR, %struct.GPR* %1872, i32 0, i32 15
  %1874 = getelementptr inbounds %struct.Reg, %struct.Reg* %1873, i32 0, i32 0
  %RBP.i1053 = bitcast %union.anon* %1874 to i64*
  %1875 = load i64, i64* %RBP.i1053
  %1876 = sub i64 %1875, 148
  %1877 = load i64, i64* %PC.i1052
  %1878 = add i64 %1877, 7
  store i64 %1878, i64* %PC.i1052
  %1879 = inttoptr i64 %1876 to i32*
  %1880 = load i32, i32* %1879
  %1881 = sub i32 %1880, 16
  %1882 = icmp ult i32 %1880, 16
  %1883 = zext i1 %1882 to i8
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1883, i8* %1884, align 1
  %1885 = and i32 %1881, 255
  %1886 = call i32 @llvm.ctpop.i32(i32 %1885)
  %1887 = trunc i32 %1886 to i8
  %1888 = and i8 %1887, 1
  %1889 = xor i8 %1888, 1
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1889, i8* %1890, align 1
  %1891 = xor i32 %1880, 16
  %1892 = xor i32 %1891, %1881
  %1893 = lshr i32 %1892, 4
  %1894 = trunc i32 %1893 to i8
  %1895 = and i8 %1894, 1
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1895, i8* %1896, align 1
  %1897 = icmp eq i32 %1881, 0
  %1898 = zext i1 %1897 to i8
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1898, i8* %1899, align 1
  %1900 = lshr i32 %1881, 31
  %1901 = trunc i32 %1900 to i8
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1901, i8* %1902, align 1
  %1903 = lshr i32 %1880, 31
  %1904 = xor i32 %1900, %1903
  %1905 = add i32 %1904, %1903
  %1906 = icmp eq i32 %1905, 2
  %1907 = zext i1 %1906 to i8
  %1908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1907, i8* %1908, align 1
  store %struct.Memory* %loadMem_403bcb, %struct.Memory** %MEMORY
  %loadMem_403bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1910 = getelementptr inbounds %struct.GPR, %struct.GPR* %1909, i32 0, i32 33
  %1911 = getelementptr inbounds %struct.Reg, %struct.Reg* %1910, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %1911 to i64*
  %1912 = load i64, i64* %PC.i1051
  %1913 = add i64 %1912, 177
  %1914 = load i64, i64* %PC.i1051
  %1915 = add i64 %1914, 6
  %1916 = load i64, i64* %PC.i1051
  %1917 = add i64 %1916, 6
  store i64 %1917, i64* %PC.i1051
  %1918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1919 = load i8, i8* %1918, align 1
  %1920 = icmp ne i8 %1919, 0
  %1921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1922 = load i8, i8* %1921, align 1
  %1923 = icmp ne i8 %1922, 0
  %1924 = xor i1 %1920, %1923
  %1925 = xor i1 %1924, true
  %1926 = zext i1 %1925 to i8
  store i8 %1926, i8* %BRANCH_TAKEN, align 1
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1928 = select i1 %1924, i64 %1915, i64 %1913
  store i64 %1928, i64* %1927, align 8
  store %struct.Memory* %loadMem_403bd2, %struct.Memory** %MEMORY
  %loadBr_403bd2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403bd2 = icmp eq i8 %loadBr_403bd2, 1
  br i1 %cmpBr_403bd2, label %block_.L_403c83, label %block_403bd8

block_403bd8:                                     ; preds = %block_.L_403bcb
  %loadMem_403bd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1930 = getelementptr inbounds %struct.GPR, %struct.GPR* %1929, i32 0, i32 33
  %1931 = getelementptr inbounds %struct.Reg, %struct.Reg* %1930, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %1931 to i64*
  %1932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1933 = getelementptr inbounds %struct.GPR, %struct.GPR* %1932, i32 0, i32 15
  %1934 = getelementptr inbounds %struct.Reg, %struct.Reg* %1933, i32 0, i32 0
  %RBP.i1050 = bitcast %union.anon* %1934 to i64*
  %1935 = load i64, i64* %RBP.i1050
  %1936 = sub i64 %1935, 628
  %1937 = load i64, i64* %PC.i1049
  %1938 = add i64 %1937, 7
  store i64 %1938, i64* %PC.i1049
  %1939 = inttoptr i64 %1936 to i32*
  %1940 = load i32, i32* %1939
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1941, align 1
  %1942 = and i32 %1940, 255
  %1943 = call i32 @llvm.ctpop.i32(i32 %1942)
  %1944 = trunc i32 %1943 to i8
  %1945 = and i8 %1944, 1
  %1946 = xor i8 %1945, 1
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1946, i8* %1947, align 1
  %1948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1948, align 1
  %1949 = icmp eq i32 %1940, 0
  %1950 = zext i1 %1949 to i8
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1950, i8* %1951, align 1
  %1952 = lshr i32 %1940, 31
  %1953 = trunc i32 %1952 to i8
  %1954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1953, i8* %1954, align 1
  %1955 = lshr i32 %1940, 31
  %1956 = xor i32 %1952, %1955
  %1957 = add i32 %1956, %1955
  %1958 = icmp eq i32 %1957, 2
  %1959 = zext i1 %1958 to i8
  %1960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1959, i8* %1960, align 1
  store %struct.Memory* %loadMem_403bd8, %struct.Memory** %MEMORY
  %loadMem_403bdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 33
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %1963 to i64*
  %1964 = load i64, i64* %PC.i1048
  %1965 = add i64 %1964, 49
  %1966 = load i64, i64* %PC.i1048
  %1967 = add i64 %1966, 6
  %1968 = load i64, i64* %PC.i1048
  %1969 = add i64 %1968, 6
  store i64 %1969, i64* %PC.i1048
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1971 = load i8, i8* %1970, align 1
  store i8 %1971, i8* %BRANCH_TAKEN, align 1
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1973 = icmp ne i8 %1971, 0
  %1974 = select i1 %1973, i64 %1965, i64 %1967
  store i64 %1974, i64* %1972, align 8
  store %struct.Memory* %loadMem_403bdf, %struct.Memory** %MEMORY
  %loadBr_403bdf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403bdf = icmp eq i8 %loadBr_403bdf, 1
  br i1 %cmpBr_403bdf, label %block_.L_403c10, label %block_403be5

block_403be5:                                     ; preds = %block_403bd8
  %loadMem_403be5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1976 = getelementptr inbounds %struct.GPR, %struct.GPR* %1975, i32 0, i32 33
  %1977 = getelementptr inbounds %struct.Reg, %struct.Reg* %1976, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %1977 to i64*
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1979 = getelementptr inbounds %struct.GPR, %struct.GPR* %1978, i32 0, i32 1
  %1980 = getelementptr inbounds %struct.Reg, %struct.Reg* %1979, i32 0, i32 0
  %RAX.i1046 = bitcast %union.anon* %1980 to i64*
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1982 = getelementptr inbounds %struct.GPR, %struct.GPR* %1981, i32 0, i32 15
  %1983 = getelementptr inbounds %struct.Reg, %struct.Reg* %1982, i32 0, i32 0
  %RBP.i1047 = bitcast %union.anon* %1983 to i64*
  %1984 = load i64, i64* %RBP.i1047
  %1985 = sub i64 %1984, 184
  %1986 = load i64, i64* %PC.i1045
  %1987 = add i64 %1986, 7
  store i64 %1987, i64* %PC.i1045
  %1988 = inttoptr i64 %1985 to i64*
  %1989 = load i64, i64* %1988
  store i64 %1989, i64* %RAX.i1046, align 8
  store %struct.Memory* %loadMem_403be5, %struct.Memory** %MEMORY
  %loadMem_403bec = load %struct.Memory*, %struct.Memory** %MEMORY
  %1990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1991 = getelementptr inbounds %struct.GPR, %struct.GPR* %1990, i32 0, i32 33
  %1992 = getelementptr inbounds %struct.Reg, %struct.Reg* %1991, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %1992 to i64*
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1994 = getelementptr inbounds %struct.GPR, %struct.GPR* %1993, i32 0, i32 5
  %1995 = getelementptr inbounds %struct.Reg, %struct.Reg* %1994, i32 0, i32 0
  %RCX.i1043 = bitcast %union.anon* %1995 to i64*
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1997 = getelementptr inbounds %struct.GPR, %struct.GPR* %1996, i32 0, i32 15
  %1998 = getelementptr inbounds %struct.Reg, %struct.Reg* %1997, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %1998 to i64*
  %1999 = load i64, i64* %RBP.i1044
  %2000 = sub i64 %1999, 196
  %2001 = load i64, i64* %PC.i1042
  %2002 = add i64 %2001, 7
  store i64 %2002, i64* %PC.i1042
  %2003 = inttoptr i64 %2000 to i32*
  %2004 = load i32, i32* %2003
  %2005 = sext i32 %2004 to i64
  store i64 %2005, i64* %RCX.i1043, align 8
  store %struct.Memory* %loadMem_403bec, %struct.Memory** %MEMORY
  %loadMem_403bf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2007 = getelementptr inbounds %struct.GPR, %struct.GPR* %2006, i32 0, i32 33
  %2008 = getelementptr inbounds %struct.Reg, %struct.Reg* %2007, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %2008 to i64*
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2010 = getelementptr inbounds %struct.GPR, %struct.GPR* %2009, i32 0, i32 1
  %2011 = getelementptr inbounds %struct.Reg, %struct.Reg* %2010, i32 0, i32 0
  %RAX.i1040 = bitcast %union.anon* %2011 to i64*
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2013 = getelementptr inbounds %struct.GPR, %struct.GPR* %2012, i32 0, i32 5
  %2014 = getelementptr inbounds %struct.Reg, %struct.Reg* %2013, i32 0, i32 0
  %RCX.i1041 = bitcast %union.anon* %2014 to i64*
  %2015 = load i64, i64* %RAX.i1040
  %2016 = load i64, i64* %RCX.i1041
  %2017 = mul i64 %2016, 8
  %2018 = add i64 %2017, %2015
  %2019 = load i64, i64* %PC.i1039
  %2020 = add i64 %2019, 4
  store i64 %2020, i64* %PC.i1039
  %2021 = inttoptr i64 %2018 to i64*
  %2022 = load i64, i64* %2021
  store i64 %2022, i64* %RAX.i1040, align 8
  store %struct.Memory* %loadMem_403bf3, %struct.Memory** %MEMORY
  %loadMem_403bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2024 = getelementptr inbounds %struct.GPR, %struct.GPR* %2023, i32 0, i32 33
  %2025 = getelementptr inbounds %struct.Reg, %struct.Reg* %2024, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %2025 to i64*
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2027 = getelementptr inbounds %struct.GPR, %struct.GPR* %2026, i32 0, i32 7
  %2028 = getelementptr inbounds %struct.Reg, %struct.Reg* %2027, i32 0, i32 0
  %RDX.i1037 = bitcast %union.anon* %2028 to i64*
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2030 = getelementptr inbounds %struct.GPR, %struct.GPR* %2029, i32 0, i32 15
  %2031 = getelementptr inbounds %struct.Reg, %struct.Reg* %2030, i32 0, i32 0
  %RBP.i1038 = bitcast %union.anon* %2031 to i64*
  %2032 = load i64, i64* %RBP.i1038
  %2033 = sub i64 %2032, 200
  %2034 = load i64, i64* %PC.i1036
  %2035 = add i64 %2034, 6
  store i64 %2035, i64* %PC.i1036
  %2036 = inttoptr i64 %2033 to i32*
  %2037 = load i32, i32* %2036
  %2038 = zext i32 %2037 to i64
  store i64 %2038, i64* %RDX.i1037, align 8
  store %struct.Memory* %loadMem_403bf7, %struct.Memory** %MEMORY
  %loadMem_403bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2040 = getelementptr inbounds %struct.GPR, %struct.GPR* %2039, i32 0, i32 33
  %2041 = getelementptr inbounds %struct.Reg, %struct.Reg* %2040, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %2041 to i64*
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2043 = getelementptr inbounds %struct.GPR, %struct.GPR* %2042, i32 0, i32 7
  %2044 = getelementptr inbounds %struct.Reg, %struct.Reg* %2043, i32 0, i32 0
  %RDX.i1034 = bitcast %union.anon* %2044 to i64*
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2046 = getelementptr inbounds %struct.GPR, %struct.GPR* %2045, i32 0, i32 15
  %2047 = getelementptr inbounds %struct.Reg, %struct.Reg* %2046, i32 0, i32 0
  %RBP.i1035 = bitcast %union.anon* %2047 to i64*
  %2048 = load i64, i64* %RDX.i1034
  %2049 = load i64, i64* %RBP.i1035
  %2050 = sub i64 %2049, 148
  %2051 = load i64, i64* %PC.i1033
  %2052 = add i64 %2051, 6
  store i64 %2052, i64* %PC.i1033
  %2053 = trunc i64 %2048 to i32
  %2054 = inttoptr i64 %2050 to i32*
  %2055 = load i32, i32* %2054
  %2056 = add i32 %2055, %2053
  %2057 = zext i32 %2056 to i64
  store i64 %2057, i64* %RDX.i1034, align 8
  %2058 = icmp ult i32 %2056, %2053
  %2059 = icmp ult i32 %2056, %2055
  %2060 = or i1 %2058, %2059
  %2061 = zext i1 %2060 to i8
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2061, i8* %2062, align 1
  %2063 = and i32 %2056, 255
  %2064 = call i32 @llvm.ctpop.i32(i32 %2063)
  %2065 = trunc i32 %2064 to i8
  %2066 = and i8 %2065, 1
  %2067 = xor i8 %2066, 1
  %2068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2067, i8* %2068, align 1
  %2069 = xor i32 %2055, %2053
  %2070 = xor i32 %2069, %2056
  %2071 = lshr i32 %2070, 4
  %2072 = trunc i32 %2071 to i8
  %2073 = and i8 %2072, 1
  %2074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2073, i8* %2074, align 1
  %2075 = icmp eq i32 %2056, 0
  %2076 = zext i1 %2075 to i8
  %2077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2076, i8* %2077, align 1
  %2078 = lshr i32 %2056, 31
  %2079 = trunc i32 %2078 to i8
  %2080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2079, i8* %2080, align 1
  %2081 = lshr i32 %2053, 31
  %2082 = lshr i32 %2055, 31
  %2083 = xor i32 %2078, %2081
  %2084 = xor i32 %2078, %2082
  %2085 = add i32 %2083, %2084
  %2086 = icmp eq i32 %2085, 2
  %2087 = zext i1 %2086 to i8
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2087, i8* %2088, align 1
  store %struct.Memory* %loadMem_403bfd, %struct.Memory** %MEMORY
  %loadMem_403c03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2090 = getelementptr inbounds %struct.GPR, %struct.GPR* %2089, i32 0, i32 33
  %2091 = getelementptr inbounds %struct.Reg, %struct.Reg* %2090, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %2091 to i64*
  %2092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2093 = getelementptr inbounds %struct.GPR, %struct.GPR* %2092, i32 0, i32 7
  %2094 = getelementptr inbounds %struct.Reg, %struct.Reg* %2093, i32 0, i32 0
  %EDX.i1031 = bitcast %union.anon* %2094 to i32*
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2096 = getelementptr inbounds %struct.GPR, %struct.GPR* %2095, i32 0, i32 5
  %2097 = getelementptr inbounds %struct.Reg, %struct.Reg* %2096, i32 0, i32 0
  %RCX.i1032 = bitcast %union.anon* %2097 to i64*
  %2098 = load i32, i32* %EDX.i1031
  %2099 = zext i32 %2098 to i64
  %2100 = load i64, i64* %PC.i1030
  %2101 = add i64 %2100, 3
  store i64 %2101, i64* %PC.i1030
  %2102 = shl i64 %2099, 32
  %2103 = ashr exact i64 %2102, 32
  store i64 %2103, i64* %RCX.i1032, align 8
  store %struct.Memory* %loadMem_403c03, %struct.Memory** %MEMORY
  %loadMem_403c06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2105 = getelementptr inbounds %struct.GPR, %struct.GPR* %2104, i32 0, i32 33
  %2106 = getelementptr inbounds %struct.Reg, %struct.Reg* %2105, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %2106 to i64*
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2108 = getelementptr inbounds %struct.GPR, %struct.GPR* %2107, i32 0, i32 1
  %2109 = getelementptr inbounds %struct.Reg, %struct.Reg* %2108, i32 0, i32 0
  %RAX.i1027 = bitcast %union.anon* %2109 to i64*
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2111 = getelementptr inbounds %struct.GPR, %struct.GPR* %2110, i32 0, i32 5
  %2112 = getelementptr inbounds %struct.Reg, %struct.Reg* %2111, i32 0, i32 0
  %RCX.i1028 = bitcast %union.anon* %2112 to i64*
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2114 = getelementptr inbounds %struct.GPR, %struct.GPR* %2113, i32 0, i32 7
  %2115 = getelementptr inbounds %struct.Reg, %struct.Reg* %2114, i32 0, i32 0
  %RDX.i1029 = bitcast %union.anon* %2115 to i64*
  %2116 = load i64, i64* %RAX.i1027
  %2117 = load i64, i64* %RCX.i1028
  %2118 = mul i64 %2117, 2
  %2119 = add i64 %2118, %2116
  %2120 = load i64, i64* %PC.i1026
  %2121 = add i64 %2120, 4
  store i64 %2121, i64* %PC.i1026
  %2122 = inttoptr i64 %2119 to i16*
  %2123 = load i16, i16* %2122
  %2124 = zext i16 %2123 to i64
  store i64 %2124, i64* %RDX.i1029, align 8
  store %struct.Memory* %loadMem_403c06, %struct.Memory** %MEMORY
  %loadMem_403c0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2126 = getelementptr inbounds %struct.GPR, %struct.GPR* %2125, i32 0, i32 33
  %2127 = getelementptr inbounds %struct.Reg, %struct.Reg* %2126, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %2127 to i64*
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2129 = getelementptr inbounds %struct.GPR, %struct.GPR* %2128, i32 0, i32 7
  %2130 = getelementptr inbounds %struct.Reg, %struct.Reg* %2129, i32 0, i32 0
  %RDX.i1024 = bitcast %union.anon* %2130 to i64*
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2132 = getelementptr inbounds %struct.GPR, %struct.GPR* %2131, i32 0, i32 15
  %2133 = getelementptr inbounds %struct.Reg, %struct.Reg* %2132, i32 0, i32 0
  %RBP.i1025 = bitcast %union.anon* %2133 to i64*
  %2134 = load i64, i64* %RDX.i1024
  %2135 = load i64, i64* %RBP.i1025
  %2136 = sub i64 %2135, 8
  %2137 = load i64, i64* %PC.i1023
  %2138 = add i64 %2137, 3
  store i64 %2138, i64* %PC.i1023
  %2139 = trunc i64 %2134 to i32
  %2140 = inttoptr i64 %2136 to i32*
  %2141 = load i32, i32* %2140
  %2142 = add i32 %2141, %2139
  %2143 = zext i32 %2142 to i64
  store i64 %2143, i64* %RDX.i1024, align 8
  %2144 = icmp ult i32 %2142, %2139
  %2145 = icmp ult i32 %2142, %2141
  %2146 = or i1 %2144, %2145
  %2147 = zext i1 %2146 to i8
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2147, i8* %2148, align 1
  %2149 = and i32 %2142, 255
  %2150 = call i32 @llvm.ctpop.i32(i32 %2149)
  %2151 = trunc i32 %2150 to i8
  %2152 = and i8 %2151, 1
  %2153 = xor i8 %2152, 1
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2153, i8* %2154, align 1
  %2155 = xor i32 %2141, %2139
  %2156 = xor i32 %2155, %2142
  %2157 = lshr i32 %2156, 4
  %2158 = trunc i32 %2157 to i8
  %2159 = and i8 %2158, 1
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2159, i8* %2160, align 1
  %2161 = icmp eq i32 %2142, 0
  %2162 = zext i1 %2161 to i8
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2162, i8* %2163, align 1
  %2164 = lshr i32 %2142, 31
  %2165 = trunc i32 %2164 to i8
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2165, i8* %2166, align 1
  %2167 = lshr i32 %2139, 31
  %2168 = lshr i32 %2141, 31
  %2169 = xor i32 %2164, %2167
  %2170 = xor i32 %2164, %2168
  %2171 = add i32 %2169, %2170
  %2172 = icmp eq i32 %2171, 2
  %2173 = zext i1 %2172 to i8
  %2174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2173, i8* %2174, align 1
  store %struct.Memory* %loadMem_403c0a, %struct.Memory** %MEMORY
  %loadMem_403c0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 33
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %2177 to i64*
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 7
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %EDX.i1021 = bitcast %union.anon* %2180 to i32*
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2182 = getelementptr inbounds %struct.GPR, %struct.GPR* %2181, i32 0, i32 15
  %2183 = getelementptr inbounds %struct.Reg, %struct.Reg* %2182, i32 0, i32 0
  %RBP.i1022 = bitcast %union.anon* %2183 to i64*
  %2184 = load i64, i64* %RBP.i1022
  %2185 = sub i64 %2184, 8
  %2186 = load i32, i32* %EDX.i1021
  %2187 = zext i32 %2186 to i64
  %2188 = load i64, i64* %PC.i1020
  %2189 = add i64 %2188, 3
  store i64 %2189, i64* %PC.i1020
  %2190 = inttoptr i64 %2185 to i32*
  store i32 %2186, i32* %2190
  store %struct.Memory* %loadMem_403c0d, %struct.Memory** %MEMORY
  br label %block_.L_403c10

block_.L_403c10:                                  ; preds = %block_403be5, %block_403bd8
  %loadMem_403c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2192 = getelementptr inbounds %struct.GPR, %struct.GPR* %2191, i32 0, i32 33
  %2193 = getelementptr inbounds %struct.Reg, %struct.Reg* %2192, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %2193 to i64*
  %2194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2195 = getelementptr inbounds %struct.GPR, %struct.GPR* %2194, i32 0, i32 15
  %2196 = getelementptr inbounds %struct.Reg, %struct.Reg* %2195, i32 0, i32 0
  %RBP.i1019 = bitcast %union.anon* %2196 to i64*
  %2197 = load i64, i64* %RBP.i1019
  %2198 = sub i64 %2197, 632
  %2199 = load i64, i64* %PC.i1018
  %2200 = add i64 %2199, 7
  store i64 %2200, i64* %PC.i1018
  %2201 = inttoptr i64 %2198 to i32*
  %2202 = load i32, i32* %2201
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2203, align 1
  %2204 = and i32 %2202, 255
  %2205 = call i32 @llvm.ctpop.i32(i32 %2204)
  %2206 = trunc i32 %2205 to i8
  %2207 = and i8 %2206, 1
  %2208 = xor i8 %2207, 1
  %2209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2208, i8* %2209, align 1
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2210, align 1
  %2211 = icmp eq i32 %2202, 0
  %2212 = zext i1 %2211 to i8
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2212, i8* %2213, align 1
  %2214 = lshr i32 %2202, 31
  %2215 = trunc i32 %2214 to i8
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2215, i8* %2216, align 1
  %2217 = lshr i32 %2202, 31
  %2218 = xor i32 %2214, %2217
  %2219 = add i32 %2218, %2217
  %2220 = icmp eq i32 %2219, 2
  %2221 = zext i1 %2220 to i8
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2221, i8* %2222, align 1
  store %struct.Memory* %loadMem_403c10, %struct.Memory** %MEMORY
  %loadMem_403c17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2224 = getelementptr inbounds %struct.GPR, %struct.GPR* %2223, i32 0, i32 33
  %2225 = getelementptr inbounds %struct.Reg, %struct.Reg* %2224, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %2225 to i64*
  %2226 = load i64, i64* %PC.i1017
  %2227 = add i64 %2226, 83
  %2228 = load i64, i64* %PC.i1017
  %2229 = add i64 %2228, 6
  %2230 = load i64, i64* %PC.i1017
  %2231 = add i64 %2230, 6
  store i64 %2231, i64* %PC.i1017
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2233 = load i8, i8* %2232, align 1
  store i8 %2233, i8* %BRANCH_TAKEN, align 1
  %2234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2235 = icmp ne i8 %2233, 0
  %2236 = select i1 %2235, i64 %2227, i64 %2229
  store i64 %2236, i64* %2234, align 8
  store %struct.Memory* %loadMem_403c17, %struct.Memory** %MEMORY
  %loadBr_403c17 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403c17 = icmp eq i8 %loadBr_403c17, 1
  br i1 %cmpBr_403c17, label %block_.L_403c6a, label %block_403c1d

block_403c1d:                                     ; preds = %block_.L_403c10
  %loadMem_403c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2238 = getelementptr inbounds %struct.GPR, %struct.GPR* %2237, i32 0, i32 33
  %2239 = getelementptr inbounds %struct.Reg, %struct.Reg* %2238, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %2239 to i64*
  %2240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2241 = getelementptr inbounds %struct.GPR, %struct.GPR* %2240, i32 0, i32 1
  %2242 = getelementptr inbounds %struct.Reg, %struct.Reg* %2241, i32 0, i32 0
  %RAX.i1015 = bitcast %union.anon* %2242 to i64*
  %2243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2244 = getelementptr inbounds %struct.GPR, %struct.GPR* %2243, i32 0, i32 15
  %2245 = getelementptr inbounds %struct.Reg, %struct.Reg* %2244, i32 0, i32 0
  %RBP.i1016 = bitcast %union.anon* %2245 to i64*
  %2246 = load i64, i64* %RBP.i1016
  %2247 = sub i64 %2246, 624
  %2248 = load i64, i64* %PC.i1014
  %2249 = add i64 %2248, 7
  store i64 %2249, i64* %PC.i1014
  store i64 %2247, i64* %RAX.i1015, align 8
  store %struct.Memory* %loadMem_403c1d, %struct.Memory** %MEMORY
  %loadMem_403c24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2251 = getelementptr inbounds %struct.GPR, %struct.GPR* %2250, i32 0, i32 33
  %2252 = getelementptr inbounds %struct.Reg, %struct.Reg* %2251, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %2252 to i64*
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2254 = getelementptr inbounds %struct.GPR, %struct.GPR* %2253, i32 0, i32 5
  %2255 = getelementptr inbounds %struct.Reg, %struct.Reg* %2254, i32 0, i32 0
  %RCX.i1012 = bitcast %union.anon* %2255 to i64*
  %2256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2257 = getelementptr inbounds %struct.GPR, %struct.GPR* %2256, i32 0, i32 15
  %2258 = getelementptr inbounds %struct.Reg, %struct.Reg* %2257, i32 0, i32 0
  %RBP.i1013 = bitcast %union.anon* %2258 to i64*
  %2259 = load i64, i64* %RBP.i1013
  %2260 = sub i64 %2259, 184
  %2261 = load i64, i64* %PC.i1011
  %2262 = add i64 %2261, 7
  store i64 %2262, i64* %PC.i1011
  %2263 = inttoptr i64 %2260 to i64*
  %2264 = load i64, i64* %2263
  store i64 %2264, i64* %RCX.i1012, align 8
  store %struct.Memory* %loadMem_403c24, %struct.Memory** %MEMORY
  %loadMem_403c2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2266 = getelementptr inbounds %struct.GPR, %struct.GPR* %2265, i32 0, i32 33
  %2267 = getelementptr inbounds %struct.Reg, %struct.Reg* %2266, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %2267 to i64*
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2269 = getelementptr inbounds %struct.GPR, %struct.GPR* %2268, i32 0, i32 7
  %2270 = getelementptr inbounds %struct.Reg, %struct.Reg* %2269, i32 0, i32 0
  %RDX.i1009 = bitcast %union.anon* %2270 to i64*
  %2271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2272 = getelementptr inbounds %struct.GPR, %struct.GPR* %2271, i32 0, i32 15
  %2273 = getelementptr inbounds %struct.Reg, %struct.Reg* %2272, i32 0, i32 0
  %RBP.i1010 = bitcast %union.anon* %2273 to i64*
  %2274 = load i64, i64* %RBP.i1010
  %2275 = sub i64 %2274, 148
  %2276 = load i64, i64* %PC.i1008
  %2277 = add i64 %2276, 6
  store i64 %2277, i64* %PC.i1008
  %2278 = inttoptr i64 %2275 to i32*
  %2279 = load i32, i32* %2278
  %2280 = zext i32 %2279 to i64
  store i64 %2280, i64* %RDX.i1009, align 8
  store %struct.Memory* %loadMem_403c2b, %struct.Memory** %MEMORY
  %loadMem_403c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2282 = getelementptr inbounds %struct.GPR, %struct.GPR* %2281, i32 0, i32 33
  %2283 = getelementptr inbounds %struct.Reg, %struct.Reg* %2282, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %2283 to i64*
  %2284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2285 = getelementptr inbounds %struct.GPR, %struct.GPR* %2284, i32 0, i32 7
  %2286 = getelementptr inbounds %struct.Reg, %struct.Reg* %2285, i32 0, i32 0
  %RDX.i1007 = bitcast %union.anon* %2286 to i64*
  %2287 = load i64, i64* %RDX.i1007
  %2288 = load i64, i64* %PC.i1006
  %2289 = add i64 %2288, 3
  store i64 %2289, i64* %PC.i1006
  %2290 = trunc i64 %2287 to i32
  %2291 = add i32 1, %2290
  %2292 = zext i32 %2291 to i64
  store i64 %2292, i64* %RDX.i1007, align 8
  %2293 = icmp ult i32 %2291, %2290
  %2294 = icmp ult i32 %2291, 1
  %2295 = or i1 %2293, %2294
  %2296 = zext i1 %2295 to i8
  %2297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2296, i8* %2297, align 1
  %2298 = and i32 %2291, 255
  %2299 = call i32 @llvm.ctpop.i32(i32 %2298)
  %2300 = trunc i32 %2299 to i8
  %2301 = and i8 %2300, 1
  %2302 = xor i8 %2301, 1
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2302, i8* %2303, align 1
  %2304 = xor i64 1, %2287
  %2305 = trunc i64 %2304 to i32
  %2306 = xor i32 %2305, %2291
  %2307 = lshr i32 %2306, 4
  %2308 = trunc i32 %2307 to i8
  %2309 = and i8 %2308, 1
  %2310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2309, i8* %2310, align 1
  %2311 = icmp eq i32 %2291, 0
  %2312 = zext i1 %2311 to i8
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2312, i8* %2313, align 1
  %2314 = lshr i32 %2291, 31
  %2315 = trunc i32 %2314 to i8
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2315, i8* %2316, align 1
  %2317 = lshr i32 %2290, 31
  %2318 = xor i32 %2314, %2317
  %2319 = add i32 %2318, %2314
  %2320 = icmp eq i32 %2319, 2
  %2321 = zext i1 %2320 to i8
  %2322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2321, i8* %2322, align 1
  store %struct.Memory* %loadMem_403c31, %struct.Memory** %MEMORY
  %loadMem_403c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2324 = getelementptr inbounds %struct.GPR, %struct.GPR* %2323, i32 0, i32 33
  %2325 = getelementptr inbounds %struct.Reg, %struct.Reg* %2324, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %2325 to i64*
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2327 = getelementptr inbounds %struct.GPR, %struct.GPR* %2326, i32 0, i32 7
  %2328 = getelementptr inbounds %struct.Reg, %struct.Reg* %2327, i32 0, i32 0
  %EDX.i1004 = bitcast %union.anon* %2328 to i32*
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2330 = getelementptr inbounds %struct.GPR, %struct.GPR* %2329, i32 0, i32 9
  %2331 = getelementptr inbounds %struct.Reg, %struct.Reg* %2330, i32 0, i32 0
  %RSI.i1005 = bitcast %union.anon* %2331 to i64*
  %2332 = load i32, i32* %EDX.i1004
  %2333 = zext i32 %2332 to i64
  %2334 = load i64, i64* %PC.i1003
  %2335 = add i64 %2334, 3
  store i64 %2335, i64* %PC.i1003
  %2336 = shl i64 %2333, 32
  %2337 = ashr exact i64 %2336, 32
  store i64 %2337, i64* %RSI.i1005, align 8
  store %struct.Memory* %loadMem_403c34, %struct.Memory** %MEMORY
  %loadMem_403c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2339 = getelementptr inbounds %struct.GPR, %struct.GPR* %2338, i32 0, i32 33
  %2340 = getelementptr inbounds %struct.Reg, %struct.Reg* %2339, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %2340 to i64*
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2342 = getelementptr inbounds %struct.GPR, %struct.GPR* %2341, i32 0, i32 9
  %2343 = getelementptr inbounds %struct.Reg, %struct.Reg* %2342, i32 0, i32 0
  %RSI.i1002 = bitcast %union.anon* %2343 to i64*
  %2344 = load i64, i64* %RSI.i1002
  %2345 = load i64, i64* %PC.i1001
  %2346 = add i64 %2345, 4
  store i64 %2346, i64* %PC.i1001
  %2347 = sext i64 %2344 to i128
  %2348 = and i128 %2347, -18446744073709551616
  %2349 = zext i64 %2344 to i128
  %2350 = or i128 %2348, %2349
  %2351 = mul i128 24, %2350
  %2352 = trunc i128 %2351 to i64
  store i64 %2352, i64* %RSI.i1002, align 8
  %2353 = sext i64 %2352 to i128
  %2354 = icmp ne i128 %2353, %2351
  %2355 = zext i1 %2354 to i8
  %2356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2355, i8* %2356, align 1
  %2357 = trunc i128 %2351 to i32
  %2358 = and i32 %2357, 255
  %2359 = call i32 @llvm.ctpop.i32(i32 %2358)
  %2360 = trunc i32 %2359 to i8
  %2361 = and i8 %2360, 1
  %2362 = xor i8 %2361, 1
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2362, i8* %2363, align 1
  %2364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2364, align 1
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2365, align 1
  %2366 = lshr i64 %2352, 63
  %2367 = trunc i64 %2366 to i8
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2367, i8* %2368, align 1
  %2369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2355, i8* %2369, align 1
  store %struct.Memory* %loadMem_403c37, %struct.Memory** %MEMORY
  %loadMem_403c3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2371 = getelementptr inbounds %struct.GPR, %struct.GPR* %2370, i32 0, i32 33
  %2372 = getelementptr inbounds %struct.Reg, %struct.Reg* %2371, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %2372 to i64*
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 1
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %RAX.i999 = bitcast %union.anon* %2375 to i64*
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 11
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %RDI.i1000 = bitcast %union.anon* %2378 to i64*
  %2379 = load i64, i64* %RAX.i999
  %2380 = load i64, i64* %PC.i998
  %2381 = add i64 %2380, 3
  store i64 %2381, i64* %PC.i998
  store i64 %2379, i64* %RDI.i1000, align 8
  store %struct.Memory* %loadMem_403c3b, %struct.Memory** %MEMORY
  %loadMem_403c3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2383 = getelementptr inbounds %struct.GPR, %struct.GPR* %2382, i32 0, i32 33
  %2384 = getelementptr inbounds %struct.Reg, %struct.Reg* %2383, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %2384 to i64*
  %2385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2386 = getelementptr inbounds %struct.GPR, %struct.GPR* %2385, i32 0, i32 9
  %2387 = getelementptr inbounds %struct.Reg, %struct.Reg* %2386, i32 0, i32 0
  %RSI.i996 = bitcast %union.anon* %2387 to i64*
  %2388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2389 = getelementptr inbounds %struct.GPR, %struct.GPR* %2388, i32 0, i32 11
  %2390 = getelementptr inbounds %struct.Reg, %struct.Reg* %2389, i32 0, i32 0
  %RDI.i997 = bitcast %union.anon* %2390 to i64*
  %2391 = load i64, i64* %RDI.i997
  %2392 = load i64, i64* %RSI.i996
  %2393 = load i64, i64* %PC.i995
  %2394 = add i64 %2393, 3
  store i64 %2394, i64* %PC.i995
  %2395 = add i64 %2392, %2391
  store i64 %2395, i64* %RDI.i997, align 8
  %2396 = icmp ult i64 %2395, %2391
  %2397 = icmp ult i64 %2395, %2392
  %2398 = or i1 %2396, %2397
  %2399 = zext i1 %2398 to i8
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2399, i8* %2400, align 1
  %2401 = trunc i64 %2395 to i32
  %2402 = and i32 %2401, 255
  %2403 = call i32 @llvm.ctpop.i32(i32 %2402)
  %2404 = trunc i32 %2403 to i8
  %2405 = and i8 %2404, 1
  %2406 = xor i8 %2405, 1
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2406, i8* %2407, align 1
  %2408 = xor i64 %2392, %2391
  %2409 = xor i64 %2408, %2395
  %2410 = lshr i64 %2409, 4
  %2411 = trunc i64 %2410 to i8
  %2412 = and i8 %2411, 1
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2412, i8* %2413, align 1
  %2414 = icmp eq i64 %2395, 0
  %2415 = zext i1 %2414 to i8
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2415, i8* %2416, align 1
  %2417 = lshr i64 %2395, 63
  %2418 = trunc i64 %2417 to i8
  %2419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2418, i8* %2419, align 1
  %2420 = lshr i64 %2391, 63
  %2421 = lshr i64 %2392, 63
  %2422 = xor i64 %2417, %2420
  %2423 = xor i64 %2417, %2421
  %2424 = add i64 %2422, %2423
  %2425 = icmp eq i64 %2424, 2
  %2426 = zext i1 %2425 to i8
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2426, i8* %2427, align 1
  store %struct.Memory* %loadMem_403c3e, %struct.Memory** %MEMORY
  %loadMem_403c41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2429 = getelementptr inbounds %struct.GPR, %struct.GPR* %2428, i32 0, i32 33
  %2430 = getelementptr inbounds %struct.Reg, %struct.Reg* %2429, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %2430 to i64*
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2432 = getelementptr inbounds %struct.GPR, %struct.GPR* %2431, i32 0, i32 9
  %2433 = getelementptr inbounds %struct.Reg, %struct.Reg* %2432, i32 0, i32 0
  %RSI.i993 = bitcast %union.anon* %2433 to i64*
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2435 = getelementptr inbounds %struct.GPR, %struct.GPR* %2434, i32 0, i32 11
  %2436 = getelementptr inbounds %struct.Reg, %struct.Reg* %2435, i32 0, i32 0
  %RDI.i994 = bitcast %union.anon* %2436 to i64*
  %2437 = load i64, i64* %RDI.i994
  %2438 = add i64 %2437, 20
  %2439 = load i64, i64* %PC.i992
  %2440 = add i64 %2439, 4
  store i64 %2440, i64* %PC.i992
  %2441 = inttoptr i64 %2438 to i32*
  %2442 = load i32, i32* %2441
  %2443 = sext i32 %2442 to i64
  store i64 %2443, i64* %RSI.i993, align 8
  store %struct.Memory* %loadMem_403c41, %struct.Memory** %MEMORY
  %loadMem_403c45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2445 = getelementptr inbounds %struct.GPR, %struct.GPR* %2444, i32 0, i32 33
  %2446 = getelementptr inbounds %struct.Reg, %struct.Reg* %2445, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %2446 to i64*
  %2447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2448 = getelementptr inbounds %struct.GPR, %struct.GPR* %2447, i32 0, i32 5
  %2449 = getelementptr inbounds %struct.Reg, %struct.Reg* %2448, i32 0, i32 0
  %RCX.i990 = bitcast %union.anon* %2449 to i64*
  %2450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2451 = getelementptr inbounds %struct.GPR, %struct.GPR* %2450, i32 0, i32 9
  %2452 = getelementptr inbounds %struct.Reg, %struct.Reg* %2451, i32 0, i32 0
  %RSI.i991 = bitcast %union.anon* %2452 to i64*
  %2453 = load i64, i64* %RCX.i990
  %2454 = load i64, i64* %RSI.i991
  %2455 = mul i64 %2454, 8
  %2456 = add i64 %2455, %2453
  %2457 = load i64, i64* %PC.i989
  %2458 = add i64 %2457, 4
  store i64 %2458, i64* %PC.i989
  %2459 = inttoptr i64 %2456 to i64*
  %2460 = load i64, i64* %2459
  store i64 %2460, i64* %RCX.i990, align 8
  store %struct.Memory* %loadMem_403c45, %struct.Memory** %MEMORY
  %loadMem_403c49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2462 = getelementptr inbounds %struct.GPR, %struct.GPR* %2461, i32 0, i32 33
  %2463 = getelementptr inbounds %struct.Reg, %struct.Reg* %2462, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %2463 to i64*
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2465 = getelementptr inbounds %struct.GPR, %struct.GPR* %2464, i32 0, i32 7
  %2466 = getelementptr inbounds %struct.Reg, %struct.Reg* %2465, i32 0, i32 0
  %RDX.i987 = bitcast %union.anon* %2466 to i64*
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2468 = getelementptr inbounds %struct.GPR, %struct.GPR* %2467, i32 0, i32 15
  %2469 = getelementptr inbounds %struct.Reg, %struct.Reg* %2468, i32 0, i32 0
  %RBP.i988 = bitcast %union.anon* %2469 to i64*
  %2470 = load i64, i64* %RBP.i988
  %2471 = sub i64 %2470, 148
  %2472 = load i64, i64* %PC.i986
  %2473 = add i64 %2472, 6
  store i64 %2473, i64* %PC.i986
  %2474 = inttoptr i64 %2471 to i32*
  %2475 = load i32, i32* %2474
  %2476 = zext i32 %2475 to i64
  store i64 %2476, i64* %RDX.i987, align 8
  store %struct.Memory* %loadMem_403c49, %struct.Memory** %MEMORY
  %loadMem_403c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 33
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %2479 to i64*
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2481 = getelementptr inbounds %struct.GPR, %struct.GPR* %2480, i32 0, i32 7
  %2482 = getelementptr inbounds %struct.Reg, %struct.Reg* %2481, i32 0, i32 0
  %RDX.i985 = bitcast %union.anon* %2482 to i64*
  %2483 = load i64, i64* %RDX.i985
  %2484 = load i64, i64* %PC.i984
  %2485 = add i64 %2484, 3
  store i64 %2485, i64* %PC.i984
  %2486 = trunc i64 %2483 to i32
  %2487 = add i32 1, %2486
  %2488 = zext i32 %2487 to i64
  store i64 %2488, i64* %RDX.i985, align 8
  %2489 = icmp ult i32 %2487, %2486
  %2490 = icmp ult i32 %2487, 1
  %2491 = or i1 %2489, %2490
  %2492 = zext i1 %2491 to i8
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2492, i8* %2493, align 1
  %2494 = and i32 %2487, 255
  %2495 = call i32 @llvm.ctpop.i32(i32 %2494)
  %2496 = trunc i32 %2495 to i8
  %2497 = and i8 %2496, 1
  %2498 = xor i8 %2497, 1
  %2499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2498, i8* %2499, align 1
  %2500 = xor i64 1, %2483
  %2501 = trunc i64 %2500 to i32
  %2502 = xor i32 %2501, %2487
  %2503 = lshr i32 %2502, 4
  %2504 = trunc i32 %2503 to i8
  %2505 = and i8 %2504, 1
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2505, i8* %2506, align 1
  %2507 = icmp eq i32 %2487, 0
  %2508 = zext i1 %2507 to i8
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2508, i8* %2509, align 1
  %2510 = lshr i32 %2487, 31
  %2511 = trunc i32 %2510 to i8
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2511, i8* %2512, align 1
  %2513 = lshr i32 %2486, 31
  %2514 = xor i32 %2510, %2513
  %2515 = add i32 %2514, %2510
  %2516 = icmp eq i32 %2515, 2
  %2517 = zext i1 %2516 to i8
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2517, i8* %2518, align 1
  store %struct.Memory* %loadMem_403c4f, %struct.Memory** %MEMORY
  %loadMem_403c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2520 = getelementptr inbounds %struct.GPR, %struct.GPR* %2519, i32 0, i32 33
  %2521 = getelementptr inbounds %struct.Reg, %struct.Reg* %2520, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %2521 to i64*
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2523 = getelementptr inbounds %struct.GPR, %struct.GPR* %2522, i32 0, i32 7
  %2524 = getelementptr inbounds %struct.Reg, %struct.Reg* %2523, i32 0, i32 0
  %EDX.i982 = bitcast %union.anon* %2524 to i32*
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2526 = getelementptr inbounds %struct.GPR, %struct.GPR* %2525, i32 0, i32 9
  %2527 = getelementptr inbounds %struct.Reg, %struct.Reg* %2526, i32 0, i32 0
  %RSI.i983 = bitcast %union.anon* %2527 to i64*
  %2528 = load i32, i32* %EDX.i982
  %2529 = zext i32 %2528 to i64
  %2530 = load i64, i64* %PC.i981
  %2531 = add i64 %2530, 3
  store i64 %2531, i64* %PC.i981
  %2532 = shl i64 %2529, 32
  %2533 = ashr exact i64 %2532, 32
  store i64 %2533, i64* %RSI.i983, align 8
  store %struct.Memory* %loadMem_403c52, %struct.Memory** %MEMORY
  %loadMem_403c55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2535 = getelementptr inbounds %struct.GPR, %struct.GPR* %2534, i32 0, i32 33
  %2536 = getelementptr inbounds %struct.Reg, %struct.Reg* %2535, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %2536 to i64*
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2538 = getelementptr inbounds %struct.GPR, %struct.GPR* %2537, i32 0, i32 9
  %2539 = getelementptr inbounds %struct.Reg, %struct.Reg* %2538, i32 0, i32 0
  %RSI.i980 = bitcast %union.anon* %2539 to i64*
  %2540 = load i64, i64* %RSI.i980
  %2541 = load i64, i64* %PC.i979
  %2542 = add i64 %2541, 4
  store i64 %2542, i64* %PC.i979
  %2543 = sext i64 %2540 to i128
  %2544 = and i128 %2543, -18446744073709551616
  %2545 = zext i64 %2540 to i128
  %2546 = or i128 %2544, %2545
  %2547 = mul i128 24, %2546
  %2548 = trunc i128 %2547 to i64
  store i64 %2548, i64* %RSI.i980, align 8
  %2549 = sext i64 %2548 to i128
  %2550 = icmp ne i128 %2549, %2547
  %2551 = zext i1 %2550 to i8
  %2552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2551, i8* %2552, align 1
  %2553 = trunc i128 %2547 to i32
  %2554 = and i32 %2553, 255
  %2555 = call i32 @llvm.ctpop.i32(i32 %2554)
  %2556 = trunc i32 %2555 to i8
  %2557 = and i8 %2556, 1
  %2558 = xor i8 %2557, 1
  %2559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2558, i8* %2559, align 1
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2560, align 1
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2561, align 1
  %2562 = lshr i64 %2548, 63
  %2563 = trunc i64 %2562 to i8
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2563, i8* %2564, align 1
  %2565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2551, i8* %2565, align 1
  store %struct.Memory* %loadMem_403c55, %struct.Memory** %MEMORY
  %loadMem_403c59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2567 = getelementptr inbounds %struct.GPR, %struct.GPR* %2566, i32 0, i32 33
  %2568 = getelementptr inbounds %struct.Reg, %struct.Reg* %2567, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %2568 to i64*
  %2569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2570 = getelementptr inbounds %struct.GPR, %struct.GPR* %2569, i32 0, i32 1
  %2571 = getelementptr inbounds %struct.Reg, %struct.Reg* %2570, i32 0, i32 0
  %RAX.i977 = bitcast %union.anon* %2571 to i64*
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2573 = getelementptr inbounds %struct.GPR, %struct.GPR* %2572, i32 0, i32 9
  %2574 = getelementptr inbounds %struct.Reg, %struct.Reg* %2573, i32 0, i32 0
  %RSI.i978 = bitcast %union.anon* %2574 to i64*
  %2575 = load i64, i64* %RAX.i977
  %2576 = load i64, i64* %RSI.i978
  %2577 = load i64, i64* %PC.i976
  %2578 = add i64 %2577, 3
  store i64 %2578, i64* %PC.i976
  %2579 = add i64 %2576, %2575
  store i64 %2579, i64* %RAX.i977, align 8
  %2580 = icmp ult i64 %2579, %2575
  %2581 = icmp ult i64 %2579, %2576
  %2582 = or i1 %2580, %2581
  %2583 = zext i1 %2582 to i8
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2583, i8* %2584, align 1
  %2585 = trunc i64 %2579 to i32
  %2586 = and i32 %2585, 255
  %2587 = call i32 @llvm.ctpop.i32(i32 %2586)
  %2588 = trunc i32 %2587 to i8
  %2589 = and i8 %2588, 1
  %2590 = xor i8 %2589, 1
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2590, i8* %2591, align 1
  %2592 = xor i64 %2576, %2575
  %2593 = xor i64 %2592, %2579
  %2594 = lshr i64 %2593, 4
  %2595 = trunc i64 %2594 to i8
  %2596 = and i8 %2595, 1
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2596, i8* %2597, align 1
  %2598 = icmp eq i64 %2579, 0
  %2599 = zext i1 %2598 to i8
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2599, i8* %2600, align 1
  %2601 = lshr i64 %2579, 63
  %2602 = trunc i64 %2601 to i8
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2602, i8* %2603, align 1
  %2604 = lshr i64 %2575, 63
  %2605 = lshr i64 %2576, 63
  %2606 = xor i64 %2601, %2604
  %2607 = xor i64 %2601, %2605
  %2608 = add i64 %2606, %2607
  %2609 = icmp eq i64 %2608, 2
  %2610 = zext i1 %2609 to i8
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2610, i8* %2611, align 1
  store %struct.Memory* %loadMem_403c59, %struct.Memory** %MEMORY
  %loadMem_403c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2613 = getelementptr inbounds %struct.GPR, %struct.GPR* %2612, i32 0, i32 33
  %2614 = getelementptr inbounds %struct.Reg, %struct.Reg* %2613, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %2614 to i64*
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2616 = getelementptr inbounds %struct.GPR, %struct.GPR* %2615, i32 0, i32 1
  %2617 = getelementptr inbounds %struct.Reg, %struct.Reg* %2616, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %2617 to i64*
  %2618 = load i64, i64* %RAX.i975
  %2619 = add i64 %2618, 16
  %2620 = load i64, i64* %PC.i974
  %2621 = add i64 %2620, 4
  store i64 %2621, i64* %PC.i974
  %2622 = inttoptr i64 %2619 to i32*
  %2623 = load i32, i32* %2622
  %2624 = sext i32 %2623 to i64
  store i64 %2624, i64* %RAX.i975, align 8
  store %struct.Memory* %loadMem_403c5c, %struct.Memory** %MEMORY
  %loadMem_403c60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2626 = getelementptr inbounds %struct.GPR, %struct.GPR* %2625, i32 0, i32 33
  %2627 = getelementptr inbounds %struct.Reg, %struct.Reg* %2626, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %2627 to i64*
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2629 = getelementptr inbounds %struct.GPR, %struct.GPR* %2628, i32 0, i32 1
  %2630 = getelementptr inbounds %struct.Reg, %struct.Reg* %2629, i32 0, i32 0
  %RAX.i971 = bitcast %union.anon* %2630 to i64*
  %2631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2632 = getelementptr inbounds %struct.GPR, %struct.GPR* %2631, i32 0, i32 5
  %2633 = getelementptr inbounds %struct.Reg, %struct.Reg* %2632, i32 0, i32 0
  %RCX.i972 = bitcast %union.anon* %2633 to i64*
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2635 = getelementptr inbounds %struct.GPR, %struct.GPR* %2634, i32 0, i32 7
  %2636 = getelementptr inbounds %struct.Reg, %struct.Reg* %2635, i32 0, i32 0
  %RDX.i973 = bitcast %union.anon* %2636 to i64*
  %2637 = load i64, i64* %RCX.i972
  %2638 = load i64, i64* %RAX.i971
  %2639 = mul i64 %2638, 2
  %2640 = add i64 %2639, %2637
  %2641 = load i64, i64* %PC.i970
  %2642 = add i64 %2641, 4
  store i64 %2642, i64* %PC.i970
  %2643 = inttoptr i64 %2640 to i16*
  %2644 = load i16, i16* %2643
  %2645 = zext i16 %2644 to i64
  store i64 %2645, i64* %RDX.i973, align 8
  store %struct.Memory* %loadMem_403c60, %struct.Memory** %MEMORY
  %loadMem_403c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2647 = getelementptr inbounds %struct.GPR, %struct.GPR* %2646, i32 0, i32 33
  %2648 = getelementptr inbounds %struct.Reg, %struct.Reg* %2647, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %2648 to i64*
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2650 = getelementptr inbounds %struct.GPR, %struct.GPR* %2649, i32 0, i32 7
  %2651 = getelementptr inbounds %struct.Reg, %struct.Reg* %2650, i32 0, i32 0
  %RDX.i968 = bitcast %union.anon* %2651 to i64*
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2653 = getelementptr inbounds %struct.GPR, %struct.GPR* %2652, i32 0, i32 15
  %2654 = getelementptr inbounds %struct.Reg, %struct.Reg* %2653, i32 0, i32 0
  %RBP.i969 = bitcast %union.anon* %2654 to i64*
  %2655 = load i64, i64* %RDX.i968
  %2656 = load i64, i64* %RBP.i969
  %2657 = sub i64 %2656, 12
  %2658 = load i64, i64* %PC.i967
  %2659 = add i64 %2658, 3
  store i64 %2659, i64* %PC.i967
  %2660 = trunc i64 %2655 to i32
  %2661 = inttoptr i64 %2657 to i32*
  %2662 = load i32, i32* %2661
  %2663 = add i32 %2662, %2660
  %2664 = zext i32 %2663 to i64
  store i64 %2664, i64* %RDX.i968, align 8
  %2665 = icmp ult i32 %2663, %2660
  %2666 = icmp ult i32 %2663, %2662
  %2667 = or i1 %2665, %2666
  %2668 = zext i1 %2667 to i8
  %2669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2668, i8* %2669, align 1
  %2670 = and i32 %2663, 255
  %2671 = call i32 @llvm.ctpop.i32(i32 %2670)
  %2672 = trunc i32 %2671 to i8
  %2673 = and i8 %2672, 1
  %2674 = xor i8 %2673, 1
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2674, i8* %2675, align 1
  %2676 = xor i32 %2662, %2660
  %2677 = xor i32 %2676, %2663
  %2678 = lshr i32 %2677, 4
  %2679 = trunc i32 %2678 to i8
  %2680 = and i8 %2679, 1
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2680, i8* %2681, align 1
  %2682 = icmp eq i32 %2663, 0
  %2683 = zext i1 %2682 to i8
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2683, i8* %2684, align 1
  %2685 = lshr i32 %2663, 31
  %2686 = trunc i32 %2685 to i8
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2686, i8* %2687, align 1
  %2688 = lshr i32 %2660, 31
  %2689 = lshr i32 %2662, 31
  %2690 = xor i32 %2685, %2688
  %2691 = xor i32 %2685, %2689
  %2692 = add i32 %2690, %2691
  %2693 = icmp eq i32 %2692, 2
  %2694 = zext i1 %2693 to i8
  %2695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2694, i8* %2695, align 1
  store %struct.Memory* %loadMem_403c64, %struct.Memory** %MEMORY
  %loadMem_403c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2697 = getelementptr inbounds %struct.GPR, %struct.GPR* %2696, i32 0, i32 33
  %2698 = getelementptr inbounds %struct.Reg, %struct.Reg* %2697, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %2698 to i64*
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 7
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %EDX.i965 = bitcast %union.anon* %2701 to i32*
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2703 = getelementptr inbounds %struct.GPR, %struct.GPR* %2702, i32 0, i32 15
  %2704 = getelementptr inbounds %struct.Reg, %struct.Reg* %2703, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %2704 to i64*
  %2705 = load i64, i64* %RBP.i966
  %2706 = sub i64 %2705, 12
  %2707 = load i32, i32* %EDX.i965
  %2708 = zext i32 %2707 to i64
  %2709 = load i64, i64* %PC.i964
  %2710 = add i64 %2709, 3
  store i64 %2710, i64* %PC.i964
  %2711 = inttoptr i64 %2706 to i32*
  store i32 %2707, i32* %2711
  store %struct.Memory* %loadMem_403c67, %struct.Memory** %MEMORY
  br label %block_.L_403c6a

block_.L_403c6a:                                  ; preds = %block_403c1d, %block_.L_403c10
  %loadMem_403c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2713 = getelementptr inbounds %struct.GPR, %struct.GPR* %2712, i32 0, i32 33
  %2714 = getelementptr inbounds %struct.Reg, %struct.Reg* %2713, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %2714 to i64*
  %2715 = load i64, i64* %PC.i963
  %2716 = add i64 %2715, 5
  %2717 = load i64, i64* %PC.i963
  %2718 = add i64 %2717, 5
  store i64 %2718, i64* %PC.i963
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2716, i64* %2719, align 8
  store %struct.Memory* %loadMem_403c6a, %struct.Memory** %MEMORY
  br label %block_.L_403c6f

block_.L_403c6f:                                  ; preds = %block_.L_403c6a
  %loadMem_403c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2721 = getelementptr inbounds %struct.GPR, %struct.GPR* %2720, i32 0, i32 33
  %2722 = getelementptr inbounds %struct.Reg, %struct.Reg* %2721, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %2722 to i64*
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2724 = getelementptr inbounds %struct.GPR, %struct.GPR* %2723, i32 0, i32 1
  %2725 = getelementptr inbounds %struct.Reg, %struct.Reg* %2724, i32 0, i32 0
  %RAX.i961 = bitcast %union.anon* %2725 to i64*
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2727 = getelementptr inbounds %struct.GPR, %struct.GPR* %2726, i32 0, i32 15
  %2728 = getelementptr inbounds %struct.Reg, %struct.Reg* %2727, i32 0, i32 0
  %RBP.i962 = bitcast %union.anon* %2728 to i64*
  %2729 = load i64, i64* %RBP.i962
  %2730 = sub i64 %2729, 148
  %2731 = load i64, i64* %PC.i960
  %2732 = add i64 %2731, 6
  store i64 %2732, i64* %PC.i960
  %2733 = inttoptr i64 %2730 to i32*
  %2734 = load i32, i32* %2733
  %2735 = zext i32 %2734 to i64
  store i64 %2735, i64* %RAX.i961, align 8
  store %struct.Memory* %loadMem_403c6f, %struct.Memory** %MEMORY
  %loadMem_403c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2737 = getelementptr inbounds %struct.GPR, %struct.GPR* %2736, i32 0, i32 33
  %2738 = getelementptr inbounds %struct.Reg, %struct.Reg* %2737, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %2738 to i64*
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2740 = getelementptr inbounds %struct.GPR, %struct.GPR* %2739, i32 0, i32 1
  %2741 = getelementptr inbounds %struct.Reg, %struct.Reg* %2740, i32 0, i32 0
  %RAX.i959 = bitcast %union.anon* %2741 to i64*
  %2742 = load i64, i64* %RAX.i959
  %2743 = load i64, i64* %PC.i958
  %2744 = add i64 %2743, 3
  store i64 %2744, i64* %PC.i958
  %2745 = trunc i64 %2742 to i32
  %2746 = add i32 1, %2745
  %2747 = zext i32 %2746 to i64
  store i64 %2747, i64* %RAX.i959, align 8
  %2748 = icmp ult i32 %2746, %2745
  %2749 = icmp ult i32 %2746, 1
  %2750 = or i1 %2748, %2749
  %2751 = zext i1 %2750 to i8
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2751, i8* %2752, align 1
  %2753 = and i32 %2746, 255
  %2754 = call i32 @llvm.ctpop.i32(i32 %2753)
  %2755 = trunc i32 %2754 to i8
  %2756 = and i8 %2755, 1
  %2757 = xor i8 %2756, 1
  %2758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2757, i8* %2758, align 1
  %2759 = xor i64 1, %2742
  %2760 = trunc i64 %2759 to i32
  %2761 = xor i32 %2760, %2746
  %2762 = lshr i32 %2761, 4
  %2763 = trunc i32 %2762 to i8
  %2764 = and i8 %2763, 1
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2764, i8* %2765, align 1
  %2766 = icmp eq i32 %2746, 0
  %2767 = zext i1 %2766 to i8
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2767, i8* %2768, align 1
  %2769 = lshr i32 %2746, 31
  %2770 = trunc i32 %2769 to i8
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2770, i8* %2771, align 1
  %2772 = lshr i32 %2745, 31
  %2773 = xor i32 %2769, %2772
  %2774 = add i32 %2773, %2769
  %2775 = icmp eq i32 %2774, 2
  %2776 = zext i1 %2775 to i8
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2776, i8* %2777, align 1
  store %struct.Memory* %loadMem_403c75, %struct.Memory** %MEMORY
  %loadMem_403c78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2779 = getelementptr inbounds %struct.GPR, %struct.GPR* %2778, i32 0, i32 33
  %2780 = getelementptr inbounds %struct.Reg, %struct.Reg* %2779, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %2780 to i64*
  %2781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2782 = getelementptr inbounds %struct.GPR, %struct.GPR* %2781, i32 0, i32 1
  %2783 = getelementptr inbounds %struct.Reg, %struct.Reg* %2782, i32 0, i32 0
  %EAX.i956 = bitcast %union.anon* %2783 to i32*
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2785 = getelementptr inbounds %struct.GPR, %struct.GPR* %2784, i32 0, i32 15
  %2786 = getelementptr inbounds %struct.Reg, %struct.Reg* %2785, i32 0, i32 0
  %RBP.i957 = bitcast %union.anon* %2786 to i64*
  %2787 = load i64, i64* %RBP.i957
  %2788 = sub i64 %2787, 148
  %2789 = load i32, i32* %EAX.i956
  %2790 = zext i32 %2789 to i64
  %2791 = load i64, i64* %PC.i955
  %2792 = add i64 %2791, 6
  store i64 %2792, i64* %PC.i955
  %2793 = inttoptr i64 %2788 to i32*
  store i32 %2789, i32* %2793
  store %struct.Memory* %loadMem_403c78, %struct.Memory** %MEMORY
  %loadMem_403c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2795 = getelementptr inbounds %struct.GPR, %struct.GPR* %2794, i32 0, i32 33
  %2796 = getelementptr inbounds %struct.Reg, %struct.Reg* %2795, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %2796 to i64*
  %2797 = load i64, i64* %PC.i954
  %2798 = add i64 %2797, -179
  %2799 = load i64, i64* %PC.i954
  %2800 = add i64 %2799, 5
  store i64 %2800, i64* %PC.i954
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2798, i64* %2801, align 8
  store %struct.Memory* %loadMem_403c7e, %struct.Memory** %MEMORY
  br label %block_.L_403bcb

block_.L_403c83:                                  ; preds = %block_.L_403bcb
  %loadMem_403c83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2803 = getelementptr inbounds %struct.GPR, %struct.GPR* %2802, i32 0, i32 33
  %2804 = getelementptr inbounds %struct.Reg, %struct.Reg* %2803, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %2804 to i64*
  %2805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2806 = getelementptr inbounds %struct.GPR, %struct.GPR* %2805, i32 0, i32 15
  %2807 = getelementptr inbounds %struct.Reg, %struct.Reg* %2806, i32 0, i32 0
  %RBP.i953 = bitcast %union.anon* %2807 to i64*
  %2808 = load i64, i64* %RBP.i953
  %2809 = sub i64 %2808, 628
  %2810 = load i64, i64* %PC.i952
  %2811 = add i64 %2810, 7
  store i64 %2811, i64* %PC.i952
  %2812 = inttoptr i64 %2809 to i32*
  %2813 = load i32, i32* %2812
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2814, align 1
  %2815 = and i32 %2813, 255
  %2816 = call i32 @llvm.ctpop.i32(i32 %2815)
  %2817 = trunc i32 %2816 to i8
  %2818 = and i8 %2817, 1
  %2819 = xor i8 %2818, 1
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2819, i8* %2820, align 1
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2821, align 1
  %2822 = icmp eq i32 %2813, 0
  %2823 = zext i1 %2822 to i8
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2823, i8* %2824, align 1
  %2825 = lshr i32 %2813, 31
  %2826 = trunc i32 %2825 to i8
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2826, i8* %2827, align 1
  %2828 = lshr i32 %2813, 31
  %2829 = xor i32 %2825, %2828
  %2830 = add i32 %2829, %2828
  %2831 = icmp eq i32 %2830, 2
  %2832 = zext i1 %2831 to i8
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2832, i8* %2833, align 1
  store %struct.Memory* %loadMem_403c83, %struct.Memory** %MEMORY
  %loadMem_403c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2835 = getelementptr inbounds %struct.GPR, %struct.GPR* %2834, i32 0, i32 33
  %2836 = getelementptr inbounds %struct.Reg, %struct.Reg* %2835, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %2836 to i64*
  %2837 = load i64, i64* %PC.i951
  %2838 = add i64 %2837, 53
  %2839 = load i64, i64* %PC.i951
  %2840 = add i64 %2839, 6
  %2841 = load i64, i64* %PC.i951
  %2842 = add i64 %2841, 6
  store i64 %2842, i64* %PC.i951
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2844 = load i8, i8* %2843, align 1
  store i8 %2844, i8* %BRANCH_TAKEN, align 1
  %2845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2846 = icmp ne i8 %2844, 0
  %2847 = select i1 %2846, i64 %2838, i64 %2840
  store i64 %2847, i64* %2845, align 8
  store %struct.Memory* %loadMem_403c8a, %struct.Memory** %MEMORY
  %loadBr_403c8a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403c8a = icmp eq i8 %loadBr_403c8a, 1
  br i1 %cmpBr_403c8a, label %block_.L_403cbf, label %block_403c90

block_403c90:                                     ; preds = %block_.L_403c83
  %loadMem_403c90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2849 = getelementptr inbounds %struct.GPR, %struct.GPR* %2848, i32 0, i32 33
  %2850 = getelementptr inbounds %struct.Reg, %struct.Reg* %2849, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %2850 to i64*
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 15
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %RBP.i950 = bitcast %union.anon* %2853 to i64*
  %2854 = load i64, i64* %RBP.i950
  %2855 = sub i64 %2854, 632
  %2856 = load i64, i64* %PC.i949
  %2857 = add i64 %2856, 7
  store i64 %2857, i64* %PC.i949
  %2858 = inttoptr i64 %2855 to i32*
  %2859 = load i32, i32* %2858
  %2860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2860, align 1
  %2861 = and i32 %2859, 255
  %2862 = call i32 @llvm.ctpop.i32(i32 %2861)
  %2863 = trunc i32 %2862 to i8
  %2864 = and i8 %2863, 1
  %2865 = xor i8 %2864, 1
  %2866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2865, i8* %2866, align 1
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2867, align 1
  %2868 = icmp eq i32 %2859, 0
  %2869 = zext i1 %2868 to i8
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2869, i8* %2870, align 1
  %2871 = lshr i32 %2859, 31
  %2872 = trunc i32 %2871 to i8
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2872, i8* %2873, align 1
  %2874 = lshr i32 %2859, 31
  %2875 = xor i32 %2871, %2874
  %2876 = add i32 %2875, %2874
  %2877 = icmp eq i32 %2876, 2
  %2878 = zext i1 %2877 to i8
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2878, i8* %2879, align 1
  store %struct.Memory* %loadMem_403c90, %struct.Memory** %MEMORY
  %loadMem_403c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2881 = getelementptr inbounds %struct.GPR, %struct.GPR* %2880, i32 0, i32 33
  %2882 = getelementptr inbounds %struct.Reg, %struct.Reg* %2881, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %2882 to i64*
  %2883 = load i64, i64* %PC.i948
  %2884 = add i64 %2883, 40
  %2885 = load i64, i64* %PC.i948
  %2886 = add i64 %2885, 6
  %2887 = load i64, i64* %PC.i948
  %2888 = add i64 %2887, 6
  store i64 %2888, i64* %PC.i948
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2890 = load i8, i8* %2889, align 1
  store i8 %2890, i8* %BRANCH_TAKEN, align 1
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2892 = icmp ne i8 %2890, 0
  %2893 = select i1 %2892, i64 %2884, i64 %2886
  store i64 %2893, i64* %2891, align 8
  store %struct.Memory* %loadMem_403c97, %struct.Memory** %MEMORY
  %loadBr_403c97 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403c97 = icmp eq i8 %loadBr_403c97, 1
  br i1 %cmpBr_403c97, label %block_.L_403cbf, label %block_403c9d

block_403c9d:                                     ; preds = %block_403c90
  %loadMem_403c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 33
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %2896 to i64*
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2898 = getelementptr inbounds %struct.GPR, %struct.GPR* %2897, i32 0, i32 1
  %2899 = getelementptr inbounds %struct.Reg, %struct.Reg* %2898, i32 0, i32 0
  %RAX.i947 = bitcast %union.anon* %2899 to i64*
  %2900 = load i64, i64* %PC.i946
  %2901 = add i64 %2900, 5
  store i64 %2901, i64* %PC.i946
  store i64 32, i64* %RAX.i947, align 8
  store %struct.Memory* %loadMem_403c9d, %struct.Memory** %MEMORY
  %loadMem_403ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2903 = getelementptr inbounds %struct.GPR, %struct.GPR* %2902, i32 0, i32 33
  %2904 = getelementptr inbounds %struct.Reg, %struct.Reg* %2903, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %2904 to i64*
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 5
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %RCX.i944 = bitcast %union.anon* %2907 to i64*
  %2908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2909 = getelementptr inbounds %struct.GPR, %struct.GPR* %2908, i32 0, i32 15
  %2910 = getelementptr inbounds %struct.Reg, %struct.Reg* %2909, i32 0, i32 0
  %RBP.i945 = bitcast %union.anon* %2910 to i64*
  %2911 = load i64, i64* %RBP.i945
  %2912 = sub i64 %2911, 8
  %2913 = load i64, i64* %PC.i943
  %2914 = add i64 %2913, 3
  store i64 %2914, i64* %PC.i943
  %2915 = inttoptr i64 %2912 to i32*
  %2916 = load i32, i32* %2915
  %2917 = zext i32 %2916 to i64
  store i64 %2917, i64* %RCX.i944, align 8
  store %struct.Memory* %loadMem_403ca2, %struct.Memory** %MEMORY
  %loadMem_403ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2919 = getelementptr inbounds %struct.GPR, %struct.GPR* %2918, i32 0, i32 33
  %2920 = getelementptr inbounds %struct.Reg, %struct.Reg* %2919, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %2920 to i64*
  %2921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2922 = getelementptr inbounds %struct.GPR, %struct.GPR* %2921, i32 0, i32 5
  %2923 = getelementptr inbounds %struct.Reg, %struct.Reg* %2922, i32 0, i32 0
  %RCX.i941 = bitcast %union.anon* %2923 to i64*
  %2924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2925 = getelementptr inbounds %struct.GPR, %struct.GPR* %2924, i32 0, i32 15
  %2926 = getelementptr inbounds %struct.Reg, %struct.Reg* %2925, i32 0, i32 0
  %RBP.i942 = bitcast %union.anon* %2926 to i64*
  %2927 = load i64, i64* %RCX.i941
  %2928 = load i64, i64* %RBP.i942
  %2929 = sub i64 %2928, 12
  %2930 = load i64, i64* %PC.i940
  %2931 = add i64 %2930, 3
  store i64 %2931, i64* %PC.i940
  %2932 = trunc i64 %2927 to i32
  %2933 = inttoptr i64 %2929 to i32*
  %2934 = load i32, i32* %2933
  %2935 = add i32 %2934, %2932
  %2936 = zext i32 %2935 to i64
  store i64 %2936, i64* %RCX.i941, align 8
  %2937 = icmp ult i32 %2935, %2932
  %2938 = icmp ult i32 %2935, %2934
  %2939 = or i1 %2937, %2938
  %2940 = zext i1 %2939 to i8
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2940, i8* %2941, align 1
  %2942 = and i32 %2935, 255
  %2943 = call i32 @llvm.ctpop.i32(i32 %2942)
  %2944 = trunc i32 %2943 to i8
  %2945 = and i8 %2944, 1
  %2946 = xor i8 %2945, 1
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2946, i8* %2947, align 1
  %2948 = xor i32 %2934, %2932
  %2949 = xor i32 %2948, %2935
  %2950 = lshr i32 %2949, 4
  %2951 = trunc i32 %2950 to i8
  %2952 = and i8 %2951, 1
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2952, i8* %2953, align 1
  %2954 = icmp eq i32 %2935, 0
  %2955 = zext i1 %2954 to i8
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2955, i8* %2956, align 1
  %2957 = lshr i32 %2935, 31
  %2958 = trunc i32 %2957 to i8
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2958, i8* %2959, align 1
  %2960 = lshr i32 %2932, 31
  %2961 = lshr i32 %2934, 31
  %2962 = xor i32 %2957, %2960
  %2963 = xor i32 %2957, %2961
  %2964 = add i32 %2962, %2963
  %2965 = icmp eq i32 %2964, 2
  %2966 = zext i1 %2965 to i8
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2966, i8* %2967, align 1
  store %struct.Memory* %loadMem_403ca5, %struct.Memory** %MEMORY
  %loadMem_403ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2969 = getelementptr inbounds %struct.GPR, %struct.GPR* %2968, i32 0, i32 33
  %2970 = getelementptr inbounds %struct.Reg, %struct.Reg* %2969, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %2970 to i64*
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2972 = getelementptr inbounds %struct.GPR, %struct.GPR* %2971, i32 0, i32 5
  %2973 = getelementptr inbounds %struct.Reg, %struct.Reg* %2972, i32 0, i32 0
  %RCX.i939 = bitcast %union.anon* %2973 to i64*
  %2974 = load i64, i64* %RCX.i939
  %2975 = load i64, i64* %PC.i938
  %2976 = add i64 %2975, 3
  store i64 %2976, i64* %PC.i938
  %2977 = trunc i64 %2974 to i32
  %2978 = add i32 16, %2977
  %2979 = zext i32 %2978 to i64
  store i64 %2979, i64* %RCX.i939, align 8
  %2980 = icmp ult i32 %2978, %2977
  %2981 = icmp ult i32 %2978, 16
  %2982 = or i1 %2980, %2981
  %2983 = zext i1 %2982 to i8
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2983, i8* %2984, align 1
  %2985 = and i32 %2978, 255
  %2986 = call i32 @llvm.ctpop.i32(i32 %2985)
  %2987 = trunc i32 %2986 to i8
  %2988 = and i8 %2987, 1
  %2989 = xor i8 %2988, 1
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2989, i8* %2990, align 1
  %2991 = xor i64 16, %2974
  %2992 = trunc i64 %2991 to i32
  %2993 = xor i32 %2992, %2978
  %2994 = lshr i32 %2993, 4
  %2995 = trunc i32 %2994 to i8
  %2996 = and i8 %2995, 1
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2996, i8* %2997, align 1
  %2998 = icmp eq i32 %2978, 0
  %2999 = zext i1 %2998 to i8
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2999, i8* %3000, align 1
  %3001 = lshr i32 %2978, 31
  %3002 = trunc i32 %3001 to i8
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3002, i8* %3003, align 1
  %3004 = lshr i32 %2977, 31
  %3005 = xor i32 %3001, %3004
  %3006 = add i32 %3005, %3001
  %3007 = icmp eq i32 %3006, 2
  %3008 = zext i1 %3007 to i8
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3008, i8* %3009, align 1
  store %struct.Memory* %loadMem_403ca8, %struct.Memory** %MEMORY
  %loadMem_403cab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3011 = getelementptr inbounds %struct.GPR, %struct.GPR* %3010, i32 0, i32 33
  %3012 = getelementptr inbounds %struct.Reg, %struct.Reg* %3011, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %3012 to i64*
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3014 = getelementptr inbounds %struct.GPR, %struct.GPR* %3013, i32 0, i32 1
  %3015 = getelementptr inbounds %struct.Reg, %struct.Reg* %3014, i32 0, i32 0
  %EAX.i936 = bitcast %union.anon* %3015 to i32*
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3017 = getelementptr inbounds %struct.GPR, %struct.GPR* %3016, i32 0, i32 15
  %3018 = getelementptr inbounds %struct.Reg, %struct.Reg* %3017, i32 0, i32 0
  %RBP.i937 = bitcast %union.anon* %3018 to i64*
  %3019 = load i64, i64* %RBP.i937
  %3020 = sub i64 %3019, 652
  %3021 = load i32, i32* %EAX.i936
  %3022 = zext i32 %3021 to i64
  %3023 = load i64, i64* %PC.i935
  %3024 = add i64 %3023, 6
  store i64 %3024, i64* %PC.i935
  %3025 = inttoptr i64 %3020 to i32*
  store i32 %3021, i32* %3025
  store %struct.Memory* %loadMem_403cab, %struct.Memory** %MEMORY
  %loadMem_403cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3027 = getelementptr inbounds %struct.GPR, %struct.GPR* %3026, i32 0, i32 33
  %3028 = getelementptr inbounds %struct.Reg, %struct.Reg* %3027, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %3028 to i64*
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3030 = getelementptr inbounds %struct.GPR, %struct.GPR* %3029, i32 0, i32 5
  %3031 = getelementptr inbounds %struct.Reg, %struct.Reg* %3030, i32 0, i32 0
  %ECX.i933 = bitcast %union.anon* %3031 to i32*
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3033 = getelementptr inbounds %struct.GPR, %struct.GPR* %3032, i32 0, i32 1
  %3034 = getelementptr inbounds %struct.Reg, %struct.Reg* %3033, i32 0, i32 0
  %RAX.i934 = bitcast %union.anon* %3034 to i64*
  %3035 = load i32, i32* %ECX.i933
  %3036 = zext i32 %3035 to i64
  %3037 = load i64, i64* %PC.i932
  %3038 = add i64 %3037, 2
  store i64 %3038, i64* %PC.i932
  %3039 = and i64 %3036, 4294967295
  store i64 %3039, i64* %RAX.i934, align 8
  store %struct.Memory* %loadMem_403cb1, %struct.Memory** %MEMORY
  %loadMem_403cb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3041 = getelementptr inbounds %struct.GPR, %struct.GPR* %3040, i32 0, i32 33
  %3042 = getelementptr inbounds %struct.Reg, %struct.Reg* %3041, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %3042 to i64*
  %3043 = load i64, i64* %PC.i931
  %3044 = add i64 %3043, 1
  store i64 %3044, i64* %PC.i931
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3047 = bitcast %union.anon* %3046 to i32*
  %3048 = load i32, i32* %3047, align 8
  %3049 = sext i32 %3048 to i64
  %3050 = lshr i64 %3049, 32
  store i64 %3050, i64* %3045, align 8
  store %struct.Memory* %loadMem_403cb3, %struct.Memory** %MEMORY
  %loadMem_403cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 33
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %3053 to i64*
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 5
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %RCX.i929 = bitcast %union.anon* %3056 to i64*
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3058 = getelementptr inbounds %struct.GPR, %struct.GPR* %3057, i32 0, i32 15
  %3059 = getelementptr inbounds %struct.Reg, %struct.Reg* %3058, i32 0, i32 0
  %RBP.i930 = bitcast %union.anon* %3059 to i64*
  %3060 = load i64, i64* %RBP.i930
  %3061 = sub i64 %3060, 652
  %3062 = load i64, i64* %PC.i928
  %3063 = add i64 %3062, 6
  store i64 %3063, i64* %PC.i928
  %3064 = inttoptr i64 %3061 to i32*
  %3065 = load i32, i32* %3064
  %3066 = zext i32 %3065 to i64
  store i64 %3066, i64* %RCX.i929, align 8
  store %struct.Memory* %loadMem_403cb4, %struct.Memory** %MEMORY
  %loadMem_403cba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3068 = getelementptr inbounds %struct.GPR, %struct.GPR* %3067, i32 0, i32 33
  %3069 = getelementptr inbounds %struct.Reg, %struct.Reg* %3068, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %3069 to i64*
  %3070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3071 = getelementptr inbounds %struct.GPR, %struct.GPR* %3070, i32 0, i32 5
  %3072 = getelementptr inbounds %struct.Reg, %struct.Reg* %3071, i32 0, i32 0
  %ECX.i924 = bitcast %union.anon* %3072 to i32*
  %3073 = load i32, i32* %ECX.i924
  %3074 = zext i32 %3073 to i64
  %3075 = load i64, i64* %PC.i923
  %3076 = add i64 %3075, 2
  store i64 %3076, i64* %PC.i923
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3078 = bitcast %union.anon* %3077 to i32*
  %3079 = load i32, i32* %3078, align 8
  %3080 = zext i32 %3079 to i64
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3082 = bitcast %union.anon* %3081 to i32*
  %3083 = load i32, i32* %3082, align 8
  %3084 = zext i32 %3083 to i64
  %3085 = shl i64 %3074, 32
  %3086 = ashr exact i64 %3085, 32
  %3087 = shl i64 %3084, 32
  %3088 = or i64 %3087, %3080
  %3089 = sdiv i64 %3088, %3086
  %3090 = shl i64 %3089, 32
  %3091 = ashr exact i64 %3090, 32
  %3092 = icmp eq i64 %3089, %3091
  br i1 %3092, label %3097, label %3093

; <label>:3093:                                   ; preds = %block_403c9d
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3095 = load i64, i64* %3094, align 8
  %3096 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3095, %struct.Memory* %loadMem_403cba)
  br label %routine_idivl__ecx.exit925

; <label>:3097:                                   ; preds = %block_403c9d
  %3098 = srem i64 %3088, %3086
  %3099 = getelementptr inbounds %union.anon, %union.anon* %3077, i64 0, i32 0
  %3100 = and i64 %3089, 4294967295
  store i64 %3100, i64* %3099, align 8
  %3101 = getelementptr inbounds %union.anon, %union.anon* %3081, i64 0, i32 0
  %3102 = and i64 %3098, 4294967295
  store i64 %3102, i64* %3101, align 8
  %3103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3103, align 1
  %3104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3104, align 1
  %3105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3105, align 1
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3106, align 1
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3107, align 1
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3108, align 1
  br label %routine_idivl__ecx.exit925

routine_idivl__ecx.exit925:                       ; preds = %3093, %3097
  %3109 = phi %struct.Memory* [ %3096, %3093 ], [ %loadMem_403cba, %3097 ]
  store %struct.Memory* %3109, %struct.Memory** %MEMORY
  %loadMem_403cbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3111 = getelementptr inbounds %struct.GPR, %struct.GPR* %3110, i32 0, i32 33
  %3112 = getelementptr inbounds %struct.Reg, %struct.Reg* %3111, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %3112 to i64*
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3114 = getelementptr inbounds %struct.GPR, %struct.GPR* %3113, i32 0, i32 1
  %3115 = getelementptr inbounds %struct.Reg, %struct.Reg* %3114, i32 0, i32 0
  %EAX.i921 = bitcast %union.anon* %3115 to i32*
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3117 = getelementptr inbounds %struct.GPR, %struct.GPR* %3116, i32 0, i32 15
  %3118 = getelementptr inbounds %struct.Reg, %struct.Reg* %3117, i32 0, i32 0
  %RBP.i922 = bitcast %union.anon* %3118 to i64*
  %3119 = load i64, i64* %RBP.i922
  %3120 = sub i64 %3119, 4
  %3121 = load i32, i32* %EAX.i921
  %3122 = zext i32 %3121 to i64
  %3123 = load i64, i64* %PC.i920
  %3124 = add i64 %3123, 3
  store i64 %3124, i64* %PC.i920
  %3125 = inttoptr i64 %3120 to i32*
  store i32 %3121, i32* %3125
  store %struct.Memory* %loadMem_403cbc, %struct.Memory** %MEMORY
  br label %block_.L_403cbf

block_.L_403cbf:                                  ; preds = %routine_idivl__ecx.exit925, %block_403c90, %block_.L_403c83
  %loadMem_403cbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3127 = getelementptr inbounds %struct.GPR, %struct.GPR* %3126, i32 0, i32 33
  %3128 = getelementptr inbounds %struct.Reg, %struct.Reg* %3127, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %3128 to i64*
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3130 = getelementptr inbounds %struct.GPR, %struct.GPR* %3129, i32 0, i32 15
  %3131 = getelementptr inbounds %struct.Reg, %struct.Reg* %3130, i32 0, i32 0
  %RBP.i919 = bitcast %union.anon* %3131 to i64*
  %3132 = load i64, i64* %RBP.i919
  %3133 = sub i64 %3132, 628
  %3134 = load i64, i64* %PC.i918
  %3135 = add i64 %3134, 7
  store i64 %3135, i64* %PC.i918
  %3136 = inttoptr i64 %3133 to i32*
  %3137 = load i32, i32* %3136
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3138, align 1
  %3139 = and i32 %3137, 255
  %3140 = call i32 @llvm.ctpop.i32(i32 %3139)
  %3141 = trunc i32 %3140 to i8
  %3142 = and i8 %3141, 1
  %3143 = xor i8 %3142, 1
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3143, i8* %3144, align 1
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3145, align 1
  %3146 = icmp eq i32 %3137, 0
  %3147 = zext i1 %3146 to i8
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3147, i8* %3148, align 1
  %3149 = lshr i32 %3137, 31
  %3150 = trunc i32 %3149 to i8
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3150, i8* %3151, align 1
  %3152 = lshr i32 %3137, 31
  %3153 = xor i32 %3149, %3152
  %3154 = add i32 %3153, %3152
  %3155 = icmp eq i32 %3154, 2
  %3156 = zext i1 %3155 to i8
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3156, i8* %3157, align 1
  store %struct.Memory* %loadMem_403cbf, %struct.Memory** %MEMORY
  %loadMem_403cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3159 = getelementptr inbounds %struct.GPR, %struct.GPR* %3158, i32 0, i32 33
  %3160 = getelementptr inbounds %struct.Reg, %struct.Reg* %3159, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %3160 to i64*
  %3161 = load i64, i64* %PC.i917
  %3162 = add i64 %3161, 50
  %3163 = load i64, i64* %PC.i917
  %3164 = add i64 %3163, 6
  %3165 = load i64, i64* %PC.i917
  %3166 = add i64 %3165, 6
  store i64 %3166, i64* %PC.i917
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3168 = load i8, i8* %3167, align 1
  %3169 = icmp eq i8 %3168, 0
  %3170 = zext i1 %3169 to i8
  store i8 %3170, i8* %BRANCH_TAKEN, align 1
  %3171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3172 = select i1 %3169, i64 %3162, i64 %3164
  store i64 %3172, i64* %3171, align 8
  store %struct.Memory* %loadMem_403cc6, %struct.Memory** %MEMORY
  %loadBr_403cc6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403cc6 = icmp eq i8 %loadBr_403cc6, 1
  br i1 %cmpBr_403cc6, label %block_.L_403cf8, label %block_403ccc

block_403ccc:                                     ; preds = %block_.L_403cbf
  %loadMem_403ccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3174 = getelementptr inbounds %struct.GPR, %struct.GPR* %3173, i32 0, i32 33
  %3175 = getelementptr inbounds %struct.Reg, %struct.Reg* %3174, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %3175 to i64*
  %3176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3177 = getelementptr inbounds %struct.GPR, %struct.GPR* %3176, i32 0, i32 15
  %3178 = getelementptr inbounds %struct.Reg, %struct.Reg* %3177, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %3178 to i64*
  %3179 = load i64, i64* %RBP.i916
  %3180 = sub i64 %3179, 632
  %3181 = load i64, i64* %PC.i915
  %3182 = add i64 %3181, 7
  store i64 %3182, i64* %PC.i915
  %3183 = inttoptr i64 %3180 to i32*
  %3184 = load i32, i32* %3183
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3185, align 1
  %3186 = and i32 %3184, 255
  %3187 = call i32 @llvm.ctpop.i32(i32 %3186)
  %3188 = trunc i32 %3187 to i8
  %3189 = and i8 %3188, 1
  %3190 = xor i8 %3189, 1
  %3191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3190, i8* %3191, align 1
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3192, align 1
  %3193 = icmp eq i32 %3184, 0
  %3194 = zext i1 %3193 to i8
  %3195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3194, i8* %3195, align 1
  %3196 = lshr i32 %3184, 31
  %3197 = trunc i32 %3196 to i8
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3197, i8* %3198, align 1
  %3199 = lshr i32 %3184, 31
  %3200 = xor i32 %3196, %3199
  %3201 = add i32 %3200, %3199
  %3202 = icmp eq i32 %3201, 2
  %3203 = zext i1 %3202 to i8
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3203, i8* %3204, align 1
  store %struct.Memory* %loadMem_403ccc, %struct.Memory** %MEMORY
  %loadMem_403cd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 33
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %3207 to i64*
  %3208 = load i64, i64* %PC.i914
  %3209 = add i64 %3208, 37
  %3210 = load i64, i64* %PC.i914
  %3211 = add i64 %3210, 6
  %3212 = load i64, i64* %PC.i914
  %3213 = add i64 %3212, 6
  store i64 %3213, i64* %PC.i914
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3215 = load i8, i8* %3214, align 1
  store i8 %3215, i8* %BRANCH_TAKEN, align 1
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3217 = icmp ne i8 %3215, 0
  %3218 = select i1 %3217, i64 %3209, i64 %3211
  store i64 %3218, i64* %3216, align 8
  store %struct.Memory* %loadMem_403cd3, %struct.Memory** %MEMORY
  %loadBr_403cd3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403cd3 = icmp eq i8 %loadBr_403cd3, 1
  br i1 %cmpBr_403cd3, label %block_.L_403cf8, label %block_403cd9

block_403cd9:                                     ; preds = %block_403ccc
  %loadMem_403cd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3220 = getelementptr inbounds %struct.GPR, %struct.GPR* %3219, i32 0, i32 33
  %3221 = getelementptr inbounds %struct.Reg, %struct.Reg* %3220, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %3221 to i64*
  %3222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3223 = getelementptr inbounds %struct.GPR, %struct.GPR* %3222, i32 0, i32 1
  %3224 = getelementptr inbounds %struct.Reg, %struct.Reg* %3223, i32 0, i32 0
  %RAX.i913 = bitcast %union.anon* %3224 to i64*
  %3225 = load i64, i64* %PC.i912
  %3226 = add i64 %3225, 5
  store i64 %3226, i64* %PC.i912
  store i64 16, i64* %RAX.i913, align 8
  store %struct.Memory* %loadMem_403cd9, %struct.Memory** %MEMORY
  %loadMem_403cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3228 = getelementptr inbounds %struct.GPR, %struct.GPR* %3227, i32 0, i32 33
  %3229 = getelementptr inbounds %struct.Reg, %struct.Reg* %3228, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %3229 to i64*
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3231 = getelementptr inbounds %struct.GPR, %struct.GPR* %3230, i32 0, i32 5
  %3232 = getelementptr inbounds %struct.Reg, %struct.Reg* %3231, i32 0, i32 0
  %RCX.i910 = bitcast %union.anon* %3232 to i64*
  %3233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3234 = getelementptr inbounds %struct.GPR, %struct.GPR* %3233, i32 0, i32 15
  %3235 = getelementptr inbounds %struct.Reg, %struct.Reg* %3234, i32 0, i32 0
  %RBP.i911 = bitcast %union.anon* %3235 to i64*
  %3236 = load i64, i64* %RBP.i911
  %3237 = sub i64 %3236, 12
  %3238 = load i64, i64* %PC.i909
  %3239 = add i64 %3238, 3
  store i64 %3239, i64* %PC.i909
  %3240 = inttoptr i64 %3237 to i32*
  %3241 = load i32, i32* %3240
  %3242 = zext i32 %3241 to i64
  store i64 %3242, i64* %RCX.i910, align 8
  store %struct.Memory* %loadMem_403cde, %struct.Memory** %MEMORY
  %loadMem_403ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3244 = getelementptr inbounds %struct.GPR, %struct.GPR* %3243, i32 0, i32 33
  %3245 = getelementptr inbounds %struct.Reg, %struct.Reg* %3244, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %3245 to i64*
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 5
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %RCX.i908 = bitcast %union.anon* %3248 to i64*
  %3249 = load i64, i64* %RCX.i908
  %3250 = load i64, i64* %PC.i907
  %3251 = add i64 %3250, 3
  store i64 %3251, i64* %PC.i907
  %3252 = trunc i64 %3249 to i32
  %3253 = add i32 8, %3252
  %3254 = zext i32 %3253 to i64
  store i64 %3254, i64* %RCX.i908, align 8
  %3255 = icmp ult i32 %3253, %3252
  %3256 = icmp ult i32 %3253, 8
  %3257 = or i1 %3255, %3256
  %3258 = zext i1 %3257 to i8
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3258, i8* %3259, align 1
  %3260 = and i32 %3253, 255
  %3261 = call i32 @llvm.ctpop.i32(i32 %3260)
  %3262 = trunc i32 %3261 to i8
  %3263 = and i8 %3262, 1
  %3264 = xor i8 %3263, 1
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3264, i8* %3265, align 1
  %3266 = xor i64 8, %3249
  %3267 = trunc i64 %3266 to i32
  %3268 = xor i32 %3267, %3253
  %3269 = lshr i32 %3268, 4
  %3270 = trunc i32 %3269 to i8
  %3271 = and i8 %3270, 1
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3271, i8* %3272, align 1
  %3273 = icmp eq i32 %3253, 0
  %3274 = zext i1 %3273 to i8
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3274, i8* %3275, align 1
  %3276 = lshr i32 %3253, 31
  %3277 = trunc i32 %3276 to i8
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3277, i8* %3278, align 1
  %3279 = lshr i32 %3252, 31
  %3280 = xor i32 %3276, %3279
  %3281 = add i32 %3280, %3276
  %3282 = icmp eq i32 %3281, 2
  %3283 = zext i1 %3282 to i8
  %3284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3283, i8* %3284, align 1
  store %struct.Memory* %loadMem_403ce1, %struct.Memory** %MEMORY
  %loadMem_403ce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3286 = getelementptr inbounds %struct.GPR, %struct.GPR* %3285, i32 0, i32 33
  %3287 = getelementptr inbounds %struct.Reg, %struct.Reg* %3286, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %3287 to i64*
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3289 = getelementptr inbounds %struct.GPR, %struct.GPR* %3288, i32 0, i32 1
  %3290 = getelementptr inbounds %struct.Reg, %struct.Reg* %3289, i32 0, i32 0
  %EAX.i905 = bitcast %union.anon* %3290 to i32*
  %3291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3292 = getelementptr inbounds %struct.GPR, %struct.GPR* %3291, i32 0, i32 15
  %3293 = getelementptr inbounds %struct.Reg, %struct.Reg* %3292, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %3293 to i64*
  %3294 = load i64, i64* %RBP.i906
  %3295 = sub i64 %3294, 656
  %3296 = load i32, i32* %EAX.i905
  %3297 = zext i32 %3296 to i64
  %3298 = load i64, i64* %PC.i904
  %3299 = add i64 %3298, 6
  store i64 %3299, i64* %PC.i904
  %3300 = inttoptr i64 %3295 to i32*
  store i32 %3296, i32* %3300
  store %struct.Memory* %loadMem_403ce4, %struct.Memory** %MEMORY
  %loadMem_403cea = load %struct.Memory*, %struct.Memory** %MEMORY
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3302 = getelementptr inbounds %struct.GPR, %struct.GPR* %3301, i32 0, i32 33
  %3303 = getelementptr inbounds %struct.Reg, %struct.Reg* %3302, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %3303 to i64*
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3305 = getelementptr inbounds %struct.GPR, %struct.GPR* %3304, i32 0, i32 5
  %3306 = getelementptr inbounds %struct.Reg, %struct.Reg* %3305, i32 0, i32 0
  %ECX.i902 = bitcast %union.anon* %3306 to i32*
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3308 = getelementptr inbounds %struct.GPR, %struct.GPR* %3307, i32 0, i32 1
  %3309 = getelementptr inbounds %struct.Reg, %struct.Reg* %3308, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %3309 to i64*
  %3310 = load i32, i32* %ECX.i902
  %3311 = zext i32 %3310 to i64
  %3312 = load i64, i64* %PC.i901
  %3313 = add i64 %3312, 2
  store i64 %3313, i64* %PC.i901
  %3314 = and i64 %3311, 4294967295
  store i64 %3314, i64* %RAX.i903, align 8
  store %struct.Memory* %loadMem_403cea, %struct.Memory** %MEMORY
  %loadMem_403cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3316 = getelementptr inbounds %struct.GPR, %struct.GPR* %3315, i32 0, i32 33
  %3317 = getelementptr inbounds %struct.Reg, %struct.Reg* %3316, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %3317 to i64*
  %3318 = load i64, i64* %PC.i900
  %3319 = add i64 %3318, 1
  store i64 %3319, i64* %PC.i900
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3322 = bitcast %union.anon* %3321 to i32*
  %3323 = load i32, i32* %3322, align 8
  %3324 = sext i32 %3323 to i64
  %3325 = lshr i64 %3324, 32
  store i64 %3325, i64* %3320, align 8
  store %struct.Memory* %loadMem_403cec, %struct.Memory** %MEMORY
  %loadMem_403ced = load %struct.Memory*, %struct.Memory** %MEMORY
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3327 = getelementptr inbounds %struct.GPR, %struct.GPR* %3326, i32 0, i32 33
  %3328 = getelementptr inbounds %struct.Reg, %struct.Reg* %3327, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %3328 to i64*
  %3329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3330 = getelementptr inbounds %struct.GPR, %struct.GPR* %3329, i32 0, i32 5
  %3331 = getelementptr inbounds %struct.Reg, %struct.Reg* %3330, i32 0, i32 0
  %RCX.i898 = bitcast %union.anon* %3331 to i64*
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3333 = getelementptr inbounds %struct.GPR, %struct.GPR* %3332, i32 0, i32 15
  %3334 = getelementptr inbounds %struct.Reg, %struct.Reg* %3333, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %3334 to i64*
  %3335 = load i64, i64* %RBP.i899
  %3336 = sub i64 %3335, 656
  %3337 = load i64, i64* %PC.i897
  %3338 = add i64 %3337, 6
  store i64 %3338, i64* %PC.i897
  %3339 = inttoptr i64 %3336 to i32*
  %3340 = load i32, i32* %3339
  %3341 = zext i32 %3340 to i64
  store i64 %3341, i64* %RCX.i898, align 8
  store %struct.Memory* %loadMem_403ced, %struct.Memory** %MEMORY
  %loadMem_403cf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3343 = getelementptr inbounds %struct.GPR, %struct.GPR* %3342, i32 0, i32 33
  %3344 = getelementptr inbounds %struct.Reg, %struct.Reg* %3343, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %3344 to i64*
  %3345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3346 = getelementptr inbounds %struct.GPR, %struct.GPR* %3345, i32 0, i32 5
  %3347 = getelementptr inbounds %struct.Reg, %struct.Reg* %3346, i32 0, i32 0
  %ECX.i892 = bitcast %union.anon* %3347 to i32*
  %3348 = load i32, i32* %ECX.i892
  %3349 = zext i32 %3348 to i64
  %3350 = load i64, i64* %PC.i891
  %3351 = add i64 %3350, 2
  store i64 %3351, i64* %PC.i891
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3353 = bitcast %union.anon* %3352 to i32*
  %3354 = load i32, i32* %3353, align 8
  %3355 = zext i32 %3354 to i64
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3357 = bitcast %union.anon* %3356 to i32*
  %3358 = load i32, i32* %3357, align 8
  %3359 = zext i32 %3358 to i64
  %3360 = shl i64 %3349, 32
  %3361 = ashr exact i64 %3360, 32
  %3362 = shl i64 %3359, 32
  %3363 = or i64 %3362, %3355
  %3364 = sdiv i64 %3363, %3361
  %3365 = shl i64 %3364, 32
  %3366 = ashr exact i64 %3365, 32
  %3367 = icmp eq i64 %3364, %3366
  br i1 %3367, label %3372, label %3368

; <label>:3368:                                   ; preds = %block_403cd9
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3370 = load i64, i64* %3369, align 8
  %3371 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3370, %struct.Memory* %loadMem_403cf3)
  br label %routine_idivl__ecx.exit893

; <label>:3372:                                   ; preds = %block_403cd9
  %3373 = srem i64 %3363, %3361
  %3374 = getelementptr inbounds %union.anon, %union.anon* %3352, i64 0, i32 0
  %3375 = and i64 %3364, 4294967295
  store i64 %3375, i64* %3374, align 8
  %3376 = getelementptr inbounds %union.anon, %union.anon* %3356, i64 0, i32 0
  %3377 = and i64 %3373, 4294967295
  store i64 %3377, i64* %3376, align 8
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3378, align 1
  %3379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3379, align 1
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3380, align 1
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3381, align 1
  %3382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3382, align 1
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3383, align 1
  br label %routine_idivl__ecx.exit893

routine_idivl__ecx.exit893:                       ; preds = %3368, %3372
  %3384 = phi %struct.Memory* [ %3371, %3368 ], [ %loadMem_403cf3, %3372 ]
  store %struct.Memory* %3384, %struct.Memory** %MEMORY
  %loadMem_403cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3386 = getelementptr inbounds %struct.GPR, %struct.GPR* %3385, i32 0, i32 33
  %3387 = getelementptr inbounds %struct.Reg, %struct.Reg* %3386, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %3387 to i64*
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3389 = getelementptr inbounds %struct.GPR, %struct.GPR* %3388, i32 0, i32 1
  %3390 = getelementptr inbounds %struct.Reg, %struct.Reg* %3389, i32 0, i32 0
  %EAX.i889 = bitcast %union.anon* %3390 to i32*
  %3391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3392 = getelementptr inbounds %struct.GPR, %struct.GPR* %3391, i32 0, i32 15
  %3393 = getelementptr inbounds %struct.Reg, %struct.Reg* %3392, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %3393 to i64*
  %3394 = load i64, i64* %RBP.i890
  %3395 = sub i64 %3394, 4
  %3396 = load i32, i32* %EAX.i889
  %3397 = zext i32 %3396 to i64
  %3398 = load i64, i64* %PC.i888
  %3399 = add i64 %3398, 3
  store i64 %3399, i64* %PC.i888
  %3400 = inttoptr i64 %3395 to i32*
  store i32 %3396, i32* %3400
  store %struct.Memory* %loadMem_403cf5, %struct.Memory** %MEMORY
  br label %block_.L_403cf8

block_.L_403cf8:                                  ; preds = %routine_idivl__ecx.exit893, %block_403ccc, %block_.L_403cbf
  %loadMem_403cf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3402 = getelementptr inbounds %struct.GPR, %struct.GPR* %3401, i32 0, i32 33
  %3403 = getelementptr inbounds %struct.Reg, %struct.Reg* %3402, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %3403 to i64*
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3405 = getelementptr inbounds %struct.GPR, %struct.GPR* %3404, i32 0, i32 15
  %3406 = getelementptr inbounds %struct.Reg, %struct.Reg* %3405, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %3406 to i64*
  %3407 = load i64, i64* %RBP.i887
  %3408 = sub i64 %3407, 628
  %3409 = load i64, i64* %PC.i886
  %3410 = add i64 %3409, 7
  store i64 %3410, i64* %PC.i886
  %3411 = inttoptr i64 %3408 to i32*
  %3412 = load i32, i32* %3411
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3413, align 1
  %3414 = and i32 %3412, 255
  %3415 = call i32 @llvm.ctpop.i32(i32 %3414)
  %3416 = trunc i32 %3415 to i8
  %3417 = and i8 %3416, 1
  %3418 = xor i8 %3417, 1
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3418, i8* %3419, align 1
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3420, align 1
  %3421 = icmp eq i32 %3412, 0
  %3422 = zext i1 %3421 to i8
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3422, i8* %3423, align 1
  %3424 = lshr i32 %3412, 31
  %3425 = trunc i32 %3424 to i8
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3425, i8* %3426, align 1
  %3427 = lshr i32 %3412, 31
  %3428 = xor i32 %3424, %3427
  %3429 = add i32 %3428, %3427
  %3430 = icmp eq i32 %3429, 2
  %3431 = zext i1 %3430 to i8
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3431, i8* %3432, align 1
  store %struct.Memory* %loadMem_403cf8, %struct.Memory** %MEMORY
  %loadMem_403cff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3434 = getelementptr inbounds %struct.GPR, %struct.GPR* %3433, i32 0, i32 33
  %3435 = getelementptr inbounds %struct.Reg, %struct.Reg* %3434, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %3435 to i64*
  %3436 = load i64, i64* %PC.i885
  %3437 = add i64 %3436, 50
  %3438 = load i64, i64* %PC.i885
  %3439 = add i64 %3438, 6
  %3440 = load i64, i64* %PC.i885
  %3441 = add i64 %3440, 6
  store i64 %3441, i64* %PC.i885
  %3442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3443 = load i8, i8* %3442, align 1
  store i8 %3443, i8* %BRANCH_TAKEN, align 1
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3445 = icmp ne i8 %3443, 0
  %3446 = select i1 %3445, i64 %3437, i64 %3439
  store i64 %3446, i64* %3444, align 8
  store %struct.Memory* %loadMem_403cff, %struct.Memory** %MEMORY
  %loadBr_403cff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403cff = icmp eq i8 %loadBr_403cff, 1
  br i1 %cmpBr_403cff, label %block_.L_403d31, label %block_403d05

block_403d05:                                     ; preds = %block_.L_403cf8
  %loadMem_403d05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3448 = getelementptr inbounds %struct.GPR, %struct.GPR* %3447, i32 0, i32 33
  %3449 = getelementptr inbounds %struct.Reg, %struct.Reg* %3448, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %3449 to i64*
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3451 = getelementptr inbounds %struct.GPR, %struct.GPR* %3450, i32 0, i32 15
  %3452 = getelementptr inbounds %struct.Reg, %struct.Reg* %3451, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %3452 to i64*
  %3453 = load i64, i64* %RBP.i884
  %3454 = sub i64 %3453, 632
  %3455 = load i64, i64* %PC.i883
  %3456 = add i64 %3455, 7
  store i64 %3456, i64* %PC.i883
  %3457 = inttoptr i64 %3454 to i32*
  %3458 = load i32, i32* %3457
  %3459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3459, align 1
  %3460 = and i32 %3458, 255
  %3461 = call i32 @llvm.ctpop.i32(i32 %3460)
  %3462 = trunc i32 %3461 to i8
  %3463 = and i8 %3462, 1
  %3464 = xor i8 %3463, 1
  %3465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3464, i8* %3465, align 1
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3466, align 1
  %3467 = icmp eq i32 %3458, 0
  %3468 = zext i1 %3467 to i8
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3468, i8* %3469, align 1
  %3470 = lshr i32 %3458, 31
  %3471 = trunc i32 %3470 to i8
  %3472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3471, i8* %3472, align 1
  %3473 = lshr i32 %3458, 31
  %3474 = xor i32 %3470, %3473
  %3475 = add i32 %3474, %3473
  %3476 = icmp eq i32 %3475, 2
  %3477 = zext i1 %3476 to i8
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3477, i8* %3478, align 1
  store %struct.Memory* %loadMem_403d05, %struct.Memory** %MEMORY
  %loadMem_403d0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3480 = getelementptr inbounds %struct.GPR, %struct.GPR* %3479, i32 0, i32 33
  %3481 = getelementptr inbounds %struct.Reg, %struct.Reg* %3480, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %3481 to i64*
  %3482 = load i64, i64* %PC.i882
  %3483 = add i64 %3482, 37
  %3484 = load i64, i64* %PC.i882
  %3485 = add i64 %3484, 6
  %3486 = load i64, i64* %PC.i882
  %3487 = add i64 %3486, 6
  store i64 %3487, i64* %PC.i882
  %3488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3489 = load i8, i8* %3488, align 1
  %3490 = icmp eq i8 %3489, 0
  %3491 = zext i1 %3490 to i8
  store i8 %3491, i8* %BRANCH_TAKEN, align 1
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3493 = select i1 %3490, i64 %3483, i64 %3485
  store i64 %3493, i64* %3492, align 8
  store %struct.Memory* %loadMem_403d0c, %struct.Memory** %MEMORY
  %loadBr_403d0c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403d0c = icmp eq i8 %loadBr_403d0c, 1
  br i1 %cmpBr_403d0c, label %block_.L_403d31, label %block_403d12

block_403d12:                                     ; preds = %block_403d05
  %loadMem_403d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3495 = getelementptr inbounds %struct.GPR, %struct.GPR* %3494, i32 0, i32 33
  %3496 = getelementptr inbounds %struct.Reg, %struct.Reg* %3495, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %3496 to i64*
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3498 = getelementptr inbounds %struct.GPR, %struct.GPR* %3497, i32 0, i32 1
  %3499 = getelementptr inbounds %struct.Reg, %struct.Reg* %3498, i32 0, i32 0
  %RAX.i881 = bitcast %union.anon* %3499 to i64*
  %3500 = load i64, i64* %PC.i880
  %3501 = add i64 %3500, 5
  store i64 %3501, i64* %PC.i880
  store i64 16, i64* %RAX.i881, align 8
  store %struct.Memory* %loadMem_403d12, %struct.Memory** %MEMORY
  %loadMem_403d17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3503 = getelementptr inbounds %struct.GPR, %struct.GPR* %3502, i32 0, i32 33
  %3504 = getelementptr inbounds %struct.Reg, %struct.Reg* %3503, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %3504 to i64*
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 5
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %RCX.i878 = bitcast %union.anon* %3507 to i64*
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 15
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %RBP.i879 = bitcast %union.anon* %3510 to i64*
  %3511 = load i64, i64* %RBP.i879
  %3512 = sub i64 %3511, 8
  %3513 = load i64, i64* %PC.i877
  %3514 = add i64 %3513, 3
  store i64 %3514, i64* %PC.i877
  %3515 = inttoptr i64 %3512 to i32*
  %3516 = load i32, i32* %3515
  %3517 = zext i32 %3516 to i64
  store i64 %3517, i64* %RCX.i878, align 8
  store %struct.Memory* %loadMem_403d17, %struct.Memory** %MEMORY
  %loadMem_403d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3519 = getelementptr inbounds %struct.GPR, %struct.GPR* %3518, i32 0, i32 33
  %3520 = getelementptr inbounds %struct.Reg, %struct.Reg* %3519, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %3520 to i64*
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3522 = getelementptr inbounds %struct.GPR, %struct.GPR* %3521, i32 0, i32 5
  %3523 = getelementptr inbounds %struct.Reg, %struct.Reg* %3522, i32 0, i32 0
  %RCX.i876 = bitcast %union.anon* %3523 to i64*
  %3524 = load i64, i64* %RCX.i876
  %3525 = load i64, i64* %PC.i875
  %3526 = add i64 %3525, 3
  store i64 %3526, i64* %PC.i875
  %3527 = trunc i64 %3524 to i32
  %3528 = add i32 8, %3527
  %3529 = zext i32 %3528 to i64
  store i64 %3529, i64* %RCX.i876, align 8
  %3530 = icmp ult i32 %3528, %3527
  %3531 = icmp ult i32 %3528, 8
  %3532 = or i1 %3530, %3531
  %3533 = zext i1 %3532 to i8
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3533, i8* %3534, align 1
  %3535 = and i32 %3528, 255
  %3536 = call i32 @llvm.ctpop.i32(i32 %3535)
  %3537 = trunc i32 %3536 to i8
  %3538 = and i8 %3537, 1
  %3539 = xor i8 %3538, 1
  %3540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3539, i8* %3540, align 1
  %3541 = xor i64 8, %3524
  %3542 = trunc i64 %3541 to i32
  %3543 = xor i32 %3542, %3528
  %3544 = lshr i32 %3543, 4
  %3545 = trunc i32 %3544 to i8
  %3546 = and i8 %3545, 1
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3546, i8* %3547, align 1
  %3548 = icmp eq i32 %3528, 0
  %3549 = zext i1 %3548 to i8
  %3550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3549, i8* %3550, align 1
  %3551 = lshr i32 %3528, 31
  %3552 = trunc i32 %3551 to i8
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3552, i8* %3553, align 1
  %3554 = lshr i32 %3527, 31
  %3555 = xor i32 %3551, %3554
  %3556 = add i32 %3555, %3551
  %3557 = icmp eq i32 %3556, 2
  %3558 = zext i1 %3557 to i8
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3558, i8* %3559, align 1
  store %struct.Memory* %loadMem_403d1a, %struct.Memory** %MEMORY
  %loadMem_403d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3561 = getelementptr inbounds %struct.GPR, %struct.GPR* %3560, i32 0, i32 33
  %3562 = getelementptr inbounds %struct.Reg, %struct.Reg* %3561, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %3562 to i64*
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3564 = getelementptr inbounds %struct.GPR, %struct.GPR* %3563, i32 0, i32 1
  %3565 = getelementptr inbounds %struct.Reg, %struct.Reg* %3564, i32 0, i32 0
  %EAX.i873 = bitcast %union.anon* %3565 to i32*
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3567 = getelementptr inbounds %struct.GPR, %struct.GPR* %3566, i32 0, i32 15
  %3568 = getelementptr inbounds %struct.Reg, %struct.Reg* %3567, i32 0, i32 0
  %RBP.i874 = bitcast %union.anon* %3568 to i64*
  %3569 = load i64, i64* %RBP.i874
  %3570 = sub i64 %3569, 660
  %3571 = load i32, i32* %EAX.i873
  %3572 = zext i32 %3571 to i64
  %3573 = load i64, i64* %PC.i872
  %3574 = add i64 %3573, 6
  store i64 %3574, i64* %PC.i872
  %3575 = inttoptr i64 %3570 to i32*
  store i32 %3571, i32* %3575
  store %struct.Memory* %loadMem_403d1d, %struct.Memory** %MEMORY
  %loadMem_403d23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3577 = getelementptr inbounds %struct.GPR, %struct.GPR* %3576, i32 0, i32 33
  %3578 = getelementptr inbounds %struct.Reg, %struct.Reg* %3577, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %3578 to i64*
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3580 = getelementptr inbounds %struct.GPR, %struct.GPR* %3579, i32 0, i32 5
  %3581 = getelementptr inbounds %struct.Reg, %struct.Reg* %3580, i32 0, i32 0
  %ECX.i870 = bitcast %union.anon* %3581 to i32*
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3583 = getelementptr inbounds %struct.GPR, %struct.GPR* %3582, i32 0, i32 1
  %3584 = getelementptr inbounds %struct.Reg, %struct.Reg* %3583, i32 0, i32 0
  %RAX.i871 = bitcast %union.anon* %3584 to i64*
  %3585 = load i32, i32* %ECX.i870
  %3586 = zext i32 %3585 to i64
  %3587 = load i64, i64* %PC.i869
  %3588 = add i64 %3587, 2
  store i64 %3588, i64* %PC.i869
  %3589 = and i64 %3586, 4294967295
  store i64 %3589, i64* %RAX.i871, align 8
  store %struct.Memory* %loadMem_403d23, %struct.Memory** %MEMORY
  %loadMem_403d25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3591 = getelementptr inbounds %struct.GPR, %struct.GPR* %3590, i32 0, i32 33
  %3592 = getelementptr inbounds %struct.Reg, %struct.Reg* %3591, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %3592 to i64*
  %3593 = load i64, i64* %PC.i868
  %3594 = add i64 %3593, 1
  store i64 %3594, i64* %PC.i868
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3597 = bitcast %union.anon* %3596 to i32*
  %3598 = load i32, i32* %3597, align 8
  %3599 = sext i32 %3598 to i64
  %3600 = lshr i64 %3599, 32
  store i64 %3600, i64* %3595, align 8
  store %struct.Memory* %loadMem_403d25, %struct.Memory** %MEMORY
  %loadMem_403d26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3602 = getelementptr inbounds %struct.GPR, %struct.GPR* %3601, i32 0, i32 33
  %3603 = getelementptr inbounds %struct.Reg, %struct.Reg* %3602, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %3603 to i64*
  %3604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3605 = getelementptr inbounds %struct.GPR, %struct.GPR* %3604, i32 0, i32 5
  %3606 = getelementptr inbounds %struct.Reg, %struct.Reg* %3605, i32 0, i32 0
  %RCX.i866 = bitcast %union.anon* %3606 to i64*
  %3607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3608 = getelementptr inbounds %struct.GPR, %struct.GPR* %3607, i32 0, i32 15
  %3609 = getelementptr inbounds %struct.Reg, %struct.Reg* %3608, i32 0, i32 0
  %RBP.i867 = bitcast %union.anon* %3609 to i64*
  %3610 = load i64, i64* %RBP.i867
  %3611 = sub i64 %3610, 660
  %3612 = load i64, i64* %PC.i865
  %3613 = add i64 %3612, 6
  store i64 %3613, i64* %PC.i865
  %3614 = inttoptr i64 %3611 to i32*
  %3615 = load i32, i32* %3614
  %3616 = zext i32 %3615 to i64
  store i64 %3616, i64* %RCX.i866, align 8
  store %struct.Memory* %loadMem_403d26, %struct.Memory** %MEMORY
  %loadMem_403d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3618 = getelementptr inbounds %struct.GPR, %struct.GPR* %3617, i32 0, i32 33
  %3619 = getelementptr inbounds %struct.Reg, %struct.Reg* %3618, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %3619 to i64*
  %3620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3621 = getelementptr inbounds %struct.GPR, %struct.GPR* %3620, i32 0, i32 5
  %3622 = getelementptr inbounds %struct.Reg, %struct.Reg* %3621, i32 0, i32 0
  %ECX.i861 = bitcast %union.anon* %3622 to i32*
  %3623 = load i32, i32* %ECX.i861
  %3624 = zext i32 %3623 to i64
  %3625 = load i64, i64* %PC.i860
  %3626 = add i64 %3625, 2
  store i64 %3626, i64* %PC.i860
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3628 = bitcast %union.anon* %3627 to i32*
  %3629 = load i32, i32* %3628, align 8
  %3630 = zext i32 %3629 to i64
  %3631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3632 = bitcast %union.anon* %3631 to i32*
  %3633 = load i32, i32* %3632, align 8
  %3634 = zext i32 %3633 to i64
  %3635 = shl i64 %3624, 32
  %3636 = ashr exact i64 %3635, 32
  %3637 = shl i64 %3634, 32
  %3638 = or i64 %3637, %3630
  %3639 = sdiv i64 %3638, %3636
  %3640 = shl i64 %3639, 32
  %3641 = ashr exact i64 %3640, 32
  %3642 = icmp eq i64 %3639, %3641
  br i1 %3642, label %3647, label %3643

; <label>:3643:                                   ; preds = %block_403d12
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3645 = load i64, i64* %3644, align 8
  %3646 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3645, %struct.Memory* %loadMem_403d2c)
  br label %routine_idivl__ecx.exit862

; <label>:3647:                                   ; preds = %block_403d12
  %3648 = srem i64 %3638, %3636
  %3649 = getelementptr inbounds %union.anon, %union.anon* %3627, i64 0, i32 0
  %3650 = and i64 %3639, 4294967295
  store i64 %3650, i64* %3649, align 8
  %3651 = getelementptr inbounds %union.anon, %union.anon* %3631, i64 0, i32 0
  %3652 = and i64 %3648, 4294967295
  store i64 %3652, i64* %3651, align 8
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3653, align 1
  %3654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3654, align 1
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3655, align 1
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3656, align 1
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3657, align 1
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3658, align 1
  br label %routine_idivl__ecx.exit862

routine_idivl__ecx.exit862:                       ; preds = %3643, %3647
  %3659 = phi %struct.Memory* [ %3646, %3643 ], [ %loadMem_403d2c, %3647 ]
  store %struct.Memory* %3659, %struct.Memory** %MEMORY
  %loadMem_403d2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3661 = getelementptr inbounds %struct.GPR, %struct.GPR* %3660, i32 0, i32 33
  %3662 = getelementptr inbounds %struct.Reg, %struct.Reg* %3661, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %3662 to i64*
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3664 = getelementptr inbounds %struct.GPR, %struct.GPR* %3663, i32 0, i32 1
  %3665 = getelementptr inbounds %struct.Reg, %struct.Reg* %3664, i32 0, i32 0
  %EAX.i858 = bitcast %union.anon* %3665 to i32*
  %3666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3667 = getelementptr inbounds %struct.GPR, %struct.GPR* %3666, i32 0, i32 15
  %3668 = getelementptr inbounds %struct.Reg, %struct.Reg* %3667, i32 0, i32 0
  %RBP.i859 = bitcast %union.anon* %3668 to i64*
  %3669 = load i64, i64* %RBP.i859
  %3670 = sub i64 %3669, 4
  %3671 = load i32, i32* %EAX.i858
  %3672 = zext i32 %3671 to i64
  %3673 = load i64, i64* %PC.i857
  %3674 = add i64 %3673, 3
  store i64 %3674, i64* %PC.i857
  %3675 = inttoptr i64 %3670 to i32*
  store i32 %3671, i32* %3675
  store %struct.Memory* %loadMem_403d2e, %struct.Memory** %MEMORY
  br label %block_.L_403d31

block_.L_403d31:                                  ; preds = %routine_idivl__ecx.exit862, %block_403d05, %block_.L_403cf8
  %loadMem_403d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3677 = getelementptr inbounds %struct.GPR, %struct.GPR* %3676, i32 0, i32 33
  %3678 = getelementptr inbounds %struct.Reg, %struct.Reg* %3677, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %3678 to i64*
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3680 = getelementptr inbounds %struct.GPR, %struct.GPR* %3679, i32 0, i32 15
  %3681 = getelementptr inbounds %struct.Reg, %struct.Reg* %3680, i32 0, i32 0
  %RBP.i856 = bitcast %union.anon* %3681 to i64*
  %3682 = load i64, i64* %RBP.i856
  %3683 = sub i64 %3682, 628
  %3684 = load i64, i64* %PC.i855
  %3685 = add i64 %3684, 7
  store i64 %3685, i64* %PC.i855
  %3686 = inttoptr i64 %3683 to i32*
  %3687 = load i32, i32* %3686
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3688, align 1
  %3689 = and i32 %3687, 255
  %3690 = call i32 @llvm.ctpop.i32(i32 %3689)
  %3691 = trunc i32 %3690 to i8
  %3692 = and i8 %3691, 1
  %3693 = xor i8 %3692, 1
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3693, i8* %3694, align 1
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3695, align 1
  %3696 = icmp eq i32 %3687, 0
  %3697 = zext i1 %3696 to i8
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3697, i8* %3698, align 1
  %3699 = lshr i32 %3687, 31
  %3700 = trunc i32 %3699 to i8
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3700, i8* %3701, align 1
  %3702 = lshr i32 %3687, 31
  %3703 = xor i32 %3699, %3702
  %3704 = add i32 %3703, %3702
  %3705 = icmp eq i32 %3704, 2
  %3706 = zext i1 %3705 to i8
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3706, i8* %3707, align 1
  store %struct.Memory* %loadMem_403d31, %struct.Memory** %MEMORY
  %loadMem_403d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3709 = getelementptr inbounds %struct.GPR, %struct.GPR* %3708, i32 0, i32 33
  %3710 = getelementptr inbounds %struct.Reg, %struct.Reg* %3709, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %3710 to i64*
  %3711 = load i64, i64* %PC.i854
  %3712 = add i64 %3711, 36
  %3713 = load i64, i64* %PC.i854
  %3714 = add i64 %3713, 6
  %3715 = load i64, i64* %PC.i854
  %3716 = add i64 %3715, 6
  store i64 %3716, i64* %PC.i854
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3718 = load i8, i8* %3717, align 1
  %3719 = icmp eq i8 %3718, 0
  %3720 = zext i1 %3719 to i8
  store i8 %3720, i8* %BRANCH_TAKEN, align 1
  %3721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3722 = select i1 %3719, i64 %3712, i64 %3714
  store i64 %3722, i64* %3721, align 8
  store %struct.Memory* %loadMem_403d38, %struct.Memory** %MEMORY
  %loadBr_403d38 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403d38 = icmp eq i8 %loadBr_403d38, 1
  br i1 %cmpBr_403d38, label %block_.L_403d5c, label %block_403d3e

block_403d3e:                                     ; preds = %block_.L_403d31
  %loadMem_403d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3724 = getelementptr inbounds %struct.GPR, %struct.GPR* %3723, i32 0, i32 33
  %3725 = getelementptr inbounds %struct.Reg, %struct.Reg* %3724, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %3725 to i64*
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3727 = getelementptr inbounds %struct.GPR, %struct.GPR* %3726, i32 0, i32 15
  %3728 = getelementptr inbounds %struct.Reg, %struct.Reg* %3727, i32 0, i32 0
  %RBP.i853 = bitcast %union.anon* %3728 to i64*
  %3729 = load i64, i64* %RBP.i853
  %3730 = sub i64 %3729, 632
  %3731 = load i64, i64* %PC.i852
  %3732 = add i64 %3731, 7
  store i64 %3732, i64* %PC.i852
  %3733 = inttoptr i64 %3730 to i32*
  %3734 = load i32, i32* %3733
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3735, align 1
  %3736 = and i32 %3734, 255
  %3737 = call i32 @llvm.ctpop.i32(i32 %3736)
  %3738 = trunc i32 %3737 to i8
  %3739 = and i8 %3738, 1
  %3740 = xor i8 %3739, 1
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3740, i8* %3741, align 1
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3742, align 1
  %3743 = icmp eq i32 %3734, 0
  %3744 = zext i1 %3743 to i8
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3744, i8* %3745, align 1
  %3746 = lshr i32 %3734, 31
  %3747 = trunc i32 %3746 to i8
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3747, i8* %3748, align 1
  %3749 = lshr i32 %3734, 31
  %3750 = xor i32 %3746, %3749
  %3751 = add i32 %3750, %3749
  %3752 = icmp eq i32 %3751, 2
  %3753 = zext i1 %3752 to i8
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3753, i8* %3754, align 1
  store %struct.Memory* %loadMem_403d3e, %struct.Memory** %MEMORY
  %loadMem_403d45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3756 = getelementptr inbounds %struct.GPR, %struct.GPR* %3755, i32 0, i32 33
  %3757 = getelementptr inbounds %struct.Reg, %struct.Reg* %3756, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %3757 to i64*
  %3758 = load i64, i64* %PC.i851
  %3759 = add i64 %3758, 23
  %3760 = load i64, i64* %PC.i851
  %3761 = add i64 %3760, 6
  %3762 = load i64, i64* %PC.i851
  %3763 = add i64 %3762, 6
  store i64 %3763, i64* %PC.i851
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3765 = load i8, i8* %3764, align 1
  %3766 = icmp eq i8 %3765, 0
  %3767 = zext i1 %3766 to i8
  store i8 %3767, i8* %BRANCH_TAKEN, align 1
  %3768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3769 = select i1 %3766, i64 %3759, i64 %3761
  store i64 %3769, i64* %3768, align 8
  store %struct.Memory* %loadMem_403d45, %struct.Memory** %MEMORY
  %loadBr_403d45 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403d45 = icmp eq i8 %loadBr_403d45, 1
  br i1 %cmpBr_403d45, label %block_.L_403d5c, label %block_403d4b

block_403d4b:                                     ; preds = %block_403d3e
  %loadMem_403d4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3771 = getelementptr inbounds %struct.GPR, %struct.GPR* %3770, i32 0, i32 33
  %3772 = getelementptr inbounds %struct.Reg, %struct.Reg* %3771, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %3772 to i64*
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3774 = getelementptr inbounds %struct.GPR, %struct.GPR* %3773, i32 0, i32 1
  %3775 = getelementptr inbounds %struct.Reg, %struct.Reg* %3774, i32 0, i32 0
  %RAX.i850 = bitcast %union.anon* %3775 to i64*
  %3776 = load i64, i64* %PC.i849
  %3777 = add i64 %3776, 8
  store i64 %3777, i64* %PC.i849
  %3778 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3778, i64* %RAX.i850, align 8
  store %struct.Memory* %loadMem_403d4b, %struct.Memory** %MEMORY
  %loadMem_403d53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3780 = getelementptr inbounds %struct.GPR, %struct.GPR* %3779, i32 0, i32 33
  %3781 = getelementptr inbounds %struct.Reg, %struct.Reg* %3780, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %3781 to i64*
  %3782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3783 = getelementptr inbounds %struct.GPR, %struct.GPR* %3782, i32 0, i32 1
  %3784 = getelementptr inbounds %struct.Reg, %struct.Reg* %3783, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %3784 to i64*
  %3785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3786 = getelementptr inbounds %struct.GPR, %struct.GPR* %3785, i32 0, i32 5
  %3787 = getelementptr inbounds %struct.Reg, %struct.Reg* %3786, i32 0, i32 0
  %RCX.i848 = bitcast %union.anon* %3787 to i64*
  %3788 = load i64, i64* %RAX.i847
  %3789 = add i64 %3788, 72680
  %3790 = load i64, i64* %PC.i846
  %3791 = add i64 %3790, 6
  store i64 %3791, i64* %PC.i846
  %3792 = inttoptr i64 %3789 to i32*
  %3793 = load i32, i32* %3792
  %3794 = zext i32 %3793 to i64
  store i64 %3794, i64* %RCX.i848, align 8
  store %struct.Memory* %loadMem_403d53, %struct.Memory** %MEMORY
  %loadMem_403d59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3796 = getelementptr inbounds %struct.GPR, %struct.GPR* %3795, i32 0, i32 33
  %3797 = getelementptr inbounds %struct.Reg, %struct.Reg* %3796, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %3797 to i64*
  %3798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3799 = getelementptr inbounds %struct.GPR, %struct.GPR* %3798, i32 0, i32 5
  %3800 = getelementptr inbounds %struct.Reg, %struct.Reg* %3799, i32 0, i32 0
  %ECX.i844 = bitcast %union.anon* %3800 to i32*
  %3801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3802 = getelementptr inbounds %struct.GPR, %struct.GPR* %3801, i32 0, i32 15
  %3803 = getelementptr inbounds %struct.Reg, %struct.Reg* %3802, i32 0, i32 0
  %RBP.i845 = bitcast %union.anon* %3803 to i64*
  %3804 = load i64, i64* %RBP.i845
  %3805 = sub i64 %3804, 4
  %3806 = load i32, i32* %ECX.i844
  %3807 = zext i32 %3806 to i64
  %3808 = load i64, i64* %PC.i843
  %3809 = add i64 %3808, 3
  store i64 %3809, i64* %PC.i843
  %3810 = inttoptr i64 %3805 to i32*
  store i32 %3806, i32* %3810
  store %struct.Memory* %loadMem_403d59, %struct.Memory** %MEMORY
  br label %block_.L_403d5c

block_.L_403d5c:                                  ; preds = %block_403d4b, %block_403d3e, %block_.L_403d31
  %loadMem_403d5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3812 = getelementptr inbounds %struct.GPR, %struct.GPR* %3811, i32 0, i32 33
  %3813 = getelementptr inbounds %struct.Reg, %struct.Reg* %3812, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %3813 to i64*
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3815 = getelementptr inbounds %struct.GPR, %struct.GPR* %3814, i32 0, i32 15
  %3816 = getelementptr inbounds %struct.Reg, %struct.Reg* %3815, i32 0, i32 0
  %RBP.i842 = bitcast %union.anon* %3816 to i64*
  %3817 = load i64, i64* %RBP.i842
  %3818 = sub i64 %3817, 148
  %3819 = load i64, i64* %PC.i841
  %3820 = add i64 %3819, 10
  store i64 %3820, i64* %PC.i841
  %3821 = inttoptr i64 %3818 to i32*
  store i32 0, i32* %3821
  store %struct.Memory* %loadMem_403d5c, %struct.Memory** %MEMORY
  br label %block_.L_403d66

block_.L_403d66:                                  ; preds = %block_.L_403e1a, %block_.L_403d5c
  %loadMem_403d66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3823 = getelementptr inbounds %struct.GPR, %struct.GPR* %3822, i32 0, i32 33
  %3824 = getelementptr inbounds %struct.Reg, %struct.Reg* %3823, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %3824 to i64*
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3826 = getelementptr inbounds %struct.GPR, %struct.GPR* %3825, i32 0, i32 15
  %3827 = getelementptr inbounds %struct.Reg, %struct.Reg* %3826, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %3827 to i64*
  %3828 = load i64, i64* %RBP.i840
  %3829 = sub i64 %3828, 148
  %3830 = load i64, i64* %PC.i839
  %3831 = add i64 %3830, 7
  store i64 %3831, i64* %PC.i839
  %3832 = inttoptr i64 %3829 to i32*
  %3833 = load i32, i32* %3832
  %3834 = sub i32 %3833, 16
  %3835 = icmp ult i32 %3833, 16
  %3836 = zext i1 %3835 to i8
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3836, i8* %3837, align 1
  %3838 = and i32 %3834, 255
  %3839 = call i32 @llvm.ctpop.i32(i32 %3838)
  %3840 = trunc i32 %3839 to i8
  %3841 = and i8 %3840, 1
  %3842 = xor i8 %3841, 1
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3842, i8* %3843, align 1
  %3844 = xor i32 %3833, 16
  %3845 = xor i32 %3844, %3834
  %3846 = lshr i32 %3845, 4
  %3847 = trunc i32 %3846 to i8
  %3848 = and i8 %3847, 1
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3848, i8* %3849, align 1
  %3850 = icmp eq i32 %3834, 0
  %3851 = zext i1 %3850 to i8
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3851, i8* %3852, align 1
  %3853 = lshr i32 %3834, 31
  %3854 = trunc i32 %3853 to i8
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3854, i8* %3855, align 1
  %3856 = lshr i32 %3833, 31
  %3857 = xor i32 %3853, %3856
  %3858 = add i32 %3857, %3856
  %3859 = icmp eq i32 %3858, 2
  %3860 = zext i1 %3859 to i8
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3860, i8* %3861, align 1
  store %struct.Memory* %loadMem_403d66, %struct.Memory** %MEMORY
  %loadMem_403d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3863 = getelementptr inbounds %struct.GPR, %struct.GPR* %3862, i32 0, i32 33
  %3864 = getelementptr inbounds %struct.Reg, %struct.Reg* %3863, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %3864 to i64*
  %3865 = load i64, i64* %PC.i838
  %3866 = add i64 %3865, 193
  %3867 = load i64, i64* %PC.i838
  %3868 = add i64 %3867, 6
  %3869 = load i64, i64* %PC.i838
  %3870 = add i64 %3869, 6
  store i64 %3870, i64* %PC.i838
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3872 = load i8, i8* %3871, align 1
  %3873 = icmp ne i8 %3872, 0
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3875 = load i8, i8* %3874, align 1
  %3876 = icmp ne i8 %3875, 0
  %3877 = xor i1 %3873, %3876
  %3878 = xor i1 %3877, true
  %3879 = zext i1 %3878 to i8
  store i8 %3879, i8* %BRANCH_TAKEN, align 1
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3881 = select i1 %3877, i64 %3868, i64 %3866
  store i64 %3881, i64* %3880, align 8
  store %struct.Memory* %loadMem_403d6d, %struct.Memory** %MEMORY
  %loadBr_403d6d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403d6d = icmp eq i8 %loadBr_403d6d, 1
  br i1 %cmpBr_403d6d, label %block_.L_403e2e, label %block_403d73

block_403d73:                                     ; preds = %block_.L_403d66
  %loadMem_403d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3883 = getelementptr inbounds %struct.GPR, %struct.GPR* %3882, i32 0, i32 33
  %3884 = getelementptr inbounds %struct.Reg, %struct.Reg* %3883, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %3884 to i64*
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3886 = getelementptr inbounds %struct.GPR, %struct.GPR* %3885, i32 0, i32 15
  %3887 = getelementptr inbounds %struct.Reg, %struct.Reg* %3886, i32 0, i32 0
  %RBP.i837 = bitcast %union.anon* %3887 to i64*
  %3888 = load i64, i64* %RBP.i837
  %3889 = sub i64 %3888, 628
  %3890 = load i64, i64* %PC.i836
  %3891 = add i64 %3890, 7
  store i64 %3891, i64* %PC.i836
  %3892 = inttoptr i64 %3889 to i32*
  %3893 = load i32, i32* %3892
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3894, align 1
  %3895 = and i32 %3893, 255
  %3896 = call i32 @llvm.ctpop.i32(i32 %3895)
  %3897 = trunc i32 %3896 to i8
  %3898 = and i8 %3897, 1
  %3899 = xor i8 %3898, 1
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3899, i8* %3900, align 1
  %3901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3901, align 1
  %3902 = icmp eq i32 %3893, 0
  %3903 = zext i1 %3902 to i8
  %3904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3903, i8* %3904, align 1
  %3905 = lshr i32 %3893, 31
  %3906 = trunc i32 %3905 to i8
  %3907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3906, i8* %3907, align 1
  %3908 = lshr i32 %3893, 31
  %3909 = xor i32 %3905, %3908
  %3910 = add i32 %3909, %3908
  %3911 = icmp eq i32 %3910, 2
  %3912 = zext i1 %3911 to i8
  %3913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3912, i8* %3913, align 1
  store %struct.Memory* %loadMem_403d73, %struct.Memory** %MEMORY
  %loadMem_403d7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3915 = getelementptr inbounds %struct.GPR, %struct.GPR* %3914, i32 0, i32 33
  %3916 = getelementptr inbounds %struct.Reg, %struct.Reg* %3915, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %3916 to i64*
  %3917 = load i64, i64* %PC.i835
  %3918 = add i64 %3917, 57
  %3919 = load i64, i64* %PC.i835
  %3920 = add i64 %3919, 6
  %3921 = load i64, i64* %PC.i835
  %3922 = add i64 %3921, 6
  store i64 %3922, i64* %PC.i835
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3924 = load i8, i8* %3923, align 1
  store i8 %3924, i8* %BRANCH_TAKEN, align 1
  %3925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3926 = icmp ne i8 %3924, 0
  %3927 = select i1 %3926, i64 %3918, i64 %3920
  store i64 %3927, i64* %3925, align 8
  store %struct.Memory* %loadMem_403d7a, %struct.Memory** %MEMORY
  %loadBr_403d7a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403d7a = icmp eq i8 %loadBr_403d7a, 1
  br i1 %cmpBr_403d7a, label %block_.L_403db3, label %block_403d80

block_403d80:                                     ; preds = %block_403d73
  %loadMem_403d80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3929 = getelementptr inbounds %struct.GPR, %struct.GPR* %3928, i32 0, i32 33
  %3930 = getelementptr inbounds %struct.Reg, %struct.Reg* %3929, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %3930 to i64*
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3932 = getelementptr inbounds %struct.GPR, %struct.GPR* %3931, i32 0, i32 1
  %3933 = getelementptr inbounds %struct.Reg, %struct.Reg* %3932, i32 0, i32 0
  %RAX.i833 = bitcast %union.anon* %3933 to i64*
  %3934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3935 = getelementptr inbounds %struct.GPR, %struct.GPR* %3934, i32 0, i32 15
  %3936 = getelementptr inbounds %struct.Reg, %struct.Reg* %3935, i32 0, i32 0
  %RBP.i834 = bitcast %union.anon* %3936 to i64*
  %3937 = load i64, i64* %RBP.i834
  %3938 = sub i64 %3937, 184
  %3939 = load i64, i64* %PC.i832
  %3940 = add i64 %3939, 7
  store i64 %3940, i64* %PC.i832
  %3941 = inttoptr i64 %3938 to i64*
  %3942 = load i64, i64* %3941
  store i64 %3942, i64* %RAX.i833, align 8
  store %struct.Memory* %loadMem_403d80, %struct.Memory** %MEMORY
  %loadMem_403d87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3944 = getelementptr inbounds %struct.GPR, %struct.GPR* %3943, i32 0, i32 33
  %3945 = getelementptr inbounds %struct.Reg, %struct.Reg* %3944, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %3945 to i64*
  %3946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3947 = getelementptr inbounds %struct.GPR, %struct.GPR* %3946, i32 0, i32 5
  %3948 = getelementptr inbounds %struct.Reg, %struct.Reg* %3947, i32 0, i32 0
  %RCX.i830 = bitcast %union.anon* %3948 to i64*
  %3949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3950 = getelementptr inbounds %struct.GPR, %struct.GPR* %3949, i32 0, i32 15
  %3951 = getelementptr inbounds %struct.Reg, %struct.Reg* %3950, i32 0, i32 0
  %RBP.i831 = bitcast %union.anon* %3951 to i64*
  %3952 = load i64, i64* %RBP.i831
  %3953 = sub i64 %3952, 196
  %3954 = load i64, i64* %PC.i829
  %3955 = add i64 %3954, 7
  store i64 %3955, i64* %PC.i829
  %3956 = inttoptr i64 %3953 to i32*
  %3957 = load i32, i32* %3956
  %3958 = sext i32 %3957 to i64
  store i64 %3958, i64* %RCX.i830, align 8
  store %struct.Memory* %loadMem_403d87, %struct.Memory** %MEMORY
  %loadMem_403d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3960 = getelementptr inbounds %struct.GPR, %struct.GPR* %3959, i32 0, i32 33
  %3961 = getelementptr inbounds %struct.Reg, %struct.Reg* %3960, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %3961 to i64*
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 1
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %RAX.i827 = bitcast %union.anon* %3964 to i64*
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 5
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %RCX.i828 = bitcast %union.anon* %3967 to i64*
  %3968 = load i64, i64* %RAX.i827
  %3969 = load i64, i64* %RCX.i828
  %3970 = mul i64 %3969, 8
  %3971 = add i64 %3970, %3968
  %3972 = load i64, i64* %PC.i826
  %3973 = add i64 %3972, 4
  store i64 %3973, i64* %PC.i826
  %3974 = inttoptr i64 %3971 to i64*
  %3975 = load i64, i64* %3974
  store i64 %3975, i64* %RAX.i827, align 8
  store %struct.Memory* %loadMem_403d8e, %struct.Memory** %MEMORY
  %loadMem_403d92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3977 = getelementptr inbounds %struct.GPR, %struct.GPR* %3976, i32 0, i32 33
  %3978 = getelementptr inbounds %struct.Reg, %struct.Reg* %3977, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %3978 to i64*
  %3979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3980 = getelementptr inbounds %struct.GPR, %struct.GPR* %3979, i32 0, i32 7
  %3981 = getelementptr inbounds %struct.Reg, %struct.Reg* %3980, i32 0, i32 0
  %RDX.i824 = bitcast %union.anon* %3981 to i64*
  %3982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3983 = getelementptr inbounds %struct.GPR, %struct.GPR* %3982, i32 0, i32 15
  %3984 = getelementptr inbounds %struct.Reg, %struct.Reg* %3983, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %3984 to i64*
  %3985 = load i64, i64* %RBP.i825
  %3986 = sub i64 %3985, 200
  %3987 = load i64, i64* %PC.i823
  %3988 = add i64 %3987, 6
  store i64 %3988, i64* %PC.i823
  %3989 = inttoptr i64 %3986 to i32*
  %3990 = load i32, i32* %3989
  %3991 = zext i32 %3990 to i64
  store i64 %3991, i64* %RDX.i824, align 8
  store %struct.Memory* %loadMem_403d92, %struct.Memory** %MEMORY
  %loadMem_403d98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3993 = getelementptr inbounds %struct.GPR, %struct.GPR* %3992, i32 0, i32 33
  %3994 = getelementptr inbounds %struct.Reg, %struct.Reg* %3993, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %3994 to i64*
  %3995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3996 = getelementptr inbounds %struct.GPR, %struct.GPR* %3995, i32 0, i32 7
  %3997 = getelementptr inbounds %struct.Reg, %struct.Reg* %3996, i32 0, i32 0
  %RDX.i821 = bitcast %union.anon* %3997 to i64*
  %3998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3999 = getelementptr inbounds %struct.GPR, %struct.GPR* %3998, i32 0, i32 15
  %4000 = getelementptr inbounds %struct.Reg, %struct.Reg* %3999, i32 0, i32 0
  %RBP.i822 = bitcast %union.anon* %4000 to i64*
  %4001 = load i64, i64* %RDX.i821
  %4002 = load i64, i64* %RBP.i822
  %4003 = sub i64 %4002, 148
  %4004 = load i64, i64* %PC.i820
  %4005 = add i64 %4004, 6
  store i64 %4005, i64* %PC.i820
  %4006 = trunc i64 %4001 to i32
  %4007 = inttoptr i64 %4003 to i32*
  %4008 = load i32, i32* %4007
  %4009 = add i32 %4008, %4006
  %4010 = zext i32 %4009 to i64
  store i64 %4010, i64* %RDX.i821, align 8
  %4011 = icmp ult i32 %4009, %4006
  %4012 = icmp ult i32 %4009, %4008
  %4013 = or i1 %4011, %4012
  %4014 = zext i1 %4013 to i8
  %4015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4014, i8* %4015, align 1
  %4016 = and i32 %4009, 255
  %4017 = call i32 @llvm.ctpop.i32(i32 %4016)
  %4018 = trunc i32 %4017 to i8
  %4019 = and i8 %4018, 1
  %4020 = xor i8 %4019, 1
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4020, i8* %4021, align 1
  %4022 = xor i32 %4008, %4006
  %4023 = xor i32 %4022, %4009
  %4024 = lshr i32 %4023, 4
  %4025 = trunc i32 %4024 to i8
  %4026 = and i8 %4025, 1
  %4027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4026, i8* %4027, align 1
  %4028 = icmp eq i32 %4009, 0
  %4029 = zext i1 %4028 to i8
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4029, i8* %4030, align 1
  %4031 = lshr i32 %4009, 31
  %4032 = trunc i32 %4031 to i8
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4032, i8* %4033, align 1
  %4034 = lshr i32 %4006, 31
  %4035 = lshr i32 %4008, 31
  %4036 = xor i32 %4031, %4034
  %4037 = xor i32 %4031, %4035
  %4038 = add i32 %4036, %4037
  %4039 = icmp eq i32 %4038, 2
  %4040 = zext i1 %4039 to i8
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4040, i8* %4041, align 1
  store %struct.Memory* %loadMem_403d98, %struct.Memory** %MEMORY
  %loadMem_403d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4043 = getelementptr inbounds %struct.GPR, %struct.GPR* %4042, i32 0, i32 33
  %4044 = getelementptr inbounds %struct.Reg, %struct.Reg* %4043, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %4044 to i64*
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4046 = getelementptr inbounds %struct.GPR, %struct.GPR* %4045, i32 0, i32 7
  %4047 = getelementptr inbounds %struct.Reg, %struct.Reg* %4046, i32 0, i32 0
  %EDX.i818 = bitcast %union.anon* %4047 to i32*
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4049 = getelementptr inbounds %struct.GPR, %struct.GPR* %4048, i32 0, i32 5
  %4050 = getelementptr inbounds %struct.Reg, %struct.Reg* %4049, i32 0, i32 0
  %RCX.i819 = bitcast %union.anon* %4050 to i64*
  %4051 = load i32, i32* %EDX.i818
  %4052 = zext i32 %4051 to i64
  %4053 = load i64, i64* %PC.i817
  %4054 = add i64 %4053, 3
  store i64 %4054, i64* %PC.i817
  %4055 = shl i64 %4052, 32
  %4056 = ashr exact i64 %4055, 32
  store i64 %4056, i64* %RCX.i819, align 8
  store %struct.Memory* %loadMem_403d9e, %struct.Memory** %MEMORY
  %loadMem_403da1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4058 = getelementptr inbounds %struct.GPR, %struct.GPR* %4057, i32 0, i32 33
  %4059 = getelementptr inbounds %struct.Reg, %struct.Reg* %4058, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %4059 to i64*
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4061 = getelementptr inbounds %struct.GPR, %struct.GPR* %4060, i32 0, i32 1
  %4062 = getelementptr inbounds %struct.Reg, %struct.Reg* %4061, i32 0, i32 0
  %RAX.i814 = bitcast %union.anon* %4062 to i64*
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4064 = getelementptr inbounds %struct.GPR, %struct.GPR* %4063, i32 0, i32 5
  %4065 = getelementptr inbounds %struct.Reg, %struct.Reg* %4064, i32 0, i32 0
  %RCX.i815 = bitcast %union.anon* %4065 to i64*
  %4066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4067 = getelementptr inbounds %struct.GPR, %struct.GPR* %4066, i32 0, i32 7
  %4068 = getelementptr inbounds %struct.Reg, %struct.Reg* %4067, i32 0, i32 0
  %RDX.i816 = bitcast %union.anon* %4068 to i64*
  %4069 = load i64, i64* %RAX.i814
  %4070 = load i64, i64* %RCX.i815
  %4071 = mul i64 %4070, 2
  %4072 = add i64 %4071, %4069
  %4073 = load i64, i64* %PC.i813
  %4074 = add i64 %4073, 4
  store i64 %4074, i64* %PC.i813
  %4075 = inttoptr i64 %4072 to i16*
  %4076 = load i16, i16* %4075
  %4077 = zext i16 %4076 to i64
  store i64 %4077, i64* %RDX.i816, align 8
  store %struct.Memory* %loadMem_403da1, %struct.Memory** %MEMORY
  %loadMem_403da5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4079 = getelementptr inbounds %struct.GPR, %struct.GPR* %4078, i32 0, i32 33
  %4080 = getelementptr inbounds %struct.Reg, %struct.Reg* %4079, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %4080 to i64*
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4082 = getelementptr inbounds %struct.GPR, %struct.GPR* %4081, i32 0, i32 1
  %4083 = getelementptr inbounds %struct.Reg, %struct.Reg* %4082, i32 0, i32 0
  %RAX.i811 = bitcast %union.anon* %4083 to i64*
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4085 = getelementptr inbounds %struct.GPR, %struct.GPR* %4084, i32 0, i32 15
  %4086 = getelementptr inbounds %struct.Reg, %struct.Reg* %4085, i32 0, i32 0
  %RBP.i812 = bitcast %union.anon* %4086 to i64*
  %4087 = load i64, i64* %RBP.i812
  %4088 = sub i64 %4087, 148
  %4089 = load i64, i64* %PC.i810
  %4090 = add i64 %4089, 7
  store i64 %4090, i64* %PC.i810
  %4091 = inttoptr i64 %4088 to i32*
  %4092 = load i32, i32* %4091
  %4093 = sext i32 %4092 to i64
  store i64 %4093, i64* %RAX.i811, align 8
  store %struct.Memory* %loadMem_403da5, %struct.Memory** %MEMORY
  %loadMem_403dac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4095 = getelementptr inbounds %struct.GPR, %struct.GPR* %4094, i32 0, i32 33
  %4096 = getelementptr inbounds %struct.Reg, %struct.Reg* %4095, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %4096 to i64*
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4098 = getelementptr inbounds %struct.GPR, %struct.GPR* %4097, i32 0, i32 7
  %4099 = getelementptr inbounds %struct.Reg, %struct.Reg* %4098, i32 0, i32 0
  %EDX.i807 = bitcast %union.anon* %4099 to i32*
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4101 = getelementptr inbounds %struct.GPR, %struct.GPR* %4100, i32 0, i32 1
  %4102 = getelementptr inbounds %struct.Reg, %struct.Reg* %4101, i32 0, i32 0
  %RAX.i808 = bitcast %union.anon* %4102 to i64*
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4104 = getelementptr inbounds %struct.GPR, %struct.GPR* %4103, i32 0, i32 15
  %4105 = getelementptr inbounds %struct.Reg, %struct.Reg* %4104, i32 0, i32 0
  %RBP.i809 = bitcast %union.anon* %4105 to i64*
  %4106 = load i64, i64* %RBP.i809
  %4107 = load i64, i64* %RAX.i808
  %4108 = mul i64 %4107, 8
  %4109 = add i64 %4106, -144
  %4110 = add i64 %4109, %4108
  %4111 = load i32, i32* %EDX.i807
  %4112 = zext i32 %4111 to i64
  %4113 = load i64, i64* %PC.i806
  %4114 = add i64 %4113, 7
  store i64 %4114, i64* %PC.i806
  %4115 = inttoptr i64 %4110 to i32*
  store i32 %4111, i32* %4115
  store %struct.Memory* %loadMem_403dac, %struct.Memory** %MEMORY
  br label %block_.L_403db3

block_.L_403db3:                                  ; preds = %block_403d80, %block_403d73
  %loadMem_403db3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4117 = getelementptr inbounds %struct.GPR, %struct.GPR* %4116, i32 0, i32 33
  %4118 = getelementptr inbounds %struct.Reg, %struct.Reg* %4117, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %4118 to i64*
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4120 = getelementptr inbounds %struct.GPR, %struct.GPR* %4119, i32 0, i32 15
  %4121 = getelementptr inbounds %struct.Reg, %struct.Reg* %4120, i32 0, i32 0
  %RBP.i805 = bitcast %union.anon* %4121 to i64*
  %4122 = load i64, i64* %RBP.i805
  %4123 = sub i64 %4122, 632
  %4124 = load i64, i64* %PC.i804
  %4125 = add i64 %4124, 7
  store i64 %4125, i64* %PC.i804
  %4126 = inttoptr i64 %4123 to i32*
  %4127 = load i32, i32* %4126
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4128, align 1
  %4129 = and i32 %4127, 255
  %4130 = call i32 @llvm.ctpop.i32(i32 %4129)
  %4131 = trunc i32 %4130 to i8
  %4132 = and i8 %4131, 1
  %4133 = xor i8 %4132, 1
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4133, i8* %4134, align 1
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4135, align 1
  %4136 = icmp eq i32 %4127, 0
  %4137 = zext i1 %4136 to i8
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4137, i8* %4138, align 1
  %4139 = lshr i32 %4127, 31
  %4140 = trunc i32 %4139 to i8
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4140, i8* %4141, align 1
  %4142 = lshr i32 %4127, 31
  %4143 = xor i32 %4139, %4142
  %4144 = add i32 %4143, %4142
  %4145 = icmp eq i32 %4144, 2
  %4146 = zext i1 %4145 to i8
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4146, i8* %4147, align 1
  store %struct.Memory* %loadMem_403db3, %struct.Memory** %MEMORY
  %loadMem_403dba = load %struct.Memory*, %struct.Memory** %MEMORY
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4149 = getelementptr inbounds %struct.GPR, %struct.GPR* %4148, i32 0, i32 33
  %4150 = getelementptr inbounds %struct.Reg, %struct.Reg* %4149, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %4150 to i64*
  %4151 = load i64, i64* %PC.i803
  %4152 = add i64 %4151, 91
  %4153 = load i64, i64* %PC.i803
  %4154 = add i64 %4153, 6
  %4155 = load i64, i64* %PC.i803
  %4156 = add i64 %4155, 6
  store i64 %4156, i64* %PC.i803
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4158 = load i8, i8* %4157, align 1
  store i8 %4158, i8* %BRANCH_TAKEN, align 1
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4160 = icmp ne i8 %4158, 0
  %4161 = select i1 %4160, i64 %4152, i64 %4154
  store i64 %4161, i64* %4159, align 8
  store %struct.Memory* %loadMem_403dba, %struct.Memory** %MEMORY
  %loadBr_403dba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403dba = icmp eq i8 %loadBr_403dba, 1
  br i1 %cmpBr_403dba, label %block_.L_403e15, label %block_403dc0

block_403dc0:                                     ; preds = %block_.L_403db3
  %loadMem_403dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4163 = getelementptr inbounds %struct.GPR, %struct.GPR* %4162, i32 0, i32 33
  %4164 = getelementptr inbounds %struct.Reg, %struct.Reg* %4163, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %4164 to i64*
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4166 = getelementptr inbounds %struct.GPR, %struct.GPR* %4165, i32 0, i32 1
  %4167 = getelementptr inbounds %struct.Reg, %struct.Reg* %4166, i32 0, i32 0
  %RAX.i801 = bitcast %union.anon* %4167 to i64*
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4169 = getelementptr inbounds %struct.GPR, %struct.GPR* %4168, i32 0, i32 15
  %4170 = getelementptr inbounds %struct.Reg, %struct.Reg* %4169, i32 0, i32 0
  %RBP.i802 = bitcast %union.anon* %4170 to i64*
  %4171 = load i64, i64* %RBP.i802
  %4172 = sub i64 %4171, 624
  %4173 = load i64, i64* %PC.i800
  %4174 = add i64 %4173, 7
  store i64 %4174, i64* %PC.i800
  store i64 %4172, i64* %RAX.i801, align 8
  store %struct.Memory* %loadMem_403dc0, %struct.Memory** %MEMORY
  %loadMem_403dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4176 = getelementptr inbounds %struct.GPR, %struct.GPR* %4175, i32 0, i32 33
  %4177 = getelementptr inbounds %struct.Reg, %struct.Reg* %4176, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %4177 to i64*
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4179 = getelementptr inbounds %struct.GPR, %struct.GPR* %4178, i32 0, i32 5
  %4180 = getelementptr inbounds %struct.Reg, %struct.Reg* %4179, i32 0, i32 0
  %RCX.i798 = bitcast %union.anon* %4180 to i64*
  %4181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4182 = getelementptr inbounds %struct.GPR, %struct.GPR* %4181, i32 0, i32 15
  %4183 = getelementptr inbounds %struct.Reg, %struct.Reg* %4182, i32 0, i32 0
  %RBP.i799 = bitcast %union.anon* %4183 to i64*
  %4184 = load i64, i64* %RBP.i799
  %4185 = sub i64 %4184, 184
  %4186 = load i64, i64* %PC.i797
  %4187 = add i64 %4186, 7
  store i64 %4187, i64* %PC.i797
  %4188 = inttoptr i64 %4185 to i64*
  %4189 = load i64, i64* %4188
  store i64 %4189, i64* %RCX.i798, align 8
  store %struct.Memory* %loadMem_403dc7, %struct.Memory** %MEMORY
  %loadMem_403dce = load %struct.Memory*, %struct.Memory** %MEMORY
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4191 = getelementptr inbounds %struct.GPR, %struct.GPR* %4190, i32 0, i32 33
  %4192 = getelementptr inbounds %struct.Reg, %struct.Reg* %4191, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %4192 to i64*
  %4193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4194 = getelementptr inbounds %struct.GPR, %struct.GPR* %4193, i32 0, i32 7
  %4195 = getelementptr inbounds %struct.Reg, %struct.Reg* %4194, i32 0, i32 0
  %RDX.i795 = bitcast %union.anon* %4195 to i64*
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4197 = getelementptr inbounds %struct.GPR, %struct.GPR* %4196, i32 0, i32 15
  %4198 = getelementptr inbounds %struct.Reg, %struct.Reg* %4197, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %4198 to i64*
  %4199 = load i64, i64* %RBP.i796
  %4200 = sub i64 %4199, 148
  %4201 = load i64, i64* %PC.i794
  %4202 = add i64 %4201, 6
  store i64 %4202, i64* %PC.i794
  %4203 = inttoptr i64 %4200 to i32*
  %4204 = load i32, i32* %4203
  %4205 = zext i32 %4204 to i64
  store i64 %4205, i64* %RDX.i795, align 8
  store %struct.Memory* %loadMem_403dce, %struct.Memory** %MEMORY
  %loadMem_403dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 33
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %4208 to i64*
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 7
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %RDX.i793 = bitcast %union.anon* %4211 to i64*
  %4212 = load i64, i64* %RDX.i793
  %4213 = load i64, i64* %PC.i792
  %4214 = add i64 %4213, 3
  store i64 %4214, i64* %PC.i792
  %4215 = trunc i64 %4212 to i32
  %4216 = add i32 1, %4215
  %4217 = zext i32 %4216 to i64
  store i64 %4217, i64* %RDX.i793, align 8
  %4218 = icmp ult i32 %4216, %4215
  %4219 = icmp ult i32 %4216, 1
  %4220 = or i1 %4218, %4219
  %4221 = zext i1 %4220 to i8
  %4222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4221, i8* %4222, align 1
  %4223 = and i32 %4216, 255
  %4224 = call i32 @llvm.ctpop.i32(i32 %4223)
  %4225 = trunc i32 %4224 to i8
  %4226 = and i8 %4225, 1
  %4227 = xor i8 %4226, 1
  %4228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4227, i8* %4228, align 1
  %4229 = xor i64 1, %4212
  %4230 = trunc i64 %4229 to i32
  %4231 = xor i32 %4230, %4216
  %4232 = lshr i32 %4231, 4
  %4233 = trunc i32 %4232 to i8
  %4234 = and i8 %4233, 1
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4234, i8* %4235, align 1
  %4236 = icmp eq i32 %4216, 0
  %4237 = zext i1 %4236 to i8
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4237, i8* %4238, align 1
  %4239 = lshr i32 %4216, 31
  %4240 = trunc i32 %4239 to i8
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4240, i8* %4241, align 1
  %4242 = lshr i32 %4215, 31
  %4243 = xor i32 %4239, %4242
  %4244 = add i32 %4243, %4239
  %4245 = icmp eq i32 %4244, 2
  %4246 = zext i1 %4245 to i8
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4246, i8* %4247, align 1
  store %struct.Memory* %loadMem_403dd4, %struct.Memory** %MEMORY
  %loadMem_403dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4249 = getelementptr inbounds %struct.GPR, %struct.GPR* %4248, i32 0, i32 33
  %4250 = getelementptr inbounds %struct.Reg, %struct.Reg* %4249, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %4250 to i64*
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4252 = getelementptr inbounds %struct.GPR, %struct.GPR* %4251, i32 0, i32 7
  %4253 = getelementptr inbounds %struct.Reg, %struct.Reg* %4252, i32 0, i32 0
  %EDX.i790 = bitcast %union.anon* %4253 to i32*
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4255 = getelementptr inbounds %struct.GPR, %struct.GPR* %4254, i32 0, i32 9
  %4256 = getelementptr inbounds %struct.Reg, %struct.Reg* %4255, i32 0, i32 0
  %RSI.i791 = bitcast %union.anon* %4256 to i64*
  %4257 = load i32, i32* %EDX.i790
  %4258 = zext i32 %4257 to i64
  %4259 = load i64, i64* %PC.i789
  %4260 = add i64 %4259, 3
  store i64 %4260, i64* %PC.i789
  %4261 = shl i64 %4258, 32
  %4262 = ashr exact i64 %4261, 32
  store i64 %4262, i64* %RSI.i791, align 8
  store %struct.Memory* %loadMem_403dd7, %struct.Memory** %MEMORY
  %loadMem_403dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %4263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4264 = getelementptr inbounds %struct.GPR, %struct.GPR* %4263, i32 0, i32 33
  %4265 = getelementptr inbounds %struct.Reg, %struct.Reg* %4264, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %4265 to i64*
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4267 = getelementptr inbounds %struct.GPR, %struct.GPR* %4266, i32 0, i32 9
  %4268 = getelementptr inbounds %struct.Reg, %struct.Reg* %4267, i32 0, i32 0
  %RSI.i788 = bitcast %union.anon* %4268 to i64*
  %4269 = load i64, i64* %RSI.i788
  %4270 = load i64, i64* %PC.i787
  %4271 = add i64 %4270, 4
  store i64 %4271, i64* %PC.i787
  %4272 = sext i64 %4269 to i128
  %4273 = and i128 %4272, -18446744073709551616
  %4274 = zext i64 %4269 to i128
  %4275 = or i128 %4273, %4274
  %4276 = mul i128 24, %4275
  %4277 = trunc i128 %4276 to i64
  store i64 %4277, i64* %RSI.i788, align 8
  %4278 = sext i64 %4277 to i128
  %4279 = icmp ne i128 %4278, %4276
  %4280 = zext i1 %4279 to i8
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4280, i8* %4281, align 1
  %4282 = trunc i128 %4276 to i32
  %4283 = and i32 %4282, 255
  %4284 = call i32 @llvm.ctpop.i32(i32 %4283)
  %4285 = trunc i32 %4284 to i8
  %4286 = and i8 %4285, 1
  %4287 = xor i8 %4286, 1
  %4288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4287, i8* %4288, align 1
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4289, align 1
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4290, align 1
  %4291 = lshr i64 %4277, 63
  %4292 = trunc i64 %4291 to i8
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4292, i8* %4293, align 1
  %4294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4280, i8* %4294, align 1
  store %struct.Memory* %loadMem_403dda, %struct.Memory** %MEMORY
  %loadMem_403dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4296 = getelementptr inbounds %struct.GPR, %struct.GPR* %4295, i32 0, i32 33
  %4297 = getelementptr inbounds %struct.Reg, %struct.Reg* %4296, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %4297 to i64*
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4299 = getelementptr inbounds %struct.GPR, %struct.GPR* %4298, i32 0, i32 1
  %4300 = getelementptr inbounds %struct.Reg, %struct.Reg* %4299, i32 0, i32 0
  %RAX.i785 = bitcast %union.anon* %4300 to i64*
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4302 = getelementptr inbounds %struct.GPR, %struct.GPR* %4301, i32 0, i32 11
  %4303 = getelementptr inbounds %struct.Reg, %struct.Reg* %4302, i32 0, i32 0
  %RDI.i786 = bitcast %union.anon* %4303 to i64*
  %4304 = load i64, i64* %RAX.i785
  %4305 = load i64, i64* %PC.i784
  %4306 = add i64 %4305, 3
  store i64 %4306, i64* %PC.i784
  store i64 %4304, i64* %RDI.i786, align 8
  store %struct.Memory* %loadMem_403dde, %struct.Memory** %MEMORY
  %loadMem_403de1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4308 = getelementptr inbounds %struct.GPR, %struct.GPR* %4307, i32 0, i32 33
  %4309 = getelementptr inbounds %struct.Reg, %struct.Reg* %4308, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %4309 to i64*
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4311 = getelementptr inbounds %struct.GPR, %struct.GPR* %4310, i32 0, i32 9
  %4312 = getelementptr inbounds %struct.Reg, %struct.Reg* %4311, i32 0, i32 0
  %RSI.i782 = bitcast %union.anon* %4312 to i64*
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4314 = getelementptr inbounds %struct.GPR, %struct.GPR* %4313, i32 0, i32 11
  %4315 = getelementptr inbounds %struct.Reg, %struct.Reg* %4314, i32 0, i32 0
  %RDI.i783 = bitcast %union.anon* %4315 to i64*
  %4316 = load i64, i64* %RDI.i783
  %4317 = load i64, i64* %RSI.i782
  %4318 = load i64, i64* %PC.i781
  %4319 = add i64 %4318, 3
  store i64 %4319, i64* %PC.i781
  %4320 = add i64 %4317, %4316
  store i64 %4320, i64* %RDI.i783, align 8
  %4321 = icmp ult i64 %4320, %4316
  %4322 = icmp ult i64 %4320, %4317
  %4323 = or i1 %4321, %4322
  %4324 = zext i1 %4323 to i8
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4324, i8* %4325, align 1
  %4326 = trunc i64 %4320 to i32
  %4327 = and i32 %4326, 255
  %4328 = call i32 @llvm.ctpop.i32(i32 %4327)
  %4329 = trunc i32 %4328 to i8
  %4330 = and i8 %4329, 1
  %4331 = xor i8 %4330, 1
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4331, i8* %4332, align 1
  %4333 = xor i64 %4317, %4316
  %4334 = xor i64 %4333, %4320
  %4335 = lshr i64 %4334, 4
  %4336 = trunc i64 %4335 to i8
  %4337 = and i8 %4336, 1
  %4338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4337, i8* %4338, align 1
  %4339 = icmp eq i64 %4320, 0
  %4340 = zext i1 %4339 to i8
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4340, i8* %4341, align 1
  %4342 = lshr i64 %4320, 63
  %4343 = trunc i64 %4342 to i8
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4343, i8* %4344, align 1
  %4345 = lshr i64 %4316, 63
  %4346 = lshr i64 %4317, 63
  %4347 = xor i64 %4342, %4345
  %4348 = xor i64 %4342, %4346
  %4349 = add i64 %4347, %4348
  %4350 = icmp eq i64 %4349, 2
  %4351 = zext i1 %4350 to i8
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4351, i8* %4352, align 1
  store %struct.Memory* %loadMem_403de1, %struct.Memory** %MEMORY
  %loadMem_403de4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4354 = getelementptr inbounds %struct.GPR, %struct.GPR* %4353, i32 0, i32 33
  %4355 = getelementptr inbounds %struct.Reg, %struct.Reg* %4354, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %4355 to i64*
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4357 = getelementptr inbounds %struct.GPR, %struct.GPR* %4356, i32 0, i32 9
  %4358 = getelementptr inbounds %struct.Reg, %struct.Reg* %4357, i32 0, i32 0
  %RSI.i779 = bitcast %union.anon* %4358 to i64*
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4360 = getelementptr inbounds %struct.GPR, %struct.GPR* %4359, i32 0, i32 11
  %4361 = getelementptr inbounds %struct.Reg, %struct.Reg* %4360, i32 0, i32 0
  %RDI.i780 = bitcast %union.anon* %4361 to i64*
  %4362 = load i64, i64* %RDI.i780
  %4363 = add i64 %4362, 20
  %4364 = load i64, i64* %PC.i778
  %4365 = add i64 %4364, 4
  store i64 %4365, i64* %PC.i778
  %4366 = inttoptr i64 %4363 to i32*
  %4367 = load i32, i32* %4366
  %4368 = sext i32 %4367 to i64
  store i64 %4368, i64* %RSI.i779, align 8
  store %struct.Memory* %loadMem_403de4, %struct.Memory** %MEMORY
  %loadMem_403de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4370 = getelementptr inbounds %struct.GPR, %struct.GPR* %4369, i32 0, i32 33
  %4371 = getelementptr inbounds %struct.Reg, %struct.Reg* %4370, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %4371 to i64*
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4373 = getelementptr inbounds %struct.GPR, %struct.GPR* %4372, i32 0, i32 5
  %4374 = getelementptr inbounds %struct.Reg, %struct.Reg* %4373, i32 0, i32 0
  %RCX.i776 = bitcast %union.anon* %4374 to i64*
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4376 = getelementptr inbounds %struct.GPR, %struct.GPR* %4375, i32 0, i32 9
  %4377 = getelementptr inbounds %struct.Reg, %struct.Reg* %4376, i32 0, i32 0
  %RSI.i777 = bitcast %union.anon* %4377 to i64*
  %4378 = load i64, i64* %RCX.i776
  %4379 = load i64, i64* %RSI.i777
  %4380 = mul i64 %4379, 8
  %4381 = add i64 %4380, %4378
  %4382 = load i64, i64* %PC.i775
  %4383 = add i64 %4382, 4
  store i64 %4383, i64* %PC.i775
  %4384 = inttoptr i64 %4381 to i64*
  %4385 = load i64, i64* %4384
  store i64 %4385, i64* %RCX.i776, align 8
  store %struct.Memory* %loadMem_403de8, %struct.Memory** %MEMORY
  %loadMem_403dec = load %struct.Memory*, %struct.Memory** %MEMORY
  %4386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4387 = getelementptr inbounds %struct.GPR, %struct.GPR* %4386, i32 0, i32 33
  %4388 = getelementptr inbounds %struct.Reg, %struct.Reg* %4387, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %4388 to i64*
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4390 = getelementptr inbounds %struct.GPR, %struct.GPR* %4389, i32 0, i32 7
  %4391 = getelementptr inbounds %struct.Reg, %struct.Reg* %4390, i32 0, i32 0
  %RDX.i773 = bitcast %union.anon* %4391 to i64*
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4393 = getelementptr inbounds %struct.GPR, %struct.GPR* %4392, i32 0, i32 15
  %4394 = getelementptr inbounds %struct.Reg, %struct.Reg* %4393, i32 0, i32 0
  %RBP.i774 = bitcast %union.anon* %4394 to i64*
  %4395 = load i64, i64* %RBP.i774
  %4396 = sub i64 %4395, 148
  %4397 = load i64, i64* %PC.i772
  %4398 = add i64 %4397, 6
  store i64 %4398, i64* %PC.i772
  %4399 = inttoptr i64 %4396 to i32*
  %4400 = load i32, i32* %4399
  %4401 = zext i32 %4400 to i64
  store i64 %4401, i64* %RDX.i773, align 8
  store %struct.Memory* %loadMem_403dec, %struct.Memory** %MEMORY
  %loadMem_403df2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4403 = getelementptr inbounds %struct.GPR, %struct.GPR* %4402, i32 0, i32 33
  %4404 = getelementptr inbounds %struct.Reg, %struct.Reg* %4403, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %4404 to i64*
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4406 = getelementptr inbounds %struct.GPR, %struct.GPR* %4405, i32 0, i32 7
  %4407 = getelementptr inbounds %struct.Reg, %struct.Reg* %4406, i32 0, i32 0
  %RDX.i771 = bitcast %union.anon* %4407 to i64*
  %4408 = load i64, i64* %RDX.i771
  %4409 = load i64, i64* %PC.i770
  %4410 = add i64 %4409, 3
  store i64 %4410, i64* %PC.i770
  %4411 = trunc i64 %4408 to i32
  %4412 = add i32 1, %4411
  %4413 = zext i32 %4412 to i64
  store i64 %4413, i64* %RDX.i771, align 8
  %4414 = icmp ult i32 %4412, %4411
  %4415 = icmp ult i32 %4412, 1
  %4416 = or i1 %4414, %4415
  %4417 = zext i1 %4416 to i8
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4417, i8* %4418, align 1
  %4419 = and i32 %4412, 255
  %4420 = call i32 @llvm.ctpop.i32(i32 %4419)
  %4421 = trunc i32 %4420 to i8
  %4422 = and i8 %4421, 1
  %4423 = xor i8 %4422, 1
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4423, i8* %4424, align 1
  %4425 = xor i64 1, %4408
  %4426 = trunc i64 %4425 to i32
  %4427 = xor i32 %4426, %4412
  %4428 = lshr i32 %4427, 4
  %4429 = trunc i32 %4428 to i8
  %4430 = and i8 %4429, 1
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4430, i8* %4431, align 1
  %4432 = icmp eq i32 %4412, 0
  %4433 = zext i1 %4432 to i8
  %4434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4433, i8* %4434, align 1
  %4435 = lshr i32 %4412, 31
  %4436 = trunc i32 %4435 to i8
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4436, i8* %4437, align 1
  %4438 = lshr i32 %4411, 31
  %4439 = xor i32 %4435, %4438
  %4440 = add i32 %4439, %4435
  %4441 = icmp eq i32 %4440, 2
  %4442 = zext i1 %4441 to i8
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4442, i8* %4443, align 1
  store %struct.Memory* %loadMem_403df2, %struct.Memory** %MEMORY
  %loadMem_403df5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4445 = getelementptr inbounds %struct.GPR, %struct.GPR* %4444, i32 0, i32 33
  %4446 = getelementptr inbounds %struct.Reg, %struct.Reg* %4445, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %4446 to i64*
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4448 = getelementptr inbounds %struct.GPR, %struct.GPR* %4447, i32 0, i32 7
  %4449 = getelementptr inbounds %struct.Reg, %struct.Reg* %4448, i32 0, i32 0
  %EDX.i768 = bitcast %union.anon* %4449 to i32*
  %4450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4451 = getelementptr inbounds %struct.GPR, %struct.GPR* %4450, i32 0, i32 9
  %4452 = getelementptr inbounds %struct.Reg, %struct.Reg* %4451, i32 0, i32 0
  %RSI.i769 = bitcast %union.anon* %4452 to i64*
  %4453 = load i32, i32* %EDX.i768
  %4454 = zext i32 %4453 to i64
  %4455 = load i64, i64* %PC.i767
  %4456 = add i64 %4455, 3
  store i64 %4456, i64* %PC.i767
  %4457 = shl i64 %4454, 32
  %4458 = ashr exact i64 %4457, 32
  store i64 %4458, i64* %RSI.i769, align 8
  store %struct.Memory* %loadMem_403df5, %struct.Memory** %MEMORY
  %loadMem_403df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4460 = getelementptr inbounds %struct.GPR, %struct.GPR* %4459, i32 0, i32 33
  %4461 = getelementptr inbounds %struct.Reg, %struct.Reg* %4460, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %4461 to i64*
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4463 = getelementptr inbounds %struct.GPR, %struct.GPR* %4462, i32 0, i32 9
  %4464 = getelementptr inbounds %struct.Reg, %struct.Reg* %4463, i32 0, i32 0
  %RSI.i766 = bitcast %union.anon* %4464 to i64*
  %4465 = load i64, i64* %RSI.i766
  %4466 = load i64, i64* %PC.i765
  %4467 = add i64 %4466, 4
  store i64 %4467, i64* %PC.i765
  %4468 = sext i64 %4465 to i128
  %4469 = and i128 %4468, -18446744073709551616
  %4470 = zext i64 %4465 to i128
  %4471 = or i128 %4469, %4470
  %4472 = mul i128 24, %4471
  %4473 = trunc i128 %4472 to i64
  store i64 %4473, i64* %RSI.i766, align 8
  %4474 = sext i64 %4473 to i128
  %4475 = icmp ne i128 %4474, %4472
  %4476 = zext i1 %4475 to i8
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4476, i8* %4477, align 1
  %4478 = trunc i128 %4472 to i32
  %4479 = and i32 %4478, 255
  %4480 = call i32 @llvm.ctpop.i32(i32 %4479)
  %4481 = trunc i32 %4480 to i8
  %4482 = and i8 %4481, 1
  %4483 = xor i8 %4482, 1
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4483, i8* %4484, align 1
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4485, align 1
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4486, align 1
  %4487 = lshr i64 %4473, 63
  %4488 = trunc i64 %4487 to i8
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4488, i8* %4489, align 1
  %4490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4476, i8* %4490, align 1
  store %struct.Memory* %loadMem_403df8, %struct.Memory** %MEMORY
  %loadMem_403dfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4492 = getelementptr inbounds %struct.GPR, %struct.GPR* %4491, i32 0, i32 33
  %4493 = getelementptr inbounds %struct.Reg, %struct.Reg* %4492, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %4493 to i64*
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4495 = getelementptr inbounds %struct.GPR, %struct.GPR* %4494, i32 0, i32 1
  %4496 = getelementptr inbounds %struct.Reg, %struct.Reg* %4495, i32 0, i32 0
  %RAX.i763 = bitcast %union.anon* %4496 to i64*
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4498 = getelementptr inbounds %struct.GPR, %struct.GPR* %4497, i32 0, i32 9
  %4499 = getelementptr inbounds %struct.Reg, %struct.Reg* %4498, i32 0, i32 0
  %RSI.i764 = bitcast %union.anon* %4499 to i64*
  %4500 = load i64, i64* %RAX.i763
  %4501 = load i64, i64* %RSI.i764
  %4502 = load i64, i64* %PC.i762
  %4503 = add i64 %4502, 3
  store i64 %4503, i64* %PC.i762
  %4504 = add i64 %4501, %4500
  store i64 %4504, i64* %RAX.i763, align 8
  %4505 = icmp ult i64 %4504, %4500
  %4506 = icmp ult i64 %4504, %4501
  %4507 = or i1 %4505, %4506
  %4508 = zext i1 %4507 to i8
  %4509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4508, i8* %4509, align 1
  %4510 = trunc i64 %4504 to i32
  %4511 = and i32 %4510, 255
  %4512 = call i32 @llvm.ctpop.i32(i32 %4511)
  %4513 = trunc i32 %4512 to i8
  %4514 = and i8 %4513, 1
  %4515 = xor i8 %4514, 1
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4515, i8* %4516, align 1
  %4517 = xor i64 %4501, %4500
  %4518 = xor i64 %4517, %4504
  %4519 = lshr i64 %4518, 4
  %4520 = trunc i64 %4519 to i8
  %4521 = and i8 %4520, 1
  %4522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4521, i8* %4522, align 1
  %4523 = icmp eq i64 %4504, 0
  %4524 = zext i1 %4523 to i8
  %4525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4524, i8* %4525, align 1
  %4526 = lshr i64 %4504, 63
  %4527 = trunc i64 %4526 to i8
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4527, i8* %4528, align 1
  %4529 = lshr i64 %4500, 63
  %4530 = lshr i64 %4501, 63
  %4531 = xor i64 %4526, %4529
  %4532 = xor i64 %4526, %4530
  %4533 = add i64 %4531, %4532
  %4534 = icmp eq i64 %4533, 2
  %4535 = zext i1 %4534 to i8
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4535, i8* %4536, align 1
  store %struct.Memory* %loadMem_403dfc, %struct.Memory** %MEMORY
  %loadMem_403dff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4538 = getelementptr inbounds %struct.GPR, %struct.GPR* %4537, i32 0, i32 33
  %4539 = getelementptr inbounds %struct.Reg, %struct.Reg* %4538, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %4539 to i64*
  %4540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4541 = getelementptr inbounds %struct.GPR, %struct.GPR* %4540, i32 0, i32 1
  %4542 = getelementptr inbounds %struct.Reg, %struct.Reg* %4541, i32 0, i32 0
  %RAX.i761 = bitcast %union.anon* %4542 to i64*
  %4543 = load i64, i64* %RAX.i761
  %4544 = add i64 %4543, 16
  %4545 = load i64, i64* %PC.i760
  %4546 = add i64 %4545, 4
  store i64 %4546, i64* %PC.i760
  %4547 = inttoptr i64 %4544 to i32*
  %4548 = load i32, i32* %4547
  %4549 = sext i32 %4548 to i64
  store i64 %4549, i64* %RAX.i761, align 8
  store %struct.Memory* %loadMem_403dff, %struct.Memory** %MEMORY
  %loadMem_403e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4551 = getelementptr inbounds %struct.GPR, %struct.GPR* %4550, i32 0, i32 33
  %4552 = getelementptr inbounds %struct.Reg, %struct.Reg* %4551, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %4552 to i64*
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4554 = getelementptr inbounds %struct.GPR, %struct.GPR* %4553, i32 0, i32 1
  %4555 = getelementptr inbounds %struct.Reg, %struct.Reg* %4554, i32 0, i32 0
  %RAX.i757 = bitcast %union.anon* %4555 to i64*
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4557 = getelementptr inbounds %struct.GPR, %struct.GPR* %4556, i32 0, i32 5
  %4558 = getelementptr inbounds %struct.Reg, %struct.Reg* %4557, i32 0, i32 0
  %RCX.i758 = bitcast %union.anon* %4558 to i64*
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4560 = getelementptr inbounds %struct.GPR, %struct.GPR* %4559, i32 0, i32 7
  %4561 = getelementptr inbounds %struct.Reg, %struct.Reg* %4560, i32 0, i32 0
  %RDX.i759 = bitcast %union.anon* %4561 to i64*
  %4562 = load i64, i64* %RCX.i758
  %4563 = load i64, i64* %RAX.i757
  %4564 = mul i64 %4563, 2
  %4565 = add i64 %4564, %4562
  %4566 = load i64, i64* %PC.i756
  %4567 = add i64 %4566, 4
  store i64 %4567, i64* %PC.i756
  %4568 = inttoptr i64 %4565 to i16*
  %4569 = load i16, i16* %4568
  %4570 = zext i16 %4569 to i64
  store i64 %4570, i64* %RDX.i759, align 8
  store %struct.Memory* %loadMem_403e03, %struct.Memory** %MEMORY
  %loadMem_403e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4572 = getelementptr inbounds %struct.GPR, %struct.GPR* %4571, i32 0, i32 33
  %4573 = getelementptr inbounds %struct.Reg, %struct.Reg* %4572, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %4573 to i64*
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4575 = getelementptr inbounds %struct.GPR, %struct.GPR* %4574, i32 0, i32 1
  %4576 = getelementptr inbounds %struct.Reg, %struct.Reg* %4575, i32 0, i32 0
  %RAX.i754 = bitcast %union.anon* %4576 to i64*
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 15
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %RBP.i755 = bitcast %union.anon* %4579 to i64*
  %4580 = load i64, i64* %RBP.i755
  %4581 = sub i64 %4580, 148
  %4582 = load i64, i64* %PC.i753
  %4583 = add i64 %4582, 7
  store i64 %4583, i64* %PC.i753
  %4584 = inttoptr i64 %4581 to i32*
  %4585 = load i32, i32* %4584
  %4586 = sext i32 %4585 to i64
  store i64 %4586, i64* %RAX.i754, align 8
  store %struct.Memory* %loadMem_403e07, %struct.Memory** %MEMORY
  %loadMem_403e0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4588 = getelementptr inbounds %struct.GPR, %struct.GPR* %4587, i32 0, i32 33
  %4589 = getelementptr inbounds %struct.Reg, %struct.Reg* %4588, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %4589 to i64*
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4591 = getelementptr inbounds %struct.GPR, %struct.GPR* %4590, i32 0, i32 7
  %4592 = getelementptr inbounds %struct.Reg, %struct.Reg* %4591, i32 0, i32 0
  %EDX.i750 = bitcast %union.anon* %4592 to i32*
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4594 = getelementptr inbounds %struct.GPR, %struct.GPR* %4593, i32 0, i32 1
  %4595 = getelementptr inbounds %struct.Reg, %struct.Reg* %4594, i32 0, i32 0
  %RAX.i751 = bitcast %union.anon* %4595 to i64*
  %4596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4597 = getelementptr inbounds %struct.GPR, %struct.GPR* %4596, i32 0, i32 15
  %4598 = getelementptr inbounds %struct.Reg, %struct.Reg* %4597, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %4598 to i64*
  %4599 = load i64, i64* %RBP.i752
  %4600 = load i64, i64* %RAX.i751
  %4601 = mul i64 %4600, 8
  %4602 = add i64 %4599, -140
  %4603 = add i64 %4602, %4601
  %4604 = load i32, i32* %EDX.i750
  %4605 = zext i32 %4604 to i64
  %4606 = load i64, i64* %PC.i749
  %4607 = add i64 %4606, 7
  store i64 %4607, i64* %PC.i749
  %4608 = inttoptr i64 %4603 to i32*
  store i32 %4604, i32* %4608
  store %struct.Memory* %loadMem_403e0e, %struct.Memory** %MEMORY
  br label %block_.L_403e15

block_.L_403e15:                                  ; preds = %block_403dc0, %block_.L_403db3
  %loadMem_403e15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4610 = getelementptr inbounds %struct.GPR, %struct.GPR* %4609, i32 0, i32 33
  %4611 = getelementptr inbounds %struct.Reg, %struct.Reg* %4610, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %4611 to i64*
  %4612 = load i64, i64* %PC.i748
  %4613 = add i64 %4612, 5
  %4614 = load i64, i64* %PC.i748
  %4615 = add i64 %4614, 5
  store i64 %4615, i64* %PC.i748
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4613, i64* %4616, align 8
  store %struct.Memory* %loadMem_403e15, %struct.Memory** %MEMORY
  br label %block_.L_403e1a

block_.L_403e1a:                                  ; preds = %block_.L_403e15
  %loadMem_403e1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4618 = getelementptr inbounds %struct.GPR, %struct.GPR* %4617, i32 0, i32 33
  %4619 = getelementptr inbounds %struct.Reg, %struct.Reg* %4618, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %4619 to i64*
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4621 = getelementptr inbounds %struct.GPR, %struct.GPR* %4620, i32 0, i32 1
  %4622 = getelementptr inbounds %struct.Reg, %struct.Reg* %4621, i32 0, i32 0
  %RAX.i746 = bitcast %union.anon* %4622 to i64*
  %4623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4624 = getelementptr inbounds %struct.GPR, %struct.GPR* %4623, i32 0, i32 15
  %4625 = getelementptr inbounds %struct.Reg, %struct.Reg* %4624, i32 0, i32 0
  %RBP.i747 = bitcast %union.anon* %4625 to i64*
  %4626 = load i64, i64* %RBP.i747
  %4627 = sub i64 %4626, 148
  %4628 = load i64, i64* %PC.i745
  %4629 = add i64 %4628, 6
  store i64 %4629, i64* %PC.i745
  %4630 = inttoptr i64 %4627 to i32*
  %4631 = load i32, i32* %4630
  %4632 = zext i32 %4631 to i64
  store i64 %4632, i64* %RAX.i746, align 8
  store %struct.Memory* %loadMem_403e1a, %struct.Memory** %MEMORY
  %loadMem_403e20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4634 = getelementptr inbounds %struct.GPR, %struct.GPR* %4633, i32 0, i32 33
  %4635 = getelementptr inbounds %struct.Reg, %struct.Reg* %4634, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %4635 to i64*
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4637 = getelementptr inbounds %struct.GPR, %struct.GPR* %4636, i32 0, i32 1
  %4638 = getelementptr inbounds %struct.Reg, %struct.Reg* %4637, i32 0, i32 0
  %RAX.i744 = bitcast %union.anon* %4638 to i64*
  %4639 = load i64, i64* %RAX.i744
  %4640 = load i64, i64* %PC.i743
  %4641 = add i64 %4640, 3
  store i64 %4641, i64* %PC.i743
  %4642 = trunc i64 %4639 to i32
  %4643 = add i32 1, %4642
  %4644 = zext i32 %4643 to i64
  store i64 %4644, i64* %RAX.i744, align 8
  %4645 = icmp ult i32 %4643, %4642
  %4646 = icmp ult i32 %4643, 1
  %4647 = or i1 %4645, %4646
  %4648 = zext i1 %4647 to i8
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4648, i8* %4649, align 1
  %4650 = and i32 %4643, 255
  %4651 = call i32 @llvm.ctpop.i32(i32 %4650)
  %4652 = trunc i32 %4651 to i8
  %4653 = and i8 %4652, 1
  %4654 = xor i8 %4653, 1
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4654, i8* %4655, align 1
  %4656 = xor i64 1, %4639
  %4657 = trunc i64 %4656 to i32
  %4658 = xor i32 %4657, %4643
  %4659 = lshr i32 %4658, 4
  %4660 = trunc i32 %4659 to i8
  %4661 = and i8 %4660, 1
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4661, i8* %4662, align 1
  %4663 = icmp eq i32 %4643, 0
  %4664 = zext i1 %4663 to i8
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4664, i8* %4665, align 1
  %4666 = lshr i32 %4643, 31
  %4667 = trunc i32 %4666 to i8
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4667, i8* %4668, align 1
  %4669 = lshr i32 %4642, 31
  %4670 = xor i32 %4666, %4669
  %4671 = add i32 %4670, %4666
  %4672 = icmp eq i32 %4671, 2
  %4673 = zext i1 %4672 to i8
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4673, i8* %4674, align 1
  store %struct.Memory* %loadMem_403e20, %struct.Memory** %MEMORY
  %loadMem_403e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4676 = getelementptr inbounds %struct.GPR, %struct.GPR* %4675, i32 0, i32 33
  %4677 = getelementptr inbounds %struct.Reg, %struct.Reg* %4676, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %4677 to i64*
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4679 = getelementptr inbounds %struct.GPR, %struct.GPR* %4678, i32 0, i32 1
  %4680 = getelementptr inbounds %struct.Reg, %struct.Reg* %4679, i32 0, i32 0
  %EAX.i741 = bitcast %union.anon* %4680 to i32*
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4682 = getelementptr inbounds %struct.GPR, %struct.GPR* %4681, i32 0, i32 15
  %4683 = getelementptr inbounds %struct.Reg, %struct.Reg* %4682, i32 0, i32 0
  %RBP.i742 = bitcast %union.anon* %4683 to i64*
  %4684 = load i64, i64* %RBP.i742
  %4685 = sub i64 %4684, 148
  %4686 = load i32, i32* %EAX.i741
  %4687 = zext i32 %4686 to i64
  %4688 = load i64, i64* %PC.i740
  %4689 = add i64 %4688, 6
  store i64 %4689, i64* %PC.i740
  %4690 = inttoptr i64 %4685 to i32*
  store i32 %4686, i32* %4690
  store %struct.Memory* %loadMem_403e23, %struct.Memory** %MEMORY
  %loadMem_403e29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4692 = getelementptr inbounds %struct.GPR, %struct.GPR* %4691, i32 0, i32 33
  %4693 = getelementptr inbounds %struct.Reg, %struct.Reg* %4692, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %4693 to i64*
  %4694 = load i64, i64* %PC.i739
  %4695 = add i64 %4694, -195
  %4696 = load i64, i64* %PC.i739
  %4697 = add i64 %4696, 5
  store i64 %4697, i64* %PC.i739
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4695, i64* %4698, align 8
  store %struct.Memory* %loadMem_403e29, %struct.Memory** %MEMORY
  br label %block_.L_403d66

block_.L_403e2e:                                  ; preds = %block_.L_403d66
  %loadMem_403e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 33
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %4701 to i64*
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4703 = getelementptr inbounds %struct.GPR, %struct.GPR* %4702, i32 0, i32 15
  %4704 = getelementptr inbounds %struct.Reg, %struct.Reg* %4703, i32 0, i32 0
  %RBP.i738 = bitcast %union.anon* %4704 to i64*
  %4705 = load i64, i64* %RBP.i738
  %4706 = sub i64 %4705, 152
  %4707 = load i64, i64* %PC.i737
  %4708 = add i64 %4707, 10
  store i64 %4708, i64* %PC.i737
  %4709 = inttoptr i64 %4706 to i32*
  store i32 0, i32* %4709
  store %struct.Memory* %loadMem_403e2e, %struct.Memory** %MEMORY
  br label %block_.L_403e38

block_.L_403e38:                                  ; preds = %block_.L_403f1e, %block_.L_403e2e
  %loadMem_403e38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4711 = getelementptr inbounds %struct.GPR, %struct.GPR* %4710, i32 0, i32 33
  %4712 = getelementptr inbounds %struct.Reg, %struct.Reg* %4711, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %4712 to i64*
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4714 = getelementptr inbounds %struct.GPR, %struct.GPR* %4713, i32 0, i32 15
  %4715 = getelementptr inbounds %struct.Reg, %struct.Reg* %4714, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %4715 to i64*
  %4716 = load i64, i64* %RBP.i736
  %4717 = sub i64 %4716, 152
  %4718 = load i64, i64* %PC.i735
  %4719 = add i64 %4718, 7
  store i64 %4719, i64* %PC.i735
  %4720 = inttoptr i64 %4717 to i32*
  %4721 = load i32, i32* %4720
  %4722 = sub i32 %4721, 16
  %4723 = icmp ult i32 %4721, 16
  %4724 = zext i1 %4723 to i8
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4724, i8* %4725, align 1
  %4726 = and i32 %4722, 255
  %4727 = call i32 @llvm.ctpop.i32(i32 %4726)
  %4728 = trunc i32 %4727 to i8
  %4729 = and i8 %4728, 1
  %4730 = xor i8 %4729, 1
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4730, i8* %4731, align 1
  %4732 = xor i32 %4721, 16
  %4733 = xor i32 %4732, %4722
  %4734 = lshr i32 %4733, 4
  %4735 = trunc i32 %4734 to i8
  %4736 = and i8 %4735, 1
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4736, i8* %4737, align 1
  %4738 = icmp eq i32 %4722, 0
  %4739 = zext i1 %4738 to i8
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4739, i8* %4740, align 1
  %4741 = lshr i32 %4722, 31
  %4742 = trunc i32 %4741 to i8
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4742, i8* %4743, align 1
  %4744 = lshr i32 %4721, 31
  %4745 = xor i32 %4741, %4744
  %4746 = add i32 %4745, %4744
  %4747 = icmp eq i32 %4746, 2
  %4748 = zext i1 %4747 to i8
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4748, i8* %4749, align 1
  store %struct.Memory* %loadMem_403e38, %struct.Memory** %MEMORY
  %loadMem_403e3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4751 = getelementptr inbounds %struct.GPR, %struct.GPR* %4750, i32 0, i32 33
  %4752 = getelementptr inbounds %struct.Reg, %struct.Reg* %4751, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %4752 to i64*
  %4753 = load i64, i64* %PC.i734
  %4754 = add i64 %4753, 243
  %4755 = load i64, i64* %PC.i734
  %4756 = add i64 %4755, 6
  %4757 = load i64, i64* %PC.i734
  %4758 = add i64 %4757, 6
  store i64 %4758, i64* %PC.i734
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4760 = load i8, i8* %4759, align 1
  %4761 = icmp ne i8 %4760, 0
  %4762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4763 = load i8, i8* %4762, align 1
  %4764 = icmp ne i8 %4763, 0
  %4765 = xor i1 %4761, %4764
  %4766 = xor i1 %4765, true
  %4767 = zext i1 %4766 to i8
  store i8 %4767, i8* %BRANCH_TAKEN, align 1
  %4768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4769 = select i1 %4765, i64 %4756, i64 %4754
  store i64 %4769, i64* %4768, align 8
  store %struct.Memory* %loadMem_403e3f, %struct.Memory** %MEMORY
  %loadBr_403e3f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403e3f = icmp eq i8 %loadBr_403e3f, 1
  br i1 %cmpBr_403e3f, label %block_.L_403f32, label %block_403e45

block_403e45:                                     ; preds = %block_.L_403e38
  %loadMem_403e45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4771 = getelementptr inbounds %struct.GPR, %struct.GPR* %4770, i32 0, i32 33
  %4772 = getelementptr inbounds %struct.Reg, %struct.Reg* %4771, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %4772 to i64*
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4774 = getelementptr inbounds %struct.GPR, %struct.GPR* %4773, i32 0, i32 15
  %4775 = getelementptr inbounds %struct.Reg, %struct.Reg* %4774, i32 0, i32 0
  %RBP.i733 = bitcast %union.anon* %4775 to i64*
  %4776 = load i64, i64* %RBP.i733
  %4777 = sub i64 %4776, 148
  %4778 = load i64, i64* %PC.i732
  %4779 = add i64 %4778, 10
  store i64 %4779, i64* %PC.i732
  %4780 = inttoptr i64 %4777 to i32*
  store i32 0, i32* %4780
  store %struct.Memory* %loadMem_403e45, %struct.Memory** %MEMORY
  br label %block_.L_403e4f

block_.L_403e4f:                                  ; preds = %block_403e5c, %block_403e45
  %loadMem_403e4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4782 = getelementptr inbounds %struct.GPR, %struct.GPR* %4781, i32 0, i32 33
  %4783 = getelementptr inbounds %struct.Reg, %struct.Reg* %4782, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %4783 to i64*
  %4784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4785 = getelementptr inbounds %struct.GPR, %struct.GPR* %4784, i32 0, i32 15
  %4786 = getelementptr inbounds %struct.Reg, %struct.Reg* %4785, i32 0, i32 0
  %RBP.i731 = bitcast %union.anon* %4786 to i64*
  %4787 = load i64, i64* %RBP.i731
  %4788 = sub i64 %4787, 148
  %4789 = load i64, i64* %PC.i730
  %4790 = add i64 %4789, 7
  store i64 %4790, i64* %PC.i730
  %4791 = inttoptr i64 %4788 to i32*
  %4792 = load i32, i32* %4791
  %4793 = sub i32 %4792, 16
  %4794 = icmp ult i32 %4792, 16
  %4795 = zext i1 %4794 to i8
  %4796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4795, i8* %4796, align 1
  %4797 = and i32 %4793, 255
  %4798 = call i32 @llvm.ctpop.i32(i32 %4797)
  %4799 = trunc i32 %4798 to i8
  %4800 = and i8 %4799, 1
  %4801 = xor i8 %4800, 1
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4801, i8* %4802, align 1
  %4803 = xor i32 %4792, 16
  %4804 = xor i32 %4803, %4793
  %4805 = lshr i32 %4804, 4
  %4806 = trunc i32 %4805 to i8
  %4807 = and i8 %4806, 1
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4807, i8* %4808, align 1
  %4809 = icmp eq i32 %4793, 0
  %4810 = zext i1 %4809 to i8
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4810, i8* %4811, align 1
  %4812 = lshr i32 %4793, 31
  %4813 = trunc i32 %4812 to i8
  %4814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4813, i8* %4814, align 1
  %4815 = lshr i32 %4792, 31
  %4816 = xor i32 %4812, %4815
  %4817 = add i32 %4816, %4815
  %4818 = icmp eq i32 %4817, 2
  %4819 = zext i1 %4818 to i8
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4819, i8* %4820, align 1
  store %struct.Memory* %loadMem_403e4f, %struct.Memory** %MEMORY
  %loadMem_403e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4822 = getelementptr inbounds %struct.GPR, %struct.GPR* %4821, i32 0, i32 33
  %4823 = getelementptr inbounds %struct.Reg, %struct.Reg* %4822, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %4823 to i64*
  %4824 = load i64, i64* %PC.i729
  %4825 = add i64 %4824, 195
  %4826 = load i64, i64* %PC.i729
  %4827 = add i64 %4826, 6
  %4828 = load i64, i64* %PC.i729
  %4829 = add i64 %4828, 6
  store i64 %4829, i64* %PC.i729
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4831 = load i8, i8* %4830, align 1
  %4832 = icmp ne i8 %4831, 0
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4834 = load i8, i8* %4833, align 1
  %4835 = icmp ne i8 %4834, 0
  %4836 = xor i1 %4832, %4835
  %4837 = xor i1 %4836, true
  %4838 = zext i1 %4837 to i8
  store i8 %4838, i8* %BRANCH_TAKEN, align 1
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4840 = select i1 %4836, i64 %4827, i64 %4825
  store i64 %4840, i64* %4839, align 8
  store %struct.Memory* %loadMem_403e56, %struct.Memory** %MEMORY
  %loadBr_403e56 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403e56 = icmp eq i8 %loadBr_403e56, 1
  br i1 %cmpBr_403e56, label %block_.L_403f19, label %block_403e5c

block_403e5c:                                     ; preds = %block_.L_403e4f
  %loadMem_403e5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4842 = getelementptr inbounds %struct.GPR, %struct.GPR* %4841, i32 0, i32 33
  %4843 = getelementptr inbounds %struct.Reg, %struct.Reg* %4842, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %4843 to i64*
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4845 = getelementptr inbounds %struct.GPR, %struct.GPR* %4844, i32 0, i32 1
  %4846 = getelementptr inbounds %struct.Reg, %struct.Reg* %4845, i32 0, i32 0
  %RAX.i727 = bitcast %union.anon* %4846 to i64*
  %4847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4848 = getelementptr inbounds %struct.GPR, %struct.GPR* %4847, i32 0, i32 15
  %4849 = getelementptr inbounds %struct.Reg, %struct.Reg* %4848, i32 0, i32 0
  %RBP.i728 = bitcast %union.anon* %4849 to i64*
  %4850 = load i64, i64* %RBP.i728
  %4851 = sub i64 %4850, 148
  %4852 = load i64, i64* %PC.i726
  %4853 = add i64 %4852, 7
  store i64 %4853, i64* %PC.i726
  %4854 = inttoptr i64 %4851 to i32*
  %4855 = load i32, i32* %4854
  %4856 = sext i32 %4855 to i64
  store i64 %4856, i64* %RAX.i727, align 8
  store %struct.Memory* %loadMem_403e5c, %struct.Memory** %MEMORY
  %loadMem_403e63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4858 = getelementptr inbounds %struct.GPR, %struct.GPR* %4857, i32 0, i32 33
  %4859 = getelementptr inbounds %struct.Reg, %struct.Reg* %4858, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %4859 to i64*
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4861 = getelementptr inbounds %struct.GPR, %struct.GPR* %4860, i32 0, i32 1
  %4862 = getelementptr inbounds %struct.Reg, %struct.Reg* %4861, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %4862 to i64*
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4864 = getelementptr inbounds %struct.GPR, %struct.GPR* %4863, i32 0, i32 5
  %4865 = getelementptr inbounds %struct.Reg, %struct.Reg* %4864, i32 0, i32 0
  %RCX.i724 = bitcast %union.anon* %4865 to i64*
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4867 = getelementptr inbounds %struct.GPR, %struct.GPR* %4866, i32 0, i32 15
  %4868 = getelementptr inbounds %struct.Reg, %struct.Reg* %4867, i32 0, i32 0
  %RBP.i725 = bitcast %union.anon* %4868 to i64*
  %4869 = load i64, i64* %RBP.i725
  %4870 = load i64, i64* %RAX.i723
  %4871 = mul i64 %4870, 8
  %4872 = add i64 %4869, -144
  %4873 = add i64 %4872, %4871
  %4874 = load i64, i64* %PC.i722
  %4875 = add i64 %4874, 7
  store i64 %4875, i64* %PC.i722
  %4876 = inttoptr i64 %4873 to i32*
  %4877 = load i32, i32* %4876
  %4878 = zext i32 %4877 to i64
  store i64 %4878, i64* %RCX.i724, align 8
  store %struct.Memory* %loadMem_403e63, %struct.Memory** %MEMORY
  %loadMem_403e6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4880 = getelementptr inbounds %struct.GPR, %struct.GPR* %4879, i32 0, i32 33
  %4881 = getelementptr inbounds %struct.Reg, %struct.Reg* %4880, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %4881 to i64*
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4883 = getelementptr inbounds %struct.GPR, %struct.GPR* %4882, i32 0, i32 5
  %4884 = getelementptr inbounds %struct.Reg, %struct.Reg* %4883, i32 0, i32 0
  %CX.i720 = bitcast %union.anon* %4884 to i16*
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4886 = getelementptr inbounds %struct.GPR, %struct.GPR* %4885, i32 0, i32 7
  %4887 = getelementptr inbounds %struct.Reg, %struct.Reg* %4886, i32 0, i32 0
  %DX.i721 = bitcast %union.anon* %4887 to i16*
  %4888 = load i16, i16* %CX.i720
  %4889 = zext i16 %4888 to i64
  %4890 = load i64, i64* %PC.i719
  %4891 = add i64 %4890, 3
  store i64 %4891, i64* %PC.i719
  store i16 %4888, i16* %DX.i721, align 2
  store %struct.Memory* %loadMem_403e6a, %struct.Memory** %MEMORY
  %loadMem_403e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4893 = getelementptr inbounds %struct.GPR, %struct.GPR* %4892, i32 0, i32 33
  %4894 = getelementptr inbounds %struct.Reg, %struct.Reg* %4893, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %4894 to i64*
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4896 = getelementptr inbounds %struct.GPR, %struct.GPR* %4895, i32 0, i32 1
  %4897 = getelementptr inbounds %struct.Reg, %struct.Reg* %4896, i32 0, i32 0
  %RAX.i718 = bitcast %union.anon* %4897 to i64*
  %4898 = load i64, i64* %PC.i717
  %4899 = add i64 %4898, 8
  store i64 %4899, i64* %PC.i717
  %4900 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4900, i64* %RAX.i718, align 8
  store %struct.Memory* %loadMem_403e6d, %struct.Memory** %MEMORY
  %loadMem_403e75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4902 = getelementptr inbounds %struct.GPR, %struct.GPR* %4901, i32 0, i32 33
  %4903 = getelementptr inbounds %struct.Reg, %struct.Reg* %4902, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %4903 to i64*
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4905 = getelementptr inbounds %struct.GPR, %struct.GPR* %4904, i32 0, i32 1
  %4906 = getelementptr inbounds %struct.Reg, %struct.Reg* %4905, i32 0, i32 0
  %RAX.i716 = bitcast %union.anon* %4906 to i64*
  %4907 = load i64, i64* %RAX.i716
  %4908 = load i64, i64* %PC.i715
  %4909 = add i64 %4908, 6
  store i64 %4909, i64* %PC.i715
  %4910 = add i64 4792, %4907
  store i64 %4910, i64* %RAX.i716, align 8
  %4911 = icmp ult i64 %4910, %4907
  %4912 = icmp ult i64 %4910, 4792
  %4913 = or i1 %4911, %4912
  %4914 = zext i1 %4913 to i8
  %4915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4914, i8* %4915, align 1
  %4916 = trunc i64 %4910 to i32
  %4917 = and i32 %4916, 255
  %4918 = call i32 @llvm.ctpop.i32(i32 %4917)
  %4919 = trunc i32 %4918 to i8
  %4920 = and i8 %4919, 1
  %4921 = xor i8 %4920, 1
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4921, i8* %4922, align 1
  %4923 = xor i64 4792, %4907
  %4924 = xor i64 %4923, %4910
  %4925 = lshr i64 %4924, 4
  %4926 = trunc i64 %4925 to i8
  %4927 = and i8 %4926, 1
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4927, i8* %4928, align 1
  %4929 = icmp eq i64 %4910, 0
  %4930 = zext i1 %4929 to i8
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4930, i8* %4931, align 1
  %4932 = lshr i64 %4910, 63
  %4933 = trunc i64 %4932 to i8
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4933, i8* %4934, align 1
  %4935 = lshr i64 %4907, 63
  %4936 = xor i64 %4932, %4935
  %4937 = add i64 %4936, %4932
  %4938 = icmp eq i64 %4937, 2
  %4939 = zext i1 %4938 to i8
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4939, i8* %4940, align 1
  store %struct.Memory* %loadMem_403e75, %struct.Memory** %MEMORY
  %loadMem_403e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4942 = getelementptr inbounds %struct.GPR, %struct.GPR* %4941, i32 0, i32 33
  %4943 = getelementptr inbounds %struct.Reg, %struct.Reg* %4942, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %4943 to i64*
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4945 = getelementptr inbounds %struct.GPR, %struct.GPR* %4944, i32 0, i32 9
  %4946 = getelementptr inbounds %struct.Reg, %struct.Reg* %4945, i32 0, i32 0
  %RSI.i713 = bitcast %union.anon* %4946 to i64*
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4948 = getelementptr inbounds %struct.GPR, %struct.GPR* %4947, i32 0, i32 15
  %4949 = getelementptr inbounds %struct.Reg, %struct.Reg* %4948, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %4949 to i64*
  %4950 = load i64, i64* %RBP.i714
  %4951 = sub i64 %4950, 152
  %4952 = load i64, i64* %PC.i712
  %4953 = add i64 %4952, 7
  store i64 %4953, i64* %PC.i712
  %4954 = inttoptr i64 %4951 to i32*
  %4955 = load i32, i32* %4954
  %4956 = sext i32 %4955 to i64
  store i64 %4956, i64* %RSI.i713, align 8
  store %struct.Memory* %loadMem_403e7b, %struct.Memory** %MEMORY
  %loadMem_403e82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4958 = getelementptr inbounds %struct.GPR, %struct.GPR* %4957, i32 0, i32 33
  %4959 = getelementptr inbounds %struct.Reg, %struct.Reg* %4958, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %4959 to i64*
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 9
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %RSI.i711 = bitcast %union.anon* %4962 to i64*
  %4963 = load i64, i64* %RSI.i711
  %4964 = load i64, i64* %PC.i710
  %4965 = add i64 %4964, 4
  store i64 %4965, i64* %PC.i710
  %4966 = shl i64 %4963, 4
  %4967 = icmp slt i64 %4966, 0
  %4968 = shl i64 %4966, 1
  store i64 %4968, i64* %RSI.i711, align 8
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4970 = zext i1 %4967 to i8
  store i8 %4970, i8* %4969, align 1
  %4971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4972 = trunc i64 %4968 to i32
  %4973 = and i32 %4972, 254
  %4974 = call i32 @llvm.ctpop.i32(i32 %4973)
  %4975 = trunc i32 %4974 to i8
  %4976 = and i8 %4975, 1
  %4977 = xor i8 %4976, 1
  store i8 %4977, i8* %4971, align 1
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4978, align 1
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4980 = icmp eq i64 %4968, 0
  %4981 = zext i1 %4980 to i8
  store i8 %4981, i8* %4979, align 1
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4983 = lshr i64 %4968, 63
  %4984 = trunc i64 %4983 to i8
  store i8 %4984, i8* %4982, align 1
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4985, align 1
  store %struct.Memory* %loadMem_403e82, %struct.Memory** %MEMORY
  %loadMem_403e86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4987 = getelementptr inbounds %struct.GPR, %struct.GPR* %4986, i32 0, i32 33
  %4988 = getelementptr inbounds %struct.Reg, %struct.Reg* %4987, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %4988 to i64*
  %4989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4990 = getelementptr inbounds %struct.GPR, %struct.GPR* %4989, i32 0, i32 1
  %4991 = getelementptr inbounds %struct.Reg, %struct.Reg* %4990, i32 0, i32 0
  %RAX.i708 = bitcast %union.anon* %4991 to i64*
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4993 = getelementptr inbounds %struct.GPR, %struct.GPR* %4992, i32 0, i32 9
  %4994 = getelementptr inbounds %struct.Reg, %struct.Reg* %4993, i32 0, i32 0
  %RSI.i709 = bitcast %union.anon* %4994 to i64*
  %4995 = load i64, i64* %RAX.i708
  %4996 = load i64, i64* %RSI.i709
  %4997 = load i64, i64* %PC.i707
  %4998 = add i64 %4997, 3
  store i64 %4998, i64* %PC.i707
  %4999 = add i64 %4996, %4995
  store i64 %4999, i64* %RAX.i708, align 8
  %5000 = icmp ult i64 %4999, %4995
  %5001 = icmp ult i64 %4999, %4996
  %5002 = or i1 %5000, %5001
  %5003 = zext i1 %5002 to i8
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5003, i8* %5004, align 1
  %5005 = trunc i64 %4999 to i32
  %5006 = and i32 %5005, 255
  %5007 = call i32 @llvm.ctpop.i32(i32 %5006)
  %5008 = trunc i32 %5007 to i8
  %5009 = and i8 %5008, 1
  %5010 = xor i8 %5009, 1
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5010, i8* %5011, align 1
  %5012 = xor i64 %4996, %4995
  %5013 = xor i64 %5012, %4999
  %5014 = lshr i64 %5013, 4
  %5015 = trunc i64 %5014 to i8
  %5016 = and i8 %5015, 1
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5016, i8* %5017, align 1
  %5018 = icmp eq i64 %4999, 0
  %5019 = zext i1 %5018 to i8
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5019, i8* %5020, align 1
  %5021 = lshr i64 %4999, 63
  %5022 = trunc i64 %5021 to i8
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5022, i8* %5023, align 1
  %5024 = lshr i64 %4995, 63
  %5025 = lshr i64 %4996, 63
  %5026 = xor i64 %5021, %5024
  %5027 = xor i64 %5021, %5025
  %5028 = add i64 %5026, %5027
  %5029 = icmp eq i64 %5028, 2
  %5030 = zext i1 %5029 to i8
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5030, i8* %5031, align 1
  store %struct.Memory* %loadMem_403e86, %struct.Memory** %MEMORY
  %loadMem_403e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5033 = getelementptr inbounds %struct.GPR, %struct.GPR* %5032, i32 0, i32 33
  %5034 = getelementptr inbounds %struct.Reg, %struct.Reg* %5033, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %5034 to i64*
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5036 = getelementptr inbounds %struct.GPR, %struct.GPR* %5035, i32 0, i32 9
  %5037 = getelementptr inbounds %struct.Reg, %struct.Reg* %5036, i32 0, i32 0
  %RSI.i705 = bitcast %union.anon* %5037 to i64*
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5039 = getelementptr inbounds %struct.GPR, %struct.GPR* %5038, i32 0, i32 15
  %5040 = getelementptr inbounds %struct.Reg, %struct.Reg* %5039, i32 0, i32 0
  %RBP.i706 = bitcast %union.anon* %5040 to i64*
  %5041 = load i64, i64* %RBP.i706
  %5042 = sub i64 %5041, 148
  %5043 = load i64, i64* %PC.i704
  %5044 = add i64 %5043, 7
  store i64 %5044, i64* %PC.i704
  %5045 = inttoptr i64 %5042 to i32*
  %5046 = load i32, i32* %5045
  %5047 = sext i32 %5046 to i64
  store i64 %5047, i64* %RSI.i705, align 8
  store %struct.Memory* %loadMem_403e89, %struct.Memory** %MEMORY
  %loadMem_403e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5049 = getelementptr inbounds %struct.GPR, %struct.GPR* %5048, i32 0, i32 33
  %5050 = getelementptr inbounds %struct.Reg, %struct.Reg* %5049, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %5050 to i64*
  %5051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5052 = getelementptr inbounds %struct.GPR, %struct.GPR* %5051, i32 0, i32 7
  %5053 = getelementptr inbounds %struct.Reg, %struct.Reg* %5052, i32 0, i32 0
  %DX.i701 = bitcast %union.anon* %5053 to i16*
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5055 = getelementptr inbounds %struct.GPR, %struct.GPR* %5054, i32 0, i32 1
  %5056 = getelementptr inbounds %struct.Reg, %struct.Reg* %5055, i32 0, i32 0
  %RAX.i702 = bitcast %union.anon* %5056 to i64*
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5058 = getelementptr inbounds %struct.GPR, %struct.GPR* %5057, i32 0, i32 9
  %5059 = getelementptr inbounds %struct.Reg, %struct.Reg* %5058, i32 0, i32 0
  %RSI.i703 = bitcast %union.anon* %5059 to i64*
  %5060 = load i64, i64* %RAX.i702
  %5061 = load i64, i64* %RSI.i703
  %5062 = mul i64 %5061, 2
  %5063 = add i64 %5062, %5060
  %5064 = load i16, i16* %DX.i701
  %5065 = zext i16 %5064 to i64
  %5066 = load i64, i64* %PC.i700
  %5067 = add i64 %5066, 4
  store i64 %5067, i64* %PC.i700
  %5068 = inttoptr i64 %5063 to i16*
  store i16 %5064, i16* %5068
  store %struct.Memory* %loadMem_403e90, %struct.Memory** %MEMORY
  %loadMem_403e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5070 = getelementptr inbounds %struct.GPR, %struct.GPR* %5069, i32 0, i32 33
  %5071 = getelementptr inbounds %struct.Reg, %struct.Reg* %5070, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %5071 to i64*
  %5072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5073 = getelementptr inbounds %struct.GPR, %struct.GPR* %5072, i32 0, i32 1
  %5074 = getelementptr inbounds %struct.Reg, %struct.Reg* %5073, i32 0, i32 0
  %RAX.i698 = bitcast %union.anon* %5074 to i64*
  %5075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5076 = getelementptr inbounds %struct.GPR, %struct.GPR* %5075, i32 0, i32 15
  %5077 = getelementptr inbounds %struct.Reg, %struct.Reg* %5076, i32 0, i32 0
  %RBP.i699 = bitcast %union.anon* %5077 to i64*
  %5078 = load i64, i64* %RBP.i699
  %5079 = sub i64 %5078, 152
  %5080 = load i64, i64* %PC.i697
  %5081 = add i64 %5080, 7
  store i64 %5081, i64* %PC.i697
  %5082 = inttoptr i64 %5079 to i32*
  %5083 = load i32, i32* %5082
  %5084 = sext i32 %5083 to i64
  store i64 %5084, i64* %RAX.i698, align 8
  store %struct.Memory* %loadMem_403e94, %struct.Memory** %MEMORY
  %loadMem_403e9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5086 = getelementptr inbounds %struct.GPR, %struct.GPR* %5085, i32 0, i32 33
  %5087 = getelementptr inbounds %struct.Reg, %struct.Reg* %5086, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %5087 to i64*
  %5088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5089 = getelementptr inbounds %struct.GPR, %struct.GPR* %5088, i32 0, i32 1
  %5090 = getelementptr inbounds %struct.Reg, %struct.Reg* %5089, i32 0, i32 0
  %RAX.i694 = bitcast %union.anon* %5090 to i64*
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5092 = getelementptr inbounds %struct.GPR, %struct.GPR* %5091, i32 0, i32 5
  %5093 = getelementptr inbounds %struct.Reg, %struct.Reg* %5092, i32 0, i32 0
  %RCX.i695 = bitcast %union.anon* %5093 to i64*
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5095 = getelementptr inbounds %struct.GPR, %struct.GPR* %5094, i32 0, i32 15
  %5096 = getelementptr inbounds %struct.Reg, %struct.Reg* %5095, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %5096 to i64*
  %5097 = load i64, i64* %RBP.i696
  %5098 = load i64, i64* %RAX.i694
  %5099 = mul i64 %5098, 8
  %5100 = add i64 %5097, -140
  %5101 = add i64 %5100, %5099
  %5102 = load i64, i64* %PC.i693
  %5103 = add i64 %5102, 7
  store i64 %5103, i64* %PC.i693
  %5104 = inttoptr i64 %5101 to i32*
  %5105 = load i32, i32* %5104
  %5106 = zext i32 %5105 to i64
  store i64 %5106, i64* %RCX.i695, align 8
  store %struct.Memory* %loadMem_403e9b, %struct.Memory** %MEMORY
  %loadMem_403ea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5108 = getelementptr inbounds %struct.GPR, %struct.GPR* %5107, i32 0, i32 33
  %5109 = getelementptr inbounds %struct.Reg, %struct.Reg* %5108, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %5109 to i64*
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5111 = getelementptr inbounds %struct.GPR, %struct.GPR* %5110, i32 0, i32 5
  %5112 = getelementptr inbounds %struct.Reg, %struct.Reg* %5111, i32 0, i32 0
  %CX.i691 = bitcast %union.anon* %5112 to i16*
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5114 = getelementptr inbounds %struct.GPR, %struct.GPR* %5113, i32 0, i32 7
  %5115 = getelementptr inbounds %struct.Reg, %struct.Reg* %5114, i32 0, i32 0
  %DX.i692 = bitcast %union.anon* %5115 to i16*
  %5116 = load i16, i16* %CX.i691
  %5117 = zext i16 %5116 to i64
  %5118 = load i64, i64* %PC.i690
  %5119 = add i64 %5118, 3
  store i64 %5119, i64* %PC.i690
  store i16 %5116, i16* %DX.i692, align 2
  store %struct.Memory* %loadMem_403ea2, %struct.Memory** %MEMORY
  %loadMem_403ea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5121 = getelementptr inbounds %struct.GPR, %struct.GPR* %5120, i32 0, i32 33
  %5122 = getelementptr inbounds %struct.Reg, %struct.Reg* %5121, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %5122 to i64*
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5124 = getelementptr inbounds %struct.GPR, %struct.GPR* %5123, i32 0, i32 1
  %5125 = getelementptr inbounds %struct.Reg, %struct.Reg* %5124, i32 0, i32 0
  %RAX.i689 = bitcast %union.anon* %5125 to i64*
  %5126 = load i64, i64* %PC.i688
  %5127 = add i64 %5126, 8
  store i64 %5127, i64* %PC.i688
  %5128 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5128, i64* %RAX.i689, align 8
  store %struct.Memory* %loadMem_403ea5, %struct.Memory** %MEMORY
  %loadMem_403ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %5129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5130 = getelementptr inbounds %struct.GPR, %struct.GPR* %5129, i32 0, i32 33
  %5131 = getelementptr inbounds %struct.Reg, %struct.Reg* %5130, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %5131 to i64*
  %5132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5133 = getelementptr inbounds %struct.GPR, %struct.GPR* %5132, i32 0, i32 1
  %5134 = getelementptr inbounds %struct.Reg, %struct.Reg* %5133, i32 0, i32 0
  %RAX.i687 = bitcast %union.anon* %5134 to i64*
  %5135 = load i64, i64* %RAX.i687
  %5136 = load i64, i64* %PC.i686
  %5137 = add i64 %5136, 6
  store i64 %5137, i64* %PC.i686
  %5138 = add i64 4792, %5135
  store i64 %5138, i64* %RAX.i687, align 8
  %5139 = icmp ult i64 %5138, %5135
  %5140 = icmp ult i64 %5138, 4792
  %5141 = or i1 %5139, %5140
  %5142 = zext i1 %5141 to i8
  %5143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5142, i8* %5143, align 1
  %5144 = trunc i64 %5138 to i32
  %5145 = and i32 %5144, 255
  %5146 = call i32 @llvm.ctpop.i32(i32 %5145)
  %5147 = trunc i32 %5146 to i8
  %5148 = and i8 %5147, 1
  %5149 = xor i8 %5148, 1
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5149, i8* %5150, align 1
  %5151 = xor i64 4792, %5135
  %5152 = xor i64 %5151, %5138
  %5153 = lshr i64 %5152, 4
  %5154 = trunc i64 %5153 to i8
  %5155 = and i8 %5154, 1
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5155, i8* %5156, align 1
  %5157 = icmp eq i64 %5138, 0
  %5158 = zext i1 %5157 to i8
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5158, i8* %5159, align 1
  %5160 = lshr i64 %5138, 63
  %5161 = trunc i64 %5160 to i8
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5161, i8* %5162, align 1
  %5163 = lshr i64 %5135, 63
  %5164 = xor i64 %5160, %5163
  %5165 = add i64 %5164, %5160
  %5166 = icmp eq i64 %5165, 2
  %5167 = zext i1 %5166 to i8
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5167, i8* %5168, align 1
  store %struct.Memory* %loadMem_403ead, %struct.Memory** %MEMORY
  %loadMem_403eb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5170 = getelementptr inbounds %struct.GPR, %struct.GPR* %5169, i32 0, i32 33
  %5171 = getelementptr inbounds %struct.Reg, %struct.Reg* %5170, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %5171 to i64*
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5173 = getelementptr inbounds %struct.GPR, %struct.GPR* %5172, i32 0, i32 1
  %5174 = getelementptr inbounds %struct.Reg, %struct.Reg* %5173, i32 0, i32 0
  %RAX.i685 = bitcast %union.anon* %5174 to i64*
  %5175 = load i64, i64* %RAX.i685
  %5176 = load i64, i64* %PC.i684
  %5177 = add i64 %5176, 6
  store i64 %5177, i64* %PC.i684
  %5178 = add i64 512, %5175
  store i64 %5178, i64* %RAX.i685, align 8
  %5179 = icmp ult i64 %5178, %5175
  %5180 = icmp ult i64 %5178, 512
  %5181 = or i1 %5179, %5180
  %5182 = zext i1 %5181 to i8
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5182, i8* %5183, align 1
  %5184 = trunc i64 %5178 to i32
  %5185 = and i32 %5184, 255
  %5186 = call i32 @llvm.ctpop.i32(i32 %5185)
  %5187 = trunc i32 %5186 to i8
  %5188 = and i8 %5187, 1
  %5189 = xor i8 %5188, 1
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5189, i8* %5190, align 1
  %5191 = xor i64 512, %5175
  %5192 = xor i64 %5191, %5178
  %5193 = lshr i64 %5192, 4
  %5194 = trunc i64 %5193 to i8
  %5195 = and i8 %5194, 1
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5195, i8* %5196, align 1
  %5197 = icmp eq i64 %5178, 0
  %5198 = zext i1 %5197 to i8
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5198, i8* %5199, align 1
  %5200 = lshr i64 %5178, 63
  %5201 = trunc i64 %5200 to i8
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5201, i8* %5202, align 1
  %5203 = lshr i64 %5175, 63
  %5204 = xor i64 %5200, %5203
  %5205 = add i64 %5204, %5200
  %5206 = icmp eq i64 %5205, 2
  %5207 = zext i1 %5206 to i8
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5207, i8* %5208, align 1
  store %struct.Memory* %loadMem_403eb3, %struct.Memory** %MEMORY
  %loadMem_403eb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5210 = getelementptr inbounds %struct.GPR, %struct.GPR* %5209, i32 0, i32 33
  %5211 = getelementptr inbounds %struct.Reg, %struct.Reg* %5210, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %5211 to i64*
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5213 = getelementptr inbounds %struct.GPR, %struct.GPR* %5212, i32 0, i32 9
  %5214 = getelementptr inbounds %struct.Reg, %struct.Reg* %5213, i32 0, i32 0
  %RSI.i682 = bitcast %union.anon* %5214 to i64*
  %5215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5216 = getelementptr inbounds %struct.GPR, %struct.GPR* %5215, i32 0, i32 15
  %5217 = getelementptr inbounds %struct.Reg, %struct.Reg* %5216, i32 0, i32 0
  %RBP.i683 = bitcast %union.anon* %5217 to i64*
  %5218 = load i64, i64* %RBP.i683
  %5219 = sub i64 %5218, 152
  %5220 = load i64, i64* %PC.i681
  %5221 = add i64 %5220, 7
  store i64 %5221, i64* %PC.i681
  %5222 = inttoptr i64 %5219 to i32*
  %5223 = load i32, i32* %5222
  %5224 = sext i32 %5223 to i64
  store i64 %5224, i64* %RSI.i682, align 8
  store %struct.Memory* %loadMem_403eb9, %struct.Memory** %MEMORY
  %loadMem_403ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5226 = getelementptr inbounds %struct.GPR, %struct.GPR* %5225, i32 0, i32 33
  %5227 = getelementptr inbounds %struct.Reg, %struct.Reg* %5226, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %5227 to i64*
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5229 = getelementptr inbounds %struct.GPR, %struct.GPR* %5228, i32 0, i32 9
  %5230 = getelementptr inbounds %struct.Reg, %struct.Reg* %5229, i32 0, i32 0
  %RSI.i680 = bitcast %union.anon* %5230 to i64*
  %5231 = load i64, i64* %RSI.i680
  %5232 = load i64, i64* %PC.i679
  %5233 = add i64 %5232, 4
  store i64 %5233, i64* %PC.i679
  %5234 = shl i64 %5231, 4
  %5235 = icmp slt i64 %5234, 0
  %5236 = shl i64 %5234, 1
  store i64 %5236, i64* %RSI.i680, align 8
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5238 = zext i1 %5235 to i8
  store i8 %5238, i8* %5237, align 1
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5240 = trunc i64 %5236 to i32
  %5241 = and i32 %5240, 254
  %5242 = call i32 @llvm.ctpop.i32(i32 %5241)
  %5243 = trunc i32 %5242 to i8
  %5244 = and i8 %5243, 1
  %5245 = xor i8 %5244, 1
  store i8 %5245, i8* %5239, align 1
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5246, align 1
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5248 = icmp eq i64 %5236, 0
  %5249 = zext i1 %5248 to i8
  store i8 %5249, i8* %5247, align 1
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5251 = lshr i64 %5236, 63
  %5252 = trunc i64 %5251 to i8
  store i8 %5252, i8* %5250, align 1
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5253, align 1
  store %struct.Memory* %loadMem_403ec0, %struct.Memory** %MEMORY
  %loadMem_403ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5255 = getelementptr inbounds %struct.GPR, %struct.GPR* %5254, i32 0, i32 33
  %5256 = getelementptr inbounds %struct.Reg, %struct.Reg* %5255, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %5256 to i64*
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5258 = getelementptr inbounds %struct.GPR, %struct.GPR* %5257, i32 0, i32 1
  %5259 = getelementptr inbounds %struct.Reg, %struct.Reg* %5258, i32 0, i32 0
  %RAX.i677 = bitcast %union.anon* %5259 to i64*
  %5260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5261 = getelementptr inbounds %struct.GPR, %struct.GPR* %5260, i32 0, i32 9
  %5262 = getelementptr inbounds %struct.Reg, %struct.Reg* %5261, i32 0, i32 0
  %RSI.i678 = bitcast %union.anon* %5262 to i64*
  %5263 = load i64, i64* %RAX.i677
  %5264 = load i64, i64* %RSI.i678
  %5265 = load i64, i64* %PC.i676
  %5266 = add i64 %5265, 3
  store i64 %5266, i64* %PC.i676
  %5267 = add i64 %5264, %5263
  store i64 %5267, i64* %RAX.i677, align 8
  %5268 = icmp ult i64 %5267, %5263
  %5269 = icmp ult i64 %5267, %5264
  %5270 = or i1 %5268, %5269
  %5271 = zext i1 %5270 to i8
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5271, i8* %5272, align 1
  %5273 = trunc i64 %5267 to i32
  %5274 = and i32 %5273, 255
  %5275 = call i32 @llvm.ctpop.i32(i32 %5274)
  %5276 = trunc i32 %5275 to i8
  %5277 = and i8 %5276, 1
  %5278 = xor i8 %5277, 1
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5278, i8* %5279, align 1
  %5280 = xor i64 %5264, %5263
  %5281 = xor i64 %5280, %5267
  %5282 = lshr i64 %5281, 4
  %5283 = trunc i64 %5282 to i8
  %5284 = and i8 %5283, 1
  %5285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5284, i8* %5285, align 1
  %5286 = icmp eq i64 %5267, 0
  %5287 = zext i1 %5286 to i8
  %5288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5287, i8* %5288, align 1
  %5289 = lshr i64 %5267, 63
  %5290 = trunc i64 %5289 to i8
  %5291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5290, i8* %5291, align 1
  %5292 = lshr i64 %5263, 63
  %5293 = lshr i64 %5264, 63
  %5294 = xor i64 %5289, %5292
  %5295 = xor i64 %5289, %5293
  %5296 = add i64 %5294, %5295
  %5297 = icmp eq i64 %5296, 2
  %5298 = zext i1 %5297 to i8
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5298, i8* %5299, align 1
  store %struct.Memory* %loadMem_403ec4, %struct.Memory** %MEMORY
  %loadMem_403ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5301 = getelementptr inbounds %struct.GPR, %struct.GPR* %5300, i32 0, i32 33
  %5302 = getelementptr inbounds %struct.Reg, %struct.Reg* %5301, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %5302 to i64*
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5304 = getelementptr inbounds %struct.GPR, %struct.GPR* %5303, i32 0, i32 9
  %5305 = getelementptr inbounds %struct.Reg, %struct.Reg* %5304, i32 0, i32 0
  %RSI.i674 = bitcast %union.anon* %5305 to i64*
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5307 = getelementptr inbounds %struct.GPR, %struct.GPR* %5306, i32 0, i32 15
  %5308 = getelementptr inbounds %struct.Reg, %struct.Reg* %5307, i32 0, i32 0
  %RBP.i675 = bitcast %union.anon* %5308 to i64*
  %5309 = load i64, i64* %RBP.i675
  %5310 = sub i64 %5309, 148
  %5311 = load i64, i64* %PC.i673
  %5312 = add i64 %5311, 7
  store i64 %5312, i64* %PC.i673
  %5313 = inttoptr i64 %5310 to i32*
  %5314 = load i32, i32* %5313
  %5315 = sext i32 %5314 to i64
  store i64 %5315, i64* %RSI.i674, align 8
  store %struct.Memory* %loadMem_403ec7, %struct.Memory** %MEMORY
  %loadMem_403ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5317 = getelementptr inbounds %struct.GPR, %struct.GPR* %5316, i32 0, i32 33
  %5318 = getelementptr inbounds %struct.Reg, %struct.Reg* %5317, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %5318 to i64*
  %5319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5320 = getelementptr inbounds %struct.GPR, %struct.GPR* %5319, i32 0, i32 7
  %5321 = getelementptr inbounds %struct.Reg, %struct.Reg* %5320, i32 0, i32 0
  %DX.i670 = bitcast %union.anon* %5321 to i16*
  %5322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5323 = getelementptr inbounds %struct.GPR, %struct.GPR* %5322, i32 0, i32 1
  %5324 = getelementptr inbounds %struct.Reg, %struct.Reg* %5323, i32 0, i32 0
  %RAX.i671 = bitcast %union.anon* %5324 to i64*
  %5325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5326 = getelementptr inbounds %struct.GPR, %struct.GPR* %5325, i32 0, i32 9
  %5327 = getelementptr inbounds %struct.Reg, %struct.Reg* %5326, i32 0, i32 0
  %RSI.i672 = bitcast %union.anon* %5327 to i64*
  %5328 = load i64, i64* %RAX.i671
  %5329 = load i64, i64* %RSI.i672
  %5330 = mul i64 %5329, 2
  %5331 = add i64 %5330, %5328
  %5332 = load i16, i16* %DX.i670
  %5333 = zext i16 %5332 to i64
  %5334 = load i64, i64* %PC.i669
  %5335 = add i64 %5334, 4
  store i64 %5335, i64* %PC.i669
  %5336 = inttoptr i64 %5331 to i16*
  store i16 %5332, i16* %5336
  store %struct.Memory* %loadMem_403ece, %struct.Memory** %MEMORY
  %loadMem_403ed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5338 = getelementptr inbounds %struct.GPR, %struct.GPR* %5337, i32 0, i32 33
  %5339 = getelementptr inbounds %struct.Reg, %struct.Reg* %5338, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %5339 to i64*
  %5340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5341 = getelementptr inbounds %struct.GPR, %struct.GPR* %5340, i32 0, i32 5
  %5342 = getelementptr inbounds %struct.Reg, %struct.Reg* %5341, i32 0, i32 0
  %RCX.i667 = bitcast %union.anon* %5342 to i64*
  %5343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5344 = getelementptr inbounds %struct.GPR, %struct.GPR* %5343, i32 0, i32 15
  %5345 = getelementptr inbounds %struct.Reg, %struct.Reg* %5344, i32 0, i32 0
  %RBP.i668 = bitcast %union.anon* %5345 to i64*
  %5346 = load i64, i64* %RBP.i668
  %5347 = sub i64 %5346, 4
  %5348 = load i64, i64* %PC.i666
  %5349 = add i64 %5348, 3
  store i64 %5349, i64* %PC.i666
  %5350 = inttoptr i64 %5347 to i32*
  %5351 = load i32, i32* %5350
  %5352 = zext i32 %5351 to i64
  store i64 %5352, i64* %RCX.i667, align 8
  store %struct.Memory* %loadMem_403ed2, %struct.Memory** %MEMORY
  %loadMem_403ed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5354 = getelementptr inbounds %struct.GPR, %struct.GPR* %5353, i32 0, i32 33
  %5355 = getelementptr inbounds %struct.Reg, %struct.Reg* %5354, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %5355 to i64*
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5357 = getelementptr inbounds %struct.GPR, %struct.GPR* %5356, i32 0, i32 5
  %5358 = getelementptr inbounds %struct.Reg, %struct.Reg* %5357, i32 0, i32 0
  %CX.i664 = bitcast %union.anon* %5358 to i16*
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5360 = getelementptr inbounds %struct.GPR, %struct.GPR* %5359, i32 0, i32 7
  %5361 = getelementptr inbounds %struct.Reg, %struct.Reg* %5360, i32 0, i32 0
  %DX.i665 = bitcast %union.anon* %5361 to i16*
  %5362 = load i16, i16* %CX.i664
  %5363 = zext i16 %5362 to i64
  %5364 = load i64, i64* %PC.i663
  %5365 = add i64 %5364, 3
  store i64 %5365, i64* %PC.i663
  store i16 %5362, i16* %DX.i665, align 2
  store %struct.Memory* %loadMem_403ed5, %struct.Memory** %MEMORY
  %loadMem_403ed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5367 = getelementptr inbounds %struct.GPR, %struct.GPR* %5366, i32 0, i32 33
  %5368 = getelementptr inbounds %struct.Reg, %struct.Reg* %5367, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %5368 to i64*
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5370 = getelementptr inbounds %struct.GPR, %struct.GPR* %5369, i32 0, i32 1
  %5371 = getelementptr inbounds %struct.Reg, %struct.Reg* %5370, i32 0, i32 0
  %RAX.i662 = bitcast %union.anon* %5371 to i64*
  %5372 = load i64, i64* %PC.i661
  %5373 = add i64 %5372, 8
  store i64 %5373, i64* %PC.i661
  %5374 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5374, i64* %RAX.i662, align 8
  store %struct.Memory* %loadMem_403ed8, %struct.Memory** %MEMORY
  %loadMem_403ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5376 = getelementptr inbounds %struct.GPR, %struct.GPR* %5375, i32 0, i32 33
  %5377 = getelementptr inbounds %struct.Reg, %struct.Reg* %5376, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %5377 to i64*
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5379 = getelementptr inbounds %struct.GPR, %struct.GPR* %5378, i32 0, i32 1
  %5380 = getelementptr inbounds %struct.Reg, %struct.Reg* %5379, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %5380 to i64*
  %5381 = load i64, i64* %RAX.i660
  %5382 = load i64, i64* %PC.i659
  %5383 = add i64 %5382, 6
  store i64 %5383, i64* %PC.i659
  %5384 = add i64 4792, %5381
  store i64 %5384, i64* %RAX.i660, align 8
  %5385 = icmp ult i64 %5384, %5381
  %5386 = icmp ult i64 %5384, 4792
  %5387 = or i1 %5385, %5386
  %5388 = zext i1 %5387 to i8
  %5389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5388, i8* %5389, align 1
  %5390 = trunc i64 %5384 to i32
  %5391 = and i32 %5390, 255
  %5392 = call i32 @llvm.ctpop.i32(i32 %5391)
  %5393 = trunc i32 %5392 to i8
  %5394 = and i8 %5393, 1
  %5395 = xor i8 %5394, 1
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5395, i8* %5396, align 1
  %5397 = xor i64 4792, %5381
  %5398 = xor i64 %5397, %5384
  %5399 = lshr i64 %5398, 4
  %5400 = trunc i64 %5399 to i8
  %5401 = and i8 %5400, 1
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5401, i8* %5402, align 1
  %5403 = icmp eq i64 %5384, 0
  %5404 = zext i1 %5403 to i8
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5404, i8* %5405, align 1
  %5406 = lshr i64 %5384, 63
  %5407 = trunc i64 %5406 to i8
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5407, i8* %5408, align 1
  %5409 = lshr i64 %5381, 63
  %5410 = xor i64 %5406, %5409
  %5411 = add i64 %5410, %5406
  %5412 = icmp eq i64 %5411, 2
  %5413 = zext i1 %5412 to i8
  %5414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5413, i8* %5414, align 1
  store %struct.Memory* %loadMem_403ee0, %struct.Memory** %MEMORY
  %loadMem_403ee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5416 = getelementptr inbounds %struct.GPR, %struct.GPR* %5415, i32 0, i32 33
  %5417 = getelementptr inbounds %struct.Reg, %struct.Reg* %5416, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %5417 to i64*
  %5418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5419 = getelementptr inbounds %struct.GPR, %struct.GPR* %5418, i32 0, i32 1
  %5420 = getelementptr inbounds %struct.Reg, %struct.Reg* %5419, i32 0, i32 0
  %RAX.i658 = bitcast %union.anon* %5420 to i64*
  %5421 = load i64, i64* %RAX.i658
  %5422 = load i64, i64* %PC.i657
  %5423 = add i64 %5422, 6
  store i64 %5423, i64* %PC.i657
  %5424 = add i64 1024, %5421
  store i64 %5424, i64* %RAX.i658, align 8
  %5425 = icmp ult i64 %5424, %5421
  %5426 = icmp ult i64 %5424, 1024
  %5427 = or i1 %5425, %5426
  %5428 = zext i1 %5427 to i8
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5428, i8* %5429, align 1
  %5430 = trunc i64 %5424 to i32
  %5431 = and i32 %5430, 255
  %5432 = call i32 @llvm.ctpop.i32(i32 %5431)
  %5433 = trunc i32 %5432 to i8
  %5434 = and i8 %5433, 1
  %5435 = xor i8 %5434, 1
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5435, i8* %5436, align 1
  %5437 = xor i64 1024, %5421
  %5438 = xor i64 %5437, %5424
  %5439 = lshr i64 %5438, 4
  %5440 = trunc i64 %5439 to i8
  %5441 = and i8 %5440, 1
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5441, i8* %5442, align 1
  %5443 = icmp eq i64 %5424, 0
  %5444 = zext i1 %5443 to i8
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5444, i8* %5445, align 1
  %5446 = lshr i64 %5424, 63
  %5447 = trunc i64 %5446 to i8
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5447, i8* %5448, align 1
  %5449 = lshr i64 %5421, 63
  %5450 = xor i64 %5446, %5449
  %5451 = add i64 %5450, %5446
  %5452 = icmp eq i64 %5451, 2
  %5453 = zext i1 %5452 to i8
  %5454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5453, i8* %5454, align 1
  store %struct.Memory* %loadMem_403ee6, %struct.Memory** %MEMORY
  %loadMem_403eec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5456 = getelementptr inbounds %struct.GPR, %struct.GPR* %5455, i32 0, i32 33
  %5457 = getelementptr inbounds %struct.Reg, %struct.Reg* %5456, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %5457 to i64*
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5459 = getelementptr inbounds %struct.GPR, %struct.GPR* %5458, i32 0, i32 9
  %5460 = getelementptr inbounds %struct.Reg, %struct.Reg* %5459, i32 0, i32 0
  %RSI.i655 = bitcast %union.anon* %5460 to i64*
  %5461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5462 = getelementptr inbounds %struct.GPR, %struct.GPR* %5461, i32 0, i32 15
  %5463 = getelementptr inbounds %struct.Reg, %struct.Reg* %5462, i32 0, i32 0
  %RBP.i656 = bitcast %union.anon* %5463 to i64*
  %5464 = load i64, i64* %RBP.i656
  %5465 = sub i64 %5464, 152
  %5466 = load i64, i64* %PC.i654
  %5467 = add i64 %5466, 7
  store i64 %5467, i64* %PC.i654
  %5468 = inttoptr i64 %5465 to i32*
  %5469 = load i32, i32* %5468
  %5470 = sext i32 %5469 to i64
  store i64 %5470, i64* %RSI.i655, align 8
  store %struct.Memory* %loadMem_403eec, %struct.Memory** %MEMORY
  %loadMem_403ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5472 = getelementptr inbounds %struct.GPR, %struct.GPR* %5471, i32 0, i32 33
  %5473 = getelementptr inbounds %struct.Reg, %struct.Reg* %5472, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %5473 to i64*
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5475 = getelementptr inbounds %struct.GPR, %struct.GPR* %5474, i32 0, i32 9
  %5476 = getelementptr inbounds %struct.Reg, %struct.Reg* %5475, i32 0, i32 0
  %RSI.i653 = bitcast %union.anon* %5476 to i64*
  %5477 = load i64, i64* %RSI.i653
  %5478 = load i64, i64* %PC.i652
  %5479 = add i64 %5478, 4
  store i64 %5479, i64* %PC.i652
  %5480 = shl i64 %5477, 4
  %5481 = icmp slt i64 %5480, 0
  %5482 = shl i64 %5480, 1
  store i64 %5482, i64* %RSI.i653, align 8
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5484 = zext i1 %5481 to i8
  store i8 %5484, i8* %5483, align 1
  %5485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5486 = trunc i64 %5482 to i32
  %5487 = and i32 %5486, 254
  %5488 = call i32 @llvm.ctpop.i32(i32 %5487)
  %5489 = trunc i32 %5488 to i8
  %5490 = and i8 %5489, 1
  %5491 = xor i8 %5490, 1
  store i8 %5491, i8* %5485, align 1
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5492, align 1
  %5493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5494 = icmp eq i64 %5482, 0
  %5495 = zext i1 %5494 to i8
  store i8 %5495, i8* %5493, align 1
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5497 = lshr i64 %5482, 63
  %5498 = trunc i64 %5497 to i8
  store i8 %5498, i8* %5496, align 1
  %5499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5499, align 1
  store %struct.Memory* %loadMem_403ef3, %struct.Memory** %MEMORY
  %loadMem_403ef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 33
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %5502 to i64*
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5504 = getelementptr inbounds %struct.GPR, %struct.GPR* %5503, i32 0, i32 1
  %5505 = getelementptr inbounds %struct.Reg, %struct.Reg* %5504, i32 0, i32 0
  %RAX.i650 = bitcast %union.anon* %5505 to i64*
  %5506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5507 = getelementptr inbounds %struct.GPR, %struct.GPR* %5506, i32 0, i32 9
  %5508 = getelementptr inbounds %struct.Reg, %struct.Reg* %5507, i32 0, i32 0
  %RSI.i651 = bitcast %union.anon* %5508 to i64*
  %5509 = load i64, i64* %RAX.i650
  %5510 = load i64, i64* %RSI.i651
  %5511 = load i64, i64* %PC.i649
  %5512 = add i64 %5511, 3
  store i64 %5512, i64* %PC.i649
  %5513 = add i64 %5510, %5509
  store i64 %5513, i64* %RAX.i650, align 8
  %5514 = icmp ult i64 %5513, %5509
  %5515 = icmp ult i64 %5513, %5510
  %5516 = or i1 %5514, %5515
  %5517 = zext i1 %5516 to i8
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5517, i8* %5518, align 1
  %5519 = trunc i64 %5513 to i32
  %5520 = and i32 %5519, 255
  %5521 = call i32 @llvm.ctpop.i32(i32 %5520)
  %5522 = trunc i32 %5521 to i8
  %5523 = and i8 %5522, 1
  %5524 = xor i8 %5523, 1
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5524, i8* %5525, align 1
  %5526 = xor i64 %5510, %5509
  %5527 = xor i64 %5526, %5513
  %5528 = lshr i64 %5527, 4
  %5529 = trunc i64 %5528 to i8
  %5530 = and i8 %5529, 1
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5530, i8* %5531, align 1
  %5532 = icmp eq i64 %5513, 0
  %5533 = zext i1 %5532 to i8
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5533, i8* %5534, align 1
  %5535 = lshr i64 %5513, 63
  %5536 = trunc i64 %5535 to i8
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5536, i8* %5537, align 1
  %5538 = lshr i64 %5509, 63
  %5539 = lshr i64 %5510, 63
  %5540 = xor i64 %5535, %5538
  %5541 = xor i64 %5535, %5539
  %5542 = add i64 %5540, %5541
  %5543 = icmp eq i64 %5542, 2
  %5544 = zext i1 %5543 to i8
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5544, i8* %5545, align 1
  store %struct.Memory* %loadMem_403ef7, %struct.Memory** %MEMORY
  %loadMem_403efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5547 = getelementptr inbounds %struct.GPR, %struct.GPR* %5546, i32 0, i32 33
  %5548 = getelementptr inbounds %struct.Reg, %struct.Reg* %5547, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %5548 to i64*
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5550 = getelementptr inbounds %struct.GPR, %struct.GPR* %5549, i32 0, i32 9
  %5551 = getelementptr inbounds %struct.Reg, %struct.Reg* %5550, i32 0, i32 0
  %RSI.i647 = bitcast %union.anon* %5551 to i64*
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 15
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %RBP.i648 = bitcast %union.anon* %5554 to i64*
  %5555 = load i64, i64* %RBP.i648
  %5556 = sub i64 %5555, 148
  %5557 = load i64, i64* %PC.i646
  %5558 = add i64 %5557, 7
  store i64 %5558, i64* %PC.i646
  %5559 = inttoptr i64 %5556 to i32*
  %5560 = load i32, i32* %5559
  %5561 = sext i32 %5560 to i64
  store i64 %5561, i64* %RSI.i647, align 8
  store %struct.Memory* %loadMem_403efa, %struct.Memory** %MEMORY
  %loadMem_403f01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5563 = getelementptr inbounds %struct.GPR, %struct.GPR* %5562, i32 0, i32 33
  %5564 = getelementptr inbounds %struct.Reg, %struct.Reg* %5563, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %5564 to i64*
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5566 = getelementptr inbounds %struct.GPR, %struct.GPR* %5565, i32 0, i32 7
  %5567 = getelementptr inbounds %struct.Reg, %struct.Reg* %5566, i32 0, i32 0
  %DX.i = bitcast %union.anon* %5567 to i16*
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5569 = getelementptr inbounds %struct.GPR, %struct.GPR* %5568, i32 0, i32 1
  %5570 = getelementptr inbounds %struct.Reg, %struct.Reg* %5569, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %5570 to i64*
  %5571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5572 = getelementptr inbounds %struct.GPR, %struct.GPR* %5571, i32 0, i32 9
  %5573 = getelementptr inbounds %struct.Reg, %struct.Reg* %5572, i32 0, i32 0
  %RSI.i645 = bitcast %union.anon* %5573 to i64*
  %5574 = load i64, i64* %RAX.i644
  %5575 = load i64, i64* %RSI.i645
  %5576 = mul i64 %5575, 2
  %5577 = add i64 %5576, %5574
  %5578 = load i16, i16* %DX.i
  %5579 = zext i16 %5578 to i64
  %5580 = load i64, i64* %PC.i643
  %5581 = add i64 %5580, 4
  store i64 %5581, i64* %PC.i643
  %5582 = inttoptr i64 %5577 to i16*
  store i16 %5578, i16* %5582
  store %struct.Memory* %loadMem_403f01, %struct.Memory** %MEMORY
  %loadMem_403f05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5584 = getelementptr inbounds %struct.GPR, %struct.GPR* %5583, i32 0, i32 33
  %5585 = getelementptr inbounds %struct.Reg, %struct.Reg* %5584, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %5585 to i64*
  %5586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5587 = getelementptr inbounds %struct.GPR, %struct.GPR* %5586, i32 0, i32 1
  %5588 = getelementptr inbounds %struct.Reg, %struct.Reg* %5587, i32 0, i32 0
  %RAX.i641 = bitcast %union.anon* %5588 to i64*
  %5589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5590 = getelementptr inbounds %struct.GPR, %struct.GPR* %5589, i32 0, i32 15
  %5591 = getelementptr inbounds %struct.Reg, %struct.Reg* %5590, i32 0, i32 0
  %RBP.i642 = bitcast %union.anon* %5591 to i64*
  %5592 = load i64, i64* %RBP.i642
  %5593 = sub i64 %5592, 148
  %5594 = load i64, i64* %PC.i640
  %5595 = add i64 %5594, 6
  store i64 %5595, i64* %PC.i640
  %5596 = inttoptr i64 %5593 to i32*
  %5597 = load i32, i32* %5596
  %5598 = zext i32 %5597 to i64
  store i64 %5598, i64* %RAX.i641, align 8
  store %struct.Memory* %loadMem_403f05, %struct.Memory** %MEMORY
  %loadMem_403f0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5600 = getelementptr inbounds %struct.GPR, %struct.GPR* %5599, i32 0, i32 33
  %5601 = getelementptr inbounds %struct.Reg, %struct.Reg* %5600, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %5601 to i64*
  %5602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5603 = getelementptr inbounds %struct.GPR, %struct.GPR* %5602, i32 0, i32 1
  %5604 = getelementptr inbounds %struct.Reg, %struct.Reg* %5603, i32 0, i32 0
  %RAX.i639 = bitcast %union.anon* %5604 to i64*
  %5605 = load i64, i64* %RAX.i639
  %5606 = load i64, i64* %PC.i638
  %5607 = add i64 %5606, 3
  store i64 %5607, i64* %PC.i638
  %5608 = trunc i64 %5605 to i32
  %5609 = add i32 1, %5608
  %5610 = zext i32 %5609 to i64
  store i64 %5610, i64* %RAX.i639, align 8
  %5611 = icmp ult i32 %5609, %5608
  %5612 = icmp ult i32 %5609, 1
  %5613 = or i1 %5611, %5612
  %5614 = zext i1 %5613 to i8
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5614, i8* %5615, align 1
  %5616 = and i32 %5609, 255
  %5617 = call i32 @llvm.ctpop.i32(i32 %5616)
  %5618 = trunc i32 %5617 to i8
  %5619 = and i8 %5618, 1
  %5620 = xor i8 %5619, 1
  %5621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5620, i8* %5621, align 1
  %5622 = xor i64 1, %5605
  %5623 = trunc i64 %5622 to i32
  %5624 = xor i32 %5623, %5609
  %5625 = lshr i32 %5624, 4
  %5626 = trunc i32 %5625 to i8
  %5627 = and i8 %5626, 1
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5627, i8* %5628, align 1
  %5629 = icmp eq i32 %5609, 0
  %5630 = zext i1 %5629 to i8
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5630, i8* %5631, align 1
  %5632 = lshr i32 %5609, 31
  %5633 = trunc i32 %5632 to i8
  %5634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5633, i8* %5634, align 1
  %5635 = lshr i32 %5608, 31
  %5636 = xor i32 %5632, %5635
  %5637 = add i32 %5636, %5632
  %5638 = icmp eq i32 %5637, 2
  %5639 = zext i1 %5638 to i8
  %5640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5639, i8* %5640, align 1
  store %struct.Memory* %loadMem_403f0b, %struct.Memory** %MEMORY
  %loadMem_403f0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5642 = getelementptr inbounds %struct.GPR, %struct.GPR* %5641, i32 0, i32 33
  %5643 = getelementptr inbounds %struct.Reg, %struct.Reg* %5642, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %5643 to i64*
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 1
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %EAX.i636 = bitcast %union.anon* %5646 to i32*
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5648 = getelementptr inbounds %struct.GPR, %struct.GPR* %5647, i32 0, i32 15
  %5649 = getelementptr inbounds %struct.Reg, %struct.Reg* %5648, i32 0, i32 0
  %RBP.i637 = bitcast %union.anon* %5649 to i64*
  %5650 = load i64, i64* %RBP.i637
  %5651 = sub i64 %5650, 148
  %5652 = load i32, i32* %EAX.i636
  %5653 = zext i32 %5652 to i64
  %5654 = load i64, i64* %PC.i635
  %5655 = add i64 %5654, 6
  store i64 %5655, i64* %PC.i635
  %5656 = inttoptr i64 %5651 to i32*
  store i32 %5652, i32* %5656
  store %struct.Memory* %loadMem_403f0e, %struct.Memory** %MEMORY
  %loadMem_403f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5658 = getelementptr inbounds %struct.GPR, %struct.GPR* %5657, i32 0, i32 33
  %5659 = getelementptr inbounds %struct.Reg, %struct.Reg* %5658, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %5659 to i64*
  %5660 = load i64, i64* %PC.i634
  %5661 = add i64 %5660, -197
  %5662 = load i64, i64* %PC.i634
  %5663 = add i64 %5662, 5
  store i64 %5663, i64* %PC.i634
  %5664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5661, i64* %5664, align 8
  store %struct.Memory* %loadMem_403f14, %struct.Memory** %MEMORY
  br label %block_.L_403e4f

block_.L_403f19:                                  ; preds = %block_.L_403e4f
  %loadMem_403f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5666 = getelementptr inbounds %struct.GPR, %struct.GPR* %5665, i32 0, i32 33
  %5667 = getelementptr inbounds %struct.Reg, %struct.Reg* %5666, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %5667 to i64*
  %5668 = load i64, i64* %PC.i633
  %5669 = add i64 %5668, 5
  %5670 = load i64, i64* %PC.i633
  %5671 = add i64 %5670, 5
  store i64 %5671, i64* %PC.i633
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5669, i64* %5672, align 8
  store %struct.Memory* %loadMem_403f19, %struct.Memory** %MEMORY
  br label %block_.L_403f1e

block_.L_403f1e:                                  ; preds = %block_.L_403f19
  %loadMem_403f1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5674 = getelementptr inbounds %struct.GPR, %struct.GPR* %5673, i32 0, i32 33
  %5675 = getelementptr inbounds %struct.Reg, %struct.Reg* %5674, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %5675 to i64*
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5677 = getelementptr inbounds %struct.GPR, %struct.GPR* %5676, i32 0, i32 1
  %5678 = getelementptr inbounds %struct.Reg, %struct.Reg* %5677, i32 0, i32 0
  %RAX.i631 = bitcast %union.anon* %5678 to i64*
  %5679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5680 = getelementptr inbounds %struct.GPR, %struct.GPR* %5679, i32 0, i32 15
  %5681 = getelementptr inbounds %struct.Reg, %struct.Reg* %5680, i32 0, i32 0
  %RBP.i632 = bitcast %union.anon* %5681 to i64*
  %5682 = load i64, i64* %RBP.i632
  %5683 = sub i64 %5682, 152
  %5684 = load i64, i64* %PC.i630
  %5685 = add i64 %5684, 6
  store i64 %5685, i64* %PC.i630
  %5686 = inttoptr i64 %5683 to i32*
  %5687 = load i32, i32* %5686
  %5688 = zext i32 %5687 to i64
  store i64 %5688, i64* %RAX.i631, align 8
  store %struct.Memory* %loadMem_403f1e, %struct.Memory** %MEMORY
  %loadMem_403f24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5690 = getelementptr inbounds %struct.GPR, %struct.GPR* %5689, i32 0, i32 33
  %5691 = getelementptr inbounds %struct.Reg, %struct.Reg* %5690, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %5691 to i64*
  %5692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5693 = getelementptr inbounds %struct.GPR, %struct.GPR* %5692, i32 0, i32 1
  %5694 = getelementptr inbounds %struct.Reg, %struct.Reg* %5693, i32 0, i32 0
  %RAX.i629 = bitcast %union.anon* %5694 to i64*
  %5695 = load i64, i64* %RAX.i629
  %5696 = load i64, i64* %PC.i628
  %5697 = add i64 %5696, 3
  store i64 %5697, i64* %PC.i628
  %5698 = trunc i64 %5695 to i32
  %5699 = add i32 1, %5698
  %5700 = zext i32 %5699 to i64
  store i64 %5700, i64* %RAX.i629, align 8
  %5701 = icmp ult i32 %5699, %5698
  %5702 = icmp ult i32 %5699, 1
  %5703 = or i1 %5701, %5702
  %5704 = zext i1 %5703 to i8
  %5705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5704, i8* %5705, align 1
  %5706 = and i32 %5699, 255
  %5707 = call i32 @llvm.ctpop.i32(i32 %5706)
  %5708 = trunc i32 %5707 to i8
  %5709 = and i8 %5708, 1
  %5710 = xor i8 %5709, 1
  %5711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5710, i8* %5711, align 1
  %5712 = xor i64 1, %5695
  %5713 = trunc i64 %5712 to i32
  %5714 = xor i32 %5713, %5699
  %5715 = lshr i32 %5714, 4
  %5716 = trunc i32 %5715 to i8
  %5717 = and i8 %5716, 1
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5717, i8* %5718, align 1
  %5719 = icmp eq i32 %5699, 0
  %5720 = zext i1 %5719 to i8
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5720, i8* %5721, align 1
  %5722 = lshr i32 %5699, 31
  %5723 = trunc i32 %5722 to i8
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5723, i8* %5724, align 1
  %5725 = lshr i32 %5698, 31
  %5726 = xor i32 %5722, %5725
  %5727 = add i32 %5726, %5722
  %5728 = icmp eq i32 %5727, 2
  %5729 = zext i1 %5728 to i8
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5729, i8* %5730, align 1
  store %struct.Memory* %loadMem_403f24, %struct.Memory** %MEMORY
  %loadMem_403f27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5732 = getelementptr inbounds %struct.GPR, %struct.GPR* %5731, i32 0, i32 33
  %5733 = getelementptr inbounds %struct.Reg, %struct.Reg* %5732, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %5733 to i64*
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5735 = getelementptr inbounds %struct.GPR, %struct.GPR* %5734, i32 0, i32 1
  %5736 = getelementptr inbounds %struct.Reg, %struct.Reg* %5735, i32 0, i32 0
  %EAX.i626 = bitcast %union.anon* %5736 to i32*
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5738 = getelementptr inbounds %struct.GPR, %struct.GPR* %5737, i32 0, i32 15
  %5739 = getelementptr inbounds %struct.Reg, %struct.Reg* %5738, i32 0, i32 0
  %RBP.i627 = bitcast %union.anon* %5739 to i64*
  %5740 = load i64, i64* %RBP.i627
  %5741 = sub i64 %5740, 152
  %5742 = load i32, i32* %EAX.i626
  %5743 = zext i32 %5742 to i64
  %5744 = load i64, i64* %PC.i625
  %5745 = add i64 %5744, 6
  store i64 %5745, i64* %PC.i625
  %5746 = inttoptr i64 %5741 to i32*
  store i32 %5742, i32* %5746
  store %struct.Memory* %loadMem_403f27, %struct.Memory** %MEMORY
  %loadMem_403f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5748 = getelementptr inbounds %struct.GPR, %struct.GPR* %5747, i32 0, i32 33
  %5749 = getelementptr inbounds %struct.Reg, %struct.Reg* %5748, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %5749 to i64*
  %5750 = load i64, i64* %PC.i624
  %5751 = add i64 %5750, -245
  %5752 = load i64, i64* %PC.i624
  %5753 = add i64 %5752, 5
  store i64 %5753, i64* %PC.i624
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5751, i64* %5754, align 8
  store %struct.Memory* %loadMem_403f2d, %struct.Memory** %MEMORY
  br label %block_.L_403e38

block_.L_403f32:                                  ; preds = %block_.L_403e38
  %loadMem_403f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5756 = getelementptr inbounds %struct.GPR, %struct.GPR* %5755, i32 0, i32 33
  %5757 = getelementptr inbounds %struct.Reg, %struct.Reg* %5756, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %5757 to i64*
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5759 = getelementptr inbounds %struct.GPR, %struct.GPR* %5758, i32 0, i32 15
  %5760 = getelementptr inbounds %struct.Reg, %struct.Reg* %5759, i32 0, i32 0
  %RBP.i623 = bitcast %union.anon* %5760 to i64*
  %5761 = load i64, i64* %RBP.i623
  %5762 = sub i64 %5761, 628
  %5763 = load i64, i64* %PC.i622
  %5764 = add i64 %5763, 7
  store i64 %5764, i64* %PC.i622
  %5765 = inttoptr i64 %5762 to i32*
  %5766 = load i32, i32* %5765
  %5767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5767, align 1
  %5768 = and i32 %5766, 255
  %5769 = call i32 @llvm.ctpop.i32(i32 %5768)
  %5770 = trunc i32 %5769 to i8
  %5771 = and i8 %5770, 1
  %5772 = xor i8 %5771, 1
  %5773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5772, i8* %5773, align 1
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5774, align 1
  %5775 = icmp eq i32 %5766, 0
  %5776 = zext i1 %5775 to i8
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5776, i8* %5777, align 1
  %5778 = lshr i32 %5766, 31
  %5779 = trunc i32 %5778 to i8
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5779, i8* %5780, align 1
  %5781 = lshr i32 %5766, 31
  %5782 = xor i32 %5778, %5781
  %5783 = add i32 %5782, %5781
  %5784 = icmp eq i32 %5783, 2
  %5785 = zext i1 %5784 to i8
  %5786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5785, i8* %5786, align 1
  store %struct.Memory* %loadMem_403f32, %struct.Memory** %MEMORY
  %loadMem_403f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5788 = getelementptr inbounds %struct.GPR, %struct.GPR* %5787, i32 0, i32 33
  %5789 = getelementptr inbounds %struct.Reg, %struct.Reg* %5788, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %5789 to i64*
  %5790 = load i64, i64* %PC.i621
  %5791 = add i64 %5790, 32
  %5792 = load i64, i64* %PC.i621
  %5793 = add i64 %5792, 6
  %5794 = load i64, i64* %PC.i621
  %5795 = add i64 %5794, 6
  store i64 %5795, i64* %PC.i621
  %5796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5797 = load i8, i8* %5796, align 1
  store i8 %5797, i8* %BRANCH_TAKEN, align 1
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5799 = icmp ne i8 %5797, 0
  %5800 = select i1 %5799, i64 %5791, i64 %5793
  store i64 %5800, i64* %5798, align 8
  store %struct.Memory* %loadMem_403f39, %struct.Memory** %MEMORY
  %loadBr_403f39 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403f39 = icmp eq i8 %loadBr_403f39, 1
  br i1 %cmpBr_403f39, label %block_.L_403f59, label %block_403f3f

block_403f3f:                                     ; preds = %block_.L_403f32
  %loadMem_403f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5802 = getelementptr inbounds %struct.GPR, %struct.GPR* %5801, i32 0, i32 33
  %5803 = getelementptr inbounds %struct.Reg, %struct.Reg* %5802, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %5803 to i64*
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5805 = getelementptr inbounds %struct.GPR, %struct.GPR* %5804, i32 0, i32 15
  %5806 = getelementptr inbounds %struct.Reg, %struct.Reg* %5805, i32 0, i32 0
  %RBP.i620 = bitcast %union.anon* %5806 to i64*
  %5807 = load i64, i64* %RBP.i620
  %5808 = sub i64 %5807, 632
  %5809 = load i64, i64* %PC.i619
  %5810 = add i64 %5809, 7
  store i64 %5810, i64* %PC.i619
  %5811 = inttoptr i64 %5808 to i32*
  %5812 = load i32, i32* %5811
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5813, align 1
  %5814 = and i32 %5812, 255
  %5815 = call i32 @llvm.ctpop.i32(i32 %5814)
  %5816 = trunc i32 %5815 to i8
  %5817 = and i8 %5816, 1
  %5818 = xor i8 %5817, 1
  %5819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5818, i8* %5819, align 1
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5820, align 1
  %5821 = icmp eq i32 %5812, 0
  %5822 = zext i1 %5821 to i8
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5822, i8* %5823, align 1
  %5824 = lshr i32 %5812, 31
  %5825 = trunc i32 %5824 to i8
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5825, i8* %5826, align 1
  %5827 = lshr i32 %5812, 31
  %5828 = xor i32 %5824, %5827
  %5829 = add i32 %5828, %5827
  %5830 = icmp eq i32 %5829, 2
  %5831 = zext i1 %5830 to i8
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5831, i8* %5832, align 1
  store %struct.Memory* %loadMem_403f3f, %struct.Memory** %MEMORY
  %loadMem_403f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5834 = getelementptr inbounds %struct.GPR, %struct.GPR* %5833, i32 0, i32 33
  %5835 = getelementptr inbounds %struct.Reg, %struct.Reg* %5834, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %5835 to i64*
  %5836 = load i64, i64* %PC.i618
  %5837 = add i64 %5836, 19
  %5838 = load i64, i64* %PC.i618
  %5839 = add i64 %5838, 6
  %5840 = load i64, i64* %PC.i618
  %5841 = add i64 %5840, 6
  store i64 %5841, i64* %PC.i618
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5843 = load i8, i8* %5842, align 1
  store i8 %5843, i8* %BRANCH_TAKEN, align 1
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5845 = icmp ne i8 %5843, 0
  %5846 = select i1 %5845, i64 %5837, i64 %5839
  store i64 %5846, i64* %5844, align 8
  store %struct.Memory* %loadMem_403f46, %struct.Memory** %MEMORY
  %loadBr_403f46 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403f46 = icmp eq i8 %loadBr_403f46, 1
  br i1 %cmpBr_403f46, label %block_.L_403f59, label %block_403f4c

block_403f4c:                                     ; preds = %block_403f3f
  %loadMem_403f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 33
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %5849 to i64*
  %5850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5851 = getelementptr inbounds %struct.GPR, %struct.GPR* %5850, i32 0, i32 15
  %5852 = getelementptr inbounds %struct.Reg, %struct.Reg* %5851, i32 0, i32 0
  %RBP.i617 = bitcast %union.anon* %5852 to i64*
  %5853 = load i64, i64* %RBP.i617
  %5854 = sub i64 %5853, 636
  %5855 = load i64, i64* %PC.i616
  %5856 = add i64 %5855, 7
  store i64 %5856, i64* %PC.i616
  %5857 = inttoptr i64 %5854 to i32*
  %5858 = load i32, i32* %5857
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5859, align 1
  %5860 = and i32 %5858, 255
  %5861 = call i32 @llvm.ctpop.i32(i32 %5860)
  %5862 = trunc i32 %5861 to i8
  %5863 = and i8 %5862, 1
  %5864 = xor i8 %5863, 1
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5864, i8* %5865, align 1
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5866, align 1
  %5867 = icmp eq i32 %5858, 0
  %5868 = zext i1 %5867 to i8
  %5869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5868, i8* %5869, align 1
  %5870 = lshr i32 %5858, 31
  %5871 = trunc i32 %5870 to i8
  %5872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5871, i8* %5872, align 1
  %5873 = lshr i32 %5858, 31
  %5874 = xor i32 %5870, %5873
  %5875 = add i32 %5874, %5873
  %5876 = icmp eq i32 %5875, 2
  %5877 = zext i1 %5876 to i8
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5877, i8* %5878, align 1
  store %struct.Memory* %loadMem_403f4c, %struct.Memory** %MEMORY
  %loadMem_403f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5880 = getelementptr inbounds %struct.GPR, %struct.GPR* %5879, i32 0, i32 33
  %5881 = getelementptr inbounds %struct.Reg, %struct.Reg* %5880, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %5881 to i64*
  %5882 = load i64, i64* %PC.i615
  %5883 = add i64 %5882, 11
  %5884 = load i64, i64* %PC.i615
  %5885 = add i64 %5884, 6
  %5886 = load i64, i64* %PC.i615
  %5887 = add i64 %5886, 6
  store i64 %5887, i64* %PC.i615
  %5888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5889 = load i8, i8* %5888, align 1
  %5890 = icmp eq i8 %5889, 0
  %5891 = zext i1 %5890 to i8
  store i8 %5891, i8* %BRANCH_TAKEN, align 1
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5893 = select i1 %5890, i64 %5883, i64 %5885
  store i64 %5893, i64* %5892, align 8
  store %struct.Memory* %loadMem_403f53, %struct.Memory** %MEMORY
  %loadBr_403f53 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403f53 = icmp eq i8 %loadBr_403f53, 1
  br i1 %cmpBr_403f53, label %block_.L_403f5e, label %block_.L_403f59

block_.L_403f59:                                  ; preds = %block_403f4c, %block_403f3f, %block_.L_403f32
  %loadMem_403f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5895 = getelementptr inbounds %struct.GPR, %struct.GPR* %5894, i32 0, i32 33
  %5896 = getelementptr inbounds %struct.Reg, %struct.Reg* %5895, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %5896 to i64*
  %5897 = load i64, i64* %PC.i614
  %5898 = add i64 %5897, 1144
  %5899 = load i64, i64* %PC.i614
  %5900 = add i64 %5899, 5
  store i64 %5900, i64* %PC.i614
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5898, i64* %5901, align 8
  store %struct.Memory* %loadMem_403f59, %struct.Memory** %MEMORY
  br label %block_.L_4043d1

block_.L_403f5e:                                  ; preds = %block_403f4c
  %loadMem_403f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5903 = getelementptr inbounds %struct.GPR, %struct.GPR* %5902, i32 0, i32 33
  %5904 = getelementptr inbounds %struct.Reg, %struct.Reg* %5903, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %5904 to i64*
  %5905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5906 = getelementptr inbounds %struct.GPR, %struct.GPR* %5905, i32 0, i32 15
  %5907 = getelementptr inbounds %struct.Reg, %struct.Reg* %5906, i32 0, i32 0
  %RBP.i613 = bitcast %union.anon* %5907 to i64*
  %5908 = load i64, i64* %RBP.i613
  %5909 = sub i64 %5908, 156
  %5910 = load i64, i64* %PC.i612
  %5911 = add i64 %5910, 10
  store i64 %5911, i64* %PC.i612
  %5912 = inttoptr i64 %5909 to i32*
  store i32 0, i32* %5912
  store %struct.Memory* %loadMem_403f5e, %struct.Memory** %MEMORY
  %loadMem_403f68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5914 = getelementptr inbounds %struct.GPR, %struct.GPR* %5913, i32 0, i32 33
  %5915 = getelementptr inbounds %struct.Reg, %struct.Reg* %5914, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %5915 to i64*
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5917 = getelementptr inbounds %struct.GPR, %struct.GPR* %5916, i32 0, i32 15
  %5918 = getelementptr inbounds %struct.Reg, %struct.Reg* %5917, i32 0, i32 0
  %RBP.i611 = bitcast %union.anon* %5918 to i64*
  %5919 = load i64, i64* %RBP.i611
  %5920 = sub i64 %5919, 160
  %5921 = load i64, i64* %PC.i610
  %5922 = add i64 %5921, 10
  store i64 %5922, i64* %PC.i610
  %5923 = inttoptr i64 %5920 to i32*
  store i32 0, i32* %5923
  store %struct.Memory* %loadMem_403f68, %struct.Memory** %MEMORY
  %loadMem_403f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5925 = getelementptr inbounds %struct.GPR, %struct.GPR* %5924, i32 0, i32 33
  %5926 = getelementptr inbounds %struct.Reg, %struct.Reg* %5925, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %5926 to i64*
  %5927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5928 = getelementptr inbounds %struct.GPR, %struct.GPR* %5927, i32 0, i32 15
  %5929 = getelementptr inbounds %struct.Reg, %struct.Reg* %5928, i32 0, i32 0
  %RBP.i609 = bitcast %union.anon* %5929 to i64*
  %5930 = load i64, i64* %RBP.i609
  %5931 = sub i64 %5930, 148
  %5932 = load i64, i64* %PC.i608
  %5933 = add i64 %5932, 10
  store i64 %5933, i64* %PC.i608
  %5934 = inttoptr i64 %5931 to i32*
  store i32 1, i32* %5934
  store %struct.Memory* %loadMem_403f72, %struct.Memory** %MEMORY
  br label %block_.L_403f7c

block_.L_403f7c:                                  ; preds = %block_.L_40405e, %block_.L_403f5e
  %loadMem_403f7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5936 = getelementptr inbounds %struct.GPR, %struct.GPR* %5935, i32 0, i32 33
  %5937 = getelementptr inbounds %struct.Reg, %struct.Reg* %5936, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %5937 to i64*
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5939 = getelementptr inbounds %struct.GPR, %struct.GPR* %5938, i32 0, i32 15
  %5940 = getelementptr inbounds %struct.Reg, %struct.Reg* %5939, i32 0, i32 0
  %RBP.i607 = bitcast %union.anon* %5940 to i64*
  %5941 = load i64, i64* %RBP.i607
  %5942 = sub i64 %5941, 148
  %5943 = load i64, i64* %PC.i606
  %5944 = add i64 %5943, 7
  store i64 %5944, i64* %PC.i606
  %5945 = inttoptr i64 %5942 to i32*
  %5946 = load i32, i32* %5945
  %5947 = sub i32 %5946, 9
  %5948 = icmp ult i32 %5946, 9
  %5949 = zext i1 %5948 to i8
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5949, i8* %5950, align 1
  %5951 = and i32 %5947, 255
  %5952 = call i32 @llvm.ctpop.i32(i32 %5951)
  %5953 = trunc i32 %5952 to i8
  %5954 = and i8 %5953, 1
  %5955 = xor i8 %5954, 1
  %5956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5955, i8* %5956, align 1
  %5957 = xor i32 %5946, 9
  %5958 = xor i32 %5957, %5947
  %5959 = lshr i32 %5958, 4
  %5960 = trunc i32 %5959 to i8
  %5961 = and i8 %5960, 1
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5961, i8* %5962, align 1
  %5963 = icmp eq i32 %5947, 0
  %5964 = zext i1 %5963 to i8
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5964, i8* %5965, align 1
  %5966 = lshr i32 %5947, 31
  %5967 = trunc i32 %5966 to i8
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5967, i8* %5968, align 1
  %5969 = lshr i32 %5946, 31
  %5970 = xor i32 %5966, %5969
  %5971 = add i32 %5970, %5969
  %5972 = icmp eq i32 %5971, 2
  %5973 = zext i1 %5972 to i8
  %5974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5973, i8* %5974, align 1
  store %struct.Memory* %loadMem_403f7c, %struct.Memory** %MEMORY
  %loadMem_403f83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5976 = getelementptr inbounds %struct.GPR, %struct.GPR* %5975, i32 0, i32 33
  %5977 = getelementptr inbounds %struct.Reg, %struct.Reg* %5976, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %5977 to i64*
  %5978 = load i64, i64* %PC.i605
  %5979 = add i64 %5978, 404
  %5980 = load i64, i64* %PC.i605
  %5981 = add i64 %5980, 6
  %5982 = load i64, i64* %PC.i605
  %5983 = add i64 %5982, 6
  store i64 %5983, i64* %PC.i605
  %5984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5985 = load i8, i8* %5984, align 1
  %5986 = icmp ne i8 %5985, 0
  %5987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5988 = load i8, i8* %5987, align 1
  %5989 = icmp ne i8 %5988, 0
  %5990 = xor i1 %5986, %5989
  %5991 = xor i1 %5990, true
  %5992 = zext i1 %5991 to i8
  store i8 %5992, i8* %BRANCH_TAKEN, align 1
  %5993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5994 = select i1 %5990, i64 %5981, i64 %5979
  store i64 %5994, i64* %5993, align 8
  store %struct.Memory* %loadMem_403f83, %struct.Memory** %MEMORY
  %loadBr_403f83 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403f83 = icmp eq i8 %loadBr_403f83, 1
  br i1 %cmpBr_403f83, label %block_.L_404117, label %block_403f89

block_403f89:                                     ; preds = %block_.L_403f7c
  %loadMem_403f89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 33
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %5997 to i64*
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 15
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %RBP.i604 = bitcast %union.anon* %6000 to i64*
  %6001 = load i64, i64* %RBP.i604
  %6002 = sub i64 %6001, 148
  %6003 = load i64, i64* %PC.i603
  %6004 = add i64 %6003, 7
  store i64 %6004, i64* %PC.i603
  %6005 = inttoptr i64 %6002 to i32*
  %6006 = load i32, i32* %6005
  %6007 = sub i32 %6006, 8
  %6008 = icmp ult i32 %6006, 8
  %6009 = zext i1 %6008 to i8
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6009, i8* %6010, align 1
  %6011 = and i32 %6007, 255
  %6012 = call i32 @llvm.ctpop.i32(i32 %6011)
  %6013 = trunc i32 %6012 to i8
  %6014 = and i8 %6013, 1
  %6015 = xor i8 %6014, 1
  %6016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6015, i8* %6016, align 1
  %6017 = xor i32 %6006, 8
  %6018 = xor i32 %6017, %6007
  %6019 = lshr i32 %6018, 4
  %6020 = trunc i32 %6019 to i8
  %6021 = and i8 %6020, 1
  %6022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6021, i8* %6022, align 1
  %6023 = icmp eq i32 %6007, 0
  %6024 = zext i1 %6023 to i8
  %6025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6024, i8* %6025, align 1
  %6026 = lshr i32 %6007, 31
  %6027 = trunc i32 %6026 to i8
  %6028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6027, i8* %6028, align 1
  %6029 = lshr i32 %6006, 31
  %6030 = xor i32 %6026, %6029
  %6031 = add i32 %6030, %6029
  %6032 = icmp eq i32 %6031, 2
  %6033 = zext i1 %6032 to i8
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6033, i8* %6034, align 1
  store %struct.Memory* %loadMem_403f89, %struct.Memory** %MEMORY
  %loadMem_403f90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6036 = getelementptr inbounds %struct.GPR, %struct.GPR* %6035, i32 0, i32 33
  %6037 = getelementptr inbounds %struct.Reg, %struct.Reg* %6036, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %6037 to i64*
  %6038 = load i64, i64* %PC.i602
  %6039 = add i64 %6038, 114
  %6040 = load i64, i64* %PC.i602
  %6041 = add i64 %6040, 6
  %6042 = load i64, i64* %PC.i602
  %6043 = add i64 %6042, 6
  store i64 %6043, i64* %PC.i602
  %6044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6045 = load i8, i8* %6044, align 1
  %6046 = icmp ne i8 %6045, 0
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6048 = load i8, i8* %6047, align 1
  %6049 = icmp ne i8 %6048, 0
  %6050 = xor i1 %6046, %6049
  %6051 = xor i1 %6050, true
  %6052 = zext i1 %6051 to i8
  store i8 %6052, i8* %BRANCH_TAKEN, align 1
  %6053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6054 = select i1 %6050, i64 %6041, i64 %6039
  store i64 %6054, i64* %6053, align 8
  store %struct.Memory* %loadMem_403f90, %struct.Memory** %MEMORY
  %loadBr_403f90 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_403f90 = icmp eq i8 %loadBr_403f90, 1
  br i1 %cmpBr_403f90, label %block_.L_404002, label %block_403f96

block_403f96:                                     ; preds = %block_403f89
  %loadMem_403f96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6056 = getelementptr inbounds %struct.GPR, %struct.GPR* %6055, i32 0, i32 33
  %6057 = getelementptr inbounds %struct.Reg, %struct.Reg* %6056, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %6057 to i64*
  %6058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6059 = getelementptr inbounds %struct.GPR, %struct.GPR* %6058, i32 0, i32 1
  %6060 = getelementptr inbounds %struct.Reg, %struct.Reg* %6059, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %6060 to i64*
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6062 = getelementptr inbounds %struct.GPR, %struct.GPR* %6061, i32 0, i32 15
  %6063 = getelementptr inbounds %struct.Reg, %struct.Reg* %6062, i32 0, i32 0
  %RBP.i601 = bitcast %union.anon* %6063 to i64*
  %6064 = load i64, i64* %RBP.i601
  %6065 = sub i64 %6064, 148
  %6066 = load i64, i64* %PC.i599
  %6067 = add i64 %6066, 6
  store i64 %6067, i64* %PC.i599
  %6068 = inttoptr i64 %6065 to i32*
  %6069 = load i32, i32* %6068
  %6070 = zext i32 %6069 to i64
  store i64 %6070, i64* %RAX.i600, align 8
  store %struct.Memory* %loadMem_403f96, %struct.Memory** %MEMORY
  %loadMem_403f9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6072 = getelementptr inbounds %struct.GPR, %struct.GPR* %6071, i32 0, i32 33
  %6073 = getelementptr inbounds %struct.Reg, %struct.Reg* %6072, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %6073 to i64*
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6075 = getelementptr inbounds %struct.GPR, %struct.GPR* %6074, i32 0, i32 5
  %6076 = getelementptr inbounds %struct.Reg, %struct.Reg* %6075, i32 0, i32 0
  %RCX.i597 = bitcast %union.anon* %6076 to i64*
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6078 = getelementptr inbounds %struct.GPR, %struct.GPR* %6077, i32 0, i32 15
  %6079 = getelementptr inbounds %struct.Reg, %struct.Reg* %6078, i32 0, i32 0
  %RBP.i598 = bitcast %union.anon* %6079 to i64*
  %6080 = load i64, i64* %RBP.i598
  %6081 = sub i64 %6080, 184
  %6082 = load i64, i64* %PC.i596
  %6083 = add i64 %6082, 7
  store i64 %6083, i64* %PC.i596
  %6084 = inttoptr i64 %6081 to i64*
  %6085 = load i64, i64* %6084
  store i64 %6085, i64* %RCX.i597, align 8
  store %struct.Memory* %loadMem_403f9c, %struct.Memory** %MEMORY
  %loadMem_403fa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6087 = getelementptr inbounds %struct.GPR, %struct.GPR* %6086, i32 0, i32 33
  %6088 = getelementptr inbounds %struct.Reg, %struct.Reg* %6087, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %6088 to i64*
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6090 = getelementptr inbounds %struct.GPR, %struct.GPR* %6089, i32 0, i32 7
  %6091 = getelementptr inbounds %struct.Reg, %struct.Reg* %6090, i32 0, i32 0
  %RDX.i594 = bitcast %union.anon* %6091 to i64*
  %6092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6093 = getelementptr inbounds %struct.GPR, %struct.GPR* %6092, i32 0, i32 15
  %6094 = getelementptr inbounds %struct.Reg, %struct.Reg* %6093, i32 0, i32 0
  %RBP.i595 = bitcast %union.anon* %6094 to i64*
  %6095 = load i64, i64* %RBP.i595
  %6096 = sub i64 %6095, 196
  %6097 = load i64, i64* %PC.i593
  %6098 = add i64 %6097, 7
  store i64 %6098, i64* %PC.i593
  %6099 = inttoptr i64 %6096 to i32*
  %6100 = load i32, i32* %6099
  %6101 = sext i32 %6100 to i64
  store i64 %6101, i64* %RDX.i594, align 8
  store %struct.Memory* %loadMem_403fa3, %struct.Memory** %MEMORY
  %loadMem_403faa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6103 = getelementptr inbounds %struct.GPR, %struct.GPR* %6102, i32 0, i32 33
  %6104 = getelementptr inbounds %struct.Reg, %struct.Reg* %6103, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %6104 to i64*
  %6105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6106 = getelementptr inbounds %struct.GPR, %struct.GPR* %6105, i32 0, i32 5
  %6107 = getelementptr inbounds %struct.Reg, %struct.Reg* %6106, i32 0, i32 0
  %RCX.i591 = bitcast %union.anon* %6107 to i64*
  %6108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6109 = getelementptr inbounds %struct.GPR, %struct.GPR* %6108, i32 0, i32 7
  %6110 = getelementptr inbounds %struct.Reg, %struct.Reg* %6109, i32 0, i32 0
  %RDX.i592 = bitcast %union.anon* %6110 to i64*
  %6111 = load i64, i64* %RCX.i591
  %6112 = load i64, i64* %RDX.i592
  %6113 = mul i64 %6112, 8
  %6114 = add i64 %6113, %6111
  %6115 = load i64, i64* %PC.i590
  %6116 = add i64 %6115, 4
  store i64 %6116, i64* %PC.i590
  %6117 = inttoptr i64 %6114 to i64*
  %6118 = load i64, i64* %6117
  store i64 %6118, i64* %RCX.i591, align 8
  store %struct.Memory* %loadMem_403faa, %struct.Memory** %MEMORY
  %loadMem_403fae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6120 = getelementptr inbounds %struct.GPR, %struct.GPR* %6119, i32 0, i32 33
  %6121 = getelementptr inbounds %struct.Reg, %struct.Reg* %6120, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %6121 to i64*
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6123 = getelementptr inbounds %struct.GPR, %struct.GPR* %6122, i32 0, i32 9
  %6124 = getelementptr inbounds %struct.Reg, %struct.Reg* %6123, i32 0, i32 0
  %RSI.i588 = bitcast %union.anon* %6124 to i64*
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6126 = getelementptr inbounds %struct.GPR, %struct.GPR* %6125, i32 0, i32 15
  %6127 = getelementptr inbounds %struct.Reg, %struct.Reg* %6126, i32 0, i32 0
  %RBP.i589 = bitcast %union.anon* %6127 to i64*
  %6128 = load i64, i64* %RBP.i589
  %6129 = sub i64 %6128, 200
  %6130 = load i64, i64* %PC.i587
  %6131 = add i64 %6130, 6
  store i64 %6131, i64* %PC.i587
  %6132 = inttoptr i64 %6129 to i32*
  %6133 = load i32, i32* %6132
  %6134 = zext i32 %6133 to i64
  store i64 %6134, i64* %RSI.i588, align 8
  store %struct.Memory* %loadMem_403fae, %struct.Memory** %MEMORY
  %loadMem_403fb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6136 = getelementptr inbounds %struct.GPR, %struct.GPR* %6135, i32 0, i32 33
  %6137 = getelementptr inbounds %struct.Reg, %struct.Reg* %6136, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %6137 to i64*
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6139 = getelementptr inbounds %struct.GPR, %struct.GPR* %6138, i32 0, i32 9
  %6140 = getelementptr inbounds %struct.Reg, %struct.Reg* %6139, i32 0, i32 0
  %RSI.i586 = bitcast %union.anon* %6140 to i64*
  %6141 = load i64, i64* %RSI.i586
  %6142 = load i64, i64* %PC.i585
  %6143 = add i64 %6142, 3
  store i64 %6143, i64* %PC.i585
  %6144 = trunc i64 %6141 to i32
  %6145 = add i32 7, %6144
  %6146 = zext i32 %6145 to i64
  store i64 %6146, i64* %RSI.i586, align 8
  %6147 = icmp ult i32 %6145, %6144
  %6148 = icmp ult i32 %6145, 7
  %6149 = or i1 %6147, %6148
  %6150 = zext i1 %6149 to i8
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6150, i8* %6151, align 1
  %6152 = and i32 %6145, 255
  %6153 = call i32 @llvm.ctpop.i32(i32 %6152)
  %6154 = trunc i32 %6153 to i8
  %6155 = and i8 %6154, 1
  %6156 = xor i8 %6155, 1
  %6157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6156, i8* %6157, align 1
  %6158 = xor i64 7, %6141
  %6159 = trunc i64 %6158 to i32
  %6160 = xor i32 %6159, %6145
  %6161 = lshr i32 %6160, 4
  %6162 = trunc i32 %6161 to i8
  %6163 = and i8 %6162, 1
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6163, i8* %6164, align 1
  %6165 = icmp eq i32 %6145, 0
  %6166 = zext i1 %6165 to i8
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6166, i8* %6167, align 1
  %6168 = lshr i32 %6145, 31
  %6169 = trunc i32 %6168 to i8
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6169, i8* %6170, align 1
  %6171 = lshr i32 %6144, 31
  %6172 = xor i32 %6168, %6171
  %6173 = add i32 %6172, %6168
  %6174 = icmp eq i32 %6173, 2
  %6175 = zext i1 %6174 to i8
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6175, i8* %6176, align 1
  store %struct.Memory* %loadMem_403fb4, %struct.Memory** %MEMORY
  %loadMem_403fb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6178 = getelementptr inbounds %struct.GPR, %struct.GPR* %6177, i32 0, i32 33
  %6179 = getelementptr inbounds %struct.Reg, %struct.Reg* %6178, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %6179 to i64*
  %6180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6181 = getelementptr inbounds %struct.GPR, %struct.GPR* %6180, i32 0, i32 9
  %6182 = getelementptr inbounds %struct.Reg, %struct.Reg* %6181, i32 0, i32 0
  %RSI.i583 = bitcast %union.anon* %6182 to i64*
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6184 = getelementptr inbounds %struct.GPR, %struct.GPR* %6183, i32 0, i32 15
  %6185 = getelementptr inbounds %struct.Reg, %struct.Reg* %6184, i32 0, i32 0
  %RBP.i584 = bitcast %union.anon* %6185 to i64*
  %6186 = load i64, i64* %RSI.i583
  %6187 = load i64, i64* %RBP.i584
  %6188 = sub i64 %6187, 148
  %6189 = load i64, i64* %PC.i582
  %6190 = add i64 %6189, 6
  store i64 %6190, i64* %PC.i582
  %6191 = trunc i64 %6186 to i32
  %6192 = inttoptr i64 %6188 to i32*
  %6193 = load i32, i32* %6192
  %6194 = add i32 %6193, %6191
  %6195 = zext i32 %6194 to i64
  store i64 %6195, i64* %RSI.i583, align 8
  %6196 = icmp ult i32 %6194, %6191
  %6197 = icmp ult i32 %6194, %6193
  %6198 = or i1 %6196, %6197
  %6199 = zext i1 %6198 to i8
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6199, i8* %6200, align 1
  %6201 = and i32 %6194, 255
  %6202 = call i32 @llvm.ctpop.i32(i32 %6201)
  %6203 = trunc i32 %6202 to i8
  %6204 = and i8 %6203, 1
  %6205 = xor i8 %6204, 1
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6205, i8* %6206, align 1
  %6207 = xor i32 %6193, %6191
  %6208 = xor i32 %6207, %6194
  %6209 = lshr i32 %6208, 4
  %6210 = trunc i32 %6209 to i8
  %6211 = and i8 %6210, 1
  %6212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6211, i8* %6212, align 1
  %6213 = icmp eq i32 %6194, 0
  %6214 = zext i1 %6213 to i8
  %6215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6214, i8* %6215, align 1
  %6216 = lshr i32 %6194, 31
  %6217 = trunc i32 %6216 to i8
  %6218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6217, i8* %6218, align 1
  %6219 = lshr i32 %6191, 31
  %6220 = lshr i32 %6193, 31
  %6221 = xor i32 %6216, %6219
  %6222 = xor i32 %6216, %6220
  %6223 = add i32 %6221, %6222
  %6224 = icmp eq i32 %6223, 2
  %6225 = zext i1 %6224 to i8
  %6226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6225, i8* %6226, align 1
  store %struct.Memory* %loadMem_403fb7, %struct.Memory** %MEMORY
  %loadMem_403fbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6228 = getelementptr inbounds %struct.GPR, %struct.GPR* %6227, i32 0, i32 33
  %6229 = getelementptr inbounds %struct.Reg, %struct.Reg* %6228, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %6229 to i64*
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6231 = getelementptr inbounds %struct.GPR, %struct.GPR* %6230, i32 0, i32 9
  %6232 = getelementptr inbounds %struct.Reg, %struct.Reg* %6231, i32 0, i32 0
  %ESI.i580 = bitcast %union.anon* %6232 to i32*
  %6233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6234 = getelementptr inbounds %struct.GPR, %struct.GPR* %6233, i32 0, i32 7
  %6235 = getelementptr inbounds %struct.Reg, %struct.Reg* %6234, i32 0, i32 0
  %RDX.i581 = bitcast %union.anon* %6235 to i64*
  %6236 = load i32, i32* %ESI.i580
  %6237 = zext i32 %6236 to i64
  %6238 = load i64, i64* %PC.i579
  %6239 = add i64 %6238, 3
  store i64 %6239, i64* %PC.i579
  %6240 = shl i64 %6237, 32
  %6241 = ashr exact i64 %6240, 32
  store i64 %6241, i64* %RDX.i581, align 8
  store %struct.Memory* %loadMem_403fbd, %struct.Memory** %MEMORY
  %loadMem_403fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6243 = getelementptr inbounds %struct.GPR, %struct.GPR* %6242, i32 0, i32 33
  %6244 = getelementptr inbounds %struct.Reg, %struct.Reg* %6243, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %6244 to i64*
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6246 = getelementptr inbounds %struct.GPR, %struct.GPR* %6245, i32 0, i32 5
  %6247 = getelementptr inbounds %struct.Reg, %struct.Reg* %6246, i32 0, i32 0
  %RCX.i576 = bitcast %union.anon* %6247 to i64*
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6249 = getelementptr inbounds %struct.GPR, %struct.GPR* %6248, i32 0, i32 7
  %6250 = getelementptr inbounds %struct.Reg, %struct.Reg* %6249, i32 0, i32 0
  %RDX.i577 = bitcast %union.anon* %6250 to i64*
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6252 = getelementptr inbounds %struct.GPR, %struct.GPR* %6251, i32 0, i32 9
  %6253 = getelementptr inbounds %struct.Reg, %struct.Reg* %6252, i32 0, i32 0
  %RSI.i578 = bitcast %union.anon* %6253 to i64*
  %6254 = load i64, i64* %RCX.i576
  %6255 = load i64, i64* %RDX.i577
  %6256 = mul i64 %6255, 2
  %6257 = add i64 %6256, %6254
  %6258 = load i64, i64* %PC.i575
  %6259 = add i64 %6258, 4
  store i64 %6259, i64* %PC.i575
  %6260 = inttoptr i64 %6257 to i16*
  %6261 = load i16, i16* %6260
  %6262 = zext i16 %6261 to i64
  store i64 %6262, i64* %RSI.i578, align 8
  store %struct.Memory* %loadMem_403fc0, %struct.Memory** %MEMORY
  %loadMem_403fc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6264 = getelementptr inbounds %struct.GPR, %struct.GPR* %6263, i32 0, i32 33
  %6265 = getelementptr inbounds %struct.Reg, %struct.Reg* %6264, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %6265 to i64*
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6267 = getelementptr inbounds %struct.GPR, %struct.GPR* %6266, i32 0, i32 5
  %6268 = getelementptr inbounds %struct.Reg, %struct.Reg* %6267, i32 0, i32 0
  %RCX.i573 = bitcast %union.anon* %6268 to i64*
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6270 = getelementptr inbounds %struct.GPR, %struct.GPR* %6269, i32 0, i32 15
  %6271 = getelementptr inbounds %struct.Reg, %struct.Reg* %6270, i32 0, i32 0
  %RBP.i574 = bitcast %union.anon* %6271 to i64*
  %6272 = load i64, i64* %RBP.i574
  %6273 = sub i64 %6272, 184
  %6274 = load i64, i64* %PC.i572
  %6275 = add i64 %6274, 7
  store i64 %6275, i64* %PC.i572
  %6276 = inttoptr i64 %6273 to i64*
  %6277 = load i64, i64* %6276
  store i64 %6277, i64* %RCX.i573, align 8
  store %struct.Memory* %loadMem_403fc4, %struct.Memory** %MEMORY
  %loadMem_403fcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6279 = getelementptr inbounds %struct.GPR, %struct.GPR* %6278, i32 0, i32 33
  %6280 = getelementptr inbounds %struct.Reg, %struct.Reg* %6279, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %6280 to i64*
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6282 = getelementptr inbounds %struct.GPR, %struct.GPR* %6281, i32 0, i32 7
  %6283 = getelementptr inbounds %struct.Reg, %struct.Reg* %6282, i32 0, i32 0
  %RDX.i570 = bitcast %union.anon* %6283 to i64*
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6285 = getelementptr inbounds %struct.GPR, %struct.GPR* %6284, i32 0, i32 15
  %6286 = getelementptr inbounds %struct.Reg, %struct.Reg* %6285, i32 0, i32 0
  %RBP.i571 = bitcast %union.anon* %6286 to i64*
  %6287 = load i64, i64* %RBP.i571
  %6288 = sub i64 %6287, 196
  %6289 = load i64, i64* %PC.i569
  %6290 = add i64 %6289, 7
  store i64 %6290, i64* %PC.i569
  %6291 = inttoptr i64 %6288 to i32*
  %6292 = load i32, i32* %6291
  %6293 = sext i32 %6292 to i64
  store i64 %6293, i64* %RDX.i570, align 8
  store %struct.Memory* %loadMem_403fcb, %struct.Memory** %MEMORY
  %loadMem_403fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6295 = getelementptr inbounds %struct.GPR, %struct.GPR* %6294, i32 0, i32 33
  %6296 = getelementptr inbounds %struct.Reg, %struct.Reg* %6295, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %6296 to i64*
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6298 = getelementptr inbounds %struct.GPR, %struct.GPR* %6297, i32 0, i32 5
  %6299 = getelementptr inbounds %struct.Reg, %struct.Reg* %6298, i32 0, i32 0
  %RCX.i567 = bitcast %union.anon* %6299 to i64*
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6301 = getelementptr inbounds %struct.GPR, %struct.GPR* %6300, i32 0, i32 7
  %6302 = getelementptr inbounds %struct.Reg, %struct.Reg* %6301, i32 0, i32 0
  %RDX.i568 = bitcast %union.anon* %6302 to i64*
  %6303 = load i64, i64* %RCX.i567
  %6304 = load i64, i64* %RDX.i568
  %6305 = mul i64 %6304, 8
  %6306 = add i64 %6305, %6303
  %6307 = load i64, i64* %PC.i566
  %6308 = add i64 %6307, 4
  store i64 %6308, i64* %PC.i566
  %6309 = inttoptr i64 %6306 to i64*
  %6310 = load i64, i64* %6309
  store i64 %6310, i64* %RCX.i567, align 8
  store %struct.Memory* %loadMem_403fd2, %struct.Memory** %MEMORY
  %loadMem_403fd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6312 = getelementptr inbounds %struct.GPR, %struct.GPR* %6311, i32 0, i32 33
  %6313 = getelementptr inbounds %struct.Reg, %struct.Reg* %6312, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %6313 to i64*
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6315 = getelementptr inbounds %struct.GPR, %struct.GPR* %6314, i32 0, i32 11
  %6316 = getelementptr inbounds %struct.Reg, %struct.Reg* %6315, i32 0, i32 0
  %RDI.i564 = bitcast %union.anon* %6316 to i64*
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6318 = getelementptr inbounds %struct.GPR, %struct.GPR* %6317, i32 0, i32 15
  %6319 = getelementptr inbounds %struct.Reg, %struct.Reg* %6318, i32 0, i32 0
  %RBP.i565 = bitcast %union.anon* %6319 to i64*
  %6320 = load i64, i64* %RBP.i565
  %6321 = sub i64 %6320, 200
  %6322 = load i64, i64* %PC.i563
  %6323 = add i64 %6322, 6
  store i64 %6323, i64* %PC.i563
  %6324 = inttoptr i64 %6321 to i32*
  %6325 = load i32, i32* %6324
  %6326 = zext i32 %6325 to i64
  store i64 %6326, i64* %RDI.i564, align 8
  store %struct.Memory* %loadMem_403fd6, %struct.Memory** %MEMORY
  %loadMem_403fdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6328 = getelementptr inbounds %struct.GPR, %struct.GPR* %6327, i32 0, i32 33
  %6329 = getelementptr inbounds %struct.Reg, %struct.Reg* %6328, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %6329 to i64*
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 11
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %RDI.i562 = bitcast %union.anon* %6332 to i64*
  %6333 = load i64, i64* %RDI.i562
  %6334 = load i64, i64* %PC.i561
  %6335 = add i64 %6334, 3
  store i64 %6335, i64* %PC.i561
  %6336 = trunc i64 %6333 to i32
  %6337 = add i32 7, %6336
  %6338 = zext i32 %6337 to i64
  store i64 %6338, i64* %RDI.i562, align 8
  %6339 = icmp ult i32 %6337, %6336
  %6340 = icmp ult i32 %6337, 7
  %6341 = or i1 %6339, %6340
  %6342 = zext i1 %6341 to i8
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6342, i8* %6343, align 1
  %6344 = and i32 %6337, 255
  %6345 = call i32 @llvm.ctpop.i32(i32 %6344)
  %6346 = trunc i32 %6345 to i8
  %6347 = and i8 %6346, 1
  %6348 = xor i8 %6347, 1
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6348, i8* %6349, align 1
  %6350 = xor i64 7, %6333
  %6351 = trunc i64 %6350 to i32
  %6352 = xor i32 %6351, %6337
  %6353 = lshr i32 %6352, 4
  %6354 = trunc i32 %6353 to i8
  %6355 = and i8 %6354, 1
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6355, i8* %6356, align 1
  %6357 = icmp eq i32 %6337, 0
  %6358 = zext i1 %6357 to i8
  %6359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6358, i8* %6359, align 1
  %6360 = lshr i32 %6337, 31
  %6361 = trunc i32 %6360 to i8
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6361, i8* %6362, align 1
  %6363 = lshr i32 %6336, 31
  %6364 = xor i32 %6360, %6363
  %6365 = add i32 %6364, %6360
  %6366 = icmp eq i32 %6365, 2
  %6367 = zext i1 %6366 to i8
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6367, i8* %6368, align 1
  store %struct.Memory* %loadMem_403fdc, %struct.Memory** %MEMORY
  %loadMem_403fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6370 = getelementptr inbounds %struct.GPR, %struct.GPR* %6369, i32 0, i32 33
  %6371 = getelementptr inbounds %struct.Reg, %struct.Reg* %6370, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %6371 to i64*
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6373 = getelementptr inbounds %struct.GPR, %struct.GPR* %6372, i32 0, i32 11
  %6374 = getelementptr inbounds %struct.Reg, %struct.Reg* %6373, i32 0, i32 0
  %RDI.i559 = bitcast %union.anon* %6374 to i64*
  %6375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6376 = getelementptr inbounds %struct.GPR, %struct.GPR* %6375, i32 0, i32 15
  %6377 = getelementptr inbounds %struct.Reg, %struct.Reg* %6376, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %6377 to i64*
  %6378 = load i64, i64* %RDI.i559
  %6379 = load i64, i64* %RBP.i560
  %6380 = sub i64 %6379, 148
  %6381 = load i64, i64* %PC.i558
  %6382 = add i64 %6381, 6
  store i64 %6382, i64* %PC.i558
  %6383 = trunc i64 %6378 to i32
  %6384 = inttoptr i64 %6380 to i32*
  %6385 = load i32, i32* %6384
  %6386 = sub i32 %6383, %6385
  %6387 = zext i32 %6386 to i64
  store i64 %6387, i64* %RDI.i559, align 8
  %6388 = icmp ult i32 %6383, %6385
  %6389 = zext i1 %6388 to i8
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6389, i8* %6390, align 1
  %6391 = and i32 %6386, 255
  %6392 = call i32 @llvm.ctpop.i32(i32 %6391)
  %6393 = trunc i32 %6392 to i8
  %6394 = and i8 %6393, 1
  %6395 = xor i8 %6394, 1
  %6396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6395, i8* %6396, align 1
  %6397 = xor i32 %6385, %6383
  %6398 = xor i32 %6397, %6386
  %6399 = lshr i32 %6398, 4
  %6400 = trunc i32 %6399 to i8
  %6401 = and i8 %6400, 1
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6401, i8* %6402, align 1
  %6403 = icmp eq i32 %6386, 0
  %6404 = zext i1 %6403 to i8
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6404, i8* %6405, align 1
  %6406 = lshr i32 %6386, 31
  %6407 = trunc i32 %6406 to i8
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6407, i8* %6408, align 1
  %6409 = lshr i32 %6383, 31
  %6410 = lshr i32 %6385, 31
  %6411 = xor i32 %6410, %6409
  %6412 = xor i32 %6406, %6409
  %6413 = add i32 %6412, %6411
  %6414 = icmp eq i32 %6413, 2
  %6415 = zext i1 %6414 to i8
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6415, i8* %6416, align 1
  store %struct.Memory* %loadMem_403fdf, %struct.Memory** %MEMORY
  %loadMem_403fe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6418 = getelementptr inbounds %struct.GPR, %struct.GPR* %6417, i32 0, i32 33
  %6419 = getelementptr inbounds %struct.Reg, %struct.Reg* %6418, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %6419 to i64*
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6421 = getelementptr inbounds %struct.GPR, %struct.GPR* %6420, i32 0, i32 11
  %6422 = getelementptr inbounds %struct.Reg, %struct.Reg* %6421, i32 0, i32 0
  %EDI.i556 = bitcast %union.anon* %6422 to i32*
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 7
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %RDX.i557 = bitcast %union.anon* %6425 to i64*
  %6426 = load i32, i32* %EDI.i556
  %6427 = zext i32 %6426 to i64
  %6428 = load i64, i64* %PC.i555
  %6429 = add i64 %6428, 3
  store i64 %6429, i64* %PC.i555
  %6430 = shl i64 %6427, 32
  %6431 = ashr exact i64 %6430, 32
  store i64 %6431, i64* %RDX.i557, align 8
  store %struct.Memory* %loadMem_403fe5, %struct.Memory** %MEMORY
  %loadMem_403fe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6433 = getelementptr inbounds %struct.GPR, %struct.GPR* %6432, i32 0, i32 33
  %6434 = getelementptr inbounds %struct.Reg, %struct.Reg* %6433, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %6434 to i64*
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6436 = getelementptr inbounds %struct.GPR, %struct.GPR* %6435, i32 0, i32 5
  %6437 = getelementptr inbounds %struct.Reg, %struct.Reg* %6436, i32 0, i32 0
  %RCX.i552 = bitcast %union.anon* %6437 to i64*
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6439 = getelementptr inbounds %struct.GPR, %struct.GPR* %6438, i32 0, i32 7
  %6440 = getelementptr inbounds %struct.Reg, %struct.Reg* %6439, i32 0, i32 0
  %RDX.i553 = bitcast %union.anon* %6440 to i64*
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 11
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %RDI.i554 = bitcast %union.anon* %6443 to i64*
  %6444 = load i64, i64* %RCX.i552
  %6445 = load i64, i64* %RDX.i553
  %6446 = mul i64 %6445, 2
  %6447 = add i64 %6446, %6444
  %6448 = load i64, i64* %PC.i551
  %6449 = add i64 %6448, 4
  store i64 %6449, i64* %PC.i551
  %6450 = inttoptr i64 %6447 to i16*
  %6451 = load i16, i16* %6450
  %6452 = zext i16 %6451 to i64
  store i64 %6452, i64* %RDI.i554, align 8
  store %struct.Memory* %loadMem_403fe8, %struct.Memory** %MEMORY
  %loadMem_403fec = load %struct.Memory*, %struct.Memory** %MEMORY
  %6453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6454 = getelementptr inbounds %struct.GPR, %struct.GPR* %6453, i32 0, i32 33
  %6455 = getelementptr inbounds %struct.Reg, %struct.Reg* %6454, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %6455 to i64*
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6457 = getelementptr inbounds %struct.GPR, %struct.GPR* %6456, i32 0, i32 11
  %6458 = getelementptr inbounds %struct.Reg, %struct.Reg* %6457, i32 0, i32 0
  %EDI.i549 = bitcast %union.anon* %6458 to i32*
  %6459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6460 = getelementptr inbounds %struct.GPR, %struct.GPR* %6459, i32 0, i32 9
  %6461 = getelementptr inbounds %struct.Reg, %struct.Reg* %6460, i32 0, i32 0
  %RSI.i550 = bitcast %union.anon* %6461 to i64*
  %6462 = load i64, i64* %RSI.i550
  %6463 = load i32, i32* %EDI.i549
  %6464 = zext i32 %6463 to i64
  %6465 = load i64, i64* %PC.i548
  %6466 = add i64 %6465, 2
  store i64 %6466, i64* %PC.i548
  %6467 = trunc i64 %6462 to i32
  %6468 = sub i32 %6467, %6463
  %6469 = zext i32 %6468 to i64
  store i64 %6469, i64* %RSI.i550, align 8
  %6470 = icmp ult i32 %6467, %6463
  %6471 = zext i1 %6470 to i8
  %6472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6471, i8* %6472, align 1
  %6473 = and i32 %6468, 255
  %6474 = call i32 @llvm.ctpop.i32(i32 %6473)
  %6475 = trunc i32 %6474 to i8
  %6476 = and i8 %6475, 1
  %6477 = xor i8 %6476, 1
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6477, i8* %6478, align 1
  %6479 = xor i64 %6464, %6462
  %6480 = trunc i64 %6479 to i32
  %6481 = xor i32 %6480, %6468
  %6482 = lshr i32 %6481, 4
  %6483 = trunc i32 %6482 to i8
  %6484 = and i8 %6483, 1
  %6485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6484, i8* %6485, align 1
  %6486 = icmp eq i32 %6468, 0
  %6487 = zext i1 %6486 to i8
  %6488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6487, i8* %6488, align 1
  %6489 = lshr i32 %6468, 31
  %6490 = trunc i32 %6489 to i8
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6490, i8* %6491, align 1
  %6492 = lshr i32 %6467, 31
  %6493 = lshr i32 %6463, 31
  %6494 = xor i32 %6493, %6492
  %6495 = xor i32 %6489, %6492
  %6496 = add i32 %6495, %6494
  %6497 = icmp eq i32 %6496, 2
  %6498 = zext i1 %6497 to i8
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6498, i8* %6499, align 1
  store %struct.Memory* %loadMem_403fec, %struct.Memory** %MEMORY
  %loadMem_403fee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6501 = getelementptr inbounds %struct.GPR, %struct.GPR* %6500, i32 0, i32 33
  %6502 = getelementptr inbounds %struct.Reg, %struct.Reg* %6501, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %6502 to i64*
  %6503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6504 = getelementptr inbounds %struct.GPR, %struct.GPR* %6503, i32 0, i32 9
  %6505 = getelementptr inbounds %struct.Reg, %struct.Reg* %6504, i32 0, i32 0
  %ESI.i546 = bitcast %union.anon* %6505 to i32*
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6507 = getelementptr inbounds %struct.GPR, %struct.GPR* %6506, i32 0, i32 1
  %6508 = getelementptr inbounds %struct.Reg, %struct.Reg* %6507, i32 0, i32 0
  %RAX.i547 = bitcast %union.anon* %6508 to i64*
  %6509 = load i64, i64* %RAX.i547
  %6510 = load i32, i32* %ESI.i546
  %6511 = zext i32 %6510 to i64
  %6512 = load i64, i64* %PC.i545
  %6513 = add i64 %6512, 3
  store i64 %6513, i64* %PC.i545
  %6514 = shl i64 %6509, 32
  %6515 = ashr exact i64 %6514, 32
  %6516 = shl i64 %6511, 32
  %6517 = ashr exact i64 %6516, 32
  %6518 = mul i64 %6517, %6515
  %6519 = trunc i64 %6518 to i32
  %6520 = and i64 %6518, 4294967295
  store i64 %6520, i64* %RAX.i547, align 8
  %6521 = shl i64 %6518, 32
  %6522 = ashr exact i64 %6521, 32
  %6523 = icmp ne i64 %6522, %6518
  %6524 = zext i1 %6523 to i8
  %6525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6524, i8* %6525, align 1
  %6526 = and i32 %6519, 255
  %6527 = call i32 @llvm.ctpop.i32(i32 %6526)
  %6528 = trunc i32 %6527 to i8
  %6529 = and i8 %6528, 1
  %6530 = xor i8 %6529, 1
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6530, i8* %6531, align 1
  %6532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6532, align 1
  %6533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6533, align 1
  %6534 = lshr i32 %6519, 31
  %6535 = trunc i32 %6534 to i8
  %6536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6535, i8* %6536, align 1
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6524, i8* %6537, align 1
  store %struct.Memory* %loadMem_403fee, %struct.Memory** %MEMORY
  %loadMem_403ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6539 = getelementptr inbounds %struct.GPR, %struct.GPR* %6538, i32 0, i32 33
  %6540 = getelementptr inbounds %struct.Reg, %struct.Reg* %6539, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %6540 to i64*
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6542 = getelementptr inbounds %struct.GPR, %struct.GPR* %6541, i32 0, i32 1
  %6543 = getelementptr inbounds %struct.Reg, %struct.Reg* %6542, i32 0, i32 0
  %RAX.i543 = bitcast %union.anon* %6543 to i64*
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6545 = getelementptr inbounds %struct.GPR, %struct.GPR* %6544, i32 0, i32 15
  %6546 = getelementptr inbounds %struct.Reg, %struct.Reg* %6545, i32 0, i32 0
  %RBP.i544 = bitcast %union.anon* %6546 to i64*
  %6547 = load i64, i64* %RAX.i543
  %6548 = load i64, i64* %RBP.i544
  %6549 = sub i64 %6548, 156
  %6550 = load i64, i64* %PC.i542
  %6551 = add i64 %6550, 6
  store i64 %6551, i64* %PC.i542
  %6552 = trunc i64 %6547 to i32
  %6553 = inttoptr i64 %6549 to i32*
  %6554 = load i32, i32* %6553
  %6555 = add i32 %6554, %6552
  %6556 = zext i32 %6555 to i64
  store i64 %6556, i64* %RAX.i543, align 8
  %6557 = icmp ult i32 %6555, %6552
  %6558 = icmp ult i32 %6555, %6554
  %6559 = or i1 %6557, %6558
  %6560 = zext i1 %6559 to i8
  %6561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6560, i8* %6561, align 1
  %6562 = and i32 %6555, 255
  %6563 = call i32 @llvm.ctpop.i32(i32 %6562)
  %6564 = trunc i32 %6563 to i8
  %6565 = and i8 %6564, 1
  %6566 = xor i8 %6565, 1
  %6567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6566, i8* %6567, align 1
  %6568 = xor i32 %6554, %6552
  %6569 = xor i32 %6568, %6555
  %6570 = lshr i32 %6569, 4
  %6571 = trunc i32 %6570 to i8
  %6572 = and i8 %6571, 1
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6572, i8* %6573, align 1
  %6574 = icmp eq i32 %6555, 0
  %6575 = zext i1 %6574 to i8
  %6576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6575, i8* %6576, align 1
  %6577 = lshr i32 %6555, 31
  %6578 = trunc i32 %6577 to i8
  %6579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6578, i8* %6579, align 1
  %6580 = lshr i32 %6552, 31
  %6581 = lshr i32 %6554, 31
  %6582 = xor i32 %6577, %6580
  %6583 = xor i32 %6577, %6581
  %6584 = add i32 %6582, %6583
  %6585 = icmp eq i32 %6584, 2
  %6586 = zext i1 %6585 to i8
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6586, i8* %6587, align 1
  store %struct.Memory* %loadMem_403ff1, %struct.Memory** %MEMORY
  %loadMem_403ff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6589 = getelementptr inbounds %struct.GPR, %struct.GPR* %6588, i32 0, i32 33
  %6590 = getelementptr inbounds %struct.Reg, %struct.Reg* %6589, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %6590 to i64*
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6592 = getelementptr inbounds %struct.GPR, %struct.GPR* %6591, i32 0, i32 1
  %6593 = getelementptr inbounds %struct.Reg, %struct.Reg* %6592, i32 0, i32 0
  %EAX.i540 = bitcast %union.anon* %6593 to i32*
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6595 = getelementptr inbounds %struct.GPR, %struct.GPR* %6594, i32 0, i32 15
  %6596 = getelementptr inbounds %struct.Reg, %struct.Reg* %6595, i32 0, i32 0
  %RBP.i541 = bitcast %union.anon* %6596 to i64*
  %6597 = load i64, i64* %RBP.i541
  %6598 = sub i64 %6597, 156
  %6599 = load i32, i32* %EAX.i540
  %6600 = zext i32 %6599 to i64
  %6601 = load i64, i64* %PC.i539
  %6602 = add i64 %6601, 6
  store i64 %6602, i64* %PC.i539
  %6603 = inttoptr i64 %6598 to i32*
  store i32 %6599, i32* %6603
  store %struct.Memory* %loadMem_403ff7, %struct.Memory** %MEMORY
  %loadMem_403ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6605 = getelementptr inbounds %struct.GPR, %struct.GPR* %6604, i32 0, i32 33
  %6606 = getelementptr inbounds %struct.Reg, %struct.Reg* %6605, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %6606 to i64*
  %6607 = load i64, i64* %PC.i538
  %6608 = add i64 %6607, 97
  %6609 = load i64, i64* %PC.i538
  %6610 = add i64 %6609, 5
  store i64 %6610, i64* %PC.i538
  %6611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6608, i64* %6611, align 8
  store %struct.Memory* %loadMem_403ffd, %struct.Memory** %MEMORY
  br label %block_.L_40405e

block_.L_404002:                                  ; preds = %block_403f89
  %loadMem_404002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6613 = getelementptr inbounds %struct.GPR, %struct.GPR* %6612, i32 0, i32 33
  %6614 = getelementptr inbounds %struct.Reg, %struct.Reg* %6613, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %6614 to i64*
  %6615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6616 = getelementptr inbounds %struct.GPR, %struct.GPR* %6615, i32 0, i32 1
  %6617 = getelementptr inbounds %struct.Reg, %struct.Reg* %6616, i32 0, i32 0
  %RAX.i536 = bitcast %union.anon* %6617 to i64*
  %6618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6619 = getelementptr inbounds %struct.GPR, %struct.GPR* %6618, i32 0, i32 15
  %6620 = getelementptr inbounds %struct.Reg, %struct.Reg* %6619, i32 0, i32 0
  %RBP.i537 = bitcast %union.anon* %6620 to i64*
  %6621 = load i64, i64* %RBP.i537
  %6622 = sub i64 %6621, 148
  %6623 = load i64, i64* %PC.i535
  %6624 = add i64 %6623, 6
  store i64 %6624, i64* %PC.i535
  %6625 = inttoptr i64 %6622 to i32*
  %6626 = load i32, i32* %6625
  %6627 = zext i32 %6626 to i64
  store i64 %6627, i64* %RAX.i536, align 8
  store %struct.Memory* %loadMem_404002, %struct.Memory** %MEMORY
  %loadMem_404008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6629 = getelementptr inbounds %struct.GPR, %struct.GPR* %6628, i32 0, i32 33
  %6630 = getelementptr inbounds %struct.Reg, %struct.Reg* %6629, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %6630 to i64*
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6632 = getelementptr inbounds %struct.GPR, %struct.GPR* %6631, i32 0, i32 5
  %6633 = getelementptr inbounds %struct.Reg, %struct.Reg* %6632, i32 0, i32 0
  %RCX.i533 = bitcast %union.anon* %6633 to i64*
  %6634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6635 = getelementptr inbounds %struct.GPR, %struct.GPR* %6634, i32 0, i32 15
  %6636 = getelementptr inbounds %struct.Reg, %struct.Reg* %6635, i32 0, i32 0
  %RBP.i534 = bitcast %union.anon* %6636 to i64*
  %6637 = load i64, i64* %RBP.i534
  %6638 = sub i64 %6637, 184
  %6639 = load i64, i64* %PC.i532
  %6640 = add i64 %6639, 7
  store i64 %6640, i64* %PC.i532
  %6641 = inttoptr i64 %6638 to i64*
  %6642 = load i64, i64* %6641
  store i64 %6642, i64* %RCX.i533, align 8
  store %struct.Memory* %loadMem_404008, %struct.Memory** %MEMORY
  %loadMem_40400f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6644 = getelementptr inbounds %struct.GPR, %struct.GPR* %6643, i32 0, i32 33
  %6645 = getelementptr inbounds %struct.Reg, %struct.Reg* %6644, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %6645 to i64*
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6647 = getelementptr inbounds %struct.GPR, %struct.GPR* %6646, i32 0, i32 7
  %6648 = getelementptr inbounds %struct.Reg, %struct.Reg* %6647, i32 0, i32 0
  %RDX.i530 = bitcast %union.anon* %6648 to i64*
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 15
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %RBP.i531 = bitcast %union.anon* %6651 to i64*
  %6652 = load i64, i64* %RBP.i531
  %6653 = sub i64 %6652, 196
  %6654 = load i64, i64* %PC.i529
  %6655 = add i64 %6654, 7
  store i64 %6655, i64* %PC.i529
  %6656 = inttoptr i64 %6653 to i32*
  %6657 = load i32, i32* %6656
  %6658 = sext i32 %6657 to i64
  store i64 %6658, i64* %RDX.i530, align 8
  store %struct.Memory* %loadMem_40400f, %struct.Memory** %MEMORY
  %loadMem_404016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6660 = getelementptr inbounds %struct.GPR, %struct.GPR* %6659, i32 0, i32 33
  %6661 = getelementptr inbounds %struct.Reg, %struct.Reg* %6660, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %6661 to i64*
  %6662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6663 = getelementptr inbounds %struct.GPR, %struct.GPR* %6662, i32 0, i32 5
  %6664 = getelementptr inbounds %struct.Reg, %struct.Reg* %6663, i32 0, i32 0
  %RCX.i527 = bitcast %union.anon* %6664 to i64*
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6666 = getelementptr inbounds %struct.GPR, %struct.GPR* %6665, i32 0, i32 7
  %6667 = getelementptr inbounds %struct.Reg, %struct.Reg* %6666, i32 0, i32 0
  %RDX.i528 = bitcast %union.anon* %6667 to i64*
  %6668 = load i64, i64* %RCX.i527
  %6669 = load i64, i64* %RDX.i528
  %6670 = mul i64 %6669, 8
  %6671 = add i64 %6670, %6668
  %6672 = load i64, i64* %PC.i526
  %6673 = add i64 %6672, 4
  store i64 %6673, i64* %PC.i526
  %6674 = inttoptr i64 %6671 to i64*
  %6675 = load i64, i64* %6674
  store i64 %6675, i64* %RCX.i527, align 8
  store %struct.Memory* %loadMem_404016, %struct.Memory** %MEMORY
  %loadMem_40401a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6677 = getelementptr inbounds %struct.GPR, %struct.GPR* %6676, i32 0, i32 33
  %6678 = getelementptr inbounds %struct.Reg, %struct.Reg* %6677, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %6678 to i64*
  %6679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6680 = getelementptr inbounds %struct.GPR, %struct.GPR* %6679, i32 0, i32 9
  %6681 = getelementptr inbounds %struct.Reg, %struct.Reg* %6680, i32 0, i32 0
  %RSI.i524 = bitcast %union.anon* %6681 to i64*
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6683 = getelementptr inbounds %struct.GPR, %struct.GPR* %6682, i32 0, i32 15
  %6684 = getelementptr inbounds %struct.Reg, %struct.Reg* %6683, i32 0, i32 0
  %RBP.i525 = bitcast %union.anon* %6684 to i64*
  %6685 = load i64, i64* %RBP.i525
  %6686 = sub i64 %6685, 200
  %6687 = load i64, i64* %PC.i523
  %6688 = add i64 %6687, 6
  store i64 %6688, i64* %PC.i523
  %6689 = inttoptr i64 %6686 to i32*
  %6690 = load i32, i32* %6689
  %6691 = zext i32 %6690 to i64
  store i64 %6691, i64* %RSI.i524, align 8
  store %struct.Memory* %loadMem_40401a, %struct.Memory** %MEMORY
  %loadMem_404020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6693 = getelementptr inbounds %struct.GPR, %struct.GPR* %6692, i32 0, i32 33
  %6694 = getelementptr inbounds %struct.Reg, %struct.Reg* %6693, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %6694 to i64*
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6696 = getelementptr inbounds %struct.GPR, %struct.GPR* %6695, i32 0, i32 9
  %6697 = getelementptr inbounds %struct.Reg, %struct.Reg* %6696, i32 0, i32 0
  %RSI.i522 = bitcast %union.anon* %6697 to i64*
  %6698 = load i64, i64* %RSI.i522
  %6699 = load i64, i64* %PC.i521
  %6700 = add i64 %6699, 3
  store i64 %6700, i64* %PC.i521
  %6701 = trunc i64 %6698 to i32
  %6702 = add i32 7, %6701
  %6703 = zext i32 %6702 to i64
  store i64 %6703, i64* %RSI.i522, align 8
  %6704 = icmp ult i32 %6702, %6701
  %6705 = icmp ult i32 %6702, 7
  %6706 = or i1 %6704, %6705
  %6707 = zext i1 %6706 to i8
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6707, i8* %6708, align 1
  %6709 = and i32 %6702, 255
  %6710 = call i32 @llvm.ctpop.i32(i32 %6709)
  %6711 = trunc i32 %6710 to i8
  %6712 = and i8 %6711, 1
  %6713 = xor i8 %6712, 1
  %6714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6713, i8* %6714, align 1
  %6715 = xor i64 7, %6698
  %6716 = trunc i64 %6715 to i32
  %6717 = xor i32 %6716, %6702
  %6718 = lshr i32 %6717, 4
  %6719 = trunc i32 %6718 to i8
  %6720 = and i8 %6719, 1
  %6721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6720, i8* %6721, align 1
  %6722 = icmp eq i32 %6702, 0
  %6723 = zext i1 %6722 to i8
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6723, i8* %6724, align 1
  %6725 = lshr i32 %6702, 31
  %6726 = trunc i32 %6725 to i8
  %6727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6726, i8* %6727, align 1
  %6728 = lshr i32 %6701, 31
  %6729 = xor i32 %6725, %6728
  %6730 = add i32 %6729, %6725
  %6731 = icmp eq i32 %6730, 2
  %6732 = zext i1 %6731 to i8
  %6733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6732, i8* %6733, align 1
  store %struct.Memory* %loadMem_404020, %struct.Memory** %MEMORY
  %loadMem_404023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6735 = getelementptr inbounds %struct.GPR, %struct.GPR* %6734, i32 0, i32 33
  %6736 = getelementptr inbounds %struct.Reg, %struct.Reg* %6735, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %6736 to i64*
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6738 = getelementptr inbounds %struct.GPR, %struct.GPR* %6737, i32 0, i32 9
  %6739 = getelementptr inbounds %struct.Reg, %struct.Reg* %6738, i32 0, i32 0
  %RSI.i519 = bitcast %union.anon* %6739 to i64*
  %6740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6741 = getelementptr inbounds %struct.GPR, %struct.GPR* %6740, i32 0, i32 15
  %6742 = getelementptr inbounds %struct.Reg, %struct.Reg* %6741, i32 0, i32 0
  %RBP.i520 = bitcast %union.anon* %6742 to i64*
  %6743 = load i64, i64* %RSI.i519
  %6744 = load i64, i64* %RBP.i520
  %6745 = sub i64 %6744, 148
  %6746 = load i64, i64* %PC.i518
  %6747 = add i64 %6746, 6
  store i64 %6747, i64* %PC.i518
  %6748 = trunc i64 %6743 to i32
  %6749 = inttoptr i64 %6745 to i32*
  %6750 = load i32, i32* %6749
  %6751 = add i32 %6750, %6748
  %6752 = zext i32 %6751 to i64
  store i64 %6752, i64* %RSI.i519, align 8
  %6753 = icmp ult i32 %6751, %6748
  %6754 = icmp ult i32 %6751, %6750
  %6755 = or i1 %6753, %6754
  %6756 = zext i1 %6755 to i8
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6756, i8* %6757, align 1
  %6758 = and i32 %6751, 255
  %6759 = call i32 @llvm.ctpop.i32(i32 %6758)
  %6760 = trunc i32 %6759 to i8
  %6761 = and i8 %6760, 1
  %6762 = xor i8 %6761, 1
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6762, i8* %6763, align 1
  %6764 = xor i32 %6750, %6748
  %6765 = xor i32 %6764, %6751
  %6766 = lshr i32 %6765, 4
  %6767 = trunc i32 %6766 to i8
  %6768 = and i8 %6767, 1
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6768, i8* %6769, align 1
  %6770 = icmp eq i32 %6751, 0
  %6771 = zext i1 %6770 to i8
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6771, i8* %6772, align 1
  %6773 = lshr i32 %6751, 31
  %6774 = trunc i32 %6773 to i8
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6774, i8* %6775, align 1
  %6776 = lshr i32 %6748, 31
  %6777 = lshr i32 %6750, 31
  %6778 = xor i32 %6773, %6776
  %6779 = xor i32 %6773, %6777
  %6780 = add i32 %6778, %6779
  %6781 = icmp eq i32 %6780, 2
  %6782 = zext i1 %6781 to i8
  %6783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6782, i8* %6783, align 1
  store %struct.Memory* %loadMem_404023, %struct.Memory** %MEMORY
  %loadMem_404029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6785 = getelementptr inbounds %struct.GPR, %struct.GPR* %6784, i32 0, i32 33
  %6786 = getelementptr inbounds %struct.Reg, %struct.Reg* %6785, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %6786 to i64*
  %6787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6788 = getelementptr inbounds %struct.GPR, %struct.GPR* %6787, i32 0, i32 9
  %6789 = getelementptr inbounds %struct.Reg, %struct.Reg* %6788, i32 0, i32 0
  %ESI.i516 = bitcast %union.anon* %6789 to i32*
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6791 = getelementptr inbounds %struct.GPR, %struct.GPR* %6790, i32 0, i32 7
  %6792 = getelementptr inbounds %struct.Reg, %struct.Reg* %6791, i32 0, i32 0
  %RDX.i517 = bitcast %union.anon* %6792 to i64*
  %6793 = load i32, i32* %ESI.i516
  %6794 = zext i32 %6793 to i64
  %6795 = load i64, i64* %PC.i515
  %6796 = add i64 %6795, 3
  store i64 %6796, i64* %PC.i515
  %6797 = shl i64 %6794, 32
  %6798 = ashr exact i64 %6797, 32
  store i64 %6798, i64* %RDX.i517, align 8
  store %struct.Memory* %loadMem_404029, %struct.Memory** %MEMORY
  %loadMem_40402c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6800 = getelementptr inbounds %struct.GPR, %struct.GPR* %6799, i32 0, i32 33
  %6801 = getelementptr inbounds %struct.Reg, %struct.Reg* %6800, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %6801 to i64*
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6803 = getelementptr inbounds %struct.GPR, %struct.GPR* %6802, i32 0, i32 5
  %6804 = getelementptr inbounds %struct.Reg, %struct.Reg* %6803, i32 0, i32 0
  %RCX.i512 = bitcast %union.anon* %6804 to i64*
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 7
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %RDX.i513 = bitcast %union.anon* %6807 to i64*
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 9
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %RSI.i514 = bitcast %union.anon* %6810 to i64*
  %6811 = load i64, i64* %RCX.i512
  %6812 = load i64, i64* %RDX.i513
  %6813 = mul i64 %6812, 2
  %6814 = add i64 %6813, %6811
  %6815 = load i64, i64* %PC.i511
  %6816 = add i64 %6815, 4
  store i64 %6816, i64* %PC.i511
  %6817 = inttoptr i64 %6814 to i16*
  %6818 = load i16, i16* %6817
  %6819 = zext i16 %6818 to i64
  store i64 %6819, i64* %RSI.i514, align 8
  store %struct.Memory* %loadMem_40402c, %struct.Memory** %MEMORY
  %loadMem_404030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6821 = getelementptr inbounds %struct.GPR, %struct.GPR* %6820, i32 0, i32 33
  %6822 = getelementptr inbounds %struct.Reg, %struct.Reg* %6821, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %6822 to i64*
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6824 = getelementptr inbounds %struct.GPR, %struct.GPR* %6823, i32 0, i32 5
  %6825 = getelementptr inbounds %struct.Reg, %struct.Reg* %6824, i32 0, i32 0
  %RCX.i509 = bitcast %union.anon* %6825 to i64*
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 15
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %RBP.i510 = bitcast %union.anon* %6828 to i64*
  %6829 = load i64, i64* %RBP.i510
  %6830 = sub i64 %6829, 184
  %6831 = load i64, i64* %PC.i508
  %6832 = add i64 %6831, 7
  store i64 %6832, i64* %PC.i508
  %6833 = inttoptr i64 %6830 to i64*
  %6834 = load i64, i64* %6833
  store i64 %6834, i64* %RCX.i509, align 8
  store %struct.Memory* %loadMem_404030, %struct.Memory** %MEMORY
  %loadMem_404037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6836 = getelementptr inbounds %struct.GPR, %struct.GPR* %6835, i32 0, i32 33
  %6837 = getelementptr inbounds %struct.Reg, %struct.Reg* %6836, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %6837 to i64*
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6839 = getelementptr inbounds %struct.GPR, %struct.GPR* %6838, i32 0, i32 7
  %6840 = getelementptr inbounds %struct.Reg, %struct.Reg* %6839, i32 0, i32 0
  %RDX.i506 = bitcast %union.anon* %6840 to i64*
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6842 = getelementptr inbounds %struct.GPR, %struct.GPR* %6841, i32 0, i32 15
  %6843 = getelementptr inbounds %struct.Reg, %struct.Reg* %6842, i32 0, i32 0
  %RBP.i507 = bitcast %union.anon* %6843 to i64*
  %6844 = load i64, i64* %RBP.i507
  %6845 = sub i64 %6844, 604
  %6846 = load i64, i64* %PC.i505
  %6847 = add i64 %6846, 7
  store i64 %6847, i64* %PC.i505
  %6848 = inttoptr i64 %6845 to i32*
  %6849 = load i32, i32* %6848
  %6850 = sext i32 %6849 to i64
  store i64 %6850, i64* %RDX.i506, align 8
  store %struct.Memory* %loadMem_404037, %struct.Memory** %MEMORY
  %loadMem_40403e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6852 = getelementptr inbounds %struct.GPR, %struct.GPR* %6851, i32 0, i32 33
  %6853 = getelementptr inbounds %struct.Reg, %struct.Reg* %6852, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %6853 to i64*
  %6854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6855 = getelementptr inbounds %struct.GPR, %struct.GPR* %6854, i32 0, i32 5
  %6856 = getelementptr inbounds %struct.Reg, %struct.Reg* %6855, i32 0, i32 0
  %RCX.i503 = bitcast %union.anon* %6856 to i64*
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6858 = getelementptr inbounds %struct.GPR, %struct.GPR* %6857, i32 0, i32 7
  %6859 = getelementptr inbounds %struct.Reg, %struct.Reg* %6858, i32 0, i32 0
  %RDX.i504 = bitcast %union.anon* %6859 to i64*
  %6860 = load i64, i64* %RCX.i503
  %6861 = load i64, i64* %RDX.i504
  %6862 = mul i64 %6861, 8
  %6863 = add i64 %6862, %6860
  %6864 = load i64, i64* %PC.i502
  %6865 = add i64 %6864, 4
  store i64 %6865, i64* %PC.i502
  %6866 = inttoptr i64 %6863 to i64*
  %6867 = load i64, i64* %6866
  store i64 %6867, i64* %RCX.i503, align 8
  store %struct.Memory* %loadMem_40403e, %struct.Memory** %MEMORY
  %loadMem_404042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6869 = getelementptr inbounds %struct.GPR, %struct.GPR* %6868, i32 0, i32 33
  %6870 = getelementptr inbounds %struct.Reg, %struct.Reg* %6869, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %6870 to i64*
  %6871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6872 = getelementptr inbounds %struct.GPR, %struct.GPR* %6871, i32 0, i32 7
  %6873 = getelementptr inbounds %struct.Reg, %struct.Reg* %6872, i32 0, i32 0
  %RDX.i500 = bitcast %union.anon* %6873 to i64*
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6875 = getelementptr inbounds %struct.GPR, %struct.GPR* %6874, i32 0, i32 15
  %6876 = getelementptr inbounds %struct.Reg, %struct.Reg* %6875, i32 0, i32 0
  %RBP.i501 = bitcast %union.anon* %6876 to i64*
  %6877 = load i64, i64* %RBP.i501
  %6878 = sub i64 %6877, 608
  %6879 = load i64, i64* %PC.i499
  %6880 = add i64 %6879, 7
  store i64 %6880, i64* %PC.i499
  %6881 = inttoptr i64 %6878 to i32*
  %6882 = load i32, i32* %6881
  %6883 = sext i32 %6882 to i64
  store i64 %6883, i64* %RDX.i500, align 8
  store %struct.Memory* %loadMem_404042, %struct.Memory** %MEMORY
  %loadMem_404049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 33
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %6886 to i64*
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6888 = getelementptr inbounds %struct.GPR, %struct.GPR* %6887, i32 0, i32 5
  %6889 = getelementptr inbounds %struct.Reg, %struct.Reg* %6888, i32 0, i32 0
  %RCX.i496 = bitcast %union.anon* %6889 to i64*
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6891 = getelementptr inbounds %struct.GPR, %struct.GPR* %6890, i32 0, i32 7
  %6892 = getelementptr inbounds %struct.Reg, %struct.Reg* %6891, i32 0, i32 0
  %RDX.i497 = bitcast %union.anon* %6892 to i64*
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6894 = getelementptr inbounds %struct.GPR, %struct.GPR* %6893, i32 0, i32 11
  %6895 = getelementptr inbounds %struct.Reg, %struct.Reg* %6894, i32 0, i32 0
  %RDI.i498 = bitcast %union.anon* %6895 to i64*
  %6896 = load i64, i64* %RCX.i496
  %6897 = load i64, i64* %RDX.i497
  %6898 = mul i64 %6897, 2
  %6899 = add i64 %6898, %6896
  %6900 = load i64, i64* %PC.i495
  %6901 = add i64 %6900, 4
  store i64 %6901, i64* %PC.i495
  %6902 = inttoptr i64 %6899 to i16*
  %6903 = load i16, i16* %6902
  %6904 = zext i16 %6903 to i64
  store i64 %6904, i64* %RDI.i498, align 8
  store %struct.Memory* %loadMem_404049, %struct.Memory** %MEMORY
  %loadMem_40404d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6906 = getelementptr inbounds %struct.GPR, %struct.GPR* %6905, i32 0, i32 33
  %6907 = getelementptr inbounds %struct.Reg, %struct.Reg* %6906, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %6907 to i64*
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6909 = getelementptr inbounds %struct.GPR, %struct.GPR* %6908, i32 0, i32 11
  %6910 = getelementptr inbounds %struct.Reg, %struct.Reg* %6909, i32 0, i32 0
  %EDI.i493 = bitcast %union.anon* %6910 to i32*
  %6911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6912 = getelementptr inbounds %struct.GPR, %struct.GPR* %6911, i32 0, i32 9
  %6913 = getelementptr inbounds %struct.Reg, %struct.Reg* %6912, i32 0, i32 0
  %RSI.i494 = bitcast %union.anon* %6913 to i64*
  %6914 = load i64, i64* %RSI.i494
  %6915 = load i32, i32* %EDI.i493
  %6916 = zext i32 %6915 to i64
  %6917 = load i64, i64* %PC.i492
  %6918 = add i64 %6917, 2
  store i64 %6918, i64* %PC.i492
  %6919 = trunc i64 %6914 to i32
  %6920 = sub i32 %6919, %6915
  %6921 = zext i32 %6920 to i64
  store i64 %6921, i64* %RSI.i494, align 8
  %6922 = icmp ult i32 %6919, %6915
  %6923 = zext i1 %6922 to i8
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6923, i8* %6924, align 1
  %6925 = and i32 %6920, 255
  %6926 = call i32 @llvm.ctpop.i32(i32 %6925)
  %6927 = trunc i32 %6926 to i8
  %6928 = and i8 %6927, 1
  %6929 = xor i8 %6928, 1
  %6930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6929, i8* %6930, align 1
  %6931 = xor i64 %6916, %6914
  %6932 = trunc i64 %6931 to i32
  %6933 = xor i32 %6932, %6920
  %6934 = lshr i32 %6933, 4
  %6935 = trunc i32 %6934 to i8
  %6936 = and i8 %6935, 1
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6936, i8* %6937, align 1
  %6938 = icmp eq i32 %6920, 0
  %6939 = zext i1 %6938 to i8
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6939, i8* %6940, align 1
  %6941 = lshr i32 %6920, 31
  %6942 = trunc i32 %6941 to i8
  %6943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6942, i8* %6943, align 1
  %6944 = lshr i32 %6919, 31
  %6945 = lshr i32 %6915, 31
  %6946 = xor i32 %6945, %6944
  %6947 = xor i32 %6941, %6944
  %6948 = add i32 %6947, %6946
  %6949 = icmp eq i32 %6948, 2
  %6950 = zext i1 %6949 to i8
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6950, i8* %6951, align 1
  store %struct.Memory* %loadMem_40404d, %struct.Memory** %MEMORY
  %loadMem_40404f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6953 = getelementptr inbounds %struct.GPR, %struct.GPR* %6952, i32 0, i32 33
  %6954 = getelementptr inbounds %struct.Reg, %struct.Reg* %6953, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %6954 to i64*
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6956 = getelementptr inbounds %struct.GPR, %struct.GPR* %6955, i32 0, i32 9
  %6957 = getelementptr inbounds %struct.Reg, %struct.Reg* %6956, i32 0, i32 0
  %ESI.i490 = bitcast %union.anon* %6957 to i32*
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6959 = getelementptr inbounds %struct.GPR, %struct.GPR* %6958, i32 0, i32 1
  %6960 = getelementptr inbounds %struct.Reg, %struct.Reg* %6959, i32 0, i32 0
  %RAX.i491 = bitcast %union.anon* %6960 to i64*
  %6961 = load i64, i64* %RAX.i491
  %6962 = load i32, i32* %ESI.i490
  %6963 = zext i32 %6962 to i64
  %6964 = load i64, i64* %PC.i489
  %6965 = add i64 %6964, 3
  store i64 %6965, i64* %PC.i489
  %6966 = shl i64 %6961, 32
  %6967 = ashr exact i64 %6966, 32
  %6968 = shl i64 %6963, 32
  %6969 = ashr exact i64 %6968, 32
  %6970 = mul i64 %6969, %6967
  %6971 = trunc i64 %6970 to i32
  %6972 = and i64 %6970, 4294967295
  store i64 %6972, i64* %RAX.i491, align 8
  %6973 = shl i64 %6970, 32
  %6974 = ashr exact i64 %6973, 32
  %6975 = icmp ne i64 %6974, %6970
  %6976 = zext i1 %6975 to i8
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6976, i8* %6977, align 1
  %6978 = and i32 %6971, 255
  %6979 = call i32 @llvm.ctpop.i32(i32 %6978)
  %6980 = trunc i32 %6979 to i8
  %6981 = and i8 %6980, 1
  %6982 = xor i8 %6981, 1
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6982, i8* %6983, align 1
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6984, align 1
  %6985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6985, align 1
  %6986 = lshr i32 %6971, 31
  %6987 = trunc i32 %6986 to i8
  %6988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6987, i8* %6988, align 1
  %6989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6976, i8* %6989, align 1
  store %struct.Memory* %loadMem_40404f, %struct.Memory** %MEMORY
  %loadMem_404052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6991 = getelementptr inbounds %struct.GPR, %struct.GPR* %6990, i32 0, i32 33
  %6992 = getelementptr inbounds %struct.Reg, %struct.Reg* %6991, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %6992 to i64*
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6994 = getelementptr inbounds %struct.GPR, %struct.GPR* %6993, i32 0, i32 1
  %6995 = getelementptr inbounds %struct.Reg, %struct.Reg* %6994, i32 0, i32 0
  %RAX.i487 = bitcast %union.anon* %6995 to i64*
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 15
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %6998 to i64*
  %6999 = load i64, i64* %RAX.i487
  %7000 = load i64, i64* %RBP.i488
  %7001 = sub i64 %7000, 156
  %7002 = load i64, i64* %PC.i486
  %7003 = add i64 %7002, 6
  store i64 %7003, i64* %PC.i486
  %7004 = trunc i64 %6999 to i32
  %7005 = inttoptr i64 %7001 to i32*
  %7006 = load i32, i32* %7005
  %7007 = add i32 %7006, %7004
  %7008 = zext i32 %7007 to i64
  store i64 %7008, i64* %RAX.i487, align 8
  %7009 = icmp ult i32 %7007, %7004
  %7010 = icmp ult i32 %7007, %7006
  %7011 = or i1 %7009, %7010
  %7012 = zext i1 %7011 to i8
  %7013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7012, i8* %7013, align 1
  %7014 = and i32 %7007, 255
  %7015 = call i32 @llvm.ctpop.i32(i32 %7014)
  %7016 = trunc i32 %7015 to i8
  %7017 = and i8 %7016, 1
  %7018 = xor i8 %7017, 1
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7018, i8* %7019, align 1
  %7020 = xor i32 %7006, %7004
  %7021 = xor i32 %7020, %7007
  %7022 = lshr i32 %7021, 4
  %7023 = trunc i32 %7022 to i8
  %7024 = and i8 %7023, 1
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7024, i8* %7025, align 1
  %7026 = icmp eq i32 %7007, 0
  %7027 = zext i1 %7026 to i8
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7027, i8* %7028, align 1
  %7029 = lshr i32 %7007, 31
  %7030 = trunc i32 %7029 to i8
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7030, i8* %7031, align 1
  %7032 = lshr i32 %7004, 31
  %7033 = lshr i32 %7006, 31
  %7034 = xor i32 %7029, %7032
  %7035 = xor i32 %7029, %7033
  %7036 = add i32 %7034, %7035
  %7037 = icmp eq i32 %7036, 2
  %7038 = zext i1 %7037 to i8
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7038, i8* %7039, align 1
  store %struct.Memory* %loadMem_404052, %struct.Memory** %MEMORY
  %loadMem_404058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7041 = getelementptr inbounds %struct.GPR, %struct.GPR* %7040, i32 0, i32 33
  %7042 = getelementptr inbounds %struct.Reg, %struct.Reg* %7041, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %7042 to i64*
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7044 = getelementptr inbounds %struct.GPR, %struct.GPR* %7043, i32 0, i32 1
  %7045 = getelementptr inbounds %struct.Reg, %struct.Reg* %7044, i32 0, i32 0
  %EAX.i484 = bitcast %union.anon* %7045 to i32*
  %7046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7047 = getelementptr inbounds %struct.GPR, %struct.GPR* %7046, i32 0, i32 15
  %7048 = getelementptr inbounds %struct.Reg, %struct.Reg* %7047, i32 0, i32 0
  %RBP.i485 = bitcast %union.anon* %7048 to i64*
  %7049 = load i64, i64* %RBP.i485
  %7050 = sub i64 %7049, 156
  %7051 = load i32, i32* %EAX.i484
  %7052 = zext i32 %7051 to i64
  %7053 = load i64, i64* %PC.i483
  %7054 = add i64 %7053, 6
  store i64 %7054, i64* %PC.i483
  %7055 = inttoptr i64 %7050 to i32*
  store i32 %7051, i32* %7055
  store %struct.Memory* %loadMem_404058, %struct.Memory** %MEMORY
  br label %block_.L_40405e

block_.L_40405e:                                  ; preds = %block_.L_404002, %block_403f96
  %loadMem_40405e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7057 = getelementptr inbounds %struct.GPR, %struct.GPR* %7056, i32 0, i32 33
  %7058 = getelementptr inbounds %struct.Reg, %struct.Reg* %7057, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %7058 to i64*
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7060 = getelementptr inbounds %struct.GPR, %struct.GPR* %7059, i32 0, i32 1
  %7061 = getelementptr inbounds %struct.Reg, %struct.Reg* %7060, i32 0, i32 0
  %RAX.i481 = bitcast %union.anon* %7061 to i64*
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7063 = getelementptr inbounds %struct.GPR, %struct.GPR* %7062, i32 0, i32 15
  %7064 = getelementptr inbounds %struct.Reg, %struct.Reg* %7063, i32 0, i32 0
  %RBP.i482 = bitcast %union.anon* %7064 to i64*
  %7065 = load i64, i64* %RBP.i482
  %7066 = sub i64 %7065, 624
  %7067 = load i64, i64* %PC.i480
  %7068 = add i64 %7067, 7
  store i64 %7068, i64* %PC.i480
  store i64 %7066, i64* %RAX.i481, align 8
  store %struct.Memory* %loadMem_40405e, %struct.Memory** %MEMORY
  %loadMem_404065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7070 = getelementptr inbounds %struct.GPR, %struct.GPR* %7069, i32 0, i32 33
  %7071 = getelementptr inbounds %struct.Reg, %struct.Reg* %7070, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %7071 to i64*
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7073 = getelementptr inbounds %struct.GPR, %struct.GPR* %7072, i32 0, i32 5
  %7074 = getelementptr inbounds %struct.Reg, %struct.Reg* %7073, i32 0, i32 0
  %RCX.i479 = bitcast %union.anon* %7074 to i64*
  %7075 = load i64, i64* %PC.i478
  %7076 = add i64 %7075, 5
  store i64 %7076, i64* %PC.i478
  store i64 8, i64* %RCX.i479, align 8
  store %struct.Memory* %loadMem_404065, %struct.Memory** %MEMORY
  %loadMem_40406a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7078 = getelementptr inbounds %struct.GPR, %struct.GPR* %7077, i32 0, i32 33
  %7079 = getelementptr inbounds %struct.Reg, %struct.Reg* %7078, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %7079 to i64*
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7081 = getelementptr inbounds %struct.GPR, %struct.GPR* %7080, i32 0, i32 7
  %7082 = getelementptr inbounds %struct.Reg, %struct.Reg* %7081, i32 0, i32 0
  %RDX.i476 = bitcast %union.anon* %7082 to i64*
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7084 = getelementptr inbounds %struct.GPR, %struct.GPR* %7083, i32 0, i32 15
  %7085 = getelementptr inbounds %struct.Reg, %struct.Reg* %7084, i32 0, i32 0
  %RBP.i477 = bitcast %union.anon* %7085 to i64*
  %7086 = load i64, i64* %RBP.i477
  %7087 = sub i64 %7086, 148
  %7088 = load i64, i64* %PC.i475
  %7089 = add i64 %7088, 6
  store i64 %7089, i64* %PC.i475
  %7090 = inttoptr i64 %7087 to i32*
  %7091 = load i32, i32* %7090
  %7092 = zext i32 %7091 to i64
  store i64 %7092, i64* %RDX.i476, align 8
  store %struct.Memory* %loadMem_40406a, %struct.Memory** %MEMORY
  %loadMem_404070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7094 = getelementptr inbounds %struct.GPR, %struct.GPR* %7093, i32 0, i32 33
  %7095 = getelementptr inbounds %struct.Reg, %struct.Reg* %7094, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %7095 to i64*
  %7096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7097 = getelementptr inbounds %struct.GPR, %struct.GPR* %7096, i32 0, i32 9
  %7098 = getelementptr inbounds %struct.Reg, %struct.Reg* %7097, i32 0, i32 0
  %RSI.i473 = bitcast %union.anon* %7098 to i64*
  %7099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7100 = getelementptr inbounds %struct.GPR, %struct.GPR* %7099, i32 0, i32 15
  %7101 = getelementptr inbounds %struct.Reg, %struct.Reg* %7100, i32 0, i32 0
  %RBP.i474 = bitcast %union.anon* %7101 to i64*
  %7102 = load i64, i64* %RBP.i474
  %7103 = sub i64 %7102, 184
  %7104 = load i64, i64* %PC.i472
  %7105 = add i64 %7104, 7
  store i64 %7105, i64* %PC.i472
  %7106 = inttoptr i64 %7103 to i64*
  %7107 = load i64, i64* %7106
  store i64 %7107, i64* %RSI.i473, align 8
  store %struct.Memory* %loadMem_404070, %struct.Memory** %MEMORY
  %loadMem_404077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7109 = getelementptr inbounds %struct.GPR, %struct.GPR* %7108, i32 0, i32 33
  %7110 = getelementptr inbounds %struct.Reg, %struct.Reg* %7109, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %7110 to i64*
  %7111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7112 = getelementptr inbounds %struct.GPR, %struct.GPR* %7111, i32 0, i32 11
  %7113 = getelementptr inbounds %struct.Reg, %struct.Reg* %7112, i32 0, i32 0
  %RDI.i470 = bitcast %union.anon* %7113 to i64*
  %7114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7115 = getelementptr inbounds %struct.GPR, %struct.GPR* %7114, i32 0, i32 15
  %7116 = getelementptr inbounds %struct.Reg, %struct.Reg* %7115, i32 0, i32 0
  %RBP.i471 = bitcast %union.anon* %7116 to i64*
  %7117 = load i64, i64* %RBP.i471
  %7118 = sub i64 %7117, 148
  %7119 = load i64, i64* %PC.i469
  %7120 = add i64 %7119, 6
  store i64 %7120, i64* %PC.i469
  %7121 = inttoptr i64 %7118 to i32*
  %7122 = load i32, i32* %7121
  %7123 = zext i32 %7122 to i64
  store i64 %7123, i64* %RDI.i470, align 8
  store %struct.Memory* %loadMem_404077, %struct.Memory** %MEMORY
  %loadMem_40407d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7125 = getelementptr inbounds %struct.GPR, %struct.GPR* %7124, i32 0, i32 33
  %7126 = getelementptr inbounds %struct.Reg, %struct.Reg* %7125, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %7126 to i64*
  %7127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7128 = getelementptr inbounds %struct.GPR, %struct.GPR* %7127, i32 0, i32 11
  %7129 = getelementptr inbounds %struct.Reg, %struct.Reg* %7128, i32 0, i32 0
  %RDI.i468 = bitcast %union.anon* %7129 to i64*
  %7130 = load i64, i64* %RDI.i468
  %7131 = load i64, i64* %PC.i467
  %7132 = add i64 %7131, 3
  store i64 %7132, i64* %PC.i467
  %7133 = trunc i64 %7130 to i32
  %7134 = add i32 8, %7133
  %7135 = zext i32 %7134 to i64
  store i64 %7135, i64* %RDI.i468, align 8
  %7136 = icmp ult i32 %7134, %7133
  %7137 = icmp ult i32 %7134, 8
  %7138 = or i1 %7136, %7137
  %7139 = zext i1 %7138 to i8
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7139, i8* %7140, align 1
  %7141 = and i32 %7134, 255
  %7142 = call i32 @llvm.ctpop.i32(i32 %7141)
  %7143 = trunc i32 %7142 to i8
  %7144 = and i8 %7143, 1
  %7145 = xor i8 %7144, 1
  %7146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7145, i8* %7146, align 1
  %7147 = xor i64 8, %7130
  %7148 = trunc i64 %7147 to i32
  %7149 = xor i32 %7148, %7134
  %7150 = lshr i32 %7149, 4
  %7151 = trunc i32 %7150 to i8
  %7152 = and i8 %7151, 1
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7152, i8* %7153, align 1
  %7154 = icmp eq i32 %7134, 0
  %7155 = zext i1 %7154 to i8
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7155, i8* %7156, align 1
  %7157 = lshr i32 %7134, 31
  %7158 = trunc i32 %7157 to i8
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7158, i8* %7159, align 1
  %7160 = lshr i32 %7133, 31
  %7161 = xor i32 %7157, %7160
  %7162 = add i32 %7161, %7157
  %7163 = icmp eq i32 %7162, 2
  %7164 = zext i1 %7163 to i8
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7164, i8* %7165, align 1
  store %struct.Memory* %loadMem_40407d, %struct.Memory** %MEMORY
  %loadMem_404080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7167 = getelementptr inbounds %struct.GPR, %struct.GPR* %7166, i32 0, i32 33
  %7168 = getelementptr inbounds %struct.Reg, %struct.Reg* %7167, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %7168 to i64*
  %7169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7170 = getelementptr inbounds %struct.GPR, %struct.GPR* %7169, i32 0, i32 11
  %7171 = getelementptr inbounds %struct.Reg, %struct.Reg* %7170, i32 0, i32 0
  %EDI.i465 = bitcast %union.anon* %7171 to i32*
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7173 = getelementptr inbounds %struct.GPR, %struct.GPR* %7172, i32 0, i32 17
  %7174 = getelementptr inbounds %struct.Reg, %struct.Reg* %7173, i32 0, i32 0
  %R8.i466 = bitcast %union.anon* %7174 to i64*
  %7175 = load i32, i32* %EDI.i465
  %7176 = zext i32 %7175 to i64
  %7177 = load i64, i64* %PC.i464
  %7178 = add i64 %7177, 3
  store i64 %7178, i64* %PC.i464
  %7179 = shl i64 %7176, 32
  %7180 = ashr exact i64 %7179, 32
  store i64 %7180, i64* %R8.i466, align 8
  store %struct.Memory* %loadMem_404080, %struct.Memory** %MEMORY
  %loadMem_404083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7182 = getelementptr inbounds %struct.GPR, %struct.GPR* %7181, i32 0, i32 33
  %7183 = getelementptr inbounds %struct.Reg, %struct.Reg* %7182, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %7183 to i64*
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7185 = getelementptr inbounds %struct.GPR, %struct.GPR* %7184, i32 0, i32 17
  %7186 = getelementptr inbounds %struct.Reg, %struct.Reg* %7185, i32 0, i32 0
  %R8.i463 = bitcast %union.anon* %7186 to i64*
  %7187 = load i64, i64* %R8.i463
  %7188 = load i64, i64* %PC.i462
  %7189 = add i64 %7188, 4
  store i64 %7189, i64* %PC.i462
  %7190 = sext i64 %7187 to i128
  %7191 = and i128 %7190, -18446744073709551616
  %7192 = zext i64 %7187 to i128
  %7193 = or i128 %7191, %7192
  %7194 = mul i128 24, %7193
  %7195 = trunc i128 %7194 to i64
  store i64 %7195, i64* %R8.i463, align 8
  %7196 = sext i64 %7195 to i128
  %7197 = icmp ne i128 %7196, %7194
  %7198 = zext i1 %7197 to i8
  %7199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7198, i8* %7199, align 1
  %7200 = trunc i128 %7194 to i32
  %7201 = and i32 %7200, 255
  %7202 = call i32 @llvm.ctpop.i32(i32 %7201)
  %7203 = trunc i32 %7202 to i8
  %7204 = and i8 %7203, 1
  %7205 = xor i8 %7204, 1
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7205, i8* %7206, align 1
  %7207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7207, align 1
  %7208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7208, align 1
  %7209 = lshr i64 %7195, 63
  %7210 = trunc i64 %7209 to i8
  %7211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7210, i8* %7211, align 1
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7198, i8* %7212, align 1
  store %struct.Memory* %loadMem_404083, %struct.Memory** %MEMORY
  %loadMem_404087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7214 = getelementptr inbounds %struct.GPR, %struct.GPR* %7213, i32 0, i32 33
  %7215 = getelementptr inbounds %struct.Reg, %struct.Reg* %7214, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %7215 to i64*
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7217 = getelementptr inbounds %struct.GPR, %struct.GPR* %7216, i32 0, i32 1
  %7218 = getelementptr inbounds %struct.Reg, %struct.Reg* %7217, i32 0, i32 0
  %RAX.i460 = bitcast %union.anon* %7218 to i64*
  %7219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7220 = getelementptr inbounds %struct.GPR, %struct.GPR* %7219, i32 0, i32 19
  %7221 = getelementptr inbounds %struct.Reg, %struct.Reg* %7220, i32 0, i32 0
  %R9.i461 = bitcast %union.anon* %7221 to i64*
  %7222 = load i64, i64* %RAX.i460
  %7223 = load i64, i64* %PC.i459
  %7224 = add i64 %7223, 3
  store i64 %7224, i64* %PC.i459
  store i64 %7222, i64* %R9.i461, align 8
  store %struct.Memory* %loadMem_404087, %struct.Memory** %MEMORY
  %loadMem_40408a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 33
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %7227 to i64*
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7229 = getelementptr inbounds %struct.GPR, %struct.GPR* %7228, i32 0, i32 17
  %7230 = getelementptr inbounds %struct.Reg, %struct.Reg* %7229, i32 0, i32 0
  %R8.i457 = bitcast %union.anon* %7230 to i64*
  %7231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7232 = getelementptr inbounds %struct.GPR, %struct.GPR* %7231, i32 0, i32 19
  %7233 = getelementptr inbounds %struct.Reg, %struct.Reg* %7232, i32 0, i32 0
  %R9.i458 = bitcast %union.anon* %7233 to i64*
  %7234 = load i64, i64* %R9.i458
  %7235 = load i64, i64* %R8.i457
  %7236 = load i64, i64* %PC.i456
  %7237 = add i64 %7236, 3
  store i64 %7237, i64* %PC.i456
  %7238 = add i64 %7235, %7234
  store i64 %7238, i64* %R9.i458, align 8
  %7239 = icmp ult i64 %7238, %7234
  %7240 = icmp ult i64 %7238, %7235
  %7241 = or i1 %7239, %7240
  %7242 = zext i1 %7241 to i8
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7242, i8* %7243, align 1
  %7244 = trunc i64 %7238 to i32
  %7245 = and i32 %7244, 255
  %7246 = call i32 @llvm.ctpop.i32(i32 %7245)
  %7247 = trunc i32 %7246 to i8
  %7248 = and i8 %7247, 1
  %7249 = xor i8 %7248, 1
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7249, i8* %7250, align 1
  %7251 = xor i64 %7235, %7234
  %7252 = xor i64 %7251, %7238
  %7253 = lshr i64 %7252, 4
  %7254 = trunc i64 %7253 to i8
  %7255 = and i8 %7254, 1
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7255, i8* %7256, align 1
  %7257 = icmp eq i64 %7238, 0
  %7258 = zext i1 %7257 to i8
  %7259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7258, i8* %7259, align 1
  %7260 = lshr i64 %7238, 63
  %7261 = trunc i64 %7260 to i8
  %7262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7261, i8* %7262, align 1
  %7263 = lshr i64 %7234, 63
  %7264 = lshr i64 %7235, 63
  %7265 = xor i64 %7260, %7263
  %7266 = xor i64 %7260, %7264
  %7267 = add i64 %7265, %7266
  %7268 = icmp eq i64 %7267, 2
  %7269 = zext i1 %7268 to i8
  %7270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7269, i8* %7270, align 1
  store %struct.Memory* %loadMem_40408a, %struct.Memory** %MEMORY
  %loadMem_40408d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 33
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %7273 to i64*
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7275 = getelementptr inbounds %struct.GPR, %struct.GPR* %7274, i32 0, i32 17
  %7276 = getelementptr inbounds %struct.Reg, %struct.Reg* %7275, i32 0, i32 0
  %R8.i454 = bitcast %union.anon* %7276 to i64*
  %7277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7278 = getelementptr inbounds %struct.GPR, %struct.GPR* %7277, i32 0, i32 19
  %7279 = getelementptr inbounds %struct.Reg, %struct.Reg* %7278, i32 0, i32 0
  %R9.i455 = bitcast %union.anon* %7279 to i64*
  %7280 = load i64, i64* %R9.i455
  %7281 = add i64 %7280, 20
  %7282 = load i64, i64* %PC.i453
  %7283 = add i64 %7282, 4
  store i64 %7283, i64* %PC.i453
  %7284 = inttoptr i64 %7281 to i32*
  %7285 = load i32, i32* %7284
  %7286 = sext i32 %7285 to i64
  store i64 %7286, i64* %R8.i454, align 8
  store %struct.Memory* %loadMem_40408d, %struct.Memory** %MEMORY
  %loadMem_404091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 33
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %7289 to i64*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7291 = getelementptr inbounds %struct.GPR, %struct.GPR* %7290, i32 0, i32 9
  %7292 = getelementptr inbounds %struct.Reg, %struct.Reg* %7291, i32 0, i32 0
  %RSI.i451 = bitcast %union.anon* %7292 to i64*
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7294 = getelementptr inbounds %struct.GPR, %struct.GPR* %7293, i32 0, i32 17
  %7295 = getelementptr inbounds %struct.Reg, %struct.Reg* %7294, i32 0, i32 0
  %R8.i452 = bitcast %union.anon* %7295 to i64*
  %7296 = load i64, i64* %RSI.i451
  %7297 = load i64, i64* %R8.i452
  %7298 = mul i64 %7297, 8
  %7299 = add i64 %7298, %7296
  %7300 = load i64, i64* %PC.i450
  %7301 = add i64 %7300, 4
  store i64 %7301, i64* %PC.i450
  %7302 = inttoptr i64 %7299 to i64*
  %7303 = load i64, i64* %7302
  store i64 %7303, i64* %RSI.i451, align 8
  store %struct.Memory* %loadMem_404091, %struct.Memory** %MEMORY
  %loadMem_404095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7305 = getelementptr inbounds %struct.GPR, %struct.GPR* %7304, i32 0, i32 33
  %7306 = getelementptr inbounds %struct.Reg, %struct.Reg* %7305, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %7306 to i64*
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7308 = getelementptr inbounds %struct.GPR, %struct.GPR* %7307, i32 0, i32 11
  %7309 = getelementptr inbounds %struct.Reg, %struct.Reg* %7308, i32 0, i32 0
  %RDI.i448 = bitcast %union.anon* %7309 to i64*
  %7310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7311 = getelementptr inbounds %struct.GPR, %struct.GPR* %7310, i32 0, i32 15
  %7312 = getelementptr inbounds %struct.Reg, %struct.Reg* %7311, i32 0, i32 0
  %RBP.i449 = bitcast %union.anon* %7312 to i64*
  %7313 = load i64, i64* %RBP.i449
  %7314 = sub i64 %7313, 148
  %7315 = load i64, i64* %PC.i447
  %7316 = add i64 %7315, 6
  store i64 %7316, i64* %PC.i447
  %7317 = inttoptr i64 %7314 to i32*
  %7318 = load i32, i32* %7317
  %7319 = zext i32 %7318 to i64
  store i64 %7319, i64* %RDI.i448, align 8
  store %struct.Memory* %loadMem_404095, %struct.Memory** %MEMORY
  %loadMem_40409b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7321 = getelementptr inbounds %struct.GPR, %struct.GPR* %7320, i32 0, i32 33
  %7322 = getelementptr inbounds %struct.Reg, %struct.Reg* %7321, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %7322 to i64*
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7324 = getelementptr inbounds %struct.GPR, %struct.GPR* %7323, i32 0, i32 11
  %7325 = getelementptr inbounds %struct.Reg, %struct.Reg* %7324, i32 0, i32 0
  %RDI.i446 = bitcast %union.anon* %7325 to i64*
  %7326 = load i64, i64* %RDI.i446
  %7327 = load i64, i64* %PC.i445
  %7328 = add i64 %7327, 3
  store i64 %7328, i64* %PC.i445
  %7329 = trunc i64 %7326 to i32
  %7330 = add i32 8, %7329
  %7331 = zext i32 %7330 to i64
  store i64 %7331, i64* %RDI.i446, align 8
  %7332 = icmp ult i32 %7330, %7329
  %7333 = icmp ult i32 %7330, 8
  %7334 = or i1 %7332, %7333
  %7335 = zext i1 %7334 to i8
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7335, i8* %7336, align 1
  %7337 = and i32 %7330, 255
  %7338 = call i32 @llvm.ctpop.i32(i32 %7337)
  %7339 = trunc i32 %7338 to i8
  %7340 = and i8 %7339, 1
  %7341 = xor i8 %7340, 1
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7341, i8* %7342, align 1
  %7343 = xor i64 8, %7326
  %7344 = trunc i64 %7343 to i32
  %7345 = xor i32 %7344, %7330
  %7346 = lshr i32 %7345, 4
  %7347 = trunc i32 %7346 to i8
  %7348 = and i8 %7347, 1
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7348, i8* %7349, align 1
  %7350 = icmp eq i32 %7330, 0
  %7351 = zext i1 %7350 to i8
  %7352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7351, i8* %7352, align 1
  %7353 = lshr i32 %7330, 31
  %7354 = trunc i32 %7353 to i8
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7354, i8* %7355, align 1
  %7356 = lshr i32 %7329, 31
  %7357 = xor i32 %7353, %7356
  %7358 = add i32 %7357, %7353
  %7359 = icmp eq i32 %7358, 2
  %7360 = zext i1 %7359 to i8
  %7361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7360, i8* %7361, align 1
  store %struct.Memory* %loadMem_40409b, %struct.Memory** %MEMORY
  %loadMem_40409e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7363 = getelementptr inbounds %struct.GPR, %struct.GPR* %7362, i32 0, i32 33
  %7364 = getelementptr inbounds %struct.Reg, %struct.Reg* %7363, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %7364 to i64*
  %7365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7366 = getelementptr inbounds %struct.GPR, %struct.GPR* %7365, i32 0, i32 11
  %7367 = getelementptr inbounds %struct.Reg, %struct.Reg* %7366, i32 0, i32 0
  %EDI.i443 = bitcast %union.anon* %7367 to i32*
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7369 = getelementptr inbounds %struct.GPR, %struct.GPR* %7368, i32 0, i32 17
  %7370 = getelementptr inbounds %struct.Reg, %struct.Reg* %7369, i32 0, i32 0
  %R8.i444 = bitcast %union.anon* %7370 to i64*
  %7371 = load i32, i32* %EDI.i443
  %7372 = zext i32 %7371 to i64
  %7373 = load i64, i64* %PC.i442
  %7374 = add i64 %7373, 3
  store i64 %7374, i64* %PC.i442
  %7375 = shl i64 %7372, 32
  %7376 = ashr exact i64 %7375, 32
  store i64 %7376, i64* %R8.i444, align 8
  store %struct.Memory* %loadMem_40409e, %struct.Memory** %MEMORY
  %loadMem_4040a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7378 = getelementptr inbounds %struct.GPR, %struct.GPR* %7377, i32 0, i32 33
  %7379 = getelementptr inbounds %struct.Reg, %struct.Reg* %7378, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %7379 to i64*
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7381 = getelementptr inbounds %struct.GPR, %struct.GPR* %7380, i32 0, i32 17
  %7382 = getelementptr inbounds %struct.Reg, %struct.Reg* %7381, i32 0, i32 0
  %R8.i441 = bitcast %union.anon* %7382 to i64*
  %7383 = load i64, i64* %R8.i441
  %7384 = load i64, i64* %PC.i440
  %7385 = add i64 %7384, 4
  store i64 %7385, i64* %PC.i440
  %7386 = sext i64 %7383 to i128
  %7387 = and i128 %7386, -18446744073709551616
  %7388 = zext i64 %7383 to i128
  %7389 = or i128 %7387, %7388
  %7390 = mul i128 24, %7389
  %7391 = trunc i128 %7390 to i64
  store i64 %7391, i64* %R8.i441, align 8
  %7392 = sext i64 %7391 to i128
  %7393 = icmp ne i128 %7392, %7390
  %7394 = zext i1 %7393 to i8
  %7395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7394, i8* %7395, align 1
  %7396 = trunc i128 %7390 to i32
  %7397 = and i32 %7396, 255
  %7398 = call i32 @llvm.ctpop.i32(i32 %7397)
  %7399 = trunc i32 %7398 to i8
  %7400 = and i8 %7399, 1
  %7401 = xor i8 %7400, 1
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7401, i8* %7402, align 1
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7403, align 1
  %7404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7404, align 1
  %7405 = lshr i64 %7391, 63
  %7406 = trunc i64 %7405 to i8
  %7407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7406, i8* %7407, align 1
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7394, i8* %7408, align 1
  store %struct.Memory* %loadMem_4040a1, %struct.Memory** %MEMORY
  %loadMem_4040a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7410 = getelementptr inbounds %struct.GPR, %struct.GPR* %7409, i32 0, i32 33
  %7411 = getelementptr inbounds %struct.Reg, %struct.Reg* %7410, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %7411 to i64*
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7413 = getelementptr inbounds %struct.GPR, %struct.GPR* %7412, i32 0, i32 1
  %7414 = getelementptr inbounds %struct.Reg, %struct.Reg* %7413, i32 0, i32 0
  %RAX.i438 = bitcast %union.anon* %7414 to i64*
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7416 = getelementptr inbounds %struct.GPR, %struct.GPR* %7415, i32 0, i32 19
  %7417 = getelementptr inbounds %struct.Reg, %struct.Reg* %7416, i32 0, i32 0
  %R9.i439 = bitcast %union.anon* %7417 to i64*
  %7418 = load i64, i64* %RAX.i438
  %7419 = load i64, i64* %PC.i437
  %7420 = add i64 %7419, 3
  store i64 %7420, i64* %PC.i437
  store i64 %7418, i64* %R9.i439, align 8
  store %struct.Memory* %loadMem_4040a5, %struct.Memory** %MEMORY
  %loadMem_4040a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7422 = getelementptr inbounds %struct.GPR, %struct.GPR* %7421, i32 0, i32 33
  %7423 = getelementptr inbounds %struct.Reg, %struct.Reg* %7422, i32 0, i32 0
  %PC.i434 = bitcast %union.anon* %7423 to i64*
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7425 = getelementptr inbounds %struct.GPR, %struct.GPR* %7424, i32 0, i32 17
  %7426 = getelementptr inbounds %struct.Reg, %struct.Reg* %7425, i32 0, i32 0
  %R8.i435 = bitcast %union.anon* %7426 to i64*
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7428 = getelementptr inbounds %struct.GPR, %struct.GPR* %7427, i32 0, i32 19
  %7429 = getelementptr inbounds %struct.Reg, %struct.Reg* %7428, i32 0, i32 0
  %R9.i436 = bitcast %union.anon* %7429 to i64*
  %7430 = load i64, i64* %R9.i436
  %7431 = load i64, i64* %R8.i435
  %7432 = load i64, i64* %PC.i434
  %7433 = add i64 %7432, 3
  store i64 %7433, i64* %PC.i434
  %7434 = add i64 %7431, %7430
  store i64 %7434, i64* %R9.i436, align 8
  %7435 = icmp ult i64 %7434, %7430
  %7436 = icmp ult i64 %7434, %7431
  %7437 = or i1 %7435, %7436
  %7438 = zext i1 %7437 to i8
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7438, i8* %7439, align 1
  %7440 = trunc i64 %7434 to i32
  %7441 = and i32 %7440, 255
  %7442 = call i32 @llvm.ctpop.i32(i32 %7441)
  %7443 = trunc i32 %7442 to i8
  %7444 = and i8 %7443, 1
  %7445 = xor i8 %7444, 1
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7445, i8* %7446, align 1
  %7447 = xor i64 %7431, %7430
  %7448 = xor i64 %7447, %7434
  %7449 = lshr i64 %7448, 4
  %7450 = trunc i64 %7449 to i8
  %7451 = and i8 %7450, 1
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7451, i8* %7452, align 1
  %7453 = icmp eq i64 %7434, 0
  %7454 = zext i1 %7453 to i8
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7454, i8* %7455, align 1
  %7456 = lshr i64 %7434, 63
  %7457 = trunc i64 %7456 to i8
  %7458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7457, i8* %7458, align 1
  %7459 = lshr i64 %7430, 63
  %7460 = lshr i64 %7431, 63
  %7461 = xor i64 %7456, %7459
  %7462 = xor i64 %7456, %7460
  %7463 = add i64 %7461, %7462
  %7464 = icmp eq i64 %7463, 2
  %7465 = zext i1 %7464 to i8
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7465, i8* %7466, align 1
  store %struct.Memory* %loadMem_4040a8, %struct.Memory** %MEMORY
  %loadMem_4040ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7468 = getelementptr inbounds %struct.GPR, %struct.GPR* %7467, i32 0, i32 33
  %7469 = getelementptr inbounds %struct.Reg, %struct.Reg* %7468, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %7469 to i64*
  %7470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7471 = getelementptr inbounds %struct.GPR, %struct.GPR* %7470, i32 0, i32 17
  %7472 = getelementptr inbounds %struct.Reg, %struct.Reg* %7471, i32 0, i32 0
  %R8.i432 = bitcast %union.anon* %7472 to i64*
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7474 = getelementptr inbounds %struct.GPR, %struct.GPR* %7473, i32 0, i32 19
  %7475 = getelementptr inbounds %struct.Reg, %struct.Reg* %7474, i32 0, i32 0
  %R9.i433 = bitcast %union.anon* %7475 to i64*
  %7476 = load i64, i64* %R9.i433
  %7477 = add i64 %7476, 16
  %7478 = load i64, i64* %PC.i431
  %7479 = add i64 %7478, 4
  store i64 %7479, i64* %PC.i431
  %7480 = inttoptr i64 %7477 to i32*
  %7481 = load i32, i32* %7480
  %7482 = sext i32 %7481 to i64
  store i64 %7482, i64* %R8.i432, align 8
  store %struct.Memory* %loadMem_4040ab, %struct.Memory** %MEMORY
  %loadMem_4040af = load %struct.Memory*, %struct.Memory** %MEMORY
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7484 = getelementptr inbounds %struct.GPR, %struct.GPR* %7483, i32 0, i32 33
  %7485 = getelementptr inbounds %struct.Reg, %struct.Reg* %7484, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %7485 to i64*
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7487 = getelementptr inbounds %struct.GPR, %struct.GPR* %7486, i32 0, i32 9
  %7488 = getelementptr inbounds %struct.Reg, %struct.Reg* %7487, i32 0, i32 0
  %RSI.i428 = bitcast %union.anon* %7488 to i64*
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7490 = getelementptr inbounds %struct.GPR, %struct.GPR* %7489, i32 0, i32 11
  %7491 = getelementptr inbounds %struct.Reg, %struct.Reg* %7490, i32 0, i32 0
  %RDI.i429 = bitcast %union.anon* %7491 to i64*
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7493 = getelementptr inbounds %struct.GPR, %struct.GPR* %7492, i32 0, i32 17
  %7494 = getelementptr inbounds %struct.Reg, %struct.Reg* %7493, i32 0, i32 0
  %R8.i430 = bitcast %union.anon* %7494 to i64*
  %7495 = load i64, i64* %RSI.i428
  %7496 = load i64, i64* %R8.i430
  %7497 = mul i64 %7496, 2
  %7498 = add i64 %7497, %7495
  %7499 = load i64, i64* %PC.i427
  %7500 = add i64 %7499, 5
  store i64 %7500, i64* %PC.i427
  %7501 = inttoptr i64 %7498 to i16*
  %7502 = load i16, i16* %7501
  %7503 = zext i16 %7502 to i64
  store i64 %7503, i64* %RDI.i429, align 8
  store %struct.Memory* %loadMem_4040af, %struct.Memory** %MEMORY
  %loadMem_4040b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7505 = getelementptr inbounds %struct.GPR, %struct.GPR* %7504, i32 0, i32 33
  %7506 = getelementptr inbounds %struct.Reg, %struct.Reg* %7505, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %7506 to i64*
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7508 = getelementptr inbounds %struct.GPR, %struct.GPR* %7507, i32 0, i32 9
  %7509 = getelementptr inbounds %struct.Reg, %struct.Reg* %7508, i32 0, i32 0
  %RSI.i425 = bitcast %union.anon* %7509 to i64*
  %7510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7511 = getelementptr inbounds %struct.GPR, %struct.GPR* %7510, i32 0, i32 15
  %7512 = getelementptr inbounds %struct.Reg, %struct.Reg* %7511, i32 0, i32 0
  %RBP.i426 = bitcast %union.anon* %7512 to i64*
  %7513 = load i64, i64* %RBP.i426
  %7514 = sub i64 %7513, 184
  %7515 = load i64, i64* %PC.i424
  %7516 = add i64 %7515, 7
  store i64 %7516, i64* %PC.i424
  %7517 = inttoptr i64 %7514 to i64*
  %7518 = load i64, i64* %7517
  store i64 %7518, i64* %RSI.i425, align 8
  store %struct.Memory* %loadMem_4040b4, %struct.Memory** %MEMORY
  %loadMem_4040bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7520 = getelementptr inbounds %struct.GPR, %struct.GPR* %7519, i32 0, i32 33
  %7521 = getelementptr inbounds %struct.Reg, %struct.Reg* %7520, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %7521 to i64*
  %7522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7523 = getelementptr inbounds %struct.GPR, %struct.GPR* %7522, i32 0, i32 5
  %7524 = getelementptr inbounds %struct.Reg, %struct.Reg* %7523, i32 0, i32 0
  %ECX.i422 = bitcast %union.anon* %7524 to i32*
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7526 = getelementptr inbounds %struct.GPR, %struct.GPR* %7525, i32 0, i32 21
  %7527 = getelementptr inbounds %struct.Reg, %struct.Reg* %7526, i32 0, i32 0
  %R10D.i423 = bitcast %union.anon* %7527 to i32*
  %7528 = bitcast i32* %R10D.i423 to i64*
  %7529 = load i32, i32* %ECX.i422
  %7530 = zext i32 %7529 to i64
  %7531 = load i64, i64* %PC.i421
  %7532 = add i64 %7531, 3
  store i64 %7532, i64* %PC.i421
  %7533 = and i64 %7530, 4294967295
  store i64 %7533, i64* %7528, align 8
  store %struct.Memory* %loadMem_4040bb, %struct.Memory** %MEMORY
  %loadMem_4040be = load %struct.Memory*, %struct.Memory** %MEMORY
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7535 = getelementptr inbounds %struct.GPR, %struct.GPR* %7534, i32 0, i32 33
  %7536 = getelementptr inbounds %struct.Reg, %struct.Reg* %7535, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %7536 to i64*
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7538 = getelementptr inbounds %struct.GPR, %struct.GPR* %7537, i32 0, i32 21
  %7539 = getelementptr inbounds %struct.Reg, %struct.Reg* %7538, i32 0, i32 0
  %R10D.i419 = bitcast %union.anon* %7539 to i32*
  %7540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7541 = getelementptr inbounds %struct.GPR, %struct.GPR* %7540, i32 0, i32 15
  %7542 = getelementptr inbounds %struct.Reg, %struct.Reg* %7541, i32 0, i32 0
  %RBP.i420 = bitcast %union.anon* %7542 to i64*
  %7543 = bitcast i32* %R10D.i419 to i64*
  %7544 = load i32, i32* %R10D.i419
  %7545 = zext i32 %7544 to i64
  %7546 = load i64, i64* %RBP.i420
  %7547 = sub i64 %7546, 148
  %7548 = load i64, i64* %PC.i418
  %7549 = add i64 %7548, 7
  store i64 %7549, i64* %PC.i418
  %7550 = inttoptr i64 %7547 to i32*
  %7551 = load i32, i32* %7550
  %7552 = sub i32 %7544, %7551
  %7553 = zext i32 %7552 to i64
  store i64 %7553, i64* %7543, align 8
  %7554 = icmp ult i32 %7544, %7551
  %7555 = zext i1 %7554 to i8
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7555, i8* %7556, align 1
  %7557 = and i32 %7552, 255
  %7558 = call i32 @llvm.ctpop.i32(i32 %7557)
  %7559 = trunc i32 %7558 to i8
  %7560 = and i8 %7559, 1
  %7561 = xor i8 %7560, 1
  %7562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7561, i8* %7562, align 1
  %7563 = xor i32 %7551, %7544
  %7564 = xor i32 %7563, %7552
  %7565 = lshr i32 %7564, 4
  %7566 = trunc i32 %7565 to i8
  %7567 = and i8 %7566, 1
  %7568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7567, i8* %7568, align 1
  %7569 = icmp eq i32 %7552, 0
  %7570 = zext i1 %7569 to i8
  %7571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7570, i8* %7571, align 1
  %7572 = lshr i32 %7552, 31
  %7573 = trunc i32 %7572 to i8
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7573, i8* %7574, align 1
  %7575 = lshr i32 %7544, 31
  %7576 = lshr i32 %7551, 31
  %7577 = xor i32 %7576, %7575
  %7578 = xor i32 %7572, %7575
  %7579 = add i32 %7578, %7577
  %7580 = icmp eq i32 %7579, 2
  %7581 = zext i1 %7580 to i8
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7581, i8* %7582, align 1
  store %struct.Memory* %loadMem_4040be, %struct.Memory** %MEMORY
  %loadMem_4040c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7584 = getelementptr inbounds %struct.GPR, %struct.GPR* %7583, i32 0, i32 33
  %7585 = getelementptr inbounds %struct.Reg, %struct.Reg* %7584, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %7585 to i64*
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7587 = getelementptr inbounds %struct.GPR, %struct.GPR* %7586, i32 0, i32 21
  %7588 = getelementptr inbounds %struct.Reg, %struct.Reg* %7587, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %7588 to i32*
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7590 = getelementptr inbounds %struct.GPR, %struct.GPR* %7589, i32 0, i32 17
  %7591 = getelementptr inbounds %struct.Reg, %struct.Reg* %7590, i32 0, i32 0
  %R8.i417 = bitcast %union.anon* %7591 to i64*
  %7592 = load i32, i32* %R10D.i
  %7593 = zext i32 %7592 to i64
  %7594 = load i64, i64* %PC.i416
  %7595 = add i64 %7594, 3
  store i64 %7595, i64* %PC.i416
  %7596 = shl i64 %7593, 32
  %7597 = ashr exact i64 %7596, 32
  store i64 %7597, i64* %R8.i417, align 8
  store %struct.Memory* %loadMem_4040c5, %struct.Memory** %MEMORY
  %loadMem_4040c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 33
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %7600 to i64*
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 17
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %R8.i415 = bitcast %union.anon* %7603 to i64*
  %7604 = load i64, i64* %R8.i415
  %7605 = load i64, i64* %PC.i414
  %7606 = add i64 %7605, 4
  store i64 %7606, i64* %PC.i414
  %7607 = sext i64 %7604 to i128
  %7608 = and i128 %7607, -18446744073709551616
  %7609 = zext i64 %7604 to i128
  %7610 = or i128 %7608, %7609
  %7611 = mul i128 24, %7610
  %7612 = trunc i128 %7611 to i64
  store i64 %7612, i64* %R8.i415, align 8
  %7613 = sext i64 %7612 to i128
  %7614 = icmp ne i128 %7613, %7611
  %7615 = zext i1 %7614 to i8
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7615, i8* %7616, align 1
  %7617 = trunc i128 %7611 to i32
  %7618 = and i32 %7617, 255
  %7619 = call i32 @llvm.ctpop.i32(i32 %7618)
  %7620 = trunc i32 %7619 to i8
  %7621 = and i8 %7620, 1
  %7622 = xor i8 %7621, 1
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7622, i8* %7623, align 1
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7624, align 1
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7625, align 1
  %7626 = lshr i64 %7612, 63
  %7627 = trunc i64 %7626 to i8
  %7628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7627, i8* %7628, align 1
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7615, i8* %7629, align 1
  store %struct.Memory* %loadMem_4040c8, %struct.Memory** %MEMORY
  %loadMem_4040cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7631 = getelementptr inbounds %struct.GPR, %struct.GPR* %7630, i32 0, i32 33
  %7632 = getelementptr inbounds %struct.Reg, %struct.Reg* %7631, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %7632 to i64*
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7634 = getelementptr inbounds %struct.GPR, %struct.GPR* %7633, i32 0, i32 1
  %7635 = getelementptr inbounds %struct.Reg, %struct.Reg* %7634, i32 0, i32 0
  %RAX.i412 = bitcast %union.anon* %7635 to i64*
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7637 = getelementptr inbounds %struct.GPR, %struct.GPR* %7636, i32 0, i32 19
  %7638 = getelementptr inbounds %struct.Reg, %struct.Reg* %7637, i32 0, i32 0
  %R9.i413 = bitcast %union.anon* %7638 to i64*
  %7639 = load i64, i64* %RAX.i412
  %7640 = load i64, i64* %PC.i411
  %7641 = add i64 %7640, 3
  store i64 %7641, i64* %PC.i411
  store i64 %7639, i64* %R9.i413, align 8
  store %struct.Memory* %loadMem_4040cc, %struct.Memory** %MEMORY
  %loadMem_4040cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7643 = getelementptr inbounds %struct.GPR, %struct.GPR* %7642, i32 0, i32 33
  %7644 = getelementptr inbounds %struct.Reg, %struct.Reg* %7643, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %7644 to i64*
  %7645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7646 = getelementptr inbounds %struct.GPR, %struct.GPR* %7645, i32 0, i32 17
  %7647 = getelementptr inbounds %struct.Reg, %struct.Reg* %7646, i32 0, i32 0
  %R8.i409 = bitcast %union.anon* %7647 to i64*
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7649 = getelementptr inbounds %struct.GPR, %struct.GPR* %7648, i32 0, i32 19
  %7650 = getelementptr inbounds %struct.Reg, %struct.Reg* %7649, i32 0, i32 0
  %R9.i410 = bitcast %union.anon* %7650 to i64*
  %7651 = load i64, i64* %R9.i410
  %7652 = load i64, i64* %R8.i409
  %7653 = load i64, i64* %PC.i408
  %7654 = add i64 %7653, 3
  store i64 %7654, i64* %PC.i408
  %7655 = add i64 %7652, %7651
  store i64 %7655, i64* %R9.i410, align 8
  %7656 = icmp ult i64 %7655, %7651
  %7657 = icmp ult i64 %7655, %7652
  %7658 = or i1 %7656, %7657
  %7659 = zext i1 %7658 to i8
  %7660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7659, i8* %7660, align 1
  %7661 = trunc i64 %7655 to i32
  %7662 = and i32 %7661, 255
  %7663 = call i32 @llvm.ctpop.i32(i32 %7662)
  %7664 = trunc i32 %7663 to i8
  %7665 = and i8 %7664, 1
  %7666 = xor i8 %7665, 1
  %7667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7666, i8* %7667, align 1
  %7668 = xor i64 %7652, %7651
  %7669 = xor i64 %7668, %7655
  %7670 = lshr i64 %7669, 4
  %7671 = trunc i64 %7670 to i8
  %7672 = and i8 %7671, 1
  %7673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7672, i8* %7673, align 1
  %7674 = icmp eq i64 %7655, 0
  %7675 = zext i1 %7674 to i8
  %7676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7675, i8* %7676, align 1
  %7677 = lshr i64 %7655, 63
  %7678 = trunc i64 %7677 to i8
  %7679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7678, i8* %7679, align 1
  %7680 = lshr i64 %7651, 63
  %7681 = lshr i64 %7652, 63
  %7682 = xor i64 %7677, %7680
  %7683 = xor i64 %7677, %7681
  %7684 = add i64 %7682, %7683
  %7685 = icmp eq i64 %7684, 2
  %7686 = zext i1 %7685 to i8
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7686, i8* %7687, align 1
  store %struct.Memory* %loadMem_4040cf, %struct.Memory** %MEMORY
  %loadMem_4040d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7689 = getelementptr inbounds %struct.GPR, %struct.GPR* %7688, i32 0, i32 33
  %7690 = getelementptr inbounds %struct.Reg, %struct.Reg* %7689, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %7690 to i64*
  %7691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7692 = getelementptr inbounds %struct.GPR, %struct.GPR* %7691, i32 0, i32 17
  %7693 = getelementptr inbounds %struct.Reg, %struct.Reg* %7692, i32 0, i32 0
  %R8.i407 = bitcast %union.anon* %7693 to i64*
  %7694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7695 = getelementptr inbounds %struct.GPR, %struct.GPR* %7694, i32 0, i32 19
  %7696 = getelementptr inbounds %struct.Reg, %struct.Reg* %7695, i32 0, i32 0
  %R9.i = bitcast %union.anon* %7696 to i64*
  %7697 = load i64, i64* %R9.i
  %7698 = add i64 %7697, 20
  %7699 = load i64, i64* %PC.i406
  %7700 = add i64 %7699, 4
  store i64 %7700, i64* %PC.i406
  %7701 = inttoptr i64 %7698 to i32*
  %7702 = load i32, i32* %7701
  %7703 = sext i32 %7702 to i64
  store i64 %7703, i64* %R8.i407, align 8
  store %struct.Memory* %loadMem_4040d2, %struct.Memory** %MEMORY
  %loadMem_4040d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7705 = getelementptr inbounds %struct.GPR, %struct.GPR* %7704, i32 0, i32 33
  %7706 = getelementptr inbounds %struct.Reg, %struct.Reg* %7705, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %7706 to i64*
  %7707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7708 = getelementptr inbounds %struct.GPR, %struct.GPR* %7707, i32 0, i32 9
  %7709 = getelementptr inbounds %struct.Reg, %struct.Reg* %7708, i32 0, i32 0
  %RSI.i404 = bitcast %union.anon* %7709 to i64*
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7711 = getelementptr inbounds %struct.GPR, %struct.GPR* %7710, i32 0, i32 17
  %7712 = getelementptr inbounds %struct.Reg, %struct.Reg* %7711, i32 0, i32 0
  %R8.i405 = bitcast %union.anon* %7712 to i64*
  %7713 = load i64, i64* %RSI.i404
  %7714 = load i64, i64* %R8.i405
  %7715 = mul i64 %7714, 8
  %7716 = add i64 %7715, %7713
  %7717 = load i64, i64* %PC.i403
  %7718 = add i64 %7717, 4
  store i64 %7718, i64* %PC.i403
  %7719 = inttoptr i64 %7716 to i64*
  %7720 = load i64, i64* %7719
  store i64 %7720, i64* %RSI.i404, align 8
  store %struct.Memory* %loadMem_4040d6, %struct.Memory** %MEMORY
  %loadMem_4040da = load %struct.Memory*, %struct.Memory** %MEMORY
  %7721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7722 = getelementptr inbounds %struct.GPR, %struct.GPR* %7721, i32 0, i32 33
  %7723 = getelementptr inbounds %struct.Reg, %struct.Reg* %7722, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %7723 to i64*
  %7724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7725 = getelementptr inbounds %struct.GPR, %struct.GPR* %7724, i32 0, i32 5
  %7726 = getelementptr inbounds %struct.Reg, %struct.Reg* %7725, i32 0, i32 0
  %RCX.i401 = bitcast %union.anon* %7726 to i64*
  %7727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7728 = getelementptr inbounds %struct.GPR, %struct.GPR* %7727, i32 0, i32 15
  %7729 = getelementptr inbounds %struct.Reg, %struct.Reg* %7728, i32 0, i32 0
  %RBP.i402 = bitcast %union.anon* %7729 to i64*
  %7730 = load i64, i64* %RCX.i401
  %7731 = load i64, i64* %RBP.i402
  %7732 = sub i64 %7731, 148
  %7733 = load i64, i64* %PC.i400
  %7734 = add i64 %7733, 6
  store i64 %7734, i64* %PC.i400
  %7735 = trunc i64 %7730 to i32
  %7736 = inttoptr i64 %7732 to i32*
  %7737 = load i32, i32* %7736
  %7738 = sub i32 %7735, %7737
  %7739 = zext i32 %7738 to i64
  store i64 %7739, i64* %RCX.i401, align 8
  %7740 = icmp ult i32 %7735, %7737
  %7741 = zext i1 %7740 to i8
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7741, i8* %7742, align 1
  %7743 = and i32 %7738, 255
  %7744 = call i32 @llvm.ctpop.i32(i32 %7743)
  %7745 = trunc i32 %7744 to i8
  %7746 = and i8 %7745, 1
  %7747 = xor i8 %7746, 1
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7747, i8* %7748, align 1
  %7749 = xor i32 %7737, %7735
  %7750 = xor i32 %7749, %7738
  %7751 = lshr i32 %7750, 4
  %7752 = trunc i32 %7751 to i8
  %7753 = and i8 %7752, 1
  %7754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7753, i8* %7754, align 1
  %7755 = icmp eq i32 %7738, 0
  %7756 = zext i1 %7755 to i8
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7756, i8* %7757, align 1
  %7758 = lshr i32 %7738, 31
  %7759 = trunc i32 %7758 to i8
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7759, i8* %7760, align 1
  %7761 = lshr i32 %7735, 31
  %7762 = lshr i32 %7737, 31
  %7763 = xor i32 %7762, %7761
  %7764 = xor i32 %7758, %7761
  %7765 = add i32 %7764, %7763
  %7766 = icmp eq i32 %7765, 2
  %7767 = zext i1 %7766 to i8
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7767, i8* %7768, align 1
  store %struct.Memory* %loadMem_4040da, %struct.Memory** %MEMORY
  %loadMem_4040e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7770 = getelementptr inbounds %struct.GPR, %struct.GPR* %7769, i32 0, i32 33
  %7771 = getelementptr inbounds %struct.Reg, %struct.Reg* %7770, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %7771 to i64*
  %7772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7773 = getelementptr inbounds %struct.GPR, %struct.GPR* %7772, i32 0, i32 5
  %7774 = getelementptr inbounds %struct.Reg, %struct.Reg* %7773, i32 0, i32 0
  %ECX.i398 = bitcast %union.anon* %7774 to i32*
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7776 = getelementptr inbounds %struct.GPR, %struct.GPR* %7775, i32 0, i32 17
  %7777 = getelementptr inbounds %struct.Reg, %struct.Reg* %7776, i32 0, i32 0
  %R8.i399 = bitcast %union.anon* %7777 to i64*
  %7778 = load i32, i32* %ECX.i398
  %7779 = zext i32 %7778 to i64
  %7780 = load i64, i64* %PC.i397
  %7781 = add i64 %7780, 3
  store i64 %7781, i64* %PC.i397
  %7782 = shl i64 %7779, 32
  %7783 = ashr exact i64 %7782, 32
  store i64 %7783, i64* %R8.i399, align 8
  store %struct.Memory* %loadMem_4040e0, %struct.Memory** %MEMORY
  %loadMem_4040e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7785 = getelementptr inbounds %struct.GPR, %struct.GPR* %7784, i32 0, i32 33
  %7786 = getelementptr inbounds %struct.Reg, %struct.Reg* %7785, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %7786 to i64*
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7788 = getelementptr inbounds %struct.GPR, %struct.GPR* %7787, i32 0, i32 17
  %7789 = getelementptr inbounds %struct.Reg, %struct.Reg* %7788, i32 0, i32 0
  %R8.i396 = bitcast %union.anon* %7789 to i64*
  %7790 = load i64, i64* %R8.i396
  %7791 = load i64, i64* %PC.i395
  %7792 = add i64 %7791, 4
  store i64 %7792, i64* %PC.i395
  %7793 = sext i64 %7790 to i128
  %7794 = and i128 %7793, -18446744073709551616
  %7795 = zext i64 %7790 to i128
  %7796 = or i128 %7794, %7795
  %7797 = mul i128 24, %7796
  %7798 = trunc i128 %7797 to i64
  store i64 %7798, i64* %R8.i396, align 8
  %7799 = sext i64 %7798 to i128
  %7800 = icmp ne i128 %7799, %7797
  %7801 = zext i1 %7800 to i8
  %7802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7801, i8* %7802, align 1
  %7803 = trunc i128 %7797 to i32
  %7804 = and i32 %7803, 255
  %7805 = call i32 @llvm.ctpop.i32(i32 %7804)
  %7806 = trunc i32 %7805 to i8
  %7807 = and i8 %7806, 1
  %7808 = xor i8 %7807, 1
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7808, i8* %7809, align 1
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7810, align 1
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7811, align 1
  %7812 = lshr i64 %7798, 63
  %7813 = trunc i64 %7812 to i8
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7813, i8* %7814, align 1
  %7815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7801, i8* %7815, align 1
  store %struct.Memory* %loadMem_4040e3, %struct.Memory** %MEMORY
  %loadMem_4040e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7817 = getelementptr inbounds %struct.GPR, %struct.GPR* %7816, i32 0, i32 33
  %7818 = getelementptr inbounds %struct.Reg, %struct.Reg* %7817, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %7818 to i64*
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7820 = getelementptr inbounds %struct.GPR, %struct.GPR* %7819, i32 0, i32 1
  %7821 = getelementptr inbounds %struct.Reg, %struct.Reg* %7820, i32 0, i32 0
  %RAX.i394 = bitcast %union.anon* %7821 to i64*
  %7822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7823 = getelementptr inbounds %struct.GPR, %struct.GPR* %7822, i32 0, i32 17
  %7824 = getelementptr inbounds %struct.Reg, %struct.Reg* %7823, i32 0, i32 0
  %R8.i = bitcast %union.anon* %7824 to i64*
  %7825 = load i64, i64* %RAX.i394
  %7826 = load i64, i64* %R8.i
  %7827 = load i64, i64* %PC.i393
  %7828 = add i64 %7827, 3
  store i64 %7828, i64* %PC.i393
  %7829 = add i64 %7826, %7825
  store i64 %7829, i64* %RAX.i394, align 8
  %7830 = icmp ult i64 %7829, %7825
  %7831 = icmp ult i64 %7829, %7826
  %7832 = or i1 %7830, %7831
  %7833 = zext i1 %7832 to i8
  %7834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7833, i8* %7834, align 1
  %7835 = trunc i64 %7829 to i32
  %7836 = and i32 %7835, 255
  %7837 = call i32 @llvm.ctpop.i32(i32 %7836)
  %7838 = trunc i32 %7837 to i8
  %7839 = and i8 %7838, 1
  %7840 = xor i8 %7839, 1
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7840, i8* %7841, align 1
  %7842 = xor i64 %7826, %7825
  %7843 = xor i64 %7842, %7829
  %7844 = lshr i64 %7843, 4
  %7845 = trunc i64 %7844 to i8
  %7846 = and i8 %7845, 1
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7846, i8* %7847, align 1
  %7848 = icmp eq i64 %7829, 0
  %7849 = zext i1 %7848 to i8
  %7850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7849, i8* %7850, align 1
  %7851 = lshr i64 %7829, 63
  %7852 = trunc i64 %7851 to i8
  %7853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7852, i8* %7853, align 1
  %7854 = lshr i64 %7825, 63
  %7855 = lshr i64 %7826, 63
  %7856 = xor i64 %7851, %7854
  %7857 = xor i64 %7851, %7855
  %7858 = add i64 %7856, %7857
  %7859 = icmp eq i64 %7858, 2
  %7860 = zext i1 %7859 to i8
  %7861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7860, i8* %7861, align 1
  store %struct.Memory* %loadMem_4040e7, %struct.Memory** %MEMORY
  %loadMem_4040ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %7862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7863 = getelementptr inbounds %struct.GPR, %struct.GPR* %7862, i32 0, i32 33
  %7864 = getelementptr inbounds %struct.Reg, %struct.Reg* %7863, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %7864 to i64*
  %7865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7866 = getelementptr inbounds %struct.GPR, %struct.GPR* %7865, i32 0, i32 1
  %7867 = getelementptr inbounds %struct.Reg, %struct.Reg* %7866, i32 0, i32 0
  %RAX.i392 = bitcast %union.anon* %7867 to i64*
  %7868 = load i64, i64* %RAX.i392
  %7869 = add i64 %7868, 16
  %7870 = load i64, i64* %PC.i391
  %7871 = add i64 %7870, 4
  store i64 %7871, i64* %PC.i391
  %7872 = inttoptr i64 %7869 to i32*
  %7873 = load i32, i32* %7872
  %7874 = sext i32 %7873 to i64
  store i64 %7874, i64* %RAX.i392, align 8
  store %struct.Memory* %loadMem_4040ea, %struct.Memory** %MEMORY
  %loadMem_4040ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7876 = getelementptr inbounds %struct.GPR, %struct.GPR* %7875, i32 0, i32 33
  %7877 = getelementptr inbounds %struct.Reg, %struct.Reg* %7876, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %7877 to i64*
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7879 = getelementptr inbounds %struct.GPR, %struct.GPR* %7878, i32 0, i32 1
  %7880 = getelementptr inbounds %struct.Reg, %struct.Reg* %7879, i32 0, i32 0
  %RAX.i388 = bitcast %union.anon* %7880 to i64*
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 5
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %RCX.i389 = bitcast %union.anon* %7883 to i64*
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7885 = getelementptr inbounds %struct.GPR, %struct.GPR* %7884, i32 0, i32 9
  %7886 = getelementptr inbounds %struct.Reg, %struct.Reg* %7885, i32 0, i32 0
  %RSI.i390 = bitcast %union.anon* %7886 to i64*
  %7887 = load i64, i64* %RSI.i390
  %7888 = load i64, i64* %RAX.i388
  %7889 = mul i64 %7888, 2
  %7890 = add i64 %7889, %7887
  %7891 = load i64, i64* %PC.i387
  %7892 = add i64 %7891, 4
  store i64 %7892, i64* %PC.i387
  %7893 = inttoptr i64 %7890 to i16*
  %7894 = load i16, i16* %7893
  %7895 = zext i16 %7894 to i64
  store i64 %7895, i64* %RCX.i389, align 8
  store %struct.Memory* %loadMem_4040ee, %struct.Memory** %MEMORY
  %loadMem_4040f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7897 = getelementptr inbounds %struct.GPR, %struct.GPR* %7896, i32 0, i32 33
  %7898 = getelementptr inbounds %struct.Reg, %struct.Reg* %7897, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %7898 to i64*
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7900 = getelementptr inbounds %struct.GPR, %struct.GPR* %7899, i32 0, i32 5
  %7901 = getelementptr inbounds %struct.Reg, %struct.Reg* %7900, i32 0, i32 0
  %ECX.i385 = bitcast %union.anon* %7901 to i32*
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 11
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %RDI.i386 = bitcast %union.anon* %7904 to i64*
  %7905 = load i64, i64* %RDI.i386
  %7906 = load i32, i32* %ECX.i385
  %7907 = zext i32 %7906 to i64
  %7908 = load i64, i64* %PC.i384
  %7909 = add i64 %7908, 2
  store i64 %7909, i64* %PC.i384
  %7910 = trunc i64 %7905 to i32
  %7911 = sub i32 %7910, %7906
  %7912 = zext i32 %7911 to i64
  store i64 %7912, i64* %RDI.i386, align 8
  %7913 = icmp ult i32 %7910, %7906
  %7914 = zext i1 %7913 to i8
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7914, i8* %7915, align 1
  %7916 = and i32 %7911, 255
  %7917 = call i32 @llvm.ctpop.i32(i32 %7916)
  %7918 = trunc i32 %7917 to i8
  %7919 = and i8 %7918, 1
  %7920 = xor i8 %7919, 1
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7920, i8* %7921, align 1
  %7922 = xor i64 %7907, %7905
  %7923 = trunc i64 %7922 to i32
  %7924 = xor i32 %7923, %7911
  %7925 = lshr i32 %7924, 4
  %7926 = trunc i32 %7925 to i8
  %7927 = and i8 %7926, 1
  %7928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7927, i8* %7928, align 1
  %7929 = icmp eq i32 %7911, 0
  %7930 = zext i1 %7929 to i8
  %7931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7930, i8* %7931, align 1
  %7932 = lshr i32 %7911, 31
  %7933 = trunc i32 %7932 to i8
  %7934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7933, i8* %7934, align 1
  %7935 = lshr i32 %7910, 31
  %7936 = lshr i32 %7906, 31
  %7937 = xor i32 %7936, %7935
  %7938 = xor i32 %7932, %7935
  %7939 = add i32 %7938, %7937
  %7940 = icmp eq i32 %7939, 2
  %7941 = zext i1 %7940 to i8
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7941, i8* %7942, align 1
  store %struct.Memory* %loadMem_4040f2, %struct.Memory** %MEMORY
  %loadMem_4040f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7944 = getelementptr inbounds %struct.GPR, %struct.GPR* %7943, i32 0, i32 33
  %7945 = getelementptr inbounds %struct.Reg, %struct.Reg* %7944, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %7945 to i64*
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7947 = getelementptr inbounds %struct.GPR, %struct.GPR* %7946, i32 0, i32 11
  %7948 = getelementptr inbounds %struct.Reg, %struct.Reg* %7947, i32 0, i32 0
  %EDI.i382 = bitcast %union.anon* %7948 to i32*
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7950 = getelementptr inbounds %struct.GPR, %struct.GPR* %7949, i32 0, i32 7
  %7951 = getelementptr inbounds %struct.Reg, %struct.Reg* %7950, i32 0, i32 0
  %RDX.i383 = bitcast %union.anon* %7951 to i64*
  %7952 = load i64, i64* %RDX.i383
  %7953 = load i32, i32* %EDI.i382
  %7954 = zext i32 %7953 to i64
  %7955 = load i64, i64* %PC.i381
  %7956 = add i64 %7955, 3
  store i64 %7956, i64* %PC.i381
  %7957 = shl i64 %7952, 32
  %7958 = ashr exact i64 %7957, 32
  %7959 = shl i64 %7954, 32
  %7960 = ashr exact i64 %7959, 32
  %7961 = mul i64 %7960, %7958
  %7962 = trunc i64 %7961 to i32
  %7963 = and i64 %7961, 4294967295
  store i64 %7963, i64* %RDX.i383, align 8
  %7964 = shl i64 %7961, 32
  %7965 = ashr exact i64 %7964, 32
  %7966 = icmp ne i64 %7965, %7961
  %7967 = zext i1 %7966 to i8
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7967, i8* %7968, align 1
  %7969 = and i32 %7962, 255
  %7970 = call i32 @llvm.ctpop.i32(i32 %7969)
  %7971 = trunc i32 %7970 to i8
  %7972 = and i8 %7971, 1
  %7973 = xor i8 %7972, 1
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7973, i8* %7974, align 1
  %7975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7975, align 1
  %7976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7976, align 1
  %7977 = lshr i32 %7962, 31
  %7978 = trunc i32 %7977 to i8
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7978, i8* %7979, align 1
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7967, i8* %7980, align 1
  store %struct.Memory* %loadMem_4040f4, %struct.Memory** %MEMORY
  %loadMem_4040f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7982 = getelementptr inbounds %struct.GPR, %struct.GPR* %7981, i32 0, i32 33
  %7983 = getelementptr inbounds %struct.Reg, %struct.Reg* %7982, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %7983 to i64*
  %7984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7985 = getelementptr inbounds %struct.GPR, %struct.GPR* %7984, i32 0, i32 7
  %7986 = getelementptr inbounds %struct.Reg, %struct.Reg* %7985, i32 0, i32 0
  %RDX.i379 = bitcast %union.anon* %7986 to i64*
  %7987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7988 = getelementptr inbounds %struct.GPR, %struct.GPR* %7987, i32 0, i32 15
  %7989 = getelementptr inbounds %struct.Reg, %struct.Reg* %7988, i32 0, i32 0
  %RBP.i380 = bitcast %union.anon* %7989 to i64*
  %7990 = load i64, i64* %RDX.i379
  %7991 = load i64, i64* %RBP.i380
  %7992 = sub i64 %7991, 160
  %7993 = load i64, i64* %PC.i378
  %7994 = add i64 %7993, 6
  store i64 %7994, i64* %PC.i378
  %7995 = trunc i64 %7990 to i32
  %7996 = inttoptr i64 %7992 to i32*
  %7997 = load i32, i32* %7996
  %7998 = add i32 %7997, %7995
  %7999 = zext i32 %7998 to i64
  store i64 %7999, i64* %RDX.i379, align 8
  %8000 = icmp ult i32 %7998, %7995
  %8001 = icmp ult i32 %7998, %7997
  %8002 = or i1 %8000, %8001
  %8003 = zext i1 %8002 to i8
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8003, i8* %8004, align 1
  %8005 = and i32 %7998, 255
  %8006 = call i32 @llvm.ctpop.i32(i32 %8005)
  %8007 = trunc i32 %8006 to i8
  %8008 = and i8 %8007, 1
  %8009 = xor i8 %8008, 1
  %8010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8009, i8* %8010, align 1
  %8011 = xor i32 %7997, %7995
  %8012 = xor i32 %8011, %7998
  %8013 = lshr i32 %8012, 4
  %8014 = trunc i32 %8013 to i8
  %8015 = and i8 %8014, 1
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8015, i8* %8016, align 1
  %8017 = icmp eq i32 %7998, 0
  %8018 = zext i1 %8017 to i8
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8018, i8* %8019, align 1
  %8020 = lshr i32 %7998, 31
  %8021 = trunc i32 %8020 to i8
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8021, i8* %8022, align 1
  %8023 = lshr i32 %7995, 31
  %8024 = lshr i32 %7997, 31
  %8025 = xor i32 %8020, %8023
  %8026 = xor i32 %8020, %8024
  %8027 = add i32 %8025, %8026
  %8028 = icmp eq i32 %8027, 2
  %8029 = zext i1 %8028 to i8
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8029, i8* %8030, align 1
  store %struct.Memory* %loadMem_4040f7, %struct.Memory** %MEMORY
  %loadMem_4040fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8032 = getelementptr inbounds %struct.GPR, %struct.GPR* %8031, i32 0, i32 33
  %8033 = getelementptr inbounds %struct.Reg, %struct.Reg* %8032, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %8033 to i64*
  %8034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8035 = getelementptr inbounds %struct.GPR, %struct.GPR* %8034, i32 0, i32 7
  %8036 = getelementptr inbounds %struct.Reg, %struct.Reg* %8035, i32 0, i32 0
  %EDX.i376 = bitcast %union.anon* %8036 to i32*
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8038 = getelementptr inbounds %struct.GPR, %struct.GPR* %8037, i32 0, i32 15
  %8039 = getelementptr inbounds %struct.Reg, %struct.Reg* %8038, i32 0, i32 0
  %RBP.i377 = bitcast %union.anon* %8039 to i64*
  %8040 = load i64, i64* %RBP.i377
  %8041 = sub i64 %8040, 160
  %8042 = load i32, i32* %EDX.i376
  %8043 = zext i32 %8042 to i64
  %8044 = load i64, i64* %PC.i375
  %8045 = add i64 %8044, 6
  store i64 %8045, i64* %PC.i375
  %8046 = inttoptr i64 %8041 to i32*
  store i32 %8042, i32* %8046
  store %struct.Memory* %loadMem_4040fd, %struct.Memory** %MEMORY
  %loadMem_404103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8048 = getelementptr inbounds %struct.GPR, %struct.GPR* %8047, i32 0, i32 33
  %8049 = getelementptr inbounds %struct.Reg, %struct.Reg* %8048, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %8049 to i64*
  %8050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8051 = getelementptr inbounds %struct.GPR, %struct.GPR* %8050, i32 0, i32 1
  %8052 = getelementptr inbounds %struct.Reg, %struct.Reg* %8051, i32 0, i32 0
  %RAX.i373 = bitcast %union.anon* %8052 to i64*
  %8053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8054 = getelementptr inbounds %struct.GPR, %struct.GPR* %8053, i32 0, i32 15
  %8055 = getelementptr inbounds %struct.Reg, %struct.Reg* %8054, i32 0, i32 0
  %RBP.i374 = bitcast %union.anon* %8055 to i64*
  %8056 = load i64, i64* %RBP.i374
  %8057 = sub i64 %8056, 148
  %8058 = load i64, i64* %PC.i372
  %8059 = add i64 %8058, 6
  store i64 %8059, i64* %PC.i372
  %8060 = inttoptr i64 %8057 to i32*
  %8061 = load i32, i32* %8060
  %8062 = zext i32 %8061 to i64
  store i64 %8062, i64* %RAX.i373, align 8
  store %struct.Memory* %loadMem_404103, %struct.Memory** %MEMORY
  %loadMem_404109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8064 = getelementptr inbounds %struct.GPR, %struct.GPR* %8063, i32 0, i32 33
  %8065 = getelementptr inbounds %struct.Reg, %struct.Reg* %8064, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %8065 to i64*
  %8066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8067 = getelementptr inbounds %struct.GPR, %struct.GPR* %8066, i32 0, i32 1
  %8068 = getelementptr inbounds %struct.Reg, %struct.Reg* %8067, i32 0, i32 0
  %RAX.i371 = bitcast %union.anon* %8068 to i64*
  %8069 = load i64, i64* %RAX.i371
  %8070 = load i64, i64* %PC.i370
  %8071 = add i64 %8070, 3
  store i64 %8071, i64* %PC.i370
  %8072 = trunc i64 %8069 to i32
  %8073 = add i32 1, %8072
  %8074 = zext i32 %8073 to i64
  store i64 %8074, i64* %RAX.i371, align 8
  %8075 = icmp ult i32 %8073, %8072
  %8076 = icmp ult i32 %8073, 1
  %8077 = or i1 %8075, %8076
  %8078 = zext i1 %8077 to i8
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8078, i8* %8079, align 1
  %8080 = and i32 %8073, 255
  %8081 = call i32 @llvm.ctpop.i32(i32 %8080)
  %8082 = trunc i32 %8081 to i8
  %8083 = and i8 %8082, 1
  %8084 = xor i8 %8083, 1
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8084, i8* %8085, align 1
  %8086 = xor i64 1, %8069
  %8087 = trunc i64 %8086 to i32
  %8088 = xor i32 %8087, %8073
  %8089 = lshr i32 %8088, 4
  %8090 = trunc i32 %8089 to i8
  %8091 = and i8 %8090, 1
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8091, i8* %8092, align 1
  %8093 = icmp eq i32 %8073, 0
  %8094 = zext i1 %8093 to i8
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8094, i8* %8095, align 1
  %8096 = lshr i32 %8073, 31
  %8097 = trunc i32 %8096 to i8
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8097, i8* %8098, align 1
  %8099 = lshr i32 %8072, 31
  %8100 = xor i32 %8096, %8099
  %8101 = add i32 %8100, %8096
  %8102 = icmp eq i32 %8101, 2
  %8103 = zext i1 %8102 to i8
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8103, i8* %8104, align 1
  store %struct.Memory* %loadMem_404109, %struct.Memory** %MEMORY
  %loadMem_40410c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8106 = getelementptr inbounds %struct.GPR, %struct.GPR* %8105, i32 0, i32 33
  %8107 = getelementptr inbounds %struct.Reg, %struct.Reg* %8106, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %8107 to i64*
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8109 = getelementptr inbounds %struct.GPR, %struct.GPR* %8108, i32 0, i32 1
  %8110 = getelementptr inbounds %struct.Reg, %struct.Reg* %8109, i32 0, i32 0
  %EAX.i368 = bitcast %union.anon* %8110 to i32*
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8112 = getelementptr inbounds %struct.GPR, %struct.GPR* %8111, i32 0, i32 15
  %8113 = getelementptr inbounds %struct.Reg, %struct.Reg* %8112, i32 0, i32 0
  %RBP.i369 = bitcast %union.anon* %8113 to i64*
  %8114 = load i64, i64* %RBP.i369
  %8115 = sub i64 %8114, 148
  %8116 = load i32, i32* %EAX.i368
  %8117 = zext i32 %8116 to i64
  %8118 = load i64, i64* %PC.i367
  %8119 = add i64 %8118, 6
  store i64 %8119, i64* %PC.i367
  %8120 = inttoptr i64 %8115 to i32*
  store i32 %8116, i32* %8120
  store %struct.Memory* %loadMem_40410c, %struct.Memory** %MEMORY
  %loadMem_404112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8122 = getelementptr inbounds %struct.GPR, %struct.GPR* %8121, i32 0, i32 33
  %8123 = getelementptr inbounds %struct.Reg, %struct.Reg* %8122, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %8123 to i64*
  %8124 = load i64, i64* %PC.i366
  %8125 = add i64 %8124, -406
  %8126 = load i64, i64* %PC.i366
  %8127 = add i64 %8126, 5
  store i64 %8127, i64* %PC.i366
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8125, i64* %8128, align 8
  store %struct.Memory* %loadMem_404112, %struct.Memory** %MEMORY
  br label %block_.L_403f7c

block_.L_404117:                                  ; preds = %block_.L_403f7c
  %loadMem_404117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8130 = getelementptr inbounds %struct.GPR, %struct.GPR* %8129, i32 0, i32 33
  %8131 = getelementptr inbounds %struct.Reg, %struct.Reg* %8130, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %8131 to i64*
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8133 = getelementptr inbounds %struct.GPR, %struct.GPR* %8132, i32 0, i32 1
  %8134 = getelementptr inbounds %struct.Reg, %struct.Reg* %8133, i32 0, i32 0
  %RAX.i364 = bitcast %union.anon* %8134 to i64*
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8136 = getelementptr inbounds %struct.GPR, %struct.GPR* %8135, i32 0, i32 15
  %8137 = getelementptr inbounds %struct.Reg, %struct.Reg* %8136, i32 0, i32 0
  %RBP.i365 = bitcast %union.anon* %8137 to i64*
  %8138 = load i64, i64* %RBP.i365
  %8139 = sub i64 %8138, 156
  %8140 = load i64, i64* %PC.i363
  %8141 = add i64 %8140, 7
  store i64 %8141, i64* %PC.i363
  %8142 = inttoptr i64 %8139 to i32*
  %8143 = load i32, i32* %8142
  %8144 = sext i32 %8143 to i64
  %8145 = mul i64 %8144, 5
  %8146 = trunc i64 %8145 to i32
  %8147 = and i64 %8145, 4294967295
  store i64 %8147, i64* %RAX.i364, align 8
  %8148 = shl i64 %8145, 32
  %8149 = ashr exact i64 %8148, 32
  %8150 = icmp ne i64 %8149, %8145
  %8151 = zext i1 %8150 to i8
  %8152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8151, i8* %8152, align 1
  %8153 = and i32 %8146, 255
  %8154 = call i32 @llvm.ctpop.i32(i32 %8153)
  %8155 = trunc i32 %8154 to i8
  %8156 = and i8 %8155, 1
  %8157 = xor i8 %8156, 1
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8157, i8* %8158, align 1
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8159, align 1
  %8160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8160, align 1
  %8161 = lshr i32 %8146, 31
  %8162 = trunc i32 %8161 to i8
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8162, i8* %8163, align 1
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8151, i8* %8164, align 1
  store %struct.Memory* %loadMem_404117, %struct.Memory** %MEMORY
  %loadMem_40411e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8166 = getelementptr inbounds %struct.GPR, %struct.GPR* %8165, i32 0, i32 33
  %8167 = getelementptr inbounds %struct.Reg, %struct.Reg* %8166, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %8167 to i64*
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8169 = getelementptr inbounds %struct.GPR, %struct.GPR* %8168, i32 0, i32 1
  %8170 = getelementptr inbounds %struct.Reg, %struct.Reg* %8169, i32 0, i32 0
  %RAX.i362 = bitcast %union.anon* %8170 to i64*
  %8171 = load i64, i64* %RAX.i362
  %8172 = load i64, i64* %PC.i361
  %8173 = add i64 %8172, 3
  store i64 %8173, i64* %PC.i361
  %8174 = trunc i64 %8171 to i32
  %8175 = add i32 32, %8174
  %8176 = zext i32 %8175 to i64
  store i64 %8176, i64* %RAX.i362, align 8
  %8177 = icmp ult i32 %8175, %8174
  %8178 = icmp ult i32 %8175, 32
  %8179 = or i1 %8177, %8178
  %8180 = zext i1 %8179 to i8
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8180, i8* %8181, align 1
  %8182 = and i32 %8175, 255
  %8183 = call i32 @llvm.ctpop.i32(i32 %8182)
  %8184 = trunc i32 %8183 to i8
  %8185 = and i8 %8184, 1
  %8186 = xor i8 %8185, 1
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8186, i8* %8187, align 1
  %8188 = xor i64 32, %8171
  %8189 = trunc i64 %8188 to i32
  %8190 = xor i32 %8189, %8175
  %8191 = lshr i32 %8190, 4
  %8192 = trunc i32 %8191 to i8
  %8193 = and i8 %8192, 1
  %8194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8193, i8* %8194, align 1
  %8195 = icmp eq i32 %8175, 0
  %8196 = zext i1 %8195 to i8
  %8197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8196, i8* %8197, align 1
  %8198 = lshr i32 %8175, 31
  %8199 = trunc i32 %8198 to i8
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8199, i8* %8200, align 1
  %8201 = lshr i32 %8174, 31
  %8202 = xor i32 %8198, %8201
  %8203 = add i32 %8202, %8198
  %8204 = icmp eq i32 %8203, 2
  %8205 = zext i1 %8204 to i8
  %8206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8205, i8* %8206, align 1
  store %struct.Memory* %loadMem_40411e, %struct.Memory** %MEMORY
  %loadMem_404121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8208 = getelementptr inbounds %struct.GPR, %struct.GPR* %8207, i32 0, i32 33
  %8209 = getelementptr inbounds %struct.Reg, %struct.Reg* %8208, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %8209 to i64*
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8211 = getelementptr inbounds %struct.GPR, %struct.GPR* %8210, i32 0, i32 1
  %8212 = getelementptr inbounds %struct.Reg, %struct.Reg* %8211, i32 0, i32 0
  %RAX.i360 = bitcast %union.anon* %8212 to i64*
  %8213 = load i64, i64* %RAX.i360
  %8214 = load i64, i64* %PC.i359
  %8215 = add i64 %8214, 3
  store i64 %8215, i64* %PC.i359
  %8216 = shl i64 %8213, 32
  %8217 = ashr exact i64 %8216, 32
  %8218 = ashr i64 %8217, 5
  %8219 = lshr i64 %8218, 1
  %8220 = trunc i64 %8218 to i8
  %8221 = and i8 %8220, 1
  %8222 = trunc i64 %8219 to i32
  %8223 = and i64 %8219, 4294967295
  store i64 %8223, i64* %RAX.i360, align 8
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8221, i8* %8224, align 1
  %8225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8226 = and i32 %8222, 255
  %8227 = call i32 @llvm.ctpop.i32(i32 %8226)
  %8228 = trunc i32 %8227 to i8
  %8229 = and i8 %8228, 1
  %8230 = xor i8 %8229, 1
  store i8 %8230, i8* %8225, align 1
  %8231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8231, align 1
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8233 = icmp eq i32 %8222, 0
  %8234 = zext i1 %8233 to i8
  store i8 %8234, i8* %8232, align 1
  %8235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8236 = lshr i32 %8222, 31
  %8237 = trunc i32 %8236 to i8
  store i8 %8237, i8* %8235, align 1
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8238, align 1
  store %struct.Memory* %loadMem_404121, %struct.Memory** %MEMORY
  %loadMem_404124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8240 = getelementptr inbounds %struct.GPR, %struct.GPR* %8239, i32 0, i32 33
  %8241 = getelementptr inbounds %struct.Reg, %struct.Reg* %8240, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %8241 to i64*
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8243 = getelementptr inbounds %struct.GPR, %struct.GPR* %8242, i32 0, i32 1
  %8244 = getelementptr inbounds %struct.Reg, %struct.Reg* %8243, i32 0, i32 0
  %EAX.i357 = bitcast %union.anon* %8244 to i32*
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8246 = getelementptr inbounds %struct.GPR, %struct.GPR* %8245, i32 0, i32 15
  %8247 = getelementptr inbounds %struct.Reg, %struct.Reg* %8246, i32 0, i32 0
  %RBP.i358 = bitcast %union.anon* %8247 to i64*
  %8248 = load i64, i64* %RBP.i358
  %8249 = sub i64 %8248, 164
  %8250 = load i32, i32* %EAX.i357
  %8251 = zext i32 %8250 to i64
  %8252 = load i64, i64* %PC.i356
  %8253 = add i64 %8252, 6
  store i64 %8253, i64* %PC.i356
  %8254 = inttoptr i64 %8249 to i32*
  store i32 %8250, i32* %8254
  store %struct.Memory* %loadMem_404124, %struct.Memory** %MEMORY
  %loadMem_40412a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8256 = getelementptr inbounds %struct.GPR, %struct.GPR* %8255, i32 0, i32 33
  %8257 = getelementptr inbounds %struct.Reg, %struct.Reg* %8256, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %8257 to i64*
  %8258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8259 = getelementptr inbounds %struct.GPR, %struct.GPR* %8258, i32 0, i32 1
  %8260 = getelementptr inbounds %struct.Reg, %struct.Reg* %8259, i32 0, i32 0
  %RAX.i354 = bitcast %union.anon* %8260 to i64*
  %8261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8262 = getelementptr inbounds %struct.GPR, %struct.GPR* %8261, i32 0, i32 15
  %8263 = getelementptr inbounds %struct.Reg, %struct.Reg* %8262, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %8263 to i64*
  %8264 = load i64, i64* %RBP.i355
  %8265 = sub i64 %8264, 160
  %8266 = load i64, i64* %PC.i353
  %8267 = add i64 %8266, 7
  store i64 %8267, i64* %PC.i353
  %8268 = inttoptr i64 %8265 to i32*
  %8269 = load i32, i32* %8268
  %8270 = sext i32 %8269 to i64
  %8271 = mul i64 %8270, 5
  %8272 = trunc i64 %8271 to i32
  %8273 = and i64 %8271, 4294967295
  store i64 %8273, i64* %RAX.i354, align 8
  %8274 = shl i64 %8271, 32
  %8275 = ashr exact i64 %8274, 32
  %8276 = icmp ne i64 %8275, %8271
  %8277 = zext i1 %8276 to i8
  %8278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8277, i8* %8278, align 1
  %8279 = and i32 %8272, 255
  %8280 = call i32 @llvm.ctpop.i32(i32 %8279)
  %8281 = trunc i32 %8280 to i8
  %8282 = and i8 %8281, 1
  %8283 = xor i8 %8282, 1
  %8284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8283, i8* %8284, align 1
  %8285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8285, align 1
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8286, align 1
  %8287 = lshr i32 %8272, 31
  %8288 = trunc i32 %8287 to i8
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8288, i8* %8289, align 1
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8277, i8* %8290, align 1
  store %struct.Memory* %loadMem_40412a, %struct.Memory** %MEMORY
  %loadMem_404131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8292 = getelementptr inbounds %struct.GPR, %struct.GPR* %8291, i32 0, i32 33
  %8293 = getelementptr inbounds %struct.Reg, %struct.Reg* %8292, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %8293 to i64*
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8295 = getelementptr inbounds %struct.GPR, %struct.GPR* %8294, i32 0, i32 1
  %8296 = getelementptr inbounds %struct.Reg, %struct.Reg* %8295, i32 0, i32 0
  %RAX.i352 = bitcast %union.anon* %8296 to i64*
  %8297 = load i64, i64* %RAX.i352
  %8298 = load i64, i64* %PC.i351
  %8299 = add i64 %8298, 3
  store i64 %8299, i64* %PC.i351
  %8300 = trunc i64 %8297 to i32
  %8301 = add i32 32, %8300
  %8302 = zext i32 %8301 to i64
  store i64 %8302, i64* %RAX.i352, align 8
  %8303 = icmp ult i32 %8301, %8300
  %8304 = icmp ult i32 %8301, 32
  %8305 = or i1 %8303, %8304
  %8306 = zext i1 %8305 to i8
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8306, i8* %8307, align 1
  %8308 = and i32 %8301, 255
  %8309 = call i32 @llvm.ctpop.i32(i32 %8308)
  %8310 = trunc i32 %8309 to i8
  %8311 = and i8 %8310, 1
  %8312 = xor i8 %8311, 1
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8312, i8* %8313, align 1
  %8314 = xor i64 32, %8297
  %8315 = trunc i64 %8314 to i32
  %8316 = xor i32 %8315, %8301
  %8317 = lshr i32 %8316, 4
  %8318 = trunc i32 %8317 to i8
  %8319 = and i8 %8318, 1
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8319, i8* %8320, align 1
  %8321 = icmp eq i32 %8301, 0
  %8322 = zext i1 %8321 to i8
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8322, i8* %8323, align 1
  %8324 = lshr i32 %8301, 31
  %8325 = trunc i32 %8324 to i8
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8325, i8* %8326, align 1
  %8327 = lshr i32 %8300, 31
  %8328 = xor i32 %8324, %8327
  %8329 = add i32 %8328, %8324
  %8330 = icmp eq i32 %8329, 2
  %8331 = zext i1 %8330 to i8
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8331, i8* %8332, align 1
  store %struct.Memory* %loadMem_404131, %struct.Memory** %MEMORY
  %loadMem_404134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8334 = getelementptr inbounds %struct.GPR, %struct.GPR* %8333, i32 0, i32 33
  %8335 = getelementptr inbounds %struct.Reg, %struct.Reg* %8334, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %8335 to i64*
  %8336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8337 = getelementptr inbounds %struct.GPR, %struct.GPR* %8336, i32 0, i32 1
  %8338 = getelementptr inbounds %struct.Reg, %struct.Reg* %8337, i32 0, i32 0
  %RAX.i350 = bitcast %union.anon* %8338 to i64*
  %8339 = load i64, i64* %RAX.i350
  %8340 = load i64, i64* %PC.i349
  %8341 = add i64 %8340, 3
  store i64 %8341, i64* %PC.i349
  %8342 = shl i64 %8339, 32
  %8343 = ashr exact i64 %8342, 32
  %8344 = ashr i64 %8343, 5
  %8345 = lshr i64 %8344, 1
  %8346 = trunc i64 %8344 to i8
  %8347 = and i8 %8346, 1
  %8348 = trunc i64 %8345 to i32
  %8349 = and i64 %8345, 4294967295
  store i64 %8349, i64* %RAX.i350, align 8
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8347, i8* %8350, align 1
  %8351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8352 = and i32 %8348, 255
  %8353 = call i32 @llvm.ctpop.i32(i32 %8352)
  %8354 = trunc i32 %8353 to i8
  %8355 = and i8 %8354, 1
  %8356 = xor i8 %8355, 1
  store i8 %8356, i8* %8351, align 1
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8357, align 1
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8359 = icmp eq i32 %8348, 0
  %8360 = zext i1 %8359 to i8
  store i8 %8360, i8* %8358, align 1
  %8361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8362 = lshr i32 %8348, 31
  %8363 = trunc i32 %8362 to i8
  store i8 %8363, i8* %8361, align 1
  %8364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8364, align 1
  store %struct.Memory* %loadMem_404134, %struct.Memory** %MEMORY
  %loadMem_404137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8366 = getelementptr inbounds %struct.GPR, %struct.GPR* %8365, i32 0, i32 33
  %8367 = getelementptr inbounds %struct.Reg, %struct.Reg* %8366, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %8367 to i64*
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8369 = getelementptr inbounds %struct.GPR, %struct.GPR* %8368, i32 0, i32 1
  %8370 = getelementptr inbounds %struct.Reg, %struct.Reg* %8369, i32 0, i32 0
  %EAX.i347 = bitcast %union.anon* %8370 to i32*
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8372 = getelementptr inbounds %struct.GPR, %struct.GPR* %8371, i32 0, i32 15
  %8373 = getelementptr inbounds %struct.Reg, %struct.Reg* %8372, i32 0, i32 0
  %RBP.i348 = bitcast %union.anon* %8373 to i64*
  %8374 = load i64, i64* %RBP.i348
  %8375 = sub i64 %8374, 168
  %8376 = load i32, i32* %EAX.i347
  %8377 = zext i32 %8376 to i64
  %8378 = load i64, i64* %PC.i346
  %8379 = add i64 %8378, 6
  store i64 %8379, i64* %PC.i346
  %8380 = inttoptr i64 %8375 to i32*
  store i32 %8376, i32* %8380
  store %struct.Memory* %loadMem_404137, %struct.Memory** %MEMORY
  %loadMem_40413d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8382 = getelementptr inbounds %struct.GPR, %struct.GPR* %8381, i32 0, i32 33
  %8383 = getelementptr inbounds %struct.Reg, %struct.Reg* %8382, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %8383 to i64*
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8385 = getelementptr inbounds %struct.GPR, %struct.GPR* %8384, i32 0, i32 5
  %8386 = getelementptr inbounds %struct.Reg, %struct.Reg* %8385, i32 0, i32 0
  %RCX.i344 = bitcast %union.anon* %8386 to i64*
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8388 = getelementptr inbounds %struct.GPR, %struct.GPR* %8387, i32 0, i32 15
  %8389 = getelementptr inbounds %struct.Reg, %struct.Reg* %8388, i32 0, i32 0
  %RBP.i345 = bitcast %union.anon* %8389 to i64*
  %8390 = load i64, i64* %RBP.i345
  %8391 = sub i64 %8390, 184
  %8392 = load i64, i64* %PC.i343
  %8393 = add i64 %8392, 7
  store i64 %8393, i64* %PC.i343
  %8394 = inttoptr i64 %8391 to i64*
  %8395 = load i64, i64* %8394
  store i64 %8395, i64* %RCX.i344, align 8
  store %struct.Memory* %loadMem_40413d, %struct.Memory** %MEMORY
  %loadMem_404144 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8397 = getelementptr inbounds %struct.GPR, %struct.GPR* %8396, i32 0, i32 33
  %8398 = getelementptr inbounds %struct.Reg, %struct.Reg* %8397, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %8398 to i64*
  %8399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8400 = getelementptr inbounds %struct.GPR, %struct.GPR* %8399, i32 0, i32 7
  %8401 = getelementptr inbounds %struct.Reg, %struct.Reg* %8400, i32 0, i32 0
  %RDX.i341 = bitcast %union.anon* %8401 to i64*
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8403 = getelementptr inbounds %struct.GPR, %struct.GPR* %8402, i32 0, i32 15
  %8404 = getelementptr inbounds %struct.Reg, %struct.Reg* %8403, i32 0, i32 0
  %RBP.i342 = bitcast %union.anon* %8404 to i64*
  %8405 = load i64, i64* %RBP.i342
  %8406 = sub i64 %8405, 196
  %8407 = load i64, i64* %PC.i340
  %8408 = add i64 %8407, 7
  store i64 %8408, i64* %PC.i340
  %8409 = inttoptr i64 %8406 to i32*
  %8410 = load i32, i32* %8409
  %8411 = sext i32 %8410 to i64
  store i64 %8411, i64* %RDX.i341, align 8
  store %struct.Memory* %loadMem_404144, %struct.Memory** %MEMORY
  %loadMem_40414b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8413 = getelementptr inbounds %struct.GPR, %struct.GPR* %8412, i32 0, i32 33
  %8414 = getelementptr inbounds %struct.Reg, %struct.Reg* %8413, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %8414 to i64*
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8416 = getelementptr inbounds %struct.GPR, %struct.GPR* %8415, i32 0, i32 5
  %8417 = getelementptr inbounds %struct.Reg, %struct.Reg* %8416, i32 0, i32 0
  %RCX.i338 = bitcast %union.anon* %8417 to i64*
  %8418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8419 = getelementptr inbounds %struct.GPR, %struct.GPR* %8418, i32 0, i32 7
  %8420 = getelementptr inbounds %struct.Reg, %struct.Reg* %8419, i32 0, i32 0
  %RDX.i339 = bitcast %union.anon* %8420 to i64*
  %8421 = load i64, i64* %RCX.i338
  %8422 = load i64, i64* %RDX.i339
  %8423 = mul i64 %8422, 8
  %8424 = add i64 %8423, %8421
  %8425 = load i64, i64* %PC.i337
  %8426 = add i64 %8425, 4
  store i64 %8426, i64* %PC.i337
  %8427 = inttoptr i64 %8424 to i64*
  %8428 = load i64, i64* %8427
  store i64 %8428, i64* %RCX.i338, align 8
  store %struct.Memory* %loadMem_40414b, %struct.Memory** %MEMORY
  %loadMem_40414f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8430 = getelementptr inbounds %struct.GPR, %struct.GPR* %8429, i32 0, i32 33
  %8431 = getelementptr inbounds %struct.Reg, %struct.Reg* %8430, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %8431 to i64*
  %8432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8433 = getelementptr inbounds %struct.GPR, %struct.GPR* %8432, i32 0, i32 1
  %8434 = getelementptr inbounds %struct.Reg, %struct.Reg* %8433, i32 0, i32 0
  %RAX.i335 = bitcast %union.anon* %8434 to i64*
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8436 = getelementptr inbounds %struct.GPR, %struct.GPR* %8435, i32 0, i32 15
  %8437 = getelementptr inbounds %struct.Reg, %struct.Reg* %8436, i32 0, i32 0
  %RBP.i336 = bitcast %union.anon* %8437 to i64*
  %8438 = load i64, i64* %RBP.i336
  %8439 = sub i64 %8438, 200
  %8440 = load i64, i64* %PC.i334
  %8441 = add i64 %8440, 6
  store i64 %8441, i64* %PC.i334
  %8442 = inttoptr i64 %8439 to i32*
  %8443 = load i32, i32* %8442
  %8444 = zext i32 %8443 to i64
  store i64 %8444, i64* %RAX.i335, align 8
  store %struct.Memory* %loadMem_40414f, %struct.Memory** %MEMORY
  %loadMem_404155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8446 = getelementptr inbounds %struct.GPR, %struct.GPR* %8445, i32 0, i32 33
  %8447 = getelementptr inbounds %struct.Reg, %struct.Reg* %8446, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %8447 to i64*
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8449 = getelementptr inbounds %struct.GPR, %struct.GPR* %8448, i32 0, i32 1
  %8450 = getelementptr inbounds %struct.Reg, %struct.Reg* %8449, i32 0, i32 0
  %RAX.i333 = bitcast %union.anon* %8450 to i64*
  %8451 = load i64, i64* %RAX.i333
  %8452 = load i64, i64* %PC.i332
  %8453 = add i64 %8452, 3
  store i64 %8453, i64* %PC.i332
  %8454 = trunc i64 %8451 to i32
  %8455 = add i32 15, %8454
  %8456 = zext i32 %8455 to i64
  store i64 %8456, i64* %RAX.i333, align 8
  %8457 = icmp ult i32 %8455, %8454
  %8458 = icmp ult i32 %8455, 15
  %8459 = or i1 %8457, %8458
  %8460 = zext i1 %8459 to i8
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8460, i8* %8461, align 1
  %8462 = and i32 %8455, 255
  %8463 = call i32 @llvm.ctpop.i32(i32 %8462)
  %8464 = trunc i32 %8463 to i8
  %8465 = and i8 %8464, 1
  %8466 = xor i8 %8465, 1
  %8467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8466, i8* %8467, align 1
  %8468 = xor i64 15, %8451
  %8469 = trunc i64 %8468 to i32
  %8470 = xor i32 %8469, %8455
  %8471 = lshr i32 %8470, 4
  %8472 = trunc i32 %8471 to i8
  %8473 = and i8 %8472, 1
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8473, i8* %8474, align 1
  %8475 = icmp eq i32 %8455, 0
  %8476 = zext i1 %8475 to i8
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8476, i8* %8477, align 1
  %8478 = lshr i32 %8455, 31
  %8479 = trunc i32 %8478 to i8
  %8480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8479, i8* %8480, align 1
  %8481 = lshr i32 %8454, 31
  %8482 = xor i32 %8478, %8481
  %8483 = add i32 %8482, %8478
  %8484 = icmp eq i32 %8483, 2
  %8485 = zext i1 %8484 to i8
  %8486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8485, i8* %8486, align 1
  store %struct.Memory* %loadMem_404155, %struct.Memory** %MEMORY
  %loadMem_404158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 33
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %8489 to i64*
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8491 = getelementptr inbounds %struct.GPR, %struct.GPR* %8490, i32 0, i32 1
  %8492 = getelementptr inbounds %struct.Reg, %struct.Reg* %8491, i32 0, i32 0
  %EAX.i330 = bitcast %union.anon* %8492 to i32*
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 7
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %RDX.i331 = bitcast %union.anon* %8495 to i64*
  %8496 = load i32, i32* %EAX.i330
  %8497 = zext i32 %8496 to i64
  %8498 = load i64, i64* %PC.i329
  %8499 = add i64 %8498, 3
  store i64 %8499, i64* %PC.i329
  %8500 = shl i64 %8497, 32
  %8501 = ashr exact i64 %8500, 32
  store i64 %8501, i64* %RDX.i331, align 8
  store %struct.Memory* %loadMem_404158, %struct.Memory** %MEMORY
  %loadMem_40415b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8503 = getelementptr inbounds %struct.GPR, %struct.GPR* %8502, i32 0, i32 33
  %8504 = getelementptr inbounds %struct.Reg, %struct.Reg* %8503, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %8504 to i64*
  %8505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8506 = getelementptr inbounds %struct.GPR, %struct.GPR* %8505, i32 0, i32 1
  %8507 = getelementptr inbounds %struct.Reg, %struct.Reg* %8506, i32 0, i32 0
  %RAX.i326 = bitcast %union.anon* %8507 to i64*
  %8508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8509 = getelementptr inbounds %struct.GPR, %struct.GPR* %8508, i32 0, i32 5
  %8510 = getelementptr inbounds %struct.Reg, %struct.Reg* %8509, i32 0, i32 0
  %RCX.i327 = bitcast %union.anon* %8510 to i64*
  %8511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8512 = getelementptr inbounds %struct.GPR, %struct.GPR* %8511, i32 0, i32 7
  %8513 = getelementptr inbounds %struct.Reg, %struct.Reg* %8512, i32 0, i32 0
  %RDX.i328 = bitcast %union.anon* %8513 to i64*
  %8514 = load i64, i64* %RCX.i327
  %8515 = load i64, i64* %RDX.i328
  %8516 = mul i64 %8515, 2
  %8517 = add i64 %8516, %8514
  %8518 = load i64, i64* %PC.i325
  %8519 = add i64 %8518, 4
  store i64 %8519, i64* %PC.i325
  %8520 = inttoptr i64 %8517 to i16*
  %8521 = load i16, i16* %8520
  %8522 = zext i16 %8521 to i64
  store i64 %8522, i64* %RAX.i326, align 8
  store %struct.Memory* %loadMem_40415b, %struct.Memory** %MEMORY
  %loadMem_40415f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8524 = getelementptr inbounds %struct.GPR, %struct.GPR* %8523, i32 0, i32 33
  %8525 = getelementptr inbounds %struct.Reg, %struct.Reg* %8524, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %8525 to i64*
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8527 = getelementptr inbounds %struct.GPR, %struct.GPR* %8526, i32 0, i32 5
  %8528 = getelementptr inbounds %struct.Reg, %struct.Reg* %8527, i32 0, i32 0
  %RCX.i323 = bitcast %union.anon* %8528 to i64*
  %8529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8530 = getelementptr inbounds %struct.GPR, %struct.GPR* %8529, i32 0, i32 15
  %8531 = getelementptr inbounds %struct.Reg, %struct.Reg* %8530, i32 0, i32 0
  %RBP.i324 = bitcast %union.anon* %8531 to i64*
  %8532 = load i64, i64* %RBP.i324
  %8533 = sub i64 %8532, 184
  %8534 = load i64, i64* %PC.i322
  %8535 = add i64 %8534, 7
  store i64 %8535, i64* %PC.i322
  %8536 = inttoptr i64 %8533 to i64*
  %8537 = load i64, i64* %8536
  store i64 %8537, i64* %RCX.i323, align 8
  store %struct.Memory* %loadMem_40415f, %struct.Memory** %MEMORY
  %loadMem_404166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8539 = getelementptr inbounds %struct.GPR, %struct.GPR* %8538, i32 0, i32 33
  %8540 = getelementptr inbounds %struct.Reg, %struct.Reg* %8539, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %8540 to i64*
  %8541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8542 = getelementptr inbounds %struct.GPR, %struct.GPR* %8541, i32 0, i32 7
  %8543 = getelementptr inbounds %struct.Reg, %struct.Reg* %8542, i32 0, i32 0
  %RDX.i320 = bitcast %union.anon* %8543 to i64*
  %8544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8545 = getelementptr inbounds %struct.GPR, %struct.GPR* %8544, i32 0, i32 15
  %8546 = getelementptr inbounds %struct.Reg, %struct.Reg* %8545, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %8546 to i64*
  %8547 = load i64, i64* %RBP.i321
  %8548 = sub i64 %8547, 220
  %8549 = load i64, i64* %PC.i319
  %8550 = add i64 %8549, 7
  store i64 %8550, i64* %PC.i319
  %8551 = inttoptr i64 %8548 to i32*
  %8552 = load i32, i32* %8551
  %8553 = sext i32 %8552 to i64
  store i64 %8553, i64* %RDX.i320, align 8
  store %struct.Memory* %loadMem_404166, %struct.Memory** %MEMORY
  %loadMem_40416d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8555 = getelementptr inbounds %struct.GPR, %struct.GPR* %8554, i32 0, i32 33
  %8556 = getelementptr inbounds %struct.Reg, %struct.Reg* %8555, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %8556 to i64*
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8558 = getelementptr inbounds %struct.GPR, %struct.GPR* %8557, i32 0, i32 5
  %8559 = getelementptr inbounds %struct.Reg, %struct.Reg* %8558, i32 0, i32 0
  %RCX.i317 = bitcast %union.anon* %8559 to i64*
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8561 = getelementptr inbounds %struct.GPR, %struct.GPR* %8560, i32 0, i32 7
  %8562 = getelementptr inbounds %struct.Reg, %struct.Reg* %8561, i32 0, i32 0
  %RDX.i318 = bitcast %union.anon* %8562 to i64*
  %8563 = load i64, i64* %RCX.i317
  %8564 = load i64, i64* %RDX.i318
  %8565 = mul i64 %8564, 8
  %8566 = add i64 %8565, %8563
  %8567 = load i64, i64* %PC.i316
  %8568 = add i64 %8567, 4
  store i64 %8568, i64* %PC.i316
  %8569 = inttoptr i64 %8566 to i64*
  %8570 = load i64, i64* %8569
  store i64 %8570, i64* %RCX.i317, align 8
  store %struct.Memory* %loadMem_40416d, %struct.Memory** %MEMORY
  %loadMem_404171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8572 = getelementptr inbounds %struct.GPR, %struct.GPR* %8571, i32 0, i32 33
  %8573 = getelementptr inbounds %struct.Reg, %struct.Reg* %8572, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %8573 to i64*
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8575 = getelementptr inbounds %struct.GPR, %struct.GPR* %8574, i32 0, i32 7
  %8576 = getelementptr inbounds %struct.Reg, %struct.Reg* %8575, i32 0, i32 0
  %RDX.i314 = bitcast %union.anon* %8576 to i64*
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8578 = getelementptr inbounds %struct.GPR, %struct.GPR* %8577, i32 0, i32 15
  %8579 = getelementptr inbounds %struct.Reg, %struct.Reg* %8578, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %8579 to i64*
  %8580 = load i64, i64* %RBP.i315
  %8581 = sub i64 %8580, 224
  %8582 = load i64, i64* %PC.i313
  %8583 = add i64 %8582, 7
  store i64 %8583, i64* %PC.i313
  %8584 = inttoptr i64 %8581 to i32*
  %8585 = load i32, i32* %8584
  %8586 = sext i32 %8585 to i64
  store i64 %8586, i64* %RDX.i314, align 8
  store %struct.Memory* %loadMem_404171, %struct.Memory** %MEMORY
  %loadMem_404178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8588 = getelementptr inbounds %struct.GPR, %struct.GPR* %8587, i32 0, i32 33
  %8589 = getelementptr inbounds %struct.Reg, %struct.Reg* %8588, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %8589 to i64*
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8591 = getelementptr inbounds %struct.GPR, %struct.GPR* %8590, i32 0, i32 5
  %8592 = getelementptr inbounds %struct.Reg, %struct.Reg* %8591, i32 0, i32 0
  %RCX.i310 = bitcast %union.anon* %8592 to i64*
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8594 = getelementptr inbounds %struct.GPR, %struct.GPR* %8593, i32 0, i32 7
  %8595 = getelementptr inbounds %struct.Reg, %struct.Reg* %8594, i32 0, i32 0
  %RDX.i311 = bitcast %union.anon* %8595 to i64*
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8597 = getelementptr inbounds %struct.GPR, %struct.GPR* %8596, i32 0, i32 9
  %8598 = getelementptr inbounds %struct.Reg, %struct.Reg* %8597, i32 0, i32 0
  %RSI.i312 = bitcast %union.anon* %8598 to i64*
  %8599 = load i64, i64* %RCX.i310
  %8600 = load i64, i64* %RDX.i311
  %8601 = mul i64 %8600, 2
  %8602 = add i64 %8601, %8599
  %8603 = load i64, i64* %PC.i309
  %8604 = add i64 %8603, 4
  store i64 %8604, i64* %PC.i309
  %8605 = inttoptr i64 %8602 to i16*
  %8606 = load i16, i16* %8605
  %8607 = zext i16 %8606 to i64
  store i64 %8607, i64* %RSI.i312, align 8
  store %struct.Memory* %loadMem_404178, %struct.Memory** %MEMORY
  %loadMem_40417c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 33
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %8610 to i64*
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 9
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %ESI.i307 = bitcast %union.anon* %8613 to i32*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 1
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %RAX.i308 = bitcast %union.anon* %8616 to i64*
  %8617 = load i64, i64* %RAX.i308
  %8618 = load i32, i32* %ESI.i307
  %8619 = zext i32 %8618 to i64
  %8620 = load i64, i64* %PC.i306
  %8621 = add i64 %8620, 2
  store i64 %8621, i64* %PC.i306
  %8622 = trunc i64 %8617 to i32
  %8623 = add i32 %8618, %8622
  %8624 = zext i32 %8623 to i64
  store i64 %8624, i64* %RAX.i308, align 8
  %8625 = icmp ult i32 %8623, %8622
  %8626 = icmp ult i32 %8623, %8618
  %8627 = or i1 %8625, %8626
  %8628 = zext i1 %8627 to i8
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8628, i8* %8629, align 1
  %8630 = and i32 %8623, 255
  %8631 = call i32 @llvm.ctpop.i32(i32 %8630)
  %8632 = trunc i32 %8631 to i8
  %8633 = and i8 %8632, 1
  %8634 = xor i8 %8633, 1
  %8635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8634, i8* %8635, align 1
  %8636 = xor i64 %8619, %8617
  %8637 = trunc i64 %8636 to i32
  %8638 = xor i32 %8637, %8623
  %8639 = lshr i32 %8638, 4
  %8640 = trunc i32 %8639 to i8
  %8641 = and i8 %8640, 1
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8641, i8* %8642, align 1
  %8643 = icmp eq i32 %8623, 0
  %8644 = zext i1 %8643 to i8
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8644, i8* %8645, align 1
  %8646 = lshr i32 %8623, 31
  %8647 = trunc i32 %8646 to i8
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8647, i8* %8648, align 1
  %8649 = lshr i32 %8622, 31
  %8650 = lshr i32 %8618, 31
  %8651 = xor i32 %8646, %8649
  %8652 = xor i32 %8646, %8650
  %8653 = add i32 %8651, %8652
  %8654 = icmp eq i32 %8653, 2
  %8655 = zext i1 %8654 to i8
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8655, i8* %8656, align 1
  store %struct.Memory* %loadMem_40417c, %struct.Memory** %MEMORY
  %loadMem_40417e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8658 = getelementptr inbounds %struct.GPR, %struct.GPR* %8657, i32 0, i32 33
  %8659 = getelementptr inbounds %struct.Reg, %struct.Reg* %8658, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %8659 to i64*
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8661 = getelementptr inbounds %struct.GPR, %struct.GPR* %8660, i32 0, i32 1
  %8662 = getelementptr inbounds %struct.Reg, %struct.Reg* %8661, i32 0, i32 0
  %RAX.i305 = bitcast %union.anon* %8662 to i64*
  %8663 = load i64, i64* %RAX.i305
  %8664 = load i64, i64* %PC.i304
  %8665 = add i64 %8664, 3
  store i64 %8665, i64* %PC.i304
  %8666 = and i64 %8663, 4294967295
  %8667 = shl i64 %8666, 3
  %8668 = trunc i64 %8667 to i32
  %8669 = icmp slt i32 %8668, 0
  %8670 = shl i32 %8668, 1
  %8671 = zext i32 %8670 to i64
  store i64 %8671, i64* %RAX.i305, align 8
  %8672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8673 = zext i1 %8669 to i8
  store i8 %8673, i8* %8672, align 1
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8675 = and i32 %8670, 254
  %8676 = call i32 @llvm.ctpop.i32(i32 %8675)
  %8677 = trunc i32 %8676 to i8
  %8678 = and i8 %8677, 1
  %8679 = xor i8 %8678, 1
  store i8 %8679, i8* %8674, align 1
  %8680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8680, align 1
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8682 = icmp eq i32 %8670, 0
  %8683 = zext i1 %8682 to i8
  store i8 %8683, i8* %8681, align 1
  %8684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8685 = lshr i32 %8670, 31
  %8686 = trunc i32 %8685 to i8
  store i8 %8686, i8* %8684, align 1
  %8687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8687, align 1
  store %struct.Memory* %loadMem_40417e, %struct.Memory** %MEMORY
  %loadMem_404181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8689 = getelementptr inbounds %struct.GPR, %struct.GPR* %8688, i32 0, i32 33
  %8690 = getelementptr inbounds %struct.Reg, %struct.Reg* %8689, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %8690 to i64*
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8692 = getelementptr inbounds %struct.GPR, %struct.GPR* %8691, i32 0, i32 1
  %8693 = getelementptr inbounds %struct.Reg, %struct.Reg* %8692, i32 0, i32 0
  %EAX.i302 = bitcast %union.anon* %8693 to i32*
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8695 = getelementptr inbounds %struct.GPR, %struct.GPR* %8694, i32 0, i32 15
  %8696 = getelementptr inbounds %struct.Reg, %struct.Reg* %8695, i32 0, i32 0
  %RBP.i303 = bitcast %union.anon* %8696 to i64*
  %8697 = load i64, i64* %RBP.i303
  %8698 = sub i64 %8697, 172
  %8699 = load i32, i32* %EAX.i302
  %8700 = zext i32 %8699 to i64
  %8701 = load i64, i64* %PC.i301
  %8702 = add i64 %8701, 6
  store i64 %8702, i64* %PC.i301
  %8703 = inttoptr i64 %8698 to i32*
  store i32 %8699, i32* %8703
  store %struct.Memory* %loadMem_404181, %struct.Memory** %MEMORY
  %loadMem_404187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8705 = getelementptr inbounds %struct.GPR, %struct.GPR* %8704, i32 0, i32 33
  %8706 = getelementptr inbounds %struct.Reg, %struct.Reg* %8705, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %8706 to i64*
  %8707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8708 = getelementptr inbounds %struct.GPR, %struct.GPR* %8707, i32 0, i32 15
  %8709 = getelementptr inbounds %struct.Reg, %struct.Reg* %8708, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %8709 to i64*
  %8710 = load i64, i64* %RBP.i300
  %8711 = sub i64 %8710, 152
  %8712 = load i64, i64* %PC.i299
  %8713 = add i64 %8712, 10
  store i64 %8713, i64* %PC.i299
  %8714 = inttoptr i64 %8711 to i32*
  store i32 0, i32* %8714
  store %struct.Memory* %loadMem_404187, %struct.Memory** %MEMORY
  br label %block_.L_404191

block_.L_404191:                                  ; preds = %block_.L_4043bd, %block_.L_404117
  %loadMem_404191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8716 = getelementptr inbounds %struct.GPR, %struct.GPR* %8715, i32 0, i32 33
  %8717 = getelementptr inbounds %struct.Reg, %struct.Reg* %8716, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %8717 to i64*
  %8718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8719 = getelementptr inbounds %struct.GPR, %struct.GPR* %8718, i32 0, i32 15
  %8720 = getelementptr inbounds %struct.Reg, %struct.Reg* %8719, i32 0, i32 0
  %RBP.i298 = bitcast %union.anon* %8720 to i64*
  %8721 = load i64, i64* %RBP.i298
  %8722 = sub i64 %8721, 152
  %8723 = load i64, i64* %PC.i297
  %8724 = add i64 %8723, 7
  store i64 %8724, i64* %PC.i297
  %8725 = inttoptr i64 %8722 to i32*
  %8726 = load i32, i32* %8725
  %8727 = sub i32 %8726, 16
  %8728 = icmp ult i32 %8726, 16
  %8729 = zext i1 %8728 to i8
  %8730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8729, i8* %8730, align 1
  %8731 = and i32 %8727, 255
  %8732 = call i32 @llvm.ctpop.i32(i32 %8731)
  %8733 = trunc i32 %8732 to i8
  %8734 = and i8 %8733, 1
  %8735 = xor i8 %8734, 1
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8735, i8* %8736, align 1
  %8737 = xor i32 %8726, 16
  %8738 = xor i32 %8737, %8727
  %8739 = lshr i32 %8738, 4
  %8740 = trunc i32 %8739 to i8
  %8741 = and i8 %8740, 1
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8741, i8* %8742, align 1
  %8743 = icmp eq i32 %8727, 0
  %8744 = zext i1 %8743 to i8
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8744, i8* %8745, align 1
  %8746 = lshr i32 %8727, 31
  %8747 = trunc i32 %8746 to i8
  %8748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8747, i8* %8748, align 1
  %8749 = lshr i32 %8726, 31
  %8750 = xor i32 %8746, %8749
  %8751 = add i32 %8750, %8749
  %8752 = icmp eq i32 %8751, 2
  %8753 = zext i1 %8752 to i8
  %8754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8753, i8* %8754, align 1
  store %struct.Memory* %loadMem_404191, %struct.Memory** %MEMORY
  %loadMem_404198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8756 = getelementptr inbounds %struct.GPR, %struct.GPR* %8755, i32 0, i32 33
  %8757 = getelementptr inbounds %struct.Reg, %struct.Reg* %8756, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %8757 to i64*
  %8758 = load i64, i64* %PC.i296
  %8759 = add i64 %8758, 569
  %8760 = load i64, i64* %PC.i296
  %8761 = add i64 %8760, 6
  %8762 = load i64, i64* %PC.i296
  %8763 = add i64 %8762, 6
  store i64 %8763, i64* %PC.i296
  %8764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8765 = load i8, i8* %8764, align 1
  %8766 = icmp ne i8 %8765, 0
  %8767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8768 = load i8, i8* %8767, align 1
  %8769 = icmp ne i8 %8768, 0
  %8770 = xor i1 %8766, %8769
  %8771 = xor i1 %8770, true
  %8772 = zext i1 %8771 to i8
  store i8 %8772, i8* %BRANCH_TAKEN, align 1
  %8773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8774 = select i1 %8770, i64 %8761, i64 %8759
  store i64 %8774, i64* %8773, align 8
  store %struct.Memory* %loadMem_404198, %struct.Memory** %MEMORY
  %loadBr_404198 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404198 = icmp eq i8 %loadBr_404198, 1
  br i1 %cmpBr_404198, label %block_.L_4043d1, label %block_40419e

block_40419e:                                     ; preds = %block_.L_404191
  %loadMem_40419e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8776 = getelementptr inbounds %struct.GPR, %struct.GPR* %8775, i32 0, i32 33
  %8777 = getelementptr inbounds %struct.Reg, %struct.Reg* %8776, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %8777 to i64*
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8779 = getelementptr inbounds %struct.GPR, %struct.GPR* %8778, i32 0, i32 15
  %8780 = getelementptr inbounds %struct.Reg, %struct.Reg* %8779, i32 0, i32 0
  %RBP.i295 = bitcast %union.anon* %8780 to i64*
  %8781 = load i64, i64* %RBP.i295
  %8782 = sub i64 %8781, 148
  %8783 = load i64, i64* %PC.i294
  %8784 = add i64 %8783, 10
  store i64 %8784, i64* %PC.i294
  %8785 = inttoptr i64 %8782 to i32*
  store i32 0, i32* %8785
  store %struct.Memory* %loadMem_40419e, %struct.Memory** %MEMORY
  br label %block_.L_4041a8

block_.L_4041a8:                                  ; preds = %block_.L_40436c, %block_40419e
  %loadMem_4041a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8787 = getelementptr inbounds %struct.GPR, %struct.GPR* %8786, i32 0, i32 33
  %8788 = getelementptr inbounds %struct.Reg, %struct.Reg* %8787, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %8788 to i64*
  %8789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8790 = getelementptr inbounds %struct.GPR, %struct.GPR* %8789, i32 0, i32 15
  %8791 = getelementptr inbounds %struct.Reg, %struct.Reg* %8790, i32 0, i32 0
  %RBP.i293 = bitcast %union.anon* %8791 to i64*
  %8792 = load i64, i64* %RBP.i293
  %8793 = sub i64 %8792, 148
  %8794 = load i64, i64* %PC.i292
  %8795 = add i64 %8794, 7
  store i64 %8795, i64* %PC.i292
  %8796 = inttoptr i64 %8793 to i32*
  %8797 = load i32, i32* %8796
  %8798 = sub i32 %8797, 16
  %8799 = icmp ult i32 %8797, 16
  %8800 = zext i1 %8799 to i8
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8800, i8* %8801, align 1
  %8802 = and i32 %8798, 255
  %8803 = call i32 @llvm.ctpop.i32(i32 %8802)
  %8804 = trunc i32 %8803 to i8
  %8805 = and i8 %8804, 1
  %8806 = xor i8 %8805, 1
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8806, i8* %8807, align 1
  %8808 = xor i32 %8797, 16
  %8809 = xor i32 %8808, %8798
  %8810 = lshr i32 %8809, 4
  %8811 = trunc i32 %8810 to i8
  %8812 = and i8 %8811, 1
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8812, i8* %8813, align 1
  %8814 = icmp eq i32 %8798, 0
  %8815 = zext i1 %8814 to i8
  %8816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8815, i8* %8816, align 1
  %8817 = lshr i32 %8798, 31
  %8818 = trunc i32 %8817 to i8
  %8819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8818, i8* %8819, align 1
  %8820 = lshr i32 %8797, 31
  %8821 = xor i32 %8817, %8820
  %8822 = add i32 %8821, %8820
  %8823 = icmp eq i32 %8822, 2
  %8824 = zext i1 %8823 to i8
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8824, i8* %8825, align 1
  store %struct.Memory* %loadMem_4041a8, %struct.Memory** %MEMORY
  %loadMem_4041af = load %struct.Memory*, %struct.Memory** %MEMORY
  %8826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8827 = getelementptr inbounds %struct.GPR, %struct.GPR* %8826, i32 0, i32 33
  %8828 = getelementptr inbounds %struct.Reg, %struct.Reg* %8827, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %8828 to i64*
  %8829 = load i64, i64* %PC.i291
  %8830 = add i64 %8829, 521
  %8831 = load i64, i64* %PC.i291
  %8832 = add i64 %8831, 6
  %8833 = load i64, i64* %PC.i291
  %8834 = add i64 %8833, 6
  store i64 %8834, i64* %PC.i291
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8836 = load i8, i8* %8835, align 1
  %8837 = icmp ne i8 %8836, 0
  %8838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8839 = load i8, i8* %8838, align 1
  %8840 = icmp ne i8 %8839, 0
  %8841 = xor i1 %8837, %8840
  %8842 = xor i1 %8841, true
  %8843 = zext i1 %8842 to i8
  store i8 %8843, i8* %BRANCH_TAKEN, align 1
  %8844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8845 = select i1 %8841, i64 %8832, i64 %8830
  store i64 %8845, i64* %8844, align 8
  store %struct.Memory* %loadMem_4041af, %struct.Memory** %MEMORY
  %loadBr_4041af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4041af = icmp eq i8 %loadBr_4041af, 1
  br i1 %cmpBr_4041af, label %block_.L_4043b8, label %block_4041b5

block_4041b5:                                     ; preds = %block_.L_4041a8
  %loadMem_4041b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8847 = getelementptr inbounds %struct.GPR, %struct.GPR* %8846, i32 0, i32 33
  %8848 = getelementptr inbounds %struct.Reg, %struct.Reg* %8847, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %8848 to i64*
  %8849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8850 = getelementptr inbounds %struct.GPR, %struct.GPR* %8849, i32 0, i32 1
  %8851 = getelementptr inbounds %struct.Reg, %struct.Reg* %8850, i32 0, i32 0
  %RAX.i290 = bitcast %union.anon* %8851 to i64*
  %8852 = load i64, i64* %PC.i289
  %8853 = add i64 %8852, 5
  store i64 %8853, i64* %PC.i289
  store i64 32, i64* %RAX.i290, align 8
  store %struct.Memory* %loadMem_4041b5, %struct.Memory** %MEMORY
  %loadMem_4041ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %8854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8855 = getelementptr inbounds %struct.GPR, %struct.GPR* %8854, i32 0, i32 33
  %8856 = getelementptr inbounds %struct.Reg, %struct.Reg* %8855, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %8856 to i64*
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8858 = getelementptr inbounds %struct.GPR, %struct.GPR* %8857, i32 0, i32 5
  %8859 = getelementptr inbounds %struct.Reg, %struct.Reg* %8858, i32 0, i32 0
  %RCX.i288 = bitcast %union.anon* %8859 to i64*
  %8860 = load i64, i64* %PC.i287
  %8861 = add i64 %8860, 8
  store i64 %8861, i64* %PC.i287
  %8862 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8862, i64* %RCX.i288, align 8
  store %struct.Memory* %loadMem_4041ba, %struct.Memory** %MEMORY
  %loadMem_4041c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8864 = getelementptr inbounds %struct.GPR, %struct.GPR* %8863, i32 0, i32 33
  %8865 = getelementptr inbounds %struct.Reg, %struct.Reg* %8864, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %8865 to i64*
  %8866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8867 = getelementptr inbounds %struct.GPR, %struct.GPR* %8866, i32 0, i32 5
  %8868 = getelementptr inbounds %struct.Reg, %struct.Reg* %8867, i32 0, i32 0
  %RCX.i285 = bitcast %union.anon* %8868 to i64*
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8870 = getelementptr inbounds %struct.GPR, %struct.GPR* %8869, i32 0, i32 7
  %8871 = getelementptr inbounds %struct.Reg, %struct.Reg* %8870, i32 0, i32 0
  %RDX.i286 = bitcast %union.anon* %8871 to i64*
  %8872 = load i64, i64* %RCX.i285
  %8873 = add i64 %8872, 72684
  %8874 = load i64, i64* %PC.i284
  %8875 = add i64 %8874, 6
  store i64 %8875, i64* %PC.i284
  %8876 = inttoptr i64 %8873 to i32*
  %8877 = load i32, i32* %8876
  %8878 = zext i32 %8877 to i64
  store i64 %8878, i64* %RDX.i286, align 8
  store %struct.Memory* %loadMem_4041c2, %struct.Memory** %MEMORY
  %loadMem_4041c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8880 = getelementptr inbounds %struct.GPR, %struct.GPR* %8879, i32 0, i32 33
  %8881 = getelementptr inbounds %struct.Reg, %struct.Reg* %8880, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %8881 to i64*
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8883 = getelementptr inbounds %struct.GPR, %struct.GPR* %8882, i32 0, i32 9
  %8884 = getelementptr inbounds %struct.Reg, %struct.Reg* %8883, i32 0, i32 0
  %RSI.i282 = bitcast %union.anon* %8884 to i64*
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8886 = getelementptr inbounds %struct.GPR, %struct.GPR* %8885, i32 0, i32 15
  %8887 = getelementptr inbounds %struct.Reg, %struct.Reg* %8886, i32 0, i32 0
  %RBP.i283 = bitcast %union.anon* %8887 to i64*
  %8888 = load i64, i64* %RBP.i283
  %8889 = sub i64 %8888, 172
  %8890 = load i64, i64* %PC.i281
  %8891 = add i64 %8890, 6
  store i64 %8891, i64* %PC.i281
  %8892 = inttoptr i64 %8889 to i32*
  %8893 = load i32, i32* %8892
  %8894 = zext i32 %8893 to i64
  store i64 %8894, i64* %RSI.i282, align 8
  store %struct.Memory* %loadMem_4041c8, %struct.Memory** %MEMORY
  %loadMem_4041ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8896 = getelementptr inbounds %struct.GPR, %struct.GPR* %8895, i32 0, i32 33
  %8897 = getelementptr inbounds %struct.Reg, %struct.Reg* %8896, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %8897 to i64*
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8899 = getelementptr inbounds %struct.GPR, %struct.GPR* %8898, i32 0, i32 11
  %8900 = getelementptr inbounds %struct.Reg, %struct.Reg* %8899, i32 0, i32 0
  %RDI.i279 = bitcast %union.anon* %8900 to i64*
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8902 = getelementptr inbounds %struct.GPR, %struct.GPR* %8901, i32 0, i32 15
  %8903 = getelementptr inbounds %struct.Reg, %struct.Reg* %8902, i32 0, i32 0
  %RBP.i280 = bitcast %union.anon* %8903 to i64*
  %8904 = load i64, i64* %RBP.i280
  %8905 = sub i64 %8904, 148
  %8906 = load i64, i64* %PC.i278
  %8907 = add i64 %8906, 6
  store i64 %8907, i64* %PC.i278
  %8908 = inttoptr i64 %8905 to i32*
  %8909 = load i32, i32* %8908
  %8910 = zext i32 %8909 to i64
  store i64 %8910, i64* %RDI.i279, align 8
  store %struct.Memory* %loadMem_4041ce, %struct.Memory** %MEMORY
  %loadMem_4041d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8912 = getelementptr inbounds %struct.GPR, %struct.GPR* %8911, i32 0, i32 33
  %8913 = getelementptr inbounds %struct.Reg, %struct.Reg* %8912, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %8913 to i64*
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8915 = getelementptr inbounds %struct.GPR, %struct.GPR* %8914, i32 0, i32 11
  %8916 = getelementptr inbounds %struct.Reg, %struct.Reg* %8915, i32 0, i32 0
  %RDI.i277 = bitcast %union.anon* %8916 to i64*
  %8917 = load i64, i64* %RDI.i277
  %8918 = load i64, i64* %PC.i276
  %8919 = add i64 %8918, 3
  store i64 %8919, i64* %PC.i276
  %8920 = trunc i64 %8917 to i32
  %8921 = sub i32 %8920, 7
  %8922 = zext i32 %8921 to i64
  store i64 %8922, i64* %RDI.i277, align 8
  %8923 = icmp ult i32 %8920, 7
  %8924 = zext i1 %8923 to i8
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8924, i8* %8925, align 1
  %8926 = and i32 %8921, 255
  %8927 = call i32 @llvm.ctpop.i32(i32 %8926)
  %8928 = trunc i32 %8927 to i8
  %8929 = and i8 %8928, 1
  %8930 = xor i8 %8929, 1
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8930, i8* %8931, align 1
  %8932 = xor i64 7, %8917
  %8933 = trunc i64 %8932 to i32
  %8934 = xor i32 %8933, %8921
  %8935 = lshr i32 %8934, 4
  %8936 = trunc i32 %8935 to i8
  %8937 = and i8 %8936, 1
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8937, i8* %8938, align 1
  %8939 = icmp eq i32 %8921, 0
  %8940 = zext i1 %8939 to i8
  %8941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8940, i8* %8941, align 1
  %8942 = lshr i32 %8921, 31
  %8943 = trunc i32 %8942 to i8
  %8944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8943, i8* %8944, align 1
  %8945 = lshr i32 %8920, 31
  %8946 = xor i32 %8942, %8945
  %8947 = add i32 %8946, %8945
  %8948 = icmp eq i32 %8947, 2
  %8949 = zext i1 %8948 to i8
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8949, i8* %8950, align 1
  store %struct.Memory* %loadMem_4041d4, %struct.Memory** %MEMORY
  %loadMem_4041d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8952 = getelementptr inbounds %struct.GPR, %struct.GPR* %8951, i32 0, i32 33
  %8953 = getelementptr inbounds %struct.Reg, %struct.Reg* %8952, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %8953 to i64*
  %8954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8955 = getelementptr inbounds %struct.GPR, %struct.GPR* %8954, i32 0, i32 11
  %8956 = getelementptr inbounds %struct.Reg, %struct.Reg* %8955, i32 0, i32 0
  %RDI.i274 = bitcast %union.anon* %8956 to i64*
  %8957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8958 = getelementptr inbounds %struct.GPR, %struct.GPR* %8957, i32 0, i32 15
  %8959 = getelementptr inbounds %struct.Reg, %struct.Reg* %8958, i32 0, i32 0
  %RBP.i275 = bitcast %union.anon* %8959 to i64*
  %8960 = load i64, i64* %RDI.i274
  %8961 = load i64, i64* %RBP.i275
  %8962 = sub i64 %8961, 164
  %8963 = load i64, i64* %PC.i273
  %8964 = add i64 %8963, 7
  store i64 %8964, i64* %PC.i273
  %8965 = inttoptr i64 %8962 to i32*
  %8966 = load i32, i32* %8965
  %8967 = shl i64 %8960, 32
  %8968 = ashr exact i64 %8967, 32
  %8969 = sext i32 %8966 to i64
  %8970 = mul i64 %8969, %8968
  %8971 = trunc i64 %8970 to i32
  %8972 = and i64 %8970, 4294967295
  store i64 %8972, i64* %RDI.i274, align 8
  %8973 = shl i64 %8970, 32
  %8974 = ashr exact i64 %8973, 32
  %8975 = icmp ne i64 %8974, %8970
  %8976 = zext i1 %8975 to i8
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8976, i8* %8977, align 1
  %8978 = and i32 %8971, 255
  %8979 = call i32 @llvm.ctpop.i32(i32 %8978)
  %8980 = trunc i32 %8979 to i8
  %8981 = and i8 %8980, 1
  %8982 = xor i8 %8981, 1
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8982, i8* %8983, align 1
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8984, align 1
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8985, align 1
  %8986 = lshr i32 %8971, 31
  %8987 = trunc i32 %8986 to i8
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8987, i8* %8988, align 1
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8976, i8* %8989, align 1
  store %struct.Memory* %loadMem_4041d7, %struct.Memory** %MEMORY
  %loadMem_4041de = load %struct.Memory*, %struct.Memory** %MEMORY
  %8990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8991 = getelementptr inbounds %struct.GPR, %struct.GPR* %8990, i32 0, i32 33
  %8992 = getelementptr inbounds %struct.Reg, %struct.Reg* %8991, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %8992 to i64*
  %8993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8994 = getelementptr inbounds %struct.GPR, %struct.GPR* %8993, i32 0, i32 11
  %8995 = getelementptr inbounds %struct.Reg, %struct.Reg* %8994, i32 0, i32 0
  %EDI.i271 = bitcast %union.anon* %8995 to i32*
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8997 = getelementptr inbounds %struct.GPR, %struct.GPR* %8996, i32 0, i32 9
  %8998 = getelementptr inbounds %struct.Reg, %struct.Reg* %8997, i32 0, i32 0
  %RSI.i272 = bitcast %union.anon* %8998 to i64*
  %8999 = load i64, i64* %RSI.i272
  %9000 = load i32, i32* %EDI.i271
  %9001 = zext i32 %9000 to i64
  %9002 = load i64, i64* %PC.i270
  %9003 = add i64 %9002, 2
  store i64 %9003, i64* %PC.i270
  %9004 = trunc i64 %8999 to i32
  %9005 = add i32 %9000, %9004
  %9006 = zext i32 %9005 to i64
  store i64 %9006, i64* %RSI.i272, align 8
  %9007 = icmp ult i32 %9005, %9004
  %9008 = icmp ult i32 %9005, %9000
  %9009 = or i1 %9007, %9008
  %9010 = zext i1 %9009 to i8
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9010, i8* %9011, align 1
  %9012 = and i32 %9005, 255
  %9013 = call i32 @llvm.ctpop.i32(i32 %9012)
  %9014 = trunc i32 %9013 to i8
  %9015 = and i8 %9014, 1
  %9016 = xor i8 %9015, 1
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9016, i8* %9017, align 1
  %9018 = xor i64 %9001, %8999
  %9019 = trunc i64 %9018 to i32
  %9020 = xor i32 %9019, %9005
  %9021 = lshr i32 %9020, 4
  %9022 = trunc i32 %9021 to i8
  %9023 = and i8 %9022, 1
  %9024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9023, i8* %9024, align 1
  %9025 = icmp eq i32 %9005, 0
  %9026 = zext i1 %9025 to i8
  %9027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9026, i8* %9027, align 1
  %9028 = lshr i32 %9005, 31
  %9029 = trunc i32 %9028 to i8
  %9030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9029, i8* %9030, align 1
  %9031 = lshr i32 %9004, 31
  %9032 = lshr i32 %9000, 31
  %9033 = xor i32 %9028, %9031
  %9034 = xor i32 %9028, %9032
  %9035 = add i32 %9033, %9034
  %9036 = icmp eq i32 %9035, 2
  %9037 = zext i1 %9036 to i8
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9037, i8* %9038, align 1
  store %struct.Memory* %loadMem_4041de, %struct.Memory** %MEMORY
  %loadMem_4041e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9040 = getelementptr inbounds %struct.GPR, %struct.GPR* %9039, i32 0, i32 33
  %9041 = getelementptr inbounds %struct.Reg, %struct.Reg* %9040, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %9041 to i64*
  %9042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9043 = getelementptr inbounds %struct.GPR, %struct.GPR* %9042, i32 0, i32 11
  %9044 = getelementptr inbounds %struct.Reg, %struct.Reg* %9043, i32 0, i32 0
  %RDI.i268 = bitcast %union.anon* %9044 to i64*
  %9045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9046 = getelementptr inbounds %struct.GPR, %struct.GPR* %9045, i32 0, i32 15
  %9047 = getelementptr inbounds %struct.Reg, %struct.Reg* %9046, i32 0, i32 0
  %RBP.i269 = bitcast %union.anon* %9047 to i64*
  %9048 = load i64, i64* %RBP.i269
  %9049 = sub i64 %9048, 152
  %9050 = load i64, i64* %PC.i267
  %9051 = add i64 %9050, 6
  store i64 %9051, i64* %PC.i267
  %9052 = inttoptr i64 %9049 to i32*
  %9053 = load i32, i32* %9052
  %9054 = zext i32 %9053 to i64
  store i64 %9054, i64* %RDI.i268, align 8
  store %struct.Memory* %loadMem_4041e0, %struct.Memory** %MEMORY
  %loadMem_4041e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9056 = getelementptr inbounds %struct.GPR, %struct.GPR* %9055, i32 0, i32 33
  %9057 = getelementptr inbounds %struct.Reg, %struct.Reg* %9056, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %9057 to i64*
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9059 = getelementptr inbounds %struct.GPR, %struct.GPR* %9058, i32 0, i32 11
  %9060 = getelementptr inbounds %struct.Reg, %struct.Reg* %9059, i32 0, i32 0
  %RDI.i266 = bitcast %union.anon* %9060 to i64*
  %9061 = load i64, i64* %RDI.i266
  %9062 = load i64, i64* %PC.i265
  %9063 = add i64 %9062, 3
  store i64 %9063, i64* %PC.i265
  %9064 = trunc i64 %9061 to i32
  %9065 = sub i32 %9064, 7
  %9066 = zext i32 %9065 to i64
  store i64 %9066, i64* %RDI.i266, align 8
  %9067 = icmp ult i32 %9064, 7
  %9068 = zext i1 %9067 to i8
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9068, i8* %9069, align 1
  %9070 = and i32 %9065, 255
  %9071 = call i32 @llvm.ctpop.i32(i32 %9070)
  %9072 = trunc i32 %9071 to i8
  %9073 = and i8 %9072, 1
  %9074 = xor i8 %9073, 1
  %9075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9074, i8* %9075, align 1
  %9076 = xor i64 7, %9061
  %9077 = trunc i64 %9076 to i32
  %9078 = xor i32 %9077, %9065
  %9079 = lshr i32 %9078, 4
  %9080 = trunc i32 %9079 to i8
  %9081 = and i8 %9080, 1
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9081, i8* %9082, align 1
  %9083 = icmp eq i32 %9065, 0
  %9084 = zext i1 %9083 to i8
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9084, i8* %9085, align 1
  %9086 = lshr i32 %9065, 31
  %9087 = trunc i32 %9086 to i8
  %9088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9087, i8* %9088, align 1
  %9089 = lshr i32 %9064, 31
  %9090 = xor i32 %9086, %9089
  %9091 = add i32 %9090, %9089
  %9092 = icmp eq i32 %9091, 2
  %9093 = zext i1 %9092 to i8
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9093, i8* %9094, align 1
  store %struct.Memory* %loadMem_4041e6, %struct.Memory** %MEMORY
  %loadMem_4041e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9096 = getelementptr inbounds %struct.GPR, %struct.GPR* %9095, i32 0, i32 33
  %9097 = getelementptr inbounds %struct.Reg, %struct.Reg* %9096, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %9097 to i64*
  %9098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9099 = getelementptr inbounds %struct.GPR, %struct.GPR* %9098, i32 0, i32 11
  %9100 = getelementptr inbounds %struct.Reg, %struct.Reg* %9099, i32 0, i32 0
  %RDI.i263 = bitcast %union.anon* %9100 to i64*
  %9101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9102 = getelementptr inbounds %struct.GPR, %struct.GPR* %9101, i32 0, i32 15
  %9103 = getelementptr inbounds %struct.Reg, %struct.Reg* %9102, i32 0, i32 0
  %RBP.i264 = bitcast %union.anon* %9103 to i64*
  %9104 = load i64, i64* %RDI.i263
  %9105 = load i64, i64* %RBP.i264
  %9106 = sub i64 %9105, 168
  %9107 = load i64, i64* %PC.i262
  %9108 = add i64 %9107, 7
  store i64 %9108, i64* %PC.i262
  %9109 = inttoptr i64 %9106 to i32*
  %9110 = load i32, i32* %9109
  %9111 = shl i64 %9104, 32
  %9112 = ashr exact i64 %9111, 32
  %9113 = sext i32 %9110 to i64
  %9114 = mul i64 %9113, %9112
  %9115 = trunc i64 %9114 to i32
  %9116 = and i64 %9114, 4294967295
  store i64 %9116, i64* %RDI.i263, align 8
  %9117 = shl i64 %9114, 32
  %9118 = ashr exact i64 %9117, 32
  %9119 = icmp ne i64 %9118, %9114
  %9120 = zext i1 %9119 to i8
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9120, i8* %9121, align 1
  %9122 = and i32 %9115, 255
  %9123 = call i32 @llvm.ctpop.i32(i32 %9122)
  %9124 = trunc i32 %9123 to i8
  %9125 = and i8 %9124, 1
  %9126 = xor i8 %9125, 1
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9126, i8* %9127, align 1
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9128, align 1
  %9129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9129, align 1
  %9130 = lshr i32 %9115, 31
  %9131 = trunc i32 %9130 to i8
  %9132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9131, i8* %9132, align 1
  %9133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9120, i8* %9133, align 1
  store %struct.Memory* %loadMem_4041e9, %struct.Memory** %MEMORY
  %loadMem_4041f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 33
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %9136 to i64*
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9138 = getelementptr inbounds %struct.GPR, %struct.GPR* %9137, i32 0, i32 11
  %9139 = getelementptr inbounds %struct.Reg, %struct.Reg* %9138, i32 0, i32 0
  %EDI.i260 = bitcast %union.anon* %9139 to i32*
  %9140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9141 = getelementptr inbounds %struct.GPR, %struct.GPR* %9140, i32 0, i32 9
  %9142 = getelementptr inbounds %struct.Reg, %struct.Reg* %9141, i32 0, i32 0
  %RSI.i261 = bitcast %union.anon* %9142 to i64*
  %9143 = load i64, i64* %RSI.i261
  %9144 = load i32, i32* %EDI.i260
  %9145 = zext i32 %9144 to i64
  %9146 = load i64, i64* %PC.i259
  %9147 = add i64 %9146, 2
  store i64 %9147, i64* %PC.i259
  %9148 = trunc i64 %9143 to i32
  %9149 = add i32 %9144, %9148
  %9150 = zext i32 %9149 to i64
  store i64 %9150, i64* %RSI.i261, align 8
  %9151 = icmp ult i32 %9149, %9148
  %9152 = icmp ult i32 %9149, %9144
  %9153 = or i1 %9151, %9152
  %9154 = zext i1 %9153 to i8
  %9155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9154, i8* %9155, align 1
  %9156 = and i32 %9149, 255
  %9157 = call i32 @llvm.ctpop.i32(i32 %9156)
  %9158 = trunc i32 %9157 to i8
  %9159 = and i8 %9158, 1
  %9160 = xor i8 %9159, 1
  %9161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9160, i8* %9161, align 1
  %9162 = xor i64 %9145, %9143
  %9163 = trunc i64 %9162 to i32
  %9164 = xor i32 %9163, %9149
  %9165 = lshr i32 %9164, 4
  %9166 = trunc i32 %9165 to i8
  %9167 = and i8 %9166, 1
  %9168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9167, i8* %9168, align 1
  %9169 = icmp eq i32 %9149, 0
  %9170 = zext i1 %9169 to i8
  %9171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9170, i8* %9171, align 1
  %9172 = lshr i32 %9149, 31
  %9173 = trunc i32 %9172 to i8
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9173, i8* %9174, align 1
  %9175 = lshr i32 %9148, 31
  %9176 = lshr i32 %9144, 31
  %9177 = xor i32 %9172, %9175
  %9178 = xor i32 %9172, %9176
  %9179 = add i32 %9177, %9178
  %9180 = icmp eq i32 %9179, 2
  %9181 = zext i1 %9180 to i8
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9181, i8* %9182, align 1
  store %struct.Memory* %loadMem_4041f0, %struct.Memory** %MEMORY
  %loadMem_4041f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9184 = getelementptr inbounds %struct.GPR, %struct.GPR* %9183, i32 0, i32 33
  %9185 = getelementptr inbounds %struct.Reg, %struct.Reg* %9184, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %9185 to i64*
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9187 = getelementptr inbounds %struct.GPR, %struct.GPR* %9186, i32 0, i32 9
  %9188 = getelementptr inbounds %struct.Reg, %struct.Reg* %9187, i32 0, i32 0
  %RSI.i258 = bitcast %union.anon* %9188 to i64*
  %9189 = load i64, i64* %RSI.i258
  %9190 = load i64, i64* %PC.i257
  %9191 = add i64 %9190, 3
  store i64 %9191, i64* %PC.i257
  %9192 = trunc i64 %9189 to i32
  %9193 = add i32 16, %9192
  %9194 = zext i32 %9193 to i64
  store i64 %9194, i64* %RSI.i258, align 8
  %9195 = icmp ult i32 %9193, %9192
  %9196 = icmp ult i32 %9193, 16
  %9197 = or i1 %9195, %9196
  %9198 = zext i1 %9197 to i8
  %9199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9198, i8* %9199, align 1
  %9200 = and i32 %9193, 255
  %9201 = call i32 @llvm.ctpop.i32(i32 %9200)
  %9202 = trunc i32 %9201 to i8
  %9203 = and i8 %9202, 1
  %9204 = xor i8 %9203, 1
  %9205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9204, i8* %9205, align 1
  %9206 = xor i64 16, %9189
  %9207 = trunc i64 %9206 to i32
  %9208 = xor i32 %9207, %9193
  %9209 = lshr i32 %9208, 4
  %9210 = trunc i32 %9209 to i8
  %9211 = and i8 %9210, 1
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9211, i8* %9212, align 1
  %9213 = icmp eq i32 %9193, 0
  %9214 = zext i1 %9213 to i8
  %9215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9214, i8* %9215, align 1
  %9216 = lshr i32 %9193, 31
  %9217 = trunc i32 %9216 to i8
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9217, i8* %9218, align 1
  %9219 = lshr i32 %9192, 31
  %9220 = xor i32 %9216, %9219
  %9221 = add i32 %9220, %9216
  %9222 = icmp eq i32 %9221, 2
  %9223 = zext i1 %9222 to i8
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9223, i8* %9224, align 1
  store %struct.Memory* %loadMem_4041f2, %struct.Memory** %MEMORY
  %loadMem_4041f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9226 = getelementptr inbounds %struct.GPR, %struct.GPR* %9225, i32 0, i32 33
  %9227 = getelementptr inbounds %struct.Reg, %struct.Reg* %9226, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %9227 to i64*
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9229 = getelementptr inbounds %struct.GPR, %struct.GPR* %9228, i32 0, i32 1
  %9230 = getelementptr inbounds %struct.Reg, %struct.Reg* %9229, i32 0, i32 0
  %EAX.i255 = bitcast %union.anon* %9230 to i32*
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9232 = getelementptr inbounds %struct.GPR, %struct.GPR* %9231, i32 0, i32 15
  %9233 = getelementptr inbounds %struct.Reg, %struct.Reg* %9232, i32 0, i32 0
  %RBP.i256 = bitcast %union.anon* %9233 to i64*
  %9234 = load i64, i64* %RBP.i256
  %9235 = sub i64 %9234, 664
  %9236 = load i32, i32* %EAX.i255
  %9237 = zext i32 %9236 to i64
  %9238 = load i64, i64* %PC.i254
  %9239 = add i64 %9238, 6
  store i64 %9239, i64* %PC.i254
  %9240 = inttoptr i64 %9235 to i32*
  store i32 %9236, i32* %9240
  store %struct.Memory* %loadMem_4041f5, %struct.Memory** %MEMORY
  %loadMem_4041fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9242 = getelementptr inbounds %struct.GPR, %struct.GPR* %9241, i32 0, i32 33
  %9243 = getelementptr inbounds %struct.Reg, %struct.Reg* %9242, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %9243 to i64*
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9245 = getelementptr inbounds %struct.GPR, %struct.GPR* %9244, i32 0, i32 9
  %9246 = getelementptr inbounds %struct.Reg, %struct.Reg* %9245, i32 0, i32 0
  %ESI.i252 = bitcast %union.anon* %9246 to i32*
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9248 = getelementptr inbounds %struct.GPR, %struct.GPR* %9247, i32 0, i32 1
  %9249 = getelementptr inbounds %struct.Reg, %struct.Reg* %9248, i32 0, i32 0
  %RAX.i253 = bitcast %union.anon* %9249 to i64*
  %9250 = load i32, i32* %ESI.i252
  %9251 = zext i32 %9250 to i64
  %9252 = load i64, i64* %PC.i251
  %9253 = add i64 %9252, 2
  store i64 %9253, i64* %PC.i251
  %9254 = and i64 %9251, 4294967295
  store i64 %9254, i64* %RAX.i253, align 8
  store %struct.Memory* %loadMem_4041fb, %struct.Memory** %MEMORY
  %loadMem_4041fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9256 = getelementptr inbounds %struct.GPR, %struct.GPR* %9255, i32 0, i32 33
  %9257 = getelementptr inbounds %struct.Reg, %struct.Reg* %9256, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %9257 to i64*
  %9258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9259 = getelementptr inbounds %struct.GPR, %struct.GPR* %9258, i32 0, i32 7
  %9260 = getelementptr inbounds %struct.Reg, %struct.Reg* %9259, i32 0, i32 0
  %EDX.i249 = bitcast %union.anon* %9260 to i32*
  %9261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9262 = getelementptr inbounds %struct.GPR, %struct.GPR* %9261, i32 0, i32 15
  %9263 = getelementptr inbounds %struct.Reg, %struct.Reg* %9262, i32 0, i32 0
  %RBP.i250 = bitcast %union.anon* %9263 to i64*
  %9264 = load i64, i64* %RBP.i250
  %9265 = sub i64 %9264, 668
  %9266 = load i32, i32* %EDX.i249
  %9267 = zext i32 %9266 to i64
  %9268 = load i64, i64* %PC.i248
  %9269 = add i64 %9268, 6
  store i64 %9269, i64* %PC.i248
  %9270 = inttoptr i64 %9265 to i32*
  store i32 %9266, i32* %9270
  store %struct.Memory* %loadMem_4041fd, %struct.Memory** %MEMORY
  %loadMem_404203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9272 = getelementptr inbounds %struct.GPR, %struct.GPR* %9271, i32 0, i32 33
  %9273 = getelementptr inbounds %struct.Reg, %struct.Reg* %9272, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %9273 to i64*
  %9274 = load i64, i64* %PC.i247
  %9275 = add i64 %9274, 1
  store i64 %9275, i64* %PC.i247
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9278 = bitcast %union.anon* %9277 to i32*
  %9279 = load i32, i32* %9278, align 8
  %9280 = sext i32 %9279 to i64
  %9281 = lshr i64 %9280, 32
  store i64 %9281, i64* %9276, align 8
  store %struct.Memory* %loadMem_404203, %struct.Memory** %MEMORY
  %loadMem_404204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9283 = getelementptr inbounds %struct.GPR, %struct.GPR* %9282, i32 0, i32 33
  %9284 = getelementptr inbounds %struct.Reg, %struct.Reg* %9283, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %9284 to i64*
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9286 = getelementptr inbounds %struct.GPR, %struct.GPR* %9285, i32 0, i32 9
  %9287 = getelementptr inbounds %struct.Reg, %struct.Reg* %9286, i32 0, i32 0
  %RSI.i245 = bitcast %union.anon* %9287 to i64*
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9289 = getelementptr inbounds %struct.GPR, %struct.GPR* %9288, i32 0, i32 15
  %9290 = getelementptr inbounds %struct.Reg, %struct.Reg* %9289, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %9290 to i64*
  %9291 = load i64, i64* %RBP.i246
  %9292 = sub i64 %9291, 664
  %9293 = load i64, i64* %PC.i244
  %9294 = add i64 %9293, 6
  store i64 %9294, i64* %PC.i244
  %9295 = inttoptr i64 %9292 to i32*
  %9296 = load i32, i32* %9295
  %9297 = zext i32 %9296 to i64
  store i64 %9297, i64* %RSI.i245, align 8
  store %struct.Memory* %loadMem_404204, %struct.Memory** %MEMORY
  %loadMem_40420a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9299 = getelementptr inbounds %struct.GPR, %struct.GPR* %9298, i32 0, i32 33
  %9300 = getelementptr inbounds %struct.Reg, %struct.Reg* %9299, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %9300 to i64*
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9302 = getelementptr inbounds %struct.GPR, %struct.GPR* %9301, i32 0, i32 9
  %9303 = getelementptr inbounds %struct.Reg, %struct.Reg* %9302, i32 0, i32 0
  %ESI.i240 = bitcast %union.anon* %9303 to i32*
  %9304 = load i32, i32* %ESI.i240
  %9305 = zext i32 %9304 to i64
  %9306 = load i64, i64* %PC.i239
  %9307 = add i64 %9306, 2
  store i64 %9307, i64* %PC.i239
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9309 = bitcast %union.anon* %9308 to i32*
  %9310 = load i32, i32* %9309, align 8
  %9311 = zext i32 %9310 to i64
  %9312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %9313 = bitcast %union.anon* %9312 to i32*
  %9314 = load i32, i32* %9313, align 8
  %9315 = zext i32 %9314 to i64
  %9316 = shl i64 %9305, 32
  %9317 = ashr exact i64 %9316, 32
  %9318 = shl i64 %9315, 32
  %9319 = or i64 %9318, %9311
  %9320 = sdiv i64 %9319, %9317
  %9321 = shl i64 %9320, 32
  %9322 = ashr exact i64 %9321, 32
  %9323 = icmp eq i64 %9320, %9322
  br i1 %9323, label %9328, label %9324

; <label>:9324:                                   ; preds = %block_4041b5
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9326 = load i64, i64* %9325, align 8
  %9327 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9326, %struct.Memory* %loadMem_40420a)
  br label %routine_idivl__esi.exit241

; <label>:9328:                                   ; preds = %block_4041b5
  %9329 = srem i64 %9319, %9317
  %9330 = getelementptr inbounds %union.anon, %union.anon* %9308, i64 0, i32 0
  %9331 = and i64 %9320, 4294967295
  store i64 %9331, i64* %9330, align 8
  %9332 = getelementptr inbounds %union.anon, %union.anon* %9312, i64 0, i32 0
  %9333 = and i64 %9329, 4294967295
  store i64 %9333, i64* %9332, align 8
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9334, align 1
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %9335, align 1
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9336, align 1
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9337, align 1
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9338, align 1
  %9339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9339, align 1
  br label %routine_idivl__esi.exit241

routine_idivl__esi.exit241:                       ; preds = %9324, %9328
  %9340 = phi %struct.Memory* [ %9327, %9324 ], [ %loadMem_40420a, %9328 ]
  store %struct.Memory* %9340, %struct.Memory** %MEMORY
  %loadMem_40420c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9342 = getelementptr inbounds %struct.GPR, %struct.GPR* %9341, i32 0, i32 33
  %9343 = getelementptr inbounds %struct.Reg, %struct.Reg* %9342, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %9343 to i64*
  %9344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9345 = getelementptr inbounds %struct.GPR, %struct.GPR* %9344, i32 0, i32 11
  %9346 = getelementptr inbounds %struct.Reg, %struct.Reg* %9345, i32 0, i32 0
  %RDI.i237 = bitcast %union.anon* %9346 to i64*
  %9347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9348 = getelementptr inbounds %struct.GPR, %struct.GPR* %9347, i32 0, i32 15
  %9349 = getelementptr inbounds %struct.Reg, %struct.Reg* %9348, i32 0, i32 0
  %RBP.i238 = bitcast %union.anon* %9349 to i64*
  %9350 = load i64, i64* %RBP.i238
  %9351 = sub i64 %9350, 668
  %9352 = load i64, i64* %PC.i236
  %9353 = add i64 %9352, 6
  store i64 %9353, i64* %PC.i236
  %9354 = inttoptr i64 %9351 to i32*
  %9355 = load i32, i32* %9354
  %9356 = zext i32 %9355 to i64
  store i64 %9356, i64* %RDI.i237, align 8
  store %struct.Memory* %loadMem_40420c, %struct.Memory** %MEMORY
  %loadMem_404212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9358 = getelementptr inbounds %struct.GPR, %struct.GPR* %9357, i32 0, i32 33
  %9359 = getelementptr inbounds %struct.Reg, %struct.Reg* %9358, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %9359 to i64*
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9361 = getelementptr inbounds %struct.GPR, %struct.GPR* %9360, i32 0, i32 1
  %9362 = getelementptr inbounds %struct.Reg, %struct.Reg* %9361, i32 0, i32 0
  %EAX.i234 = bitcast %union.anon* %9362 to i32*
  %9363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9364 = getelementptr inbounds %struct.GPR, %struct.GPR* %9363, i32 0, i32 11
  %9365 = getelementptr inbounds %struct.Reg, %struct.Reg* %9364, i32 0, i32 0
  %EDI.i235 = bitcast %union.anon* %9365 to i32*
  %9366 = load i32, i32* %EDI.i235
  %9367 = zext i32 %9366 to i64
  %9368 = load i32, i32* %EAX.i234
  %9369 = zext i32 %9368 to i64
  %9370 = load i64, i64* %PC.i233
  %9371 = add i64 %9370, 2
  store i64 %9371, i64* %PC.i233
  %9372 = sub i32 %9366, %9368
  %9373 = icmp ult i32 %9366, %9368
  %9374 = zext i1 %9373 to i8
  %9375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9374, i8* %9375, align 1
  %9376 = and i32 %9372, 255
  %9377 = call i32 @llvm.ctpop.i32(i32 %9376)
  %9378 = trunc i32 %9377 to i8
  %9379 = and i8 %9378, 1
  %9380 = xor i8 %9379, 1
  %9381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9380, i8* %9381, align 1
  %9382 = xor i64 %9369, %9367
  %9383 = trunc i64 %9382 to i32
  %9384 = xor i32 %9383, %9372
  %9385 = lshr i32 %9384, 4
  %9386 = trunc i32 %9385 to i8
  %9387 = and i8 %9386, 1
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9387, i8* %9388, align 1
  %9389 = icmp eq i32 %9372, 0
  %9390 = zext i1 %9389 to i8
  %9391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9390, i8* %9391, align 1
  %9392 = lshr i32 %9372, 31
  %9393 = trunc i32 %9392 to i8
  %9394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9393, i8* %9394, align 1
  %9395 = lshr i32 %9366, 31
  %9396 = lshr i32 %9368, 31
  %9397 = xor i32 %9396, %9395
  %9398 = xor i32 %9392, %9395
  %9399 = add i32 %9398, %9397
  %9400 = icmp eq i32 %9399, 2
  %9401 = zext i1 %9400 to i8
  %9402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9401, i8* %9402, align 1
  store %struct.Memory* %loadMem_404212, %struct.Memory** %MEMORY
  %loadMem_404214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9404 = getelementptr inbounds %struct.GPR, %struct.GPR* %9403, i32 0, i32 33
  %9405 = getelementptr inbounds %struct.Reg, %struct.Reg* %9404, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %9405 to i64*
  %9406 = load i64, i64* %PC.i232
  %9407 = add i64 %9406, 31
  %9408 = load i64, i64* %PC.i232
  %9409 = add i64 %9408, 6
  %9410 = load i64, i64* %PC.i232
  %9411 = add i64 %9410, 6
  store i64 %9411, i64* %PC.i232
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9413 = load i8, i8* %9412, align 1
  %9414 = icmp ne i8 %9413, 0
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9416 = load i8, i8* %9415, align 1
  %9417 = icmp ne i8 %9416, 0
  %9418 = xor i1 %9414, %9417
  %9419 = xor i1 %9418, true
  %9420 = zext i1 %9419 to i8
  store i8 %9420, i8* %BRANCH_TAKEN, align 1
  %9421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9422 = select i1 %9418, i64 %9409, i64 %9407
  store i64 %9422, i64* %9421, align 8
  store %struct.Memory* %loadMem_404214, %struct.Memory** %MEMORY
  %loadBr_404214 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404214 = icmp eq i8 %loadBr_404214, 1
  br i1 %cmpBr_404214, label %block_.L_404233, label %block_40421a

block_40421a:                                     ; preds = %routine_idivl__esi.exit241
  %loadMem_40421a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9424 = getelementptr inbounds %struct.GPR, %struct.GPR* %9423, i32 0, i32 33
  %9425 = getelementptr inbounds %struct.Reg, %struct.Reg* %9424, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %9425 to i64*
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9427 = getelementptr inbounds %struct.GPR, %struct.GPR* %9426, i32 0, i32 1
  %9428 = getelementptr inbounds %struct.Reg, %struct.Reg* %9427, i32 0, i32 0
  %RAX.i231 = bitcast %union.anon* %9428 to i64*
  %9429 = load i64, i64* %PC.i230
  %9430 = add i64 %9429, 8
  store i64 %9430, i64* %PC.i230
  %9431 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9431, i64* %RAX.i231, align 8
  store %struct.Memory* %loadMem_40421a, %struct.Memory** %MEMORY
  %loadMem_404222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 33
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %9434 to i64*
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9436 = getelementptr inbounds %struct.GPR, %struct.GPR* %9435, i32 0, i32 1
  %9437 = getelementptr inbounds %struct.Reg, %struct.Reg* %9436, i32 0, i32 0
  %RAX.i228 = bitcast %union.anon* %9437 to i64*
  %9438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9439 = getelementptr inbounds %struct.GPR, %struct.GPR* %9438, i32 0, i32 5
  %9440 = getelementptr inbounds %struct.Reg, %struct.Reg* %9439, i32 0, i32 0
  %RCX.i229 = bitcast %union.anon* %9440 to i64*
  %9441 = load i64, i64* %RAX.i228
  %9442 = add i64 %9441, 72684
  %9443 = load i64, i64* %PC.i227
  %9444 = add i64 %9443, 6
  store i64 %9444, i64* %PC.i227
  %9445 = inttoptr i64 %9442 to i32*
  %9446 = load i32, i32* %9445
  %9447 = zext i32 %9446 to i64
  store i64 %9447, i64* %RCX.i229, align 8
  store %struct.Memory* %loadMem_404222, %struct.Memory** %MEMORY
  %loadMem_404228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9449 = getelementptr inbounds %struct.GPR, %struct.GPR* %9448, i32 0, i32 33
  %9450 = getelementptr inbounds %struct.Reg, %struct.Reg* %9449, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %9450 to i64*
  %9451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9452 = getelementptr inbounds %struct.GPR, %struct.GPR* %9451, i32 0, i32 5
  %9453 = getelementptr inbounds %struct.Reg, %struct.Reg* %9452, i32 0, i32 0
  %ECX.i225 = bitcast %union.anon* %9453 to i32*
  %9454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9455 = getelementptr inbounds %struct.GPR, %struct.GPR* %9454, i32 0, i32 15
  %9456 = getelementptr inbounds %struct.Reg, %struct.Reg* %9455, i32 0, i32 0
  %RBP.i226 = bitcast %union.anon* %9456 to i64*
  %9457 = load i64, i64* %RBP.i226
  %9458 = sub i64 %9457, 672
  %9459 = load i32, i32* %ECX.i225
  %9460 = zext i32 %9459 to i64
  %9461 = load i64, i64* %PC.i224
  %9462 = add i64 %9461, 6
  store i64 %9462, i64* %PC.i224
  %9463 = inttoptr i64 %9458 to i32*
  store i32 %9459, i32* %9463
  store %struct.Memory* %loadMem_404228, %struct.Memory** %MEMORY
  %loadMem_40422e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9465 = getelementptr inbounds %struct.GPR, %struct.GPR* %9464, i32 0, i32 33
  %9466 = getelementptr inbounds %struct.Reg, %struct.Reg* %9465, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %9466 to i64*
  %9467 = load i64, i64* %PC.i223
  %9468 = add i64 %9467, 78
  %9469 = load i64, i64* %PC.i223
  %9470 = add i64 %9469, 5
  store i64 %9470, i64* %PC.i223
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9468, i64* %9471, align 8
  store %struct.Memory* %loadMem_40422e, %struct.Memory** %MEMORY
  br label %block_.L_40427c

block_.L_404233:                                  ; preds = %routine_idivl__esi.exit241
  %loadMem_404233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9473 = getelementptr inbounds %struct.GPR, %struct.GPR* %9472, i32 0, i32 33
  %9474 = getelementptr inbounds %struct.Reg, %struct.Reg* %9473, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %9474 to i64*
  %9475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9476 = getelementptr inbounds %struct.GPR, %struct.GPR* %9475, i32 0, i32 1
  %9477 = getelementptr inbounds %struct.Reg, %struct.Reg* %9476, i32 0, i32 0
  %RAX.i222 = bitcast %union.anon* %9477 to i64*
  %9478 = load i64, i64* %PC.i221
  %9479 = add i64 %9478, 5
  store i64 %9479, i64* %PC.i221
  store i64 32, i64* %RAX.i222, align 8
  store %struct.Memory* %loadMem_404233, %struct.Memory** %MEMORY
  %loadMem_404238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9481 = getelementptr inbounds %struct.GPR, %struct.GPR* %9480, i32 0, i32 33
  %9482 = getelementptr inbounds %struct.Reg, %struct.Reg* %9481, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %9482 to i64*
  %9483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9484 = getelementptr inbounds %struct.GPR, %struct.GPR* %9483, i32 0, i32 5
  %9485 = getelementptr inbounds %struct.Reg, %struct.Reg* %9484, i32 0, i32 0
  %RCX.i219 = bitcast %union.anon* %9485 to i64*
  %9486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9487 = getelementptr inbounds %struct.GPR, %struct.GPR* %9486, i32 0, i32 15
  %9488 = getelementptr inbounds %struct.Reg, %struct.Reg* %9487, i32 0, i32 0
  %RBP.i220 = bitcast %union.anon* %9488 to i64*
  %9489 = load i64, i64* %RBP.i220
  %9490 = sub i64 %9489, 172
  %9491 = load i64, i64* %PC.i218
  %9492 = add i64 %9491, 6
  store i64 %9492, i64* %PC.i218
  %9493 = inttoptr i64 %9490 to i32*
  %9494 = load i32, i32* %9493
  %9495 = zext i32 %9494 to i64
  store i64 %9495, i64* %RCX.i219, align 8
  store %struct.Memory* %loadMem_404238, %struct.Memory** %MEMORY
  %loadMem_40423e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9497 = getelementptr inbounds %struct.GPR, %struct.GPR* %9496, i32 0, i32 33
  %9498 = getelementptr inbounds %struct.Reg, %struct.Reg* %9497, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %9498 to i64*
  %9499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9500 = getelementptr inbounds %struct.GPR, %struct.GPR* %9499, i32 0, i32 7
  %9501 = getelementptr inbounds %struct.Reg, %struct.Reg* %9500, i32 0, i32 0
  %RDX.i216 = bitcast %union.anon* %9501 to i64*
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9503 = getelementptr inbounds %struct.GPR, %struct.GPR* %9502, i32 0, i32 15
  %9504 = getelementptr inbounds %struct.Reg, %struct.Reg* %9503, i32 0, i32 0
  %RBP.i217 = bitcast %union.anon* %9504 to i64*
  %9505 = load i64, i64* %RBP.i217
  %9506 = sub i64 %9505, 148
  %9507 = load i64, i64* %PC.i215
  %9508 = add i64 %9507, 6
  store i64 %9508, i64* %PC.i215
  %9509 = inttoptr i64 %9506 to i32*
  %9510 = load i32, i32* %9509
  %9511 = zext i32 %9510 to i64
  store i64 %9511, i64* %RDX.i216, align 8
  store %struct.Memory* %loadMem_40423e, %struct.Memory** %MEMORY
  %loadMem_404244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9513 = getelementptr inbounds %struct.GPR, %struct.GPR* %9512, i32 0, i32 33
  %9514 = getelementptr inbounds %struct.Reg, %struct.Reg* %9513, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %9514 to i64*
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9516 = getelementptr inbounds %struct.GPR, %struct.GPR* %9515, i32 0, i32 7
  %9517 = getelementptr inbounds %struct.Reg, %struct.Reg* %9516, i32 0, i32 0
  %RDX.i214 = bitcast %union.anon* %9517 to i64*
  %9518 = load i64, i64* %RDX.i214
  %9519 = load i64, i64* %PC.i213
  %9520 = add i64 %9519, 3
  store i64 %9520, i64* %PC.i213
  %9521 = trunc i64 %9518 to i32
  %9522 = sub i32 %9521, 7
  %9523 = zext i32 %9522 to i64
  store i64 %9523, i64* %RDX.i214, align 8
  %9524 = icmp ult i32 %9521, 7
  %9525 = zext i1 %9524 to i8
  %9526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9525, i8* %9526, align 1
  %9527 = and i32 %9522, 255
  %9528 = call i32 @llvm.ctpop.i32(i32 %9527)
  %9529 = trunc i32 %9528 to i8
  %9530 = and i8 %9529, 1
  %9531 = xor i8 %9530, 1
  %9532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9531, i8* %9532, align 1
  %9533 = xor i64 7, %9518
  %9534 = trunc i64 %9533 to i32
  %9535 = xor i32 %9534, %9522
  %9536 = lshr i32 %9535, 4
  %9537 = trunc i32 %9536 to i8
  %9538 = and i8 %9537, 1
  %9539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9538, i8* %9539, align 1
  %9540 = icmp eq i32 %9522, 0
  %9541 = zext i1 %9540 to i8
  %9542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9541, i8* %9542, align 1
  %9543 = lshr i32 %9522, 31
  %9544 = trunc i32 %9543 to i8
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9544, i8* %9545, align 1
  %9546 = lshr i32 %9521, 31
  %9547 = xor i32 %9543, %9546
  %9548 = add i32 %9547, %9546
  %9549 = icmp eq i32 %9548, 2
  %9550 = zext i1 %9549 to i8
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9550, i8* %9551, align 1
  store %struct.Memory* %loadMem_404244, %struct.Memory** %MEMORY
  %loadMem_404247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9553 = getelementptr inbounds %struct.GPR, %struct.GPR* %9552, i32 0, i32 33
  %9554 = getelementptr inbounds %struct.Reg, %struct.Reg* %9553, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %9554 to i64*
  %9555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9556 = getelementptr inbounds %struct.GPR, %struct.GPR* %9555, i32 0, i32 7
  %9557 = getelementptr inbounds %struct.Reg, %struct.Reg* %9556, i32 0, i32 0
  %RDX.i211 = bitcast %union.anon* %9557 to i64*
  %9558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9559 = getelementptr inbounds %struct.GPR, %struct.GPR* %9558, i32 0, i32 15
  %9560 = getelementptr inbounds %struct.Reg, %struct.Reg* %9559, i32 0, i32 0
  %RBP.i212 = bitcast %union.anon* %9560 to i64*
  %9561 = load i64, i64* %RDX.i211
  %9562 = load i64, i64* %RBP.i212
  %9563 = sub i64 %9562, 164
  %9564 = load i64, i64* %PC.i210
  %9565 = add i64 %9564, 7
  store i64 %9565, i64* %PC.i210
  %9566 = inttoptr i64 %9563 to i32*
  %9567 = load i32, i32* %9566
  %9568 = shl i64 %9561, 32
  %9569 = ashr exact i64 %9568, 32
  %9570 = sext i32 %9567 to i64
  %9571 = mul i64 %9570, %9569
  %9572 = trunc i64 %9571 to i32
  %9573 = and i64 %9571, 4294967295
  store i64 %9573, i64* %RDX.i211, align 8
  %9574 = shl i64 %9571, 32
  %9575 = ashr exact i64 %9574, 32
  %9576 = icmp ne i64 %9575, %9571
  %9577 = zext i1 %9576 to i8
  %9578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9577, i8* %9578, align 1
  %9579 = and i32 %9572, 255
  %9580 = call i32 @llvm.ctpop.i32(i32 %9579)
  %9581 = trunc i32 %9580 to i8
  %9582 = and i8 %9581, 1
  %9583 = xor i8 %9582, 1
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9583, i8* %9584, align 1
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9585, align 1
  %9586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9586, align 1
  %9587 = lshr i32 %9572, 31
  %9588 = trunc i32 %9587 to i8
  %9589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9588, i8* %9589, align 1
  %9590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9577, i8* %9590, align 1
  store %struct.Memory* %loadMem_404247, %struct.Memory** %MEMORY
  %loadMem_40424e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9592 = getelementptr inbounds %struct.GPR, %struct.GPR* %9591, i32 0, i32 33
  %9593 = getelementptr inbounds %struct.Reg, %struct.Reg* %9592, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %9593 to i64*
  %9594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9595 = getelementptr inbounds %struct.GPR, %struct.GPR* %9594, i32 0, i32 7
  %9596 = getelementptr inbounds %struct.Reg, %struct.Reg* %9595, i32 0, i32 0
  %EDX.i208 = bitcast %union.anon* %9596 to i32*
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9598 = getelementptr inbounds %struct.GPR, %struct.GPR* %9597, i32 0, i32 5
  %9599 = getelementptr inbounds %struct.Reg, %struct.Reg* %9598, i32 0, i32 0
  %RCX.i209 = bitcast %union.anon* %9599 to i64*
  %9600 = load i64, i64* %RCX.i209
  %9601 = load i32, i32* %EDX.i208
  %9602 = zext i32 %9601 to i64
  %9603 = load i64, i64* %PC.i207
  %9604 = add i64 %9603, 2
  store i64 %9604, i64* %PC.i207
  %9605 = trunc i64 %9600 to i32
  %9606 = add i32 %9601, %9605
  %9607 = zext i32 %9606 to i64
  store i64 %9607, i64* %RCX.i209, align 8
  %9608 = icmp ult i32 %9606, %9605
  %9609 = icmp ult i32 %9606, %9601
  %9610 = or i1 %9608, %9609
  %9611 = zext i1 %9610 to i8
  %9612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9611, i8* %9612, align 1
  %9613 = and i32 %9606, 255
  %9614 = call i32 @llvm.ctpop.i32(i32 %9613)
  %9615 = trunc i32 %9614 to i8
  %9616 = and i8 %9615, 1
  %9617 = xor i8 %9616, 1
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9617, i8* %9618, align 1
  %9619 = xor i64 %9602, %9600
  %9620 = trunc i64 %9619 to i32
  %9621 = xor i32 %9620, %9606
  %9622 = lshr i32 %9621, 4
  %9623 = trunc i32 %9622 to i8
  %9624 = and i8 %9623, 1
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9624, i8* %9625, align 1
  %9626 = icmp eq i32 %9606, 0
  %9627 = zext i1 %9626 to i8
  %9628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9627, i8* %9628, align 1
  %9629 = lshr i32 %9606, 31
  %9630 = trunc i32 %9629 to i8
  %9631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9630, i8* %9631, align 1
  %9632 = lshr i32 %9605, 31
  %9633 = lshr i32 %9601, 31
  %9634 = xor i32 %9629, %9632
  %9635 = xor i32 %9629, %9633
  %9636 = add i32 %9634, %9635
  %9637 = icmp eq i32 %9636, 2
  %9638 = zext i1 %9637 to i8
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9638, i8* %9639, align 1
  store %struct.Memory* %loadMem_40424e, %struct.Memory** %MEMORY
  %loadMem_404250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9641 = getelementptr inbounds %struct.GPR, %struct.GPR* %9640, i32 0, i32 33
  %9642 = getelementptr inbounds %struct.Reg, %struct.Reg* %9641, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %9642 to i64*
  %9643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9644 = getelementptr inbounds %struct.GPR, %struct.GPR* %9643, i32 0, i32 7
  %9645 = getelementptr inbounds %struct.Reg, %struct.Reg* %9644, i32 0, i32 0
  %RDX.i205 = bitcast %union.anon* %9645 to i64*
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9647 = getelementptr inbounds %struct.GPR, %struct.GPR* %9646, i32 0, i32 15
  %9648 = getelementptr inbounds %struct.Reg, %struct.Reg* %9647, i32 0, i32 0
  %RBP.i206 = bitcast %union.anon* %9648 to i64*
  %9649 = load i64, i64* %RBP.i206
  %9650 = sub i64 %9649, 152
  %9651 = load i64, i64* %PC.i204
  %9652 = add i64 %9651, 6
  store i64 %9652, i64* %PC.i204
  %9653 = inttoptr i64 %9650 to i32*
  %9654 = load i32, i32* %9653
  %9655 = zext i32 %9654 to i64
  store i64 %9655, i64* %RDX.i205, align 8
  store %struct.Memory* %loadMem_404250, %struct.Memory** %MEMORY
  %loadMem_404256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9657 = getelementptr inbounds %struct.GPR, %struct.GPR* %9656, i32 0, i32 33
  %9658 = getelementptr inbounds %struct.Reg, %struct.Reg* %9657, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %9658 to i64*
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9660 = getelementptr inbounds %struct.GPR, %struct.GPR* %9659, i32 0, i32 7
  %9661 = getelementptr inbounds %struct.Reg, %struct.Reg* %9660, i32 0, i32 0
  %RDX.i203 = bitcast %union.anon* %9661 to i64*
  %9662 = load i64, i64* %RDX.i203
  %9663 = load i64, i64* %PC.i202
  %9664 = add i64 %9663, 3
  store i64 %9664, i64* %PC.i202
  %9665 = trunc i64 %9662 to i32
  %9666 = sub i32 %9665, 7
  %9667 = zext i32 %9666 to i64
  store i64 %9667, i64* %RDX.i203, align 8
  %9668 = icmp ult i32 %9665, 7
  %9669 = zext i1 %9668 to i8
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9669, i8* %9670, align 1
  %9671 = and i32 %9666, 255
  %9672 = call i32 @llvm.ctpop.i32(i32 %9671)
  %9673 = trunc i32 %9672 to i8
  %9674 = and i8 %9673, 1
  %9675 = xor i8 %9674, 1
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9675, i8* %9676, align 1
  %9677 = xor i64 7, %9662
  %9678 = trunc i64 %9677 to i32
  %9679 = xor i32 %9678, %9666
  %9680 = lshr i32 %9679, 4
  %9681 = trunc i32 %9680 to i8
  %9682 = and i8 %9681, 1
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9682, i8* %9683, align 1
  %9684 = icmp eq i32 %9666, 0
  %9685 = zext i1 %9684 to i8
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9685, i8* %9686, align 1
  %9687 = lshr i32 %9666, 31
  %9688 = trunc i32 %9687 to i8
  %9689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9688, i8* %9689, align 1
  %9690 = lshr i32 %9665, 31
  %9691 = xor i32 %9687, %9690
  %9692 = add i32 %9691, %9690
  %9693 = icmp eq i32 %9692, 2
  %9694 = zext i1 %9693 to i8
  %9695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9694, i8* %9695, align 1
  store %struct.Memory* %loadMem_404256, %struct.Memory** %MEMORY
  %loadMem_404259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9697 = getelementptr inbounds %struct.GPR, %struct.GPR* %9696, i32 0, i32 33
  %9698 = getelementptr inbounds %struct.Reg, %struct.Reg* %9697, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %9698 to i64*
  %9699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9700 = getelementptr inbounds %struct.GPR, %struct.GPR* %9699, i32 0, i32 7
  %9701 = getelementptr inbounds %struct.Reg, %struct.Reg* %9700, i32 0, i32 0
  %RDX.i200 = bitcast %union.anon* %9701 to i64*
  %9702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9703 = getelementptr inbounds %struct.GPR, %struct.GPR* %9702, i32 0, i32 15
  %9704 = getelementptr inbounds %struct.Reg, %struct.Reg* %9703, i32 0, i32 0
  %RBP.i201 = bitcast %union.anon* %9704 to i64*
  %9705 = load i64, i64* %RDX.i200
  %9706 = load i64, i64* %RBP.i201
  %9707 = sub i64 %9706, 168
  %9708 = load i64, i64* %PC.i199
  %9709 = add i64 %9708, 7
  store i64 %9709, i64* %PC.i199
  %9710 = inttoptr i64 %9707 to i32*
  %9711 = load i32, i32* %9710
  %9712 = shl i64 %9705, 32
  %9713 = ashr exact i64 %9712, 32
  %9714 = sext i32 %9711 to i64
  %9715 = mul i64 %9714, %9713
  %9716 = trunc i64 %9715 to i32
  %9717 = and i64 %9715, 4294967295
  store i64 %9717, i64* %RDX.i200, align 8
  %9718 = shl i64 %9715, 32
  %9719 = ashr exact i64 %9718, 32
  %9720 = icmp ne i64 %9719, %9715
  %9721 = zext i1 %9720 to i8
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9721, i8* %9722, align 1
  %9723 = and i32 %9716, 255
  %9724 = call i32 @llvm.ctpop.i32(i32 %9723)
  %9725 = trunc i32 %9724 to i8
  %9726 = and i8 %9725, 1
  %9727 = xor i8 %9726, 1
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9727, i8* %9728, align 1
  %9729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9729, align 1
  %9730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9730, align 1
  %9731 = lshr i32 %9716, 31
  %9732 = trunc i32 %9731 to i8
  %9733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9732, i8* %9733, align 1
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9721, i8* %9734, align 1
  store %struct.Memory* %loadMem_404259, %struct.Memory** %MEMORY
  %loadMem_404260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9736 = getelementptr inbounds %struct.GPR, %struct.GPR* %9735, i32 0, i32 33
  %9737 = getelementptr inbounds %struct.Reg, %struct.Reg* %9736, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %9737 to i64*
  %9738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9739 = getelementptr inbounds %struct.GPR, %struct.GPR* %9738, i32 0, i32 7
  %9740 = getelementptr inbounds %struct.Reg, %struct.Reg* %9739, i32 0, i32 0
  %EDX.i197 = bitcast %union.anon* %9740 to i32*
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9742 = getelementptr inbounds %struct.GPR, %struct.GPR* %9741, i32 0, i32 5
  %9743 = getelementptr inbounds %struct.Reg, %struct.Reg* %9742, i32 0, i32 0
  %RCX.i198 = bitcast %union.anon* %9743 to i64*
  %9744 = load i64, i64* %RCX.i198
  %9745 = load i32, i32* %EDX.i197
  %9746 = zext i32 %9745 to i64
  %9747 = load i64, i64* %PC.i196
  %9748 = add i64 %9747, 2
  store i64 %9748, i64* %PC.i196
  %9749 = trunc i64 %9744 to i32
  %9750 = add i32 %9745, %9749
  %9751 = zext i32 %9750 to i64
  store i64 %9751, i64* %RCX.i198, align 8
  %9752 = icmp ult i32 %9750, %9749
  %9753 = icmp ult i32 %9750, %9745
  %9754 = or i1 %9752, %9753
  %9755 = zext i1 %9754 to i8
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9755, i8* %9756, align 1
  %9757 = and i32 %9750, 255
  %9758 = call i32 @llvm.ctpop.i32(i32 %9757)
  %9759 = trunc i32 %9758 to i8
  %9760 = and i8 %9759, 1
  %9761 = xor i8 %9760, 1
  %9762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9761, i8* %9762, align 1
  %9763 = xor i64 %9746, %9744
  %9764 = trunc i64 %9763 to i32
  %9765 = xor i32 %9764, %9750
  %9766 = lshr i32 %9765, 4
  %9767 = trunc i32 %9766 to i8
  %9768 = and i8 %9767, 1
  %9769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9768, i8* %9769, align 1
  %9770 = icmp eq i32 %9750, 0
  %9771 = zext i1 %9770 to i8
  %9772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9771, i8* %9772, align 1
  %9773 = lshr i32 %9750, 31
  %9774 = trunc i32 %9773 to i8
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9774, i8* %9775, align 1
  %9776 = lshr i32 %9749, 31
  %9777 = lshr i32 %9745, 31
  %9778 = xor i32 %9773, %9776
  %9779 = xor i32 %9773, %9777
  %9780 = add i32 %9778, %9779
  %9781 = icmp eq i32 %9780, 2
  %9782 = zext i1 %9781 to i8
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9782, i8* %9783, align 1
  store %struct.Memory* %loadMem_404260, %struct.Memory** %MEMORY
  %loadMem_404262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9785 = getelementptr inbounds %struct.GPR, %struct.GPR* %9784, i32 0, i32 33
  %9786 = getelementptr inbounds %struct.Reg, %struct.Reg* %9785, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %9786 to i64*
  %9787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9788 = getelementptr inbounds %struct.GPR, %struct.GPR* %9787, i32 0, i32 5
  %9789 = getelementptr inbounds %struct.Reg, %struct.Reg* %9788, i32 0, i32 0
  %RCX.i195 = bitcast %union.anon* %9789 to i64*
  %9790 = load i64, i64* %RCX.i195
  %9791 = load i64, i64* %PC.i194
  %9792 = add i64 %9791, 3
  store i64 %9792, i64* %PC.i194
  %9793 = trunc i64 %9790 to i32
  %9794 = add i32 16, %9793
  %9795 = zext i32 %9794 to i64
  store i64 %9795, i64* %RCX.i195, align 8
  %9796 = icmp ult i32 %9794, %9793
  %9797 = icmp ult i32 %9794, 16
  %9798 = or i1 %9796, %9797
  %9799 = zext i1 %9798 to i8
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9799, i8* %9800, align 1
  %9801 = and i32 %9794, 255
  %9802 = call i32 @llvm.ctpop.i32(i32 %9801)
  %9803 = trunc i32 %9802 to i8
  %9804 = and i8 %9803, 1
  %9805 = xor i8 %9804, 1
  %9806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9805, i8* %9806, align 1
  %9807 = xor i64 16, %9790
  %9808 = trunc i64 %9807 to i32
  %9809 = xor i32 %9808, %9794
  %9810 = lshr i32 %9809, 4
  %9811 = trunc i32 %9810 to i8
  %9812 = and i8 %9811, 1
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9812, i8* %9813, align 1
  %9814 = icmp eq i32 %9794, 0
  %9815 = zext i1 %9814 to i8
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9815, i8* %9816, align 1
  %9817 = lshr i32 %9794, 31
  %9818 = trunc i32 %9817 to i8
  %9819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9818, i8* %9819, align 1
  %9820 = lshr i32 %9793, 31
  %9821 = xor i32 %9817, %9820
  %9822 = add i32 %9821, %9817
  %9823 = icmp eq i32 %9822, 2
  %9824 = zext i1 %9823 to i8
  %9825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9824, i8* %9825, align 1
  store %struct.Memory* %loadMem_404262, %struct.Memory** %MEMORY
  %loadMem_404265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9827 = getelementptr inbounds %struct.GPR, %struct.GPR* %9826, i32 0, i32 33
  %9828 = getelementptr inbounds %struct.Reg, %struct.Reg* %9827, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %9828 to i64*
  %9829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9830 = getelementptr inbounds %struct.GPR, %struct.GPR* %9829, i32 0, i32 1
  %9831 = getelementptr inbounds %struct.Reg, %struct.Reg* %9830, i32 0, i32 0
  %EAX.i192 = bitcast %union.anon* %9831 to i32*
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9833 = getelementptr inbounds %struct.GPR, %struct.GPR* %9832, i32 0, i32 15
  %9834 = getelementptr inbounds %struct.Reg, %struct.Reg* %9833, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %9834 to i64*
  %9835 = load i64, i64* %RBP.i193
  %9836 = sub i64 %9835, 676
  %9837 = load i32, i32* %EAX.i192
  %9838 = zext i32 %9837 to i64
  %9839 = load i64, i64* %PC.i191
  %9840 = add i64 %9839, 6
  store i64 %9840, i64* %PC.i191
  %9841 = inttoptr i64 %9836 to i32*
  store i32 %9837, i32* %9841
  store %struct.Memory* %loadMem_404265, %struct.Memory** %MEMORY
  %loadMem_40426b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9843 = getelementptr inbounds %struct.GPR, %struct.GPR* %9842, i32 0, i32 33
  %9844 = getelementptr inbounds %struct.Reg, %struct.Reg* %9843, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %9844 to i64*
  %9845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9846 = getelementptr inbounds %struct.GPR, %struct.GPR* %9845, i32 0, i32 5
  %9847 = getelementptr inbounds %struct.Reg, %struct.Reg* %9846, i32 0, i32 0
  %ECX.i189 = bitcast %union.anon* %9847 to i32*
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9849 = getelementptr inbounds %struct.GPR, %struct.GPR* %9848, i32 0, i32 1
  %9850 = getelementptr inbounds %struct.Reg, %struct.Reg* %9849, i32 0, i32 0
  %RAX.i190 = bitcast %union.anon* %9850 to i64*
  %9851 = load i32, i32* %ECX.i189
  %9852 = zext i32 %9851 to i64
  %9853 = load i64, i64* %PC.i188
  %9854 = add i64 %9853, 2
  store i64 %9854, i64* %PC.i188
  %9855 = and i64 %9852, 4294967295
  store i64 %9855, i64* %RAX.i190, align 8
  store %struct.Memory* %loadMem_40426b, %struct.Memory** %MEMORY
  %loadMem_40426d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9857 = getelementptr inbounds %struct.GPR, %struct.GPR* %9856, i32 0, i32 33
  %9858 = getelementptr inbounds %struct.Reg, %struct.Reg* %9857, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %9858 to i64*
  %9859 = load i64, i64* %PC.i187
  %9860 = add i64 %9859, 1
  store i64 %9860, i64* %PC.i187
  %9861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9863 = bitcast %union.anon* %9862 to i32*
  %9864 = load i32, i32* %9863, align 8
  %9865 = sext i32 %9864 to i64
  %9866 = lshr i64 %9865, 32
  store i64 %9866, i64* %9861, align 8
  store %struct.Memory* %loadMem_40426d, %struct.Memory** %MEMORY
  %loadMem_40426e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9868 = getelementptr inbounds %struct.GPR, %struct.GPR* %9867, i32 0, i32 33
  %9869 = getelementptr inbounds %struct.Reg, %struct.Reg* %9868, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %9869 to i64*
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9871 = getelementptr inbounds %struct.GPR, %struct.GPR* %9870, i32 0, i32 5
  %9872 = getelementptr inbounds %struct.Reg, %struct.Reg* %9871, i32 0, i32 0
  %RCX.i185 = bitcast %union.anon* %9872 to i64*
  %9873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9874 = getelementptr inbounds %struct.GPR, %struct.GPR* %9873, i32 0, i32 15
  %9875 = getelementptr inbounds %struct.Reg, %struct.Reg* %9874, i32 0, i32 0
  %RBP.i186 = bitcast %union.anon* %9875 to i64*
  %9876 = load i64, i64* %RBP.i186
  %9877 = sub i64 %9876, 676
  %9878 = load i64, i64* %PC.i184
  %9879 = add i64 %9878, 6
  store i64 %9879, i64* %PC.i184
  %9880 = inttoptr i64 %9877 to i32*
  %9881 = load i32, i32* %9880
  %9882 = zext i32 %9881 to i64
  store i64 %9882, i64* %RCX.i185, align 8
  store %struct.Memory* %loadMem_40426e, %struct.Memory** %MEMORY
  %loadMem_404274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9884 = getelementptr inbounds %struct.GPR, %struct.GPR* %9883, i32 0, i32 33
  %9885 = getelementptr inbounds %struct.Reg, %struct.Reg* %9884, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %9885 to i64*
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9887 = getelementptr inbounds %struct.GPR, %struct.GPR* %9886, i32 0, i32 5
  %9888 = getelementptr inbounds %struct.Reg, %struct.Reg* %9887, i32 0, i32 0
  %ECX.i180 = bitcast %union.anon* %9888 to i32*
  %9889 = load i32, i32* %ECX.i180
  %9890 = zext i32 %9889 to i64
  %9891 = load i64, i64* %PC.i179
  %9892 = add i64 %9891, 2
  store i64 %9892, i64* %PC.i179
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9894 = bitcast %union.anon* %9893 to i32*
  %9895 = load i32, i32* %9894, align 8
  %9896 = zext i32 %9895 to i64
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %9898 = bitcast %union.anon* %9897 to i32*
  %9899 = load i32, i32* %9898, align 8
  %9900 = zext i32 %9899 to i64
  %9901 = shl i64 %9890, 32
  %9902 = ashr exact i64 %9901, 32
  %9903 = shl i64 %9900, 32
  %9904 = or i64 %9903, %9896
  %9905 = sdiv i64 %9904, %9902
  %9906 = shl i64 %9905, 32
  %9907 = ashr exact i64 %9906, 32
  %9908 = icmp eq i64 %9905, %9907
  br i1 %9908, label %9913, label %9909

; <label>:9909:                                   ; preds = %block_.L_404233
  %9910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9911 = load i64, i64* %9910, align 8
  %9912 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9911, %struct.Memory* %loadMem_404274)
  br label %routine_idivl__ecx.exit181

; <label>:9913:                                   ; preds = %block_.L_404233
  %9914 = srem i64 %9904, %9902
  %9915 = getelementptr inbounds %union.anon, %union.anon* %9893, i64 0, i32 0
  %9916 = and i64 %9905, 4294967295
  store i64 %9916, i64* %9915, align 8
  %9917 = getelementptr inbounds %union.anon, %union.anon* %9897, i64 0, i32 0
  %9918 = and i64 %9914, 4294967295
  store i64 %9918, i64* %9917, align 8
  %9919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9919, align 1
  %9920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %9920, align 1
  %9921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9921, align 1
  %9922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9922, align 1
  %9923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9923, align 1
  %9924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9924, align 1
  br label %routine_idivl__ecx.exit181

routine_idivl__ecx.exit181:                       ; preds = %9909, %9913
  %9925 = phi %struct.Memory* [ %9912, %9909 ], [ %loadMem_404274, %9913 ]
  store %struct.Memory* %9925, %struct.Memory** %MEMORY
  %loadMem_404276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 33
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %9928 to i64*
  %9929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9930 = getelementptr inbounds %struct.GPR, %struct.GPR* %9929, i32 0, i32 1
  %9931 = getelementptr inbounds %struct.Reg, %struct.Reg* %9930, i32 0, i32 0
  %EAX.i177 = bitcast %union.anon* %9931 to i32*
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9933 = getelementptr inbounds %struct.GPR, %struct.GPR* %9932, i32 0, i32 15
  %9934 = getelementptr inbounds %struct.Reg, %struct.Reg* %9933, i32 0, i32 0
  %RBP.i178 = bitcast %union.anon* %9934 to i64*
  %9935 = load i64, i64* %RBP.i178
  %9936 = sub i64 %9935, 672
  %9937 = load i32, i32* %EAX.i177
  %9938 = zext i32 %9937 to i64
  %9939 = load i64, i64* %PC.i176
  %9940 = add i64 %9939, 6
  store i64 %9940, i64* %PC.i176
  %9941 = inttoptr i64 %9936 to i32*
  store i32 %9937, i32* %9941
  store %struct.Memory* %loadMem_404276, %struct.Memory** %MEMORY
  br label %block_.L_40427c

block_.L_40427c:                                  ; preds = %routine_idivl__ecx.exit181, %block_40421a
  %loadMem_40427c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9943 = getelementptr inbounds %struct.GPR, %struct.GPR* %9942, i32 0, i32 33
  %9944 = getelementptr inbounds %struct.Reg, %struct.Reg* %9943, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %9944 to i64*
  %9945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9946 = getelementptr inbounds %struct.GPR, %struct.GPR* %9945, i32 0, i32 1
  %9947 = getelementptr inbounds %struct.Reg, %struct.Reg* %9946, i32 0, i32 0
  %RAX.i174 = bitcast %union.anon* %9947 to i64*
  %9948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9949 = getelementptr inbounds %struct.GPR, %struct.GPR* %9948, i32 0, i32 15
  %9950 = getelementptr inbounds %struct.Reg, %struct.Reg* %9949, i32 0, i32 0
  %RBP.i175 = bitcast %union.anon* %9950 to i64*
  %9951 = load i64, i64* %RBP.i175
  %9952 = sub i64 %9951, 672
  %9953 = load i64, i64* %PC.i173
  %9954 = add i64 %9953, 6
  store i64 %9954, i64* %PC.i173
  %9955 = inttoptr i64 %9952 to i32*
  %9956 = load i32, i32* %9955
  %9957 = zext i32 %9956 to i64
  store i64 %9957, i64* %RAX.i174, align 8
  store %struct.Memory* %loadMem_40427c, %struct.Memory** %MEMORY
  %loadMem_404282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9959 = getelementptr inbounds %struct.GPR, %struct.GPR* %9958, i32 0, i32 33
  %9960 = getelementptr inbounds %struct.Reg, %struct.Reg* %9959, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %9960 to i64*
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9962 = getelementptr inbounds %struct.GPR, %struct.GPR* %9961, i32 0, i32 5
  %9963 = getelementptr inbounds %struct.Reg, %struct.Reg* %9962, i32 0, i32 0
  %ECX.i171 = bitcast %union.anon* %9963 to i32*
  %9964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9965 = getelementptr inbounds %struct.GPR, %struct.GPR* %9964, i32 0, i32 5
  %9966 = getelementptr inbounds %struct.Reg, %struct.Reg* %9965, i32 0, i32 0
  %RCX.i172 = bitcast %union.anon* %9966 to i64*
  %9967 = load i64, i64* %RCX.i172
  %9968 = load i32, i32* %ECX.i171
  %9969 = zext i32 %9968 to i64
  %9970 = load i64, i64* %PC.i170
  %9971 = add i64 %9970, 2
  store i64 %9971, i64* %PC.i170
  %9972 = xor i64 %9969, %9967
  %9973 = trunc i64 %9972 to i32
  %9974 = and i64 %9972, 4294967295
  store i64 %9974, i64* %RCX.i172, align 8
  %9975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9975, align 1
  %9976 = and i32 %9973, 255
  %9977 = call i32 @llvm.ctpop.i32(i32 %9976)
  %9978 = trunc i32 %9977 to i8
  %9979 = and i8 %9978, 1
  %9980 = xor i8 %9979, 1
  %9981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9980, i8* %9981, align 1
  %9982 = icmp eq i32 %9973, 0
  %9983 = zext i1 %9982 to i8
  %9984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9983, i8* %9984, align 1
  %9985 = lshr i32 %9973, 31
  %9986 = trunc i32 %9985 to i8
  %9987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9986, i8* %9987, align 1
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9988, align 1
  %9989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9989, align 1
  store %struct.Memory* %loadMem_404282, %struct.Memory** %MEMORY
  %loadMem_404284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9991 = getelementptr inbounds %struct.GPR, %struct.GPR* %9990, i32 0, i32 33
  %9992 = getelementptr inbounds %struct.Reg, %struct.Reg* %9991, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %9992 to i64*
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9994 = getelementptr inbounds %struct.GPR, %struct.GPR* %9993, i32 0, i32 1
  %9995 = getelementptr inbounds %struct.Reg, %struct.Reg* %9994, i32 0, i32 0
  %EAX.i168 = bitcast %union.anon* %9995 to i32*
  %9996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9997 = getelementptr inbounds %struct.GPR, %struct.GPR* %9996, i32 0, i32 5
  %9998 = getelementptr inbounds %struct.Reg, %struct.Reg* %9997, i32 0, i32 0
  %ECX.i169 = bitcast %union.anon* %9998 to i32*
  %9999 = load i32, i32* %ECX.i169
  %10000 = zext i32 %9999 to i64
  %10001 = load i32, i32* %EAX.i168
  %10002 = zext i32 %10001 to i64
  %10003 = load i64, i64* %PC.i167
  %10004 = add i64 %10003, 2
  store i64 %10004, i64* %PC.i167
  %10005 = sub i32 %9999, %10001
  %10006 = icmp ult i32 %9999, %10001
  %10007 = zext i1 %10006 to i8
  %10008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10007, i8* %10008, align 1
  %10009 = and i32 %10005, 255
  %10010 = call i32 @llvm.ctpop.i32(i32 %10009)
  %10011 = trunc i32 %10010 to i8
  %10012 = and i8 %10011, 1
  %10013 = xor i8 %10012, 1
  %10014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10013, i8* %10014, align 1
  %10015 = xor i64 %10002, %10000
  %10016 = trunc i64 %10015 to i32
  %10017 = xor i32 %10016, %10005
  %10018 = lshr i32 %10017, 4
  %10019 = trunc i32 %10018 to i8
  %10020 = and i8 %10019, 1
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10020, i8* %10021, align 1
  %10022 = icmp eq i32 %10005, 0
  %10023 = zext i1 %10022 to i8
  %10024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10023, i8* %10024, align 1
  %10025 = lshr i32 %10005, 31
  %10026 = trunc i32 %10025 to i8
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10026, i8* %10027, align 1
  %10028 = lshr i32 %9999, 31
  %10029 = lshr i32 %10001, 31
  %10030 = xor i32 %10029, %10028
  %10031 = xor i32 %10025, %10028
  %10032 = add i32 %10031, %10030
  %10033 = icmp eq i32 %10032, 2
  %10034 = zext i1 %10033 to i8
  %10035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10034, i8* %10035, align 1
  store %struct.Memory* %loadMem_404284, %struct.Memory** %MEMORY
  %loadMem_404286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10037 = getelementptr inbounds %struct.GPR, %struct.GPR* %10036, i32 0, i32 33
  %10038 = getelementptr inbounds %struct.Reg, %struct.Reg* %10037, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %10038 to i64*
  %10039 = load i64, i64* %PC.i166
  %10040 = add i64 %10039, 19
  %10041 = load i64, i64* %PC.i166
  %10042 = add i64 %10041, 6
  %10043 = load i64, i64* %PC.i166
  %10044 = add i64 %10043, 6
  store i64 %10044, i64* %PC.i166
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10046 = load i8, i8* %10045, align 1
  %10047 = icmp ne i8 %10046, 0
  %10048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10049 = load i8, i8* %10048, align 1
  %10050 = icmp ne i8 %10049, 0
  %10051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10052 = load i8, i8* %10051, align 1
  %10053 = icmp ne i8 %10052, 0
  %10054 = xor i1 %10050, %10053
  %10055 = or i1 %10047, %10054
  %10056 = zext i1 %10055 to i8
  store i8 %10056, i8* %BRANCH_TAKEN, align 1
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10058 = select i1 %10055, i64 %10040, i64 %10042
  store i64 %10058, i64* %10057, align 8
  store %struct.Memory* %loadMem_404286, %struct.Memory** %MEMORY
  %loadBr_404286 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404286 = icmp eq i8 %loadBr_404286, 1
  br i1 %cmpBr_404286, label %block_.L_404299, label %block_40428c

block_40428c:                                     ; preds = %block_.L_40427c
  %loadMem_40428c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10060 = getelementptr inbounds %struct.GPR, %struct.GPR* %10059, i32 0, i32 33
  %10061 = getelementptr inbounds %struct.Reg, %struct.Reg* %10060, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %10061 to i64*
  %10062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10063 = getelementptr inbounds %struct.GPR, %struct.GPR* %10062, i32 0, i32 1
  %10064 = getelementptr inbounds %struct.Reg, %struct.Reg* %10063, i32 0, i32 0
  %EAX.i164 = bitcast %union.anon* %10064 to i32*
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10066 = getelementptr inbounds %struct.GPR, %struct.GPR* %10065, i32 0, i32 1
  %10067 = getelementptr inbounds %struct.Reg, %struct.Reg* %10066, i32 0, i32 0
  %RAX.i165 = bitcast %union.anon* %10067 to i64*
  %10068 = load i64, i64* %RAX.i165
  %10069 = load i32, i32* %EAX.i164
  %10070 = zext i32 %10069 to i64
  %10071 = load i64, i64* %PC.i163
  %10072 = add i64 %10071, 2
  store i64 %10072, i64* %PC.i163
  %10073 = xor i64 %10070, %10068
  %10074 = trunc i64 %10073 to i32
  %10075 = and i64 %10073, 4294967295
  store i64 %10075, i64* %RAX.i165, align 8
  %10076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10076, align 1
  %10077 = and i32 %10074, 255
  %10078 = call i32 @llvm.ctpop.i32(i32 %10077)
  %10079 = trunc i32 %10078 to i8
  %10080 = and i8 %10079, 1
  %10081 = xor i8 %10080, 1
  %10082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10081, i8* %10082, align 1
  %10083 = icmp eq i32 %10074, 0
  %10084 = zext i1 %10083 to i8
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10084, i8* %10085, align 1
  %10086 = lshr i32 %10074, 31
  %10087 = trunc i32 %10086 to i8
  %10088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10087, i8* %10088, align 1
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10089, align 1
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10090, align 1
  store %struct.Memory* %loadMem_40428c, %struct.Memory** %MEMORY
  %loadMem_40428e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10092 = getelementptr inbounds %struct.GPR, %struct.GPR* %10091, i32 0, i32 33
  %10093 = getelementptr inbounds %struct.Reg, %struct.Reg* %10092, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %10093 to i64*
  %10094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10095 = getelementptr inbounds %struct.GPR, %struct.GPR* %10094, i32 0, i32 1
  %10096 = getelementptr inbounds %struct.Reg, %struct.Reg* %10095, i32 0, i32 0
  %EAX.i161 = bitcast %union.anon* %10096 to i32*
  %10097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10098 = getelementptr inbounds %struct.GPR, %struct.GPR* %10097, i32 0, i32 15
  %10099 = getelementptr inbounds %struct.Reg, %struct.Reg* %10098, i32 0, i32 0
  %RBP.i162 = bitcast %union.anon* %10099 to i64*
  %10100 = load i64, i64* %RBP.i162
  %10101 = sub i64 %10100, 680
  %10102 = load i32, i32* %EAX.i161
  %10103 = zext i32 %10102 to i64
  %10104 = load i64, i64* %PC.i160
  %10105 = add i64 %10104, 6
  store i64 %10105, i64* %PC.i160
  %10106 = inttoptr i64 %10101 to i32*
  store i32 %10102, i32* %10106
  store %struct.Memory* %loadMem_40428e, %struct.Memory** %MEMORY
  %loadMem_404294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10108 = getelementptr inbounds %struct.GPR, %struct.GPR* %10107, i32 0, i32 33
  %10109 = getelementptr inbounds %struct.Reg, %struct.Reg* %10108, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %10109 to i64*
  %10110 = load i64, i64* %PC.i159
  %10111 = add i64 %10110, 216
  %10112 = load i64, i64* %PC.i159
  %10113 = add i64 %10112, 5
  store i64 %10113, i64* %PC.i159
  %10114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10111, i64* %10114, align 8
  store %struct.Memory* %loadMem_404294, %struct.Memory** %MEMORY
  br label %block_.L_40436c

block_.L_404299:                                  ; preds = %block_.L_40427c
  %loadMem_404299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10116 = getelementptr inbounds %struct.GPR, %struct.GPR* %10115, i32 0, i32 33
  %10117 = getelementptr inbounds %struct.Reg, %struct.Reg* %10116, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %10117 to i64*
  %10118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10119 = getelementptr inbounds %struct.GPR, %struct.GPR* %10118, i32 0, i32 1
  %10120 = getelementptr inbounds %struct.Reg, %struct.Reg* %10119, i32 0, i32 0
  %RAX.i158 = bitcast %union.anon* %10120 to i64*
  %10121 = load i64, i64* %PC.i157
  %10122 = add i64 %10121, 5
  store i64 %10122, i64* %PC.i157
  store i64 32, i64* %RAX.i158, align 8
  store %struct.Memory* %loadMem_404299, %struct.Memory** %MEMORY
  %loadMem_40429e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10124 = getelementptr inbounds %struct.GPR, %struct.GPR* %10123, i32 0, i32 33
  %10125 = getelementptr inbounds %struct.Reg, %struct.Reg* %10124, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %10125 to i64*
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10127 = getelementptr inbounds %struct.GPR, %struct.GPR* %10126, i32 0, i32 5
  %10128 = getelementptr inbounds %struct.Reg, %struct.Reg* %10127, i32 0, i32 0
  %RCX.i156 = bitcast %union.anon* %10128 to i64*
  %10129 = load i64, i64* %PC.i155
  %10130 = add i64 %10129, 8
  store i64 %10130, i64* %PC.i155
  %10131 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10131, i64* %RCX.i156, align 8
  store %struct.Memory* %loadMem_40429e, %struct.Memory** %MEMORY
  %loadMem_4042a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10133 = getelementptr inbounds %struct.GPR, %struct.GPR* %10132, i32 0, i32 33
  %10134 = getelementptr inbounds %struct.Reg, %struct.Reg* %10133, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %10134 to i64*
  %10135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10136 = getelementptr inbounds %struct.GPR, %struct.GPR* %10135, i32 0, i32 5
  %10137 = getelementptr inbounds %struct.Reg, %struct.Reg* %10136, i32 0, i32 0
  %RCX.i153 = bitcast %union.anon* %10137 to i64*
  %10138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10139 = getelementptr inbounds %struct.GPR, %struct.GPR* %10138, i32 0, i32 7
  %10140 = getelementptr inbounds %struct.Reg, %struct.Reg* %10139, i32 0, i32 0
  %RDX.i154 = bitcast %union.anon* %10140 to i64*
  %10141 = load i64, i64* %RCX.i153
  %10142 = add i64 %10141, 72684
  %10143 = load i64, i64* %PC.i152
  %10144 = add i64 %10143, 6
  store i64 %10144, i64* %PC.i152
  %10145 = inttoptr i64 %10142 to i32*
  %10146 = load i32, i32* %10145
  %10147 = zext i32 %10146 to i64
  store i64 %10147, i64* %RDX.i154, align 8
  store %struct.Memory* %loadMem_4042a6, %struct.Memory** %MEMORY
  %loadMem_4042ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %10148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10149 = getelementptr inbounds %struct.GPR, %struct.GPR* %10148, i32 0, i32 33
  %10150 = getelementptr inbounds %struct.Reg, %struct.Reg* %10149, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %10150 to i64*
  %10151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10152 = getelementptr inbounds %struct.GPR, %struct.GPR* %10151, i32 0, i32 9
  %10153 = getelementptr inbounds %struct.Reg, %struct.Reg* %10152, i32 0, i32 0
  %RSI.i150 = bitcast %union.anon* %10153 to i64*
  %10154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10155 = getelementptr inbounds %struct.GPR, %struct.GPR* %10154, i32 0, i32 15
  %10156 = getelementptr inbounds %struct.Reg, %struct.Reg* %10155, i32 0, i32 0
  %RBP.i151 = bitcast %union.anon* %10156 to i64*
  %10157 = load i64, i64* %RBP.i151
  %10158 = sub i64 %10157, 172
  %10159 = load i64, i64* %PC.i149
  %10160 = add i64 %10159, 6
  store i64 %10160, i64* %PC.i149
  %10161 = inttoptr i64 %10158 to i32*
  %10162 = load i32, i32* %10161
  %10163 = zext i32 %10162 to i64
  store i64 %10163, i64* %RSI.i150, align 8
  store %struct.Memory* %loadMem_4042ac, %struct.Memory** %MEMORY
  %loadMem_4042b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10165 = getelementptr inbounds %struct.GPR, %struct.GPR* %10164, i32 0, i32 33
  %10166 = getelementptr inbounds %struct.Reg, %struct.Reg* %10165, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %10166 to i64*
  %10167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10168 = getelementptr inbounds %struct.GPR, %struct.GPR* %10167, i32 0, i32 11
  %10169 = getelementptr inbounds %struct.Reg, %struct.Reg* %10168, i32 0, i32 0
  %RDI.i147 = bitcast %union.anon* %10169 to i64*
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10171 = getelementptr inbounds %struct.GPR, %struct.GPR* %10170, i32 0, i32 15
  %10172 = getelementptr inbounds %struct.Reg, %struct.Reg* %10171, i32 0, i32 0
  %RBP.i148 = bitcast %union.anon* %10172 to i64*
  %10173 = load i64, i64* %RBP.i148
  %10174 = sub i64 %10173, 148
  %10175 = load i64, i64* %PC.i146
  %10176 = add i64 %10175, 6
  store i64 %10176, i64* %PC.i146
  %10177 = inttoptr i64 %10174 to i32*
  %10178 = load i32, i32* %10177
  %10179 = zext i32 %10178 to i64
  store i64 %10179, i64* %RDI.i147, align 8
  store %struct.Memory* %loadMem_4042b2, %struct.Memory** %MEMORY
  %loadMem_4042b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10181 = getelementptr inbounds %struct.GPR, %struct.GPR* %10180, i32 0, i32 33
  %10182 = getelementptr inbounds %struct.Reg, %struct.Reg* %10181, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %10182 to i64*
  %10183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10184 = getelementptr inbounds %struct.GPR, %struct.GPR* %10183, i32 0, i32 11
  %10185 = getelementptr inbounds %struct.Reg, %struct.Reg* %10184, i32 0, i32 0
  %RDI.i145 = bitcast %union.anon* %10185 to i64*
  %10186 = load i64, i64* %RDI.i145
  %10187 = load i64, i64* %PC.i144
  %10188 = add i64 %10187, 3
  store i64 %10188, i64* %PC.i144
  %10189 = trunc i64 %10186 to i32
  %10190 = sub i32 %10189, 7
  %10191 = zext i32 %10190 to i64
  store i64 %10191, i64* %RDI.i145, align 8
  %10192 = icmp ult i32 %10189, 7
  %10193 = zext i1 %10192 to i8
  %10194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10193, i8* %10194, align 1
  %10195 = and i32 %10190, 255
  %10196 = call i32 @llvm.ctpop.i32(i32 %10195)
  %10197 = trunc i32 %10196 to i8
  %10198 = and i8 %10197, 1
  %10199 = xor i8 %10198, 1
  %10200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10199, i8* %10200, align 1
  %10201 = xor i64 7, %10186
  %10202 = trunc i64 %10201 to i32
  %10203 = xor i32 %10202, %10190
  %10204 = lshr i32 %10203, 4
  %10205 = trunc i32 %10204 to i8
  %10206 = and i8 %10205, 1
  %10207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10206, i8* %10207, align 1
  %10208 = icmp eq i32 %10190, 0
  %10209 = zext i1 %10208 to i8
  %10210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10209, i8* %10210, align 1
  %10211 = lshr i32 %10190, 31
  %10212 = trunc i32 %10211 to i8
  %10213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10212, i8* %10213, align 1
  %10214 = lshr i32 %10189, 31
  %10215 = xor i32 %10211, %10214
  %10216 = add i32 %10215, %10214
  %10217 = icmp eq i32 %10216, 2
  %10218 = zext i1 %10217 to i8
  %10219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10218, i8* %10219, align 1
  store %struct.Memory* %loadMem_4042b8, %struct.Memory** %MEMORY
  %loadMem_4042bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10221 = getelementptr inbounds %struct.GPR, %struct.GPR* %10220, i32 0, i32 33
  %10222 = getelementptr inbounds %struct.Reg, %struct.Reg* %10221, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %10222 to i64*
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10224 = getelementptr inbounds %struct.GPR, %struct.GPR* %10223, i32 0, i32 11
  %10225 = getelementptr inbounds %struct.Reg, %struct.Reg* %10224, i32 0, i32 0
  %RDI.i142 = bitcast %union.anon* %10225 to i64*
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10227 = getelementptr inbounds %struct.GPR, %struct.GPR* %10226, i32 0, i32 15
  %10228 = getelementptr inbounds %struct.Reg, %struct.Reg* %10227, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %10228 to i64*
  %10229 = load i64, i64* %RDI.i142
  %10230 = load i64, i64* %RBP.i143
  %10231 = sub i64 %10230, 164
  %10232 = load i64, i64* %PC.i141
  %10233 = add i64 %10232, 7
  store i64 %10233, i64* %PC.i141
  %10234 = inttoptr i64 %10231 to i32*
  %10235 = load i32, i32* %10234
  %10236 = shl i64 %10229, 32
  %10237 = ashr exact i64 %10236, 32
  %10238 = sext i32 %10235 to i64
  %10239 = mul i64 %10238, %10237
  %10240 = trunc i64 %10239 to i32
  %10241 = and i64 %10239, 4294967295
  store i64 %10241, i64* %RDI.i142, align 8
  %10242 = shl i64 %10239, 32
  %10243 = ashr exact i64 %10242, 32
  %10244 = icmp ne i64 %10243, %10239
  %10245 = zext i1 %10244 to i8
  %10246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10245, i8* %10246, align 1
  %10247 = and i32 %10240, 255
  %10248 = call i32 @llvm.ctpop.i32(i32 %10247)
  %10249 = trunc i32 %10248 to i8
  %10250 = and i8 %10249, 1
  %10251 = xor i8 %10250, 1
  %10252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10251, i8* %10252, align 1
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10253, align 1
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10254, align 1
  %10255 = lshr i32 %10240, 31
  %10256 = trunc i32 %10255 to i8
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10256, i8* %10257, align 1
  %10258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10245, i8* %10258, align 1
  store %struct.Memory* %loadMem_4042bb, %struct.Memory** %MEMORY
  %loadMem_4042c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10260 = getelementptr inbounds %struct.GPR, %struct.GPR* %10259, i32 0, i32 33
  %10261 = getelementptr inbounds %struct.Reg, %struct.Reg* %10260, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %10261 to i64*
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10263 = getelementptr inbounds %struct.GPR, %struct.GPR* %10262, i32 0, i32 11
  %10264 = getelementptr inbounds %struct.Reg, %struct.Reg* %10263, i32 0, i32 0
  %EDI.i139 = bitcast %union.anon* %10264 to i32*
  %10265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10266 = getelementptr inbounds %struct.GPR, %struct.GPR* %10265, i32 0, i32 9
  %10267 = getelementptr inbounds %struct.Reg, %struct.Reg* %10266, i32 0, i32 0
  %RSI.i140 = bitcast %union.anon* %10267 to i64*
  %10268 = load i64, i64* %RSI.i140
  %10269 = load i32, i32* %EDI.i139
  %10270 = zext i32 %10269 to i64
  %10271 = load i64, i64* %PC.i138
  %10272 = add i64 %10271, 2
  store i64 %10272, i64* %PC.i138
  %10273 = trunc i64 %10268 to i32
  %10274 = add i32 %10269, %10273
  %10275 = zext i32 %10274 to i64
  store i64 %10275, i64* %RSI.i140, align 8
  %10276 = icmp ult i32 %10274, %10273
  %10277 = icmp ult i32 %10274, %10269
  %10278 = or i1 %10276, %10277
  %10279 = zext i1 %10278 to i8
  %10280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10279, i8* %10280, align 1
  %10281 = and i32 %10274, 255
  %10282 = call i32 @llvm.ctpop.i32(i32 %10281)
  %10283 = trunc i32 %10282 to i8
  %10284 = and i8 %10283, 1
  %10285 = xor i8 %10284, 1
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10285, i8* %10286, align 1
  %10287 = xor i64 %10270, %10268
  %10288 = trunc i64 %10287 to i32
  %10289 = xor i32 %10288, %10274
  %10290 = lshr i32 %10289, 4
  %10291 = trunc i32 %10290 to i8
  %10292 = and i8 %10291, 1
  %10293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10292, i8* %10293, align 1
  %10294 = icmp eq i32 %10274, 0
  %10295 = zext i1 %10294 to i8
  %10296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10295, i8* %10296, align 1
  %10297 = lshr i32 %10274, 31
  %10298 = trunc i32 %10297 to i8
  %10299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10298, i8* %10299, align 1
  %10300 = lshr i32 %10273, 31
  %10301 = lshr i32 %10269, 31
  %10302 = xor i32 %10297, %10300
  %10303 = xor i32 %10297, %10301
  %10304 = add i32 %10302, %10303
  %10305 = icmp eq i32 %10304, 2
  %10306 = zext i1 %10305 to i8
  %10307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10306, i8* %10307, align 1
  store %struct.Memory* %loadMem_4042c2, %struct.Memory** %MEMORY
  %loadMem_4042c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10309 = getelementptr inbounds %struct.GPR, %struct.GPR* %10308, i32 0, i32 33
  %10310 = getelementptr inbounds %struct.Reg, %struct.Reg* %10309, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %10310 to i64*
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10312 = getelementptr inbounds %struct.GPR, %struct.GPR* %10311, i32 0, i32 11
  %10313 = getelementptr inbounds %struct.Reg, %struct.Reg* %10312, i32 0, i32 0
  %RDI.i136 = bitcast %union.anon* %10313 to i64*
  %10314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10315 = getelementptr inbounds %struct.GPR, %struct.GPR* %10314, i32 0, i32 15
  %10316 = getelementptr inbounds %struct.Reg, %struct.Reg* %10315, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %10316 to i64*
  %10317 = load i64, i64* %RBP.i137
  %10318 = sub i64 %10317, 152
  %10319 = load i64, i64* %PC.i135
  %10320 = add i64 %10319, 6
  store i64 %10320, i64* %PC.i135
  %10321 = inttoptr i64 %10318 to i32*
  %10322 = load i32, i32* %10321
  %10323 = zext i32 %10322 to i64
  store i64 %10323, i64* %RDI.i136, align 8
  store %struct.Memory* %loadMem_4042c4, %struct.Memory** %MEMORY
  %loadMem_4042ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %10324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10325 = getelementptr inbounds %struct.GPR, %struct.GPR* %10324, i32 0, i32 33
  %10326 = getelementptr inbounds %struct.Reg, %struct.Reg* %10325, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %10326 to i64*
  %10327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10328 = getelementptr inbounds %struct.GPR, %struct.GPR* %10327, i32 0, i32 11
  %10329 = getelementptr inbounds %struct.Reg, %struct.Reg* %10328, i32 0, i32 0
  %RDI.i134 = bitcast %union.anon* %10329 to i64*
  %10330 = load i64, i64* %RDI.i134
  %10331 = load i64, i64* %PC.i133
  %10332 = add i64 %10331, 3
  store i64 %10332, i64* %PC.i133
  %10333 = trunc i64 %10330 to i32
  %10334 = sub i32 %10333, 7
  %10335 = zext i32 %10334 to i64
  store i64 %10335, i64* %RDI.i134, align 8
  %10336 = icmp ult i32 %10333, 7
  %10337 = zext i1 %10336 to i8
  %10338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10337, i8* %10338, align 1
  %10339 = and i32 %10334, 255
  %10340 = call i32 @llvm.ctpop.i32(i32 %10339)
  %10341 = trunc i32 %10340 to i8
  %10342 = and i8 %10341, 1
  %10343 = xor i8 %10342, 1
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10343, i8* %10344, align 1
  %10345 = xor i64 7, %10330
  %10346 = trunc i64 %10345 to i32
  %10347 = xor i32 %10346, %10334
  %10348 = lshr i32 %10347, 4
  %10349 = trunc i32 %10348 to i8
  %10350 = and i8 %10349, 1
  %10351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10350, i8* %10351, align 1
  %10352 = icmp eq i32 %10334, 0
  %10353 = zext i1 %10352 to i8
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10353, i8* %10354, align 1
  %10355 = lshr i32 %10334, 31
  %10356 = trunc i32 %10355 to i8
  %10357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10356, i8* %10357, align 1
  %10358 = lshr i32 %10333, 31
  %10359 = xor i32 %10355, %10358
  %10360 = add i32 %10359, %10358
  %10361 = icmp eq i32 %10360, 2
  %10362 = zext i1 %10361 to i8
  %10363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10362, i8* %10363, align 1
  store %struct.Memory* %loadMem_4042ca, %struct.Memory** %MEMORY
  %loadMem_4042cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10365 = getelementptr inbounds %struct.GPR, %struct.GPR* %10364, i32 0, i32 33
  %10366 = getelementptr inbounds %struct.Reg, %struct.Reg* %10365, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %10366 to i64*
  %10367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10368 = getelementptr inbounds %struct.GPR, %struct.GPR* %10367, i32 0, i32 11
  %10369 = getelementptr inbounds %struct.Reg, %struct.Reg* %10368, i32 0, i32 0
  %RDI.i131 = bitcast %union.anon* %10369 to i64*
  %10370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10371 = getelementptr inbounds %struct.GPR, %struct.GPR* %10370, i32 0, i32 15
  %10372 = getelementptr inbounds %struct.Reg, %struct.Reg* %10371, i32 0, i32 0
  %RBP.i132 = bitcast %union.anon* %10372 to i64*
  %10373 = load i64, i64* %RDI.i131
  %10374 = load i64, i64* %RBP.i132
  %10375 = sub i64 %10374, 168
  %10376 = load i64, i64* %PC.i130
  %10377 = add i64 %10376, 7
  store i64 %10377, i64* %PC.i130
  %10378 = inttoptr i64 %10375 to i32*
  %10379 = load i32, i32* %10378
  %10380 = shl i64 %10373, 32
  %10381 = ashr exact i64 %10380, 32
  %10382 = sext i32 %10379 to i64
  %10383 = mul i64 %10382, %10381
  %10384 = trunc i64 %10383 to i32
  %10385 = and i64 %10383, 4294967295
  store i64 %10385, i64* %RDI.i131, align 8
  %10386 = shl i64 %10383, 32
  %10387 = ashr exact i64 %10386, 32
  %10388 = icmp ne i64 %10387, %10383
  %10389 = zext i1 %10388 to i8
  %10390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10389, i8* %10390, align 1
  %10391 = and i32 %10384, 255
  %10392 = call i32 @llvm.ctpop.i32(i32 %10391)
  %10393 = trunc i32 %10392 to i8
  %10394 = and i8 %10393, 1
  %10395 = xor i8 %10394, 1
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10395, i8* %10396, align 1
  %10397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10397, align 1
  %10398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10398, align 1
  %10399 = lshr i32 %10384, 31
  %10400 = trunc i32 %10399 to i8
  %10401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10400, i8* %10401, align 1
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10389, i8* %10402, align 1
  store %struct.Memory* %loadMem_4042cd, %struct.Memory** %MEMORY
  %loadMem_4042d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10404 = getelementptr inbounds %struct.GPR, %struct.GPR* %10403, i32 0, i32 33
  %10405 = getelementptr inbounds %struct.Reg, %struct.Reg* %10404, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %10405 to i64*
  %10406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10407 = getelementptr inbounds %struct.GPR, %struct.GPR* %10406, i32 0, i32 11
  %10408 = getelementptr inbounds %struct.Reg, %struct.Reg* %10407, i32 0, i32 0
  %EDI.i128 = bitcast %union.anon* %10408 to i32*
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10410 = getelementptr inbounds %struct.GPR, %struct.GPR* %10409, i32 0, i32 9
  %10411 = getelementptr inbounds %struct.Reg, %struct.Reg* %10410, i32 0, i32 0
  %RSI.i129 = bitcast %union.anon* %10411 to i64*
  %10412 = load i64, i64* %RSI.i129
  %10413 = load i32, i32* %EDI.i128
  %10414 = zext i32 %10413 to i64
  %10415 = load i64, i64* %PC.i127
  %10416 = add i64 %10415, 2
  store i64 %10416, i64* %PC.i127
  %10417 = trunc i64 %10412 to i32
  %10418 = add i32 %10413, %10417
  %10419 = zext i32 %10418 to i64
  store i64 %10419, i64* %RSI.i129, align 8
  %10420 = icmp ult i32 %10418, %10417
  %10421 = icmp ult i32 %10418, %10413
  %10422 = or i1 %10420, %10421
  %10423 = zext i1 %10422 to i8
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10423, i8* %10424, align 1
  %10425 = and i32 %10418, 255
  %10426 = call i32 @llvm.ctpop.i32(i32 %10425)
  %10427 = trunc i32 %10426 to i8
  %10428 = and i8 %10427, 1
  %10429 = xor i8 %10428, 1
  %10430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10429, i8* %10430, align 1
  %10431 = xor i64 %10414, %10412
  %10432 = trunc i64 %10431 to i32
  %10433 = xor i32 %10432, %10418
  %10434 = lshr i32 %10433, 4
  %10435 = trunc i32 %10434 to i8
  %10436 = and i8 %10435, 1
  %10437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10436, i8* %10437, align 1
  %10438 = icmp eq i32 %10418, 0
  %10439 = zext i1 %10438 to i8
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10439, i8* %10440, align 1
  %10441 = lshr i32 %10418, 31
  %10442 = trunc i32 %10441 to i8
  %10443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10442, i8* %10443, align 1
  %10444 = lshr i32 %10417, 31
  %10445 = lshr i32 %10413, 31
  %10446 = xor i32 %10441, %10444
  %10447 = xor i32 %10441, %10445
  %10448 = add i32 %10446, %10447
  %10449 = icmp eq i32 %10448, 2
  %10450 = zext i1 %10449 to i8
  %10451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10450, i8* %10451, align 1
  store %struct.Memory* %loadMem_4042d4, %struct.Memory** %MEMORY
  %loadMem_4042d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10453 = getelementptr inbounds %struct.GPR, %struct.GPR* %10452, i32 0, i32 33
  %10454 = getelementptr inbounds %struct.Reg, %struct.Reg* %10453, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %10454 to i64*
  %10455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10456 = getelementptr inbounds %struct.GPR, %struct.GPR* %10455, i32 0, i32 9
  %10457 = getelementptr inbounds %struct.Reg, %struct.Reg* %10456, i32 0, i32 0
  %RSI.i126 = bitcast %union.anon* %10457 to i64*
  %10458 = load i64, i64* %RSI.i126
  %10459 = load i64, i64* %PC.i125
  %10460 = add i64 %10459, 3
  store i64 %10460, i64* %PC.i125
  %10461 = trunc i64 %10458 to i32
  %10462 = add i32 16, %10461
  %10463 = zext i32 %10462 to i64
  store i64 %10463, i64* %RSI.i126, align 8
  %10464 = icmp ult i32 %10462, %10461
  %10465 = icmp ult i32 %10462, 16
  %10466 = or i1 %10464, %10465
  %10467 = zext i1 %10466 to i8
  %10468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10467, i8* %10468, align 1
  %10469 = and i32 %10462, 255
  %10470 = call i32 @llvm.ctpop.i32(i32 %10469)
  %10471 = trunc i32 %10470 to i8
  %10472 = and i8 %10471, 1
  %10473 = xor i8 %10472, 1
  %10474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10473, i8* %10474, align 1
  %10475 = xor i64 16, %10458
  %10476 = trunc i64 %10475 to i32
  %10477 = xor i32 %10476, %10462
  %10478 = lshr i32 %10477, 4
  %10479 = trunc i32 %10478 to i8
  %10480 = and i8 %10479, 1
  %10481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10480, i8* %10481, align 1
  %10482 = icmp eq i32 %10462, 0
  %10483 = zext i1 %10482 to i8
  %10484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10483, i8* %10484, align 1
  %10485 = lshr i32 %10462, 31
  %10486 = trunc i32 %10485 to i8
  %10487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10486, i8* %10487, align 1
  %10488 = lshr i32 %10461, 31
  %10489 = xor i32 %10485, %10488
  %10490 = add i32 %10489, %10485
  %10491 = icmp eq i32 %10490, 2
  %10492 = zext i1 %10491 to i8
  %10493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10492, i8* %10493, align 1
  store %struct.Memory* %loadMem_4042d6, %struct.Memory** %MEMORY
  %loadMem_4042d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10495 = getelementptr inbounds %struct.GPR, %struct.GPR* %10494, i32 0, i32 33
  %10496 = getelementptr inbounds %struct.Reg, %struct.Reg* %10495, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %10496 to i64*
  %10497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10498 = getelementptr inbounds %struct.GPR, %struct.GPR* %10497, i32 0, i32 1
  %10499 = getelementptr inbounds %struct.Reg, %struct.Reg* %10498, i32 0, i32 0
  %EAX.i123 = bitcast %union.anon* %10499 to i32*
  %10500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10501 = getelementptr inbounds %struct.GPR, %struct.GPR* %10500, i32 0, i32 15
  %10502 = getelementptr inbounds %struct.Reg, %struct.Reg* %10501, i32 0, i32 0
  %RBP.i124 = bitcast %union.anon* %10502 to i64*
  %10503 = load i64, i64* %RBP.i124
  %10504 = sub i64 %10503, 684
  %10505 = load i32, i32* %EAX.i123
  %10506 = zext i32 %10505 to i64
  %10507 = load i64, i64* %PC.i122
  %10508 = add i64 %10507, 6
  store i64 %10508, i64* %PC.i122
  %10509 = inttoptr i64 %10504 to i32*
  store i32 %10505, i32* %10509
  store %struct.Memory* %loadMem_4042d9, %struct.Memory** %MEMORY
  %loadMem_4042df = load %struct.Memory*, %struct.Memory** %MEMORY
  %10510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10511 = getelementptr inbounds %struct.GPR, %struct.GPR* %10510, i32 0, i32 33
  %10512 = getelementptr inbounds %struct.Reg, %struct.Reg* %10511, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %10512 to i64*
  %10513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10514 = getelementptr inbounds %struct.GPR, %struct.GPR* %10513, i32 0, i32 9
  %10515 = getelementptr inbounds %struct.Reg, %struct.Reg* %10514, i32 0, i32 0
  %ESI.i120 = bitcast %union.anon* %10515 to i32*
  %10516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10517 = getelementptr inbounds %struct.GPR, %struct.GPR* %10516, i32 0, i32 1
  %10518 = getelementptr inbounds %struct.Reg, %struct.Reg* %10517, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %10518 to i64*
  %10519 = load i32, i32* %ESI.i120
  %10520 = zext i32 %10519 to i64
  %10521 = load i64, i64* %PC.i119
  %10522 = add i64 %10521, 2
  store i64 %10522, i64* %PC.i119
  %10523 = and i64 %10520, 4294967295
  store i64 %10523, i64* %RAX.i121, align 8
  store %struct.Memory* %loadMem_4042df, %struct.Memory** %MEMORY
  %loadMem_4042e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10525 = getelementptr inbounds %struct.GPR, %struct.GPR* %10524, i32 0, i32 33
  %10526 = getelementptr inbounds %struct.Reg, %struct.Reg* %10525, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %10526 to i64*
  %10527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10528 = getelementptr inbounds %struct.GPR, %struct.GPR* %10527, i32 0, i32 7
  %10529 = getelementptr inbounds %struct.Reg, %struct.Reg* %10528, i32 0, i32 0
  %EDX.i117 = bitcast %union.anon* %10529 to i32*
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10531 = getelementptr inbounds %struct.GPR, %struct.GPR* %10530, i32 0, i32 15
  %10532 = getelementptr inbounds %struct.Reg, %struct.Reg* %10531, i32 0, i32 0
  %RBP.i118 = bitcast %union.anon* %10532 to i64*
  %10533 = load i64, i64* %RBP.i118
  %10534 = sub i64 %10533, 688
  %10535 = load i32, i32* %EDX.i117
  %10536 = zext i32 %10535 to i64
  %10537 = load i64, i64* %PC.i116
  %10538 = add i64 %10537, 6
  store i64 %10538, i64* %PC.i116
  %10539 = inttoptr i64 %10534 to i32*
  store i32 %10535, i32* %10539
  store %struct.Memory* %loadMem_4042e1, %struct.Memory** %MEMORY
  %loadMem_4042e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10541 = getelementptr inbounds %struct.GPR, %struct.GPR* %10540, i32 0, i32 33
  %10542 = getelementptr inbounds %struct.Reg, %struct.Reg* %10541, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %10542 to i64*
  %10543 = load i64, i64* %PC.i115
  %10544 = add i64 %10543, 1
  store i64 %10544, i64* %PC.i115
  %10545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10547 = bitcast %union.anon* %10546 to i32*
  %10548 = load i32, i32* %10547, align 8
  %10549 = sext i32 %10548 to i64
  %10550 = lshr i64 %10549, 32
  store i64 %10550, i64* %10545, align 8
  store %struct.Memory* %loadMem_4042e7, %struct.Memory** %MEMORY
  %loadMem_4042e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10552 = getelementptr inbounds %struct.GPR, %struct.GPR* %10551, i32 0, i32 33
  %10553 = getelementptr inbounds %struct.Reg, %struct.Reg* %10552, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %10553 to i64*
  %10554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10555 = getelementptr inbounds %struct.GPR, %struct.GPR* %10554, i32 0, i32 9
  %10556 = getelementptr inbounds %struct.Reg, %struct.Reg* %10555, i32 0, i32 0
  %RSI.i113 = bitcast %union.anon* %10556 to i64*
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10558 = getelementptr inbounds %struct.GPR, %struct.GPR* %10557, i32 0, i32 15
  %10559 = getelementptr inbounds %struct.Reg, %struct.Reg* %10558, i32 0, i32 0
  %RBP.i114 = bitcast %union.anon* %10559 to i64*
  %10560 = load i64, i64* %RBP.i114
  %10561 = sub i64 %10560, 684
  %10562 = load i64, i64* %PC.i112
  %10563 = add i64 %10562, 6
  store i64 %10563, i64* %PC.i112
  %10564 = inttoptr i64 %10561 to i32*
  %10565 = load i32, i32* %10564
  %10566 = zext i32 %10565 to i64
  store i64 %10566, i64* %RSI.i113, align 8
  store %struct.Memory* %loadMem_4042e8, %struct.Memory** %MEMORY
  %loadMem_4042ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %10567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10568 = getelementptr inbounds %struct.GPR, %struct.GPR* %10567, i32 0, i32 33
  %10569 = getelementptr inbounds %struct.Reg, %struct.Reg* %10568, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %10569 to i64*
  %10570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10571 = getelementptr inbounds %struct.GPR, %struct.GPR* %10570, i32 0, i32 9
  %10572 = getelementptr inbounds %struct.Reg, %struct.Reg* %10571, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %10572 to i32*
  %10573 = load i32, i32* %ESI.i
  %10574 = zext i32 %10573 to i64
  %10575 = load i64, i64* %PC.i109
  %10576 = add i64 %10575, 2
  store i64 %10576, i64* %PC.i109
  %10577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10578 = bitcast %union.anon* %10577 to i32*
  %10579 = load i32, i32* %10578, align 8
  %10580 = zext i32 %10579 to i64
  %10581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10582 = bitcast %union.anon* %10581 to i32*
  %10583 = load i32, i32* %10582, align 8
  %10584 = zext i32 %10583 to i64
  %10585 = shl i64 %10574, 32
  %10586 = ashr exact i64 %10585, 32
  %10587 = shl i64 %10584, 32
  %10588 = or i64 %10587, %10580
  %10589 = sdiv i64 %10588, %10586
  %10590 = shl i64 %10589, 32
  %10591 = ashr exact i64 %10590, 32
  %10592 = icmp eq i64 %10589, %10591
  br i1 %10592, label %10597, label %10593

; <label>:10593:                                  ; preds = %block_.L_404299
  %10594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10595 = load i64, i64* %10594, align 8
  %10596 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10595, %struct.Memory* %loadMem_4042ee)
  br label %routine_idivl__esi.exit

; <label>:10597:                                  ; preds = %block_.L_404299
  %10598 = srem i64 %10588, %10586
  %10599 = getelementptr inbounds %union.anon, %union.anon* %10577, i64 0, i32 0
  %10600 = and i64 %10589, 4294967295
  store i64 %10600, i64* %10599, align 8
  %10601 = getelementptr inbounds %union.anon, %union.anon* %10581, i64 0, i32 0
  %10602 = and i64 %10598, 4294967295
  store i64 %10602, i64* %10601, align 8
  %10603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10603, align 1
  %10604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %10604, align 1
  %10605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10605, align 1
  %10606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10606, align 1
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10607, align 1
  %10608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10608, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %10593, %10597
  %10609 = phi %struct.Memory* [ %10596, %10593 ], [ %loadMem_4042ee, %10597 ]
  store %struct.Memory* %10609, %struct.Memory** %MEMORY
  %loadMem_4042f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10611 = getelementptr inbounds %struct.GPR, %struct.GPR* %10610, i32 0, i32 33
  %10612 = getelementptr inbounds %struct.Reg, %struct.Reg* %10611, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %10612 to i64*
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10614 = getelementptr inbounds %struct.GPR, %struct.GPR* %10613, i32 0, i32 11
  %10615 = getelementptr inbounds %struct.Reg, %struct.Reg* %10614, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %10615 to i64*
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10617 = getelementptr inbounds %struct.GPR, %struct.GPR* %10616, i32 0, i32 15
  %10618 = getelementptr inbounds %struct.Reg, %struct.Reg* %10617, i32 0, i32 0
  %RBP.i108 = bitcast %union.anon* %10618 to i64*
  %10619 = load i64, i64* %RBP.i108
  %10620 = sub i64 %10619, 688
  %10621 = load i64, i64* %PC.i107
  %10622 = add i64 %10621, 6
  store i64 %10622, i64* %PC.i107
  %10623 = inttoptr i64 %10620 to i32*
  %10624 = load i32, i32* %10623
  %10625 = zext i32 %10624 to i64
  store i64 %10625, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_4042f0, %struct.Memory** %MEMORY
  %loadMem_4042f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10627 = getelementptr inbounds %struct.GPR, %struct.GPR* %10626, i32 0, i32 33
  %10628 = getelementptr inbounds %struct.Reg, %struct.Reg* %10627, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %10628 to i64*
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10630 = getelementptr inbounds %struct.GPR, %struct.GPR* %10629, i32 0, i32 1
  %10631 = getelementptr inbounds %struct.Reg, %struct.Reg* %10630, i32 0, i32 0
  %EAX.i106 = bitcast %union.anon* %10631 to i32*
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10633 = getelementptr inbounds %struct.GPR, %struct.GPR* %10632, i32 0, i32 11
  %10634 = getelementptr inbounds %struct.Reg, %struct.Reg* %10633, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %10634 to i32*
  %10635 = load i32, i32* %EDI.i
  %10636 = zext i32 %10635 to i64
  %10637 = load i32, i32* %EAX.i106
  %10638 = zext i32 %10637 to i64
  %10639 = load i64, i64* %PC.i105
  %10640 = add i64 %10639, 2
  store i64 %10640, i64* %PC.i105
  %10641 = sub i32 %10635, %10637
  %10642 = icmp ult i32 %10635, %10637
  %10643 = zext i1 %10642 to i8
  %10644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10643, i8* %10644, align 1
  %10645 = and i32 %10641, 255
  %10646 = call i32 @llvm.ctpop.i32(i32 %10645)
  %10647 = trunc i32 %10646 to i8
  %10648 = and i8 %10647, 1
  %10649 = xor i8 %10648, 1
  %10650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10649, i8* %10650, align 1
  %10651 = xor i64 %10638, %10636
  %10652 = trunc i64 %10651 to i32
  %10653 = xor i32 %10652, %10641
  %10654 = lshr i32 %10653, 4
  %10655 = trunc i32 %10654 to i8
  %10656 = and i8 %10655, 1
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10656, i8* %10657, align 1
  %10658 = icmp eq i32 %10641, 0
  %10659 = zext i1 %10658 to i8
  %10660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10659, i8* %10660, align 1
  %10661 = lshr i32 %10641, 31
  %10662 = trunc i32 %10661 to i8
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10662, i8* %10663, align 1
  %10664 = lshr i32 %10635, 31
  %10665 = lshr i32 %10637, 31
  %10666 = xor i32 %10665, %10664
  %10667 = xor i32 %10661, %10664
  %10668 = add i32 %10667, %10666
  %10669 = icmp eq i32 %10668, 2
  %10670 = zext i1 %10669 to i8
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10670, i8* %10671, align 1
  store %struct.Memory* %loadMem_4042f6, %struct.Memory** %MEMORY
  %loadMem_4042f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10673 = getelementptr inbounds %struct.GPR, %struct.GPR* %10672, i32 0, i32 33
  %10674 = getelementptr inbounds %struct.Reg, %struct.Reg* %10673, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %10674 to i64*
  %10675 = load i64, i64* %PC.i104
  %10676 = add i64 %10675, 31
  %10677 = load i64, i64* %PC.i104
  %10678 = add i64 %10677, 6
  %10679 = load i64, i64* %PC.i104
  %10680 = add i64 %10679, 6
  store i64 %10680, i64* %PC.i104
  %10681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10682 = load i8, i8* %10681, align 1
  %10683 = icmp ne i8 %10682, 0
  %10684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10685 = load i8, i8* %10684, align 1
  %10686 = icmp ne i8 %10685, 0
  %10687 = xor i1 %10683, %10686
  %10688 = xor i1 %10687, true
  %10689 = zext i1 %10688 to i8
  store i8 %10689, i8* %BRANCH_TAKEN, align 1
  %10690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10691 = select i1 %10687, i64 %10678, i64 %10676
  store i64 %10691, i64* %10690, align 8
  store %struct.Memory* %loadMem_4042f8, %struct.Memory** %MEMORY
  %loadBr_4042f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4042f8 = icmp eq i8 %loadBr_4042f8, 1
  br i1 %cmpBr_4042f8, label %block_.L_404317, label %block_4042fe

block_4042fe:                                     ; preds = %routine_idivl__esi.exit
  %loadMem_4042fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10693 = getelementptr inbounds %struct.GPR, %struct.GPR* %10692, i32 0, i32 33
  %10694 = getelementptr inbounds %struct.Reg, %struct.Reg* %10693, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %10694 to i64*
  %10695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10696 = getelementptr inbounds %struct.GPR, %struct.GPR* %10695, i32 0, i32 1
  %10697 = getelementptr inbounds %struct.Reg, %struct.Reg* %10696, i32 0, i32 0
  %RAX.i103 = bitcast %union.anon* %10697 to i64*
  %10698 = load i64, i64* %PC.i102
  %10699 = add i64 %10698, 8
  store i64 %10699, i64* %PC.i102
  %10700 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10700, i64* %RAX.i103, align 8
  store %struct.Memory* %loadMem_4042fe, %struct.Memory** %MEMORY
  %loadMem_404306 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10702 = getelementptr inbounds %struct.GPR, %struct.GPR* %10701, i32 0, i32 33
  %10703 = getelementptr inbounds %struct.Reg, %struct.Reg* %10702, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %10703 to i64*
  %10704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10705 = getelementptr inbounds %struct.GPR, %struct.GPR* %10704, i32 0, i32 1
  %10706 = getelementptr inbounds %struct.Reg, %struct.Reg* %10705, i32 0, i32 0
  %RAX.i100 = bitcast %union.anon* %10706 to i64*
  %10707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10708 = getelementptr inbounds %struct.GPR, %struct.GPR* %10707, i32 0, i32 5
  %10709 = getelementptr inbounds %struct.Reg, %struct.Reg* %10708, i32 0, i32 0
  %RCX.i101 = bitcast %union.anon* %10709 to i64*
  %10710 = load i64, i64* %RAX.i100
  %10711 = add i64 %10710, 72684
  %10712 = load i64, i64* %PC.i99
  %10713 = add i64 %10712, 6
  store i64 %10713, i64* %PC.i99
  %10714 = inttoptr i64 %10711 to i32*
  %10715 = load i32, i32* %10714
  %10716 = zext i32 %10715 to i64
  store i64 %10716, i64* %RCX.i101, align 8
  store %struct.Memory* %loadMem_404306, %struct.Memory** %MEMORY
  %loadMem_40430c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10718 = getelementptr inbounds %struct.GPR, %struct.GPR* %10717, i32 0, i32 33
  %10719 = getelementptr inbounds %struct.Reg, %struct.Reg* %10718, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %10719 to i64*
  %10720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10721 = getelementptr inbounds %struct.GPR, %struct.GPR* %10720, i32 0, i32 5
  %10722 = getelementptr inbounds %struct.Reg, %struct.Reg* %10721, i32 0, i32 0
  %ECX.i97 = bitcast %union.anon* %10722 to i32*
  %10723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10724 = getelementptr inbounds %struct.GPR, %struct.GPR* %10723, i32 0, i32 15
  %10725 = getelementptr inbounds %struct.Reg, %struct.Reg* %10724, i32 0, i32 0
  %RBP.i98 = bitcast %union.anon* %10725 to i64*
  %10726 = load i64, i64* %RBP.i98
  %10727 = sub i64 %10726, 692
  %10728 = load i32, i32* %ECX.i97
  %10729 = zext i32 %10728 to i64
  %10730 = load i64, i64* %PC.i96
  %10731 = add i64 %10730, 6
  store i64 %10731, i64* %PC.i96
  %10732 = inttoptr i64 %10727 to i32*
  store i32 %10728, i32* %10732
  store %struct.Memory* %loadMem_40430c, %struct.Memory** %MEMORY
  %loadMem_404312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10734 = getelementptr inbounds %struct.GPR, %struct.GPR* %10733, i32 0, i32 33
  %10735 = getelementptr inbounds %struct.Reg, %struct.Reg* %10734, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %10735 to i64*
  %10736 = load i64, i64* %PC.i95
  %10737 = add i64 %10736, 78
  %10738 = load i64, i64* %PC.i95
  %10739 = add i64 %10738, 5
  store i64 %10739, i64* %PC.i95
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10737, i64* %10740, align 8
  store %struct.Memory* %loadMem_404312, %struct.Memory** %MEMORY
  br label %block_.L_404360

block_.L_404317:                                  ; preds = %routine_idivl__esi.exit
  %loadMem_404317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10742 = getelementptr inbounds %struct.GPR, %struct.GPR* %10741, i32 0, i32 33
  %10743 = getelementptr inbounds %struct.Reg, %struct.Reg* %10742, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %10743 to i64*
  %10744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10745 = getelementptr inbounds %struct.GPR, %struct.GPR* %10744, i32 0, i32 1
  %10746 = getelementptr inbounds %struct.Reg, %struct.Reg* %10745, i32 0, i32 0
  %RAX.i94 = bitcast %union.anon* %10746 to i64*
  %10747 = load i64, i64* %PC.i93
  %10748 = add i64 %10747, 5
  store i64 %10748, i64* %PC.i93
  store i64 32, i64* %RAX.i94, align 8
  store %struct.Memory* %loadMem_404317, %struct.Memory** %MEMORY
  %loadMem_40431c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10750 = getelementptr inbounds %struct.GPR, %struct.GPR* %10749, i32 0, i32 33
  %10751 = getelementptr inbounds %struct.Reg, %struct.Reg* %10750, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %10751 to i64*
  %10752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10753 = getelementptr inbounds %struct.GPR, %struct.GPR* %10752, i32 0, i32 5
  %10754 = getelementptr inbounds %struct.Reg, %struct.Reg* %10753, i32 0, i32 0
  %RCX.i91 = bitcast %union.anon* %10754 to i64*
  %10755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10756 = getelementptr inbounds %struct.GPR, %struct.GPR* %10755, i32 0, i32 15
  %10757 = getelementptr inbounds %struct.Reg, %struct.Reg* %10756, i32 0, i32 0
  %RBP.i92 = bitcast %union.anon* %10757 to i64*
  %10758 = load i64, i64* %RBP.i92
  %10759 = sub i64 %10758, 172
  %10760 = load i64, i64* %PC.i90
  %10761 = add i64 %10760, 6
  store i64 %10761, i64* %PC.i90
  %10762 = inttoptr i64 %10759 to i32*
  %10763 = load i32, i32* %10762
  %10764 = zext i32 %10763 to i64
  store i64 %10764, i64* %RCX.i91, align 8
  store %struct.Memory* %loadMem_40431c, %struct.Memory** %MEMORY
  %loadMem_404322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10766 = getelementptr inbounds %struct.GPR, %struct.GPR* %10765, i32 0, i32 33
  %10767 = getelementptr inbounds %struct.Reg, %struct.Reg* %10766, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %10767 to i64*
  %10768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10769 = getelementptr inbounds %struct.GPR, %struct.GPR* %10768, i32 0, i32 7
  %10770 = getelementptr inbounds %struct.Reg, %struct.Reg* %10769, i32 0, i32 0
  %RDX.i88 = bitcast %union.anon* %10770 to i64*
  %10771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10772 = getelementptr inbounds %struct.GPR, %struct.GPR* %10771, i32 0, i32 15
  %10773 = getelementptr inbounds %struct.Reg, %struct.Reg* %10772, i32 0, i32 0
  %RBP.i89 = bitcast %union.anon* %10773 to i64*
  %10774 = load i64, i64* %RBP.i89
  %10775 = sub i64 %10774, 148
  %10776 = load i64, i64* %PC.i87
  %10777 = add i64 %10776, 6
  store i64 %10777, i64* %PC.i87
  %10778 = inttoptr i64 %10775 to i32*
  %10779 = load i32, i32* %10778
  %10780 = zext i32 %10779 to i64
  store i64 %10780, i64* %RDX.i88, align 8
  store %struct.Memory* %loadMem_404322, %struct.Memory** %MEMORY
  %loadMem_404328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10782 = getelementptr inbounds %struct.GPR, %struct.GPR* %10781, i32 0, i32 33
  %10783 = getelementptr inbounds %struct.Reg, %struct.Reg* %10782, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %10783 to i64*
  %10784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10785 = getelementptr inbounds %struct.GPR, %struct.GPR* %10784, i32 0, i32 7
  %10786 = getelementptr inbounds %struct.Reg, %struct.Reg* %10785, i32 0, i32 0
  %RDX.i86 = bitcast %union.anon* %10786 to i64*
  %10787 = load i64, i64* %RDX.i86
  %10788 = load i64, i64* %PC.i85
  %10789 = add i64 %10788, 3
  store i64 %10789, i64* %PC.i85
  %10790 = trunc i64 %10787 to i32
  %10791 = sub i32 %10790, 7
  %10792 = zext i32 %10791 to i64
  store i64 %10792, i64* %RDX.i86, align 8
  %10793 = icmp ult i32 %10790, 7
  %10794 = zext i1 %10793 to i8
  %10795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10794, i8* %10795, align 1
  %10796 = and i32 %10791, 255
  %10797 = call i32 @llvm.ctpop.i32(i32 %10796)
  %10798 = trunc i32 %10797 to i8
  %10799 = and i8 %10798, 1
  %10800 = xor i8 %10799, 1
  %10801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10800, i8* %10801, align 1
  %10802 = xor i64 7, %10787
  %10803 = trunc i64 %10802 to i32
  %10804 = xor i32 %10803, %10791
  %10805 = lshr i32 %10804, 4
  %10806 = trunc i32 %10805 to i8
  %10807 = and i8 %10806, 1
  %10808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10807, i8* %10808, align 1
  %10809 = icmp eq i32 %10791, 0
  %10810 = zext i1 %10809 to i8
  %10811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10810, i8* %10811, align 1
  %10812 = lshr i32 %10791, 31
  %10813 = trunc i32 %10812 to i8
  %10814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10813, i8* %10814, align 1
  %10815 = lshr i32 %10790, 31
  %10816 = xor i32 %10812, %10815
  %10817 = add i32 %10816, %10815
  %10818 = icmp eq i32 %10817, 2
  %10819 = zext i1 %10818 to i8
  %10820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10819, i8* %10820, align 1
  store %struct.Memory* %loadMem_404328, %struct.Memory** %MEMORY
  %loadMem_40432b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10822 = getelementptr inbounds %struct.GPR, %struct.GPR* %10821, i32 0, i32 33
  %10823 = getelementptr inbounds %struct.Reg, %struct.Reg* %10822, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %10823 to i64*
  %10824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10825 = getelementptr inbounds %struct.GPR, %struct.GPR* %10824, i32 0, i32 7
  %10826 = getelementptr inbounds %struct.Reg, %struct.Reg* %10825, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %10826 to i64*
  %10827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10828 = getelementptr inbounds %struct.GPR, %struct.GPR* %10827, i32 0, i32 15
  %10829 = getelementptr inbounds %struct.Reg, %struct.Reg* %10828, i32 0, i32 0
  %RBP.i84 = bitcast %union.anon* %10829 to i64*
  %10830 = load i64, i64* %RDX.i83
  %10831 = load i64, i64* %RBP.i84
  %10832 = sub i64 %10831, 164
  %10833 = load i64, i64* %PC.i82
  %10834 = add i64 %10833, 7
  store i64 %10834, i64* %PC.i82
  %10835 = inttoptr i64 %10832 to i32*
  %10836 = load i32, i32* %10835
  %10837 = shl i64 %10830, 32
  %10838 = ashr exact i64 %10837, 32
  %10839 = sext i32 %10836 to i64
  %10840 = mul i64 %10839, %10838
  %10841 = trunc i64 %10840 to i32
  %10842 = and i64 %10840, 4294967295
  store i64 %10842, i64* %RDX.i83, align 8
  %10843 = shl i64 %10840, 32
  %10844 = ashr exact i64 %10843, 32
  %10845 = icmp ne i64 %10844, %10840
  %10846 = zext i1 %10845 to i8
  %10847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10846, i8* %10847, align 1
  %10848 = and i32 %10841, 255
  %10849 = call i32 @llvm.ctpop.i32(i32 %10848)
  %10850 = trunc i32 %10849 to i8
  %10851 = and i8 %10850, 1
  %10852 = xor i8 %10851, 1
  %10853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10852, i8* %10853, align 1
  %10854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10854, align 1
  %10855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10855, align 1
  %10856 = lshr i32 %10841, 31
  %10857 = trunc i32 %10856 to i8
  %10858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10857, i8* %10858, align 1
  %10859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10846, i8* %10859, align 1
  store %struct.Memory* %loadMem_40432b, %struct.Memory** %MEMORY
  %loadMem_404332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10861 = getelementptr inbounds %struct.GPR, %struct.GPR* %10860, i32 0, i32 33
  %10862 = getelementptr inbounds %struct.Reg, %struct.Reg* %10861, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %10862 to i64*
  %10863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10864 = getelementptr inbounds %struct.GPR, %struct.GPR* %10863, i32 0, i32 7
  %10865 = getelementptr inbounds %struct.Reg, %struct.Reg* %10864, i32 0, i32 0
  %EDX.i80 = bitcast %union.anon* %10865 to i32*
  %10866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10867 = getelementptr inbounds %struct.GPR, %struct.GPR* %10866, i32 0, i32 5
  %10868 = getelementptr inbounds %struct.Reg, %struct.Reg* %10867, i32 0, i32 0
  %RCX.i81 = bitcast %union.anon* %10868 to i64*
  %10869 = load i64, i64* %RCX.i81
  %10870 = load i32, i32* %EDX.i80
  %10871 = zext i32 %10870 to i64
  %10872 = load i64, i64* %PC.i79
  %10873 = add i64 %10872, 2
  store i64 %10873, i64* %PC.i79
  %10874 = trunc i64 %10869 to i32
  %10875 = add i32 %10870, %10874
  %10876 = zext i32 %10875 to i64
  store i64 %10876, i64* %RCX.i81, align 8
  %10877 = icmp ult i32 %10875, %10874
  %10878 = icmp ult i32 %10875, %10870
  %10879 = or i1 %10877, %10878
  %10880 = zext i1 %10879 to i8
  %10881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10880, i8* %10881, align 1
  %10882 = and i32 %10875, 255
  %10883 = call i32 @llvm.ctpop.i32(i32 %10882)
  %10884 = trunc i32 %10883 to i8
  %10885 = and i8 %10884, 1
  %10886 = xor i8 %10885, 1
  %10887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10886, i8* %10887, align 1
  %10888 = xor i64 %10871, %10869
  %10889 = trunc i64 %10888 to i32
  %10890 = xor i32 %10889, %10875
  %10891 = lshr i32 %10890, 4
  %10892 = trunc i32 %10891 to i8
  %10893 = and i8 %10892, 1
  %10894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10893, i8* %10894, align 1
  %10895 = icmp eq i32 %10875, 0
  %10896 = zext i1 %10895 to i8
  %10897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10896, i8* %10897, align 1
  %10898 = lshr i32 %10875, 31
  %10899 = trunc i32 %10898 to i8
  %10900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10899, i8* %10900, align 1
  %10901 = lshr i32 %10874, 31
  %10902 = lshr i32 %10870, 31
  %10903 = xor i32 %10898, %10901
  %10904 = xor i32 %10898, %10902
  %10905 = add i32 %10903, %10904
  %10906 = icmp eq i32 %10905, 2
  %10907 = zext i1 %10906 to i8
  %10908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10907, i8* %10908, align 1
  store %struct.Memory* %loadMem_404332, %struct.Memory** %MEMORY
  %loadMem_404334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10910 = getelementptr inbounds %struct.GPR, %struct.GPR* %10909, i32 0, i32 33
  %10911 = getelementptr inbounds %struct.Reg, %struct.Reg* %10910, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %10911 to i64*
  %10912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10913 = getelementptr inbounds %struct.GPR, %struct.GPR* %10912, i32 0, i32 7
  %10914 = getelementptr inbounds %struct.Reg, %struct.Reg* %10913, i32 0, i32 0
  %RDX.i77 = bitcast %union.anon* %10914 to i64*
  %10915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10916 = getelementptr inbounds %struct.GPR, %struct.GPR* %10915, i32 0, i32 15
  %10917 = getelementptr inbounds %struct.Reg, %struct.Reg* %10916, i32 0, i32 0
  %RBP.i78 = bitcast %union.anon* %10917 to i64*
  %10918 = load i64, i64* %RBP.i78
  %10919 = sub i64 %10918, 152
  %10920 = load i64, i64* %PC.i76
  %10921 = add i64 %10920, 6
  store i64 %10921, i64* %PC.i76
  %10922 = inttoptr i64 %10919 to i32*
  %10923 = load i32, i32* %10922
  %10924 = zext i32 %10923 to i64
  store i64 %10924, i64* %RDX.i77, align 8
  store %struct.Memory* %loadMem_404334, %struct.Memory** %MEMORY
  %loadMem_40433a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10926 = getelementptr inbounds %struct.GPR, %struct.GPR* %10925, i32 0, i32 33
  %10927 = getelementptr inbounds %struct.Reg, %struct.Reg* %10926, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %10927 to i64*
  %10928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10929 = getelementptr inbounds %struct.GPR, %struct.GPR* %10928, i32 0, i32 7
  %10930 = getelementptr inbounds %struct.Reg, %struct.Reg* %10929, i32 0, i32 0
  %RDX.i75 = bitcast %union.anon* %10930 to i64*
  %10931 = load i64, i64* %RDX.i75
  %10932 = load i64, i64* %PC.i74
  %10933 = add i64 %10932, 3
  store i64 %10933, i64* %PC.i74
  %10934 = trunc i64 %10931 to i32
  %10935 = sub i32 %10934, 7
  %10936 = zext i32 %10935 to i64
  store i64 %10936, i64* %RDX.i75, align 8
  %10937 = icmp ult i32 %10934, 7
  %10938 = zext i1 %10937 to i8
  %10939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10938, i8* %10939, align 1
  %10940 = and i32 %10935, 255
  %10941 = call i32 @llvm.ctpop.i32(i32 %10940)
  %10942 = trunc i32 %10941 to i8
  %10943 = and i8 %10942, 1
  %10944 = xor i8 %10943, 1
  %10945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10944, i8* %10945, align 1
  %10946 = xor i64 7, %10931
  %10947 = trunc i64 %10946 to i32
  %10948 = xor i32 %10947, %10935
  %10949 = lshr i32 %10948, 4
  %10950 = trunc i32 %10949 to i8
  %10951 = and i8 %10950, 1
  %10952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10951, i8* %10952, align 1
  %10953 = icmp eq i32 %10935, 0
  %10954 = zext i1 %10953 to i8
  %10955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10954, i8* %10955, align 1
  %10956 = lshr i32 %10935, 31
  %10957 = trunc i32 %10956 to i8
  %10958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10957, i8* %10958, align 1
  %10959 = lshr i32 %10934, 31
  %10960 = xor i32 %10956, %10959
  %10961 = add i32 %10960, %10959
  %10962 = icmp eq i32 %10961, 2
  %10963 = zext i1 %10962 to i8
  %10964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10963, i8* %10964, align 1
  store %struct.Memory* %loadMem_40433a, %struct.Memory** %MEMORY
  %loadMem_40433d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 33
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %10967 to i64*
  %10968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10969 = getelementptr inbounds %struct.GPR, %struct.GPR* %10968, i32 0, i32 7
  %10970 = getelementptr inbounds %struct.Reg, %struct.Reg* %10969, i32 0, i32 0
  %RDX.i72 = bitcast %union.anon* %10970 to i64*
  %10971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10972 = getelementptr inbounds %struct.GPR, %struct.GPR* %10971, i32 0, i32 15
  %10973 = getelementptr inbounds %struct.Reg, %struct.Reg* %10972, i32 0, i32 0
  %RBP.i73 = bitcast %union.anon* %10973 to i64*
  %10974 = load i64, i64* %RDX.i72
  %10975 = load i64, i64* %RBP.i73
  %10976 = sub i64 %10975, 168
  %10977 = load i64, i64* %PC.i71
  %10978 = add i64 %10977, 7
  store i64 %10978, i64* %PC.i71
  %10979 = inttoptr i64 %10976 to i32*
  %10980 = load i32, i32* %10979
  %10981 = shl i64 %10974, 32
  %10982 = ashr exact i64 %10981, 32
  %10983 = sext i32 %10980 to i64
  %10984 = mul i64 %10983, %10982
  %10985 = trunc i64 %10984 to i32
  %10986 = and i64 %10984, 4294967295
  store i64 %10986, i64* %RDX.i72, align 8
  %10987 = shl i64 %10984, 32
  %10988 = ashr exact i64 %10987, 32
  %10989 = icmp ne i64 %10988, %10984
  %10990 = zext i1 %10989 to i8
  %10991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10990, i8* %10991, align 1
  %10992 = and i32 %10985, 255
  %10993 = call i32 @llvm.ctpop.i32(i32 %10992)
  %10994 = trunc i32 %10993 to i8
  %10995 = and i8 %10994, 1
  %10996 = xor i8 %10995, 1
  %10997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10996, i8* %10997, align 1
  %10998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10998, align 1
  %10999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10999, align 1
  %11000 = lshr i32 %10985, 31
  %11001 = trunc i32 %11000 to i8
  %11002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11001, i8* %11002, align 1
  %11003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10990, i8* %11003, align 1
  store %struct.Memory* %loadMem_40433d, %struct.Memory** %MEMORY
  %loadMem_404344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11005 = getelementptr inbounds %struct.GPR, %struct.GPR* %11004, i32 0, i32 33
  %11006 = getelementptr inbounds %struct.Reg, %struct.Reg* %11005, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %11006 to i64*
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11008 = getelementptr inbounds %struct.GPR, %struct.GPR* %11007, i32 0, i32 7
  %11009 = getelementptr inbounds %struct.Reg, %struct.Reg* %11008, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %11009 to i32*
  %11010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11011 = getelementptr inbounds %struct.GPR, %struct.GPR* %11010, i32 0, i32 5
  %11012 = getelementptr inbounds %struct.Reg, %struct.Reg* %11011, i32 0, i32 0
  %RCX.i70 = bitcast %union.anon* %11012 to i64*
  %11013 = load i64, i64* %RCX.i70
  %11014 = load i32, i32* %EDX.i
  %11015 = zext i32 %11014 to i64
  %11016 = load i64, i64* %PC.i69
  %11017 = add i64 %11016, 2
  store i64 %11017, i64* %PC.i69
  %11018 = trunc i64 %11013 to i32
  %11019 = add i32 %11014, %11018
  %11020 = zext i32 %11019 to i64
  store i64 %11020, i64* %RCX.i70, align 8
  %11021 = icmp ult i32 %11019, %11018
  %11022 = icmp ult i32 %11019, %11014
  %11023 = or i1 %11021, %11022
  %11024 = zext i1 %11023 to i8
  %11025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11024, i8* %11025, align 1
  %11026 = and i32 %11019, 255
  %11027 = call i32 @llvm.ctpop.i32(i32 %11026)
  %11028 = trunc i32 %11027 to i8
  %11029 = and i8 %11028, 1
  %11030 = xor i8 %11029, 1
  %11031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11030, i8* %11031, align 1
  %11032 = xor i64 %11015, %11013
  %11033 = trunc i64 %11032 to i32
  %11034 = xor i32 %11033, %11019
  %11035 = lshr i32 %11034, 4
  %11036 = trunc i32 %11035 to i8
  %11037 = and i8 %11036, 1
  %11038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11037, i8* %11038, align 1
  %11039 = icmp eq i32 %11019, 0
  %11040 = zext i1 %11039 to i8
  %11041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11040, i8* %11041, align 1
  %11042 = lshr i32 %11019, 31
  %11043 = trunc i32 %11042 to i8
  %11044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11043, i8* %11044, align 1
  %11045 = lshr i32 %11018, 31
  %11046 = lshr i32 %11014, 31
  %11047 = xor i32 %11042, %11045
  %11048 = xor i32 %11042, %11046
  %11049 = add i32 %11047, %11048
  %11050 = icmp eq i32 %11049, 2
  %11051 = zext i1 %11050 to i8
  %11052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11051, i8* %11052, align 1
  store %struct.Memory* %loadMem_404344, %struct.Memory** %MEMORY
  %loadMem_404346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11054 = getelementptr inbounds %struct.GPR, %struct.GPR* %11053, i32 0, i32 33
  %11055 = getelementptr inbounds %struct.Reg, %struct.Reg* %11054, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %11055 to i64*
  %11056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11057 = getelementptr inbounds %struct.GPR, %struct.GPR* %11056, i32 0, i32 5
  %11058 = getelementptr inbounds %struct.Reg, %struct.Reg* %11057, i32 0, i32 0
  %RCX.i68 = bitcast %union.anon* %11058 to i64*
  %11059 = load i64, i64* %RCX.i68
  %11060 = load i64, i64* %PC.i67
  %11061 = add i64 %11060, 3
  store i64 %11061, i64* %PC.i67
  %11062 = trunc i64 %11059 to i32
  %11063 = add i32 16, %11062
  %11064 = zext i32 %11063 to i64
  store i64 %11064, i64* %RCX.i68, align 8
  %11065 = icmp ult i32 %11063, %11062
  %11066 = icmp ult i32 %11063, 16
  %11067 = or i1 %11065, %11066
  %11068 = zext i1 %11067 to i8
  %11069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11068, i8* %11069, align 1
  %11070 = and i32 %11063, 255
  %11071 = call i32 @llvm.ctpop.i32(i32 %11070)
  %11072 = trunc i32 %11071 to i8
  %11073 = and i8 %11072, 1
  %11074 = xor i8 %11073, 1
  %11075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11074, i8* %11075, align 1
  %11076 = xor i64 16, %11059
  %11077 = trunc i64 %11076 to i32
  %11078 = xor i32 %11077, %11063
  %11079 = lshr i32 %11078, 4
  %11080 = trunc i32 %11079 to i8
  %11081 = and i8 %11080, 1
  %11082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11081, i8* %11082, align 1
  %11083 = icmp eq i32 %11063, 0
  %11084 = zext i1 %11083 to i8
  %11085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11084, i8* %11085, align 1
  %11086 = lshr i32 %11063, 31
  %11087 = trunc i32 %11086 to i8
  %11088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11087, i8* %11088, align 1
  %11089 = lshr i32 %11062, 31
  %11090 = xor i32 %11086, %11089
  %11091 = add i32 %11090, %11086
  %11092 = icmp eq i32 %11091, 2
  %11093 = zext i1 %11092 to i8
  %11094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11093, i8* %11094, align 1
  store %struct.Memory* %loadMem_404346, %struct.Memory** %MEMORY
  %loadMem_404349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11096 = getelementptr inbounds %struct.GPR, %struct.GPR* %11095, i32 0, i32 33
  %11097 = getelementptr inbounds %struct.Reg, %struct.Reg* %11096, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %11097 to i64*
  %11098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11099 = getelementptr inbounds %struct.GPR, %struct.GPR* %11098, i32 0, i32 1
  %11100 = getelementptr inbounds %struct.Reg, %struct.Reg* %11099, i32 0, i32 0
  %EAX.i65 = bitcast %union.anon* %11100 to i32*
  %11101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11102 = getelementptr inbounds %struct.GPR, %struct.GPR* %11101, i32 0, i32 15
  %11103 = getelementptr inbounds %struct.Reg, %struct.Reg* %11102, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %11103 to i64*
  %11104 = load i64, i64* %RBP.i66
  %11105 = sub i64 %11104, 696
  %11106 = load i32, i32* %EAX.i65
  %11107 = zext i32 %11106 to i64
  %11108 = load i64, i64* %PC.i64
  %11109 = add i64 %11108, 6
  store i64 %11109, i64* %PC.i64
  %11110 = inttoptr i64 %11105 to i32*
  store i32 %11106, i32* %11110
  store %struct.Memory* %loadMem_404349, %struct.Memory** %MEMORY
  %loadMem_40434f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11112 = getelementptr inbounds %struct.GPR, %struct.GPR* %11111, i32 0, i32 33
  %11113 = getelementptr inbounds %struct.Reg, %struct.Reg* %11112, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %11113 to i64*
  %11114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11115 = getelementptr inbounds %struct.GPR, %struct.GPR* %11114, i32 0, i32 5
  %11116 = getelementptr inbounds %struct.Reg, %struct.Reg* %11115, i32 0, i32 0
  %ECX.i62 = bitcast %union.anon* %11116 to i32*
  %11117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11118 = getelementptr inbounds %struct.GPR, %struct.GPR* %11117, i32 0, i32 1
  %11119 = getelementptr inbounds %struct.Reg, %struct.Reg* %11118, i32 0, i32 0
  %RAX.i63 = bitcast %union.anon* %11119 to i64*
  %11120 = load i32, i32* %ECX.i62
  %11121 = zext i32 %11120 to i64
  %11122 = load i64, i64* %PC.i61
  %11123 = add i64 %11122, 2
  store i64 %11123, i64* %PC.i61
  %11124 = and i64 %11121, 4294967295
  store i64 %11124, i64* %RAX.i63, align 8
  store %struct.Memory* %loadMem_40434f, %struct.Memory** %MEMORY
  %loadMem_404351 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11126 = getelementptr inbounds %struct.GPR, %struct.GPR* %11125, i32 0, i32 33
  %11127 = getelementptr inbounds %struct.Reg, %struct.Reg* %11126, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %11127 to i64*
  %11128 = load i64, i64* %PC.i60
  %11129 = add i64 %11128, 1
  store i64 %11129, i64* %PC.i60
  %11130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11132 = bitcast %union.anon* %11131 to i32*
  %11133 = load i32, i32* %11132, align 8
  %11134 = sext i32 %11133 to i64
  %11135 = lshr i64 %11134, 32
  store i64 %11135, i64* %11130, align 8
  store %struct.Memory* %loadMem_404351, %struct.Memory** %MEMORY
  %loadMem_404352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11137 = getelementptr inbounds %struct.GPR, %struct.GPR* %11136, i32 0, i32 33
  %11138 = getelementptr inbounds %struct.Reg, %struct.Reg* %11137, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %11138 to i64*
  %11139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11140 = getelementptr inbounds %struct.GPR, %struct.GPR* %11139, i32 0, i32 5
  %11141 = getelementptr inbounds %struct.Reg, %struct.Reg* %11140, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %11141 to i64*
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11143 = getelementptr inbounds %struct.GPR, %struct.GPR* %11142, i32 0, i32 15
  %11144 = getelementptr inbounds %struct.Reg, %struct.Reg* %11143, i32 0, i32 0
  %RBP.i59 = bitcast %union.anon* %11144 to i64*
  %11145 = load i64, i64* %RBP.i59
  %11146 = sub i64 %11145, 696
  %11147 = load i64, i64* %PC.i58
  %11148 = add i64 %11147, 6
  store i64 %11148, i64* %PC.i58
  %11149 = inttoptr i64 %11146 to i32*
  %11150 = load i32, i32* %11149
  %11151 = zext i32 %11150 to i64
  store i64 %11151, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_404352, %struct.Memory** %MEMORY
  %loadMem_404358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11153 = getelementptr inbounds %struct.GPR, %struct.GPR* %11152, i32 0, i32 33
  %11154 = getelementptr inbounds %struct.Reg, %struct.Reg* %11153, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %11154 to i64*
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11156 = getelementptr inbounds %struct.GPR, %struct.GPR* %11155, i32 0, i32 5
  %11157 = getelementptr inbounds %struct.Reg, %struct.Reg* %11156, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %11157 to i32*
  %11158 = load i32, i32* %ECX.i
  %11159 = zext i32 %11158 to i64
  %11160 = load i64, i64* %PC.i54
  %11161 = add i64 %11160, 2
  store i64 %11161, i64* %PC.i54
  %11162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11163 = bitcast %union.anon* %11162 to i32*
  %11164 = load i32, i32* %11163, align 8
  %11165 = zext i32 %11164 to i64
  %11166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11167 = bitcast %union.anon* %11166 to i32*
  %11168 = load i32, i32* %11167, align 8
  %11169 = zext i32 %11168 to i64
  %11170 = shl i64 %11159, 32
  %11171 = ashr exact i64 %11170, 32
  %11172 = shl i64 %11169, 32
  %11173 = or i64 %11172, %11165
  %11174 = sdiv i64 %11173, %11171
  %11175 = shl i64 %11174, 32
  %11176 = ashr exact i64 %11175, 32
  %11177 = icmp eq i64 %11174, %11176
  br i1 %11177, label %11182, label %11178

; <label>:11178:                                  ; preds = %block_.L_404317
  %11179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11180 = load i64, i64* %11179, align 8
  %11181 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11180, %struct.Memory* %loadMem_404358)
  br label %routine_idivl__ecx.exit

; <label>:11182:                                  ; preds = %block_.L_404317
  %11183 = srem i64 %11173, %11171
  %11184 = getelementptr inbounds %union.anon, %union.anon* %11162, i64 0, i32 0
  %11185 = and i64 %11174, 4294967295
  store i64 %11185, i64* %11184, align 8
  %11186 = getelementptr inbounds %union.anon, %union.anon* %11166, i64 0, i32 0
  %11187 = and i64 %11183, 4294967295
  store i64 %11187, i64* %11186, align 8
  %11188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11188, align 1
  %11189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11189, align 1
  %11190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11190, align 1
  %11191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11191, align 1
  %11192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11192, align 1
  %11193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11193, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %11178, %11182
  %11194 = phi %struct.Memory* [ %11181, %11178 ], [ %loadMem_404358, %11182 ]
  store %struct.Memory* %11194, %struct.Memory** %MEMORY
  %loadMem_40435a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11196 = getelementptr inbounds %struct.GPR, %struct.GPR* %11195, i32 0, i32 33
  %11197 = getelementptr inbounds %struct.Reg, %struct.Reg* %11196, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %11197 to i64*
  %11198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11199 = getelementptr inbounds %struct.GPR, %struct.GPR* %11198, i32 0, i32 1
  %11200 = getelementptr inbounds %struct.Reg, %struct.Reg* %11199, i32 0, i32 0
  %EAX.i52 = bitcast %union.anon* %11200 to i32*
  %11201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11202 = getelementptr inbounds %struct.GPR, %struct.GPR* %11201, i32 0, i32 15
  %11203 = getelementptr inbounds %struct.Reg, %struct.Reg* %11202, i32 0, i32 0
  %RBP.i53 = bitcast %union.anon* %11203 to i64*
  %11204 = load i64, i64* %RBP.i53
  %11205 = sub i64 %11204, 692
  %11206 = load i32, i32* %EAX.i52
  %11207 = zext i32 %11206 to i64
  %11208 = load i64, i64* %PC.i51
  %11209 = add i64 %11208, 6
  store i64 %11209, i64* %PC.i51
  %11210 = inttoptr i64 %11205 to i32*
  store i32 %11206, i32* %11210
  store %struct.Memory* %loadMem_40435a, %struct.Memory** %MEMORY
  br label %block_.L_404360

block_.L_404360:                                  ; preds = %routine_idivl__ecx.exit, %block_4042fe
  %loadMem_404360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11212 = getelementptr inbounds %struct.GPR, %struct.GPR* %11211, i32 0, i32 33
  %11213 = getelementptr inbounds %struct.Reg, %struct.Reg* %11212, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %11213 to i64*
  %11214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11215 = getelementptr inbounds %struct.GPR, %struct.GPR* %11214, i32 0, i32 1
  %11216 = getelementptr inbounds %struct.Reg, %struct.Reg* %11215, i32 0, i32 0
  %RAX.i49 = bitcast %union.anon* %11216 to i64*
  %11217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11218 = getelementptr inbounds %struct.GPR, %struct.GPR* %11217, i32 0, i32 15
  %11219 = getelementptr inbounds %struct.Reg, %struct.Reg* %11218, i32 0, i32 0
  %RBP.i50 = bitcast %union.anon* %11219 to i64*
  %11220 = load i64, i64* %RBP.i50
  %11221 = sub i64 %11220, 692
  %11222 = load i64, i64* %PC.i48
  %11223 = add i64 %11222, 6
  store i64 %11223, i64* %PC.i48
  %11224 = inttoptr i64 %11221 to i32*
  %11225 = load i32, i32* %11224
  %11226 = zext i32 %11225 to i64
  store i64 %11226, i64* %RAX.i49, align 8
  store %struct.Memory* %loadMem_404360, %struct.Memory** %MEMORY
  %loadMem_404366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11228 = getelementptr inbounds %struct.GPR, %struct.GPR* %11227, i32 0, i32 33
  %11229 = getelementptr inbounds %struct.Reg, %struct.Reg* %11228, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %11229 to i64*
  %11230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11231 = getelementptr inbounds %struct.GPR, %struct.GPR* %11230, i32 0, i32 1
  %11232 = getelementptr inbounds %struct.Reg, %struct.Reg* %11231, i32 0, i32 0
  %EAX.i46 = bitcast %union.anon* %11232 to i32*
  %11233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11234 = getelementptr inbounds %struct.GPR, %struct.GPR* %11233, i32 0, i32 15
  %11235 = getelementptr inbounds %struct.Reg, %struct.Reg* %11234, i32 0, i32 0
  %RBP.i47 = bitcast %union.anon* %11235 to i64*
  %11236 = load i64, i64* %RBP.i47
  %11237 = sub i64 %11236, 680
  %11238 = load i32, i32* %EAX.i46
  %11239 = zext i32 %11238 to i64
  %11240 = load i64, i64* %PC.i45
  %11241 = add i64 %11240, 6
  store i64 %11241, i64* %PC.i45
  %11242 = inttoptr i64 %11237 to i32*
  store i32 %11238, i32* %11242
  store %struct.Memory* %loadMem_404366, %struct.Memory** %MEMORY
  br label %block_.L_40436c

block_.L_40436c:                                  ; preds = %block_.L_404360, %block_40428c
  %loadMem_40436c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11244 = getelementptr inbounds %struct.GPR, %struct.GPR* %11243, i32 0, i32 33
  %11245 = getelementptr inbounds %struct.Reg, %struct.Reg* %11244, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %11245 to i64*
  %11246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11247 = getelementptr inbounds %struct.GPR, %struct.GPR* %11246, i32 0, i32 1
  %11248 = getelementptr inbounds %struct.Reg, %struct.Reg* %11247, i32 0, i32 0
  %RAX.i43 = bitcast %union.anon* %11248 to i64*
  %11249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11250 = getelementptr inbounds %struct.GPR, %struct.GPR* %11249, i32 0, i32 15
  %11251 = getelementptr inbounds %struct.Reg, %struct.Reg* %11250, i32 0, i32 0
  %RBP.i44 = bitcast %union.anon* %11251 to i64*
  %11252 = load i64, i64* %RBP.i44
  %11253 = sub i64 %11252, 680
  %11254 = load i64, i64* %PC.i42
  %11255 = add i64 %11254, 6
  store i64 %11255, i64* %PC.i42
  %11256 = inttoptr i64 %11253 to i32*
  %11257 = load i32, i32* %11256
  %11258 = zext i32 %11257 to i64
  store i64 %11258, i64* %RAX.i43, align 8
  store %struct.Memory* %loadMem_40436c, %struct.Memory** %MEMORY
  %loadMem_404372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11260 = getelementptr inbounds %struct.GPR, %struct.GPR* %11259, i32 0, i32 33
  %11261 = getelementptr inbounds %struct.Reg, %struct.Reg* %11260, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %11261 to i64*
  %11262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11263 = getelementptr inbounds %struct.GPR, %struct.GPR* %11262, i32 0, i32 1
  %11264 = getelementptr inbounds %struct.Reg, %struct.Reg* %11263, i32 0, i32 0
  %AX.i = bitcast %union.anon* %11264 to i16*
  %11265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11266 = getelementptr inbounds %struct.GPR, %struct.GPR* %11265, i32 0, i32 5
  %11267 = getelementptr inbounds %struct.Reg, %struct.Reg* %11266, i32 0, i32 0
  %CX.i41 = bitcast %union.anon* %11267 to i16*
  %11268 = load i16, i16* %AX.i
  %11269 = zext i16 %11268 to i64
  %11270 = load i64, i64* %PC.i40
  %11271 = add i64 %11270, 3
  store i64 %11271, i64* %PC.i40
  store i16 %11268, i16* %CX.i41, align 2
  store %struct.Memory* %loadMem_404372, %struct.Memory** %MEMORY
  %loadMem_404375 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11273 = getelementptr inbounds %struct.GPR, %struct.GPR* %11272, i32 0, i32 33
  %11274 = getelementptr inbounds %struct.Reg, %struct.Reg* %11273, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %11274 to i64*
  %11275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11276 = getelementptr inbounds %struct.GPR, %struct.GPR* %11275, i32 0, i32 7
  %11277 = getelementptr inbounds %struct.Reg, %struct.Reg* %11276, i32 0, i32 0
  %RDX.i39 = bitcast %union.anon* %11277 to i64*
  %11278 = load i64, i64* %PC.i38
  %11279 = add i64 %11278, 8
  store i64 %11279, i64* %PC.i38
  %11280 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11280, i64* %RDX.i39, align 8
  store %struct.Memory* %loadMem_404375, %struct.Memory** %MEMORY
  %loadMem_40437d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11282 = getelementptr inbounds %struct.GPR, %struct.GPR* %11281, i32 0, i32 33
  %11283 = getelementptr inbounds %struct.Reg, %struct.Reg* %11282, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %11283 to i64*
  %11284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11285 = getelementptr inbounds %struct.GPR, %struct.GPR* %11284, i32 0, i32 7
  %11286 = getelementptr inbounds %struct.Reg, %struct.Reg* %11285, i32 0, i32 0
  %RDX.i37 = bitcast %union.anon* %11286 to i64*
  %11287 = load i64, i64* %RDX.i37
  %11288 = load i64, i64* %PC.i36
  %11289 = add i64 %11288, 7
  store i64 %11289, i64* %PC.i36
  %11290 = add i64 4792, %11287
  store i64 %11290, i64* %RDX.i37, align 8
  %11291 = icmp ult i64 %11290, %11287
  %11292 = icmp ult i64 %11290, 4792
  %11293 = or i1 %11291, %11292
  %11294 = zext i1 %11293 to i8
  %11295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11294, i8* %11295, align 1
  %11296 = trunc i64 %11290 to i32
  %11297 = and i32 %11296, 255
  %11298 = call i32 @llvm.ctpop.i32(i32 %11297)
  %11299 = trunc i32 %11298 to i8
  %11300 = and i8 %11299, 1
  %11301 = xor i8 %11300, 1
  %11302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11301, i8* %11302, align 1
  %11303 = xor i64 4792, %11287
  %11304 = xor i64 %11303, %11290
  %11305 = lshr i64 %11304, 4
  %11306 = trunc i64 %11305 to i8
  %11307 = and i8 %11306, 1
  %11308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11307, i8* %11308, align 1
  %11309 = icmp eq i64 %11290, 0
  %11310 = zext i1 %11309 to i8
  %11311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11310, i8* %11311, align 1
  %11312 = lshr i64 %11290, 63
  %11313 = trunc i64 %11312 to i8
  %11314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11313, i8* %11314, align 1
  %11315 = lshr i64 %11287, 63
  %11316 = xor i64 %11312, %11315
  %11317 = add i64 %11316, %11312
  %11318 = icmp eq i64 %11317, 2
  %11319 = zext i1 %11318 to i8
  %11320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11319, i8* %11320, align 1
  store %struct.Memory* %loadMem_40437d, %struct.Memory** %MEMORY
  %loadMem_404384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11322 = getelementptr inbounds %struct.GPR, %struct.GPR* %11321, i32 0, i32 33
  %11323 = getelementptr inbounds %struct.Reg, %struct.Reg* %11322, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %11323 to i64*
  %11324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11325 = getelementptr inbounds %struct.GPR, %struct.GPR* %11324, i32 0, i32 7
  %11326 = getelementptr inbounds %struct.Reg, %struct.Reg* %11325, i32 0, i32 0
  %RDX.i35 = bitcast %union.anon* %11326 to i64*
  %11327 = load i64, i64* %RDX.i35
  %11328 = load i64, i64* %PC.i34
  %11329 = add i64 %11328, 7
  store i64 %11329, i64* %PC.i34
  %11330 = add i64 1536, %11327
  store i64 %11330, i64* %RDX.i35, align 8
  %11331 = icmp ult i64 %11330, %11327
  %11332 = icmp ult i64 %11330, 1536
  %11333 = or i1 %11331, %11332
  %11334 = zext i1 %11333 to i8
  %11335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11334, i8* %11335, align 1
  %11336 = trunc i64 %11330 to i32
  %11337 = and i32 %11336, 255
  %11338 = call i32 @llvm.ctpop.i32(i32 %11337)
  %11339 = trunc i32 %11338 to i8
  %11340 = and i8 %11339, 1
  %11341 = xor i8 %11340, 1
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11341, i8* %11342, align 1
  %11343 = xor i64 1536, %11327
  %11344 = xor i64 %11343, %11330
  %11345 = lshr i64 %11344, 4
  %11346 = trunc i64 %11345 to i8
  %11347 = and i8 %11346, 1
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11347, i8* %11348, align 1
  %11349 = icmp eq i64 %11330, 0
  %11350 = zext i1 %11349 to i8
  %11351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11350, i8* %11351, align 1
  %11352 = lshr i64 %11330, 63
  %11353 = trunc i64 %11352 to i8
  %11354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11353, i8* %11354, align 1
  %11355 = lshr i64 %11327, 63
  %11356 = xor i64 %11352, %11355
  %11357 = add i64 %11356, %11352
  %11358 = icmp eq i64 %11357, 2
  %11359 = zext i1 %11358 to i8
  %11360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11359, i8* %11360, align 1
  store %struct.Memory* %loadMem_404384, %struct.Memory** %MEMORY
  %loadMem_40438b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11362 = getelementptr inbounds %struct.GPR, %struct.GPR* %11361, i32 0, i32 33
  %11363 = getelementptr inbounds %struct.Reg, %struct.Reg* %11362, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %11363 to i64*
  %11364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11365 = getelementptr inbounds %struct.GPR, %struct.GPR* %11364, i32 0, i32 9
  %11366 = getelementptr inbounds %struct.Reg, %struct.Reg* %11365, i32 0, i32 0
  %RSI.i32 = bitcast %union.anon* %11366 to i64*
  %11367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11368 = getelementptr inbounds %struct.GPR, %struct.GPR* %11367, i32 0, i32 15
  %11369 = getelementptr inbounds %struct.Reg, %struct.Reg* %11368, i32 0, i32 0
  %RBP.i33 = bitcast %union.anon* %11369 to i64*
  %11370 = load i64, i64* %RBP.i33
  %11371 = sub i64 %11370, 152
  %11372 = load i64, i64* %PC.i31
  %11373 = add i64 %11372, 7
  store i64 %11373, i64* %PC.i31
  %11374 = inttoptr i64 %11371 to i32*
  %11375 = load i32, i32* %11374
  %11376 = sext i32 %11375 to i64
  store i64 %11376, i64* %RSI.i32, align 8
  store %struct.Memory* %loadMem_40438b, %struct.Memory** %MEMORY
  %loadMem_404392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11378 = getelementptr inbounds %struct.GPR, %struct.GPR* %11377, i32 0, i32 33
  %11379 = getelementptr inbounds %struct.Reg, %struct.Reg* %11378, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %11379 to i64*
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11381 = getelementptr inbounds %struct.GPR, %struct.GPR* %11380, i32 0, i32 9
  %11382 = getelementptr inbounds %struct.Reg, %struct.Reg* %11381, i32 0, i32 0
  %RSI.i30 = bitcast %union.anon* %11382 to i64*
  %11383 = load i64, i64* %RSI.i30
  %11384 = load i64, i64* %PC.i29
  %11385 = add i64 %11384, 4
  store i64 %11385, i64* %PC.i29
  %11386 = shl i64 %11383, 4
  %11387 = icmp slt i64 %11386, 0
  %11388 = shl i64 %11386, 1
  store i64 %11388, i64* %RSI.i30, align 8
  %11389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11390 = zext i1 %11387 to i8
  store i8 %11390, i8* %11389, align 1
  %11391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11392 = trunc i64 %11388 to i32
  %11393 = and i32 %11392, 254
  %11394 = call i32 @llvm.ctpop.i32(i32 %11393)
  %11395 = trunc i32 %11394 to i8
  %11396 = and i8 %11395, 1
  %11397 = xor i8 %11396, 1
  store i8 %11397, i8* %11391, align 1
  %11398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11398, align 1
  %11399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11400 = icmp eq i64 %11388, 0
  %11401 = zext i1 %11400 to i8
  store i8 %11401, i8* %11399, align 1
  %11402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11403 = lshr i64 %11388, 63
  %11404 = trunc i64 %11403 to i8
  store i8 %11404, i8* %11402, align 1
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11405, align 1
  store %struct.Memory* %loadMem_404392, %struct.Memory** %MEMORY
  %loadMem_404396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11407 = getelementptr inbounds %struct.GPR, %struct.GPR* %11406, i32 0, i32 33
  %11408 = getelementptr inbounds %struct.Reg, %struct.Reg* %11407, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %11408 to i64*
  %11409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11410 = getelementptr inbounds %struct.GPR, %struct.GPR* %11409, i32 0, i32 7
  %11411 = getelementptr inbounds %struct.Reg, %struct.Reg* %11410, i32 0, i32 0
  %RDX.i27 = bitcast %union.anon* %11411 to i64*
  %11412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11413 = getelementptr inbounds %struct.GPR, %struct.GPR* %11412, i32 0, i32 9
  %11414 = getelementptr inbounds %struct.Reg, %struct.Reg* %11413, i32 0, i32 0
  %RSI.i28 = bitcast %union.anon* %11414 to i64*
  %11415 = load i64, i64* %RDX.i27
  %11416 = load i64, i64* %RSI.i28
  %11417 = load i64, i64* %PC.i26
  %11418 = add i64 %11417, 3
  store i64 %11418, i64* %PC.i26
  %11419 = add i64 %11416, %11415
  store i64 %11419, i64* %RDX.i27, align 8
  %11420 = icmp ult i64 %11419, %11415
  %11421 = icmp ult i64 %11419, %11416
  %11422 = or i1 %11420, %11421
  %11423 = zext i1 %11422 to i8
  %11424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11423, i8* %11424, align 1
  %11425 = trunc i64 %11419 to i32
  %11426 = and i32 %11425, 255
  %11427 = call i32 @llvm.ctpop.i32(i32 %11426)
  %11428 = trunc i32 %11427 to i8
  %11429 = and i8 %11428, 1
  %11430 = xor i8 %11429, 1
  %11431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11430, i8* %11431, align 1
  %11432 = xor i64 %11416, %11415
  %11433 = xor i64 %11432, %11419
  %11434 = lshr i64 %11433, 4
  %11435 = trunc i64 %11434 to i8
  %11436 = and i8 %11435, 1
  %11437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11436, i8* %11437, align 1
  %11438 = icmp eq i64 %11419, 0
  %11439 = zext i1 %11438 to i8
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11439, i8* %11440, align 1
  %11441 = lshr i64 %11419, 63
  %11442 = trunc i64 %11441 to i8
  %11443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11442, i8* %11443, align 1
  %11444 = lshr i64 %11415, 63
  %11445 = lshr i64 %11416, 63
  %11446 = xor i64 %11441, %11444
  %11447 = xor i64 %11441, %11445
  %11448 = add i64 %11446, %11447
  %11449 = icmp eq i64 %11448, 2
  %11450 = zext i1 %11449 to i8
  %11451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11450, i8* %11451, align 1
  store %struct.Memory* %loadMem_404396, %struct.Memory** %MEMORY
  %loadMem_404399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11453 = getelementptr inbounds %struct.GPR, %struct.GPR* %11452, i32 0, i32 33
  %11454 = getelementptr inbounds %struct.Reg, %struct.Reg* %11453, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %11454 to i64*
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11456 = getelementptr inbounds %struct.GPR, %struct.GPR* %11455, i32 0, i32 9
  %11457 = getelementptr inbounds %struct.Reg, %struct.Reg* %11456, i32 0, i32 0
  %RSI.i24 = bitcast %union.anon* %11457 to i64*
  %11458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11459 = getelementptr inbounds %struct.GPR, %struct.GPR* %11458, i32 0, i32 15
  %11460 = getelementptr inbounds %struct.Reg, %struct.Reg* %11459, i32 0, i32 0
  %RBP.i25 = bitcast %union.anon* %11460 to i64*
  %11461 = load i64, i64* %RBP.i25
  %11462 = sub i64 %11461, 148
  %11463 = load i64, i64* %PC.i23
  %11464 = add i64 %11463, 7
  store i64 %11464, i64* %PC.i23
  %11465 = inttoptr i64 %11462 to i32*
  %11466 = load i32, i32* %11465
  %11467 = sext i32 %11466 to i64
  store i64 %11467, i64* %RSI.i24, align 8
  store %struct.Memory* %loadMem_404399, %struct.Memory** %MEMORY
  %loadMem_4043a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11469 = getelementptr inbounds %struct.GPR, %struct.GPR* %11468, i32 0, i32 33
  %11470 = getelementptr inbounds %struct.Reg, %struct.Reg* %11469, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %11470 to i64*
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11472 = getelementptr inbounds %struct.GPR, %struct.GPR* %11471, i32 0, i32 5
  %11473 = getelementptr inbounds %struct.Reg, %struct.Reg* %11472, i32 0, i32 0
  %CX.i = bitcast %union.anon* %11473 to i16*
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11475 = getelementptr inbounds %struct.GPR, %struct.GPR* %11474, i32 0, i32 7
  %11476 = getelementptr inbounds %struct.Reg, %struct.Reg* %11475, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %11476 to i64*
  %11477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11478 = getelementptr inbounds %struct.GPR, %struct.GPR* %11477, i32 0, i32 9
  %11479 = getelementptr inbounds %struct.Reg, %struct.Reg* %11478, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %11479 to i64*
  %11480 = load i64, i64* %RDX.i
  %11481 = load i64, i64* %RSI.i
  %11482 = mul i64 %11481, 2
  %11483 = add i64 %11482, %11480
  %11484 = load i16, i16* %CX.i
  %11485 = zext i16 %11484 to i64
  %11486 = load i64, i64* %PC.i22
  %11487 = add i64 %11486, 4
  store i64 %11487, i64* %PC.i22
  %11488 = inttoptr i64 %11483 to i16*
  store i16 %11484, i16* %11488
  store %struct.Memory* %loadMem_4043a0, %struct.Memory** %MEMORY
  %loadMem_4043a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11490 = getelementptr inbounds %struct.GPR, %struct.GPR* %11489, i32 0, i32 33
  %11491 = getelementptr inbounds %struct.Reg, %struct.Reg* %11490, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %11491 to i64*
  %11492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11493 = getelementptr inbounds %struct.GPR, %struct.GPR* %11492, i32 0, i32 1
  %11494 = getelementptr inbounds %struct.Reg, %struct.Reg* %11493, i32 0, i32 0
  %RAX.i20 = bitcast %union.anon* %11494 to i64*
  %11495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11496 = getelementptr inbounds %struct.GPR, %struct.GPR* %11495, i32 0, i32 15
  %11497 = getelementptr inbounds %struct.Reg, %struct.Reg* %11496, i32 0, i32 0
  %RBP.i21 = bitcast %union.anon* %11497 to i64*
  %11498 = load i64, i64* %RBP.i21
  %11499 = sub i64 %11498, 148
  %11500 = load i64, i64* %PC.i19
  %11501 = add i64 %11500, 6
  store i64 %11501, i64* %PC.i19
  %11502 = inttoptr i64 %11499 to i32*
  %11503 = load i32, i32* %11502
  %11504 = zext i32 %11503 to i64
  store i64 %11504, i64* %RAX.i20, align 8
  store %struct.Memory* %loadMem_4043a4, %struct.Memory** %MEMORY
  %loadMem_4043aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11506 = getelementptr inbounds %struct.GPR, %struct.GPR* %11505, i32 0, i32 33
  %11507 = getelementptr inbounds %struct.Reg, %struct.Reg* %11506, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %11507 to i64*
  %11508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11509 = getelementptr inbounds %struct.GPR, %struct.GPR* %11508, i32 0, i32 1
  %11510 = getelementptr inbounds %struct.Reg, %struct.Reg* %11509, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %11510 to i64*
  %11511 = load i64, i64* %RAX.i18
  %11512 = load i64, i64* %PC.i17
  %11513 = add i64 %11512, 3
  store i64 %11513, i64* %PC.i17
  %11514 = trunc i64 %11511 to i32
  %11515 = add i32 1, %11514
  %11516 = zext i32 %11515 to i64
  store i64 %11516, i64* %RAX.i18, align 8
  %11517 = icmp ult i32 %11515, %11514
  %11518 = icmp ult i32 %11515, 1
  %11519 = or i1 %11517, %11518
  %11520 = zext i1 %11519 to i8
  %11521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11520, i8* %11521, align 1
  %11522 = and i32 %11515, 255
  %11523 = call i32 @llvm.ctpop.i32(i32 %11522)
  %11524 = trunc i32 %11523 to i8
  %11525 = and i8 %11524, 1
  %11526 = xor i8 %11525, 1
  %11527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11526, i8* %11527, align 1
  %11528 = xor i64 1, %11511
  %11529 = trunc i64 %11528 to i32
  %11530 = xor i32 %11529, %11515
  %11531 = lshr i32 %11530, 4
  %11532 = trunc i32 %11531 to i8
  %11533 = and i8 %11532, 1
  %11534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11533, i8* %11534, align 1
  %11535 = icmp eq i32 %11515, 0
  %11536 = zext i1 %11535 to i8
  %11537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11536, i8* %11537, align 1
  %11538 = lshr i32 %11515, 31
  %11539 = trunc i32 %11538 to i8
  %11540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11539, i8* %11540, align 1
  %11541 = lshr i32 %11514, 31
  %11542 = xor i32 %11538, %11541
  %11543 = add i32 %11542, %11538
  %11544 = icmp eq i32 %11543, 2
  %11545 = zext i1 %11544 to i8
  %11546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11545, i8* %11546, align 1
  store %struct.Memory* %loadMem_4043aa, %struct.Memory** %MEMORY
  %loadMem_4043ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11548 = getelementptr inbounds %struct.GPR, %struct.GPR* %11547, i32 0, i32 33
  %11549 = getelementptr inbounds %struct.Reg, %struct.Reg* %11548, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %11549 to i64*
  %11550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11551 = getelementptr inbounds %struct.GPR, %struct.GPR* %11550, i32 0, i32 1
  %11552 = getelementptr inbounds %struct.Reg, %struct.Reg* %11551, i32 0, i32 0
  %EAX.i15 = bitcast %union.anon* %11552 to i32*
  %11553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11554 = getelementptr inbounds %struct.GPR, %struct.GPR* %11553, i32 0, i32 15
  %11555 = getelementptr inbounds %struct.Reg, %struct.Reg* %11554, i32 0, i32 0
  %RBP.i16 = bitcast %union.anon* %11555 to i64*
  %11556 = load i64, i64* %RBP.i16
  %11557 = sub i64 %11556, 148
  %11558 = load i32, i32* %EAX.i15
  %11559 = zext i32 %11558 to i64
  %11560 = load i64, i64* %PC.i14
  %11561 = add i64 %11560, 6
  store i64 %11561, i64* %PC.i14
  %11562 = inttoptr i64 %11557 to i32*
  store i32 %11558, i32* %11562
  store %struct.Memory* %loadMem_4043ad, %struct.Memory** %MEMORY
  %loadMem_4043b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11564 = getelementptr inbounds %struct.GPR, %struct.GPR* %11563, i32 0, i32 33
  %11565 = getelementptr inbounds %struct.Reg, %struct.Reg* %11564, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %11565 to i64*
  %11566 = load i64, i64* %PC.i13
  %11567 = add i64 %11566, -523
  %11568 = load i64, i64* %PC.i13
  %11569 = add i64 %11568, 5
  store i64 %11569, i64* %PC.i13
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11567, i64* %11570, align 8
  store %struct.Memory* %loadMem_4043b3, %struct.Memory** %MEMORY
  br label %block_.L_4041a8

block_.L_4043b8:                                  ; preds = %block_.L_4041a8
  %loadMem_4043b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11572 = getelementptr inbounds %struct.GPR, %struct.GPR* %11571, i32 0, i32 33
  %11573 = getelementptr inbounds %struct.Reg, %struct.Reg* %11572, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %11573 to i64*
  %11574 = load i64, i64* %PC.i12
  %11575 = add i64 %11574, 5
  %11576 = load i64, i64* %PC.i12
  %11577 = add i64 %11576, 5
  store i64 %11577, i64* %PC.i12
  %11578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11575, i64* %11578, align 8
  store %struct.Memory* %loadMem_4043b8, %struct.Memory** %MEMORY
  br label %block_.L_4043bd

block_.L_4043bd:                                  ; preds = %block_.L_4043b8
  %loadMem_4043bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11580 = getelementptr inbounds %struct.GPR, %struct.GPR* %11579, i32 0, i32 33
  %11581 = getelementptr inbounds %struct.Reg, %struct.Reg* %11580, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %11581 to i64*
  %11582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11583 = getelementptr inbounds %struct.GPR, %struct.GPR* %11582, i32 0, i32 1
  %11584 = getelementptr inbounds %struct.Reg, %struct.Reg* %11583, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %11584 to i64*
  %11585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11586 = getelementptr inbounds %struct.GPR, %struct.GPR* %11585, i32 0, i32 15
  %11587 = getelementptr inbounds %struct.Reg, %struct.Reg* %11586, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %11587 to i64*
  %11588 = load i64, i64* %RBP.i11
  %11589 = sub i64 %11588, 152
  %11590 = load i64, i64* %PC.i9
  %11591 = add i64 %11590, 6
  store i64 %11591, i64* %PC.i9
  %11592 = inttoptr i64 %11589 to i32*
  %11593 = load i32, i32* %11592
  %11594 = zext i32 %11593 to i64
  store i64 %11594, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_4043bd, %struct.Memory** %MEMORY
  %loadMem_4043c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11596 = getelementptr inbounds %struct.GPR, %struct.GPR* %11595, i32 0, i32 33
  %11597 = getelementptr inbounds %struct.Reg, %struct.Reg* %11596, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %11597 to i64*
  %11598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11599 = getelementptr inbounds %struct.GPR, %struct.GPR* %11598, i32 0, i32 1
  %11600 = getelementptr inbounds %struct.Reg, %struct.Reg* %11599, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %11600 to i64*
  %11601 = load i64, i64* %RAX.i
  %11602 = load i64, i64* %PC.i8
  %11603 = add i64 %11602, 3
  store i64 %11603, i64* %PC.i8
  %11604 = trunc i64 %11601 to i32
  %11605 = add i32 1, %11604
  %11606 = zext i32 %11605 to i64
  store i64 %11606, i64* %RAX.i, align 8
  %11607 = icmp ult i32 %11605, %11604
  %11608 = icmp ult i32 %11605, 1
  %11609 = or i1 %11607, %11608
  %11610 = zext i1 %11609 to i8
  %11611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11610, i8* %11611, align 1
  %11612 = and i32 %11605, 255
  %11613 = call i32 @llvm.ctpop.i32(i32 %11612)
  %11614 = trunc i32 %11613 to i8
  %11615 = and i8 %11614, 1
  %11616 = xor i8 %11615, 1
  %11617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11616, i8* %11617, align 1
  %11618 = xor i64 1, %11601
  %11619 = trunc i64 %11618 to i32
  %11620 = xor i32 %11619, %11605
  %11621 = lshr i32 %11620, 4
  %11622 = trunc i32 %11621 to i8
  %11623 = and i8 %11622, 1
  %11624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11623, i8* %11624, align 1
  %11625 = icmp eq i32 %11605, 0
  %11626 = zext i1 %11625 to i8
  %11627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11626, i8* %11627, align 1
  %11628 = lshr i32 %11605, 31
  %11629 = trunc i32 %11628 to i8
  %11630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11629, i8* %11630, align 1
  %11631 = lshr i32 %11604, 31
  %11632 = xor i32 %11628, %11631
  %11633 = add i32 %11632, %11628
  %11634 = icmp eq i32 %11633, 2
  %11635 = zext i1 %11634 to i8
  %11636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11635, i8* %11636, align 1
  store %struct.Memory* %loadMem_4043c3, %struct.Memory** %MEMORY
  %loadMem_4043c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11638 = getelementptr inbounds %struct.GPR, %struct.GPR* %11637, i32 0, i32 33
  %11639 = getelementptr inbounds %struct.Reg, %struct.Reg* %11638, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %11639 to i64*
  %11640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11641 = getelementptr inbounds %struct.GPR, %struct.GPR* %11640, i32 0, i32 1
  %11642 = getelementptr inbounds %struct.Reg, %struct.Reg* %11641, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %11642 to i32*
  %11643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11644 = getelementptr inbounds %struct.GPR, %struct.GPR* %11643, i32 0, i32 15
  %11645 = getelementptr inbounds %struct.Reg, %struct.Reg* %11644, i32 0, i32 0
  %RBP.i7 = bitcast %union.anon* %11645 to i64*
  %11646 = load i64, i64* %RBP.i7
  %11647 = sub i64 %11646, 152
  %11648 = load i32, i32* %EAX.i
  %11649 = zext i32 %11648 to i64
  %11650 = load i64, i64* %PC.i6
  %11651 = add i64 %11650, 6
  store i64 %11651, i64* %PC.i6
  %11652 = inttoptr i64 %11647 to i32*
  store i32 %11648, i32* %11652
  store %struct.Memory* %loadMem_4043c6, %struct.Memory** %MEMORY
  %loadMem_4043cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11654 = getelementptr inbounds %struct.GPR, %struct.GPR* %11653, i32 0, i32 33
  %11655 = getelementptr inbounds %struct.Reg, %struct.Reg* %11654, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %11655 to i64*
  %11656 = load i64, i64* %PC.i5
  %11657 = add i64 %11656, -571
  %11658 = load i64, i64* %PC.i5
  %11659 = add i64 %11658, 5
  store i64 %11659, i64* %PC.i5
  %11660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11657, i64* %11660, align 8
  store %struct.Memory* %loadMem_4043cc, %struct.Memory** %MEMORY
  br label %block_.L_404191

block_.L_4043d1:                                  ; preds = %block_.L_404191, %block_.L_403f59
  %loadMem_4043d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11662 = getelementptr inbounds %struct.GPR, %struct.GPR* %11661, i32 0, i32 33
  %11663 = getelementptr inbounds %struct.Reg, %struct.Reg* %11662, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %11663 to i64*
  %11664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11665 = getelementptr inbounds %struct.GPR, %struct.GPR* %11664, i32 0, i32 13
  %11666 = getelementptr inbounds %struct.Reg, %struct.Reg* %11665, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %11666 to i64*
  %11667 = load i64, i64* %RSP.i
  %11668 = load i64, i64* %PC.i4
  %11669 = add i64 %11668, 7
  store i64 %11669, i64* %PC.i4
  %11670 = add i64 704, %11667
  store i64 %11670, i64* %RSP.i, align 8
  %11671 = icmp ult i64 %11670, %11667
  %11672 = icmp ult i64 %11670, 704
  %11673 = or i1 %11671, %11672
  %11674 = zext i1 %11673 to i8
  %11675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11674, i8* %11675, align 1
  %11676 = trunc i64 %11670 to i32
  %11677 = and i32 %11676, 255
  %11678 = call i32 @llvm.ctpop.i32(i32 %11677)
  %11679 = trunc i32 %11678 to i8
  %11680 = and i8 %11679, 1
  %11681 = xor i8 %11680, 1
  %11682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11681, i8* %11682, align 1
  %11683 = xor i64 704, %11667
  %11684 = xor i64 %11683, %11670
  %11685 = lshr i64 %11684, 4
  %11686 = trunc i64 %11685 to i8
  %11687 = and i8 %11686, 1
  %11688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11687, i8* %11688, align 1
  %11689 = icmp eq i64 %11670, 0
  %11690 = zext i1 %11689 to i8
  %11691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11690, i8* %11691, align 1
  %11692 = lshr i64 %11670, 63
  %11693 = trunc i64 %11692 to i8
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11693, i8* %11694, align 1
  %11695 = lshr i64 %11667, 63
  %11696 = xor i64 %11692, %11695
  %11697 = add i64 %11696, %11692
  %11698 = icmp eq i64 %11697, 2
  %11699 = zext i1 %11698 to i8
  %11700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11699, i8* %11700, align 1
  store %struct.Memory* %loadMem_4043d1, %struct.Memory** %MEMORY
  %loadMem_4043d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11702 = getelementptr inbounds %struct.GPR, %struct.GPR* %11701, i32 0, i32 33
  %11703 = getelementptr inbounds %struct.Reg, %struct.Reg* %11702, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %11703 to i64*
  %11704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11705 = getelementptr inbounds %struct.GPR, %struct.GPR* %11704, i32 0, i32 15
  %11706 = getelementptr inbounds %struct.Reg, %struct.Reg* %11705, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %11706 to i64*
  %11707 = load i64, i64* %PC.i2
  %11708 = add i64 %11707, 1
  store i64 %11708, i64* %PC.i2
  %11709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11710 = load i64, i64* %11709, align 8
  %11711 = add i64 %11710, 8
  %11712 = inttoptr i64 %11710 to i64*
  %11713 = load i64, i64* %11712
  store i64 %11713, i64* %RBP.i3, align 8
  store i64 %11711, i64* %11709, align 8
  store %struct.Memory* %loadMem_4043d8, %struct.Memory** %MEMORY
  %loadMem_4043d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11715 = getelementptr inbounds %struct.GPR, %struct.GPR* %11714, i32 0, i32 33
  %11716 = getelementptr inbounds %struct.Reg, %struct.Reg* %11715, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %11716 to i64*
  %11717 = load i64, i64* %PC.i1
  %11718 = add i64 %11717, 1
  store i64 %11718, i64* %PC.i1
  %11719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11721 = load i64, i64* %11720, align 8
  %11722 = inttoptr i64 %11721 to i64*
  %11723 = load i64, i64* %11722
  store i64 %11723, i64* %11719, align 8
  %11724 = add i64 %11721, 8
  store i64 %11724, i64* %11720, align 8
  store %struct.Memory* %loadMem_4043d9, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4043d9
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x2c0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 704
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 704
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 704, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x11__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 17
  %16 = icmp ult i32 %14, 17
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 17
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_403a1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967295, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x270__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x94__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___r8___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R8, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.getNeighbour(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4039c3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__esi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967295, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xd8__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xd8__r8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = add i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_403a77(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x274__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x258__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x278__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x270__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x27c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 636
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403bb3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403aa8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x11868__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71784
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x280__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 640
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403ab5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x280__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 640
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x280__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x278__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 632
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_403b69(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x94__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %13, 31
  %29 = xor i32 %25, %28
  %30 = add i32 %29, %28
  %31 = icmp eq i32 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403b36(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x11868__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 71784
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x94__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rax_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x284__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 644
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403b43(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x284__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 644
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x284__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 644
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl_MINUS0x278__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 632
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = and i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %22, align 1
  %23 = and i32 %20, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i32 %20, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %20, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403ad5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x270__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 624
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403b9a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x26c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 620
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x288__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403ba7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x288__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x288__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_403c83(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x274__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 628
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403c10(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xb8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x94__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 148
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rax__rcx_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x278__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 632
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403c6a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xb8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x14__rdi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x10__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rax_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403c6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403bcb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403cbf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x20___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 32, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x10___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 16, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 16
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 16, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 652
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 652
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_403cf8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403cf8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 8, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 8
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 8, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x290__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x290__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403d31(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_403d31(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x294__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 660
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x294__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 660
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_403d5c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11be8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72680
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_403e2e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403db3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x94__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x90__rbp__rax_8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, -144
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403e15(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x8c__rbp__rax_8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, -140
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403e1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403d66(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 152
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 152
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_403f32(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_403f19(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x90__rbp__rax_8____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, -144
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx___dx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %CX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %DX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x12b8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 4792, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4792
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4792, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x98__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x94__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx____rax__rsi_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x98__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8c__rbp__rax_8____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, -140
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x200___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 512, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 512
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 512, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x400___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 1024, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1024
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1024, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403e4f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403f1e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403e38(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_403f59(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x27c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 636
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_403f5e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4043d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 156
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 160
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x9__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 9
  %16 = icmp ult i32 %14, 9
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 9
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_404117(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_404002(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x7___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 7, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 7
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 7, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x94__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 148
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x7___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 7, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 7
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 7, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x94__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 148
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RAX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x9c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 156
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40405e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x25c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x260__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xb8__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x8___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 8, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 8
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 8, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R9, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x14__r9____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x10__r9____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x94__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 148
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %13, %20
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %13, %20
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %21, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %20, %13
  %33 = xor i32 %32, %21
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %21, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %21, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %13, 31
  %45 = lshr i32 %20, 31
  %46 = xor i32 %45, %44
  %47 = xor i32 %41, %44
  %48 = add i32 %47, %46
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r10d___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x94__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 148
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rsi__rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__edi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RDX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xa0__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 160
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_403f7c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x5__MINUS0x9c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 5
  %20 = trunc i64 %19 to i32
  %21 = and i64 %19, 4294967295
  store i64 %21, i64* %RAX, align 8
  %22 = shl i64 %19, 32
  %23 = ashr exact i64 %22, 32
  %24 = icmp ne i64 %23, %19
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x5__MINUS0xa0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 5
  %20 = trunc i64 %19 to i32
  %21 = and i64 %19, 4294967295
  store i64 %21, i64* %RAX, align 8
  %22 = shl i64 %19, 32
  %23 = ashr exact i64 %22, 32
  %24 = icmp ne i64 %23, %19
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xf___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 15, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 15
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 15, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xdc__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xe0__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4043d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4043b8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x7___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 7
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %12, 7
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 7, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0xa4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 164
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RDI, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0xa8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 168
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RDI, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x10___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 16, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 16
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 16, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x298__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x29c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x298__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl_MINUS0x29c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_404233(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2a0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40427c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x7___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 7
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 7
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 7, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0xa4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 164
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RDX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0xa8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 168
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RDX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2a4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 676
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2a4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 676
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2a0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2a0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_404299(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2a8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 680
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40436c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2ac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x2b0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2ac__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b0__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_404317(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_404360(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2a8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 680
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___cx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %CX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x12b8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 4792, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4792
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4792, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x600___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 1536, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1536
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1536, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %CX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4041a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4043bd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_404191(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x2c0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 704, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 704
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 704, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
