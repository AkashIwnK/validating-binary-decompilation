; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x24730__rip__type = type <{ [8 x i8] }>
%G_0x24762__rip__type = type <{ [8 x i8] }>
%G_0x2483e__rip__type = type <{ [8 x i8] }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6cb918_type = type <{ [8 x i8] }>
%G_0x6cc628_type = type <{ [8 x i8] }>
%G_0x6f6f90_type = type <{ [8 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%G_0x722cb8_type = type <{ [8 x i8] }>
%G_0x726418_type = type <{ [8 x i8] }>
%G__0x6cc660_type = type <{ [8 x i8] }>
%G__0x6d0920_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x24730__rip_ = global %G_0x24730__rip__type zeroinitializer
@G_0x24762__rip_ = global %G_0x24762__rip__type zeroinitializer
@G_0x2483e__rip_ = global %G_0x2483e__rip__type zeroinitializer
@G_0x6cb8f8 = global %G_0x6cb8f8_type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6cb918 = global %G_0x6cb918_type zeroinitializer
@G_0x6cc628 = global %G_0x6cc628_type zeroinitializer
@G_0x6f6f90 = global %G_0x6f6f90_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G_0x722cb8 = global %G_0x722cb8_type zeroinitializer
@G_0x726418 = global %G_0x726418_type zeroinitializer
@G__0x6cc660 = global %G__0x6cc660_type zeroinitializer
@G__0x6d0920 = global %G__0x6d0920_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_488020.SetModesAndRefframeForBlocks(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_440fa0.LumaResidualCoding(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_489ab0.SetCoeffAndReconstruction8x8(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_486b60.Mode_Decision_for_Intra4x4Macroblock(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40bc60.dct_chroma_DC(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_489010.Intra16x16_Mode_Decision(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4a3f60.Mode_Decision_for_new_Intra8x8Macroblock(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_41dca0.compute_residue_mb(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_441540.ChromaResidualCoding(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_487ff0.I16Offset(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_41ca20.decode_one_mb(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_49d8c0.store_coding_state(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_443f60.writeMBLayer(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4ac700.ue_linfo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_49dc00.reset_coding_state(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_48d340.field_flag_inference(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @RDCost_for_macroblocks(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_48c580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_48c580, %struct.Memory** %MEMORY
  %loadMem_48c581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i64 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i65 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i64
  %27 = load i64, i64* %PC.i63
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i63
  store i64 %26, i64* %RBP.i65, align 8
  store %struct.Memory* %loadMem_48c581, %struct.Memory** %MEMORY
  %loadMem_48c584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i144 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i144
  %36 = load i64, i64* %PC.i143
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i143
  %38 = sub i64 %35, 192
  store i64 %38, i64* %RSP.i144, align 8
  %39 = icmp ult i64 %35, 192
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 192, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_48c584, %struct.Memory** %MEMORY
  %loadMem_48c58b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 15
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %72 to i64*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %74 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %73, i64 0, i64 0
  %XMM0.i194 = bitcast %union.VectorReg* %74 to %union.vec128_t*
  %75 = load i64, i64* %RBP.i193
  %76 = sub i64 %75, 16
  %77 = bitcast %union.vec128_t* %XMM0.i194 to i8*
  %78 = load i64, i64* %PC.i192
  %79 = add i64 %78, 5
  store i64 %79, i64* %PC.i192
  %80 = bitcast i8* %77 to double*
  %81 = load double, double* %80, align 1
  %82 = inttoptr i64 %76 to double*
  store double %81, double* %82
  store %struct.Memory* %loadMem_48c58b, %struct.Memory** %MEMORY
  %loadMem_48c590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 11
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %EDI.i659 = bitcast %union.anon* %88 to i32*
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %90 = getelementptr inbounds %struct.GPR, %struct.GPR* %89, i32 0, i32 15
  %91 = getelementptr inbounds %struct.Reg, %struct.Reg* %90, i32 0, i32 0
  %RBP.i660 = bitcast %union.anon* %91 to i64*
  %92 = load i64, i64* %RBP.i660
  %93 = sub i64 %92, 20
  %94 = load i32, i32* %EDI.i659
  %95 = zext i32 %94 to i64
  %96 = load i64, i64* %PC.i658
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC.i658
  %98 = inttoptr i64 %93 to i32*
  store i32 %94, i32* %98
  store %struct.Memory* %loadMem_48c590, %struct.Memory** %MEMORY
  %loadMem_48c593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i1579 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 9
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %RSI.i1580 = bitcast %union.anon* %104 to i64*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 15
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %RBP.i1581 = bitcast %union.anon* %107 to i64*
  %108 = load i64, i64* %RBP.i1581
  %109 = sub i64 %108, 32
  %110 = load i64, i64* %RSI.i1580
  %111 = load i64, i64* %PC.i1579
  %112 = add i64 %111, 4
  store i64 %112, i64* %PC.i1579
  %113 = inttoptr i64 %109 to i64*
  store i64 %110, i64* %113
  store %struct.Memory* %loadMem_48c593, %struct.Memory** %MEMORY
  %loadMem_48c597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 33
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %PC.i1576 = bitcast %union.anon* %116 to i64*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 7
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %EDX.i1577 = bitcast %union.anon* %119 to i32*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 15
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %RBP.i1578 = bitcast %union.anon* %122 to i64*
  %123 = load i64, i64* %RBP.i1578
  %124 = sub i64 %123, 36
  %125 = load i32, i32* %EDX.i1577
  %126 = zext i32 %125 to i64
  %127 = load i64, i64* %PC.i1576
  %128 = add i64 %127, 3
  store i64 %128, i64* %PC.i1576
  %129 = inttoptr i64 %124 to i32*
  store i32 %125, i32* %129
  store %struct.Memory* %loadMem_48c597, %struct.Memory** %MEMORY
  %loadMem_48c59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %131 = getelementptr inbounds %struct.GPR, %struct.GPR* %130, i32 0, i32 33
  %132 = getelementptr inbounds %struct.Reg, %struct.Reg* %131, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %132 to i64*
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %134 = getelementptr inbounds %struct.GPR, %struct.GPR* %133, i32 0, i32 15
  %135 = getelementptr inbounds %struct.Reg, %struct.Reg* %134, i32 0, i32 0
  %RBP.i1575 = bitcast %union.anon* %135 to i64*
  %136 = load i64, i64* %RBP.i1575
  %137 = sub i64 %136, 52
  %138 = load i64, i64* %PC.i1574
  %139 = add i64 %138, 7
  store i64 %139, i64* %PC.i1574
  %140 = inttoptr i64 %137 to i32*
  store i32 0, i32* %140
  store %struct.Memory* %loadMem_48c59a, %struct.Memory** %MEMORY
  %loadMem_48c5a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 33
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %PC.i1572 = bitcast %union.anon* %143 to i64*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 15
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %RBP.i1573 = bitcast %union.anon* %146 to i64*
  %147 = load i64, i64* %RBP.i1573
  %148 = sub i64 %147, 64
  %149 = load i64, i64* %PC.i1572
  %150 = add i64 %149, 8
  store i64 %150, i64* %PC.i1572
  %151 = inttoptr i64 %148 to i64*
  store i64 0, i64* %151
  store %struct.Memory* %loadMem_48c5a1, %struct.Memory** %MEMORY
  %loadMem_48c5a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %153 = getelementptr inbounds %struct.GPR, %struct.GPR* %152, i32 0, i32 33
  %154 = getelementptr inbounds %struct.Reg, %struct.Reg* %153, i32 0, i32 0
  %PC.i1570 = bitcast %union.anon* %154 to i64*
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %156 = getelementptr inbounds %struct.GPR, %struct.GPR* %155, i32 0, i32 9
  %157 = getelementptr inbounds %struct.Reg, %struct.Reg* %156, i32 0, i32 0
  %RSI.i1571 = bitcast %union.anon* %157 to i64*
  %158 = load i64, i64* %PC.i1570
  %159 = add i64 %158, 8
  store i64 %159, i64* %PC.i1570
  %160 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %160, i64* %RSI.i1571, align 8
  store %struct.Memory* %loadMem_48c5a9, %struct.Memory** %MEMORY
  %loadMem_48c5b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 33
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %163 to i64*
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %165 = getelementptr inbounds %struct.GPR, %struct.GPR* %164, i32 0, i32 9
  %166 = getelementptr inbounds %struct.Reg, %struct.Reg* %165, i32 0, i32 0
  %RSI.i1569 = bitcast %union.anon* %166 to i64*
  %167 = load i64, i64* %RSI.i1569
  %168 = add i64 %167, 14168
  %169 = load i64, i64* %PC.i1568
  %170 = add i64 %169, 7
  store i64 %170, i64* %PC.i1568
  %171 = inttoptr i64 %168 to i64*
  %172 = load i64, i64* %171
  store i64 %172, i64* %RSI.i1569, align 8
  store %struct.Memory* %loadMem_48c5b1, %struct.Memory** %MEMORY
  %loadMem_48c5b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %174 = getelementptr inbounds %struct.GPR, %struct.GPR* %173, i32 0, i32 33
  %175 = getelementptr inbounds %struct.Reg, %struct.Reg* %174, i32 0, i32 0
  %PC.i1566 = bitcast %union.anon* %175 to i64*
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %177 = getelementptr inbounds %struct.GPR, %struct.GPR* %176, i32 0, i32 1
  %178 = getelementptr inbounds %struct.Reg, %struct.Reg* %177, i32 0, i32 0
  %RAX.i1567 = bitcast %union.anon* %178 to i64*
  %179 = load i64, i64* %PC.i1566
  %180 = add i64 %179, 8
  store i64 %180, i64* %PC.i1566
  %181 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %181, i64* %RAX.i1567, align 8
  store %struct.Memory* %loadMem_48c5b8, %struct.Memory** %MEMORY
  %loadMem_48c5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %183 = getelementptr inbounds %struct.GPR, %struct.GPR* %182, i32 0, i32 33
  %184 = getelementptr inbounds %struct.Reg, %struct.Reg* %183, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %184 to i64*
  %185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %186 = getelementptr inbounds %struct.GPR, %struct.GPR* %185, i32 0, i32 1
  %187 = getelementptr inbounds %struct.Reg, %struct.Reg* %186, i32 0, i32 0
  %RAX.i1565 = bitcast %union.anon* %187 to i64*
  %188 = load i64, i64* %RAX.i1565
  %189 = add i64 %188, 12
  %190 = load i64, i64* %PC.i1564
  %191 = add i64 %190, 4
  store i64 %191, i64* %PC.i1564
  %192 = inttoptr i64 %189 to i32*
  %193 = load i32, i32* %192
  %194 = sext i32 %193 to i64
  store i64 %194, i64* %RAX.i1565, align 8
  store %struct.Memory* %loadMem_48c5c0, %struct.Memory** %MEMORY
  %loadMem_48c5c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 33
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %PC.i1562 = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 1
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RAX.i1563 = bitcast %union.anon* %200 to i64*
  %201 = load i64, i64* %RAX.i1563
  %202 = load i64, i64* %PC.i1562
  %203 = add i64 %202, 7
  store i64 %203, i64* %PC.i1562
  %204 = sext i64 %201 to i128
  %205 = and i128 %204, -18446744073709551616
  %206 = zext i64 %201 to i128
  %207 = or i128 %205, %206
  %208 = mul i128 632, %207
  %209 = trunc i128 %208 to i64
  store i64 %209, i64* %RAX.i1563, align 8
  %210 = sext i64 %209 to i128
  %211 = icmp ne i128 %210, %208
  %212 = zext i1 %211 to i8
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %212, i8* %213, align 1
  %214 = trunc i128 %208 to i32
  %215 = and i32 %214, 255
  %216 = call i32 @llvm.ctpop.i32(i32 %215)
  %217 = trunc i32 %216 to i8
  %218 = and i8 %217, 1
  %219 = xor i8 %218, 1
  %220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %219, i8* %220, align 1
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %221, align 1
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %222, align 1
  %223 = lshr i64 %209, 63
  %224 = trunc i64 %223 to i8
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %224, i8* %225, align 1
  %226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %212, i8* %226, align 1
  store %struct.Memory* %loadMem_48c5c4, %struct.Memory** %MEMORY
  %loadMem_48c5cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %228 = getelementptr inbounds %struct.GPR, %struct.GPR* %227, i32 0, i32 33
  %229 = getelementptr inbounds %struct.Reg, %struct.Reg* %228, i32 0, i32 0
  %PC.i1559 = bitcast %union.anon* %229 to i64*
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %231 = getelementptr inbounds %struct.GPR, %struct.GPR* %230, i32 0, i32 1
  %232 = getelementptr inbounds %struct.Reg, %struct.Reg* %231, i32 0, i32 0
  %RAX.i1560 = bitcast %union.anon* %232 to i64*
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %234 = getelementptr inbounds %struct.GPR, %struct.GPR* %233, i32 0, i32 9
  %235 = getelementptr inbounds %struct.Reg, %struct.Reg* %234, i32 0, i32 0
  %RSI.i1561 = bitcast %union.anon* %235 to i64*
  %236 = load i64, i64* %RSI.i1561
  %237 = load i64, i64* %RAX.i1560
  %238 = load i64, i64* %PC.i1559
  %239 = add i64 %238, 3
  store i64 %239, i64* %PC.i1559
  %240 = add i64 %237, %236
  store i64 %240, i64* %RSI.i1561, align 8
  %241 = icmp ult i64 %240, %236
  %242 = icmp ult i64 %240, %237
  %243 = or i1 %241, %242
  %244 = zext i1 %243 to i8
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %244, i8* %245, align 1
  %246 = trunc i64 %240 to i32
  %247 = and i32 %246, 255
  %248 = call i32 @llvm.ctpop.i32(i32 %247)
  %249 = trunc i32 %248 to i8
  %250 = and i8 %249, 1
  %251 = xor i8 %250, 1
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %251, i8* %252, align 1
  %253 = xor i64 %237, %236
  %254 = xor i64 %253, %240
  %255 = lshr i64 %254, 4
  %256 = trunc i64 %255 to i8
  %257 = and i8 %256, 1
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %257, i8* %258, align 1
  %259 = icmp eq i64 %240, 0
  %260 = zext i1 %259 to i8
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %260, i8* %261, align 1
  %262 = lshr i64 %240, 63
  %263 = trunc i64 %262 to i8
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %263, i8* %264, align 1
  %265 = lshr i64 %236, 63
  %266 = lshr i64 %237, 63
  %267 = xor i64 %262, %265
  %268 = xor i64 %262, %266
  %269 = add i64 %267, %268
  %270 = icmp eq i64 %269, 2
  %271 = zext i1 %270 to i8
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %271, i8* %272, align 1
  store %struct.Memory* %loadMem_48c5cb, %struct.Memory** %MEMORY
  %loadMem_48c5ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %274 = getelementptr inbounds %struct.GPR, %struct.GPR* %273, i32 0, i32 33
  %275 = getelementptr inbounds %struct.Reg, %struct.Reg* %274, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %275 to i64*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %277 = getelementptr inbounds %struct.GPR, %struct.GPR* %276, i32 0, i32 9
  %278 = getelementptr inbounds %struct.Reg, %struct.Reg* %277, i32 0, i32 0
  %RSI.i1557 = bitcast %union.anon* %278 to i64*
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %280 = getelementptr inbounds %struct.GPR, %struct.GPR* %279, i32 0, i32 15
  %281 = getelementptr inbounds %struct.Reg, %struct.Reg* %280, i32 0, i32 0
  %RBP.i1558 = bitcast %union.anon* %281 to i64*
  %282 = load i64, i64* %RBP.i1558
  %283 = sub i64 %282, 80
  %284 = load i64, i64* %RSI.i1557
  %285 = load i64, i64* %PC.i1556
  %286 = add i64 %285, 4
  store i64 %286, i64* %PC.i1556
  %287 = inttoptr i64 %283 to i64*
  store i64 %284, i64* %287
  store %struct.Memory* %loadMem_48c5ce, %struct.Memory** %MEMORY
  %loadMem_48c5d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %289 = getelementptr inbounds %struct.GPR, %struct.GPR* %288, i32 0, i32 33
  %290 = getelementptr inbounds %struct.Reg, %struct.Reg* %289, i32 0, i32 0
  %PC.i1554 = bitcast %union.anon* %290 to i64*
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %292 = getelementptr inbounds %struct.GPR, %struct.GPR* %291, i32 0, i32 1
  %293 = getelementptr inbounds %struct.Reg, %struct.Reg* %292, i32 0, i32 0
  %RAX.i1555 = bitcast %union.anon* %293 to i64*
  %294 = load i64, i64* %PC.i1554
  %295 = add i64 %294, 8
  store i64 %295, i64* %PC.i1554
  %296 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %296, i64* %RAX.i1555, align 8
  store %struct.Memory* %loadMem_48c5d2, %struct.Memory** %MEMORY
  %loadMem_48c5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %298 = getelementptr inbounds %struct.GPR, %struct.GPR* %297, i32 0, i32 33
  %299 = getelementptr inbounds %struct.Reg, %struct.Reg* %298, i32 0, i32 0
  %PC.i1552 = bitcast %union.anon* %299 to i64*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %301 = getelementptr inbounds %struct.GPR, %struct.GPR* %300, i32 0, i32 1
  %302 = getelementptr inbounds %struct.Reg, %struct.Reg* %301, i32 0, i32 0
  %RAX.i1553 = bitcast %union.anon* %302 to i64*
  %303 = load i64, i64* %RAX.i1553
  %304 = add i64 %303, 12
  %305 = load i64, i64* %PC.i1552
  %306 = add i64 %305, 4
  store i64 %306, i64* %PC.i1552
  %307 = inttoptr i64 %304 to i32*
  %308 = load i32, i32* %307
  %309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %309, align 1
  %310 = and i32 %308, 255
  %311 = call i32 @llvm.ctpop.i32(i32 %310)
  %312 = trunc i32 %311 to i8
  %313 = and i8 %312, 1
  %314 = xor i8 %313, 1
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %314, i8* %315, align 1
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %316, align 1
  %317 = icmp eq i32 %308, 0
  %318 = zext i1 %317 to i8
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %318, i8* %319, align 1
  %320 = lshr i32 %308, 31
  %321 = trunc i32 %320 to i8
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %321, i8* %322, align 1
  %323 = lshr i32 %308, 31
  %324 = xor i32 %320, %323
  %325 = add i32 %324, %323
  %326 = icmp eq i32 %325, 2
  %327 = zext i1 %326 to i8
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %327, i8* %328, align 1
  store %struct.Memory* %loadMem_48c5da, %struct.Memory** %MEMORY
  %loadMem_48c5de = load %struct.Memory*, %struct.Memory** %MEMORY
  %329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %330 = getelementptr inbounds %struct.GPR, %struct.GPR* %329, i32 0, i32 33
  %331 = getelementptr inbounds %struct.Reg, %struct.Reg* %330, i32 0, i32 0
  %PC.i1551 = bitcast %union.anon* %331 to i64*
  %332 = load i64, i64* %PC.i1551
  %333 = add i64 %332, 60
  %334 = load i64, i64* %PC.i1551
  %335 = add i64 %334, 6
  %336 = load i64, i64* %PC.i1551
  %337 = add i64 %336, 6
  store i64 %337, i64* %PC.i1551
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %339 = load i8, i8* %338, align 1
  store i8 %339, i8* %BRANCH_TAKEN, align 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %341 = icmp ne i8 %339, 0
  %342 = select i1 %341, i64 %333, i64 %335
  store i64 %342, i64* %340, align 8
  store %struct.Memory* %loadMem_48c5de, %struct.Memory** %MEMORY
  %loadBr_48c5de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c5de = icmp eq i8 %loadBr_48c5de, 1
  br i1 %cmpBr_48c5de, label %block_.L_48c61a, label %block_48c5e4

block_48c5e4:                                     ; preds = %entry
  %loadMem_48c5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %344 = getelementptr inbounds %struct.GPR, %struct.GPR* %343, i32 0, i32 33
  %345 = getelementptr inbounds %struct.Reg, %struct.Reg* %344, i32 0, i32 0
  %PC.i1549 = bitcast %union.anon* %345 to i64*
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %347 = getelementptr inbounds %struct.GPR, %struct.GPR* %346, i32 0, i32 1
  %348 = getelementptr inbounds %struct.Reg, %struct.Reg* %347, i32 0, i32 0
  %RAX.i1550 = bitcast %union.anon* %348 to i64*
  %349 = load i64, i64* %PC.i1549
  %350 = add i64 %349, 8
  store i64 %350, i64* %PC.i1549
  %351 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %351, i64* %RAX.i1550, align 8
  store %struct.Memory* %loadMem_48c5e4, %struct.Memory** %MEMORY
  %loadMem_48c5ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %353 = getelementptr inbounds %struct.GPR, %struct.GPR* %352, i32 0, i32 33
  %354 = getelementptr inbounds %struct.Reg, %struct.Reg* %353, i32 0, i32 0
  %PC.i1547 = bitcast %union.anon* %354 to i64*
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %356 = getelementptr inbounds %struct.GPR, %struct.GPR* %355, i32 0, i32 1
  %357 = getelementptr inbounds %struct.Reg, %struct.Reg* %356, i32 0, i32 0
  %RAX.i1548 = bitcast %union.anon* %357 to i64*
  %358 = load i64, i64* %RAX.i1548
  %359 = add i64 %358, 14168
  %360 = load i64, i64* %PC.i1547
  %361 = add i64 %360, 7
  store i64 %361, i64* %PC.i1547
  %362 = inttoptr i64 %359 to i64*
  %363 = load i64, i64* %362
  store i64 %363, i64* %RAX.i1548, align 8
  store %struct.Memory* %loadMem_48c5ec, %struct.Memory** %MEMORY
  %loadMem_48c5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %365 = getelementptr inbounds %struct.GPR, %struct.GPR* %364, i32 0, i32 33
  %366 = getelementptr inbounds %struct.Reg, %struct.Reg* %365, i32 0, i32 0
  %PC.i1545 = bitcast %union.anon* %366 to i64*
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %368 = getelementptr inbounds %struct.GPR, %struct.GPR* %367, i32 0, i32 5
  %369 = getelementptr inbounds %struct.Reg, %struct.Reg* %368, i32 0, i32 0
  %RCX.i1546 = bitcast %union.anon* %369 to i64*
  %370 = load i64, i64* %PC.i1545
  %371 = add i64 %370, 8
  store i64 %371, i64* %PC.i1545
  %372 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %372, i64* %RCX.i1546, align 8
  store %struct.Memory* %loadMem_48c5f3, %struct.Memory** %MEMORY
  %loadMem_48c5fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %374 = getelementptr inbounds %struct.GPR, %struct.GPR* %373, i32 0, i32 33
  %375 = getelementptr inbounds %struct.Reg, %struct.Reg* %374, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %375 to i64*
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %377 = getelementptr inbounds %struct.GPR, %struct.GPR* %376, i32 0, i32 5
  %378 = getelementptr inbounds %struct.Reg, %struct.Reg* %377, i32 0, i32 0
  %RCX.i1543 = bitcast %union.anon* %378 to i64*
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %380 = getelementptr inbounds %struct.GPR, %struct.GPR* %379, i32 0, i32 7
  %381 = getelementptr inbounds %struct.Reg, %struct.Reg* %380, i32 0, i32 0
  %RDX.i1544 = bitcast %union.anon* %381 to i64*
  %382 = load i64, i64* %RCX.i1543
  %383 = add i64 %382, 12
  %384 = load i64, i64* %PC.i1542
  %385 = add i64 %384, 3
  store i64 %385, i64* %PC.i1542
  %386 = inttoptr i64 %383 to i32*
  %387 = load i32, i32* %386
  %388 = zext i32 %387 to i64
  store i64 %388, i64* %RDX.i1544, align 8
  store %struct.Memory* %loadMem_48c5fb, %struct.Memory** %MEMORY
  %loadMem_48c5fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %390 = getelementptr inbounds %struct.GPR, %struct.GPR* %389, i32 0, i32 33
  %391 = getelementptr inbounds %struct.Reg, %struct.Reg* %390, i32 0, i32 0
  %PC.i1540 = bitcast %union.anon* %391 to i64*
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %393 = getelementptr inbounds %struct.GPR, %struct.GPR* %392, i32 0, i32 7
  %394 = getelementptr inbounds %struct.Reg, %struct.Reg* %393, i32 0, i32 0
  %RDX.i1541 = bitcast %union.anon* %394 to i64*
  %395 = load i64, i64* %RDX.i1541
  %396 = load i64, i64* %PC.i1540
  %397 = add i64 %396, 3
  store i64 %397, i64* %PC.i1540
  %398 = trunc i64 %395 to i32
  %399 = sub i32 %398, 1
  %400 = zext i32 %399 to i64
  store i64 %400, i64* %RDX.i1541, align 8
  %401 = icmp ult i32 %398, 1
  %402 = zext i1 %401 to i8
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %402, i8* %403, align 1
  %404 = and i32 %399, 255
  %405 = call i32 @llvm.ctpop.i32(i32 %404)
  %406 = trunc i32 %405 to i8
  %407 = and i8 %406, 1
  %408 = xor i8 %407, 1
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %408, i8* %409, align 1
  %410 = xor i64 1, %395
  %411 = trunc i64 %410 to i32
  %412 = xor i32 %411, %399
  %413 = lshr i32 %412, 4
  %414 = trunc i32 %413 to i8
  %415 = and i8 %414, 1
  %416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %415, i8* %416, align 1
  %417 = icmp eq i32 %399, 0
  %418 = zext i1 %417 to i8
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %418, i8* %419, align 1
  %420 = lshr i32 %399, 31
  %421 = trunc i32 %420 to i8
  %422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %421, i8* %422, align 1
  %423 = lshr i32 %398, 31
  %424 = xor i32 %420, %423
  %425 = add i32 %424, %423
  %426 = icmp eq i32 %425, 2
  %427 = zext i1 %426 to i8
  %428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %427, i8* %428, align 1
  store %struct.Memory* %loadMem_48c5fe, %struct.Memory** %MEMORY
  %loadMem_48c601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 33
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %431 to i64*
  %432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %433 = getelementptr inbounds %struct.GPR, %struct.GPR* %432, i32 0, i32 7
  %434 = getelementptr inbounds %struct.Reg, %struct.Reg* %433, i32 0, i32 0
  %EDX.i1538 = bitcast %union.anon* %434 to i32*
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %436 = getelementptr inbounds %struct.GPR, %struct.GPR* %435, i32 0, i32 5
  %437 = getelementptr inbounds %struct.Reg, %struct.Reg* %436, i32 0, i32 0
  %RCX.i1539 = bitcast %union.anon* %437 to i64*
  %438 = load i32, i32* %EDX.i1538
  %439 = zext i32 %438 to i64
  %440 = load i64, i64* %PC.i1537
  %441 = add i64 %440, 3
  store i64 %441, i64* %PC.i1537
  %442 = shl i64 %439, 32
  %443 = ashr exact i64 %442, 32
  store i64 %443, i64* %RCX.i1539, align 8
  store %struct.Memory* %loadMem_48c601, %struct.Memory** %MEMORY
  %loadMem_48c604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 33
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %446 to i64*
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %448 = getelementptr inbounds %struct.GPR, %struct.GPR* %447, i32 0, i32 5
  %449 = getelementptr inbounds %struct.Reg, %struct.Reg* %448, i32 0, i32 0
  %RCX.i1536 = bitcast %union.anon* %449 to i64*
  %450 = load i64, i64* %RCX.i1536
  %451 = load i64, i64* %PC.i1535
  %452 = add i64 %451, 7
  store i64 %452, i64* %PC.i1535
  %453 = sext i64 %450 to i128
  %454 = and i128 %453, -18446744073709551616
  %455 = zext i64 %450 to i128
  %456 = or i128 %454, %455
  %457 = mul i128 632, %456
  %458 = trunc i128 %457 to i64
  store i64 %458, i64* %RCX.i1536, align 8
  %459 = sext i64 %458 to i128
  %460 = icmp ne i128 %459, %457
  %461 = zext i1 %460 to i8
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %461, i8* %462, align 1
  %463 = trunc i128 %457 to i32
  %464 = and i32 %463, 255
  %465 = call i32 @llvm.ctpop.i32(i32 %464)
  %466 = trunc i32 %465 to i8
  %467 = and i8 %466, 1
  %468 = xor i8 %467, 1
  %469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %468, i8* %469, align 1
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %470, align 1
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %471, align 1
  %472 = lshr i64 %458, 63
  %473 = trunc i64 %472 to i8
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %473, i8* %474, align 1
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %461, i8* %475, align 1
  store %struct.Memory* %loadMem_48c604, %struct.Memory** %MEMORY
  %loadMem_48c60b = load %struct.Memory*, %struct.Memory** %MEMORY
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %477 = getelementptr inbounds %struct.GPR, %struct.GPR* %476, i32 0, i32 33
  %478 = getelementptr inbounds %struct.Reg, %struct.Reg* %477, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %478 to i64*
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %480 = getelementptr inbounds %struct.GPR, %struct.GPR* %479, i32 0, i32 1
  %481 = getelementptr inbounds %struct.Reg, %struct.Reg* %480, i32 0, i32 0
  %RAX.i1533 = bitcast %union.anon* %481 to i64*
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %483 = getelementptr inbounds %struct.GPR, %struct.GPR* %482, i32 0, i32 5
  %484 = getelementptr inbounds %struct.Reg, %struct.Reg* %483, i32 0, i32 0
  %RCX.i1534 = bitcast %union.anon* %484 to i64*
  %485 = load i64, i64* %RAX.i1533
  %486 = load i64, i64* %RCX.i1534
  %487 = load i64, i64* %PC.i1532
  %488 = add i64 %487, 3
  store i64 %488, i64* %PC.i1532
  %489 = add i64 %486, %485
  store i64 %489, i64* %RAX.i1533, align 8
  %490 = icmp ult i64 %489, %485
  %491 = icmp ult i64 %489, %486
  %492 = or i1 %490, %491
  %493 = zext i1 %492 to i8
  %494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %493, i8* %494, align 1
  %495 = trunc i64 %489 to i32
  %496 = and i32 %495, 255
  %497 = call i32 @llvm.ctpop.i32(i32 %496)
  %498 = trunc i32 %497 to i8
  %499 = and i8 %498, 1
  %500 = xor i8 %499, 1
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %500, i8* %501, align 1
  %502 = xor i64 %486, %485
  %503 = xor i64 %502, %489
  %504 = lshr i64 %503, 4
  %505 = trunc i64 %504 to i8
  %506 = and i8 %505, 1
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %506, i8* %507, align 1
  %508 = icmp eq i64 %489, 0
  %509 = zext i1 %508 to i8
  %510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %509, i8* %510, align 1
  %511 = lshr i64 %489, 63
  %512 = trunc i64 %511 to i8
  %513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %512, i8* %513, align 1
  %514 = lshr i64 %485, 63
  %515 = lshr i64 %486, 63
  %516 = xor i64 %511, %514
  %517 = xor i64 %511, %515
  %518 = add i64 %516, %517
  %519 = icmp eq i64 %518, 2
  %520 = zext i1 %519 to i8
  %521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %520, i8* %521, align 1
  store %struct.Memory* %loadMem_48c60b, %struct.Memory** %MEMORY
  %loadMem_48c60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %523 = getelementptr inbounds %struct.GPR, %struct.GPR* %522, i32 0, i32 33
  %524 = getelementptr inbounds %struct.Reg, %struct.Reg* %523, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %524 to i64*
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %526 = getelementptr inbounds %struct.GPR, %struct.GPR* %525, i32 0, i32 1
  %527 = getelementptr inbounds %struct.Reg, %struct.Reg* %526, i32 0, i32 0
  %RAX.i1530 = bitcast %union.anon* %527 to i64*
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %529 = getelementptr inbounds %struct.GPR, %struct.GPR* %528, i32 0, i32 15
  %530 = getelementptr inbounds %struct.Reg, %struct.Reg* %529, i32 0, i32 0
  %RBP.i1531 = bitcast %union.anon* %530 to i64*
  %531 = load i64, i64* %RBP.i1531
  %532 = sub i64 %531, 136
  %533 = load i64, i64* %RAX.i1530
  %534 = load i64, i64* %PC.i1529
  %535 = add i64 %534, 7
  store i64 %535, i64* %PC.i1529
  %536 = inttoptr i64 %532 to i64*
  store i64 %533, i64* %536
  store %struct.Memory* %loadMem_48c60e, %struct.Memory** %MEMORY
  %loadMem_48c615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %538 = getelementptr inbounds %struct.GPR, %struct.GPR* %537, i32 0, i32 33
  %539 = getelementptr inbounds %struct.Reg, %struct.Reg* %538, i32 0, i32 0
  %PC.i1528 = bitcast %union.anon* %539 to i64*
  %540 = load i64, i64* %PC.i1528
  %541 = add i64 %540, 21
  %542 = load i64, i64* %PC.i1528
  %543 = add i64 %542, 5
  store i64 %543, i64* %PC.i1528
  %544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %541, i64* %544, align 8
  store %struct.Memory* %loadMem_48c615, %struct.Memory** %MEMORY
  br label %block_.L_48c62a

block_.L_48c61a:                                  ; preds = %entry
  %loadMem_48c61a = load %struct.Memory*, %struct.Memory** %MEMORY
  %545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %546 = getelementptr inbounds %struct.GPR, %struct.GPR* %545, i32 0, i32 33
  %547 = getelementptr inbounds %struct.Reg, %struct.Reg* %546, i32 0, i32 0
  %PC.i1525 = bitcast %union.anon* %547 to i64*
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %549 = getelementptr inbounds %struct.GPR, %struct.GPR* %548, i32 0, i32 1
  %550 = getelementptr inbounds %struct.Reg, %struct.Reg* %549, i32 0, i32 0
  %EAX.i1526 = bitcast %union.anon* %550 to i32*
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %552 = getelementptr inbounds %struct.GPR, %struct.GPR* %551, i32 0, i32 1
  %553 = getelementptr inbounds %struct.Reg, %struct.Reg* %552, i32 0, i32 0
  %RAX.i1527 = bitcast %union.anon* %553 to i64*
  %554 = load i64, i64* %RAX.i1527
  %555 = load i32, i32* %EAX.i1526
  %556 = zext i32 %555 to i64
  %557 = load i64, i64* %PC.i1525
  %558 = add i64 %557, 2
  store i64 %558, i64* %PC.i1525
  %559 = xor i64 %556, %554
  %560 = trunc i64 %559 to i32
  %561 = and i64 %559, 4294967295
  store i64 %561, i64* %RAX.i1527, align 8
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %562, align 1
  %563 = and i32 %560, 255
  %564 = call i32 @llvm.ctpop.i32(i32 %563)
  %565 = trunc i32 %564 to i8
  %566 = and i8 %565, 1
  %567 = xor i8 %566, 1
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %567, i8* %568, align 1
  %569 = icmp eq i32 %560, 0
  %570 = zext i1 %569 to i8
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %570, i8* %571, align 1
  %572 = lshr i32 %560, 31
  %573 = trunc i32 %572 to i8
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %573, i8* %574, align 1
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %575, align 1
  %576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %576, align 1
  store %struct.Memory* %loadMem_48c61a, %struct.Memory** %MEMORY
  %loadMem_48c61c = load %struct.Memory*, %struct.Memory** %MEMORY
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %578 = getelementptr inbounds %struct.GPR, %struct.GPR* %577, i32 0, i32 33
  %579 = getelementptr inbounds %struct.Reg, %struct.Reg* %578, i32 0, i32 0
  %PC.i1522 = bitcast %union.anon* %579 to i64*
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %581 = getelementptr inbounds %struct.GPR, %struct.GPR* %580, i32 0, i32 1
  %582 = getelementptr inbounds %struct.Reg, %struct.Reg* %581, i32 0, i32 0
  %EAX.i1523 = bitcast %union.anon* %582 to i32*
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %584 = getelementptr inbounds %struct.GPR, %struct.GPR* %583, i32 0, i32 5
  %585 = getelementptr inbounds %struct.Reg, %struct.Reg* %584, i32 0, i32 0
  %RCX.i1524 = bitcast %union.anon* %585 to i64*
  %586 = load i32, i32* %EAX.i1523
  %587 = zext i32 %586 to i64
  %588 = load i64, i64* %PC.i1522
  %589 = add i64 %588, 2
  store i64 %589, i64* %PC.i1522
  %590 = and i64 %587, 4294967295
  store i64 %590, i64* %RCX.i1524, align 8
  store %struct.Memory* %loadMem_48c61c, %struct.Memory** %MEMORY
  %loadMem_48c61e = load %struct.Memory*, %struct.Memory** %MEMORY
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %592 = getelementptr inbounds %struct.GPR, %struct.GPR* %591, i32 0, i32 33
  %593 = getelementptr inbounds %struct.Reg, %struct.Reg* %592, i32 0, i32 0
  %PC.i1519 = bitcast %union.anon* %593 to i64*
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %595 = getelementptr inbounds %struct.GPR, %struct.GPR* %594, i32 0, i32 5
  %596 = getelementptr inbounds %struct.Reg, %struct.Reg* %595, i32 0, i32 0
  %RCX.i1520 = bitcast %union.anon* %596 to i64*
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %598 = getelementptr inbounds %struct.GPR, %struct.GPR* %597, i32 0, i32 15
  %599 = getelementptr inbounds %struct.Reg, %struct.Reg* %598, i32 0, i32 0
  %RBP.i1521 = bitcast %union.anon* %599 to i64*
  %600 = load i64, i64* %RBP.i1521
  %601 = sub i64 %600, 136
  %602 = load i64, i64* %RCX.i1520
  %603 = load i64, i64* %PC.i1519
  %604 = add i64 %603, 7
  store i64 %604, i64* %PC.i1519
  %605 = inttoptr i64 %601 to i64*
  store i64 %602, i64* %605
  store %struct.Memory* %loadMem_48c61e, %struct.Memory** %MEMORY
  %loadMem_48c625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %607 = getelementptr inbounds %struct.GPR, %struct.GPR* %606, i32 0, i32 33
  %608 = getelementptr inbounds %struct.Reg, %struct.Reg* %607, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %608 to i64*
  %609 = load i64, i64* %PC.i1518
  %610 = add i64 %609, 5
  %611 = load i64, i64* %PC.i1518
  %612 = add i64 %611, 5
  store i64 %612, i64* %PC.i1518
  %613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %610, i64* %613, align 8
  store %struct.Memory* %loadMem_48c625, %struct.Memory** %MEMORY
  br label %block_.L_48c62a

block_.L_48c62a:                                  ; preds = %block_.L_48c61a, %block_48c5e4
  %loadMem_48c62a = load %struct.Memory*, %struct.Memory** %MEMORY
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %615 = getelementptr inbounds %struct.GPR, %struct.GPR* %614, i32 0, i32 33
  %616 = getelementptr inbounds %struct.Reg, %struct.Reg* %615, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %616 to i64*
  %617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %618 = getelementptr inbounds %struct.GPR, %struct.GPR* %617, i32 0, i32 1
  %619 = getelementptr inbounds %struct.Reg, %struct.Reg* %618, i32 0, i32 0
  %RAX.i1516 = bitcast %union.anon* %619 to i64*
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %621 = getelementptr inbounds %struct.GPR, %struct.GPR* %620, i32 0, i32 15
  %622 = getelementptr inbounds %struct.Reg, %struct.Reg* %621, i32 0, i32 0
  %RBP.i1517 = bitcast %union.anon* %622 to i64*
  %623 = load i64, i64* %RBP.i1517
  %624 = sub i64 %623, 136
  %625 = load i64, i64* %PC.i1515
  %626 = add i64 %625, 7
  store i64 %626, i64* %PC.i1515
  %627 = inttoptr i64 %624 to i64*
  %628 = load i64, i64* %627
  store i64 %628, i64* %RAX.i1516, align 8
  store %struct.Memory* %loadMem_48c62a, %struct.Memory** %MEMORY
  %loadMem_48c631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %630 = getelementptr inbounds %struct.GPR, %struct.GPR* %629, i32 0, i32 33
  %631 = getelementptr inbounds %struct.Reg, %struct.Reg* %630, i32 0, i32 0
  %PC.i1512 = bitcast %union.anon* %631 to i64*
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %633 = getelementptr inbounds %struct.GPR, %struct.GPR* %632, i32 0, i32 5
  %634 = getelementptr inbounds %struct.Reg, %struct.Reg* %633, i32 0, i32 0
  %ECX.i1513 = bitcast %union.anon* %634 to i32*
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %636 = getelementptr inbounds %struct.GPR, %struct.GPR* %635, i32 0, i32 5
  %637 = getelementptr inbounds %struct.Reg, %struct.Reg* %636, i32 0, i32 0
  %RCX.i1514 = bitcast %union.anon* %637 to i64*
  %638 = load i64, i64* %RCX.i1514
  %639 = load i32, i32* %ECX.i1513
  %640 = zext i32 %639 to i64
  %641 = load i64, i64* %PC.i1512
  %642 = add i64 %641, 2
  store i64 %642, i64* %PC.i1512
  %643 = xor i64 %640, %638
  %644 = trunc i64 %643 to i32
  %645 = and i64 %643, 4294967295
  store i64 %645, i64* %RCX.i1514, align 8
  %646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %646, align 1
  %647 = and i32 %644, 255
  %648 = call i32 @llvm.ctpop.i32(i32 %647)
  %649 = trunc i32 %648 to i8
  %650 = and i8 %649, 1
  %651 = xor i8 %650, 1
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %651, i8* %652, align 1
  %653 = icmp eq i32 %644, 0
  %654 = zext i1 %653 to i8
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %654, i8* %655, align 1
  %656 = lshr i32 %644, 31
  %657 = trunc i32 %656 to i8
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %657, i8* %658, align 1
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %659, align 1
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %660, align 1
  store %struct.Memory* %loadMem_48c631, %struct.Memory** %MEMORY
  %loadMem_48c633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %662 = getelementptr inbounds %struct.GPR, %struct.GPR* %661, i32 0, i32 33
  %663 = getelementptr inbounds %struct.Reg, %struct.Reg* %662, i32 0, i32 0
  %PC.i1509 = bitcast %union.anon* %663 to i64*
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %665 = getelementptr inbounds %struct.GPR, %struct.GPR* %664, i32 0, i32 5
  %666 = getelementptr inbounds %struct.Reg, %struct.Reg* %665, i32 0, i32 0
  %667 = bitcast %union.anon* %666 to %struct.anon.2*
  %CL.i1510 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %667, i32 0, i32 0
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %669 = getelementptr inbounds %struct.GPR, %struct.GPR* %668, i32 0, i32 7
  %670 = getelementptr inbounds %struct.Reg, %struct.Reg* %669, i32 0, i32 0
  %671 = bitcast %union.anon* %670 to %struct.anon.2*
  %DL.i1511 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %671, i32 0, i32 0
  %672 = load i8, i8* %CL.i1510
  %673 = zext i8 %672 to i64
  %674 = load i64, i64* %PC.i1509
  %675 = add i64 %674, 2
  store i64 %675, i64* %PC.i1509
  store i8 %672, i8* %DL.i1511, align 1
  store %struct.Memory* %loadMem_48c633, %struct.Memory** %MEMORY
  %loadMem_48c635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %677 = getelementptr inbounds %struct.GPR, %struct.GPR* %676, i32 0, i32 33
  %678 = getelementptr inbounds %struct.Reg, %struct.Reg* %677, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %678 to i64*
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %680 = getelementptr inbounds %struct.GPR, %struct.GPR* %679, i32 0, i32 1
  %681 = getelementptr inbounds %struct.Reg, %struct.Reg* %680, i32 0, i32 0
  %RAX.i1507 = bitcast %union.anon* %681 to i64*
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %683 = getelementptr inbounds %struct.GPR, %struct.GPR* %682, i32 0, i32 15
  %684 = getelementptr inbounds %struct.Reg, %struct.Reg* %683, i32 0, i32 0
  %RBP.i1508 = bitcast %union.anon* %684 to i64*
  %685 = load i64, i64* %RBP.i1508
  %686 = sub i64 %685, 88
  %687 = load i64, i64* %RAX.i1507
  %688 = load i64, i64* %PC.i1506
  %689 = add i64 %688, 4
  store i64 %689, i64* %PC.i1506
  %690 = inttoptr i64 %686 to i64*
  store i64 %687, i64* %690
  store %struct.Memory* %loadMem_48c635, %struct.Memory** %MEMORY
  %loadMem_48c639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %692 = getelementptr inbounds %struct.GPR, %struct.GPR* %691, i32 0, i32 33
  %693 = getelementptr inbounds %struct.Reg, %struct.Reg* %692, i32 0, i32 0
  %PC.i1504 = bitcast %union.anon* %693 to i64*
  %694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %695 = getelementptr inbounds %struct.GPR, %struct.GPR* %694, i32 0, i32 1
  %696 = getelementptr inbounds %struct.Reg, %struct.Reg* %695, i32 0, i32 0
  %RAX.i1505 = bitcast %union.anon* %696 to i64*
  %697 = load i64, i64* %PC.i1504
  %698 = add i64 %697, 8
  store i64 %698, i64* %PC.i1504
  %699 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %699, i64* %RAX.i1505, align 8
  store %struct.Memory* %loadMem_48c639, %struct.Memory** %MEMORY
  %loadMem_48c641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %701 = getelementptr inbounds %struct.GPR, %struct.GPR* %700, i32 0, i32 33
  %702 = getelementptr inbounds %struct.Reg, %struct.Reg* %701, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %702 to i64*
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %704 = getelementptr inbounds %struct.GPR, %struct.GPR* %703, i32 0, i32 1
  %705 = getelementptr inbounds %struct.Reg, %struct.Reg* %704, i32 0, i32 0
  %RAX.i1503 = bitcast %union.anon* %705 to i64*
  %706 = load i64, i64* %RAX.i1503
  %707 = add i64 %706, 24
  %708 = load i64, i64* %PC.i1502
  %709 = add i64 %708, 4
  store i64 %709, i64* %PC.i1502
  %710 = inttoptr i64 %707 to i32*
  %711 = load i32, i32* %710
  %712 = sub i32 %711, 1
  %713 = icmp ult i32 %711, 1
  %714 = zext i1 %713 to i8
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %714, i8* %715, align 1
  %716 = and i32 %712, 255
  %717 = call i32 @llvm.ctpop.i32(i32 %716)
  %718 = trunc i32 %717 to i8
  %719 = and i8 %718, 1
  %720 = xor i8 %719, 1
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %720, i8* %721, align 1
  %722 = xor i32 %711, 1
  %723 = xor i32 %722, %712
  %724 = lshr i32 %723, 4
  %725 = trunc i32 %724 to i8
  %726 = and i8 %725, 1
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %726, i8* %727, align 1
  %728 = icmp eq i32 %712, 0
  %729 = zext i1 %728 to i8
  %730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %729, i8* %730, align 1
  %731 = lshr i32 %712, 31
  %732 = trunc i32 %731 to i8
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %732, i8* %733, align 1
  %734 = lshr i32 %711, 31
  %735 = xor i32 %731, %734
  %736 = add i32 %735, %734
  %737 = icmp eq i32 %736, 2
  %738 = zext i1 %737 to i8
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %738, i8* %739, align 1
  store %struct.Memory* %loadMem_48c641, %struct.Memory** %MEMORY
  %loadMem_48c645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %741 = getelementptr inbounds %struct.GPR, %struct.GPR* %740, i32 0, i32 33
  %742 = getelementptr inbounds %struct.Reg, %struct.Reg* %741, i32 0, i32 0
  %PC.i1500 = bitcast %union.anon* %742 to i64*
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %744 = getelementptr inbounds %struct.GPR, %struct.GPR* %743, i32 0, i32 9
  %745 = getelementptr inbounds %struct.Reg, %struct.Reg* %744, i32 0, i32 0
  %746 = bitcast %union.anon* %745 to %struct.anon.2*
  %SIL.i1501 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %746, i32 0, i32 0
  %747 = load i64, i64* %PC.i1500
  %748 = add i64 %747, 4
  store i64 %748, i64* %PC.i1500
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %750 = load i8, i8* %749, align 1
  store i8 %750, i8* %SIL.i1501, align 1
  store %struct.Memory* %loadMem_48c645, %struct.Memory** %MEMORY
  %loadMem_48c649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %752 = getelementptr inbounds %struct.GPR, %struct.GPR* %751, i32 0, i32 33
  %753 = getelementptr inbounds %struct.Reg, %struct.Reg* %752, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %753 to i64*
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %755 = getelementptr inbounds %struct.GPR, %struct.GPR* %754, i32 0, i32 9
  %756 = getelementptr inbounds %struct.Reg, %struct.Reg* %755, i32 0, i32 0
  %757 = bitcast %union.anon* %756 to %struct.anon.2*
  %SIL.i1499 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %757, i32 0, i32 0
  %758 = load i8, i8* %SIL.i1499
  %759 = zext i8 %758 to i64
  %760 = load i64, i64* %PC.i1498
  %761 = add i64 %760, 4
  store i64 %761, i64* %PC.i1498
  %762 = and i64 1, %759
  %763 = trunc i64 %762 to i8
  store i8 %763, i8* %SIL.i1499, align 1
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %764, align 1
  %765 = trunc i64 %762 to i32
  %766 = and i32 %765, 255
  %767 = call i32 @llvm.ctpop.i32(i32 %766)
  %768 = trunc i32 %767 to i8
  %769 = and i8 %768, 1
  %770 = xor i8 %769, 1
  %771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %770, i8* %771, align 1
  %772 = icmp eq i8 %763, 0
  %773 = zext i1 %772 to i8
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %773, i8* %774, align 1
  %775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %775, align 1
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %776, align 1
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %777, align 1
  store %struct.Memory* %loadMem_48c649, %struct.Memory** %MEMORY
  %loadMem_48c64d = load %struct.Memory*, %struct.Memory** %MEMORY
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %779 = getelementptr inbounds %struct.GPR, %struct.GPR* %778, i32 0, i32 33
  %780 = getelementptr inbounds %struct.Reg, %struct.Reg* %779, i32 0, i32 0
  %PC.i1496 = bitcast %union.anon* %780 to i64*
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %782 = getelementptr inbounds %struct.GPR, %struct.GPR* %781, i32 0, i32 9
  %783 = getelementptr inbounds %struct.Reg, %struct.Reg* %782, i32 0, i32 0
  %784 = bitcast %union.anon* %783 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %784, i32 0, i32 0
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %786 = getelementptr inbounds %struct.GPR, %struct.GPR* %785, i32 0, i32 5
  %787 = getelementptr inbounds %struct.Reg, %struct.Reg* %786, i32 0, i32 0
  %RCX.i1497 = bitcast %union.anon* %787 to i64*
  %788 = load i8, i8* %SIL.i
  %789 = zext i8 %788 to i64
  %790 = load i64, i64* %PC.i1496
  %791 = add i64 %790, 4
  store i64 %791, i64* %PC.i1496
  %792 = and i64 %789, 255
  store i64 %792, i64* %RCX.i1497, align 8
  store %struct.Memory* %loadMem_48c64d, %struct.Memory** %MEMORY
  %loadMem_48c651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %794 = getelementptr inbounds %struct.GPR, %struct.GPR* %793, i32 0, i32 33
  %795 = getelementptr inbounds %struct.Reg, %struct.Reg* %794, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %795 to i64*
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %797 = getelementptr inbounds %struct.GPR, %struct.GPR* %796, i32 0, i32 5
  %798 = getelementptr inbounds %struct.Reg, %struct.Reg* %797, i32 0, i32 0
  %ECX.i1494 = bitcast %union.anon* %798 to i32*
  %799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %800 = getelementptr inbounds %struct.GPR, %struct.GPR* %799, i32 0, i32 15
  %801 = getelementptr inbounds %struct.Reg, %struct.Reg* %800, i32 0, i32 0
  %RBP.i1495 = bitcast %union.anon* %801 to i64*
  %802 = load i64, i64* %RBP.i1495
  %803 = sub i64 %802, 92
  %804 = load i32, i32* %ECX.i1494
  %805 = zext i32 %804 to i64
  %806 = load i64, i64* %PC.i1493
  %807 = add i64 %806, 3
  store i64 %807, i64* %PC.i1493
  %808 = inttoptr i64 %803 to i32*
  store i32 %804, i32* %808
  store %struct.Memory* %loadMem_48c651, %struct.Memory** %MEMORY
  %loadMem_48c654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 33
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %PC.i1491 = bitcast %union.anon* %811 to i64*
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 1
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %RAX.i1492 = bitcast %union.anon* %814 to i64*
  %815 = load i64, i64* %PC.i1491
  %816 = add i64 %815, 8
  store i64 %816, i64* %PC.i1491
  %817 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %817, i64* %RAX.i1492, align 8
  store %struct.Memory* %loadMem_48c654, %struct.Memory** %MEMORY
  %loadMem_48c65c = load %struct.Memory*, %struct.Memory** %MEMORY
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 33
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %PC.i1489 = bitcast %union.anon* %820 to i64*
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %822 = getelementptr inbounds %struct.GPR, %struct.GPR* %821, i32 0, i32 1
  %823 = getelementptr inbounds %struct.Reg, %struct.Reg* %822, i32 0, i32 0
  %RAX.i1490 = bitcast %union.anon* %823 to i64*
  %824 = load i64, i64* %RAX.i1490
  %825 = add i64 %824, 24
  %826 = load i64, i64* %PC.i1489
  %827 = add i64 %826, 4
  store i64 %827, i64* %PC.i1489
  %828 = inttoptr i64 %825 to i32*
  %829 = load i32, i32* %828
  %830 = sub i32 %829, 2
  %831 = icmp ult i32 %829, 2
  %832 = zext i1 %831 to i8
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %832, i8* %833, align 1
  %834 = and i32 %830, 255
  %835 = call i32 @llvm.ctpop.i32(i32 %834)
  %836 = trunc i32 %835 to i8
  %837 = and i8 %836, 1
  %838 = xor i8 %837, 1
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %838, i8* %839, align 1
  %840 = xor i32 %829, 2
  %841 = xor i32 %840, %830
  %842 = lshr i32 %841, 4
  %843 = trunc i32 %842 to i8
  %844 = and i8 %843, 1
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %844, i8* %845, align 1
  %846 = icmp eq i32 %830, 0
  %847 = zext i1 %846 to i8
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %847, i8* %848, align 1
  %849 = lshr i32 %830, 31
  %850 = trunc i32 %849 to i8
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %850, i8* %851, align 1
  %852 = lshr i32 %829, 31
  %853 = xor i32 %849, %852
  %854 = add i32 %853, %852
  %855 = icmp eq i32 %854, 2
  %856 = zext i1 %855 to i8
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %856, i8* %857, align 1
  store %struct.Memory* %loadMem_48c65c, %struct.Memory** %MEMORY
  %loadMem_48c660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 33
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %860 to i64*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 7
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %864 = bitcast %union.anon* %863 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %864, i32 0, i32 0
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 15
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %RBP.i1488 = bitcast %union.anon* %867 to i64*
  %868 = load i64, i64* %RBP.i1488
  %869 = sub i64 %868, 137
  %870 = load i8, i8* %DL.i
  %871 = zext i8 %870 to i64
  %872 = load i64, i64* %PC.i1487
  %873 = add i64 %872, 6
  store i64 %873, i64* %PC.i1487
  %874 = inttoptr i64 %869 to i8*
  store i8 %870, i8* %874
  store %struct.Memory* %loadMem_48c660, %struct.Memory** %MEMORY
  %loadMem_48c666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %876 = getelementptr inbounds %struct.GPR, %struct.GPR* %875, i32 0, i32 33
  %877 = getelementptr inbounds %struct.Reg, %struct.Reg* %876, i32 0, i32 0
  %PC.i1486 = bitcast %union.anon* %877 to i64*
  %878 = load i64, i64* %PC.i1486
  %879 = add i64 %878, 30
  %880 = load i64, i64* %PC.i1486
  %881 = add i64 %880, 6
  %882 = load i64, i64* %PC.i1486
  %883 = add i64 %882, 6
  store i64 %883, i64* %PC.i1486
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %885 = load i8, i8* %884, align 1
  store i8 %885, i8* %BRANCH_TAKEN, align 1
  %886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %887 = icmp ne i8 %885, 0
  %888 = select i1 %887, i64 %879, i64 %881
  store i64 %888, i64* %886, align 8
  store %struct.Memory* %loadMem_48c666, %struct.Memory** %MEMORY
  %loadBr_48c666 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c666 = icmp eq i8 %loadBr_48c666, 1
  br i1 %cmpBr_48c666, label %block_.L_48c684, label %block_48c66c

block_48c66c:                                     ; preds = %block_.L_48c62a
  %loadMem_48c66c = load %struct.Memory*, %struct.Memory** %MEMORY
  %889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %890 = getelementptr inbounds %struct.GPR, %struct.GPR* %889, i32 0, i32 33
  %891 = getelementptr inbounds %struct.Reg, %struct.Reg* %890, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %891 to i64*
  %892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %893 = getelementptr inbounds %struct.GPR, %struct.GPR* %892, i32 0, i32 1
  %894 = getelementptr inbounds %struct.Reg, %struct.Reg* %893, i32 0, i32 0
  %RAX.i1485 = bitcast %union.anon* %894 to i64*
  %895 = load i64, i64* %PC.i1484
  %896 = add i64 %895, 8
  store i64 %896, i64* %PC.i1484
  %897 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %897, i64* %RAX.i1485, align 8
  store %struct.Memory* %loadMem_48c66c, %struct.Memory** %MEMORY
  %loadMem_48c674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %899 = getelementptr inbounds %struct.GPR, %struct.GPR* %898, i32 0, i32 33
  %900 = getelementptr inbounds %struct.Reg, %struct.Reg* %899, i32 0, i32 0
  %PC.i1482 = bitcast %union.anon* %900 to i64*
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %902 = getelementptr inbounds %struct.GPR, %struct.GPR* %901, i32 0, i32 1
  %903 = getelementptr inbounds %struct.Reg, %struct.Reg* %902, i32 0, i32 0
  %RAX.i1483 = bitcast %union.anon* %903 to i64*
  %904 = load i64, i64* %RAX.i1483
  %905 = add i64 %904, 2356
  %906 = load i64, i64* %PC.i1482
  %907 = add i64 %906, 7
  store i64 %907, i64* %PC.i1482
  %908 = inttoptr i64 %905 to i32*
  %909 = load i32, i32* %908
  %910 = sub i32 %909, 1
  %911 = icmp ult i32 %909, 1
  %912 = zext i1 %911 to i8
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %912, i8* %913, align 1
  %914 = and i32 %910, 255
  %915 = call i32 @llvm.ctpop.i32(i32 %914)
  %916 = trunc i32 %915 to i8
  %917 = and i8 %916, 1
  %918 = xor i8 %917, 1
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %918, i8* %919, align 1
  %920 = xor i32 %909, 1
  %921 = xor i32 %920, %910
  %922 = lshr i32 %921, 4
  %923 = trunc i32 %922 to i8
  %924 = and i8 %923, 1
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %924, i8* %925, align 1
  %926 = icmp eq i32 %910, 0
  %927 = zext i1 %926 to i8
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %927, i8* %928, align 1
  %929 = lshr i32 %910, 31
  %930 = trunc i32 %929 to i8
  %931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %930, i8* %931, align 1
  %932 = lshr i32 %909, 31
  %933 = xor i32 %929, %932
  %934 = add i32 %933, %932
  %935 = icmp eq i32 %934, 2
  %936 = zext i1 %935 to i8
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %936, i8* %937, align 1
  store %struct.Memory* %loadMem_48c674, %struct.Memory** %MEMORY
  %loadMem_48c67b = load %struct.Memory*, %struct.Memory** %MEMORY
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 33
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %940 to i64*
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %942 = getelementptr inbounds %struct.GPR, %struct.GPR* %941, i32 0, i32 5
  %943 = getelementptr inbounds %struct.Reg, %struct.Reg* %942, i32 0, i32 0
  %944 = bitcast %union.anon* %943 to %struct.anon.2*
  %CL.i1481 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %944, i32 0, i32 0
  %945 = load i64, i64* %PC.i1480
  %946 = add i64 %945, 3
  store i64 %946, i64* %PC.i1480
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %948 = load i8, i8* %947, align 1
  %949 = icmp eq i8 %948, 0
  %950 = zext i1 %949 to i8
  store i8 %950, i8* %CL.i1481, align 1
  store %struct.Memory* %loadMem_48c67b, %struct.Memory** %MEMORY
  %loadMem_48c67e = load %struct.Memory*, %struct.Memory** %MEMORY
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 33
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %953 to i64*
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %955 = getelementptr inbounds %struct.GPR, %struct.GPR* %954, i32 0, i32 5
  %956 = getelementptr inbounds %struct.Reg, %struct.Reg* %955, i32 0, i32 0
  %957 = bitcast %union.anon* %956 to %struct.anon.2*
  %CL.i1478 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %957, i32 0, i32 0
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %959 = getelementptr inbounds %struct.GPR, %struct.GPR* %958, i32 0, i32 15
  %960 = getelementptr inbounds %struct.Reg, %struct.Reg* %959, i32 0, i32 0
  %RBP.i1479 = bitcast %union.anon* %960 to i64*
  %961 = load i64, i64* %RBP.i1479
  %962 = sub i64 %961, 137
  %963 = load i8, i8* %CL.i1478
  %964 = zext i8 %963 to i64
  %965 = load i64, i64* %PC.i1477
  %966 = add i64 %965, 6
  store i64 %966, i64* %PC.i1477
  %967 = inttoptr i64 %962 to i8*
  store i8 %963, i8* %967
  store %struct.Memory* %loadMem_48c67e, %struct.Memory** %MEMORY
  br label %block_.L_48c684

block_.L_48c684:                                  ; preds = %block_48c66c, %block_.L_48c62a
  %loadMem_48c684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 33
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %970 to i64*
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %972 = getelementptr inbounds %struct.GPR, %struct.GPR* %971, i32 0, i32 1
  %973 = getelementptr inbounds %struct.Reg, %struct.Reg* %972, i32 0, i32 0
  %974 = bitcast %union.anon* %973 to %struct.anon.2*
  %AL.i1475 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %974, i32 0, i32 0
  %975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %976 = getelementptr inbounds %struct.GPR, %struct.GPR* %975, i32 0, i32 15
  %977 = getelementptr inbounds %struct.Reg, %struct.Reg* %976, i32 0, i32 0
  %RBP.i1476 = bitcast %union.anon* %977 to i64*
  %978 = load i64, i64* %RBP.i1476
  %979 = sub i64 %978, 137
  %980 = load i64, i64* %PC.i1474
  %981 = add i64 %980, 6
  store i64 %981, i64* %PC.i1474
  %982 = inttoptr i64 %979 to i8*
  %983 = load i8, i8* %982
  store i8 %983, i8* %AL.i1475, align 1
  store %struct.Memory* %loadMem_48c684, %struct.Memory** %MEMORY
  %loadMem_48c68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %985 = getelementptr inbounds %struct.GPR, %struct.GPR* %984, i32 0, i32 33
  %986 = getelementptr inbounds %struct.Reg, %struct.Reg* %985, i32 0, i32 0
  %PC.i1472 = bitcast %union.anon* %986 to i64*
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %988 = getelementptr inbounds %struct.GPR, %struct.GPR* %987, i32 0, i32 1
  %989 = getelementptr inbounds %struct.Reg, %struct.Reg* %988, i32 0, i32 0
  %990 = bitcast %union.anon* %989 to %struct.anon.2*
  %AL.i1473 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %990, i32 0, i32 0
  %991 = load i8, i8* %AL.i1473
  %992 = zext i8 %991 to i64
  %993 = load i64, i64* %PC.i1472
  %994 = add i64 %993, 2
  store i64 %994, i64* %PC.i1472
  %995 = and i64 1, %992
  %996 = trunc i64 %995 to i8
  store i8 %996, i8* %AL.i1473, align 1
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %997, align 1
  %998 = trunc i64 %995 to i32
  %999 = and i32 %998, 255
  %1000 = call i32 @llvm.ctpop.i32(i32 %999)
  %1001 = trunc i32 %1000 to i8
  %1002 = and i8 %1001, 1
  %1003 = xor i8 %1002, 1
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1003, i8* %1004, align 1
  %1005 = icmp eq i8 %996, 0
  %1006 = zext i1 %1005 to i8
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1006, i8* %1007, align 1
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1008, align 1
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1009, align 1
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1010, align 1
  store %struct.Memory* %loadMem_48c68a, %struct.Memory** %MEMORY
  %loadMem_48c68c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1012 = getelementptr inbounds %struct.GPR, %struct.GPR* %1011, i32 0, i32 33
  %1013 = getelementptr inbounds %struct.Reg, %struct.Reg* %1012, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %1013 to i64*
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1015 = getelementptr inbounds %struct.GPR, %struct.GPR* %1014, i32 0, i32 1
  %1016 = getelementptr inbounds %struct.Reg, %struct.Reg* %1015, i32 0, i32 0
  %1017 = bitcast %union.anon* %1016 to %struct.anon.2*
  %AL.i1470 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1017, i32 0, i32 0
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1019 = getelementptr inbounds %struct.GPR, %struct.GPR* %1018, i32 0, i32 5
  %1020 = getelementptr inbounds %struct.Reg, %struct.Reg* %1019, i32 0, i32 0
  %RCX.i1471 = bitcast %union.anon* %1020 to i64*
  %1021 = load i8, i8* %AL.i1470
  %1022 = zext i8 %1021 to i64
  %1023 = load i64, i64* %PC.i1469
  %1024 = add i64 %1023, 3
  store i64 %1024, i64* %PC.i1469
  %1025 = and i64 %1022, 255
  store i64 %1025, i64* %RCX.i1471, align 8
  store %struct.Memory* %loadMem_48c68c, %struct.Memory** %MEMORY
  %loadMem_48c68f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1027 = getelementptr inbounds %struct.GPR, %struct.GPR* %1026, i32 0, i32 33
  %1028 = getelementptr inbounds %struct.Reg, %struct.Reg* %1027, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %1028 to i64*
  %1029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1030 = getelementptr inbounds %struct.GPR, %struct.GPR* %1029, i32 0, i32 5
  %1031 = getelementptr inbounds %struct.Reg, %struct.Reg* %1030, i32 0, i32 0
  %ECX.i1467 = bitcast %union.anon* %1031 to i32*
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1033 = getelementptr inbounds %struct.GPR, %struct.GPR* %1032, i32 0, i32 15
  %1034 = getelementptr inbounds %struct.Reg, %struct.Reg* %1033, i32 0, i32 0
  %RBP.i1468 = bitcast %union.anon* %1034 to i64*
  %1035 = load i64, i64* %RBP.i1468
  %1036 = sub i64 %1035, 100
  %1037 = load i32, i32* %ECX.i1467
  %1038 = zext i32 %1037 to i64
  %1039 = load i64, i64* %PC.i1466
  %1040 = add i64 %1039, 3
  store i64 %1040, i64* %PC.i1466
  %1041 = inttoptr i64 %1036 to i32*
  store i32 %1037, i32* %1041
  store %struct.Memory* %loadMem_48c68f, %struct.Memory** %MEMORY
  %loadMem_48c692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1043 = getelementptr inbounds %struct.GPR, %struct.GPR* %1042, i32 0, i32 33
  %1044 = getelementptr inbounds %struct.Reg, %struct.Reg* %1043, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %1044 to i64*
  %1045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1046 = getelementptr inbounds %struct.GPR, %struct.GPR* %1045, i32 0, i32 15
  %1047 = getelementptr inbounds %struct.Reg, %struct.Reg* %1046, i32 0, i32 0
  %RBP.i1465 = bitcast %union.anon* %1047 to i64*
  %1048 = load i64, i64* %RBP.i1465
  %1049 = sub i64 %1048, 112
  %1050 = load i64, i64* %PC.i1464
  %1051 = add i64 %1050, 7
  store i64 %1051, i64* %PC.i1464
  %1052 = inttoptr i64 %1049 to i32*
  store i32 0, i32* %1052
  store %struct.Memory* %loadMem_48c692, %struct.Memory** %MEMORY
  %loadMem_48c699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1054 = getelementptr inbounds %struct.GPR, %struct.GPR* %1053, i32 0, i32 33
  %1055 = getelementptr inbounds %struct.Reg, %struct.Reg* %1054, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %1055 to i64*
  %1056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1057 = getelementptr inbounds %struct.GPR, %struct.GPR* %1056, i32 0, i32 11
  %1058 = getelementptr inbounds %struct.Reg, %struct.Reg* %1057, i32 0, i32 0
  %RDI.i1462 = bitcast %union.anon* %1058 to i64*
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1060 = getelementptr inbounds %struct.GPR, %struct.GPR* %1059, i32 0, i32 15
  %1061 = getelementptr inbounds %struct.Reg, %struct.Reg* %1060, i32 0, i32 0
  %RBP.i1463 = bitcast %union.anon* %1061 to i64*
  %1062 = load i64, i64* %RBP.i1463
  %1063 = sub i64 %1062, 20
  %1064 = load i64, i64* %PC.i1461
  %1065 = add i64 %1064, 3
  store i64 %1065, i64* %PC.i1461
  %1066 = inttoptr i64 %1063 to i32*
  %1067 = load i32, i32* %1066
  %1068 = zext i32 %1067 to i64
  store i64 %1068, i64* %RDI.i1462, align 8
  store %struct.Memory* %loadMem_48c699, %struct.Memory** %MEMORY
  %loadMem1_48c69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1070 = getelementptr inbounds %struct.GPR, %struct.GPR* %1069, i32 0, i32 33
  %1071 = getelementptr inbounds %struct.Reg, %struct.Reg* %1070, i32 0, i32 0
  %PC.i1460 = bitcast %union.anon* %1071 to i64*
  %1072 = load i64, i64* %PC.i1460
  %1073 = add i64 %1072, -18044
  %1074 = load i64, i64* %PC.i1460
  %1075 = add i64 %1074, 5
  %1076 = load i64, i64* %PC.i1460
  %1077 = add i64 %1076, 5
  store i64 %1077, i64* %PC.i1460
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1079 = load i64, i64* %1078, align 8
  %1080 = add i64 %1079, -8
  %1081 = inttoptr i64 %1080 to i64*
  store i64 %1075, i64* %1081
  store i64 %1080, i64* %1078, align 8
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1073, i64* %1082, align 8
  store %struct.Memory* %loadMem1_48c69c, %struct.Memory** %MEMORY
  %loadMem2_48c69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48c69c = load i64, i64* %3
  %call2_48c69c = call %struct.Memory* @sub_488020.SetModesAndRefframeForBlocks(%struct.State* %0, i64 %loadPC_48c69c, %struct.Memory* %loadMem2_48c69c)
  store %struct.Memory* %call2_48c69c, %struct.Memory** %MEMORY
  %loadMem_48c6a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1084 = getelementptr inbounds %struct.GPR, %struct.GPR* %1083, i32 0, i32 33
  %1085 = getelementptr inbounds %struct.Reg, %struct.Reg* %1084, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %1085 to i64*
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 15
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %RBP.i1459 = bitcast %union.anon* %1088 to i64*
  %1089 = load i64, i64* %RBP.i1459
  %1090 = sub i64 %1089, 92
  %1091 = load i64, i64* %PC.i1458
  %1092 = add i64 %1091, 4
  store i64 %1092, i64* %PC.i1458
  %1093 = inttoptr i64 %1090 to i32*
  %1094 = load i32, i32* %1093
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1095, align 1
  %1096 = and i32 %1094, 255
  %1097 = call i32 @llvm.ctpop.i32(i32 %1096)
  %1098 = trunc i32 %1097 to i8
  %1099 = and i8 %1098, 1
  %1100 = xor i8 %1099, 1
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1100, i8* %1101, align 1
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1102, align 1
  %1103 = icmp eq i32 %1094, 0
  %1104 = zext i1 %1103 to i8
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1104, i8* %1105, align 1
  %1106 = lshr i32 %1094, 31
  %1107 = trunc i32 %1106 to i8
  %1108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1107, i8* %1108, align 1
  %1109 = lshr i32 %1094, 31
  %1110 = xor i32 %1106, %1109
  %1111 = add i32 %1110, %1109
  %1112 = icmp eq i32 %1111, 2
  %1113 = zext i1 %1112 to i8
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1113, i8* %1114, align 1
  store %struct.Memory* %loadMem_48c6a1, %struct.Memory** %MEMORY
  %loadMem_48c6a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1116 = getelementptr inbounds %struct.GPR, %struct.GPR* %1115, i32 0, i32 33
  %1117 = getelementptr inbounds %struct.Reg, %struct.Reg* %1116, i32 0, i32 0
  %PC.i1457 = bitcast %union.anon* %1117 to i64*
  %1118 = load i64, i64* %PC.i1457
  %1119 = add i64 %1118, 188
  %1120 = load i64, i64* %PC.i1457
  %1121 = add i64 %1120, 6
  %1122 = load i64, i64* %PC.i1457
  %1123 = add i64 %1122, 6
  store i64 %1123, i64* %PC.i1457
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1125 = load i8, i8* %1124, align 1
  store i8 %1125, i8* %BRANCH_TAKEN, align 1
  %1126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1127 = icmp ne i8 %1125, 0
  %1128 = select i1 %1127, i64 %1119, i64 %1121
  store i64 %1128, i64* %1126, align 8
  store %struct.Memory* %loadMem_48c6a5, %struct.Memory** %MEMORY
  %loadBr_48c6a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c6a5 = icmp eq i8 %loadBr_48c6a5, 1
  br i1 %cmpBr_48c6a5, label %block_.L_48c761, label %block_48c6ab

block_48c6ab:                                     ; preds = %block_.L_48c684
  %loadMem_48c6ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1130 = getelementptr inbounds %struct.GPR, %struct.GPR* %1129, i32 0, i32 33
  %1131 = getelementptr inbounds %struct.Reg, %struct.Reg* %1130, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %1131 to i64*
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 15
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %RBP.i1456 = bitcast %union.anon* %1134 to i64*
  %1135 = load i64, i64* %RBP.i1456
  %1136 = sub i64 %1135, 20
  %1137 = load i64, i64* %PC.i1455
  %1138 = add i64 %1137, 4
  store i64 %1138, i64* %PC.i1455
  %1139 = inttoptr i64 %1136 to i32*
  %1140 = load i32, i32* %1139
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1141, align 1
  %1142 = and i32 %1140, 255
  %1143 = call i32 @llvm.ctpop.i32(i32 %1142)
  %1144 = trunc i32 %1143 to i8
  %1145 = and i8 %1144, 1
  %1146 = xor i8 %1145, 1
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1146, i8* %1147, align 1
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1148, align 1
  %1149 = icmp eq i32 %1140, 0
  %1150 = zext i1 %1149 to i8
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1150, i8* %1151, align 1
  %1152 = lshr i32 %1140, 31
  %1153 = trunc i32 %1152 to i8
  %1154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1153, i8* %1154, align 1
  %1155 = lshr i32 %1140, 31
  %1156 = xor i32 %1152, %1155
  %1157 = add i32 %1156, %1155
  %1158 = icmp eq i32 %1157, 2
  %1159 = zext i1 %1158 to i8
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1159, i8* %1160, align 1
  store %struct.Memory* %loadMem_48c6ab, %struct.Memory** %MEMORY
  %loadMem_48c6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1162 = getelementptr inbounds %struct.GPR, %struct.GPR* %1161, i32 0, i32 33
  %1163 = getelementptr inbounds %struct.Reg, %struct.Reg* %1162, i32 0, i32 0
  %PC.i1454 = bitcast %union.anon* %1163 to i64*
  %1164 = load i64, i64* %PC.i1454
  %1165 = add i64 %1164, 178
  %1166 = load i64, i64* %PC.i1454
  %1167 = add i64 %1166, 6
  %1168 = load i64, i64* %PC.i1454
  %1169 = add i64 %1168, 6
  store i64 %1169, i64* %PC.i1454
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1171 = load i8, i8* %1170, align 1
  %1172 = icmp eq i8 %1171, 0
  %1173 = zext i1 %1172 to i8
  store i8 %1173, i8* %BRANCH_TAKEN, align 1
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1175 = select i1 %1172, i64 %1165, i64 %1167
  store i64 %1175, i64* %1174, align 8
  store %struct.Memory* %loadMem_48c6af, %struct.Memory** %MEMORY
  %loadBr_48c6af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c6af = icmp eq i8 %loadBr_48c6af, 1
  br i1 %cmpBr_48c6af, label %block_.L_48c761, label %block_48c6b5

block_48c6b5:                                     ; preds = %block_48c6ab
  %loadMem_48c6b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1177 = getelementptr inbounds %struct.GPR, %struct.GPR* %1176, i32 0, i32 33
  %1178 = getelementptr inbounds %struct.Reg, %struct.Reg* %1177, i32 0, i32 0
  %PC.i1452 = bitcast %union.anon* %1178 to i64*
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1180 = getelementptr inbounds %struct.GPR, %struct.GPR* %1179, i32 0, i32 1
  %1181 = getelementptr inbounds %struct.Reg, %struct.Reg* %1180, i32 0, i32 0
  %RAX.i1453 = bitcast %union.anon* %1181 to i64*
  %1182 = load i64, i64* %PC.i1452
  %1183 = add i64 %1182, 8
  store i64 %1183, i64* %PC.i1452
  %1184 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1184, i64* %RAX.i1453, align 8
  store %struct.Memory* %loadMem_48c6b5, %struct.Memory** %MEMORY
  %loadMem_48c6bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1186 = getelementptr inbounds %struct.GPR, %struct.GPR* %1185, i32 0, i32 33
  %1187 = getelementptr inbounds %struct.Reg, %struct.Reg* %1186, i32 0, i32 0
  %PC.i1449 = bitcast %union.anon* %1187 to i64*
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1189 = getelementptr inbounds %struct.GPR, %struct.GPR* %1188, i32 0, i32 1
  %1190 = getelementptr inbounds %struct.Reg, %struct.Reg* %1189, i32 0, i32 0
  %RAX.i1450 = bitcast %union.anon* %1190 to i64*
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1192 = getelementptr inbounds %struct.GPR, %struct.GPR* %1191, i32 0, i32 5
  %1193 = getelementptr inbounds %struct.Reg, %struct.Reg* %1192, i32 0, i32 0
  %RCX.i1451 = bitcast %union.anon* %1193 to i64*
  %1194 = load i64, i64* %RAX.i1450
  %1195 = add i64 %1194, 152
  %1196 = load i64, i64* %PC.i1449
  %1197 = add i64 %1196, 6
  store i64 %1197, i64* %PC.i1449
  %1198 = inttoptr i64 %1195 to i32*
  %1199 = load i32, i32* %1198
  %1200 = zext i32 %1199 to i64
  store i64 %1200, i64* %RCX.i1451, align 8
  store %struct.Memory* %loadMem_48c6bd, %struct.Memory** %MEMORY
  %loadMem_48c6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1202 = getelementptr inbounds %struct.GPR, %struct.GPR* %1201, i32 0, i32 33
  %1203 = getelementptr inbounds %struct.Reg, %struct.Reg* %1202, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %1203 to i64*
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1205 = getelementptr inbounds %struct.GPR, %struct.GPR* %1204, i32 0, i32 5
  %1206 = getelementptr inbounds %struct.Reg, %struct.Reg* %1205, i32 0, i32 0
  %RCX.i1448 = bitcast %union.anon* %1206 to i64*
  %1207 = load i64, i64* %RCX.i1448
  %1208 = load i64, i64* %PC.i1447
  %1209 = add i64 %1208, 3
  store i64 %1209, i64* %PC.i1447
  %1210 = shl i64 %1207, 32
  %1211 = ashr exact i64 %1210, 32
  %1212 = ashr i64 %1211, 1
  %1213 = lshr i64 %1212, 1
  %1214 = trunc i64 %1212 to i8
  %1215 = and i8 %1214, 1
  %1216 = trunc i64 %1213 to i32
  %1217 = and i64 %1213, 4294967295
  store i64 %1217, i64* %RCX.i1448, align 8
  %1218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1215, i8* %1218, align 1
  %1219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1220 = and i32 %1216, 255
  %1221 = call i32 @llvm.ctpop.i32(i32 %1220)
  %1222 = trunc i32 %1221 to i8
  %1223 = and i8 %1222, 1
  %1224 = xor i8 %1223, 1
  store i8 %1224, i8* %1219, align 1
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1225, align 1
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1227 = icmp eq i32 %1216, 0
  %1228 = zext i1 %1227 to i8
  store i8 %1228, i8* %1226, align 1
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1230 = lshr i32 %1216, 31
  %1231 = trunc i32 %1230 to i8
  store i8 %1231, i8* %1229, align 1
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1232, align 1
  store %struct.Memory* %loadMem_48c6c3, %struct.Memory** %MEMORY
  %loadMem_48c6c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1234 = getelementptr inbounds %struct.GPR, %struct.GPR* %1233, i32 0, i32 33
  %1235 = getelementptr inbounds %struct.Reg, %struct.Reg* %1234, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %1235 to i64*
  %1236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1237 = getelementptr inbounds %struct.GPR, %struct.GPR* %1236, i32 0, i32 5
  %1238 = getelementptr inbounds %struct.Reg, %struct.Reg* %1237, i32 0, i32 0
  %ECX.i1445 = bitcast %union.anon* %1238 to i32*
  %1239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1240 = getelementptr inbounds %struct.GPR, %struct.GPR* %1239, i32 0, i32 15
  %1241 = getelementptr inbounds %struct.Reg, %struct.Reg* %1240, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %1241 to i64*
  %1242 = load i64, i64* %RBP.i1446
  %1243 = sub i64 %1242, 120
  %1244 = load i32, i32* %ECX.i1445
  %1245 = zext i32 %1244 to i64
  %1246 = load i64, i64* %PC.i1444
  %1247 = add i64 %1246, 3
  store i64 %1247, i64* %PC.i1444
  %1248 = inttoptr i64 %1243 to i32*
  store i32 %1244, i32* %1248
  store %struct.Memory* %loadMem_48c6c6, %struct.Memory** %MEMORY
  %loadMem_48c6c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1250 = getelementptr inbounds %struct.GPR, %struct.GPR* %1249, i32 0, i32 33
  %1251 = getelementptr inbounds %struct.Reg, %struct.Reg* %1250, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %1251 to i64*
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1253 = getelementptr inbounds %struct.GPR, %struct.GPR* %1252, i32 0, i32 1
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %RAX.i1443 = bitcast %union.anon* %1254 to i64*
  %1255 = load i64, i64* %PC.i1442
  %1256 = add i64 %1255, 8
  store i64 %1256, i64* %PC.i1442
  %1257 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1257, i64* %RAX.i1443, align 8
  store %struct.Memory* %loadMem_48c6c9, %struct.Memory** %MEMORY
  %loadMem_48c6d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1259 = getelementptr inbounds %struct.GPR, %struct.GPR* %1258, i32 0, i32 33
  %1260 = getelementptr inbounds %struct.Reg, %struct.Reg* %1259, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %1260 to i64*
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 1
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %RAX.i1440 = bitcast %union.anon* %1263 to i64*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 5
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %RCX.i1441 = bitcast %union.anon* %1266 to i64*
  %1267 = load i64, i64* %RAX.i1440
  %1268 = add i64 %1267, 156
  %1269 = load i64, i64* %PC.i1439
  %1270 = add i64 %1269, 6
  store i64 %1270, i64* %PC.i1439
  %1271 = inttoptr i64 %1268 to i32*
  %1272 = load i32, i32* %1271
  %1273 = zext i32 %1272 to i64
  store i64 %1273, i64* %RCX.i1441, align 8
  store %struct.Memory* %loadMem_48c6d1, %struct.Memory** %MEMORY
  %loadMem_48c6d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1275 = getelementptr inbounds %struct.GPR, %struct.GPR* %1274, i32 0, i32 33
  %1276 = getelementptr inbounds %struct.Reg, %struct.Reg* %1275, i32 0, i32 0
  %PC.i1437 = bitcast %union.anon* %1276 to i64*
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 5
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %RCX.i1438 = bitcast %union.anon* %1279 to i64*
  %1280 = load i64, i64* %RCX.i1438
  %1281 = load i64, i64* %PC.i1437
  %1282 = add i64 %1281, 3
  store i64 %1282, i64* %PC.i1437
  %1283 = shl i64 %1280, 32
  %1284 = ashr exact i64 %1283, 32
  %1285 = ashr i64 %1284, 1
  %1286 = lshr i64 %1285, 1
  %1287 = trunc i64 %1285 to i8
  %1288 = and i8 %1287, 1
  %1289 = trunc i64 %1286 to i32
  %1290 = and i64 %1286, 4294967295
  store i64 %1290, i64* %RCX.i1438, align 8
  %1291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1288, i8* %1291, align 1
  %1292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1293 = and i32 %1289, 255
  %1294 = call i32 @llvm.ctpop.i32(i32 %1293)
  %1295 = trunc i32 %1294 to i8
  %1296 = and i8 %1295, 1
  %1297 = xor i8 %1296, 1
  store i8 %1297, i8* %1292, align 1
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1298, align 1
  %1299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1300 = icmp eq i32 %1289, 0
  %1301 = zext i1 %1300 to i8
  store i8 %1301, i8* %1299, align 1
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1303 = lshr i32 %1289, 31
  %1304 = trunc i32 %1303 to i8
  store i8 %1304, i8* %1302, align 1
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1305, align 1
  store %struct.Memory* %loadMem_48c6d7, %struct.Memory** %MEMORY
  %loadMem_48c6da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1307 = getelementptr inbounds %struct.GPR, %struct.GPR* %1306, i32 0, i32 33
  %1308 = getelementptr inbounds %struct.Reg, %struct.Reg* %1307, i32 0, i32 0
  %PC.i1434 = bitcast %union.anon* %1308 to i64*
  %1309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1310 = getelementptr inbounds %struct.GPR, %struct.GPR* %1309, i32 0, i32 5
  %1311 = getelementptr inbounds %struct.Reg, %struct.Reg* %1310, i32 0, i32 0
  %ECX.i1435 = bitcast %union.anon* %1311 to i32*
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1313 = getelementptr inbounds %struct.GPR, %struct.GPR* %1312, i32 0, i32 15
  %1314 = getelementptr inbounds %struct.Reg, %struct.Reg* %1313, i32 0, i32 0
  %RBP.i1436 = bitcast %union.anon* %1314 to i64*
  %1315 = load i64, i64* %RBP.i1436
  %1316 = sub i64 %1315, 124
  %1317 = load i32, i32* %ECX.i1435
  %1318 = zext i32 %1317 to i64
  %1319 = load i64, i64* %PC.i1434
  %1320 = add i64 %1319, 3
  store i64 %1320, i64* %PC.i1434
  %1321 = inttoptr i64 %1316 to i32*
  store i32 %1317, i32* %1321
  store %struct.Memory* %loadMem_48c6da, %struct.Memory** %MEMORY
  %loadMem_48c6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1323 = getelementptr inbounds %struct.GPR, %struct.GPR* %1322, i32 0, i32 33
  %1324 = getelementptr inbounds %struct.Reg, %struct.Reg* %1323, i32 0, i32 0
  %PC.i1432 = bitcast %union.anon* %1324 to i64*
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1326 = getelementptr inbounds %struct.GPR, %struct.GPR* %1325, i32 0, i32 15
  %1327 = getelementptr inbounds %struct.Reg, %struct.Reg* %1326, i32 0, i32 0
  %RBP.i1433 = bitcast %union.anon* %1327 to i64*
  %1328 = load i64, i64* %RBP.i1433
  %1329 = sub i64 %1328, 40
  %1330 = load i64, i64* %PC.i1432
  %1331 = add i64 %1330, 7
  store i64 %1331, i64* %PC.i1432
  %1332 = inttoptr i64 %1329 to i32*
  store i32 0, i32* %1332
  store %struct.Memory* %loadMem_48c6dd, %struct.Memory** %MEMORY
  br label %block_.L_48c6e4

block_.L_48c6e4:                                  ; preds = %block_.L_48c74e, %block_48c6b5
  %loadMem_48c6e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1334 = getelementptr inbounds %struct.GPR, %struct.GPR* %1333, i32 0, i32 33
  %1335 = getelementptr inbounds %struct.Reg, %struct.Reg* %1334, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %1335 to i64*
  %1336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1337 = getelementptr inbounds %struct.GPR, %struct.GPR* %1336, i32 0, i32 15
  %1338 = getelementptr inbounds %struct.Reg, %struct.Reg* %1337, i32 0, i32 0
  %RBP.i1431 = bitcast %union.anon* %1338 to i64*
  %1339 = load i64, i64* %RBP.i1431
  %1340 = sub i64 %1339, 40
  %1341 = load i64, i64* %PC.i1430
  %1342 = add i64 %1341, 4
  store i64 %1342, i64* %PC.i1430
  %1343 = inttoptr i64 %1340 to i32*
  %1344 = load i32, i32* %1343
  %1345 = sub i32 %1344, 4
  %1346 = icmp ult i32 %1344, 4
  %1347 = zext i1 %1346 to i8
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1347, i8* %1348, align 1
  %1349 = and i32 %1345, 255
  %1350 = call i32 @llvm.ctpop.i32(i32 %1349)
  %1351 = trunc i32 %1350 to i8
  %1352 = and i8 %1351, 1
  %1353 = xor i8 %1352, 1
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1353, i8* %1354, align 1
  %1355 = xor i32 %1344, 4
  %1356 = xor i32 %1355, %1345
  %1357 = lshr i32 %1356, 4
  %1358 = trunc i32 %1357 to i8
  %1359 = and i8 %1358, 1
  %1360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1359, i8* %1360, align 1
  %1361 = icmp eq i32 %1345, 0
  %1362 = zext i1 %1361 to i8
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1362, i8* %1363, align 1
  %1364 = lshr i32 %1345, 31
  %1365 = trunc i32 %1364 to i8
  %1366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1365, i8* %1366, align 1
  %1367 = lshr i32 %1344, 31
  %1368 = xor i32 %1364, %1367
  %1369 = add i32 %1368, %1367
  %1370 = icmp eq i32 %1369, 2
  %1371 = zext i1 %1370 to i8
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1371, i8* %1372, align 1
  store %struct.Memory* %loadMem_48c6e4, %struct.Memory** %MEMORY
  %loadMem_48c6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1374 = getelementptr inbounds %struct.GPR, %struct.GPR* %1373, i32 0, i32 33
  %1375 = getelementptr inbounds %struct.Reg, %struct.Reg* %1374, i32 0, i32 0
  %PC.i1429 = bitcast %union.anon* %1375 to i64*
  %1376 = load i64, i64* %PC.i1429
  %1377 = add i64 %1376, 116
  %1378 = load i64, i64* %PC.i1429
  %1379 = add i64 %1378, 6
  %1380 = load i64, i64* %PC.i1429
  %1381 = add i64 %1380, 6
  store i64 %1381, i64* %PC.i1429
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1383 = load i8, i8* %1382, align 1
  %1384 = icmp ne i8 %1383, 0
  %1385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1386 = load i8, i8* %1385, align 1
  %1387 = icmp ne i8 %1386, 0
  %1388 = xor i1 %1384, %1387
  %1389 = xor i1 %1388, true
  %1390 = zext i1 %1389 to i8
  store i8 %1390, i8* %BRANCH_TAKEN, align 1
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1392 = select i1 %1388, i64 %1379, i64 %1377
  store i64 %1392, i64* %1391, align 8
  store %struct.Memory* %loadMem_48c6e8, %struct.Memory** %MEMORY
  %loadBr_48c6e8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c6e8 = icmp eq i8 %loadBr_48c6e8, 1
  br i1 %cmpBr_48c6e8, label %block_.L_48c75c, label %block_48c6ee

block_48c6ee:                                     ; preds = %block_.L_48c6e4
  %loadMem_48c6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %1393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1394 = getelementptr inbounds %struct.GPR, %struct.GPR* %1393, i32 0, i32 33
  %1395 = getelementptr inbounds %struct.Reg, %struct.Reg* %1394, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %1395 to i64*
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1397 = getelementptr inbounds %struct.GPR, %struct.GPR* %1396, i32 0, i32 15
  %1398 = getelementptr inbounds %struct.Reg, %struct.Reg* %1397, i32 0, i32 0
  %RBP.i1428 = bitcast %union.anon* %1398 to i64*
  %1399 = load i64, i64* %RBP.i1428
  %1400 = sub i64 %1399, 44
  %1401 = load i64, i64* %PC.i1427
  %1402 = add i64 %1401, 7
  store i64 %1402, i64* %PC.i1427
  %1403 = inttoptr i64 %1400 to i32*
  store i32 0, i32* %1403
  store %struct.Memory* %loadMem_48c6ee, %struct.Memory** %MEMORY
  br label %block_.L_48c6f5

block_.L_48c6f5:                                  ; preds = %block_.L_48c73b, %block_48c6ee
  %loadMem_48c6f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1405 = getelementptr inbounds %struct.GPR, %struct.GPR* %1404, i32 0, i32 33
  %1406 = getelementptr inbounds %struct.Reg, %struct.Reg* %1405, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %1406 to i64*
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1408 = getelementptr inbounds %struct.GPR, %struct.GPR* %1407, i32 0, i32 15
  %1409 = getelementptr inbounds %struct.Reg, %struct.Reg* %1408, i32 0, i32 0
  %RBP.i1426 = bitcast %union.anon* %1409 to i64*
  %1410 = load i64, i64* %RBP.i1426
  %1411 = sub i64 %1410, 44
  %1412 = load i64, i64* %PC.i1425
  %1413 = add i64 %1412, 4
  store i64 %1413, i64* %PC.i1425
  %1414 = inttoptr i64 %1411 to i32*
  %1415 = load i32, i32* %1414
  %1416 = sub i32 %1415, 4
  %1417 = icmp ult i32 %1415, 4
  %1418 = zext i1 %1417 to i8
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1418, i8* %1419, align 1
  %1420 = and i32 %1416, 255
  %1421 = call i32 @llvm.ctpop.i32(i32 %1420)
  %1422 = trunc i32 %1421 to i8
  %1423 = and i8 %1422, 1
  %1424 = xor i8 %1423, 1
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1424, i8* %1425, align 1
  %1426 = xor i32 %1415, 4
  %1427 = xor i32 %1426, %1416
  %1428 = lshr i32 %1427, 4
  %1429 = trunc i32 %1428 to i8
  %1430 = and i8 %1429, 1
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1430, i8* %1431, align 1
  %1432 = icmp eq i32 %1416, 0
  %1433 = zext i1 %1432 to i8
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1433, i8* %1434, align 1
  %1435 = lshr i32 %1416, 31
  %1436 = trunc i32 %1435 to i8
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1436, i8* %1437, align 1
  %1438 = lshr i32 %1415, 31
  %1439 = xor i32 %1435, %1438
  %1440 = add i32 %1439, %1438
  %1441 = icmp eq i32 %1440, 2
  %1442 = zext i1 %1441 to i8
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1442, i8* %1443, align 1
  store %struct.Memory* %loadMem_48c6f5, %struct.Memory** %MEMORY
  %loadMem_48c6f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1445 = getelementptr inbounds %struct.GPR, %struct.GPR* %1444, i32 0, i32 33
  %1446 = getelementptr inbounds %struct.Reg, %struct.Reg* %1445, i32 0, i32 0
  %PC.i1424 = bitcast %union.anon* %1446 to i64*
  %1447 = load i64, i64* %PC.i1424
  %1448 = add i64 %1447, 80
  %1449 = load i64, i64* %PC.i1424
  %1450 = add i64 %1449, 6
  %1451 = load i64, i64* %PC.i1424
  %1452 = add i64 %1451, 6
  store i64 %1452, i64* %PC.i1424
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1454 = load i8, i8* %1453, align 1
  %1455 = icmp ne i8 %1454, 0
  %1456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1457 = load i8, i8* %1456, align 1
  %1458 = icmp ne i8 %1457, 0
  %1459 = xor i1 %1455, %1458
  %1460 = xor i1 %1459, true
  %1461 = zext i1 %1460 to i8
  store i8 %1461, i8* %BRANCH_TAKEN, align 1
  %1462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1463 = select i1 %1459, i64 %1450, i64 %1448
  store i64 %1463, i64* %1462, align 8
  store %struct.Memory* %loadMem_48c6f9, %struct.Memory** %MEMORY
  %loadBr_48c6f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c6f9 = icmp eq i8 %loadBr_48c6f9, 1
  br i1 %cmpBr_48c6f9, label %block_.L_48c749, label %block_48c6ff

block_48c6ff:                                     ; preds = %block_.L_48c6f5
  %loadMem_48c6ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1465 = getelementptr inbounds %struct.GPR, %struct.GPR* %1464, i32 0, i32 33
  %1466 = getelementptr inbounds %struct.Reg, %struct.Reg* %1465, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %1466 to i64*
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1468 = getelementptr inbounds %struct.GPR, %struct.GPR* %1467, i32 0, i32 1
  %1469 = getelementptr inbounds %struct.Reg, %struct.Reg* %1468, i32 0, i32 0
  %RAX.i1423 = bitcast %union.anon* %1469 to i64*
  %1470 = load i64, i64* %PC.i1422
  %1471 = add i64 %1470, 8
  store i64 %1471, i64* %PC.i1422
  %1472 = load i64, i64* bitcast (%G_0x722cb8_type* @G_0x722cb8 to i64*)
  store i64 %1472, i64* %RAX.i1423, align 8
  store %struct.Memory* %loadMem_48c6ff, %struct.Memory** %MEMORY
  %loadMem_48c707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1474 = getelementptr inbounds %struct.GPR, %struct.GPR* %1473, i32 0, i32 33
  %1475 = getelementptr inbounds %struct.Reg, %struct.Reg* %1474, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %1475 to i64*
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1477 = getelementptr inbounds %struct.GPR, %struct.GPR* %1476, i32 0, i32 5
  %1478 = getelementptr inbounds %struct.Reg, %struct.Reg* %1477, i32 0, i32 0
  %RCX.i1420 = bitcast %union.anon* %1478 to i64*
  %1479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1480 = getelementptr inbounds %struct.GPR, %struct.GPR* %1479, i32 0, i32 15
  %1481 = getelementptr inbounds %struct.Reg, %struct.Reg* %1480, i32 0, i32 0
  %RBP.i1421 = bitcast %union.anon* %1481 to i64*
  %1482 = load i64, i64* %RBP.i1421
  %1483 = sub i64 %1482, 120
  %1484 = load i64, i64* %PC.i1419
  %1485 = add i64 %1484, 3
  store i64 %1485, i64* %PC.i1419
  %1486 = inttoptr i64 %1483 to i32*
  %1487 = load i32, i32* %1486
  %1488 = zext i32 %1487 to i64
  store i64 %1488, i64* %RCX.i1420, align 8
  store %struct.Memory* %loadMem_48c707, %struct.Memory** %MEMORY
  %loadMem_48c70a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1490 = getelementptr inbounds %struct.GPR, %struct.GPR* %1489, i32 0, i32 33
  %1491 = getelementptr inbounds %struct.Reg, %struct.Reg* %1490, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %1491 to i64*
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1493 = getelementptr inbounds %struct.GPR, %struct.GPR* %1492, i32 0, i32 5
  %1494 = getelementptr inbounds %struct.Reg, %struct.Reg* %1493, i32 0, i32 0
  %RCX.i1417 = bitcast %union.anon* %1494 to i64*
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 15
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %RBP.i1418 = bitcast %union.anon* %1497 to i64*
  %1498 = load i64, i64* %RCX.i1417
  %1499 = load i64, i64* %RBP.i1418
  %1500 = sub i64 %1499, 40
  %1501 = load i64, i64* %PC.i1416
  %1502 = add i64 %1501, 3
  store i64 %1502, i64* %PC.i1416
  %1503 = trunc i64 %1498 to i32
  %1504 = inttoptr i64 %1500 to i32*
  %1505 = load i32, i32* %1504
  %1506 = add i32 %1505, %1503
  %1507 = zext i32 %1506 to i64
  store i64 %1507, i64* %RCX.i1417, align 8
  %1508 = icmp ult i32 %1506, %1503
  %1509 = icmp ult i32 %1506, %1505
  %1510 = or i1 %1508, %1509
  %1511 = zext i1 %1510 to i8
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1511, i8* %1512, align 1
  %1513 = and i32 %1506, 255
  %1514 = call i32 @llvm.ctpop.i32(i32 %1513)
  %1515 = trunc i32 %1514 to i8
  %1516 = and i8 %1515, 1
  %1517 = xor i8 %1516, 1
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1517, i8* %1518, align 1
  %1519 = xor i32 %1505, %1503
  %1520 = xor i32 %1519, %1506
  %1521 = lshr i32 %1520, 4
  %1522 = trunc i32 %1521 to i8
  %1523 = and i8 %1522, 1
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1523, i8* %1524, align 1
  %1525 = icmp eq i32 %1506, 0
  %1526 = zext i1 %1525 to i8
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1526, i8* %1527, align 1
  %1528 = lshr i32 %1506, 31
  %1529 = trunc i32 %1528 to i8
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1529, i8* %1530, align 1
  %1531 = lshr i32 %1503, 31
  %1532 = lshr i32 %1505, 31
  %1533 = xor i32 %1528, %1531
  %1534 = xor i32 %1528, %1532
  %1535 = add i32 %1533, %1534
  %1536 = icmp eq i32 %1535, 2
  %1537 = zext i1 %1536 to i8
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1537, i8* %1538, align 1
  store %struct.Memory* %loadMem_48c70a, %struct.Memory** %MEMORY
  %loadMem_48c70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1540 = getelementptr inbounds %struct.GPR, %struct.GPR* %1539, i32 0, i32 33
  %1541 = getelementptr inbounds %struct.Reg, %struct.Reg* %1540, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %1541 to i64*
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1543 = getelementptr inbounds %struct.GPR, %struct.GPR* %1542, i32 0, i32 5
  %1544 = getelementptr inbounds %struct.Reg, %struct.Reg* %1543, i32 0, i32 0
  %ECX.i1414 = bitcast %union.anon* %1544 to i32*
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1546 = getelementptr inbounds %struct.GPR, %struct.GPR* %1545, i32 0, i32 7
  %1547 = getelementptr inbounds %struct.Reg, %struct.Reg* %1546, i32 0, i32 0
  %RDX.i1415 = bitcast %union.anon* %1547 to i64*
  %1548 = load i32, i32* %ECX.i1414
  %1549 = zext i32 %1548 to i64
  %1550 = load i64, i64* %PC.i1413
  %1551 = add i64 %1550, 3
  store i64 %1551, i64* %PC.i1413
  %1552 = shl i64 %1549, 32
  %1553 = ashr exact i64 %1552, 32
  store i64 %1553, i64* %RDX.i1415, align 8
  store %struct.Memory* %loadMem_48c70d, %struct.Memory** %MEMORY
  %loadMem_48c710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1555 = getelementptr inbounds %struct.GPR, %struct.GPR* %1554, i32 0, i32 33
  %1556 = getelementptr inbounds %struct.Reg, %struct.Reg* %1555, i32 0, i32 0
  %PC.i1410 = bitcast %union.anon* %1556 to i64*
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1558 = getelementptr inbounds %struct.GPR, %struct.GPR* %1557, i32 0, i32 1
  %1559 = getelementptr inbounds %struct.Reg, %struct.Reg* %1558, i32 0, i32 0
  %RAX.i1411 = bitcast %union.anon* %1559 to i64*
  %1560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1561 = getelementptr inbounds %struct.GPR, %struct.GPR* %1560, i32 0, i32 7
  %1562 = getelementptr inbounds %struct.Reg, %struct.Reg* %1561, i32 0, i32 0
  %RDX.i1412 = bitcast %union.anon* %1562 to i64*
  %1563 = load i64, i64* %RAX.i1411
  %1564 = load i64, i64* %RDX.i1412
  %1565 = mul i64 %1564, 8
  %1566 = add i64 %1565, %1563
  %1567 = load i64, i64* %PC.i1410
  %1568 = add i64 %1567, 4
  store i64 %1568, i64* %PC.i1410
  %1569 = inttoptr i64 %1566 to i64*
  %1570 = load i64, i64* %1569
  store i64 %1570, i64* %RAX.i1411, align 8
  store %struct.Memory* %loadMem_48c710, %struct.Memory** %MEMORY
  %loadMem_48c714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1572 = getelementptr inbounds %struct.GPR, %struct.GPR* %1571, i32 0, i32 33
  %1573 = getelementptr inbounds %struct.Reg, %struct.Reg* %1572, i32 0, i32 0
  %PC.i1407 = bitcast %union.anon* %1573 to i64*
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1575 = getelementptr inbounds %struct.GPR, %struct.GPR* %1574, i32 0, i32 5
  %1576 = getelementptr inbounds %struct.Reg, %struct.Reg* %1575, i32 0, i32 0
  %RCX.i1408 = bitcast %union.anon* %1576 to i64*
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1578 = getelementptr inbounds %struct.GPR, %struct.GPR* %1577, i32 0, i32 15
  %1579 = getelementptr inbounds %struct.Reg, %struct.Reg* %1578, i32 0, i32 0
  %RBP.i1409 = bitcast %union.anon* %1579 to i64*
  %1580 = load i64, i64* %RBP.i1409
  %1581 = sub i64 %1580, 124
  %1582 = load i64, i64* %PC.i1407
  %1583 = add i64 %1582, 3
  store i64 %1583, i64* %PC.i1407
  %1584 = inttoptr i64 %1581 to i32*
  %1585 = load i32, i32* %1584
  %1586 = zext i32 %1585 to i64
  store i64 %1586, i64* %RCX.i1408, align 8
  store %struct.Memory* %loadMem_48c714, %struct.Memory** %MEMORY
  %loadMem_48c717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1588 = getelementptr inbounds %struct.GPR, %struct.GPR* %1587, i32 0, i32 33
  %1589 = getelementptr inbounds %struct.Reg, %struct.Reg* %1588, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %1589 to i64*
  %1590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1591 = getelementptr inbounds %struct.GPR, %struct.GPR* %1590, i32 0, i32 5
  %1592 = getelementptr inbounds %struct.Reg, %struct.Reg* %1591, i32 0, i32 0
  %RCX.i1405 = bitcast %union.anon* %1592 to i64*
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1594 = getelementptr inbounds %struct.GPR, %struct.GPR* %1593, i32 0, i32 15
  %1595 = getelementptr inbounds %struct.Reg, %struct.Reg* %1594, i32 0, i32 0
  %RBP.i1406 = bitcast %union.anon* %1595 to i64*
  %1596 = load i64, i64* %RCX.i1405
  %1597 = load i64, i64* %RBP.i1406
  %1598 = sub i64 %1597, 44
  %1599 = load i64, i64* %PC.i1404
  %1600 = add i64 %1599, 3
  store i64 %1600, i64* %PC.i1404
  %1601 = trunc i64 %1596 to i32
  %1602 = inttoptr i64 %1598 to i32*
  %1603 = load i32, i32* %1602
  %1604 = add i32 %1603, %1601
  %1605 = zext i32 %1604 to i64
  store i64 %1605, i64* %RCX.i1405, align 8
  %1606 = icmp ult i32 %1604, %1601
  %1607 = icmp ult i32 %1604, %1603
  %1608 = or i1 %1606, %1607
  %1609 = zext i1 %1608 to i8
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1609, i8* %1610, align 1
  %1611 = and i32 %1604, 255
  %1612 = call i32 @llvm.ctpop.i32(i32 %1611)
  %1613 = trunc i32 %1612 to i8
  %1614 = and i8 %1613, 1
  %1615 = xor i8 %1614, 1
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1615, i8* %1616, align 1
  %1617 = xor i32 %1603, %1601
  %1618 = xor i32 %1617, %1604
  %1619 = lshr i32 %1618, 4
  %1620 = trunc i32 %1619 to i8
  %1621 = and i8 %1620, 1
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1621, i8* %1622, align 1
  %1623 = icmp eq i32 %1604, 0
  %1624 = zext i1 %1623 to i8
  %1625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1624, i8* %1625, align 1
  %1626 = lshr i32 %1604, 31
  %1627 = trunc i32 %1626 to i8
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1627, i8* %1628, align 1
  %1629 = lshr i32 %1601, 31
  %1630 = lshr i32 %1603, 31
  %1631 = xor i32 %1626, %1629
  %1632 = xor i32 %1626, %1630
  %1633 = add i32 %1631, %1632
  %1634 = icmp eq i32 %1633, 2
  %1635 = zext i1 %1634 to i8
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1635, i8* %1636, align 1
  store %struct.Memory* %loadMem_48c717, %struct.Memory** %MEMORY
  %loadMem_48c71a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1638 = getelementptr inbounds %struct.GPR, %struct.GPR* %1637, i32 0, i32 33
  %1639 = getelementptr inbounds %struct.Reg, %struct.Reg* %1638, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %1639 to i64*
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1641 = getelementptr inbounds %struct.GPR, %struct.GPR* %1640, i32 0, i32 5
  %1642 = getelementptr inbounds %struct.Reg, %struct.Reg* %1641, i32 0, i32 0
  %ECX.i1402 = bitcast %union.anon* %1642 to i32*
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1644 = getelementptr inbounds %struct.GPR, %struct.GPR* %1643, i32 0, i32 7
  %1645 = getelementptr inbounds %struct.Reg, %struct.Reg* %1644, i32 0, i32 0
  %RDX.i1403 = bitcast %union.anon* %1645 to i64*
  %1646 = load i32, i32* %ECX.i1402
  %1647 = zext i32 %1646 to i64
  %1648 = load i64, i64* %PC.i1401
  %1649 = add i64 %1648, 3
  store i64 %1649, i64* %PC.i1401
  %1650 = shl i64 %1647, 32
  %1651 = ashr exact i64 %1650, 32
  store i64 %1651, i64* %RDX.i1403, align 8
  store %struct.Memory* %loadMem_48c71a, %struct.Memory** %MEMORY
  %loadMem_48c71d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1653 = getelementptr inbounds %struct.GPR, %struct.GPR* %1652, i32 0, i32 33
  %1654 = getelementptr inbounds %struct.Reg, %struct.Reg* %1653, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %1654 to i64*
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1656 = getelementptr inbounds %struct.GPR, %struct.GPR* %1655, i32 0, i32 1
  %1657 = getelementptr inbounds %struct.Reg, %struct.Reg* %1656, i32 0, i32 0
  %RAX.i1398 = bitcast %union.anon* %1657 to i64*
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 5
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %RCX.i1399 = bitcast %union.anon* %1660 to i64*
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 7
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %RDX.i1400 = bitcast %union.anon* %1663 to i64*
  %1664 = load i64, i64* %RAX.i1398
  %1665 = load i64, i64* %RDX.i1400
  %1666 = mul i64 %1665, 2
  %1667 = add i64 %1666, %1664
  %1668 = load i64, i64* %PC.i1397
  %1669 = add i64 %1668, 4
  store i64 %1669, i64* %PC.i1397
  %1670 = inttoptr i64 %1667 to i16*
  %1671 = load i16, i16* %1670
  %1672 = sext i16 %1671 to i64
  %1673 = and i64 %1672, 4294967295
  store i64 %1673, i64* %RCX.i1399, align 8
  store %struct.Memory* %loadMem_48c71d, %struct.Memory** %MEMORY
  %loadMem_48c721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 33
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %1676 to i64*
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 5
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %ECX.i1396 = bitcast %union.anon* %1679 to i32*
  %1680 = load i32, i32* %ECX.i1396
  %1681 = zext i32 %1680 to i64
  %1682 = load i64, i64* %PC.i1395
  %1683 = add i64 %1682, 3
  store i64 %1683, i64* %PC.i1395
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1684, align 1
  %1685 = and i32 %1680, 255
  %1686 = call i32 @llvm.ctpop.i32(i32 %1685)
  %1687 = trunc i32 %1686 to i8
  %1688 = and i8 %1687, 1
  %1689 = xor i8 %1688, 1
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1689, i8* %1690, align 1
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1691, align 1
  %1692 = icmp eq i32 %1680, 0
  %1693 = zext i1 %1692 to i8
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1693, i8* %1694, align 1
  %1695 = lshr i32 %1680, 31
  %1696 = trunc i32 %1695 to i8
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1696, i8* %1697, align 1
  %1698 = lshr i32 %1680, 31
  %1699 = xor i32 %1695, %1698
  %1700 = add i32 %1699, %1698
  %1701 = icmp eq i32 %1700, 2
  %1702 = zext i1 %1701 to i8
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1702, i8* %1703, align 1
  store %struct.Memory* %loadMem_48c721, %struct.Memory** %MEMORY
  %loadMem_48c724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 33
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %1706 to i64*
  %1707 = load i64, i64* %PC.i1394
  %1708 = add i64 %1707, 18
  %1709 = load i64, i64* %PC.i1394
  %1710 = add i64 %1709, 6
  %1711 = load i64, i64* %PC.i1394
  %1712 = add i64 %1711, 6
  store i64 %1712, i64* %PC.i1394
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1714 = load i8, i8* %1713, align 1
  %1715 = icmp ne i8 %1714, 0
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1717 = load i8, i8* %1716, align 1
  %1718 = icmp ne i8 %1717, 0
  %1719 = xor i1 %1715, %1718
  %1720 = xor i1 %1719, true
  %1721 = zext i1 %1720 to i8
  store i8 %1721, i8* %BRANCH_TAKEN, align 1
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1723 = select i1 %1719, i64 %1710, i64 %1708
  store i64 %1723, i64* %1722, align 8
  store %struct.Memory* %loadMem_48c724, %struct.Memory** %MEMORY
  %loadBr_48c724 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c724 = icmp eq i8 %loadBr_48c724, 1
  br i1 %cmpBr_48c724, label %block_.L_48c736, label %block_48c72a

block_48c72a:                                     ; preds = %block_48c6ff
  %loadMem_48c72a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1725 = getelementptr inbounds %struct.GPR, %struct.GPR* %1724, i32 0, i32 33
  %1726 = getelementptr inbounds %struct.Reg, %struct.Reg* %1725, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %1726 to i64*
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1728 = getelementptr inbounds %struct.GPR, %struct.GPR* %1727, i32 0, i32 15
  %1729 = getelementptr inbounds %struct.Reg, %struct.Reg* %1728, i32 0, i32 0
  %RBP.i1393 = bitcast %union.anon* %1729 to i64*
  %1730 = load i64, i64* %RBP.i1393
  %1731 = sub i64 %1730, 4
  %1732 = load i64, i64* %PC.i1392
  %1733 = add i64 %1732, 7
  store i64 %1733, i64* %PC.i1392
  %1734 = inttoptr i64 %1731 to i32*
  store i32 0, i32* %1734
  store %struct.Memory* %loadMem_48c72a, %struct.Memory** %MEMORY
  %loadMem_48c731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1736 = getelementptr inbounds %struct.GPR, %struct.GPR* %1735, i32 0, i32 33
  %1737 = getelementptr inbounds %struct.Reg, %struct.Reg* %1736, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %1737 to i64*
  %1738 = load i64, i64* %PC.i1391
  %1739 = add i64 %1738, 3072
  %1740 = load i64, i64* %PC.i1391
  %1741 = add i64 %1740, 5
  store i64 %1741, i64* %PC.i1391
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1739, i64* %1742, align 8
  store %struct.Memory* %loadMem_48c731, %struct.Memory** %MEMORY
  br label %block_.L_48d331

block_.L_48c736:                                  ; preds = %block_48c6ff
  %loadMem_48c736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1744 = getelementptr inbounds %struct.GPR, %struct.GPR* %1743, i32 0, i32 33
  %1745 = getelementptr inbounds %struct.Reg, %struct.Reg* %1744, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %1745 to i64*
  %1746 = load i64, i64* %PC.i1390
  %1747 = add i64 %1746, 5
  %1748 = load i64, i64* %PC.i1390
  %1749 = add i64 %1748, 5
  store i64 %1749, i64* %PC.i1390
  %1750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1747, i64* %1750, align 8
  store %struct.Memory* %loadMem_48c736, %struct.Memory** %MEMORY
  br label %block_.L_48c73b

block_.L_48c73b:                                  ; preds = %block_.L_48c736
  %loadMem_48c73b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1752 = getelementptr inbounds %struct.GPR, %struct.GPR* %1751, i32 0, i32 33
  %1753 = getelementptr inbounds %struct.Reg, %struct.Reg* %1752, i32 0, i32 0
  %PC.i1387 = bitcast %union.anon* %1753 to i64*
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1755 = getelementptr inbounds %struct.GPR, %struct.GPR* %1754, i32 0, i32 1
  %1756 = getelementptr inbounds %struct.Reg, %struct.Reg* %1755, i32 0, i32 0
  %RAX.i1388 = bitcast %union.anon* %1756 to i64*
  %1757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1758 = getelementptr inbounds %struct.GPR, %struct.GPR* %1757, i32 0, i32 15
  %1759 = getelementptr inbounds %struct.Reg, %struct.Reg* %1758, i32 0, i32 0
  %RBP.i1389 = bitcast %union.anon* %1759 to i64*
  %1760 = load i64, i64* %RBP.i1389
  %1761 = sub i64 %1760, 44
  %1762 = load i64, i64* %PC.i1387
  %1763 = add i64 %1762, 3
  store i64 %1763, i64* %PC.i1387
  %1764 = inttoptr i64 %1761 to i32*
  %1765 = load i32, i32* %1764
  %1766 = zext i32 %1765 to i64
  store i64 %1766, i64* %RAX.i1388, align 8
  store %struct.Memory* %loadMem_48c73b, %struct.Memory** %MEMORY
  %loadMem_48c73e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1768 = getelementptr inbounds %struct.GPR, %struct.GPR* %1767, i32 0, i32 33
  %1769 = getelementptr inbounds %struct.Reg, %struct.Reg* %1768, i32 0, i32 0
  %PC.i1385 = bitcast %union.anon* %1769 to i64*
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1771 = getelementptr inbounds %struct.GPR, %struct.GPR* %1770, i32 0, i32 1
  %1772 = getelementptr inbounds %struct.Reg, %struct.Reg* %1771, i32 0, i32 0
  %RAX.i1386 = bitcast %union.anon* %1772 to i64*
  %1773 = load i64, i64* %RAX.i1386
  %1774 = load i64, i64* %PC.i1385
  %1775 = add i64 %1774, 3
  store i64 %1775, i64* %PC.i1385
  %1776 = trunc i64 %1773 to i32
  %1777 = add i32 1, %1776
  %1778 = zext i32 %1777 to i64
  store i64 %1778, i64* %RAX.i1386, align 8
  %1779 = icmp ult i32 %1777, %1776
  %1780 = icmp ult i32 %1777, 1
  %1781 = or i1 %1779, %1780
  %1782 = zext i1 %1781 to i8
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1782, i8* %1783, align 1
  %1784 = and i32 %1777, 255
  %1785 = call i32 @llvm.ctpop.i32(i32 %1784)
  %1786 = trunc i32 %1785 to i8
  %1787 = and i8 %1786, 1
  %1788 = xor i8 %1787, 1
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1788, i8* %1789, align 1
  %1790 = xor i64 1, %1773
  %1791 = trunc i64 %1790 to i32
  %1792 = xor i32 %1791, %1777
  %1793 = lshr i32 %1792, 4
  %1794 = trunc i32 %1793 to i8
  %1795 = and i8 %1794, 1
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1795, i8* %1796, align 1
  %1797 = icmp eq i32 %1777, 0
  %1798 = zext i1 %1797 to i8
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1798, i8* %1799, align 1
  %1800 = lshr i32 %1777, 31
  %1801 = trunc i32 %1800 to i8
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1801, i8* %1802, align 1
  %1803 = lshr i32 %1776, 31
  %1804 = xor i32 %1800, %1803
  %1805 = add i32 %1804, %1800
  %1806 = icmp eq i32 %1805, 2
  %1807 = zext i1 %1806 to i8
  %1808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1807, i8* %1808, align 1
  store %struct.Memory* %loadMem_48c73e, %struct.Memory** %MEMORY
  %loadMem_48c741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1810 = getelementptr inbounds %struct.GPR, %struct.GPR* %1809, i32 0, i32 33
  %1811 = getelementptr inbounds %struct.Reg, %struct.Reg* %1810, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %1811 to i64*
  %1812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1813 = getelementptr inbounds %struct.GPR, %struct.GPR* %1812, i32 0, i32 1
  %1814 = getelementptr inbounds %struct.Reg, %struct.Reg* %1813, i32 0, i32 0
  %EAX.i1383 = bitcast %union.anon* %1814 to i32*
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1816 = getelementptr inbounds %struct.GPR, %struct.GPR* %1815, i32 0, i32 15
  %1817 = getelementptr inbounds %struct.Reg, %struct.Reg* %1816, i32 0, i32 0
  %RBP.i1384 = bitcast %union.anon* %1817 to i64*
  %1818 = load i64, i64* %RBP.i1384
  %1819 = sub i64 %1818, 44
  %1820 = load i32, i32* %EAX.i1383
  %1821 = zext i32 %1820 to i64
  %1822 = load i64, i64* %PC.i1382
  %1823 = add i64 %1822, 3
  store i64 %1823, i64* %PC.i1382
  %1824 = inttoptr i64 %1819 to i32*
  store i32 %1820, i32* %1824
  store %struct.Memory* %loadMem_48c741, %struct.Memory** %MEMORY
  %loadMem_48c744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1826 = getelementptr inbounds %struct.GPR, %struct.GPR* %1825, i32 0, i32 33
  %1827 = getelementptr inbounds %struct.Reg, %struct.Reg* %1826, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %1827 to i64*
  %1828 = load i64, i64* %PC.i1381
  %1829 = add i64 %1828, -79
  %1830 = load i64, i64* %PC.i1381
  %1831 = add i64 %1830, 5
  store i64 %1831, i64* %PC.i1381
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1829, i64* %1832, align 8
  store %struct.Memory* %loadMem_48c744, %struct.Memory** %MEMORY
  br label %block_.L_48c6f5

block_.L_48c749:                                  ; preds = %block_.L_48c6f5
  %loadMem_48c749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1834 = getelementptr inbounds %struct.GPR, %struct.GPR* %1833, i32 0, i32 33
  %1835 = getelementptr inbounds %struct.Reg, %struct.Reg* %1834, i32 0, i32 0
  %PC.i1380 = bitcast %union.anon* %1835 to i64*
  %1836 = load i64, i64* %PC.i1380
  %1837 = add i64 %1836, 5
  %1838 = load i64, i64* %PC.i1380
  %1839 = add i64 %1838, 5
  store i64 %1839, i64* %PC.i1380
  %1840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1837, i64* %1840, align 8
  store %struct.Memory* %loadMem_48c749, %struct.Memory** %MEMORY
  br label %block_.L_48c74e

block_.L_48c74e:                                  ; preds = %block_.L_48c749
  %loadMem_48c74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1842 = getelementptr inbounds %struct.GPR, %struct.GPR* %1841, i32 0, i32 33
  %1843 = getelementptr inbounds %struct.Reg, %struct.Reg* %1842, i32 0, i32 0
  %PC.i1377 = bitcast %union.anon* %1843 to i64*
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1845 = getelementptr inbounds %struct.GPR, %struct.GPR* %1844, i32 0, i32 1
  %1846 = getelementptr inbounds %struct.Reg, %struct.Reg* %1845, i32 0, i32 0
  %RAX.i1378 = bitcast %union.anon* %1846 to i64*
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1848 = getelementptr inbounds %struct.GPR, %struct.GPR* %1847, i32 0, i32 15
  %1849 = getelementptr inbounds %struct.Reg, %struct.Reg* %1848, i32 0, i32 0
  %RBP.i1379 = bitcast %union.anon* %1849 to i64*
  %1850 = load i64, i64* %RBP.i1379
  %1851 = sub i64 %1850, 40
  %1852 = load i64, i64* %PC.i1377
  %1853 = add i64 %1852, 3
  store i64 %1853, i64* %PC.i1377
  %1854 = inttoptr i64 %1851 to i32*
  %1855 = load i32, i32* %1854
  %1856 = zext i32 %1855 to i64
  store i64 %1856, i64* %RAX.i1378, align 8
  store %struct.Memory* %loadMem_48c74e, %struct.Memory** %MEMORY
  %loadMem_48c751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1858 = getelementptr inbounds %struct.GPR, %struct.GPR* %1857, i32 0, i32 33
  %1859 = getelementptr inbounds %struct.Reg, %struct.Reg* %1858, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %1859 to i64*
  %1860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1861 = getelementptr inbounds %struct.GPR, %struct.GPR* %1860, i32 0, i32 1
  %1862 = getelementptr inbounds %struct.Reg, %struct.Reg* %1861, i32 0, i32 0
  %RAX.i1376 = bitcast %union.anon* %1862 to i64*
  %1863 = load i64, i64* %RAX.i1376
  %1864 = load i64, i64* %PC.i1375
  %1865 = add i64 %1864, 3
  store i64 %1865, i64* %PC.i1375
  %1866 = trunc i64 %1863 to i32
  %1867 = add i32 1, %1866
  %1868 = zext i32 %1867 to i64
  store i64 %1868, i64* %RAX.i1376, align 8
  %1869 = icmp ult i32 %1867, %1866
  %1870 = icmp ult i32 %1867, 1
  %1871 = or i1 %1869, %1870
  %1872 = zext i1 %1871 to i8
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1872, i8* %1873, align 1
  %1874 = and i32 %1867, 255
  %1875 = call i32 @llvm.ctpop.i32(i32 %1874)
  %1876 = trunc i32 %1875 to i8
  %1877 = and i8 %1876, 1
  %1878 = xor i8 %1877, 1
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1878, i8* %1879, align 1
  %1880 = xor i64 1, %1863
  %1881 = trunc i64 %1880 to i32
  %1882 = xor i32 %1881, %1867
  %1883 = lshr i32 %1882, 4
  %1884 = trunc i32 %1883 to i8
  %1885 = and i8 %1884, 1
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1885, i8* %1886, align 1
  %1887 = icmp eq i32 %1867, 0
  %1888 = zext i1 %1887 to i8
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1888, i8* %1889, align 1
  %1890 = lshr i32 %1867, 31
  %1891 = trunc i32 %1890 to i8
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1891, i8* %1892, align 1
  %1893 = lshr i32 %1866, 31
  %1894 = xor i32 %1890, %1893
  %1895 = add i32 %1894, %1890
  %1896 = icmp eq i32 %1895, 2
  %1897 = zext i1 %1896 to i8
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1897, i8* %1898, align 1
  store %struct.Memory* %loadMem_48c751, %struct.Memory** %MEMORY
  %loadMem_48c754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1900 = getelementptr inbounds %struct.GPR, %struct.GPR* %1899, i32 0, i32 33
  %1901 = getelementptr inbounds %struct.Reg, %struct.Reg* %1900, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %1901 to i64*
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1903 = getelementptr inbounds %struct.GPR, %struct.GPR* %1902, i32 0, i32 1
  %1904 = getelementptr inbounds %struct.Reg, %struct.Reg* %1903, i32 0, i32 0
  %EAX.i1373 = bitcast %union.anon* %1904 to i32*
  %1905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1906 = getelementptr inbounds %struct.GPR, %struct.GPR* %1905, i32 0, i32 15
  %1907 = getelementptr inbounds %struct.Reg, %struct.Reg* %1906, i32 0, i32 0
  %RBP.i1374 = bitcast %union.anon* %1907 to i64*
  %1908 = load i64, i64* %RBP.i1374
  %1909 = sub i64 %1908, 40
  %1910 = load i32, i32* %EAX.i1373
  %1911 = zext i32 %1910 to i64
  %1912 = load i64, i64* %PC.i1372
  %1913 = add i64 %1912, 3
  store i64 %1913, i64* %PC.i1372
  %1914 = inttoptr i64 %1909 to i32*
  store i32 %1910, i32* %1914
  store %struct.Memory* %loadMem_48c754, %struct.Memory** %MEMORY
  %loadMem_48c757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1916 = getelementptr inbounds %struct.GPR, %struct.GPR* %1915, i32 0, i32 33
  %1917 = getelementptr inbounds %struct.Reg, %struct.Reg* %1916, i32 0, i32 0
  %PC.i1371 = bitcast %union.anon* %1917 to i64*
  %1918 = load i64, i64* %PC.i1371
  %1919 = add i64 %1918, -115
  %1920 = load i64, i64* %PC.i1371
  %1921 = add i64 %1920, 5
  store i64 %1921, i64* %PC.i1371
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1919, i64* %1922, align 8
  store %struct.Memory* %loadMem_48c757, %struct.Memory** %MEMORY
  br label %block_.L_48c6e4

block_.L_48c75c:                                  ; preds = %block_.L_48c6e4
  %loadMem_48c75c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1924 = getelementptr inbounds %struct.GPR, %struct.GPR* %1923, i32 0, i32 33
  %1925 = getelementptr inbounds %struct.Reg, %struct.Reg* %1924, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %1925 to i64*
  %1926 = load i64, i64* %PC.i1370
  %1927 = add i64 %1926, 5
  %1928 = load i64, i64* %PC.i1370
  %1929 = add i64 %1928, 5
  store i64 %1929, i64* %PC.i1370
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1927, i64* %1930, align 8
  store %struct.Memory* %loadMem_48c75c, %struct.Memory** %MEMORY
  br label %block_.L_48c761

block_.L_48c761:                                  ; preds = %block_.L_48c75c, %block_48c6ab, %block_.L_48c684
  %loadMem_48c761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1932 = getelementptr inbounds %struct.GPR, %struct.GPR* %1931, i32 0, i32 33
  %1933 = getelementptr inbounds %struct.Reg, %struct.Reg* %1932, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %1933 to i64*
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1935 = getelementptr inbounds %struct.GPR, %struct.GPR* %1934, i32 0, i32 15
  %1936 = getelementptr inbounds %struct.Reg, %struct.Reg* %1935, i32 0, i32 0
  %RBP.i1369 = bitcast %union.anon* %1936 to i64*
  %1937 = load i64, i64* %RBP.i1369
  %1938 = sub i64 %1937, 20
  %1939 = load i64, i64* %PC.i1368
  %1940 = add i64 %1939, 4
  store i64 %1940, i64* %PC.i1368
  %1941 = inttoptr i64 %1938 to i32*
  %1942 = load i32, i32* %1941
  %1943 = sub i32 %1942, 8
  %1944 = icmp ult i32 %1942, 8
  %1945 = zext i1 %1944 to i8
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1945, i8* %1946, align 1
  %1947 = and i32 %1943, 255
  %1948 = call i32 @llvm.ctpop.i32(i32 %1947)
  %1949 = trunc i32 %1948 to i8
  %1950 = and i8 %1949, 1
  %1951 = xor i8 %1950, 1
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1951, i8* %1952, align 1
  %1953 = xor i32 %1942, 8
  %1954 = xor i32 %1953, %1943
  %1955 = lshr i32 %1954, 4
  %1956 = trunc i32 %1955 to i8
  %1957 = and i8 %1956, 1
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1957, i8* %1958, align 1
  %1959 = icmp eq i32 %1943, 0
  %1960 = zext i1 %1959 to i8
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1960, i8* %1961, align 1
  %1962 = lshr i32 %1943, 31
  %1963 = trunc i32 %1962 to i8
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1963, i8* %1964, align 1
  %1965 = lshr i32 %1942, 31
  %1966 = xor i32 %1962, %1965
  %1967 = add i32 %1966, %1965
  %1968 = icmp eq i32 %1967, 2
  %1969 = zext i1 %1968 to i8
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1969, i8* %1970, align 1
  store %struct.Memory* %loadMem_48c761, %struct.Memory** %MEMORY
  %loadMem_48c765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1972 = getelementptr inbounds %struct.GPR, %struct.GPR* %1971, i32 0, i32 33
  %1973 = getelementptr inbounds %struct.Reg, %struct.Reg* %1972, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %1973 to i64*
  %1974 = load i64, i64* %PC.i1367
  %1975 = add i64 %1974, 74
  %1976 = load i64, i64* %PC.i1367
  %1977 = add i64 %1976, 6
  %1978 = load i64, i64* %PC.i1367
  %1979 = add i64 %1978, 6
  store i64 %1979, i64* %PC.i1367
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1981 = load i8, i8* %1980, align 1
  %1982 = icmp ne i8 %1981, 0
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1984 = load i8, i8* %1983, align 1
  %1985 = icmp ne i8 %1984, 0
  %1986 = xor i1 %1982, %1985
  %1987 = xor i1 %1986, true
  %1988 = zext i1 %1987 to i8
  store i8 %1988, i8* %BRANCH_TAKEN, align 1
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1990 = select i1 %1986, i64 %1977, i64 %1975
  store i64 %1990, i64* %1989, align 8
  store %struct.Memory* %loadMem_48c765, %struct.Memory** %MEMORY
  %loadBr_48c765 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c765 = icmp eq i8 %loadBr_48c765, 1
  br i1 %cmpBr_48c765, label %block_.L_48c7af, label %block_48c76b

block_48c76b:                                     ; preds = %block_.L_48c761
  %loadMem_48c76b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1992 = getelementptr inbounds %struct.GPR, %struct.GPR* %1991, i32 0, i32 33
  %1993 = getelementptr inbounds %struct.Reg, %struct.Reg* %1992, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %1993 to i64*
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1995 = getelementptr inbounds %struct.GPR, %struct.GPR* %1994, i32 0, i32 1
  %1996 = getelementptr inbounds %struct.Reg, %struct.Reg* %1995, i32 0, i32 0
  %1997 = bitcast %union.anon* %1996 to %struct.anon.2*
  %AL.i1366 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1997, i32 0, i32 0
  %1998 = load i64, i64* %PC.i1365
  %1999 = add i64 %1998, 2
  store i64 %1999, i64* %PC.i1365
  store i8 0, i8* %AL.i1366, align 1
  store %struct.Memory* %loadMem_48c76b, %struct.Memory** %MEMORY
  %loadMem1_48c76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2001 = getelementptr inbounds %struct.GPR, %struct.GPR* %2000, i32 0, i32 33
  %2002 = getelementptr inbounds %struct.Reg, %struct.Reg* %2001, i32 0, i32 0
  %PC.i1364 = bitcast %union.anon* %2002 to i64*
  %2003 = load i64, i64* %PC.i1364
  %2004 = add i64 %2003, -309197
  %2005 = load i64, i64* %PC.i1364
  %2006 = add i64 %2005, 5
  %2007 = load i64, i64* %PC.i1364
  %2008 = add i64 %2007, 5
  store i64 %2008, i64* %PC.i1364
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2010 = load i64, i64* %2009, align 8
  %2011 = add i64 %2010, -8
  %2012 = inttoptr i64 %2011 to i64*
  store i64 %2006, i64* %2012
  store i64 %2011, i64* %2009, align 8
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2004, i64* %2013, align 8
  store %struct.Memory* %loadMem1_48c76d, %struct.Memory** %MEMORY
  %loadMem2_48c76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48c76d = load i64, i64* %3
  %call2_48c76d = call %struct.Memory* @sub_440fa0.LumaResidualCoding(%struct.State* %0, i64 %loadPC_48c76d, %struct.Memory* %loadMem2_48c76d)
  store %struct.Memory* %call2_48c76d, %struct.Memory** %MEMORY
  %loadMem_48c772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2015 = getelementptr inbounds %struct.GPR, %struct.GPR* %2014, i32 0, i32 33
  %2016 = getelementptr inbounds %struct.Reg, %struct.Reg* %2015, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %2016 to i64*
  %2017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2018 = getelementptr inbounds %struct.GPR, %struct.GPR* %2017, i32 0, i32 15
  %2019 = getelementptr inbounds %struct.Reg, %struct.Reg* %2018, i32 0, i32 0
  %RBP.i1363 = bitcast %union.anon* %2019 to i64*
  %2020 = load i64, i64* %RBP.i1363
  %2021 = sub i64 %2020, 20
  %2022 = load i64, i64* %PC.i1362
  %2023 = add i64 %2022, 4
  store i64 %2023, i64* %PC.i1362
  %2024 = inttoptr i64 %2021 to i32*
  %2025 = load i32, i32* %2024
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2026, align 1
  %2027 = and i32 %2025, 255
  %2028 = call i32 @llvm.ctpop.i32(i32 %2027)
  %2029 = trunc i32 %2028 to i8
  %2030 = and i8 %2029, 1
  %2031 = xor i8 %2030, 1
  %2032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2031, i8* %2032, align 1
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2033, align 1
  %2034 = icmp eq i32 %2025, 0
  %2035 = zext i1 %2034 to i8
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2035, i8* %2036, align 1
  %2037 = lshr i32 %2025, 31
  %2038 = trunc i32 %2037 to i8
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2038, i8* %2039, align 1
  %2040 = lshr i32 %2025, 31
  %2041 = xor i32 %2037, %2040
  %2042 = add i32 %2041, %2040
  %2043 = icmp eq i32 %2042, 2
  %2044 = zext i1 %2043 to i8
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2044, i8* %2045, align 1
  store %struct.Memory* %loadMem_48c772, %struct.Memory** %MEMORY
  %loadMem_48c776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2047 = getelementptr inbounds %struct.GPR, %struct.GPR* %2046, i32 0, i32 33
  %2048 = getelementptr inbounds %struct.Reg, %struct.Reg* %2047, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %2048 to i64*
  %2049 = load i64, i64* %PC.i1361
  %2050 = add i64 %2049, 52
  %2051 = load i64, i64* %PC.i1361
  %2052 = add i64 %2051, 6
  %2053 = load i64, i64* %PC.i1361
  %2054 = add i64 %2053, 6
  store i64 %2054, i64* %PC.i1361
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2056 = load i8, i8* %2055, align 1
  %2057 = icmp eq i8 %2056, 0
  %2058 = zext i1 %2057 to i8
  store i8 %2058, i8* %BRANCH_TAKEN, align 1
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2060 = select i1 %2057, i64 %2050, i64 %2052
  store i64 %2060, i64* %2059, align 8
  store %struct.Memory* %loadMem_48c776, %struct.Memory** %MEMORY
  %loadBr_48c776 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c776 = icmp eq i8 %loadBr_48c776, 1
  br i1 %cmpBr_48c776, label %block_.L_48c7aa, label %block_48c77c

block_48c77c:                                     ; preds = %block_48c76b
  %loadMem_48c77c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2062 = getelementptr inbounds %struct.GPR, %struct.GPR* %2061, i32 0, i32 33
  %2063 = getelementptr inbounds %struct.Reg, %struct.Reg* %2062, i32 0, i32 0
  %PC.i1358 = bitcast %union.anon* %2063 to i64*
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2065 = getelementptr inbounds %struct.GPR, %struct.GPR* %2064, i32 0, i32 1
  %2066 = getelementptr inbounds %struct.Reg, %struct.Reg* %2065, i32 0, i32 0
  %RAX.i1359 = bitcast %union.anon* %2066 to i64*
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2068 = getelementptr inbounds %struct.GPR, %struct.GPR* %2067, i32 0, i32 15
  %2069 = getelementptr inbounds %struct.Reg, %struct.Reg* %2068, i32 0, i32 0
  %RBP.i1360 = bitcast %union.anon* %2069 to i64*
  %2070 = load i64, i64* %RBP.i1360
  %2071 = sub i64 %2070, 80
  %2072 = load i64, i64* %PC.i1358
  %2073 = add i64 %2072, 4
  store i64 %2073, i64* %PC.i1358
  %2074 = inttoptr i64 %2071 to i64*
  %2075 = load i64, i64* %2074
  store i64 %2075, i64* %RAX.i1359, align 8
  store %struct.Memory* %loadMem_48c77c, %struct.Memory** %MEMORY
  %loadMem_48c780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 33
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %2078 to i64*
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2080 = getelementptr inbounds %struct.GPR, %struct.GPR* %2079, i32 0, i32 1
  %2081 = getelementptr inbounds %struct.Reg, %struct.Reg* %2080, i32 0, i32 0
  %RAX.i1357 = bitcast %union.anon* %2081 to i64*
  %2082 = load i64, i64* %RAX.i1357
  %2083 = add i64 %2082, 460
  %2084 = load i64, i64* %PC.i1356
  %2085 = add i64 %2084, 7
  store i64 %2085, i64* %PC.i1356
  %2086 = inttoptr i64 %2083 to i32*
  %2087 = load i32, i32* %2086
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2088, align 1
  %2089 = and i32 %2087, 255
  %2090 = call i32 @llvm.ctpop.i32(i32 %2089)
  %2091 = trunc i32 %2090 to i8
  %2092 = and i8 %2091, 1
  %2093 = xor i8 %2092, 1
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2093, i8* %2094, align 1
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2095, align 1
  %2096 = icmp eq i32 %2087, 0
  %2097 = zext i1 %2096 to i8
  %2098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2097, i8* %2098, align 1
  %2099 = lshr i32 %2087, 31
  %2100 = trunc i32 %2099 to i8
  %2101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2100, i8* %2101, align 1
  %2102 = lshr i32 %2087, 31
  %2103 = xor i32 %2099, %2102
  %2104 = add i32 %2103, %2102
  %2105 = icmp eq i32 %2104, 2
  %2106 = zext i1 %2105 to i8
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2106, i8* %2107, align 1
  store %struct.Memory* %loadMem_48c780, %struct.Memory** %MEMORY
  %loadMem_48c787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2109 = getelementptr inbounds %struct.GPR, %struct.GPR* %2108, i32 0, i32 33
  %2110 = getelementptr inbounds %struct.Reg, %struct.Reg* %2109, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %2110 to i64*
  %2111 = load i64, i64* %PC.i1355
  %2112 = add i64 %2111, 35
  %2113 = load i64, i64* %PC.i1355
  %2114 = add i64 %2113, 6
  %2115 = load i64, i64* %PC.i1355
  %2116 = add i64 %2115, 6
  store i64 %2116, i64* %PC.i1355
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2118 = load i8, i8* %2117, align 1
  %2119 = icmp eq i8 %2118, 0
  %2120 = zext i1 %2119 to i8
  store i8 %2120, i8* %BRANCH_TAKEN, align 1
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2122 = select i1 %2119, i64 %2112, i64 %2114
  store i64 %2122, i64* %2121, align 8
  store %struct.Memory* %loadMem_48c787, %struct.Memory** %MEMORY
  %loadBr_48c787 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c787 = icmp eq i8 %loadBr_48c787, 1
  br i1 %cmpBr_48c787, label %block_.L_48c7aa, label %block_48c78d

block_48c78d:                                     ; preds = %block_48c77c
  %loadMem_48c78d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2124 = getelementptr inbounds %struct.GPR, %struct.GPR* %2123, i32 0, i32 33
  %2125 = getelementptr inbounds %struct.Reg, %struct.Reg* %2124, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %2125 to i64*
  %2126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2127 = getelementptr inbounds %struct.GPR, %struct.GPR* %2126, i32 0, i32 1
  %2128 = getelementptr inbounds %struct.Reg, %struct.Reg* %2127, i32 0, i32 0
  %RAX.i1353 = bitcast %union.anon* %2128 to i64*
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2130 = getelementptr inbounds %struct.GPR, %struct.GPR* %2129, i32 0, i32 15
  %2131 = getelementptr inbounds %struct.Reg, %struct.Reg* %2130, i32 0, i32 0
  %RBP.i1354 = bitcast %union.anon* %2131 to i64*
  %2132 = load i64, i64* %RBP.i1354
  %2133 = sub i64 %2132, 80
  %2134 = load i64, i64* %PC.i1352
  %2135 = add i64 %2134, 4
  store i64 %2135, i64* %PC.i1352
  %2136 = inttoptr i64 %2133 to i64*
  %2137 = load i64, i64* %2136
  store i64 %2137, i64* %RAX.i1353, align 8
  store %struct.Memory* %loadMem_48c78d, %struct.Memory** %MEMORY
  %loadMem_48c791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 33
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %2140 to i64*
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2142 = getelementptr inbounds %struct.GPR, %struct.GPR* %2141, i32 0, i32 1
  %2143 = getelementptr inbounds %struct.Reg, %struct.Reg* %2142, i32 0, i32 0
  %RAX.i1351 = bitcast %union.anon* %2143 to i64*
  %2144 = load i64, i64* %RAX.i1351
  %2145 = add i64 %2144, 572
  %2146 = load i64, i64* %PC.i1350
  %2147 = add i64 %2146, 7
  store i64 %2147, i64* %PC.i1350
  %2148 = inttoptr i64 %2145 to i32*
  %2149 = load i32, i32* %2148
  %2150 = sub i32 %2149, 1
  %2151 = icmp ult i32 %2149, 1
  %2152 = zext i1 %2151 to i8
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2152, i8* %2153, align 1
  %2154 = and i32 %2150, 255
  %2155 = call i32 @llvm.ctpop.i32(i32 %2154)
  %2156 = trunc i32 %2155 to i8
  %2157 = and i8 %2156, 1
  %2158 = xor i8 %2157, 1
  %2159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2158, i8* %2159, align 1
  %2160 = xor i32 %2149, 1
  %2161 = xor i32 %2160, %2150
  %2162 = lshr i32 %2161, 4
  %2163 = trunc i32 %2162 to i8
  %2164 = and i8 %2163, 1
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2164, i8* %2165, align 1
  %2166 = icmp eq i32 %2150, 0
  %2167 = zext i1 %2166 to i8
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2167, i8* %2168, align 1
  %2169 = lshr i32 %2150, 31
  %2170 = trunc i32 %2169 to i8
  %2171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2170, i8* %2171, align 1
  %2172 = lshr i32 %2149, 31
  %2173 = xor i32 %2169, %2172
  %2174 = add i32 %2173, %2172
  %2175 = icmp eq i32 %2174, 2
  %2176 = zext i1 %2175 to i8
  %2177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2176, i8* %2177, align 1
  store %struct.Memory* %loadMem_48c791, %struct.Memory** %MEMORY
  %loadMem_48c798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 33
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %PC.i1349 = bitcast %union.anon* %2180 to i64*
  %2181 = load i64, i64* %PC.i1349
  %2182 = add i64 %2181, 18
  %2183 = load i64, i64* %PC.i1349
  %2184 = add i64 %2183, 6
  %2185 = load i64, i64* %PC.i1349
  %2186 = add i64 %2185, 6
  store i64 %2186, i64* %PC.i1349
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2188 = load i8, i8* %2187, align 1
  %2189 = icmp eq i8 %2188, 0
  %2190 = zext i1 %2189 to i8
  store i8 %2190, i8* %BRANCH_TAKEN, align 1
  %2191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2192 = select i1 %2189, i64 %2182, i64 %2184
  store i64 %2192, i64* %2191, align 8
  store %struct.Memory* %loadMem_48c798, %struct.Memory** %MEMORY
  %loadBr_48c798 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c798 = icmp eq i8 %loadBr_48c798, 1
  br i1 %cmpBr_48c798, label %block_.L_48c7aa, label %block_48c79e

block_48c79e:                                     ; preds = %block_48c78d
  %loadMem_48c79e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2194 = getelementptr inbounds %struct.GPR, %struct.GPR* %2193, i32 0, i32 33
  %2195 = getelementptr inbounds %struct.Reg, %struct.Reg* %2194, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %2195 to i64*
  %2196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2197 = getelementptr inbounds %struct.GPR, %struct.GPR* %2196, i32 0, i32 15
  %2198 = getelementptr inbounds %struct.Reg, %struct.Reg* %2197, i32 0, i32 0
  %RBP.i1348 = bitcast %union.anon* %2198 to i64*
  %2199 = load i64, i64* %RBP.i1348
  %2200 = sub i64 %2199, 4
  %2201 = load i64, i64* %PC.i1347
  %2202 = add i64 %2201, 7
  store i64 %2202, i64* %PC.i1347
  %2203 = inttoptr i64 %2200 to i32*
  store i32 0, i32* %2203
  store %struct.Memory* %loadMem_48c79e, %struct.Memory** %MEMORY
  %loadMem_48c7a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2205 = getelementptr inbounds %struct.GPR, %struct.GPR* %2204, i32 0, i32 33
  %2206 = getelementptr inbounds %struct.Reg, %struct.Reg* %2205, i32 0, i32 0
  %PC.i1346 = bitcast %union.anon* %2206 to i64*
  %2207 = load i64, i64* %PC.i1346
  %2208 = add i64 %2207, 2956
  %2209 = load i64, i64* %PC.i1346
  %2210 = add i64 %2209, 5
  store i64 %2210, i64* %PC.i1346
  %2211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2208, i64* %2211, align 8
  store %struct.Memory* %loadMem_48c7a5, %struct.Memory** %MEMORY
  br label %block_.L_48d331

block_.L_48c7aa:                                  ; preds = %block_48c78d, %block_48c77c, %block_48c76b
  %loadMem_48c7aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2213 = getelementptr inbounds %struct.GPR, %struct.GPR* %2212, i32 0, i32 33
  %2214 = getelementptr inbounds %struct.Reg, %struct.Reg* %2213, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %2214 to i64*
  %2215 = load i64, i64* %PC.i1345
  %2216 = add i64 %2215, 653
  %2217 = load i64, i64* %PC.i1345
  %2218 = add i64 %2217, 5
  store i64 %2218, i64* %PC.i1345
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2216, i64* %2219, align 8
  store %struct.Memory* %loadMem_48c7aa, %struct.Memory** %MEMORY
  br label %block_.L_48ca37

block_.L_48c7af:                                  ; preds = %block_.L_48c761
  %loadMem_48c7af = load %struct.Memory*, %struct.Memory** %MEMORY
  %2220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2221 = getelementptr inbounds %struct.GPR, %struct.GPR* %2220, i32 0, i32 33
  %2222 = getelementptr inbounds %struct.Reg, %struct.Reg* %2221, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %2222 to i64*
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2224 = getelementptr inbounds %struct.GPR, %struct.GPR* %2223, i32 0, i32 15
  %2225 = getelementptr inbounds %struct.Reg, %struct.Reg* %2224, i32 0, i32 0
  %RBP.i1344 = bitcast %union.anon* %2225 to i64*
  %2226 = load i64, i64* %RBP.i1344
  %2227 = sub i64 %2226, 20
  %2228 = load i64, i64* %PC.i1343
  %2229 = add i64 %2228, 4
  store i64 %2229, i64* %PC.i1343
  %2230 = inttoptr i64 %2227 to i32*
  %2231 = load i32, i32* %2230
  %2232 = sub i32 %2231, 8
  %2233 = icmp ult i32 %2231, 8
  %2234 = zext i1 %2233 to i8
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2234, i8* %2235, align 1
  %2236 = and i32 %2232, 255
  %2237 = call i32 @llvm.ctpop.i32(i32 %2236)
  %2238 = trunc i32 %2237 to i8
  %2239 = and i8 %2238, 1
  %2240 = xor i8 %2239, 1
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2240, i8* %2241, align 1
  %2242 = xor i32 %2231, 8
  %2243 = xor i32 %2242, %2232
  %2244 = lshr i32 %2243, 4
  %2245 = trunc i32 %2244 to i8
  %2246 = and i8 %2245, 1
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2246, i8* %2247, align 1
  %2248 = icmp eq i32 %2232, 0
  %2249 = zext i1 %2248 to i8
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2249, i8* %2250, align 1
  %2251 = lshr i32 %2232, 31
  %2252 = trunc i32 %2251 to i8
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2252, i8* %2253, align 1
  %2254 = lshr i32 %2231, 31
  %2255 = xor i32 %2251, %2254
  %2256 = add i32 %2255, %2254
  %2257 = icmp eq i32 %2256, 2
  %2258 = zext i1 %2257 to i8
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2258, i8* %2259, align 1
  store %struct.Memory* %loadMem_48c7af, %struct.Memory** %MEMORY
  %loadMem_48c7b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2261 = getelementptr inbounds %struct.GPR, %struct.GPR* %2260, i32 0, i32 33
  %2262 = getelementptr inbounds %struct.Reg, %struct.Reg* %2261, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %2262 to i64*
  %2263 = load i64, i64* %PC.i1342
  %2264 = add i64 %2263, 20
  %2265 = load i64, i64* %PC.i1342
  %2266 = add i64 %2265, 6
  %2267 = load i64, i64* %PC.i1342
  %2268 = add i64 %2267, 6
  store i64 %2268, i64* %PC.i1342
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2270 = load i8, i8* %2269, align 1
  %2271 = icmp eq i8 %2270, 0
  %2272 = zext i1 %2271 to i8
  store i8 %2272, i8* %BRANCH_TAKEN, align 1
  %2273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2274 = select i1 %2271, i64 %2264, i64 %2266
  store i64 %2274, i64* %2273, align 8
  store %struct.Memory* %loadMem_48c7b3, %struct.Memory** %MEMORY
  %loadBr_48c7b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c7b3 = icmp eq i8 %loadBr_48c7b3, 1
  br i1 %cmpBr_48c7b3, label %block_.L_48c7c7, label %block_48c7b9

block_48c7b9:                                     ; preds = %block_.L_48c7af
  %loadMem_48c7b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2276 = getelementptr inbounds %struct.GPR, %struct.GPR* %2275, i32 0, i32 33
  %2277 = getelementptr inbounds %struct.Reg, %struct.Reg* %2276, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %2277 to i64*
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2279 = getelementptr inbounds %struct.GPR, %struct.GPR* %2278, i32 0, i32 11
  %2280 = getelementptr inbounds %struct.Reg, %struct.Reg* %2279, i32 0, i32 0
  %RDI.i1340 = bitcast %union.anon* %2280 to i64*
  %2281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2282 = getelementptr inbounds %struct.GPR, %struct.GPR* %2281, i32 0, i32 15
  %2283 = getelementptr inbounds %struct.Reg, %struct.Reg* %2282, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %2283 to i64*
  %2284 = load i64, i64* %RBP.i1341
  %2285 = sub i64 %2284, 80
  %2286 = load i64, i64* %PC.i1339
  %2287 = add i64 %2286, 4
  store i64 %2287, i64* %PC.i1339
  %2288 = inttoptr i64 %2285 to i64*
  %2289 = load i64, i64* %2288
  store i64 %2289, i64* %RDI.i1340, align 8
  store %struct.Memory* %loadMem_48c7b9, %struct.Memory** %MEMORY
  %loadMem1_48c7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2291 = getelementptr inbounds %struct.GPR, %struct.GPR* %2290, i32 0, i32 33
  %2292 = getelementptr inbounds %struct.Reg, %struct.Reg* %2291, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %2292 to i64*
  %2293 = load i64, i64* %PC.i1338
  %2294 = add i64 %2293, -11533
  %2295 = load i64, i64* %PC.i1338
  %2296 = add i64 %2295, 5
  %2297 = load i64, i64* %PC.i1338
  %2298 = add i64 %2297, 5
  store i64 %2298, i64* %PC.i1338
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2300 = load i64, i64* %2299, align 8
  %2301 = add i64 %2300, -8
  %2302 = inttoptr i64 %2301 to i64*
  store i64 %2296, i64* %2302
  store i64 %2301, i64* %2299, align 8
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2294, i64* %2303, align 8
  store %struct.Memory* %loadMem1_48c7bd, %struct.Memory** %MEMORY
  %loadMem2_48c7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48c7bd = load i64, i64* %3
  %call2_48c7bd = call %struct.Memory* @sub_489ab0.SetCoeffAndReconstruction8x8(%struct.State* %0, i64 %loadPC_48c7bd, %struct.Memory* %loadMem2_48c7bd)
  store %struct.Memory* %call2_48c7bd, %struct.Memory** %MEMORY
  %loadMem_48c7c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2305 = getelementptr inbounds %struct.GPR, %struct.GPR* %2304, i32 0, i32 33
  %2306 = getelementptr inbounds %struct.Reg, %struct.Reg* %2305, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %2306 to i64*
  %2307 = load i64, i64* %PC.i1337
  %2308 = add i64 %2307, 624
  %2309 = load i64, i64* %PC.i1337
  %2310 = add i64 %2309, 5
  store i64 %2310, i64* %PC.i1337
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2308, i64* %2311, align 8
  store %struct.Memory* %loadMem_48c7c2, %struct.Memory** %MEMORY
  br label %block_.L_48ca32

block_.L_48c7c7:                                  ; preds = %block_.L_48c7af
  %loadMem_48c7c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2313 = getelementptr inbounds %struct.GPR, %struct.GPR* %2312, i32 0, i32 33
  %2314 = getelementptr inbounds %struct.Reg, %struct.Reg* %2313, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %2314 to i64*
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2316 = getelementptr inbounds %struct.GPR, %struct.GPR* %2315, i32 0, i32 15
  %2317 = getelementptr inbounds %struct.Reg, %struct.Reg* %2316, i32 0, i32 0
  %RBP.i1336 = bitcast %union.anon* %2317 to i64*
  %2318 = load i64, i64* %RBP.i1336
  %2319 = sub i64 %2318, 20
  %2320 = load i64, i64* %PC.i1335
  %2321 = add i64 %2320, 4
  store i64 %2321, i64* %PC.i1335
  %2322 = inttoptr i64 %2319 to i32*
  %2323 = load i32, i32* %2322
  %2324 = sub i32 %2323, 9
  %2325 = icmp ult i32 %2323, 9
  %2326 = zext i1 %2325 to i8
  %2327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2326, i8* %2327, align 1
  %2328 = and i32 %2324, 255
  %2329 = call i32 @llvm.ctpop.i32(i32 %2328)
  %2330 = trunc i32 %2329 to i8
  %2331 = and i8 %2330, 1
  %2332 = xor i8 %2331, 1
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2332, i8* %2333, align 1
  %2334 = xor i32 %2323, 9
  %2335 = xor i32 %2334, %2324
  %2336 = lshr i32 %2335, 4
  %2337 = trunc i32 %2336 to i8
  %2338 = and i8 %2337, 1
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2338, i8* %2339, align 1
  %2340 = icmp eq i32 %2324, 0
  %2341 = zext i1 %2340 to i8
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2341, i8* %2342, align 1
  %2343 = lshr i32 %2324, 31
  %2344 = trunc i32 %2343 to i8
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2344, i8* %2345, align 1
  %2346 = lshr i32 %2323, 31
  %2347 = xor i32 %2343, %2346
  %2348 = add i32 %2347, %2346
  %2349 = icmp eq i32 %2348, 2
  %2350 = zext i1 %2349 to i8
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2350, i8* %2351, align 1
  store %struct.Memory* %loadMem_48c7c7, %struct.Memory** %MEMORY
  %loadMem_48c7cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2353 = getelementptr inbounds %struct.GPR, %struct.GPR* %2352, i32 0, i32 33
  %2354 = getelementptr inbounds %struct.Reg, %struct.Reg* %2353, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %2354 to i64*
  %2355 = load i64, i64* %PC.i1334
  %2356 = add i64 %2355, 284
  %2357 = load i64, i64* %PC.i1334
  %2358 = add i64 %2357, 6
  %2359 = load i64, i64* %PC.i1334
  %2360 = add i64 %2359, 6
  store i64 %2360, i64* %PC.i1334
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2362 = load i8, i8* %2361, align 1
  %2363 = icmp eq i8 %2362, 0
  %2364 = zext i1 %2363 to i8
  store i8 %2364, i8* %BRANCH_TAKEN, align 1
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2366 = select i1 %2363, i64 %2356, i64 %2358
  store i64 %2366, i64* %2365, align 8
  store %struct.Memory* %loadMem_48c7cb, %struct.Memory** %MEMORY
  %loadBr_48c7cb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c7cb = icmp eq i8 %loadBr_48c7cb, 1
  br i1 %cmpBr_48c7cb, label %block_.L_48c8e7, label %block_48c7d1

block_48c7d1:                                     ; preds = %block_.L_48c7c7
  %loadMem_48c7d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2368 = getelementptr inbounds %struct.GPR, %struct.GPR* %2367, i32 0, i32 33
  %2369 = getelementptr inbounds %struct.Reg, %struct.Reg* %2368, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %2369 to i64*
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2371 = getelementptr inbounds %struct.GPR, %struct.GPR* %2370, i32 0, i32 11
  %2372 = getelementptr inbounds %struct.Reg, %struct.Reg* %2371, i32 0, i32 0
  %RDI.i1332 = bitcast %union.anon* %2372 to i64*
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 15
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %RBP.i1333 = bitcast %union.anon* %2375 to i64*
  %2376 = load i64, i64* %RBP.i1333
  %2377 = sub i64 %2376, 108
  %2378 = load i64, i64* %PC.i1331
  %2379 = add i64 %2378, 4
  store i64 %2379, i64* %PC.i1331
  store i64 %2377, i64* %RDI.i1332, align 8
  store %struct.Memory* %loadMem_48c7d1, %struct.Memory** %MEMORY
  %loadMem_48c7d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2381 = getelementptr inbounds %struct.GPR, %struct.GPR* %2380, i32 0, i32 33
  %2382 = getelementptr inbounds %struct.Reg, %struct.Reg* %2381, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %2382 to i64*
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2384 = getelementptr inbounds %struct.GPR, %struct.GPR* %2383, i32 0, i32 15
  %2385 = getelementptr inbounds %struct.Reg, %struct.Reg* %2384, i32 0, i32 0
  %RBP.i1329 = bitcast %union.anon* %2385 to i64*
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2387 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2386, i64 0, i64 0
  %YMM0.i1330 = bitcast %union.VectorReg* %2387 to %"class.std::bitset"*
  %2388 = bitcast %"class.std::bitset"* %YMM0.i1330 to i8*
  %2389 = load i64, i64* %RBP.i1329
  %2390 = sub i64 %2389, 16
  %2391 = load i64, i64* %PC.i1328
  %2392 = add i64 %2391, 5
  store i64 %2392, i64* %PC.i1328
  %2393 = inttoptr i64 %2390 to double*
  %2394 = load double, double* %2393
  %2395 = bitcast i8* %2388 to double*
  store double %2394, double* %2395, align 1
  %2396 = getelementptr inbounds i8, i8* %2388, i64 8
  %2397 = bitcast i8* %2396 to double*
  store double 0.000000e+00, double* %2397, align 1
  store %struct.Memory* %loadMem_48c7d5, %struct.Memory** %MEMORY
  %loadMem1_48c7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2399 = getelementptr inbounds %struct.GPR, %struct.GPR* %2398, i32 0, i32 33
  %2400 = getelementptr inbounds %struct.Reg, %struct.Reg* %2399, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %2400 to i64*
  %2401 = load i64, i64* %PC.i1327
  %2402 = add i64 %2401, -23674
  %2403 = load i64, i64* %PC.i1327
  %2404 = add i64 %2403, 5
  %2405 = load i64, i64* %PC.i1327
  %2406 = add i64 %2405, 5
  store i64 %2406, i64* %PC.i1327
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2408 = load i64, i64* %2407, align 8
  %2409 = add i64 %2408, -8
  %2410 = inttoptr i64 %2409 to i64*
  store i64 %2404, i64* %2410
  store i64 %2409, i64* %2407, align 8
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2402, i64* %2411, align 8
  store %struct.Memory* %loadMem1_48c7da, %struct.Memory** %MEMORY
  %loadMem2_48c7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48c7da = load i64, i64* %3
  %call2_48c7da = call %struct.Memory* @sub_486b60.Mode_Decision_for_Intra4x4Macroblock(%struct.State* %0, i64 %loadPC_48c7da, %struct.Memory* %loadMem2_48c7da)
  store %struct.Memory* %call2_48c7da, %struct.Memory** %MEMORY
  %loadMem_48c7df = load %struct.Memory*, %struct.Memory** %MEMORY
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2413 = getelementptr inbounds %struct.GPR, %struct.GPR* %2412, i32 0, i32 33
  %2414 = getelementptr inbounds %struct.Reg, %struct.Reg* %2413, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %2414 to i64*
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2416 = getelementptr inbounds %struct.GPR, %struct.GPR* %2415, i32 0, i32 11
  %2417 = getelementptr inbounds %struct.Reg, %struct.Reg* %2416, i32 0, i32 0
  %RDI.i1325 = bitcast %union.anon* %2417 to i64*
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2419 = getelementptr inbounds %struct.GPR, %struct.GPR* %2418, i32 0, i32 15
  %2420 = getelementptr inbounds %struct.Reg, %struct.Reg* %2419, i32 0, i32 0
  %RBP.i1326 = bitcast %union.anon* %2420 to i64*
  %2421 = load i64, i64* %RBP.i1326
  %2422 = sub i64 %2421, 80
  %2423 = load i64, i64* %PC.i1324
  %2424 = add i64 %2423, 4
  store i64 %2424, i64* %PC.i1324
  %2425 = inttoptr i64 %2422 to i64*
  %2426 = load i64, i64* %2425
  store i64 %2426, i64* %RDI.i1325, align 8
  store %struct.Memory* %loadMem_48c7df, %struct.Memory** %MEMORY
  %loadMem_48c7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2428 = getelementptr inbounds %struct.GPR, %struct.GPR* %2427, i32 0, i32 33
  %2429 = getelementptr inbounds %struct.Reg, %struct.Reg* %2428, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %2429 to i64*
  %2430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2431 = getelementptr inbounds %struct.GPR, %struct.GPR* %2430, i32 0, i32 1
  %2432 = getelementptr inbounds %struct.Reg, %struct.Reg* %2431, i32 0, i32 0
  %EAX.i1322 = bitcast %union.anon* %2432 to i32*
  %2433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2434 = getelementptr inbounds %struct.GPR, %struct.GPR* %2433, i32 0, i32 11
  %2435 = getelementptr inbounds %struct.Reg, %struct.Reg* %2434, i32 0, i32 0
  %RDI.i1323 = bitcast %union.anon* %2435 to i64*
  %2436 = load i64, i64* %RDI.i1323
  %2437 = add i64 %2436, 460
  %2438 = load i32, i32* %EAX.i1322
  %2439 = zext i32 %2438 to i64
  %2440 = load i64, i64* %PC.i1321
  %2441 = add i64 %2440, 6
  store i64 %2441, i64* %PC.i1321
  %2442 = inttoptr i64 %2437 to i32*
  store i32 %2438, i32* %2442
  store %struct.Memory* %loadMem_48c7e3, %struct.Memory** %MEMORY
  %loadMem_48c7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2444 = getelementptr inbounds %struct.GPR, %struct.GPR* %2443, i32 0, i32 33
  %2445 = getelementptr inbounds %struct.Reg, %struct.Reg* %2444, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %2445 to i64*
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2447 = getelementptr inbounds %struct.GPR, %struct.GPR* %2446, i32 0, i32 11
  %2448 = getelementptr inbounds %struct.Reg, %struct.Reg* %2447, i32 0, i32 0
  %RDI.i1320 = bitcast %union.anon* %2448 to i64*
  %2449 = load i64, i64* %PC.i1319
  %2450 = add i64 %2449, 8
  store i64 %2450, i64* %PC.i1319
  %2451 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2451, i64* %RDI.i1320, align 8
  store %struct.Memory* %loadMem_48c7e9, %struct.Memory** %MEMORY
  %loadMem_48c7f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2453 = getelementptr inbounds %struct.GPR, %struct.GPR* %2452, i32 0, i32 33
  %2454 = getelementptr inbounds %struct.Reg, %struct.Reg* %2453, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %2454 to i64*
  %2455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2456 = getelementptr inbounds %struct.GPR, %struct.GPR* %2455, i32 0, i32 11
  %2457 = getelementptr inbounds %struct.Reg, %struct.Reg* %2456, i32 0, i32 0
  %RDI.i1318 = bitcast %union.anon* %2457 to i64*
  %2458 = load i64, i64* %RDI.i1318
  %2459 = add i64 %2458, 72724
  %2460 = load i64, i64* %PC.i1317
  %2461 = add i64 %2460, 7
  store i64 %2461, i64* %PC.i1317
  %2462 = inttoptr i64 %2459 to i32*
  %2463 = load i32, i32* %2462
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2464, align 1
  %2465 = and i32 %2463, 255
  %2466 = call i32 @llvm.ctpop.i32(i32 %2465)
  %2467 = trunc i32 %2466 to i8
  %2468 = and i8 %2467, 1
  %2469 = xor i8 %2468, 1
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2469, i8* %2470, align 1
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2471, align 1
  %2472 = icmp eq i32 %2463, 0
  %2473 = zext i1 %2472 to i8
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2473, i8* %2474, align 1
  %2475 = lshr i32 %2463, 31
  %2476 = trunc i32 %2475 to i8
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2476, i8* %2477, align 1
  %2478 = lshr i32 %2463, 31
  %2479 = xor i32 %2475, %2478
  %2480 = add i32 %2479, %2478
  %2481 = icmp eq i32 %2480, 2
  %2482 = zext i1 %2481 to i8
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2482, i8* %2483, align 1
  store %struct.Memory* %loadMem_48c7f1, %struct.Memory** %MEMORY
  %loadMem_48c7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2485 = getelementptr inbounds %struct.GPR, %struct.GPR* %2484, i32 0, i32 33
  %2486 = getelementptr inbounds %struct.Reg, %struct.Reg* %2485, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %2486 to i64*
  %2487 = load i64, i64* %PC.i1316
  %2488 = add i64 %2487, 234
  %2489 = load i64, i64* %PC.i1316
  %2490 = add i64 %2489, 6
  %2491 = load i64, i64* %PC.i1316
  %2492 = add i64 %2491, 6
  store i64 %2492, i64* %PC.i1316
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2494 = load i8, i8* %2493, align 1
  store i8 %2494, i8* %BRANCH_TAKEN, align 1
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2496 = icmp ne i8 %2494, 0
  %2497 = select i1 %2496, i64 %2488, i64 %2490
  store i64 %2497, i64* %2495, align 8
  store %struct.Memory* %loadMem_48c7f8, %struct.Memory** %MEMORY
  %loadBr_48c7f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c7f8 = icmp eq i8 %loadBr_48c7f8, 1
  br i1 %cmpBr_48c7f8, label %block_.L_48c8e2, label %block_48c7fe

block_48c7fe:                                     ; preds = %block_48c7d1
  %loadMem_48c7fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2499 = getelementptr inbounds %struct.GPR, %struct.GPR* %2498, i32 0, i32 33
  %2500 = getelementptr inbounds %struct.Reg, %struct.Reg* %2499, i32 0, i32 0
  %PC.i1314 = bitcast %union.anon* %2500 to i64*
  %2501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2502 = getelementptr inbounds %struct.GPR, %struct.GPR* %2501, i32 0, i32 15
  %2503 = getelementptr inbounds %struct.Reg, %struct.Reg* %2502, i32 0, i32 0
  %RBP.i1315 = bitcast %union.anon* %2503 to i64*
  %2504 = load i64, i64* %RBP.i1315
  %2505 = sub i64 %2504, 40
  %2506 = load i64, i64* %PC.i1314
  %2507 = add i64 %2506, 7
  store i64 %2507, i64* %PC.i1314
  %2508 = inttoptr i64 %2505 to i32*
  store i32 0, i32* %2508
  store %struct.Memory* %loadMem_48c7fe, %struct.Memory** %MEMORY
  br label %block_.L_48c805

block_.L_48c805:                                  ; preds = %block_.L_48c891, %block_48c7fe
  %loadMem_48c805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2510 = getelementptr inbounds %struct.GPR, %struct.GPR* %2509, i32 0, i32 33
  %2511 = getelementptr inbounds %struct.Reg, %struct.Reg* %2510, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %2511 to i64*
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2513 = getelementptr inbounds %struct.GPR, %struct.GPR* %2512, i32 0, i32 15
  %2514 = getelementptr inbounds %struct.Reg, %struct.Reg* %2513, i32 0, i32 0
  %RBP.i1313 = bitcast %union.anon* %2514 to i64*
  %2515 = load i64, i64* %RBP.i1313
  %2516 = sub i64 %2515, 40
  %2517 = load i64, i64* %PC.i1312
  %2518 = add i64 %2517, 4
  store i64 %2518, i64* %PC.i1312
  %2519 = inttoptr i64 %2516 to i32*
  %2520 = load i32, i32* %2519
  %2521 = sub i32 %2520, 2
  %2522 = icmp ult i32 %2520, 2
  %2523 = zext i1 %2522 to i8
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2523, i8* %2524, align 1
  %2525 = and i32 %2521, 255
  %2526 = call i32 @llvm.ctpop.i32(i32 %2525)
  %2527 = trunc i32 %2526 to i8
  %2528 = and i8 %2527, 1
  %2529 = xor i8 %2528, 1
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2529, i8* %2530, align 1
  %2531 = xor i32 %2520, 2
  %2532 = xor i32 %2531, %2521
  %2533 = lshr i32 %2532, 4
  %2534 = trunc i32 %2533 to i8
  %2535 = and i8 %2534, 1
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2535, i8* %2536, align 1
  %2537 = icmp eq i32 %2521, 0
  %2538 = zext i1 %2537 to i8
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2538, i8* %2539, align 1
  %2540 = lshr i32 %2521, 31
  %2541 = trunc i32 %2540 to i8
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2541, i8* %2542, align 1
  %2543 = lshr i32 %2520, 31
  %2544 = xor i32 %2540, %2543
  %2545 = add i32 %2544, %2543
  %2546 = icmp eq i32 %2545, 2
  %2547 = zext i1 %2546 to i8
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2547, i8* %2548, align 1
  store %struct.Memory* %loadMem_48c805, %struct.Memory** %MEMORY
  %loadMem_48c809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2550 = getelementptr inbounds %struct.GPR, %struct.GPR* %2549, i32 0, i32 33
  %2551 = getelementptr inbounds %struct.Reg, %struct.Reg* %2550, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %2551 to i64*
  %2552 = load i64, i64* %PC.i1311
  %2553 = add i64 %2552, 150
  %2554 = load i64, i64* %PC.i1311
  %2555 = add i64 %2554, 6
  %2556 = load i64, i64* %PC.i1311
  %2557 = add i64 %2556, 6
  store i64 %2557, i64* %PC.i1311
  %2558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2559 = load i8, i8* %2558, align 1
  %2560 = icmp ne i8 %2559, 0
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2562 = load i8, i8* %2561, align 1
  %2563 = icmp ne i8 %2562, 0
  %2564 = xor i1 %2560, %2563
  %2565 = xor i1 %2564, true
  %2566 = zext i1 %2565 to i8
  store i8 %2566, i8* %BRANCH_TAKEN, align 1
  %2567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2568 = select i1 %2564, i64 %2555, i64 %2553
  store i64 %2568, i64* %2567, align 8
  store %struct.Memory* %loadMem_48c809, %struct.Memory** %MEMORY
  %loadBr_48c809 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c809 = icmp eq i8 %loadBr_48c809, 1
  br i1 %cmpBr_48c809, label %block_.L_48c89f, label %block_48c80f

block_48c80f:                                     ; preds = %block_.L_48c805
  %loadMem_48c80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2570 = getelementptr inbounds %struct.GPR, %struct.GPR* %2569, i32 0, i32 33
  %2571 = getelementptr inbounds %struct.Reg, %struct.Reg* %2570, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %2571 to i64*
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2573 = getelementptr inbounds %struct.GPR, %struct.GPR* %2572, i32 0, i32 15
  %2574 = getelementptr inbounds %struct.Reg, %struct.Reg* %2573, i32 0, i32 0
  %RBP.i1310 = bitcast %union.anon* %2574 to i64*
  %2575 = load i64, i64* %RBP.i1310
  %2576 = sub i64 %2575, 44
  %2577 = load i64, i64* %PC.i1309
  %2578 = add i64 %2577, 7
  store i64 %2578, i64* %PC.i1309
  %2579 = inttoptr i64 %2576 to i32*
  store i32 0, i32* %2579
  store %struct.Memory* %loadMem_48c80f, %struct.Memory** %MEMORY
  br label %block_.L_48c816

block_.L_48c816:                                  ; preds = %block_.L_48c87e, %block_48c80f
  %loadMem_48c816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2581 = getelementptr inbounds %struct.GPR, %struct.GPR* %2580, i32 0, i32 33
  %2582 = getelementptr inbounds %struct.Reg, %struct.Reg* %2581, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %2582 to i64*
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2584 = getelementptr inbounds %struct.GPR, %struct.GPR* %2583, i32 0, i32 15
  %2585 = getelementptr inbounds %struct.Reg, %struct.Reg* %2584, i32 0, i32 0
  %RBP.i1308 = bitcast %union.anon* %2585 to i64*
  %2586 = load i64, i64* %RBP.i1308
  %2587 = sub i64 %2586, 44
  %2588 = load i64, i64* %PC.i1307
  %2589 = add i64 %2588, 4
  store i64 %2589, i64* %PC.i1307
  %2590 = inttoptr i64 %2587 to i32*
  %2591 = load i32, i32* %2590
  %2592 = sub i32 %2591, 4
  %2593 = icmp ult i32 %2591, 4
  %2594 = zext i1 %2593 to i8
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2594, i8* %2595, align 1
  %2596 = and i32 %2592, 255
  %2597 = call i32 @llvm.ctpop.i32(i32 %2596)
  %2598 = trunc i32 %2597 to i8
  %2599 = and i8 %2598, 1
  %2600 = xor i8 %2599, 1
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2600, i8* %2601, align 1
  %2602 = xor i32 %2591, 4
  %2603 = xor i32 %2602, %2592
  %2604 = lshr i32 %2603, 4
  %2605 = trunc i32 %2604 to i8
  %2606 = and i8 %2605, 1
  %2607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2606, i8* %2607, align 1
  %2608 = icmp eq i32 %2592, 0
  %2609 = zext i1 %2608 to i8
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2609, i8* %2610, align 1
  %2611 = lshr i32 %2592, 31
  %2612 = trunc i32 %2611 to i8
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2612, i8* %2613, align 1
  %2614 = lshr i32 %2591, 31
  %2615 = xor i32 %2611, %2614
  %2616 = add i32 %2615, %2614
  %2617 = icmp eq i32 %2616, 2
  %2618 = zext i1 %2617 to i8
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2618, i8* %2619, align 1
  store %struct.Memory* %loadMem_48c816, %struct.Memory** %MEMORY
  %loadMem_48c81a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2621 = getelementptr inbounds %struct.GPR, %struct.GPR* %2620, i32 0, i32 33
  %2622 = getelementptr inbounds %struct.Reg, %struct.Reg* %2621, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %2622 to i64*
  %2623 = load i64, i64* %PC.i1306
  %2624 = add i64 %2623, 114
  %2625 = load i64, i64* %PC.i1306
  %2626 = add i64 %2625, 6
  %2627 = load i64, i64* %PC.i1306
  %2628 = add i64 %2627, 6
  store i64 %2628, i64* %PC.i1306
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2630 = load i8, i8* %2629, align 1
  %2631 = icmp ne i8 %2630, 0
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2633 = load i8, i8* %2632, align 1
  %2634 = icmp ne i8 %2633, 0
  %2635 = xor i1 %2631, %2634
  %2636 = xor i1 %2635, true
  %2637 = zext i1 %2636 to i8
  store i8 %2637, i8* %BRANCH_TAKEN, align 1
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2639 = select i1 %2635, i64 %2626, i64 %2624
  store i64 %2639, i64* %2638, align 8
  store %struct.Memory* %loadMem_48c81a, %struct.Memory** %MEMORY
  %loadBr_48c81a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c81a = icmp eq i8 %loadBr_48c81a, 1
  br i1 %cmpBr_48c81a, label %block_.L_48c88c, label %block_48c820

block_48c820:                                     ; preds = %block_.L_48c816
  %loadMem_48c820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2641 = getelementptr inbounds %struct.GPR, %struct.GPR* %2640, i32 0, i32 33
  %2642 = getelementptr inbounds %struct.Reg, %struct.Reg* %2641, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %2642 to i64*
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2644 = getelementptr inbounds %struct.GPR, %struct.GPR* %2643, i32 0, i32 15
  %2645 = getelementptr inbounds %struct.Reg, %struct.Reg* %2644, i32 0, i32 0
  %RBP.i1305 = bitcast %union.anon* %2645 to i64*
  %2646 = load i64, i64* %RBP.i1305
  %2647 = sub i64 %2646, 48
  %2648 = load i64, i64* %PC.i1304
  %2649 = add i64 %2648, 7
  store i64 %2649, i64* %PC.i1304
  %2650 = inttoptr i64 %2647 to i32*
  store i32 0, i32* %2650
  store %struct.Memory* %loadMem_48c820, %struct.Memory** %MEMORY
  br label %block_.L_48c827

block_.L_48c827:                                  ; preds = %block_.L_48c86b, %block_48c820
  %loadMem_48c827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2652 = getelementptr inbounds %struct.GPR, %struct.GPR* %2651, i32 0, i32 33
  %2653 = getelementptr inbounds %struct.Reg, %struct.Reg* %2652, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %2653 to i64*
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2655 = getelementptr inbounds %struct.GPR, %struct.GPR* %2654, i32 0, i32 15
  %2656 = getelementptr inbounds %struct.Reg, %struct.Reg* %2655, i32 0, i32 0
  %RBP.i1303 = bitcast %union.anon* %2656 to i64*
  %2657 = load i64, i64* %RBP.i1303
  %2658 = sub i64 %2657, 48
  %2659 = load i64, i64* %PC.i1302
  %2660 = add i64 %2659, 4
  store i64 %2660, i64* %PC.i1302
  %2661 = inttoptr i64 %2658 to i32*
  %2662 = load i32, i32* %2661
  %2663 = sub i32 %2662, 4
  %2664 = icmp ult i32 %2662, 4
  %2665 = zext i1 %2664 to i8
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2665, i8* %2666, align 1
  %2667 = and i32 %2663, 255
  %2668 = call i32 @llvm.ctpop.i32(i32 %2667)
  %2669 = trunc i32 %2668 to i8
  %2670 = and i8 %2669, 1
  %2671 = xor i8 %2670, 1
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2671, i8* %2672, align 1
  %2673 = xor i32 %2662, 4
  %2674 = xor i32 %2673, %2663
  %2675 = lshr i32 %2674, 4
  %2676 = trunc i32 %2675 to i8
  %2677 = and i8 %2676, 1
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2677, i8* %2678, align 1
  %2679 = icmp eq i32 %2663, 0
  %2680 = zext i1 %2679 to i8
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2680, i8* %2681, align 1
  %2682 = lshr i32 %2663, 31
  %2683 = trunc i32 %2682 to i8
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2683, i8* %2684, align 1
  %2685 = lshr i32 %2662, 31
  %2686 = xor i32 %2682, %2685
  %2687 = add i32 %2686, %2685
  %2688 = icmp eq i32 %2687, 2
  %2689 = zext i1 %2688 to i8
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2689, i8* %2690, align 1
  store %struct.Memory* %loadMem_48c827, %struct.Memory** %MEMORY
  %loadMem_48c82b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2692 = getelementptr inbounds %struct.GPR, %struct.GPR* %2691, i32 0, i32 33
  %2693 = getelementptr inbounds %struct.Reg, %struct.Reg* %2692, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %2693 to i64*
  %2694 = load i64, i64* %PC.i1301
  %2695 = add i64 %2694, 78
  %2696 = load i64, i64* %PC.i1301
  %2697 = add i64 %2696, 6
  %2698 = load i64, i64* %PC.i1301
  %2699 = add i64 %2698, 6
  store i64 %2699, i64* %PC.i1301
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2701 = load i8, i8* %2700, align 1
  %2702 = icmp ne i8 %2701, 0
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2704 = load i8, i8* %2703, align 1
  %2705 = icmp ne i8 %2704, 0
  %2706 = xor i1 %2702, %2705
  %2707 = xor i1 %2706, true
  %2708 = zext i1 %2707 to i8
  store i8 %2708, i8* %BRANCH_TAKEN, align 1
  %2709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2710 = select i1 %2706, i64 %2697, i64 %2695
  store i64 %2710, i64* %2709, align 8
  store %struct.Memory* %loadMem_48c82b, %struct.Memory** %MEMORY
  %loadBr_48c82b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c82b = icmp eq i8 %loadBr_48c82b, 1
  br i1 %cmpBr_48c82b, label %block_.L_48c879, label %block_48c831

block_48c831:                                     ; preds = %block_.L_48c827
  %loadMem_48c831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2712 = getelementptr inbounds %struct.GPR, %struct.GPR* %2711, i32 0, i32 33
  %2713 = getelementptr inbounds %struct.Reg, %struct.Reg* %2712, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %2713 to i64*
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2715 = getelementptr inbounds %struct.GPR, %struct.GPR* %2714, i32 0, i32 1
  %2716 = getelementptr inbounds %struct.Reg, %struct.Reg* %2715, i32 0, i32 0
  %RAX.i1300 = bitcast %union.anon* %2716 to i64*
  %2717 = load i64, i64* %PC.i1299
  %2718 = add i64 %2717, 10
  store i64 %2718, i64* %PC.i1299
  store i64 ptrtoint (%G__0x6d0920_type* @G__0x6d0920 to i64), i64* %RAX.i1300, align 8
  store %struct.Memory* %loadMem_48c831, %struct.Memory** %MEMORY
  %loadMem_48c83b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2720 = getelementptr inbounds %struct.GPR, %struct.GPR* %2719, i32 0, i32 33
  %2721 = getelementptr inbounds %struct.Reg, %struct.Reg* %2720, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %2721 to i64*
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2723 = getelementptr inbounds %struct.GPR, %struct.GPR* %2722, i32 0, i32 5
  %2724 = getelementptr inbounds %struct.Reg, %struct.Reg* %2723, i32 0, i32 0
  %RCX.i1297 = bitcast %union.anon* %2724 to i64*
  %2725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2726 = getelementptr inbounds %struct.GPR, %struct.GPR* %2725, i32 0, i32 15
  %2727 = getelementptr inbounds %struct.Reg, %struct.Reg* %2726, i32 0, i32 0
  %RBP.i1298 = bitcast %union.anon* %2727 to i64*
  %2728 = load i64, i64* %RBP.i1298
  %2729 = sub i64 %2728, 40
  %2730 = load i64, i64* %PC.i1296
  %2731 = add i64 %2730, 4
  store i64 %2731, i64* %PC.i1296
  %2732 = inttoptr i64 %2729 to i32*
  %2733 = load i32, i32* %2732
  %2734 = sext i32 %2733 to i64
  store i64 %2734, i64* %RCX.i1297, align 8
  store %struct.Memory* %loadMem_48c83b, %struct.Memory** %MEMORY
  %loadMem_48c83f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2736 = getelementptr inbounds %struct.GPR, %struct.GPR* %2735, i32 0, i32 33
  %2737 = getelementptr inbounds %struct.Reg, %struct.Reg* %2736, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %2737 to i64*
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2739 = getelementptr inbounds %struct.GPR, %struct.GPR* %2738, i32 0, i32 5
  %2740 = getelementptr inbounds %struct.Reg, %struct.Reg* %2739, i32 0, i32 0
  %RCX.i1295 = bitcast %union.anon* %2740 to i64*
  %2741 = load i64, i64* %RCX.i1295
  %2742 = load i64, i64* %PC.i1294
  %2743 = add i64 %2742, 4
  store i64 %2743, i64* %PC.i1294
  %2744 = shl i64 %2741, 5
  %2745 = icmp slt i64 %2744, 0
  %2746 = shl i64 %2744, 1
  store i64 %2746, i64* %RCX.i1295, align 8
  %2747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2748 = zext i1 %2745 to i8
  store i8 %2748, i8* %2747, align 1
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2750 = trunc i64 %2746 to i32
  %2751 = and i32 %2750, 254
  %2752 = call i32 @llvm.ctpop.i32(i32 %2751)
  %2753 = trunc i32 %2752 to i8
  %2754 = and i8 %2753, 1
  %2755 = xor i8 %2754, 1
  store i8 %2755, i8* %2749, align 1
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2756, align 1
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2758 = icmp eq i64 %2746, 0
  %2759 = zext i1 %2758 to i8
  store i8 %2759, i8* %2757, align 1
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2761 = lshr i64 %2746, 63
  %2762 = trunc i64 %2761 to i8
  store i8 %2762, i8* %2760, align 1
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2763, align 1
  store %struct.Memory* %loadMem_48c83f, %struct.Memory** %MEMORY
  %loadMem_48c843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2765 = getelementptr inbounds %struct.GPR, %struct.GPR* %2764, i32 0, i32 33
  %2766 = getelementptr inbounds %struct.Reg, %struct.Reg* %2765, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %2766 to i64*
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2768 = getelementptr inbounds %struct.GPR, %struct.GPR* %2767, i32 0, i32 1
  %2769 = getelementptr inbounds %struct.Reg, %struct.Reg* %2768, i32 0, i32 0
  %RAX.i1292 = bitcast %union.anon* %2769 to i64*
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2771 = getelementptr inbounds %struct.GPR, %struct.GPR* %2770, i32 0, i32 5
  %2772 = getelementptr inbounds %struct.Reg, %struct.Reg* %2771, i32 0, i32 0
  %RCX.i1293 = bitcast %union.anon* %2772 to i64*
  %2773 = load i64, i64* %RAX.i1292
  %2774 = load i64, i64* %RCX.i1293
  %2775 = load i64, i64* %PC.i1291
  %2776 = add i64 %2775, 3
  store i64 %2776, i64* %PC.i1291
  %2777 = add i64 %2774, %2773
  store i64 %2777, i64* %RAX.i1292, align 8
  %2778 = icmp ult i64 %2777, %2773
  %2779 = icmp ult i64 %2777, %2774
  %2780 = or i1 %2778, %2779
  %2781 = zext i1 %2780 to i8
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2781, i8* %2782, align 1
  %2783 = trunc i64 %2777 to i32
  %2784 = and i32 %2783, 255
  %2785 = call i32 @llvm.ctpop.i32(i32 %2784)
  %2786 = trunc i32 %2785 to i8
  %2787 = and i8 %2786, 1
  %2788 = xor i8 %2787, 1
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2788, i8* %2789, align 1
  %2790 = xor i64 %2774, %2773
  %2791 = xor i64 %2790, %2777
  %2792 = lshr i64 %2791, 4
  %2793 = trunc i64 %2792 to i8
  %2794 = and i8 %2793, 1
  %2795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2794, i8* %2795, align 1
  %2796 = icmp eq i64 %2777, 0
  %2797 = zext i1 %2796 to i8
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2797, i8* %2798, align 1
  %2799 = lshr i64 %2777, 63
  %2800 = trunc i64 %2799 to i8
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2800, i8* %2801, align 1
  %2802 = lshr i64 %2773, 63
  %2803 = lshr i64 %2774, 63
  %2804 = xor i64 %2799, %2802
  %2805 = xor i64 %2799, %2803
  %2806 = add i64 %2804, %2805
  %2807 = icmp eq i64 %2806, 2
  %2808 = zext i1 %2807 to i8
  %2809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2808, i8* %2809, align 1
  store %struct.Memory* %loadMem_48c843, %struct.Memory** %MEMORY
  %loadMem_48c846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2811 = getelementptr inbounds %struct.GPR, %struct.GPR* %2810, i32 0, i32 33
  %2812 = getelementptr inbounds %struct.Reg, %struct.Reg* %2811, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %2812 to i64*
  %2813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2814 = getelementptr inbounds %struct.GPR, %struct.GPR* %2813, i32 0, i32 5
  %2815 = getelementptr inbounds %struct.Reg, %struct.Reg* %2814, i32 0, i32 0
  %RCX.i1289 = bitcast %union.anon* %2815 to i64*
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2817 = getelementptr inbounds %struct.GPR, %struct.GPR* %2816, i32 0, i32 15
  %2818 = getelementptr inbounds %struct.Reg, %struct.Reg* %2817, i32 0, i32 0
  %RBP.i1290 = bitcast %union.anon* %2818 to i64*
  %2819 = load i64, i64* %RBP.i1290
  %2820 = sub i64 %2819, 44
  %2821 = load i64, i64* %PC.i1288
  %2822 = add i64 %2821, 4
  store i64 %2822, i64* %PC.i1288
  %2823 = inttoptr i64 %2820 to i32*
  %2824 = load i32, i32* %2823
  %2825 = sext i32 %2824 to i64
  store i64 %2825, i64* %RCX.i1289, align 8
  store %struct.Memory* %loadMem_48c846, %struct.Memory** %MEMORY
  %loadMem_48c84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2827 = getelementptr inbounds %struct.GPR, %struct.GPR* %2826, i32 0, i32 33
  %2828 = getelementptr inbounds %struct.Reg, %struct.Reg* %2827, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %2828 to i64*
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2830 = getelementptr inbounds %struct.GPR, %struct.GPR* %2829, i32 0, i32 5
  %2831 = getelementptr inbounds %struct.Reg, %struct.Reg* %2830, i32 0, i32 0
  %RCX.i1287 = bitcast %union.anon* %2831 to i64*
  %2832 = load i64, i64* %RCX.i1287
  %2833 = load i64, i64* %PC.i1286
  %2834 = add i64 %2833, 4
  store i64 %2834, i64* %PC.i1286
  %2835 = shl i64 %2832, 3
  %2836 = icmp slt i64 %2835, 0
  %2837 = shl i64 %2835, 1
  store i64 %2837, i64* %RCX.i1287, align 8
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2839 = zext i1 %2836 to i8
  store i8 %2839, i8* %2838, align 1
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2841 = trunc i64 %2837 to i32
  %2842 = and i32 %2841, 254
  %2843 = call i32 @llvm.ctpop.i32(i32 %2842)
  %2844 = trunc i32 %2843 to i8
  %2845 = and i8 %2844, 1
  %2846 = xor i8 %2845, 1
  store i8 %2846, i8* %2840, align 1
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2847, align 1
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2849 = icmp eq i64 %2837, 0
  %2850 = zext i1 %2849 to i8
  store i8 %2850, i8* %2848, align 1
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2852 = lshr i64 %2837, 63
  %2853 = trunc i64 %2852 to i8
  store i8 %2853, i8* %2851, align 1
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2854, align 1
  store %struct.Memory* %loadMem_48c84a, %struct.Memory** %MEMORY
  %loadMem_48c84e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2856 = getelementptr inbounds %struct.GPR, %struct.GPR* %2855, i32 0, i32 33
  %2857 = getelementptr inbounds %struct.Reg, %struct.Reg* %2856, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %2857 to i64*
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2859 = getelementptr inbounds %struct.GPR, %struct.GPR* %2858, i32 0, i32 1
  %2860 = getelementptr inbounds %struct.Reg, %struct.Reg* %2859, i32 0, i32 0
  %RAX.i1284 = bitcast %union.anon* %2860 to i64*
  %2861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2862 = getelementptr inbounds %struct.GPR, %struct.GPR* %2861, i32 0, i32 5
  %2863 = getelementptr inbounds %struct.Reg, %struct.Reg* %2862, i32 0, i32 0
  %RCX.i1285 = bitcast %union.anon* %2863 to i64*
  %2864 = load i64, i64* %RAX.i1284
  %2865 = load i64, i64* %RCX.i1285
  %2866 = load i64, i64* %PC.i1283
  %2867 = add i64 %2866, 3
  store i64 %2867, i64* %PC.i1283
  %2868 = add i64 %2865, %2864
  store i64 %2868, i64* %RAX.i1284, align 8
  %2869 = icmp ult i64 %2868, %2864
  %2870 = icmp ult i64 %2868, %2865
  %2871 = or i1 %2869, %2870
  %2872 = zext i1 %2871 to i8
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2872, i8* %2873, align 1
  %2874 = trunc i64 %2868 to i32
  %2875 = and i32 %2874, 255
  %2876 = call i32 @llvm.ctpop.i32(i32 %2875)
  %2877 = trunc i32 %2876 to i8
  %2878 = and i8 %2877, 1
  %2879 = xor i8 %2878, 1
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2879, i8* %2880, align 1
  %2881 = xor i64 %2865, %2864
  %2882 = xor i64 %2881, %2868
  %2883 = lshr i64 %2882, 4
  %2884 = trunc i64 %2883 to i8
  %2885 = and i8 %2884, 1
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2885, i8* %2886, align 1
  %2887 = icmp eq i64 %2868, 0
  %2888 = zext i1 %2887 to i8
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2888, i8* %2889, align 1
  %2890 = lshr i64 %2868, 63
  %2891 = trunc i64 %2890 to i8
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2891, i8* %2892, align 1
  %2893 = lshr i64 %2864, 63
  %2894 = lshr i64 %2865, 63
  %2895 = xor i64 %2890, %2893
  %2896 = xor i64 %2890, %2894
  %2897 = add i64 %2895, %2896
  %2898 = icmp eq i64 %2897, 2
  %2899 = zext i1 %2898 to i8
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2899, i8* %2900, align 1
  store %struct.Memory* %loadMem_48c84e, %struct.Memory** %MEMORY
  %loadMem_48c851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2902 = getelementptr inbounds %struct.GPR, %struct.GPR* %2901, i32 0, i32 33
  %2903 = getelementptr inbounds %struct.Reg, %struct.Reg* %2902, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %2903 to i64*
  %2904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2905 = getelementptr inbounds %struct.GPR, %struct.GPR* %2904, i32 0, i32 5
  %2906 = getelementptr inbounds %struct.Reg, %struct.Reg* %2905, i32 0, i32 0
  %RCX.i1281 = bitcast %union.anon* %2906 to i64*
  %2907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2908 = getelementptr inbounds %struct.GPR, %struct.GPR* %2907, i32 0, i32 15
  %2909 = getelementptr inbounds %struct.Reg, %struct.Reg* %2908, i32 0, i32 0
  %RBP.i1282 = bitcast %union.anon* %2909 to i64*
  %2910 = load i64, i64* %RBP.i1282
  %2911 = sub i64 %2910, 48
  %2912 = load i64, i64* %PC.i1280
  %2913 = add i64 %2912, 4
  store i64 %2913, i64* %PC.i1280
  %2914 = inttoptr i64 %2911 to i32*
  %2915 = load i32, i32* %2914
  %2916 = sext i32 %2915 to i64
  store i64 %2916, i64* %RCX.i1281, align 8
  store %struct.Memory* %loadMem_48c851, %struct.Memory** %MEMORY
  %loadMem_48c855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 33
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %2919 to i64*
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2921 = getelementptr inbounds %struct.GPR, %struct.GPR* %2920, i32 0, i32 1
  %2922 = getelementptr inbounds %struct.Reg, %struct.Reg* %2921, i32 0, i32 0
  %RAX.i1278 = bitcast %union.anon* %2922 to i64*
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2924 = getelementptr inbounds %struct.GPR, %struct.GPR* %2923, i32 0, i32 5
  %2925 = getelementptr inbounds %struct.Reg, %struct.Reg* %2924, i32 0, i32 0
  %RCX.i1279 = bitcast %union.anon* %2925 to i64*
  %2926 = load i64, i64* %RAX.i1278
  %2927 = load i64, i64* %RCX.i1279
  %2928 = mul i64 %2927, 4
  %2929 = add i64 %2928, %2926
  %2930 = load i64, i64* %PC.i1277
  %2931 = add i64 %2930, 4
  store i64 %2931, i64* %PC.i1277
  %2932 = inttoptr i64 %2929 to i32*
  %2933 = load i32, i32* %2932
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2934, align 1
  %2935 = and i32 %2933, 255
  %2936 = call i32 @llvm.ctpop.i32(i32 %2935)
  %2937 = trunc i32 %2936 to i8
  %2938 = and i8 %2937, 1
  %2939 = xor i8 %2938, 1
  %2940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2939, i8* %2940, align 1
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2941, align 1
  %2942 = icmp eq i32 %2933, 0
  %2943 = zext i1 %2942 to i8
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2943, i8* %2944, align 1
  %2945 = lshr i32 %2933, 31
  %2946 = trunc i32 %2945 to i8
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2946, i8* %2947, align 1
  %2948 = lshr i32 %2933, 31
  %2949 = xor i32 %2945, %2948
  %2950 = add i32 %2949, %2948
  %2951 = icmp eq i32 %2950, 2
  %2952 = zext i1 %2951 to i8
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2952, i8* %2953, align 1
  store %struct.Memory* %loadMem_48c855, %struct.Memory** %MEMORY
  %loadMem_48c859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 33
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %2956 to i64*
  %2957 = load i64, i64* %PC.i1276
  %2958 = add i64 %2957, 13
  %2959 = load i64, i64* %PC.i1276
  %2960 = add i64 %2959, 6
  %2961 = load i64, i64* %PC.i1276
  %2962 = add i64 %2961, 6
  store i64 %2962, i64* %PC.i1276
  %2963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2964 = load i8, i8* %2963, align 1
  store i8 %2964, i8* %BRANCH_TAKEN, align 1
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2966 = icmp ne i8 %2964, 0
  %2967 = select i1 %2966, i64 %2958, i64 %2960
  store i64 %2967, i64* %2965, align 8
  store %struct.Memory* %loadMem_48c859, %struct.Memory** %MEMORY
  %loadBr_48c859 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c859 = icmp eq i8 %loadBr_48c859, 1
  br i1 %cmpBr_48c859, label %block_.L_48c866, label %block_48c85f

block_48c85f:                                     ; preds = %block_48c831
  %loadMem_48c85f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2969 = getelementptr inbounds %struct.GPR, %struct.GPR* %2968, i32 0, i32 33
  %2970 = getelementptr inbounds %struct.Reg, %struct.Reg* %2969, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %2970 to i64*
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2972 = getelementptr inbounds %struct.GPR, %struct.GPR* %2971, i32 0, i32 15
  %2973 = getelementptr inbounds %struct.Reg, %struct.Reg* %2972, i32 0, i32 0
  %RBP.i1275 = bitcast %union.anon* %2973 to i64*
  %2974 = load i64, i64* %RBP.i1275
  %2975 = sub i64 %2974, 112
  %2976 = load i64, i64* %PC.i1274
  %2977 = add i64 %2976, 7
  store i64 %2977, i64* %PC.i1274
  %2978 = inttoptr i64 %2975 to i32*
  store i32 2, i32* %2978
  store %struct.Memory* %loadMem_48c85f, %struct.Memory** %MEMORY
  br label %block_.L_48c866

block_.L_48c866:                                  ; preds = %block_48c85f, %block_48c831
  %loadMem_48c866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2980 = getelementptr inbounds %struct.GPR, %struct.GPR* %2979, i32 0, i32 33
  %2981 = getelementptr inbounds %struct.Reg, %struct.Reg* %2980, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %2981 to i64*
  %2982 = load i64, i64* %PC.i1273
  %2983 = add i64 %2982, 5
  %2984 = load i64, i64* %PC.i1273
  %2985 = add i64 %2984, 5
  store i64 %2985, i64* %PC.i1273
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2983, i64* %2986, align 8
  store %struct.Memory* %loadMem_48c866, %struct.Memory** %MEMORY
  br label %block_.L_48c86b

block_.L_48c86b:                                  ; preds = %block_.L_48c866
  %loadMem_48c86b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2988 = getelementptr inbounds %struct.GPR, %struct.GPR* %2987, i32 0, i32 33
  %2989 = getelementptr inbounds %struct.Reg, %struct.Reg* %2988, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %2989 to i64*
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2991 = getelementptr inbounds %struct.GPR, %struct.GPR* %2990, i32 0, i32 1
  %2992 = getelementptr inbounds %struct.Reg, %struct.Reg* %2991, i32 0, i32 0
  %RAX.i1271 = bitcast %union.anon* %2992 to i64*
  %2993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2994 = getelementptr inbounds %struct.GPR, %struct.GPR* %2993, i32 0, i32 15
  %2995 = getelementptr inbounds %struct.Reg, %struct.Reg* %2994, i32 0, i32 0
  %RBP.i1272 = bitcast %union.anon* %2995 to i64*
  %2996 = load i64, i64* %RBP.i1272
  %2997 = sub i64 %2996, 48
  %2998 = load i64, i64* %PC.i1270
  %2999 = add i64 %2998, 3
  store i64 %2999, i64* %PC.i1270
  %3000 = inttoptr i64 %2997 to i32*
  %3001 = load i32, i32* %3000
  %3002 = zext i32 %3001 to i64
  store i64 %3002, i64* %RAX.i1271, align 8
  store %struct.Memory* %loadMem_48c86b, %struct.Memory** %MEMORY
  %loadMem_48c86e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3004 = getelementptr inbounds %struct.GPR, %struct.GPR* %3003, i32 0, i32 33
  %3005 = getelementptr inbounds %struct.Reg, %struct.Reg* %3004, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %3005 to i64*
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3007 = getelementptr inbounds %struct.GPR, %struct.GPR* %3006, i32 0, i32 1
  %3008 = getelementptr inbounds %struct.Reg, %struct.Reg* %3007, i32 0, i32 0
  %RAX.i1269 = bitcast %union.anon* %3008 to i64*
  %3009 = load i64, i64* %RAX.i1269
  %3010 = load i64, i64* %PC.i1268
  %3011 = add i64 %3010, 3
  store i64 %3011, i64* %PC.i1268
  %3012 = trunc i64 %3009 to i32
  %3013 = add i32 1, %3012
  %3014 = zext i32 %3013 to i64
  store i64 %3014, i64* %RAX.i1269, align 8
  %3015 = icmp ult i32 %3013, %3012
  %3016 = icmp ult i32 %3013, 1
  %3017 = or i1 %3015, %3016
  %3018 = zext i1 %3017 to i8
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3018, i8* %3019, align 1
  %3020 = and i32 %3013, 255
  %3021 = call i32 @llvm.ctpop.i32(i32 %3020)
  %3022 = trunc i32 %3021 to i8
  %3023 = and i8 %3022, 1
  %3024 = xor i8 %3023, 1
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3024, i8* %3025, align 1
  %3026 = xor i64 1, %3009
  %3027 = trunc i64 %3026 to i32
  %3028 = xor i32 %3027, %3013
  %3029 = lshr i32 %3028, 4
  %3030 = trunc i32 %3029 to i8
  %3031 = and i8 %3030, 1
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3031, i8* %3032, align 1
  %3033 = icmp eq i32 %3013, 0
  %3034 = zext i1 %3033 to i8
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3034, i8* %3035, align 1
  %3036 = lshr i32 %3013, 31
  %3037 = trunc i32 %3036 to i8
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3037, i8* %3038, align 1
  %3039 = lshr i32 %3012, 31
  %3040 = xor i32 %3036, %3039
  %3041 = add i32 %3040, %3036
  %3042 = icmp eq i32 %3041, 2
  %3043 = zext i1 %3042 to i8
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3043, i8* %3044, align 1
  store %struct.Memory* %loadMem_48c86e, %struct.Memory** %MEMORY
  %loadMem_48c871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3046 = getelementptr inbounds %struct.GPR, %struct.GPR* %3045, i32 0, i32 33
  %3047 = getelementptr inbounds %struct.Reg, %struct.Reg* %3046, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %3047 to i64*
  %3048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3049 = getelementptr inbounds %struct.GPR, %struct.GPR* %3048, i32 0, i32 1
  %3050 = getelementptr inbounds %struct.Reg, %struct.Reg* %3049, i32 0, i32 0
  %EAX.i1266 = bitcast %union.anon* %3050 to i32*
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 15
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %RBP.i1267 = bitcast %union.anon* %3053 to i64*
  %3054 = load i64, i64* %RBP.i1267
  %3055 = sub i64 %3054, 48
  %3056 = load i32, i32* %EAX.i1266
  %3057 = zext i32 %3056 to i64
  %3058 = load i64, i64* %PC.i1265
  %3059 = add i64 %3058, 3
  store i64 %3059, i64* %PC.i1265
  %3060 = inttoptr i64 %3055 to i32*
  store i32 %3056, i32* %3060
  store %struct.Memory* %loadMem_48c871, %struct.Memory** %MEMORY
  %loadMem_48c874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3062 = getelementptr inbounds %struct.GPR, %struct.GPR* %3061, i32 0, i32 33
  %3063 = getelementptr inbounds %struct.Reg, %struct.Reg* %3062, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %3063 to i64*
  %3064 = load i64, i64* %PC.i1264
  %3065 = add i64 %3064, -77
  %3066 = load i64, i64* %PC.i1264
  %3067 = add i64 %3066, 5
  store i64 %3067, i64* %PC.i1264
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3065, i64* %3068, align 8
  store %struct.Memory* %loadMem_48c874, %struct.Memory** %MEMORY
  br label %block_.L_48c827

block_.L_48c879:                                  ; preds = %block_.L_48c827
  %loadMem_48c879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 33
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %3071 to i64*
  %3072 = load i64, i64* %PC.i1263
  %3073 = add i64 %3072, 5
  %3074 = load i64, i64* %PC.i1263
  %3075 = add i64 %3074, 5
  store i64 %3075, i64* %PC.i1263
  %3076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3073, i64* %3076, align 8
  store %struct.Memory* %loadMem_48c879, %struct.Memory** %MEMORY
  br label %block_.L_48c87e

block_.L_48c87e:                                  ; preds = %block_.L_48c879
  %loadMem_48c87e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 33
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %3079 to i64*
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3081 = getelementptr inbounds %struct.GPR, %struct.GPR* %3080, i32 0, i32 1
  %3082 = getelementptr inbounds %struct.Reg, %struct.Reg* %3081, i32 0, i32 0
  %RAX.i1261 = bitcast %union.anon* %3082 to i64*
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3084 = getelementptr inbounds %struct.GPR, %struct.GPR* %3083, i32 0, i32 15
  %3085 = getelementptr inbounds %struct.Reg, %struct.Reg* %3084, i32 0, i32 0
  %RBP.i1262 = bitcast %union.anon* %3085 to i64*
  %3086 = load i64, i64* %RBP.i1262
  %3087 = sub i64 %3086, 44
  %3088 = load i64, i64* %PC.i1260
  %3089 = add i64 %3088, 3
  store i64 %3089, i64* %PC.i1260
  %3090 = inttoptr i64 %3087 to i32*
  %3091 = load i32, i32* %3090
  %3092 = zext i32 %3091 to i64
  store i64 %3092, i64* %RAX.i1261, align 8
  store %struct.Memory* %loadMem_48c87e, %struct.Memory** %MEMORY
  %loadMem_48c881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3094 = getelementptr inbounds %struct.GPR, %struct.GPR* %3093, i32 0, i32 33
  %3095 = getelementptr inbounds %struct.Reg, %struct.Reg* %3094, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %3095 to i64*
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3097 = getelementptr inbounds %struct.GPR, %struct.GPR* %3096, i32 0, i32 1
  %3098 = getelementptr inbounds %struct.Reg, %struct.Reg* %3097, i32 0, i32 0
  %RAX.i1259 = bitcast %union.anon* %3098 to i64*
  %3099 = load i64, i64* %RAX.i1259
  %3100 = load i64, i64* %PC.i1258
  %3101 = add i64 %3100, 3
  store i64 %3101, i64* %PC.i1258
  %3102 = trunc i64 %3099 to i32
  %3103 = add i32 1, %3102
  %3104 = zext i32 %3103 to i64
  store i64 %3104, i64* %RAX.i1259, align 8
  %3105 = icmp ult i32 %3103, %3102
  %3106 = icmp ult i32 %3103, 1
  %3107 = or i1 %3105, %3106
  %3108 = zext i1 %3107 to i8
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3108, i8* %3109, align 1
  %3110 = and i32 %3103, 255
  %3111 = call i32 @llvm.ctpop.i32(i32 %3110)
  %3112 = trunc i32 %3111 to i8
  %3113 = and i8 %3112, 1
  %3114 = xor i8 %3113, 1
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3114, i8* %3115, align 1
  %3116 = xor i64 1, %3099
  %3117 = trunc i64 %3116 to i32
  %3118 = xor i32 %3117, %3103
  %3119 = lshr i32 %3118, 4
  %3120 = trunc i32 %3119 to i8
  %3121 = and i8 %3120, 1
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3121, i8* %3122, align 1
  %3123 = icmp eq i32 %3103, 0
  %3124 = zext i1 %3123 to i8
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3124, i8* %3125, align 1
  %3126 = lshr i32 %3103, 31
  %3127 = trunc i32 %3126 to i8
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3127, i8* %3128, align 1
  %3129 = lshr i32 %3102, 31
  %3130 = xor i32 %3126, %3129
  %3131 = add i32 %3130, %3126
  %3132 = icmp eq i32 %3131, 2
  %3133 = zext i1 %3132 to i8
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3133, i8* %3134, align 1
  store %struct.Memory* %loadMem_48c881, %struct.Memory** %MEMORY
  %loadMem_48c884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3136 = getelementptr inbounds %struct.GPR, %struct.GPR* %3135, i32 0, i32 33
  %3137 = getelementptr inbounds %struct.Reg, %struct.Reg* %3136, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %3137 to i64*
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3139 = getelementptr inbounds %struct.GPR, %struct.GPR* %3138, i32 0, i32 1
  %3140 = getelementptr inbounds %struct.Reg, %struct.Reg* %3139, i32 0, i32 0
  %EAX.i1256 = bitcast %union.anon* %3140 to i32*
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3142 = getelementptr inbounds %struct.GPR, %struct.GPR* %3141, i32 0, i32 15
  %3143 = getelementptr inbounds %struct.Reg, %struct.Reg* %3142, i32 0, i32 0
  %RBP.i1257 = bitcast %union.anon* %3143 to i64*
  %3144 = load i64, i64* %RBP.i1257
  %3145 = sub i64 %3144, 44
  %3146 = load i32, i32* %EAX.i1256
  %3147 = zext i32 %3146 to i64
  %3148 = load i64, i64* %PC.i1255
  %3149 = add i64 %3148, 3
  store i64 %3149, i64* %PC.i1255
  %3150 = inttoptr i64 %3145 to i32*
  store i32 %3146, i32* %3150
  store %struct.Memory* %loadMem_48c884, %struct.Memory** %MEMORY
  %loadMem_48c887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 33
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %3153 to i64*
  %3154 = load i64, i64* %PC.i1254
  %3155 = add i64 %3154, -113
  %3156 = load i64, i64* %PC.i1254
  %3157 = add i64 %3156, 5
  store i64 %3157, i64* %PC.i1254
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3155, i64* %3158, align 8
  store %struct.Memory* %loadMem_48c887, %struct.Memory** %MEMORY
  br label %block_.L_48c816

block_.L_48c88c:                                  ; preds = %block_.L_48c816
  %loadMem_48c88c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3160 = getelementptr inbounds %struct.GPR, %struct.GPR* %3159, i32 0, i32 33
  %3161 = getelementptr inbounds %struct.Reg, %struct.Reg* %3160, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %3161 to i64*
  %3162 = load i64, i64* %PC.i1253
  %3163 = add i64 %3162, 5
  %3164 = load i64, i64* %PC.i1253
  %3165 = add i64 %3164, 5
  store i64 %3165, i64* %PC.i1253
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3163, i64* %3166, align 8
  store %struct.Memory* %loadMem_48c88c, %struct.Memory** %MEMORY
  br label %block_.L_48c891

block_.L_48c891:                                  ; preds = %block_.L_48c88c
  %loadMem_48c891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3168 = getelementptr inbounds %struct.GPR, %struct.GPR* %3167, i32 0, i32 33
  %3169 = getelementptr inbounds %struct.Reg, %struct.Reg* %3168, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %3169 to i64*
  %3170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3171 = getelementptr inbounds %struct.GPR, %struct.GPR* %3170, i32 0, i32 1
  %3172 = getelementptr inbounds %struct.Reg, %struct.Reg* %3171, i32 0, i32 0
  %RAX.i1251 = bitcast %union.anon* %3172 to i64*
  %3173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3174 = getelementptr inbounds %struct.GPR, %struct.GPR* %3173, i32 0, i32 15
  %3175 = getelementptr inbounds %struct.Reg, %struct.Reg* %3174, i32 0, i32 0
  %RBP.i1252 = bitcast %union.anon* %3175 to i64*
  %3176 = load i64, i64* %RBP.i1252
  %3177 = sub i64 %3176, 40
  %3178 = load i64, i64* %PC.i1250
  %3179 = add i64 %3178, 3
  store i64 %3179, i64* %PC.i1250
  %3180 = inttoptr i64 %3177 to i32*
  %3181 = load i32, i32* %3180
  %3182 = zext i32 %3181 to i64
  store i64 %3182, i64* %RAX.i1251, align 8
  store %struct.Memory* %loadMem_48c891, %struct.Memory** %MEMORY
  %loadMem_48c894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3184 = getelementptr inbounds %struct.GPR, %struct.GPR* %3183, i32 0, i32 33
  %3185 = getelementptr inbounds %struct.Reg, %struct.Reg* %3184, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %3185 to i64*
  %3186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3187 = getelementptr inbounds %struct.GPR, %struct.GPR* %3186, i32 0, i32 1
  %3188 = getelementptr inbounds %struct.Reg, %struct.Reg* %3187, i32 0, i32 0
  %RAX.i1249 = bitcast %union.anon* %3188 to i64*
  %3189 = load i64, i64* %RAX.i1249
  %3190 = load i64, i64* %PC.i1248
  %3191 = add i64 %3190, 3
  store i64 %3191, i64* %PC.i1248
  %3192 = trunc i64 %3189 to i32
  %3193 = add i32 1, %3192
  %3194 = zext i32 %3193 to i64
  store i64 %3194, i64* %RAX.i1249, align 8
  %3195 = icmp ult i32 %3193, %3192
  %3196 = icmp ult i32 %3193, 1
  %3197 = or i1 %3195, %3196
  %3198 = zext i1 %3197 to i8
  %3199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3198, i8* %3199, align 1
  %3200 = and i32 %3193, 255
  %3201 = call i32 @llvm.ctpop.i32(i32 %3200)
  %3202 = trunc i32 %3201 to i8
  %3203 = and i8 %3202, 1
  %3204 = xor i8 %3203, 1
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3204, i8* %3205, align 1
  %3206 = xor i64 1, %3189
  %3207 = trunc i64 %3206 to i32
  %3208 = xor i32 %3207, %3193
  %3209 = lshr i32 %3208, 4
  %3210 = trunc i32 %3209 to i8
  %3211 = and i8 %3210, 1
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3211, i8* %3212, align 1
  %3213 = icmp eq i32 %3193, 0
  %3214 = zext i1 %3213 to i8
  %3215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3214, i8* %3215, align 1
  %3216 = lshr i32 %3193, 31
  %3217 = trunc i32 %3216 to i8
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3217, i8* %3218, align 1
  %3219 = lshr i32 %3192, 31
  %3220 = xor i32 %3216, %3219
  %3221 = add i32 %3220, %3216
  %3222 = icmp eq i32 %3221, 2
  %3223 = zext i1 %3222 to i8
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3223, i8* %3224, align 1
  store %struct.Memory* %loadMem_48c894, %struct.Memory** %MEMORY
  %loadMem_48c897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3226 = getelementptr inbounds %struct.GPR, %struct.GPR* %3225, i32 0, i32 33
  %3227 = getelementptr inbounds %struct.Reg, %struct.Reg* %3226, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %3227 to i64*
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3229 = getelementptr inbounds %struct.GPR, %struct.GPR* %3228, i32 0, i32 1
  %3230 = getelementptr inbounds %struct.Reg, %struct.Reg* %3229, i32 0, i32 0
  %EAX.i1246 = bitcast %union.anon* %3230 to i32*
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3232 = getelementptr inbounds %struct.GPR, %struct.GPR* %3231, i32 0, i32 15
  %3233 = getelementptr inbounds %struct.Reg, %struct.Reg* %3232, i32 0, i32 0
  %RBP.i1247 = bitcast %union.anon* %3233 to i64*
  %3234 = load i64, i64* %RBP.i1247
  %3235 = sub i64 %3234, 40
  %3236 = load i32, i32* %EAX.i1246
  %3237 = zext i32 %3236 to i64
  %3238 = load i64, i64* %PC.i1245
  %3239 = add i64 %3238, 3
  store i64 %3239, i64* %PC.i1245
  %3240 = inttoptr i64 %3235 to i32*
  store i32 %3236, i32* %3240
  store %struct.Memory* %loadMem_48c897, %struct.Memory** %MEMORY
  %loadMem_48c89a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3242 = getelementptr inbounds %struct.GPR, %struct.GPR* %3241, i32 0, i32 33
  %3243 = getelementptr inbounds %struct.Reg, %struct.Reg* %3242, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %3243 to i64*
  %3244 = load i64, i64* %PC.i1244
  %3245 = add i64 %3244, -149
  %3246 = load i64, i64* %PC.i1244
  %3247 = add i64 %3246, 5
  store i64 %3247, i64* %PC.i1244
  %3248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3245, i64* %3248, align 8
  store %struct.Memory* %loadMem_48c89a, %struct.Memory** %MEMORY
  br label %block_.L_48c805

block_.L_48c89f:                                  ; preds = %block_.L_48c805
  %loadMem_48c89f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3250 = getelementptr inbounds %struct.GPR, %struct.GPR* %3249, i32 0, i32 33
  %3251 = getelementptr inbounds %struct.Reg, %struct.Reg* %3250, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %3251 to i64*
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3253 = getelementptr inbounds %struct.GPR, %struct.GPR* %3252, i32 0, i32 15
  %3254 = getelementptr inbounds %struct.Reg, %struct.Reg* %3253, i32 0, i32 0
  %RBP.i1243 = bitcast %union.anon* %3254 to i64*
  %3255 = load i64, i64* %RBP.i1243
  %3256 = sub i64 %3255, 116
  %3257 = load i64, i64* %PC.i1242
  %3258 = add i64 %3257, 7
  store i64 %3258, i64* %PC.i1242
  %3259 = inttoptr i64 %3256 to i32*
  store i32 0, i32* %3259
  store %struct.Memory* %loadMem_48c89f, %struct.Memory** %MEMORY
  br label %block_.L_48c8a6

block_.L_48c8a6:                                  ; preds = %block_48c8b0, %block_.L_48c89f
  %loadMem_48c8a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3261 = getelementptr inbounds %struct.GPR, %struct.GPR* %3260, i32 0, i32 33
  %3262 = getelementptr inbounds %struct.Reg, %struct.Reg* %3261, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %3262 to i64*
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3264 = getelementptr inbounds %struct.GPR, %struct.GPR* %3263, i32 0, i32 15
  %3265 = getelementptr inbounds %struct.Reg, %struct.Reg* %3264, i32 0, i32 0
  %RBP.i1241 = bitcast %union.anon* %3265 to i64*
  %3266 = load i64, i64* %RBP.i1241
  %3267 = sub i64 %3266, 116
  %3268 = load i64, i64* %PC.i1240
  %3269 = add i64 %3268, 4
  store i64 %3269, i64* %PC.i1240
  %3270 = inttoptr i64 %3267 to i32*
  %3271 = load i32, i32* %3270
  %3272 = sub i32 %3271, 2
  %3273 = icmp ult i32 %3271, 2
  %3274 = zext i1 %3273 to i8
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3274, i8* %3275, align 1
  %3276 = and i32 %3272, 255
  %3277 = call i32 @llvm.ctpop.i32(i32 %3276)
  %3278 = trunc i32 %3277 to i8
  %3279 = and i8 %3278, 1
  %3280 = xor i8 %3279, 1
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3280, i8* %3281, align 1
  %3282 = xor i32 %3271, 2
  %3283 = xor i32 %3282, %3272
  %3284 = lshr i32 %3283, 4
  %3285 = trunc i32 %3284 to i8
  %3286 = and i8 %3285, 1
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3286, i8* %3287, align 1
  %3288 = icmp eq i32 %3272, 0
  %3289 = zext i1 %3288 to i8
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3289, i8* %3290, align 1
  %3291 = lshr i32 %3272, 31
  %3292 = trunc i32 %3291 to i8
  %3293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3292, i8* %3293, align 1
  %3294 = lshr i32 %3271, 31
  %3295 = xor i32 %3291, %3294
  %3296 = add i32 %3295, %3294
  %3297 = icmp eq i32 %3296, 2
  %3298 = zext i1 %3297 to i8
  %3299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3298, i8* %3299, align 1
  store %struct.Memory* %loadMem_48c8a6, %struct.Memory** %MEMORY
  %loadMem_48c8aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3301 = getelementptr inbounds %struct.GPR, %struct.GPR* %3300, i32 0, i32 33
  %3302 = getelementptr inbounds %struct.Reg, %struct.Reg* %3301, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %3302 to i64*
  %3303 = load i64, i64* %PC.i1239
  %3304 = add i64 %3303, 34
  %3305 = load i64, i64* %PC.i1239
  %3306 = add i64 %3305, 6
  %3307 = load i64, i64* %PC.i1239
  %3308 = add i64 %3307, 6
  store i64 %3308, i64* %PC.i1239
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3310 = load i8, i8* %3309, align 1
  %3311 = icmp ne i8 %3310, 0
  %3312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3313 = load i8, i8* %3312, align 1
  %3314 = icmp ne i8 %3313, 0
  %3315 = xor i1 %3311, %3314
  %3316 = xor i1 %3315, true
  %3317 = zext i1 %3316 to i8
  store i8 %3317, i8* %BRANCH_TAKEN, align 1
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3319 = select i1 %3315, i64 %3306, i64 %3304
  store i64 %3319, i64* %3318, align 8
  store %struct.Memory* %loadMem_48c8aa, %struct.Memory** %MEMORY
  %loadBr_48c8aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c8aa = icmp eq i8 %loadBr_48c8aa, 1
  br i1 %cmpBr_48c8aa, label %block_.L_48c8cc, label %block_48c8b0

block_48c8b0:                                     ; preds = %block_.L_48c8a6
  %loadMem_48c8b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3321 = getelementptr inbounds %struct.GPR, %struct.GPR* %3320, i32 0, i32 33
  %3322 = getelementptr inbounds %struct.Reg, %struct.Reg* %3321, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %3322 to i64*
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3324 = getelementptr inbounds %struct.GPR, %struct.GPR* %3323, i32 0, i32 11
  %3325 = getelementptr inbounds %struct.Reg, %struct.Reg* %3324, i32 0, i32 0
  %RDI.i1237 = bitcast %union.anon* %3325 to i64*
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3327 = getelementptr inbounds %struct.GPR, %struct.GPR* %3326, i32 0, i32 15
  %3328 = getelementptr inbounds %struct.Reg, %struct.Reg* %3327, i32 0, i32 0
  %RBP.i1238 = bitcast %union.anon* %3328 to i64*
  %3329 = load i64, i64* %RBP.i1238
  %3330 = sub i64 %3329, 116
  %3331 = load i64, i64* %PC.i1236
  %3332 = add i64 %3331, 3
  store i64 %3332, i64* %PC.i1236
  %3333 = inttoptr i64 %3330 to i32*
  %3334 = load i32, i32* %3333
  %3335 = zext i32 %3334 to i64
  store i64 %3335, i64* %RDI.i1237, align 8
  store %struct.Memory* %loadMem_48c8b0, %struct.Memory** %MEMORY
  %loadMem_48c8b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3337 = getelementptr inbounds %struct.GPR, %struct.GPR* %3336, i32 0, i32 33
  %3338 = getelementptr inbounds %struct.Reg, %struct.Reg* %3337, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %3338 to i64*
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 9
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %RSI.i1234 = bitcast %union.anon* %3341 to i64*
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3343 = getelementptr inbounds %struct.GPR, %struct.GPR* %3342, i32 0, i32 15
  %3344 = getelementptr inbounds %struct.Reg, %struct.Reg* %3343, i32 0, i32 0
  %RBP.i1235 = bitcast %union.anon* %3344 to i64*
  %3345 = load i64, i64* %RBP.i1235
  %3346 = sub i64 %3345, 112
  %3347 = load i64, i64* %PC.i1233
  %3348 = add i64 %3347, 3
  store i64 %3348, i64* %PC.i1233
  %3349 = inttoptr i64 %3346 to i32*
  %3350 = load i32, i32* %3349
  %3351 = zext i32 %3350 to i64
  store i64 %3351, i64* %RSI.i1234, align 8
  store %struct.Memory* %loadMem_48c8b3, %struct.Memory** %MEMORY
  %loadMem1_48c8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3353 = getelementptr inbounds %struct.GPR, %struct.GPR* %3352, i32 0, i32 33
  %3354 = getelementptr inbounds %struct.Reg, %struct.Reg* %3353, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %3354 to i64*
  %3355 = load i64, i64* %PC.i1232
  %3356 = add i64 %3355, -527446
  %3357 = load i64, i64* %PC.i1232
  %3358 = add i64 %3357, 5
  %3359 = load i64, i64* %PC.i1232
  %3360 = add i64 %3359, 5
  store i64 %3360, i64* %PC.i1232
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3362 = load i64, i64* %3361, align 8
  %3363 = add i64 %3362, -8
  %3364 = inttoptr i64 %3363 to i64*
  store i64 %3358, i64* %3364
  store i64 %3363, i64* %3361, align 8
  %3365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3356, i64* %3365, align 8
  store %struct.Memory* %loadMem1_48c8b6, %struct.Memory** %MEMORY
  %loadMem2_48c8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48c8b6 = load i64, i64* %3
  %call2_48c8b6 = call %struct.Memory* @sub_40bc60.dct_chroma_DC(%struct.State* %0, i64 %loadPC_48c8b6, %struct.Memory* %loadMem2_48c8b6)
  store %struct.Memory* %call2_48c8b6, %struct.Memory** %MEMORY
  %loadMem_48c8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3367 = getelementptr inbounds %struct.GPR, %struct.GPR* %3366, i32 0, i32 33
  %3368 = getelementptr inbounds %struct.Reg, %struct.Reg* %3367, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %3368 to i64*
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3370 = getelementptr inbounds %struct.GPR, %struct.GPR* %3369, i32 0, i32 1
  %3371 = getelementptr inbounds %struct.Reg, %struct.Reg* %3370, i32 0, i32 0
  %EAX.i1230 = bitcast %union.anon* %3371 to i32*
  %3372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3373 = getelementptr inbounds %struct.GPR, %struct.GPR* %3372, i32 0, i32 15
  %3374 = getelementptr inbounds %struct.Reg, %struct.Reg* %3373, i32 0, i32 0
  %RBP.i1231 = bitcast %union.anon* %3374 to i64*
  %3375 = load i64, i64* %RBP.i1231
  %3376 = sub i64 %3375, 112
  %3377 = load i32, i32* %EAX.i1230
  %3378 = zext i32 %3377 to i64
  %3379 = load i64, i64* %PC.i1229
  %3380 = add i64 %3379, 3
  store i64 %3380, i64* %PC.i1229
  %3381 = inttoptr i64 %3376 to i32*
  store i32 %3377, i32* %3381
  store %struct.Memory* %loadMem_48c8bb, %struct.Memory** %MEMORY
  %loadMem_48c8be = load %struct.Memory*, %struct.Memory** %MEMORY
  %3382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3383 = getelementptr inbounds %struct.GPR, %struct.GPR* %3382, i32 0, i32 33
  %3384 = getelementptr inbounds %struct.Reg, %struct.Reg* %3383, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %3384 to i64*
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3386 = getelementptr inbounds %struct.GPR, %struct.GPR* %3385, i32 0, i32 1
  %3387 = getelementptr inbounds %struct.Reg, %struct.Reg* %3386, i32 0, i32 0
  %RAX.i1227 = bitcast %union.anon* %3387 to i64*
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3389 = getelementptr inbounds %struct.GPR, %struct.GPR* %3388, i32 0, i32 15
  %3390 = getelementptr inbounds %struct.Reg, %struct.Reg* %3389, i32 0, i32 0
  %RBP.i1228 = bitcast %union.anon* %3390 to i64*
  %3391 = load i64, i64* %RBP.i1228
  %3392 = sub i64 %3391, 116
  %3393 = load i64, i64* %PC.i1226
  %3394 = add i64 %3393, 3
  store i64 %3394, i64* %PC.i1226
  %3395 = inttoptr i64 %3392 to i32*
  %3396 = load i32, i32* %3395
  %3397 = zext i32 %3396 to i64
  store i64 %3397, i64* %RAX.i1227, align 8
  store %struct.Memory* %loadMem_48c8be, %struct.Memory** %MEMORY
  %loadMem_48c8c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3399 = getelementptr inbounds %struct.GPR, %struct.GPR* %3398, i32 0, i32 33
  %3400 = getelementptr inbounds %struct.Reg, %struct.Reg* %3399, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %3400 to i64*
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3402 = getelementptr inbounds %struct.GPR, %struct.GPR* %3401, i32 0, i32 1
  %3403 = getelementptr inbounds %struct.Reg, %struct.Reg* %3402, i32 0, i32 0
  %RAX.i1225 = bitcast %union.anon* %3403 to i64*
  %3404 = load i64, i64* %RAX.i1225
  %3405 = load i64, i64* %PC.i1224
  %3406 = add i64 %3405, 3
  store i64 %3406, i64* %PC.i1224
  %3407 = trunc i64 %3404 to i32
  %3408 = add i32 1, %3407
  %3409 = zext i32 %3408 to i64
  store i64 %3409, i64* %RAX.i1225, align 8
  %3410 = icmp ult i32 %3408, %3407
  %3411 = icmp ult i32 %3408, 1
  %3412 = or i1 %3410, %3411
  %3413 = zext i1 %3412 to i8
  %3414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3413, i8* %3414, align 1
  %3415 = and i32 %3408, 255
  %3416 = call i32 @llvm.ctpop.i32(i32 %3415)
  %3417 = trunc i32 %3416 to i8
  %3418 = and i8 %3417, 1
  %3419 = xor i8 %3418, 1
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3419, i8* %3420, align 1
  %3421 = xor i64 1, %3404
  %3422 = trunc i64 %3421 to i32
  %3423 = xor i32 %3422, %3408
  %3424 = lshr i32 %3423, 4
  %3425 = trunc i32 %3424 to i8
  %3426 = and i8 %3425, 1
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3426, i8* %3427, align 1
  %3428 = icmp eq i32 %3408, 0
  %3429 = zext i1 %3428 to i8
  %3430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3429, i8* %3430, align 1
  %3431 = lshr i32 %3408, 31
  %3432 = trunc i32 %3431 to i8
  %3433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3432, i8* %3433, align 1
  %3434 = lshr i32 %3407, 31
  %3435 = xor i32 %3431, %3434
  %3436 = add i32 %3435, %3431
  %3437 = icmp eq i32 %3436, 2
  %3438 = zext i1 %3437 to i8
  %3439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3438, i8* %3439, align 1
  store %struct.Memory* %loadMem_48c8c1, %struct.Memory** %MEMORY
  %loadMem_48c8c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3441 = getelementptr inbounds %struct.GPR, %struct.GPR* %3440, i32 0, i32 33
  %3442 = getelementptr inbounds %struct.Reg, %struct.Reg* %3441, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %3442 to i64*
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3444 = getelementptr inbounds %struct.GPR, %struct.GPR* %3443, i32 0, i32 1
  %3445 = getelementptr inbounds %struct.Reg, %struct.Reg* %3444, i32 0, i32 0
  %EAX.i1222 = bitcast %union.anon* %3445 to i32*
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3447 = getelementptr inbounds %struct.GPR, %struct.GPR* %3446, i32 0, i32 15
  %3448 = getelementptr inbounds %struct.Reg, %struct.Reg* %3447, i32 0, i32 0
  %RBP.i1223 = bitcast %union.anon* %3448 to i64*
  %3449 = load i64, i64* %RBP.i1223
  %3450 = sub i64 %3449, 116
  %3451 = load i32, i32* %EAX.i1222
  %3452 = zext i32 %3451 to i64
  %3453 = load i64, i64* %PC.i1221
  %3454 = add i64 %3453, 3
  store i64 %3454, i64* %PC.i1221
  %3455 = inttoptr i64 %3450 to i32*
  store i32 %3451, i32* %3455
  store %struct.Memory* %loadMem_48c8c4, %struct.Memory** %MEMORY
  %loadMem_48c8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3457 = getelementptr inbounds %struct.GPR, %struct.GPR* %3456, i32 0, i32 33
  %3458 = getelementptr inbounds %struct.Reg, %struct.Reg* %3457, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %3458 to i64*
  %3459 = load i64, i64* %PC.i1220
  %3460 = add i64 %3459, -33
  %3461 = load i64, i64* %PC.i1220
  %3462 = add i64 %3461, 5
  store i64 %3462, i64* %PC.i1220
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3460, i64* %3463, align 8
  store %struct.Memory* %loadMem_48c8c7, %struct.Memory** %MEMORY
  br label %block_.L_48c8a6

block_.L_48c8cc:                                  ; preds = %block_.L_48c8a6
  %loadMem_48c8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3465 = getelementptr inbounds %struct.GPR, %struct.GPR* %3464, i32 0, i32 33
  %3466 = getelementptr inbounds %struct.Reg, %struct.Reg* %3465, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %3466 to i64*
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3468 = getelementptr inbounds %struct.GPR, %struct.GPR* %3467, i32 0, i32 1
  %3469 = getelementptr inbounds %struct.Reg, %struct.Reg* %3468, i32 0, i32 0
  %RAX.i1218 = bitcast %union.anon* %3469 to i64*
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3471 = getelementptr inbounds %struct.GPR, %struct.GPR* %3470, i32 0, i32 15
  %3472 = getelementptr inbounds %struct.Reg, %struct.Reg* %3471, i32 0, i32 0
  %RBP.i1219 = bitcast %union.anon* %3472 to i64*
  %3473 = load i64, i64* %RBP.i1219
  %3474 = sub i64 %3473, 112
  %3475 = load i64, i64* %PC.i1217
  %3476 = add i64 %3475, 3
  store i64 %3476, i64* %PC.i1217
  %3477 = inttoptr i64 %3474 to i32*
  %3478 = load i32, i32* %3477
  %3479 = zext i32 %3478 to i64
  store i64 %3479, i64* %RAX.i1218, align 8
  store %struct.Memory* %loadMem_48c8cc, %struct.Memory** %MEMORY
  %loadMem_48c8cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3481 = getelementptr inbounds %struct.GPR, %struct.GPR* %3480, i32 0, i32 33
  %3482 = getelementptr inbounds %struct.Reg, %struct.Reg* %3481, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %3482 to i64*
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3484 = getelementptr inbounds %struct.GPR, %struct.GPR* %3483, i32 0, i32 1
  %3485 = getelementptr inbounds %struct.Reg, %struct.Reg* %3484, i32 0, i32 0
  %RAX.i1216 = bitcast %union.anon* %3485 to i64*
  %3486 = load i64, i64* %RAX.i1216
  %3487 = load i64, i64* %PC.i1215
  %3488 = add i64 %3487, 3
  store i64 %3488, i64* %PC.i1215
  %3489 = and i64 %3486, 4294967295
  %3490 = shl i64 %3489, 3
  %3491 = trunc i64 %3490 to i32
  %3492 = icmp slt i32 %3491, 0
  %3493 = shl i32 %3491, 1
  %3494 = zext i32 %3493 to i64
  store i64 %3494, i64* %RAX.i1216, align 8
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3496 = zext i1 %3492 to i8
  store i8 %3496, i8* %3495, align 1
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3498 = and i32 %3493, 254
  %3499 = call i32 @llvm.ctpop.i32(i32 %3498)
  %3500 = trunc i32 %3499 to i8
  %3501 = and i8 %3500, 1
  %3502 = xor i8 %3501, 1
  store i8 %3502, i8* %3497, align 1
  %3503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3503, align 1
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3505 = icmp eq i32 %3493, 0
  %3506 = zext i1 %3505 to i8
  store i8 %3506, i8* %3504, align 1
  %3507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3508 = lshr i32 %3493, 31
  %3509 = trunc i32 %3508 to i8
  store i8 %3509, i8* %3507, align 1
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3510, align 1
  store %struct.Memory* %loadMem_48c8cf, %struct.Memory** %MEMORY
  %loadMem_48c8d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3512 = getelementptr inbounds %struct.GPR, %struct.GPR* %3511, i32 0, i32 33
  %3513 = getelementptr inbounds %struct.Reg, %struct.Reg* %3512, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %3513 to i64*
  %3514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3515 = getelementptr inbounds %struct.GPR, %struct.GPR* %3514, i32 0, i32 5
  %3516 = getelementptr inbounds %struct.Reg, %struct.Reg* %3515, i32 0, i32 0
  %RCX.i1213 = bitcast %union.anon* %3516 to i64*
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3518 = getelementptr inbounds %struct.GPR, %struct.GPR* %3517, i32 0, i32 15
  %3519 = getelementptr inbounds %struct.Reg, %struct.Reg* %3518, i32 0, i32 0
  %RBP.i1214 = bitcast %union.anon* %3519 to i64*
  %3520 = load i64, i64* %RBP.i1214
  %3521 = sub i64 %3520, 80
  %3522 = load i64, i64* %PC.i1212
  %3523 = add i64 %3522, 4
  store i64 %3523, i64* %PC.i1212
  %3524 = inttoptr i64 %3521 to i64*
  %3525 = load i64, i64* %3524
  store i64 %3525, i64* %RCX.i1213, align 8
  store %struct.Memory* %loadMem_48c8d2, %struct.Memory** %MEMORY
  %loadMem_48c8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3527 = getelementptr inbounds %struct.GPR, %struct.GPR* %3526, i32 0, i32 33
  %3528 = getelementptr inbounds %struct.Reg, %struct.Reg* %3527, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %3528 to i64*
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3530 = getelementptr inbounds %struct.GPR, %struct.GPR* %3529, i32 0, i32 1
  %3531 = getelementptr inbounds %struct.Reg, %struct.Reg* %3530, i32 0, i32 0
  %RAX.i1210 = bitcast %union.anon* %3531 to i64*
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3533 = getelementptr inbounds %struct.GPR, %struct.GPR* %3532, i32 0, i32 5
  %3534 = getelementptr inbounds %struct.Reg, %struct.Reg* %3533, i32 0, i32 0
  %RCX.i1211 = bitcast %union.anon* %3534 to i64*
  %3535 = load i64, i64* %RAX.i1210
  %3536 = load i64, i64* %RCX.i1211
  %3537 = add i64 %3536, 460
  %3538 = load i64, i64* %PC.i1209
  %3539 = add i64 %3538, 6
  store i64 %3539, i64* %PC.i1209
  %3540 = trunc i64 %3535 to i32
  %3541 = inttoptr i64 %3537 to i32*
  %3542 = load i32, i32* %3541
  %3543 = add i32 %3542, %3540
  %3544 = zext i32 %3543 to i64
  store i64 %3544, i64* %RAX.i1210, align 8
  %3545 = icmp ult i32 %3543, %3540
  %3546 = icmp ult i32 %3543, %3542
  %3547 = or i1 %3545, %3546
  %3548 = zext i1 %3547 to i8
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3548, i8* %3549, align 1
  %3550 = and i32 %3543, 255
  %3551 = call i32 @llvm.ctpop.i32(i32 %3550)
  %3552 = trunc i32 %3551 to i8
  %3553 = and i8 %3552, 1
  %3554 = xor i8 %3553, 1
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3554, i8* %3555, align 1
  %3556 = xor i32 %3542, %3540
  %3557 = xor i32 %3556, %3543
  %3558 = lshr i32 %3557, 4
  %3559 = trunc i32 %3558 to i8
  %3560 = and i8 %3559, 1
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3560, i8* %3561, align 1
  %3562 = icmp eq i32 %3543, 0
  %3563 = zext i1 %3562 to i8
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3563, i8* %3564, align 1
  %3565 = lshr i32 %3543, 31
  %3566 = trunc i32 %3565 to i8
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3566, i8* %3567, align 1
  %3568 = lshr i32 %3540, 31
  %3569 = lshr i32 %3542, 31
  %3570 = xor i32 %3565, %3568
  %3571 = xor i32 %3565, %3569
  %3572 = add i32 %3570, %3571
  %3573 = icmp eq i32 %3572, 2
  %3574 = zext i1 %3573 to i8
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3574, i8* %3575, align 1
  store %struct.Memory* %loadMem_48c8d6, %struct.Memory** %MEMORY
  %loadMem_48c8dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3577 = getelementptr inbounds %struct.GPR, %struct.GPR* %3576, i32 0, i32 33
  %3578 = getelementptr inbounds %struct.Reg, %struct.Reg* %3577, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %3578 to i64*
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3580 = getelementptr inbounds %struct.GPR, %struct.GPR* %3579, i32 0, i32 1
  %3581 = getelementptr inbounds %struct.Reg, %struct.Reg* %3580, i32 0, i32 0
  %EAX.i1207 = bitcast %union.anon* %3581 to i32*
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3583 = getelementptr inbounds %struct.GPR, %struct.GPR* %3582, i32 0, i32 5
  %3584 = getelementptr inbounds %struct.Reg, %struct.Reg* %3583, i32 0, i32 0
  %RCX.i1208 = bitcast %union.anon* %3584 to i64*
  %3585 = load i64, i64* %RCX.i1208
  %3586 = add i64 %3585, 460
  %3587 = load i32, i32* %EAX.i1207
  %3588 = zext i32 %3587 to i64
  %3589 = load i64, i64* %PC.i1206
  %3590 = add i64 %3589, 6
  store i64 %3590, i64* %PC.i1206
  %3591 = inttoptr i64 %3586 to i32*
  store i32 %3587, i32* %3591
  store %struct.Memory* %loadMem_48c8dc, %struct.Memory** %MEMORY
  br label %block_.L_48c8e2

block_.L_48c8e2:                                  ; preds = %block_.L_48c8cc, %block_48c7d1
  %loadMem_48c8e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3593 = getelementptr inbounds %struct.GPR, %struct.GPR* %3592, i32 0, i32 33
  %3594 = getelementptr inbounds %struct.Reg, %struct.Reg* %3593, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %3594 to i64*
  %3595 = load i64, i64* %PC.i1205
  %3596 = add i64 %3595, 331
  %3597 = load i64, i64* %PC.i1205
  %3598 = add i64 %3597, 5
  store i64 %3598, i64* %PC.i1205
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3596, i64* %3599, align 8
  store %struct.Memory* %loadMem_48c8e2, %struct.Memory** %MEMORY
  br label %block_.L_48ca2d

block_.L_48c8e7:                                  ; preds = %block_.L_48c7c7
  %loadMem_48c8e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3601 = getelementptr inbounds %struct.GPR, %struct.GPR* %3600, i32 0, i32 33
  %3602 = getelementptr inbounds %struct.Reg, %struct.Reg* %3601, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %3602 to i64*
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3604 = getelementptr inbounds %struct.GPR, %struct.GPR* %3603, i32 0, i32 15
  %3605 = getelementptr inbounds %struct.Reg, %struct.Reg* %3604, i32 0, i32 0
  %RBP.i1204 = bitcast %union.anon* %3605 to i64*
  %3606 = load i64, i64* %RBP.i1204
  %3607 = sub i64 %3606, 20
  %3608 = load i64, i64* %PC.i1203
  %3609 = add i64 %3608, 4
  store i64 %3609, i64* %PC.i1203
  %3610 = inttoptr i64 %3607 to i32*
  %3611 = load i32, i32* %3610
  %3612 = sub i32 %3611, 10
  %3613 = icmp ult i32 %3611, 10
  %3614 = zext i1 %3613 to i8
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3614, i8* %3615, align 1
  %3616 = and i32 %3612, 255
  %3617 = call i32 @llvm.ctpop.i32(i32 %3616)
  %3618 = trunc i32 %3617 to i8
  %3619 = and i8 %3618, 1
  %3620 = xor i8 %3619, 1
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3620, i8* %3621, align 1
  %3622 = xor i32 %3611, 10
  %3623 = xor i32 %3622, %3612
  %3624 = lshr i32 %3623, 4
  %3625 = trunc i32 %3624 to i8
  %3626 = and i8 %3625, 1
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3626, i8* %3627, align 1
  %3628 = icmp eq i32 %3612, 0
  %3629 = zext i1 %3628 to i8
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3629, i8* %3630, align 1
  %3631 = lshr i32 %3612, 31
  %3632 = trunc i32 %3631 to i8
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3632, i8* %3633, align 1
  %3634 = lshr i32 %3611, 31
  %3635 = xor i32 %3631, %3634
  %3636 = add i32 %3635, %3634
  %3637 = icmp eq i32 %3636, 2
  %3638 = zext i1 %3637 to i8
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3638, i8* %3639, align 1
  store %struct.Memory* %loadMem_48c8e7, %struct.Memory** %MEMORY
  %loadMem_48c8eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3641 = getelementptr inbounds %struct.GPR, %struct.GPR* %3640, i32 0, i32 33
  %3642 = getelementptr inbounds %struct.Reg, %struct.Reg* %3641, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %3642 to i64*
  %3643 = load i64, i64* %PC.i1202
  %3644 = add i64 %3643, 24
  %3645 = load i64, i64* %PC.i1202
  %3646 = add i64 %3645, 6
  %3647 = load i64, i64* %PC.i1202
  %3648 = add i64 %3647, 6
  store i64 %3648, i64* %PC.i1202
  %3649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3650 = load i8, i8* %3649, align 1
  %3651 = icmp eq i8 %3650, 0
  %3652 = zext i1 %3651 to i8
  store i8 %3652, i8* %BRANCH_TAKEN, align 1
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3654 = select i1 %3651, i64 %3644, i64 %3646
  store i64 %3654, i64* %3653, align 8
  store %struct.Memory* %loadMem_48c8eb, %struct.Memory** %MEMORY
  %loadBr_48c8eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c8eb = icmp eq i8 %loadBr_48c8eb, 1
  br i1 %cmpBr_48c8eb, label %block_.L_48c903, label %block_48c8f1

block_48c8f1:                                     ; preds = %block_.L_48c8e7
  %loadMem_48c8f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3656 = getelementptr inbounds %struct.GPR, %struct.GPR* %3655, i32 0, i32 33
  %3657 = getelementptr inbounds %struct.Reg, %struct.Reg* %3656, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %3657 to i64*
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3659 = getelementptr inbounds %struct.GPR, %struct.GPR* %3658, i32 0, i32 9
  %3660 = getelementptr inbounds %struct.Reg, %struct.Reg* %3659, i32 0, i32 0
  %RSI.i1200 = bitcast %union.anon* %3660 to i64*
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3662 = getelementptr inbounds %struct.GPR, %struct.GPR* %3661, i32 0, i32 15
  %3663 = getelementptr inbounds %struct.Reg, %struct.Reg* %3662, i32 0, i32 0
  %RBP.i1201 = bitcast %union.anon* %3663 to i64*
  %3664 = load i64, i64* %RBP.i1201
  %3665 = sub i64 %3664, 36
  %3666 = load i64, i64* %PC.i1199
  %3667 = add i64 %3666, 4
  store i64 %3667, i64* %PC.i1199
  store i64 %3665, i64* %RSI.i1200, align 8
  store %struct.Memory* %loadMem_48c8f1, %struct.Memory** %MEMORY
  %loadMem_48c8f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3669 = getelementptr inbounds %struct.GPR, %struct.GPR* %3668, i32 0, i32 33
  %3670 = getelementptr inbounds %struct.Reg, %struct.Reg* %3669, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %3670 to i64*
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3672 = getelementptr inbounds %struct.GPR, %struct.GPR* %3671, i32 0, i32 11
  %3673 = getelementptr inbounds %struct.Reg, %struct.Reg* %3672, i32 0, i32 0
  %RDI.i1197 = bitcast %union.anon* %3673 to i64*
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3675 = getelementptr inbounds %struct.GPR, %struct.GPR* %3674, i32 0, i32 15
  %3676 = getelementptr inbounds %struct.Reg, %struct.Reg* %3675, i32 0, i32 0
  %RBP.i1198 = bitcast %union.anon* %3676 to i64*
  %3677 = load i64, i64* %RBP.i1198
  %3678 = sub i64 %3677, 80
  %3679 = load i64, i64* %PC.i1196
  %3680 = add i64 %3679, 4
  store i64 %3680, i64* %PC.i1196
  %3681 = inttoptr i64 %3678 to i64*
  %3682 = load i64, i64* %3681
  store i64 %3682, i64* %RDI.i1197, align 8
  store %struct.Memory* %loadMem_48c8f5, %struct.Memory** %MEMORY
  %loadMem1_48c8f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3684 = getelementptr inbounds %struct.GPR, %struct.GPR* %3683, i32 0, i32 33
  %3685 = getelementptr inbounds %struct.Reg, %struct.Reg* %3684, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %3685 to i64*
  %3686 = load i64, i64* %PC.i1195
  %3687 = add i64 %3686, -14569
  %3688 = load i64, i64* %PC.i1195
  %3689 = add i64 %3688, 5
  %3690 = load i64, i64* %PC.i1195
  %3691 = add i64 %3690, 5
  store i64 %3691, i64* %PC.i1195
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3693 = load i64, i64* %3692, align 8
  %3694 = add i64 %3693, -8
  %3695 = inttoptr i64 %3694 to i64*
  store i64 %3689, i64* %3695
  store i64 %3694, i64* %3692, align 8
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3687, i64* %3696, align 8
  store %struct.Memory* %loadMem1_48c8f9, %struct.Memory** %MEMORY
  %loadMem2_48c8f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48c8f9 = load i64, i64* %3
  %call2_48c8f9 = call %struct.Memory* @sub_489010.Intra16x16_Mode_Decision(%struct.State* %0, i64 %loadPC_48c8f9, %struct.Memory* %loadMem2_48c8f9)
  store %struct.Memory* %call2_48c8f9, %struct.Memory** %MEMORY
  %loadMem_48c8fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3698 = getelementptr inbounds %struct.GPR, %struct.GPR* %3697, i32 0, i32 33
  %3699 = getelementptr inbounds %struct.Reg, %struct.Reg* %3698, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %3699 to i64*
  %3700 = load i64, i64* %PC.i1194
  %3701 = add i64 %3700, 298
  %3702 = load i64, i64* %PC.i1194
  %3703 = add i64 %3702, 5
  store i64 %3703, i64* %PC.i1194
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3701, i64* %3704, align 8
  store %struct.Memory* %loadMem_48c8fe, %struct.Memory** %MEMORY
  br label %block_.L_48ca28

block_.L_48c903:                                  ; preds = %block_.L_48c8e7
  %loadMem_48c903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3706 = getelementptr inbounds %struct.GPR, %struct.GPR* %3705, i32 0, i32 33
  %3707 = getelementptr inbounds %struct.Reg, %struct.Reg* %3706, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %3707 to i64*
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3709 = getelementptr inbounds %struct.GPR, %struct.GPR* %3708, i32 0, i32 15
  %3710 = getelementptr inbounds %struct.Reg, %struct.Reg* %3709, i32 0, i32 0
  %RBP.i1193 = bitcast %union.anon* %3710 to i64*
  %3711 = load i64, i64* %RBP.i1193
  %3712 = sub i64 %3711, 20
  %3713 = load i64, i64* %PC.i1192
  %3714 = add i64 %3713, 4
  store i64 %3714, i64* %PC.i1192
  %3715 = inttoptr i64 %3712 to i32*
  %3716 = load i32, i32* %3715
  %3717 = sub i32 %3716, 13
  %3718 = icmp ult i32 %3716, 13
  %3719 = zext i1 %3718 to i8
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3719, i8* %3720, align 1
  %3721 = and i32 %3717, 255
  %3722 = call i32 @llvm.ctpop.i32(i32 %3721)
  %3723 = trunc i32 %3722 to i8
  %3724 = and i8 %3723, 1
  %3725 = xor i8 %3724, 1
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3725, i8* %3726, align 1
  %3727 = xor i32 %3716, 13
  %3728 = xor i32 %3727, %3717
  %3729 = lshr i32 %3728, 4
  %3730 = trunc i32 %3729 to i8
  %3731 = and i8 %3730, 1
  %3732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3731, i8* %3732, align 1
  %3733 = icmp eq i32 %3717, 0
  %3734 = zext i1 %3733 to i8
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3734, i8* %3735, align 1
  %3736 = lshr i32 %3717, 31
  %3737 = trunc i32 %3736 to i8
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3737, i8* %3738, align 1
  %3739 = lshr i32 %3716, 31
  %3740 = xor i32 %3736, %3739
  %3741 = add i32 %3740, %3739
  %3742 = icmp eq i32 %3741, 2
  %3743 = zext i1 %3742 to i8
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3743, i8* %3744, align 1
  store %struct.Memory* %loadMem_48c903, %struct.Memory** %MEMORY
  %loadMem_48c907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3746 = getelementptr inbounds %struct.GPR, %struct.GPR* %3745, i32 0, i32 33
  %3747 = getelementptr inbounds %struct.Reg, %struct.Reg* %3746, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %3747 to i64*
  %3748 = load i64, i64* %PC.i1191
  %3749 = add i64 %3748, 284
  %3750 = load i64, i64* %PC.i1191
  %3751 = add i64 %3750, 6
  %3752 = load i64, i64* %PC.i1191
  %3753 = add i64 %3752, 6
  store i64 %3753, i64* %PC.i1191
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3755 = load i8, i8* %3754, align 1
  %3756 = icmp eq i8 %3755, 0
  %3757 = zext i1 %3756 to i8
  store i8 %3757, i8* %BRANCH_TAKEN, align 1
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3759 = select i1 %3756, i64 %3749, i64 %3751
  store i64 %3759, i64* %3758, align 8
  store %struct.Memory* %loadMem_48c907, %struct.Memory** %MEMORY
  %loadBr_48c907 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c907 = icmp eq i8 %loadBr_48c907, 1
  br i1 %cmpBr_48c907, label %block_.L_48ca23, label %block_48c90d

block_48c90d:                                     ; preds = %block_.L_48c903
  %loadMem_48c90d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3761 = getelementptr inbounds %struct.GPR, %struct.GPR* %3760, i32 0, i32 33
  %3762 = getelementptr inbounds %struct.Reg, %struct.Reg* %3761, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %3762 to i64*
  %3763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3764 = getelementptr inbounds %struct.GPR, %struct.GPR* %3763, i32 0, i32 11
  %3765 = getelementptr inbounds %struct.Reg, %struct.Reg* %3764, i32 0, i32 0
  %RDI.i1189 = bitcast %union.anon* %3765 to i64*
  %3766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3767 = getelementptr inbounds %struct.GPR, %struct.GPR* %3766, i32 0, i32 15
  %3768 = getelementptr inbounds %struct.Reg, %struct.Reg* %3767, i32 0, i32 0
  %RBP.i1190 = bitcast %union.anon* %3768 to i64*
  %3769 = load i64, i64* %RBP.i1190
  %3770 = sub i64 %3769, 108
  %3771 = load i64, i64* %PC.i1188
  %3772 = add i64 %3771, 4
  store i64 %3772, i64* %PC.i1188
  store i64 %3770, i64* %RDI.i1189, align 8
  store %struct.Memory* %loadMem_48c90d, %struct.Memory** %MEMORY
  %loadMem_48c911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3774 = getelementptr inbounds %struct.GPR, %struct.GPR* %3773, i32 0, i32 33
  %3775 = getelementptr inbounds %struct.Reg, %struct.Reg* %3774, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %3775 to i64*
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3777 = getelementptr inbounds %struct.GPR, %struct.GPR* %3776, i32 0, i32 15
  %3778 = getelementptr inbounds %struct.Reg, %struct.Reg* %3777, i32 0, i32 0
  %RBP.i1186 = bitcast %union.anon* %3778 to i64*
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3780 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3779, i64 0, i64 0
  %YMM0.i1187 = bitcast %union.VectorReg* %3780 to %"class.std::bitset"*
  %3781 = bitcast %"class.std::bitset"* %YMM0.i1187 to i8*
  %3782 = load i64, i64* %RBP.i1186
  %3783 = sub i64 %3782, 16
  %3784 = load i64, i64* %PC.i1185
  %3785 = add i64 %3784, 5
  store i64 %3785, i64* %PC.i1185
  %3786 = inttoptr i64 %3783 to double*
  %3787 = load double, double* %3786
  %3788 = bitcast i8* %3781 to double*
  store double %3787, double* %3788, align 1
  %3789 = getelementptr inbounds i8, i8* %3781, i64 8
  %3790 = bitcast i8* %3789 to double*
  store double 0.000000e+00, double* %3790, align 1
  store %struct.Memory* %loadMem_48c911, %struct.Memory** %MEMORY
  %loadMem1_48c916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3792 = getelementptr inbounds %struct.GPR, %struct.GPR* %3791, i32 0, i32 33
  %3793 = getelementptr inbounds %struct.Reg, %struct.Reg* %3792, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %3793 to i64*
  %3794 = load i64, i64* %PC.i1184
  %3795 = add i64 %3794, 95818
  %3796 = load i64, i64* %PC.i1184
  %3797 = add i64 %3796, 5
  %3798 = load i64, i64* %PC.i1184
  %3799 = add i64 %3798, 5
  store i64 %3799, i64* %PC.i1184
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3801 = load i64, i64* %3800, align 8
  %3802 = add i64 %3801, -8
  %3803 = inttoptr i64 %3802 to i64*
  store i64 %3797, i64* %3803
  store i64 %3802, i64* %3800, align 8
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3795, i64* %3804, align 8
  store %struct.Memory* %loadMem1_48c916, %struct.Memory** %MEMORY
  %loadMem2_48c916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48c916 = load i64, i64* %3
  %call2_48c916 = call %struct.Memory* @sub_4a3f60.Mode_Decision_for_new_Intra8x8Macroblock(%struct.State* %0, i64 %loadPC_48c916, %struct.Memory* %loadMem2_48c916)
  store %struct.Memory* %call2_48c916, %struct.Memory** %MEMORY
  %loadMem_48c91b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3806 = getelementptr inbounds %struct.GPR, %struct.GPR* %3805, i32 0, i32 33
  %3807 = getelementptr inbounds %struct.Reg, %struct.Reg* %3806, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %3807 to i64*
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3809 = getelementptr inbounds %struct.GPR, %struct.GPR* %3808, i32 0, i32 11
  %3810 = getelementptr inbounds %struct.Reg, %struct.Reg* %3809, i32 0, i32 0
  %RDI.i1182 = bitcast %union.anon* %3810 to i64*
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3812 = getelementptr inbounds %struct.GPR, %struct.GPR* %3811, i32 0, i32 15
  %3813 = getelementptr inbounds %struct.Reg, %struct.Reg* %3812, i32 0, i32 0
  %RBP.i1183 = bitcast %union.anon* %3813 to i64*
  %3814 = load i64, i64* %RBP.i1183
  %3815 = sub i64 %3814, 80
  %3816 = load i64, i64* %PC.i1181
  %3817 = add i64 %3816, 4
  store i64 %3817, i64* %PC.i1181
  %3818 = inttoptr i64 %3815 to i64*
  %3819 = load i64, i64* %3818
  store i64 %3819, i64* %RDI.i1182, align 8
  store %struct.Memory* %loadMem_48c91b, %struct.Memory** %MEMORY
  %loadMem_48c91f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3821 = getelementptr inbounds %struct.GPR, %struct.GPR* %3820, i32 0, i32 33
  %3822 = getelementptr inbounds %struct.Reg, %struct.Reg* %3821, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %3822 to i64*
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3824 = getelementptr inbounds %struct.GPR, %struct.GPR* %3823, i32 0, i32 1
  %3825 = getelementptr inbounds %struct.Reg, %struct.Reg* %3824, i32 0, i32 0
  %EAX.i1179 = bitcast %union.anon* %3825 to i32*
  %3826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3827 = getelementptr inbounds %struct.GPR, %struct.GPR* %3826, i32 0, i32 11
  %3828 = getelementptr inbounds %struct.Reg, %struct.Reg* %3827, i32 0, i32 0
  %RDI.i1180 = bitcast %union.anon* %3828 to i64*
  %3829 = load i64, i64* %RDI.i1180
  %3830 = add i64 %3829, 460
  %3831 = load i32, i32* %EAX.i1179
  %3832 = zext i32 %3831 to i64
  %3833 = load i64, i64* %PC.i1178
  %3834 = add i64 %3833, 6
  store i64 %3834, i64* %PC.i1178
  %3835 = inttoptr i64 %3830 to i32*
  store i32 %3831, i32* %3835
  store %struct.Memory* %loadMem_48c91f, %struct.Memory** %MEMORY
  %loadMem_48c925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3837 = getelementptr inbounds %struct.GPR, %struct.GPR* %3836, i32 0, i32 33
  %3838 = getelementptr inbounds %struct.Reg, %struct.Reg* %3837, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %3838 to i64*
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3840 = getelementptr inbounds %struct.GPR, %struct.GPR* %3839, i32 0, i32 11
  %3841 = getelementptr inbounds %struct.Reg, %struct.Reg* %3840, i32 0, i32 0
  %RDI.i1177 = bitcast %union.anon* %3841 to i64*
  %3842 = load i64, i64* %PC.i1176
  %3843 = add i64 %3842, 8
  store i64 %3843, i64* %PC.i1176
  %3844 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3844, i64* %RDI.i1177, align 8
  store %struct.Memory* %loadMem_48c925, %struct.Memory** %MEMORY
  %loadMem_48c92d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3846 = getelementptr inbounds %struct.GPR, %struct.GPR* %3845, i32 0, i32 33
  %3847 = getelementptr inbounds %struct.Reg, %struct.Reg* %3846, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %3847 to i64*
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3849 = getelementptr inbounds %struct.GPR, %struct.GPR* %3848, i32 0, i32 11
  %3850 = getelementptr inbounds %struct.Reg, %struct.Reg* %3849, i32 0, i32 0
  %RDI.i1175 = bitcast %union.anon* %3850 to i64*
  %3851 = load i64, i64* %RDI.i1175
  %3852 = add i64 %3851, 72724
  %3853 = load i64, i64* %PC.i1174
  %3854 = add i64 %3853, 7
  store i64 %3854, i64* %PC.i1174
  %3855 = inttoptr i64 %3852 to i32*
  %3856 = load i32, i32* %3855
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3857, align 1
  %3858 = and i32 %3856, 255
  %3859 = call i32 @llvm.ctpop.i32(i32 %3858)
  %3860 = trunc i32 %3859 to i8
  %3861 = and i8 %3860, 1
  %3862 = xor i8 %3861, 1
  %3863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3862, i8* %3863, align 1
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3864, align 1
  %3865 = icmp eq i32 %3856, 0
  %3866 = zext i1 %3865 to i8
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3866, i8* %3867, align 1
  %3868 = lshr i32 %3856, 31
  %3869 = trunc i32 %3868 to i8
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3869, i8* %3870, align 1
  %3871 = lshr i32 %3856, 31
  %3872 = xor i32 %3868, %3871
  %3873 = add i32 %3872, %3871
  %3874 = icmp eq i32 %3873, 2
  %3875 = zext i1 %3874 to i8
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3875, i8* %3876, align 1
  store %struct.Memory* %loadMem_48c92d, %struct.Memory** %MEMORY
  %loadMem_48c934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3878 = getelementptr inbounds %struct.GPR, %struct.GPR* %3877, i32 0, i32 33
  %3879 = getelementptr inbounds %struct.Reg, %struct.Reg* %3878, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %3879 to i64*
  %3880 = load i64, i64* %PC.i1173
  %3881 = add i64 %3880, 234
  %3882 = load i64, i64* %PC.i1173
  %3883 = add i64 %3882, 6
  %3884 = load i64, i64* %PC.i1173
  %3885 = add i64 %3884, 6
  store i64 %3885, i64* %PC.i1173
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3887 = load i8, i8* %3886, align 1
  store i8 %3887, i8* %BRANCH_TAKEN, align 1
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3889 = icmp ne i8 %3887, 0
  %3890 = select i1 %3889, i64 %3881, i64 %3883
  store i64 %3890, i64* %3888, align 8
  store %struct.Memory* %loadMem_48c934, %struct.Memory** %MEMORY
  %loadBr_48c934 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c934 = icmp eq i8 %loadBr_48c934, 1
  br i1 %cmpBr_48c934, label %block_.L_48ca1e, label %block_48c93a

block_48c93a:                                     ; preds = %block_48c90d
  %loadMem_48c93a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3892 = getelementptr inbounds %struct.GPR, %struct.GPR* %3891, i32 0, i32 33
  %3893 = getelementptr inbounds %struct.Reg, %struct.Reg* %3892, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %3893 to i64*
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3895 = getelementptr inbounds %struct.GPR, %struct.GPR* %3894, i32 0, i32 15
  %3896 = getelementptr inbounds %struct.Reg, %struct.Reg* %3895, i32 0, i32 0
  %RBP.i1172 = bitcast %union.anon* %3896 to i64*
  %3897 = load i64, i64* %RBP.i1172
  %3898 = sub i64 %3897, 40
  %3899 = load i64, i64* %PC.i1171
  %3900 = add i64 %3899, 7
  store i64 %3900, i64* %PC.i1171
  %3901 = inttoptr i64 %3898 to i32*
  store i32 0, i32* %3901
  store %struct.Memory* %loadMem_48c93a, %struct.Memory** %MEMORY
  br label %block_.L_48c941

block_.L_48c941:                                  ; preds = %block_.L_48c9cd, %block_48c93a
  %loadMem_48c941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3903 = getelementptr inbounds %struct.GPR, %struct.GPR* %3902, i32 0, i32 33
  %3904 = getelementptr inbounds %struct.Reg, %struct.Reg* %3903, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %3904 to i64*
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3906 = getelementptr inbounds %struct.GPR, %struct.GPR* %3905, i32 0, i32 15
  %3907 = getelementptr inbounds %struct.Reg, %struct.Reg* %3906, i32 0, i32 0
  %RBP.i1170 = bitcast %union.anon* %3907 to i64*
  %3908 = load i64, i64* %RBP.i1170
  %3909 = sub i64 %3908, 40
  %3910 = load i64, i64* %PC.i1169
  %3911 = add i64 %3910, 4
  store i64 %3911, i64* %PC.i1169
  %3912 = inttoptr i64 %3909 to i32*
  %3913 = load i32, i32* %3912
  %3914 = sub i32 %3913, 2
  %3915 = icmp ult i32 %3913, 2
  %3916 = zext i1 %3915 to i8
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3916, i8* %3917, align 1
  %3918 = and i32 %3914, 255
  %3919 = call i32 @llvm.ctpop.i32(i32 %3918)
  %3920 = trunc i32 %3919 to i8
  %3921 = and i8 %3920, 1
  %3922 = xor i8 %3921, 1
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3922, i8* %3923, align 1
  %3924 = xor i32 %3913, 2
  %3925 = xor i32 %3924, %3914
  %3926 = lshr i32 %3925, 4
  %3927 = trunc i32 %3926 to i8
  %3928 = and i8 %3927, 1
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3928, i8* %3929, align 1
  %3930 = icmp eq i32 %3914, 0
  %3931 = zext i1 %3930 to i8
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3931, i8* %3932, align 1
  %3933 = lshr i32 %3914, 31
  %3934 = trunc i32 %3933 to i8
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3934, i8* %3935, align 1
  %3936 = lshr i32 %3913, 31
  %3937 = xor i32 %3933, %3936
  %3938 = add i32 %3937, %3936
  %3939 = icmp eq i32 %3938, 2
  %3940 = zext i1 %3939 to i8
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3940, i8* %3941, align 1
  store %struct.Memory* %loadMem_48c941, %struct.Memory** %MEMORY
  %loadMem_48c945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3943 = getelementptr inbounds %struct.GPR, %struct.GPR* %3942, i32 0, i32 33
  %3944 = getelementptr inbounds %struct.Reg, %struct.Reg* %3943, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %3944 to i64*
  %3945 = load i64, i64* %PC.i1168
  %3946 = add i64 %3945, 150
  %3947 = load i64, i64* %PC.i1168
  %3948 = add i64 %3947, 6
  %3949 = load i64, i64* %PC.i1168
  %3950 = add i64 %3949, 6
  store i64 %3950, i64* %PC.i1168
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3952 = load i8, i8* %3951, align 1
  %3953 = icmp ne i8 %3952, 0
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3955 = load i8, i8* %3954, align 1
  %3956 = icmp ne i8 %3955, 0
  %3957 = xor i1 %3953, %3956
  %3958 = xor i1 %3957, true
  %3959 = zext i1 %3958 to i8
  store i8 %3959, i8* %BRANCH_TAKEN, align 1
  %3960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3961 = select i1 %3957, i64 %3948, i64 %3946
  store i64 %3961, i64* %3960, align 8
  store %struct.Memory* %loadMem_48c945, %struct.Memory** %MEMORY
  %loadBr_48c945 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c945 = icmp eq i8 %loadBr_48c945, 1
  br i1 %cmpBr_48c945, label %block_.L_48c9db, label %block_48c94b

block_48c94b:                                     ; preds = %block_.L_48c941
  %loadMem_48c94b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 33
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %3964 to i64*
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 15
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %RBP.i1167 = bitcast %union.anon* %3967 to i64*
  %3968 = load i64, i64* %RBP.i1167
  %3969 = sub i64 %3968, 44
  %3970 = load i64, i64* %PC.i1166
  %3971 = add i64 %3970, 7
  store i64 %3971, i64* %PC.i1166
  %3972 = inttoptr i64 %3969 to i32*
  store i32 0, i32* %3972
  store %struct.Memory* %loadMem_48c94b, %struct.Memory** %MEMORY
  br label %block_.L_48c952

block_.L_48c952:                                  ; preds = %block_.L_48c9ba, %block_48c94b
  %loadMem_48c952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3974 = getelementptr inbounds %struct.GPR, %struct.GPR* %3973, i32 0, i32 33
  %3975 = getelementptr inbounds %struct.Reg, %struct.Reg* %3974, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %3975 to i64*
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3977 = getelementptr inbounds %struct.GPR, %struct.GPR* %3976, i32 0, i32 15
  %3978 = getelementptr inbounds %struct.Reg, %struct.Reg* %3977, i32 0, i32 0
  %RBP.i1165 = bitcast %union.anon* %3978 to i64*
  %3979 = load i64, i64* %RBP.i1165
  %3980 = sub i64 %3979, 44
  %3981 = load i64, i64* %PC.i1164
  %3982 = add i64 %3981, 4
  store i64 %3982, i64* %PC.i1164
  %3983 = inttoptr i64 %3980 to i32*
  %3984 = load i32, i32* %3983
  %3985 = sub i32 %3984, 4
  %3986 = icmp ult i32 %3984, 4
  %3987 = zext i1 %3986 to i8
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3987, i8* %3988, align 1
  %3989 = and i32 %3985, 255
  %3990 = call i32 @llvm.ctpop.i32(i32 %3989)
  %3991 = trunc i32 %3990 to i8
  %3992 = and i8 %3991, 1
  %3993 = xor i8 %3992, 1
  %3994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3993, i8* %3994, align 1
  %3995 = xor i32 %3984, 4
  %3996 = xor i32 %3995, %3985
  %3997 = lshr i32 %3996, 4
  %3998 = trunc i32 %3997 to i8
  %3999 = and i8 %3998, 1
  %4000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3999, i8* %4000, align 1
  %4001 = icmp eq i32 %3985, 0
  %4002 = zext i1 %4001 to i8
  %4003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4002, i8* %4003, align 1
  %4004 = lshr i32 %3985, 31
  %4005 = trunc i32 %4004 to i8
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4005, i8* %4006, align 1
  %4007 = lshr i32 %3984, 31
  %4008 = xor i32 %4004, %4007
  %4009 = add i32 %4008, %4007
  %4010 = icmp eq i32 %4009, 2
  %4011 = zext i1 %4010 to i8
  %4012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4011, i8* %4012, align 1
  store %struct.Memory* %loadMem_48c952, %struct.Memory** %MEMORY
  %loadMem_48c956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 33
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %4015 to i64*
  %4016 = load i64, i64* %PC.i1163
  %4017 = add i64 %4016, 114
  %4018 = load i64, i64* %PC.i1163
  %4019 = add i64 %4018, 6
  %4020 = load i64, i64* %PC.i1163
  %4021 = add i64 %4020, 6
  store i64 %4021, i64* %PC.i1163
  %4022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4023 = load i8, i8* %4022, align 1
  %4024 = icmp ne i8 %4023, 0
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4026 = load i8, i8* %4025, align 1
  %4027 = icmp ne i8 %4026, 0
  %4028 = xor i1 %4024, %4027
  %4029 = xor i1 %4028, true
  %4030 = zext i1 %4029 to i8
  store i8 %4030, i8* %BRANCH_TAKEN, align 1
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4032 = select i1 %4028, i64 %4019, i64 %4017
  store i64 %4032, i64* %4031, align 8
  store %struct.Memory* %loadMem_48c956, %struct.Memory** %MEMORY
  %loadBr_48c956 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c956 = icmp eq i8 %loadBr_48c956, 1
  br i1 %cmpBr_48c956, label %block_.L_48c9c8, label %block_48c95c

block_48c95c:                                     ; preds = %block_.L_48c952
  %loadMem_48c95c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4034 = getelementptr inbounds %struct.GPR, %struct.GPR* %4033, i32 0, i32 33
  %4035 = getelementptr inbounds %struct.Reg, %struct.Reg* %4034, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %4035 to i64*
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4037 = getelementptr inbounds %struct.GPR, %struct.GPR* %4036, i32 0, i32 15
  %4038 = getelementptr inbounds %struct.Reg, %struct.Reg* %4037, i32 0, i32 0
  %RBP.i1162 = bitcast %union.anon* %4038 to i64*
  %4039 = load i64, i64* %RBP.i1162
  %4040 = sub i64 %4039, 48
  %4041 = load i64, i64* %PC.i1161
  %4042 = add i64 %4041, 7
  store i64 %4042, i64* %PC.i1161
  %4043 = inttoptr i64 %4040 to i32*
  store i32 0, i32* %4043
  store %struct.Memory* %loadMem_48c95c, %struct.Memory** %MEMORY
  br label %block_.L_48c963

block_.L_48c963:                                  ; preds = %block_.L_48c9a7, %block_48c95c
  %loadMem_48c963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4045 = getelementptr inbounds %struct.GPR, %struct.GPR* %4044, i32 0, i32 33
  %4046 = getelementptr inbounds %struct.Reg, %struct.Reg* %4045, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %4046 to i64*
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4048 = getelementptr inbounds %struct.GPR, %struct.GPR* %4047, i32 0, i32 15
  %4049 = getelementptr inbounds %struct.Reg, %struct.Reg* %4048, i32 0, i32 0
  %RBP.i1160 = bitcast %union.anon* %4049 to i64*
  %4050 = load i64, i64* %RBP.i1160
  %4051 = sub i64 %4050, 48
  %4052 = load i64, i64* %PC.i1159
  %4053 = add i64 %4052, 4
  store i64 %4053, i64* %PC.i1159
  %4054 = inttoptr i64 %4051 to i32*
  %4055 = load i32, i32* %4054
  %4056 = sub i32 %4055, 4
  %4057 = icmp ult i32 %4055, 4
  %4058 = zext i1 %4057 to i8
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4058, i8* %4059, align 1
  %4060 = and i32 %4056, 255
  %4061 = call i32 @llvm.ctpop.i32(i32 %4060)
  %4062 = trunc i32 %4061 to i8
  %4063 = and i8 %4062, 1
  %4064 = xor i8 %4063, 1
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4064, i8* %4065, align 1
  %4066 = xor i32 %4055, 4
  %4067 = xor i32 %4066, %4056
  %4068 = lshr i32 %4067, 4
  %4069 = trunc i32 %4068 to i8
  %4070 = and i8 %4069, 1
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4070, i8* %4071, align 1
  %4072 = icmp eq i32 %4056, 0
  %4073 = zext i1 %4072 to i8
  %4074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4073, i8* %4074, align 1
  %4075 = lshr i32 %4056, 31
  %4076 = trunc i32 %4075 to i8
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4076, i8* %4077, align 1
  %4078 = lshr i32 %4055, 31
  %4079 = xor i32 %4075, %4078
  %4080 = add i32 %4079, %4078
  %4081 = icmp eq i32 %4080, 2
  %4082 = zext i1 %4081 to i8
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4082, i8* %4083, align 1
  store %struct.Memory* %loadMem_48c963, %struct.Memory** %MEMORY
  %loadMem_48c967 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4085 = getelementptr inbounds %struct.GPR, %struct.GPR* %4084, i32 0, i32 33
  %4086 = getelementptr inbounds %struct.Reg, %struct.Reg* %4085, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %4086 to i64*
  %4087 = load i64, i64* %PC.i1158
  %4088 = add i64 %4087, 78
  %4089 = load i64, i64* %PC.i1158
  %4090 = add i64 %4089, 6
  %4091 = load i64, i64* %PC.i1158
  %4092 = add i64 %4091, 6
  store i64 %4092, i64* %PC.i1158
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4094 = load i8, i8* %4093, align 1
  %4095 = icmp ne i8 %4094, 0
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4097 = load i8, i8* %4096, align 1
  %4098 = icmp ne i8 %4097, 0
  %4099 = xor i1 %4095, %4098
  %4100 = xor i1 %4099, true
  %4101 = zext i1 %4100 to i8
  store i8 %4101, i8* %BRANCH_TAKEN, align 1
  %4102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4103 = select i1 %4099, i64 %4090, i64 %4088
  store i64 %4103, i64* %4102, align 8
  store %struct.Memory* %loadMem_48c967, %struct.Memory** %MEMORY
  %loadBr_48c967 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c967 = icmp eq i8 %loadBr_48c967, 1
  br i1 %cmpBr_48c967, label %block_.L_48c9b5, label %block_48c96d

block_48c96d:                                     ; preds = %block_.L_48c963
  %loadMem_48c96d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4105 = getelementptr inbounds %struct.GPR, %struct.GPR* %4104, i32 0, i32 33
  %4106 = getelementptr inbounds %struct.Reg, %struct.Reg* %4105, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %4106 to i64*
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4108 = getelementptr inbounds %struct.GPR, %struct.GPR* %4107, i32 0, i32 1
  %4109 = getelementptr inbounds %struct.Reg, %struct.Reg* %4108, i32 0, i32 0
  %RAX.i1157 = bitcast %union.anon* %4109 to i64*
  %4110 = load i64, i64* %PC.i1156
  %4111 = add i64 %4110, 10
  store i64 %4111, i64* %PC.i1156
  store i64 ptrtoint (%G__0x6d0920_type* @G__0x6d0920 to i64), i64* %RAX.i1157, align 8
  store %struct.Memory* %loadMem_48c96d, %struct.Memory** %MEMORY
  %loadMem_48c977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4113 = getelementptr inbounds %struct.GPR, %struct.GPR* %4112, i32 0, i32 33
  %4114 = getelementptr inbounds %struct.Reg, %struct.Reg* %4113, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %4114 to i64*
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4116 = getelementptr inbounds %struct.GPR, %struct.GPR* %4115, i32 0, i32 5
  %4117 = getelementptr inbounds %struct.Reg, %struct.Reg* %4116, i32 0, i32 0
  %RCX.i1154 = bitcast %union.anon* %4117 to i64*
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 15
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %RBP.i1155 = bitcast %union.anon* %4120 to i64*
  %4121 = load i64, i64* %RBP.i1155
  %4122 = sub i64 %4121, 40
  %4123 = load i64, i64* %PC.i1153
  %4124 = add i64 %4123, 4
  store i64 %4124, i64* %PC.i1153
  %4125 = inttoptr i64 %4122 to i32*
  %4126 = load i32, i32* %4125
  %4127 = sext i32 %4126 to i64
  store i64 %4127, i64* %RCX.i1154, align 8
  store %struct.Memory* %loadMem_48c977, %struct.Memory** %MEMORY
  %loadMem_48c97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 33
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %4130 to i64*
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4132 = getelementptr inbounds %struct.GPR, %struct.GPR* %4131, i32 0, i32 5
  %4133 = getelementptr inbounds %struct.Reg, %struct.Reg* %4132, i32 0, i32 0
  %RCX.i1152 = bitcast %union.anon* %4133 to i64*
  %4134 = load i64, i64* %RCX.i1152
  %4135 = load i64, i64* %PC.i1151
  %4136 = add i64 %4135, 4
  store i64 %4136, i64* %PC.i1151
  %4137 = shl i64 %4134, 5
  %4138 = icmp slt i64 %4137, 0
  %4139 = shl i64 %4137, 1
  store i64 %4139, i64* %RCX.i1152, align 8
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4141 = zext i1 %4138 to i8
  store i8 %4141, i8* %4140, align 1
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4143 = trunc i64 %4139 to i32
  %4144 = and i32 %4143, 254
  %4145 = call i32 @llvm.ctpop.i32(i32 %4144)
  %4146 = trunc i32 %4145 to i8
  %4147 = and i8 %4146, 1
  %4148 = xor i8 %4147, 1
  store i8 %4148, i8* %4142, align 1
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4149, align 1
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4151 = icmp eq i64 %4139, 0
  %4152 = zext i1 %4151 to i8
  store i8 %4152, i8* %4150, align 1
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4154 = lshr i64 %4139, 63
  %4155 = trunc i64 %4154 to i8
  store i8 %4155, i8* %4153, align 1
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4156, align 1
  store %struct.Memory* %loadMem_48c97b, %struct.Memory** %MEMORY
  %loadMem_48c97f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4158 = getelementptr inbounds %struct.GPR, %struct.GPR* %4157, i32 0, i32 33
  %4159 = getelementptr inbounds %struct.Reg, %struct.Reg* %4158, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %4159 to i64*
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4161 = getelementptr inbounds %struct.GPR, %struct.GPR* %4160, i32 0, i32 1
  %4162 = getelementptr inbounds %struct.Reg, %struct.Reg* %4161, i32 0, i32 0
  %RAX.i1149 = bitcast %union.anon* %4162 to i64*
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4164 = getelementptr inbounds %struct.GPR, %struct.GPR* %4163, i32 0, i32 5
  %4165 = getelementptr inbounds %struct.Reg, %struct.Reg* %4164, i32 0, i32 0
  %RCX.i1150 = bitcast %union.anon* %4165 to i64*
  %4166 = load i64, i64* %RAX.i1149
  %4167 = load i64, i64* %RCX.i1150
  %4168 = load i64, i64* %PC.i1148
  %4169 = add i64 %4168, 3
  store i64 %4169, i64* %PC.i1148
  %4170 = add i64 %4167, %4166
  store i64 %4170, i64* %RAX.i1149, align 8
  %4171 = icmp ult i64 %4170, %4166
  %4172 = icmp ult i64 %4170, %4167
  %4173 = or i1 %4171, %4172
  %4174 = zext i1 %4173 to i8
  %4175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4174, i8* %4175, align 1
  %4176 = trunc i64 %4170 to i32
  %4177 = and i32 %4176, 255
  %4178 = call i32 @llvm.ctpop.i32(i32 %4177)
  %4179 = trunc i32 %4178 to i8
  %4180 = and i8 %4179, 1
  %4181 = xor i8 %4180, 1
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4181, i8* %4182, align 1
  %4183 = xor i64 %4167, %4166
  %4184 = xor i64 %4183, %4170
  %4185 = lshr i64 %4184, 4
  %4186 = trunc i64 %4185 to i8
  %4187 = and i8 %4186, 1
  %4188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4187, i8* %4188, align 1
  %4189 = icmp eq i64 %4170, 0
  %4190 = zext i1 %4189 to i8
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4190, i8* %4191, align 1
  %4192 = lshr i64 %4170, 63
  %4193 = trunc i64 %4192 to i8
  %4194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4193, i8* %4194, align 1
  %4195 = lshr i64 %4166, 63
  %4196 = lshr i64 %4167, 63
  %4197 = xor i64 %4192, %4195
  %4198 = xor i64 %4192, %4196
  %4199 = add i64 %4197, %4198
  %4200 = icmp eq i64 %4199, 2
  %4201 = zext i1 %4200 to i8
  %4202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4201, i8* %4202, align 1
  store %struct.Memory* %loadMem_48c97f, %struct.Memory** %MEMORY
  %loadMem_48c982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4204 = getelementptr inbounds %struct.GPR, %struct.GPR* %4203, i32 0, i32 33
  %4205 = getelementptr inbounds %struct.Reg, %struct.Reg* %4204, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %4205 to i64*
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 5
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %RCX.i1146 = bitcast %union.anon* %4208 to i64*
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 15
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %RBP.i1147 = bitcast %union.anon* %4211 to i64*
  %4212 = load i64, i64* %RBP.i1147
  %4213 = sub i64 %4212, 44
  %4214 = load i64, i64* %PC.i1145
  %4215 = add i64 %4214, 4
  store i64 %4215, i64* %PC.i1145
  %4216 = inttoptr i64 %4213 to i32*
  %4217 = load i32, i32* %4216
  %4218 = sext i32 %4217 to i64
  store i64 %4218, i64* %RCX.i1146, align 8
  store %struct.Memory* %loadMem_48c982, %struct.Memory** %MEMORY
  %loadMem_48c986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4220 = getelementptr inbounds %struct.GPR, %struct.GPR* %4219, i32 0, i32 33
  %4221 = getelementptr inbounds %struct.Reg, %struct.Reg* %4220, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %4221 to i64*
  %4222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4223 = getelementptr inbounds %struct.GPR, %struct.GPR* %4222, i32 0, i32 5
  %4224 = getelementptr inbounds %struct.Reg, %struct.Reg* %4223, i32 0, i32 0
  %RCX.i1144 = bitcast %union.anon* %4224 to i64*
  %4225 = load i64, i64* %RCX.i1144
  %4226 = load i64, i64* %PC.i1143
  %4227 = add i64 %4226, 4
  store i64 %4227, i64* %PC.i1143
  %4228 = shl i64 %4225, 3
  %4229 = icmp slt i64 %4228, 0
  %4230 = shl i64 %4228, 1
  store i64 %4230, i64* %RCX.i1144, align 8
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4232 = zext i1 %4229 to i8
  store i8 %4232, i8* %4231, align 1
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4234 = trunc i64 %4230 to i32
  %4235 = and i32 %4234, 254
  %4236 = call i32 @llvm.ctpop.i32(i32 %4235)
  %4237 = trunc i32 %4236 to i8
  %4238 = and i8 %4237, 1
  %4239 = xor i8 %4238, 1
  store i8 %4239, i8* %4233, align 1
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4240, align 1
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4242 = icmp eq i64 %4230, 0
  %4243 = zext i1 %4242 to i8
  store i8 %4243, i8* %4241, align 1
  %4244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4245 = lshr i64 %4230, 63
  %4246 = trunc i64 %4245 to i8
  store i8 %4246, i8* %4244, align 1
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4247, align 1
  store %struct.Memory* %loadMem_48c986, %struct.Memory** %MEMORY
  %loadMem_48c98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4249 = getelementptr inbounds %struct.GPR, %struct.GPR* %4248, i32 0, i32 33
  %4250 = getelementptr inbounds %struct.Reg, %struct.Reg* %4249, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %4250 to i64*
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4252 = getelementptr inbounds %struct.GPR, %struct.GPR* %4251, i32 0, i32 1
  %4253 = getelementptr inbounds %struct.Reg, %struct.Reg* %4252, i32 0, i32 0
  %RAX.i1141 = bitcast %union.anon* %4253 to i64*
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4255 = getelementptr inbounds %struct.GPR, %struct.GPR* %4254, i32 0, i32 5
  %4256 = getelementptr inbounds %struct.Reg, %struct.Reg* %4255, i32 0, i32 0
  %RCX.i1142 = bitcast %union.anon* %4256 to i64*
  %4257 = load i64, i64* %RAX.i1141
  %4258 = load i64, i64* %RCX.i1142
  %4259 = load i64, i64* %PC.i1140
  %4260 = add i64 %4259, 3
  store i64 %4260, i64* %PC.i1140
  %4261 = add i64 %4258, %4257
  store i64 %4261, i64* %RAX.i1141, align 8
  %4262 = icmp ult i64 %4261, %4257
  %4263 = icmp ult i64 %4261, %4258
  %4264 = or i1 %4262, %4263
  %4265 = zext i1 %4264 to i8
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4265, i8* %4266, align 1
  %4267 = trunc i64 %4261 to i32
  %4268 = and i32 %4267, 255
  %4269 = call i32 @llvm.ctpop.i32(i32 %4268)
  %4270 = trunc i32 %4269 to i8
  %4271 = and i8 %4270, 1
  %4272 = xor i8 %4271, 1
  %4273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4272, i8* %4273, align 1
  %4274 = xor i64 %4258, %4257
  %4275 = xor i64 %4274, %4261
  %4276 = lshr i64 %4275, 4
  %4277 = trunc i64 %4276 to i8
  %4278 = and i8 %4277, 1
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4278, i8* %4279, align 1
  %4280 = icmp eq i64 %4261, 0
  %4281 = zext i1 %4280 to i8
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4281, i8* %4282, align 1
  %4283 = lshr i64 %4261, 63
  %4284 = trunc i64 %4283 to i8
  %4285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4284, i8* %4285, align 1
  %4286 = lshr i64 %4257, 63
  %4287 = lshr i64 %4258, 63
  %4288 = xor i64 %4283, %4286
  %4289 = xor i64 %4283, %4287
  %4290 = add i64 %4288, %4289
  %4291 = icmp eq i64 %4290, 2
  %4292 = zext i1 %4291 to i8
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4292, i8* %4293, align 1
  store %struct.Memory* %loadMem_48c98a, %struct.Memory** %MEMORY
  %loadMem_48c98d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4295 = getelementptr inbounds %struct.GPR, %struct.GPR* %4294, i32 0, i32 33
  %4296 = getelementptr inbounds %struct.Reg, %struct.Reg* %4295, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %4296 to i64*
  %4297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4298 = getelementptr inbounds %struct.GPR, %struct.GPR* %4297, i32 0, i32 5
  %4299 = getelementptr inbounds %struct.Reg, %struct.Reg* %4298, i32 0, i32 0
  %RCX.i1138 = bitcast %union.anon* %4299 to i64*
  %4300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4301 = getelementptr inbounds %struct.GPR, %struct.GPR* %4300, i32 0, i32 15
  %4302 = getelementptr inbounds %struct.Reg, %struct.Reg* %4301, i32 0, i32 0
  %RBP.i1139 = bitcast %union.anon* %4302 to i64*
  %4303 = load i64, i64* %RBP.i1139
  %4304 = sub i64 %4303, 48
  %4305 = load i64, i64* %PC.i1137
  %4306 = add i64 %4305, 4
  store i64 %4306, i64* %PC.i1137
  %4307 = inttoptr i64 %4304 to i32*
  %4308 = load i32, i32* %4307
  %4309 = sext i32 %4308 to i64
  store i64 %4309, i64* %RCX.i1138, align 8
  store %struct.Memory* %loadMem_48c98d, %struct.Memory** %MEMORY
  %loadMem_48c991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4311 = getelementptr inbounds %struct.GPR, %struct.GPR* %4310, i32 0, i32 33
  %4312 = getelementptr inbounds %struct.Reg, %struct.Reg* %4311, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %4312 to i64*
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4314 = getelementptr inbounds %struct.GPR, %struct.GPR* %4313, i32 0, i32 1
  %4315 = getelementptr inbounds %struct.Reg, %struct.Reg* %4314, i32 0, i32 0
  %RAX.i1135 = bitcast %union.anon* %4315 to i64*
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4317 = getelementptr inbounds %struct.GPR, %struct.GPR* %4316, i32 0, i32 5
  %4318 = getelementptr inbounds %struct.Reg, %struct.Reg* %4317, i32 0, i32 0
  %RCX.i1136 = bitcast %union.anon* %4318 to i64*
  %4319 = load i64, i64* %RAX.i1135
  %4320 = load i64, i64* %RCX.i1136
  %4321 = mul i64 %4320, 4
  %4322 = add i64 %4321, %4319
  %4323 = load i64, i64* %PC.i1134
  %4324 = add i64 %4323, 4
  store i64 %4324, i64* %PC.i1134
  %4325 = inttoptr i64 %4322 to i32*
  %4326 = load i32, i32* %4325
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4327, align 1
  %4328 = and i32 %4326, 255
  %4329 = call i32 @llvm.ctpop.i32(i32 %4328)
  %4330 = trunc i32 %4329 to i8
  %4331 = and i8 %4330, 1
  %4332 = xor i8 %4331, 1
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4332, i8* %4333, align 1
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4334, align 1
  %4335 = icmp eq i32 %4326, 0
  %4336 = zext i1 %4335 to i8
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4336, i8* %4337, align 1
  %4338 = lshr i32 %4326, 31
  %4339 = trunc i32 %4338 to i8
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4339, i8* %4340, align 1
  %4341 = lshr i32 %4326, 31
  %4342 = xor i32 %4338, %4341
  %4343 = add i32 %4342, %4341
  %4344 = icmp eq i32 %4343, 2
  %4345 = zext i1 %4344 to i8
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4345, i8* %4346, align 1
  store %struct.Memory* %loadMem_48c991, %struct.Memory** %MEMORY
  %loadMem_48c995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4348 = getelementptr inbounds %struct.GPR, %struct.GPR* %4347, i32 0, i32 33
  %4349 = getelementptr inbounds %struct.Reg, %struct.Reg* %4348, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %4349 to i64*
  %4350 = load i64, i64* %PC.i1133
  %4351 = add i64 %4350, 13
  %4352 = load i64, i64* %PC.i1133
  %4353 = add i64 %4352, 6
  %4354 = load i64, i64* %PC.i1133
  %4355 = add i64 %4354, 6
  store i64 %4355, i64* %PC.i1133
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4357 = load i8, i8* %4356, align 1
  store i8 %4357, i8* %BRANCH_TAKEN, align 1
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4359 = icmp ne i8 %4357, 0
  %4360 = select i1 %4359, i64 %4351, i64 %4353
  store i64 %4360, i64* %4358, align 8
  store %struct.Memory* %loadMem_48c995, %struct.Memory** %MEMORY
  %loadBr_48c995 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c995 = icmp eq i8 %loadBr_48c995, 1
  br i1 %cmpBr_48c995, label %block_.L_48c9a2, label %block_48c99b

block_48c99b:                                     ; preds = %block_48c96d
  %loadMem_48c99b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4362 = getelementptr inbounds %struct.GPR, %struct.GPR* %4361, i32 0, i32 33
  %4363 = getelementptr inbounds %struct.Reg, %struct.Reg* %4362, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %4363 to i64*
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4365 = getelementptr inbounds %struct.GPR, %struct.GPR* %4364, i32 0, i32 15
  %4366 = getelementptr inbounds %struct.Reg, %struct.Reg* %4365, i32 0, i32 0
  %RBP.i1132 = bitcast %union.anon* %4366 to i64*
  %4367 = load i64, i64* %RBP.i1132
  %4368 = sub i64 %4367, 112
  %4369 = load i64, i64* %PC.i1131
  %4370 = add i64 %4369, 7
  store i64 %4370, i64* %PC.i1131
  %4371 = inttoptr i64 %4368 to i32*
  store i32 2, i32* %4371
  store %struct.Memory* %loadMem_48c99b, %struct.Memory** %MEMORY
  br label %block_.L_48c9a2

block_.L_48c9a2:                                  ; preds = %block_48c99b, %block_48c96d
  %loadMem_48c9a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4373 = getelementptr inbounds %struct.GPR, %struct.GPR* %4372, i32 0, i32 33
  %4374 = getelementptr inbounds %struct.Reg, %struct.Reg* %4373, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %4374 to i64*
  %4375 = load i64, i64* %PC.i1130
  %4376 = add i64 %4375, 5
  %4377 = load i64, i64* %PC.i1130
  %4378 = add i64 %4377, 5
  store i64 %4378, i64* %PC.i1130
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4376, i64* %4379, align 8
  store %struct.Memory* %loadMem_48c9a2, %struct.Memory** %MEMORY
  br label %block_.L_48c9a7

block_.L_48c9a7:                                  ; preds = %block_.L_48c9a2
  %loadMem_48c9a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4381 = getelementptr inbounds %struct.GPR, %struct.GPR* %4380, i32 0, i32 33
  %4382 = getelementptr inbounds %struct.Reg, %struct.Reg* %4381, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %4382 to i64*
  %4383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4384 = getelementptr inbounds %struct.GPR, %struct.GPR* %4383, i32 0, i32 1
  %4385 = getelementptr inbounds %struct.Reg, %struct.Reg* %4384, i32 0, i32 0
  %RAX.i1128 = bitcast %union.anon* %4385 to i64*
  %4386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4387 = getelementptr inbounds %struct.GPR, %struct.GPR* %4386, i32 0, i32 15
  %4388 = getelementptr inbounds %struct.Reg, %struct.Reg* %4387, i32 0, i32 0
  %RBP.i1129 = bitcast %union.anon* %4388 to i64*
  %4389 = load i64, i64* %RBP.i1129
  %4390 = sub i64 %4389, 48
  %4391 = load i64, i64* %PC.i1127
  %4392 = add i64 %4391, 3
  store i64 %4392, i64* %PC.i1127
  %4393 = inttoptr i64 %4390 to i32*
  %4394 = load i32, i32* %4393
  %4395 = zext i32 %4394 to i64
  store i64 %4395, i64* %RAX.i1128, align 8
  store %struct.Memory* %loadMem_48c9a7, %struct.Memory** %MEMORY
  %loadMem_48c9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4397 = getelementptr inbounds %struct.GPR, %struct.GPR* %4396, i32 0, i32 33
  %4398 = getelementptr inbounds %struct.Reg, %struct.Reg* %4397, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %4398 to i64*
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4400 = getelementptr inbounds %struct.GPR, %struct.GPR* %4399, i32 0, i32 1
  %4401 = getelementptr inbounds %struct.Reg, %struct.Reg* %4400, i32 0, i32 0
  %RAX.i1126 = bitcast %union.anon* %4401 to i64*
  %4402 = load i64, i64* %RAX.i1126
  %4403 = load i64, i64* %PC.i1125
  %4404 = add i64 %4403, 3
  store i64 %4404, i64* %PC.i1125
  %4405 = trunc i64 %4402 to i32
  %4406 = add i32 1, %4405
  %4407 = zext i32 %4406 to i64
  store i64 %4407, i64* %RAX.i1126, align 8
  %4408 = icmp ult i32 %4406, %4405
  %4409 = icmp ult i32 %4406, 1
  %4410 = or i1 %4408, %4409
  %4411 = zext i1 %4410 to i8
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4411, i8* %4412, align 1
  %4413 = and i32 %4406, 255
  %4414 = call i32 @llvm.ctpop.i32(i32 %4413)
  %4415 = trunc i32 %4414 to i8
  %4416 = and i8 %4415, 1
  %4417 = xor i8 %4416, 1
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4417, i8* %4418, align 1
  %4419 = xor i64 1, %4402
  %4420 = trunc i64 %4419 to i32
  %4421 = xor i32 %4420, %4406
  %4422 = lshr i32 %4421, 4
  %4423 = trunc i32 %4422 to i8
  %4424 = and i8 %4423, 1
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4424, i8* %4425, align 1
  %4426 = icmp eq i32 %4406, 0
  %4427 = zext i1 %4426 to i8
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4427, i8* %4428, align 1
  %4429 = lshr i32 %4406, 31
  %4430 = trunc i32 %4429 to i8
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4430, i8* %4431, align 1
  %4432 = lshr i32 %4405, 31
  %4433 = xor i32 %4429, %4432
  %4434 = add i32 %4433, %4429
  %4435 = icmp eq i32 %4434, 2
  %4436 = zext i1 %4435 to i8
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4436, i8* %4437, align 1
  store %struct.Memory* %loadMem_48c9aa, %struct.Memory** %MEMORY
  %loadMem_48c9ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4439 = getelementptr inbounds %struct.GPR, %struct.GPR* %4438, i32 0, i32 33
  %4440 = getelementptr inbounds %struct.Reg, %struct.Reg* %4439, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %4440 to i64*
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4442 = getelementptr inbounds %struct.GPR, %struct.GPR* %4441, i32 0, i32 1
  %4443 = getelementptr inbounds %struct.Reg, %struct.Reg* %4442, i32 0, i32 0
  %EAX.i1123 = bitcast %union.anon* %4443 to i32*
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4445 = getelementptr inbounds %struct.GPR, %struct.GPR* %4444, i32 0, i32 15
  %4446 = getelementptr inbounds %struct.Reg, %struct.Reg* %4445, i32 0, i32 0
  %RBP.i1124 = bitcast %union.anon* %4446 to i64*
  %4447 = load i64, i64* %RBP.i1124
  %4448 = sub i64 %4447, 48
  %4449 = load i32, i32* %EAX.i1123
  %4450 = zext i32 %4449 to i64
  %4451 = load i64, i64* %PC.i1122
  %4452 = add i64 %4451, 3
  store i64 %4452, i64* %PC.i1122
  %4453 = inttoptr i64 %4448 to i32*
  store i32 %4449, i32* %4453
  store %struct.Memory* %loadMem_48c9ad, %struct.Memory** %MEMORY
  %loadMem_48c9b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4455 = getelementptr inbounds %struct.GPR, %struct.GPR* %4454, i32 0, i32 33
  %4456 = getelementptr inbounds %struct.Reg, %struct.Reg* %4455, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %4456 to i64*
  %4457 = load i64, i64* %PC.i1121
  %4458 = add i64 %4457, -77
  %4459 = load i64, i64* %PC.i1121
  %4460 = add i64 %4459, 5
  store i64 %4460, i64* %PC.i1121
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4458, i64* %4461, align 8
  store %struct.Memory* %loadMem_48c9b0, %struct.Memory** %MEMORY
  br label %block_.L_48c963

block_.L_48c9b5:                                  ; preds = %block_.L_48c963
  %loadMem_48c9b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4463 = getelementptr inbounds %struct.GPR, %struct.GPR* %4462, i32 0, i32 33
  %4464 = getelementptr inbounds %struct.Reg, %struct.Reg* %4463, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %4464 to i64*
  %4465 = load i64, i64* %PC.i1120
  %4466 = add i64 %4465, 5
  %4467 = load i64, i64* %PC.i1120
  %4468 = add i64 %4467, 5
  store i64 %4468, i64* %PC.i1120
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4466, i64* %4469, align 8
  store %struct.Memory* %loadMem_48c9b5, %struct.Memory** %MEMORY
  br label %block_.L_48c9ba

block_.L_48c9ba:                                  ; preds = %block_.L_48c9b5
  %loadMem_48c9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4471 = getelementptr inbounds %struct.GPR, %struct.GPR* %4470, i32 0, i32 33
  %4472 = getelementptr inbounds %struct.Reg, %struct.Reg* %4471, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %4472 to i64*
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4474 = getelementptr inbounds %struct.GPR, %struct.GPR* %4473, i32 0, i32 1
  %4475 = getelementptr inbounds %struct.Reg, %struct.Reg* %4474, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %4475 to i64*
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4477 = getelementptr inbounds %struct.GPR, %struct.GPR* %4476, i32 0, i32 15
  %4478 = getelementptr inbounds %struct.Reg, %struct.Reg* %4477, i32 0, i32 0
  %RBP.i1119 = bitcast %union.anon* %4478 to i64*
  %4479 = load i64, i64* %RBP.i1119
  %4480 = sub i64 %4479, 44
  %4481 = load i64, i64* %PC.i1117
  %4482 = add i64 %4481, 3
  store i64 %4482, i64* %PC.i1117
  %4483 = inttoptr i64 %4480 to i32*
  %4484 = load i32, i32* %4483
  %4485 = zext i32 %4484 to i64
  store i64 %4485, i64* %RAX.i1118, align 8
  store %struct.Memory* %loadMem_48c9ba, %struct.Memory** %MEMORY
  %loadMem_48c9bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4487 = getelementptr inbounds %struct.GPR, %struct.GPR* %4486, i32 0, i32 33
  %4488 = getelementptr inbounds %struct.Reg, %struct.Reg* %4487, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %4488 to i64*
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4490 = getelementptr inbounds %struct.GPR, %struct.GPR* %4489, i32 0, i32 1
  %4491 = getelementptr inbounds %struct.Reg, %struct.Reg* %4490, i32 0, i32 0
  %RAX.i1116 = bitcast %union.anon* %4491 to i64*
  %4492 = load i64, i64* %RAX.i1116
  %4493 = load i64, i64* %PC.i1115
  %4494 = add i64 %4493, 3
  store i64 %4494, i64* %PC.i1115
  %4495 = trunc i64 %4492 to i32
  %4496 = add i32 1, %4495
  %4497 = zext i32 %4496 to i64
  store i64 %4497, i64* %RAX.i1116, align 8
  %4498 = icmp ult i32 %4496, %4495
  %4499 = icmp ult i32 %4496, 1
  %4500 = or i1 %4498, %4499
  %4501 = zext i1 %4500 to i8
  %4502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4501, i8* %4502, align 1
  %4503 = and i32 %4496, 255
  %4504 = call i32 @llvm.ctpop.i32(i32 %4503)
  %4505 = trunc i32 %4504 to i8
  %4506 = and i8 %4505, 1
  %4507 = xor i8 %4506, 1
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4507, i8* %4508, align 1
  %4509 = xor i64 1, %4492
  %4510 = trunc i64 %4509 to i32
  %4511 = xor i32 %4510, %4496
  %4512 = lshr i32 %4511, 4
  %4513 = trunc i32 %4512 to i8
  %4514 = and i8 %4513, 1
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4514, i8* %4515, align 1
  %4516 = icmp eq i32 %4496, 0
  %4517 = zext i1 %4516 to i8
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4517, i8* %4518, align 1
  %4519 = lshr i32 %4496, 31
  %4520 = trunc i32 %4519 to i8
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4520, i8* %4521, align 1
  %4522 = lshr i32 %4495, 31
  %4523 = xor i32 %4519, %4522
  %4524 = add i32 %4523, %4519
  %4525 = icmp eq i32 %4524, 2
  %4526 = zext i1 %4525 to i8
  %4527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4526, i8* %4527, align 1
  store %struct.Memory* %loadMem_48c9bd, %struct.Memory** %MEMORY
  %loadMem_48c9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4529 = getelementptr inbounds %struct.GPR, %struct.GPR* %4528, i32 0, i32 33
  %4530 = getelementptr inbounds %struct.Reg, %struct.Reg* %4529, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %4530 to i64*
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4532 = getelementptr inbounds %struct.GPR, %struct.GPR* %4531, i32 0, i32 1
  %4533 = getelementptr inbounds %struct.Reg, %struct.Reg* %4532, i32 0, i32 0
  %EAX.i1113 = bitcast %union.anon* %4533 to i32*
  %4534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4535 = getelementptr inbounds %struct.GPR, %struct.GPR* %4534, i32 0, i32 15
  %4536 = getelementptr inbounds %struct.Reg, %struct.Reg* %4535, i32 0, i32 0
  %RBP.i1114 = bitcast %union.anon* %4536 to i64*
  %4537 = load i64, i64* %RBP.i1114
  %4538 = sub i64 %4537, 44
  %4539 = load i32, i32* %EAX.i1113
  %4540 = zext i32 %4539 to i64
  %4541 = load i64, i64* %PC.i1112
  %4542 = add i64 %4541, 3
  store i64 %4542, i64* %PC.i1112
  %4543 = inttoptr i64 %4538 to i32*
  store i32 %4539, i32* %4543
  store %struct.Memory* %loadMem_48c9c0, %struct.Memory** %MEMORY
  %loadMem_48c9c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4545 = getelementptr inbounds %struct.GPR, %struct.GPR* %4544, i32 0, i32 33
  %4546 = getelementptr inbounds %struct.Reg, %struct.Reg* %4545, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %4546 to i64*
  %4547 = load i64, i64* %PC.i1111
  %4548 = add i64 %4547, -113
  %4549 = load i64, i64* %PC.i1111
  %4550 = add i64 %4549, 5
  store i64 %4550, i64* %PC.i1111
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4548, i64* %4551, align 8
  store %struct.Memory* %loadMem_48c9c3, %struct.Memory** %MEMORY
  br label %block_.L_48c952

block_.L_48c9c8:                                  ; preds = %block_.L_48c952
  %loadMem_48c9c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4553 = getelementptr inbounds %struct.GPR, %struct.GPR* %4552, i32 0, i32 33
  %4554 = getelementptr inbounds %struct.Reg, %struct.Reg* %4553, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %4554 to i64*
  %4555 = load i64, i64* %PC.i1110
  %4556 = add i64 %4555, 5
  %4557 = load i64, i64* %PC.i1110
  %4558 = add i64 %4557, 5
  store i64 %4558, i64* %PC.i1110
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4556, i64* %4559, align 8
  store %struct.Memory* %loadMem_48c9c8, %struct.Memory** %MEMORY
  br label %block_.L_48c9cd

block_.L_48c9cd:                                  ; preds = %block_.L_48c9c8
  %loadMem_48c9cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4561 = getelementptr inbounds %struct.GPR, %struct.GPR* %4560, i32 0, i32 33
  %4562 = getelementptr inbounds %struct.Reg, %struct.Reg* %4561, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %4562 to i64*
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4564 = getelementptr inbounds %struct.GPR, %struct.GPR* %4563, i32 0, i32 1
  %4565 = getelementptr inbounds %struct.Reg, %struct.Reg* %4564, i32 0, i32 0
  %RAX.i1108 = bitcast %union.anon* %4565 to i64*
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4567 = getelementptr inbounds %struct.GPR, %struct.GPR* %4566, i32 0, i32 15
  %4568 = getelementptr inbounds %struct.Reg, %struct.Reg* %4567, i32 0, i32 0
  %RBP.i1109 = bitcast %union.anon* %4568 to i64*
  %4569 = load i64, i64* %RBP.i1109
  %4570 = sub i64 %4569, 40
  %4571 = load i64, i64* %PC.i1107
  %4572 = add i64 %4571, 3
  store i64 %4572, i64* %PC.i1107
  %4573 = inttoptr i64 %4570 to i32*
  %4574 = load i32, i32* %4573
  %4575 = zext i32 %4574 to i64
  store i64 %4575, i64* %RAX.i1108, align 8
  store %struct.Memory* %loadMem_48c9cd, %struct.Memory** %MEMORY
  %loadMem_48c9d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4577 = getelementptr inbounds %struct.GPR, %struct.GPR* %4576, i32 0, i32 33
  %4578 = getelementptr inbounds %struct.Reg, %struct.Reg* %4577, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %4578 to i64*
  %4579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4580 = getelementptr inbounds %struct.GPR, %struct.GPR* %4579, i32 0, i32 1
  %4581 = getelementptr inbounds %struct.Reg, %struct.Reg* %4580, i32 0, i32 0
  %RAX.i1106 = bitcast %union.anon* %4581 to i64*
  %4582 = load i64, i64* %RAX.i1106
  %4583 = load i64, i64* %PC.i1105
  %4584 = add i64 %4583, 3
  store i64 %4584, i64* %PC.i1105
  %4585 = trunc i64 %4582 to i32
  %4586 = add i32 1, %4585
  %4587 = zext i32 %4586 to i64
  store i64 %4587, i64* %RAX.i1106, align 8
  %4588 = icmp ult i32 %4586, %4585
  %4589 = icmp ult i32 %4586, 1
  %4590 = or i1 %4588, %4589
  %4591 = zext i1 %4590 to i8
  %4592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4591, i8* %4592, align 1
  %4593 = and i32 %4586, 255
  %4594 = call i32 @llvm.ctpop.i32(i32 %4593)
  %4595 = trunc i32 %4594 to i8
  %4596 = and i8 %4595, 1
  %4597 = xor i8 %4596, 1
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4597, i8* %4598, align 1
  %4599 = xor i64 1, %4582
  %4600 = trunc i64 %4599 to i32
  %4601 = xor i32 %4600, %4586
  %4602 = lshr i32 %4601, 4
  %4603 = trunc i32 %4602 to i8
  %4604 = and i8 %4603, 1
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4604, i8* %4605, align 1
  %4606 = icmp eq i32 %4586, 0
  %4607 = zext i1 %4606 to i8
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4607, i8* %4608, align 1
  %4609 = lshr i32 %4586, 31
  %4610 = trunc i32 %4609 to i8
  %4611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4610, i8* %4611, align 1
  %4612 = lshr i32 %4585, 31
  %4613 = xor i32 %4609, %4612
  %4614 = add i32 %4613, %4609
  %4615 = icmp eq i32 %4614, 2
  %4616 = zext i1 %4615 to i8
  %4617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4616, i8* %4617, align 1
  store %struct.Memory* %loadMem_48c9d0, %struct.Memory** %MEMORY
  %loadMem_48c9d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4619 = getelementptr inbounds %struct.GPR, %struct.GPR* %4618, i32 0, i32 33
  %4620 = getelementptr inbounds %struct.Reg, %struct.Reg* %4619, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %4620 to i64*
  %4621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4622 = getelementptr inbounds %struct.GPR, %struct.GPR* %4621, i32 0, i32 1
  %4623 = getelementptr inbounds %struct.Reg, %struct.Reg* %4622, i32 0, i32 0
  %EAX.i1103 = bitcast %union.anon* %4623 to i32*
  %4624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4625 = getelementptr inbounds %struct.GPR, %struct.GPR* %4624, i32 0, i32 15
  %4626 = getelementptr inbounds %struct.Reg, %struct.Reg* %4625, i32 0, i32 0
  %RBP.i1104 = bitcast %union.anon* %4626 to i64*
  %4627 = load i64, i64* %RBP.i1104
  %4628 = sub i64 %4627, 40
  %4629 = load i32, i32* %EAX.i1103
  %4630 = zext i32 %4629 to i64
  %4631 = load i64, i64* %PC.i1102
  %4632 = add i64 %4631, 3
  store i64 %4632, i64* %PC.i1102
  %4633 = inttoptr i64 %4628 to i32*
  store i32 %4629, i32* %4633
  store %struct.Memory* %loadMem_48c9d3, %struct.Memory** %MEMORY
  %loadMem_48c9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4635 = getelementptr inbounds %struct.GPR, %struct.GPR* %4634, i32 0, i32 33
  %4636 = getelementptr inbounds %struct.Reg, %struct.Reg* %4635, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %4636 to i64*
  %4637 = load i64, i64* %PC.i1101
  %4638 = add i64 %4637, -149
  %4639 = load i64, i64* %PC.i1101
  %4640 = add i64 %4639, 5
  store i64 %4640, i64* %PC.i1101
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4638, i64* %4641, align 8
  store %struct.Memory* %loadMem_48c9d6, %struct.Memory** %MEMORY
  br label %block_.L_48c941

block_.L_48c9db:                                  ; preds = %block_.L_48c941
  %loadMem_48c9db = load %struct.Memory*, %struct.Memory** %MEMORY
  %4642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4643 = getelementptr inbounds %struct.GPR, %struct.GPR* %4642, i32 0, i32 33
  %4644 = getelementptr inbounds %struct.Reg, %struct.Reg* %4643, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %4644 to i64*
  %4645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4646 = getelementptr inbounds %struct.GPR, %struct.GPR* %4645, i32 0, i32 15
  %4647 = getelementptr inbounds %struct.Reg, %struct.Reg* %4646, i32 0, i32 0
  %RBP.i1100 = bitcast %union.anon* %4647 to i64*
  %4648 = load i64, i64* %RBP.i1100
  %4649 = sub i64 %4648, 116
  %4650 = load i64, i64* %PC.i1099
  %4651 = add i64 %4650, 7
  store i64 %4651, i64* %PC.i1099
  %4652 = inttoptr i64 %4649 to i32*
  store i32 0, i32* %4652
  store %struct.Memory* %loadMem_48c9db, %struct.Memory** %MEMORY
  br label %block_.L_48c9e2

block_.L_48c9e2:                                  ; preds = %block_48c9ec, %block_.L_48c9db
  %loadMem_48c9e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4654 = getelementptr inbounds %struct.GPR, %struct.GPR* %4653, i32 0, i32 33
  %4655 = getelementptr inbounds %struct.Reg, %struct.Reg* %4654, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %4655 to i64*
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4657 = getelementptr inbounds %struct.GPR, %struct.GPR* %4656, i32 0, i32 15
  %4658 = getelementptr inbounds %struct.Reg, %struct.Reg* %4657, i32 0, i32 0
  %RBP.i1098 = bitcast %union.anon* %4658 to i64*
  %4659 = load i64, i64* %RBP.i1098
  %4660 = sub i64 %4659, 116
  %4661 = load i64, i64* %PC.i1097
  %4662 = add i64 %4661, 4
  store i64 %4662, i64* %PC.i1097
  %4663 = inttoptr i64 %4660 to i32*
  %4664 = load i32, i32* %4663
  %4665 = sub i32 %4664, 2
  %4666 = icmp ult i32 %4664, 2
  %4667 = zext i1 %4666 to i8
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4667, i8* %4668, align 1
  %4669 = and i32 %4665, 255
  %4670 = call i32 @llvm.ctpop.i32(i32 %4669)
  %4671 = trunc i32 %4670 to i8
  %4672 = and i8 %4671, 1
  %4673 = xor i8 %4672, 1
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4673, i8* %4674, align 1
  %4675 = xor i32 %4664, 2
  %4676 = xor i32 %4675, %4665
  %4677 = lshr i32 %4676, 4
  %4678 = trunc i32 %4677 to i8
  %4679 = and i8 %4678, 1
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4679, i8* %4680, align 1
  %4681 = icmp eq i32 %4665, 0
  %4682 = zext i1 %4681 to i8
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4682, i8* %4683, align 1
  %4684 = lshr i32 %4665, 31
  %4685 = trunc i32 %4684 to i8
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4685, i8* %4686, align 1
  %4687 = lshr i32 %4664, 31
  %4688 = xor i32 %4684, %4687
  %4689 = add i32 %4688, %4687
  %4690 = icmp eq i32 %4689, 2
  %4691 = zext i1 %4690 to i8
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4691, i8* %4692, align 1
  store %struct.Memory* %loadMem_48c9e2, %struct.Memory** %MEMORY
  %loadMem_48c9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4694 = getelementptr inbounds %struct.GPR, %struct.GPR* %4693, i32 0, i32 33
  %4695 = getelementptr inbounds %struct.Reg, %struct.Reg* %4694, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %4695 to i64*
  %4696 = load i64, i64* %PC.i1096
  %4697 = add i64 %4696, 34
  %4698 = load i64, i64* %PC.i1096
  %4699 = add i64 %4698, 6
  %4700 = load i64, i64* %PC.i1096
  %4701 = add i64 %4700, 6
  store i64 %4701, i64* %PC.i1096
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4703 = load i8, i8* %4702, align 1
  %4704 = icmp ne i8 %4703, 0
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4706 = load i8, i8* %4705, align 1
  %4707 = icmp ne i8 %4706, 0
  %4708 = xor i1 %4704, %4707
  %4709 = xor i1 %4708, true
  %4710 = zext i1 %4709 to i8
  store i8 %4710, i8* %BRANCH_TAKEN, align 1
  %4711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4712 = select i1 %4708, i64 %4699, i64 %4697
  store i64 %4712, i64* %4711, align 8
  store %struct.Memory* %loadMem_48c9e6, %struct.Memory** %MEMORY
  %loadBr_48c9e6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48c9e6 = icmp eq i8 %loadBr_48c9e6, 1
  br i1 %cmpBr_48c9e6, label %block_.L_48ca08, label %block_48c9ec

block_48c9ec:                                     ; preds = %block_.L_48c9e2
  %loadMem_48c9ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4714 = getelementptr inbounds %struct.GPR, %struct.GPR* %4713, i32 0, i32 33
  %4715 = getelementptr inbounds %struct.Reg, %struct.Reg* %4714, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %4715 to i64*
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4717 = getelementptr inbounds %struct.GPR, %struct.GPR* %4716, i32 0, i32 11
  %4718 = getelementptr inbounds %struct.Reg, %struct.Reg* %4717, i32 0, i32 0
  %RDI.i1094 = bitcast %union.anon* %4718 to i64*
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4720 = getelementptr inbounds %struct.GPR, %struct.GPR* %4719, i32 0, i32 15
  %4721 = getelementptr inbounds %struct.Reg, %struct.Reg* %4720, i32 0, i32 0
  %RBP.i1095 = bitcast %union.anon* %4721 to i64*
  %4722 = load i64, i64* %RBP.i1095
  %4723 = sub i64 %4722, 116
  %4724 = load i64, i64* %PC.i1093
  %4725 = add i64 %4724, 3
  store i64 %4725, i64* %PC.i1093
  %4726 = inttoptr i64 %4723 to i32*
  %4727 = load i32, i32* %4726
  %4728 = zext i32 %4727 to i64
  store i64 %4728, i64* %RDI.i1094, align 8
  store %struct.Memory* %loadMem_48c9ec, %struct.Memory** %MEMORY
  %loadMem_48c9ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4730 = getelementptr inbounds %struct.GPR, %struct.GPR* %4729, i32 0, i32 33
  %4731 = getelementptr inbounds %struct.Reg, %struct.Reg* %4730, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %4731 to i64*
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4733 = getelementptr inbounds %struct.GPR, %struct.GPR* %4732, i32 0, i32 9
  %4734 = getelementptr inbounds %struct.Reg, %struct.Reg* %4733, i32 0, i32 0
  %RSI.i1091 = bitcast %union.anon* %4734 to i64*
  %4735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4736 = getelementptr inbounds %struct.GPR, %struct.GPR* %4735, i32 0, i32 15
  %4737 = getelementptr inbounds %struct.Reg, %struct.Reg* %4736, i32 0, i32 0
  %RBP.i1092 = bitcast %union.anon* %4737 to i64*
  %4738 = load i64, i64* %RBP.i1092
  %4739 = sub i64 %4738, 112
  %4740 = load i64, i64* %PC.i1090
  %4741 = add i64 %4740, 3
  store i64 %4741, i64* %PC.i1090
  %4742 = inttoptr i64 %4739 to i32*
  %4743 = load i32, i32* %4742
  %4744 = zext i32 %4743 to i64
  store i64 %4744, i64* %RSI.i1091, align 8
  store %struct.Memory* %loadMem_48c9ef, %struct.Memory** %MEMORY
  %loadMem1_48c9f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 33
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %4747 to i64*
  %4748 = load i64, i64* %PC.i1089
  %4749 = add i64 %4748, -527762
  %4750 = load i64, i64* %PC.i1089
  %4751 = add i64 %4750, 5
  %4752 = load i64, i64* %PC.i1089
  %4753 = add i64 %4752, 5
  store i64 %4753, i64* %PC.i1089
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4755 = load i64, i64* %4754, align 8
  %4756 = add i64 %4755, -8
  %4757 = inttoptr i64 %4756 to i64*
  store i64 %4751, i64* %4757
  store i64 %4756, i64* %4754, align 8
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4749, i64* %4758, align 8
  store %struct.Memory* %loadMem1_48c9f2, %struct.Memory** %MEMORY
  %loadMem2_48c9f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48c9f2 = load i64, i64* %3
  %call2_48c9f2 = call %struct.Memory* @sub_40bc60.dct_chroma_DC(%struct.State* %0, i64 %loadPC_48c9f2, %struct.Memory* %loadMem2_48c9f2)
  store %struct.Memory* %call2_48c9f2, %struct.Memory** %MEMORY
  %loadMem_48c9f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4760 = getelementptr inbounds %struct.GPR, %struct.GPR* %4759, i32 0, i32 33
  %4761 = getelementptr inbounds %struct.Reg, %struct.Reg* %4760, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %4761 to i64*
  %4762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4763 = getelementptr inbounds %struct.GPR, %struct.GPR* %4762, i32 0, i32 1
  %4764 = getelementptr inbounds %struct.Reg, %struct.Reg* %4763, i32 0, i32 0
  %EAX.i1087 = bitcast %union.anon* %4764 to i32*
  %4765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4766 = getelementptr inbounds %struct.GPR, %struct.GPR* %4765, i32 0, i32 15
  %4767 = getelementptr inbounds %struct.Reg, %struct.Reg* %4766, i32 0, i32 0
  %RBP.i1088 = bitcast %union.anon* %4767 to i64*
  %4768 = load i64, i64* %RBP.i1088
  %4769 = sub i64 %4768, 112
  %4770 = load i32, i32* %EAX.i1087
  %4771 = zext i32 %4770 to i64
  %4772 = load i64, i64* %PC.i1086
  %4773 = add i64 %4772, 3
  store i64 %4773, i64* %PC.i1086
  %4774 = inttoptr i64 %4769 to i32*
  store i32 %4770, i32* %4774
  store %struct.Memory* %loadMem_48c9f7, %struct.Memory** %MEMORY
  %loadMem_48c9fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4776 = getelementptr inbounds %struct.GPR, %struct.GPR* %4775, i32 0, i32 33
  %4777 = getelementptr inbounds %struct.Reg, %struct.Reg* %4776, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %4777 to i64*
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4779 = getelementptr inbounds %struct.GPR, %struct.GPR* %4778, i32 0, i32 1
  %4780 = getelementptr inbounds %struct.Reg, %struct.Reg* %4779, i32 0, i32 0
  %RAX.i1084 = bitcast %union.anon* %4780 to i64*
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4782 = getelementptr inbounds %struct.GPR, %struct.GPR* %4781, i32 0, i32 15
  %4783 = getelementptr inbounds %struct.Reg, %struct.Reg* %4782, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %4783 to i64*
  %4784 = load i64, i64* %RBP.i1085
  %4785 = sub i64 %4784, 116
  %4786 = load i64, i64* %PC.i1083
  %4787 = add i64 %4786, 3
  store i64 %4787, i64* %PC.i1083
  %4788 = inttoptr i64 %4785 to i32*
  %4789 = load i32, i32* %4788
  %4790 = zext i32 %4789 to i64
  store i64 %4790, i64* %RAX.i1084, align 8
  store %struct.Memory* %loadMem_48c9fa, %struct.Memory** %MEMORY
  %loadMem_48c9fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4792 = getelementptr inbounds %struct.GPR, %struct.GPR* %4791, i32 0, i32 33
  %4793 = getelementptr inbounds %struct.Reg, %struct.Reg* %4792, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %4793 to i64*
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4795 = getelementptr inbounds %struct.GPR, %struct.GPR* %4794, i32 0, i32 1
  %4796 = getelementptr inbounds %struct.Reg, %struct.Reg* %4795, i32 0, i32 0
  %RAX.i1082 = bitcast %union.anon* %4796 to i64*
  %4797 = load i64, i64* %RAX.i1082
  %4798 = load i64, i64* %PC.i1081
  %4799 = add i64 %4798, 3
  store i64 %4799, i64* %PC.i1081
  %4800 = trunc i64 %4797 to i32
  %4801 = add i32 1, %4800
  %4802 = zext i32 %4801 to i64
  store i64 %4802, i64* %RAX.i1082, align 8
  %4803 = icmp ult i32 %4801, %4800
  %4804 = icmp ult i32 %4801, 1
  %4805 = or i1 %4803, %4804
  %4806 = zext i1 %4805 to i8
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4806, i8* %4807, align 1
  %4808 = and i32 %4801, 255
  %4809 = call i32 @llvm.ctpop.i32(i32 %4808)
  %4810 = trunc i32 %4809 to i8
  %4811 = and i8 %4810, 1
  %4812 = xor i8 %4811, 1
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4812, i8* %4813, align 1
  %4814 = xor i64 1, %4797
  %4815 = trunc i64 %4814 to i32
  %4816 = xor i32 %4815, %4801
  %4817 = lshr i32 %4816, 4
  %4818 = trunc i32 %4817 to i8
  %4819 = and i8 %4818, 1
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4819, i8* %4820, align 1
  %4821 = icmp eq i32 %4801, 0
  %4822 = zext i1 %4821 to i8
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4822, i8* %4823, align 1
  %4824 = lshr i32 %4801, 31
  %4825 = trunc i32 %4824 to i8
  %4826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4825, i8* %4826, align 1
  %4827 = lshr i32 %4800, 31
  %4828 = xor i32 %4824, %4827
  %4829 = add i32 %4828, %4824
  %4830 = icmp eq i32 %4829, 2
  %4831 = zext i1 %4830 to i8
  %4832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4831, i8* %4832, align 1
  store %struct.Memory* %loadMem_48c9fd, %struct.Memory** %MEMORY
  %loadMem_48ca00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4834 = getelementptr inbounds %struct.GPR, %struct.GPR* %4833, i32 0, i32 33
  %4835 = getelementptr inbounds %struct.Reg, %struct.Reg* %4834, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %4835 to i64*
  %4836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4837 = getelementptr inbounds %struct.GPR, %struct.GPR* %4836, i32 0, i32 1
  %4838 = getelementptr inbounds %struct.Reg, %struct.Reg* %4837, i32 0, i32 0
  %EAX.i1079 = bitcast %union.anon* %4838 to i32*
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 15
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %RBP.i1080 = bitcast %union.anon* %4841 to i64*
  %4842 = load i64, i64* %RBP.i1080
  %4843 = sub i64 %4842, 116
  %4844 = load i32, i32* %EAX.i1079
  %4845 = zext i32 %4844 to i64
  %4846 = load i64, i64* %PC.i1078
  %4847 = add i64 %4846, 3
  store i64 %4847, i64* %PC.i1078
  %4848 = inttoptr i64 %4843 to i32*
  store i32 %4844, i32* %4848
  store %struct.Memory* %loadMem_48ca00, %struct.Memory** %MEMORY
  %loadMem_48ca03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4850 = getelementptr inbounds %struct.GPR, %struct.GPR* %4849, i32 0, i32 33
  %4851 = getelementptr inbounds %struct.Reg, %struct.Reg* %4850, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %4851 to i64*
  %4852 = load i64, i64* %PC.i1077
  %4853 = add i64 %4852, -33
  %4854 = load i64, i64* %PC.i1077
  %4855 = add i64 %4854, 5
  store i64 %4855, i64* %PC.i1077
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4853, i64* %4856, align 8
  store %struct.Memory* %loadMem_48ca03, %struct.Memory** %MEMORY
  br label %block_.L_48c9e2

block_.L_48ca08:                                  ; preds = %block_.L_48c9e2
  %loadMem_48ca08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4858 = getelementptr inbounds %struct.GPR, %struct.GPR* %4857, i32 0, i32 33
  %4859 = getelementptr inbounds %struct.Reg, %struct.Reg* %4858, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %4859 to i64*
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4861 = getelementptr inbounds %struct.GPR, %struct.GPR* %4860, i32 0, i32 1
  %4862 = getelementptr inbounds %struct.Reg, %struct.Reg* %4861, i32 0, i32 0
  %RAX.i1075 = bitcast %union.anon* %4862 to i64*
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4864 = getelementptr inbounds %struct.GPR, %struct.GPR* %4863, i32 0, i32 15
  %4865 = getelementptr inbounds %struct.Reg, %struct.Reg* %4864, i32 0, i32 0
  %RBP.i1076 = bitcast %union.anon* %4865 to i64*
  %4866 = load i64, i64* %RBP.i1076
  %4867 = sub i64 %4866, 112
  %4868 = load i64, i64* %PC.i1074
  %4869 = add i64 %4868, 3
  store i64 %4869, i64* %PC.i1074
  %4870 = inttoptr i64 %4867 to i32*
  %4871 = load i32, i32* %4870
  %4872 = zext i32 %4871 to i64
  store i64 %4872, i64* %RAX.i1075, align 8
  store %struct.Memory* %loadMem_48ca08, %struct.Memory** %MEMORY
  %loadMem_48ca0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4874 = getelementptr inbounds %struct.GPR, %struct.GPR* %4873, i32 0, i32 33
  %4875 = getelementptr inbounds %struct.Reg, %struct.Reg* %4874, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %4875 to i64*
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4877 = getelementptr inbounds %struct.GPR, %struct.GPR* %4876, i32 0, i32 1
  %4878 = getelementptr inbounds %struct.Reg, %struct.Reg* %4877, i32 0, i32 0
  %RAX.i1073 = bitcast %union.anon* %4878 to i64*
  %4879 = load i64, i64* %RAX.i1073
  %4880 = load i64, i64* %PC.i1072
  %4881 = add i64 %4880, 3
  store i64 %4881, i64* %PC.i1072
  %4882 = and i64 %4879, 4294967295
  %4883 = shl i64 %4882, 3
  %4884 = trunc i64 %4883 to i32
  %4885 = icmp slt i32 %4884, 0
  %4886 = shl i32 %4884, 1
  %4887 = zext i32 %4886 to i64
  store i64 %4887, i64* %RAX.i1073, align 8
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4889 = zext i1 %4885 to i8
  store i8 %4889, i8* %4888, align 1
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4891 = and i32 %4886, 254
  %4892 = call i32 @llvm.ctpop.i32(i32 %4891)
  %4893 = trunc i32 %4892 to i8
  %4894 = and i8 %4893, 1
  %4895 = xor i8 %4894, 1
  store i8 %4895, i8* %4890, align 1
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4896, align 1
  %4897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4898 = icmp eq i32 %4886, 0
  %4899 = zext i1 %4898 to i8
  store i8 %4899, i8* %4897, align 1
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4901 = lshr i32 %4886, 31
  %4902 = trunc i32 %4901 to i8
  store i8 %4902, i8* %4900, align 1
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4903, align 1
  store %struct.Memory* %loadMem_48ca0b, %struct.Memory** %MEMORY
  %loadMem_48ca0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4905 = getelementptr inbounds %struct.GPR, %struct.GPR* %4904, i32 0, i32 33
  %4906 = getelementptr inbounds %struct.Reg, %struct.Reg* %4905, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %4906 to i64*
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4908 = getelementptr inbounds %struct.GPR, %struct.GPR* %4907, i32 0, i32 5
  %4909 = getelementptr inbounds %struct.Reg, %struct.Reg* %4908, i32 0, i32 0
  %RCX.i1070 = bitcast %union.anon* %4909 to i64*
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4911 = getelementptr inbounds %struct.GPR, %struct.GPR* %4910, i32 0, i32 15
  %4912 = getelementptr inbounds %struct.Reg, %struct.Reg* %4911, i32 0, i32 0
  %RBP.i1071 = bitcast %union.anon* %4912 to i64*
  %4913 = load i64, i64* %RBP.i1071
  %4914 = sub i64 %4913, 80
  %4915 = load i64, i64* %PC.i1069
  %4916 = add i64 %4915, 4
  store i64 %4916, i64* %PC.i1069
  %4917 = inttoptr i64 %4914 to i64*
  %4918 = load i64, i64* %4917
  store i64 %4918, i64* %RCX.i1070, align 8
  store %struct.Memory* %loadMem_48ca0e, %struct.Memory** %MEMORY
  %loadMem_48ca12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4920 = getelementptr inbounds %struct.GPR, %struct.GPR* %4919, i32 0, i32 33
  %4921 = getelementptr inbounds %struct.Reg, %struct.Reg* %4920, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %4921 to i64*
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4923 = getelementptr inbounds %struct.GPR, %struct.GPR* %4922, i32 0, i32 1
  %4924 = getelementptr inbounds %struct.Reg, %struct.Reg* %4923, i32 0, i32 0
  %RAX.i1067 = bitcast %union.anon* %4924 to i64*
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4926 = getelementptr inbounds %struct.GPR, %struct.GPR* %4925, i32 0, i32 5
  %4927 = getelementptr inbounds %struct.Reg, %struct.Reg* %4926, i32 0, i32 0
  %RCX.i1068 = bitcast %union.anon* %4927 to i64*
  %4928 = load i64, i64* %RAX.i1067
  %4929 = load i64, i64* %RCX.i1068
  %4930 = add i64 %4929, 460
  %4931 = load i64, i64* %PC.i1066
  %4932 = add i64 %4931, 6
  store i64 %4932, i64* %PC.i1066
  %4933 = trunc i64 %4928 to i32
  %4934 = inttoptr i64 %4930 to i32*
  %4935 = load i32, i32* %4934
  %4936 = add i32 %4935, %4933
  %4937 = zext i32 %4936 to i64
  store i64 %4937, i64* %RAX.i1067, align 8
  %4938 = icmp ult i32 %4936, %4933
  %4939 = icmp ult i32 %4936, %4935
  %4940 = or i1 %4938, %4939
  %4941 = zext i1 %4940 to i8
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4941, i8* %4942, align 1
  %4943 = and i32 %4936, 255
  %4944 = call i32 @llvm.ctpop.i32(i32 %4943)
  %4945 = trunc i32 %4944 to i8
  %4946 = and i8 %4945, 1
  %4947 = xor i8 %4946, 1
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4947, i8* %4948, align 1
  %4949 = xor i32 %4935, %4933
  %4950 = xor i32 %4949, %4936
  %4951 = lshr i32 %4950, 4
  %4952 = trunc i32 %4951 to i8
  %4953 = and i8 %4952, 1
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4953, i8* %4954, align 1
  %4955 = icmp eq i32 %4936, 0
  %4956 = zext i1 %4955 to i8
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4956, i8* %4957, align 1
  %4958 = lshr i32 %4936, 31
  %4959 = trunc i32 %4958 to i8
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4959, i8* %4960, align 1
  %4961 = lshr i32 %4933, 31
  %4962 = lshr i32 %4935, 31
  %4963 = xor i32 %4958, %4961
  %4964 = xor i32 %4958, %4962
  %4965 = add i32 %4963, %4964
  %4966 = icmp eq i32 %4965, 2
  %4967 = zext i1 %4966 to i8
  %4968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4967, i8* %4968, align 1
  store %struct.Memory* %loadMem_48ca12, %struct.Memory** %MEMORY
  %loadMem_48ca18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4970 = getelementptr inbounds %struct.GPR, %struct.GPR* %4969, i32 0, i32 33
  %4971 = getelementptr inbounds %struct.Reg, %struct.Reg* %4970, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %4971 to i64*
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4973 = getelementptr inbounds %struct.GPR, %struct.GPR* %4972, i32 0, i32 1
  %4974 = getelementptr inbounds %struct.Reg, %struct.Reg* %4973, i32 0, i32 0
  %EAX.i1064 = bitcast %union.anon* %4974 to i32*
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4976 = getelementptr inbounds %struct.GPR, %struct.GPR* %4975, i32 0, i32 5
  %4977 = getelementptr inbounds %struct.Reg, %struct.Reg* %4976, i32 0, i32 0
  %RCX.i1065 = bitcast %union.anon* %4977 to i64*
  %4978 = load i64, i64* %RCX.i1065
  %4979 = add i64 %4978, 460
  %4980 = load i32, i32* %EAX.i1064
  %4981 = zext i32 %4980 to i64
  %4982 = load i64, i64* %PC.i1063
  %4983 = add i64 %4982, 6
  store i64 %4983, i64* %PC.i1063
  %4984 = inttoptr i64 %4979 to i32*
  store i32 %4980, i32* %4984
  store %struct.Memory* %loadMem_48ca18, %struct.Memory** %MEMORY
  br label %block_.L_48ca1e

block_.L_48ca1e:                                  ; preds = %block_.L_48ca08, %block_48c90d
  %loadMem_48ca1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4986 = getelementptr inbounds %struct.GPR, %struct.GPR* %4985, i32 0, i32 33
  %4987 = getelementptr inbounds %struct.Reg, %struct.Reg* %4986, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %4987 to i64*
  %4988 = load i64, i64* %PC.i1062
  %4989 = add i64 %4988, 5
  %4990 = load i64, i64* %PC.i1062
  %4991 = add i64 %4990, 5
  store i64 %4991, i64* %PC.i1062
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4989, i64* %4992, align 8
  store %struct.Memory* %loadMem_48ca1e, %struct.Memory** %MEMORY
  br label %block_.L_48ca23

block_.L_48ca23:                                  ; preds = %block_.L_48ca1e, %block_.L_48c903
  %loadMem_48ca23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4994 = getelementptr inbounds %struct.GPR, %struct.GPR* %4993, i32 0, i32 33
  %4995 = getelementptr inbounds %struct.Reg, %struct.Reg* %4994, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %4995 to i64*
  %4996 = load i64, i64* %PC.i1061
  %4997 = add i64 %4996, 5
  %4998 = load i64, i64* %PC.i1061
  %4999 = add i64 %4998, 5
  store i64 %4999, i64* %PC.i1061
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4997, i64* %5000, align 8
  store %struct.Memory* %loadMem_48ca23, %struct.Memory** %MEMORY
  br label %block_.L_48ca28

block_.L_48ca28:                                  ; preds = %block_.L_48ca23, %block_48c8f1
  %loadMem_48ca28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5002 = getelementptr inbounds %struct.GPR, %struct.GPR* %5001, i32 0, i32 33
  %5003 = getelementptr inbounds %struct.Reg, %struct.Reg* %5002, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %5003 to i64*
  %5004 = load i64, i64* %PC.i1060
  %5005 = add i64 %5004, 5
  %5006 = load i64, i64* %PC.i1060
  %5007 = add i64 %5006, 5
  store i64 %5007, i64* %PC.i1060
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5005, i64* %5008, align 8
  store %struct.Memory* %loadMem_48ca28, %struct.Memory** %MEMORY
  br label %block_.L_48ca2d

block_.L_48ca2d:                                  ; preds = %block_.L_48ca28, %block_.L_48c8e2
  %loadMem_48ca2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5010 = getelementptr inbounds %struct.GPR, %struct.GPR* %5009, i32 0, i32 33
  %5011 = getelementptr inbounds %struct.Reg, %struct.Reg* %5010, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %5011 to i64*
  %5012 = load i64, i64* %PC.i1059
  %5013 = add i64 %5012, 5
  %5014 = load i64, i64* %PC.i1059
  %5015 = add i64 %5014, 5
  store i64 %5015, i64* %PC.i1059
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5013, i64* %5016, align 8
  store %struct.Memory* %loadMem_48ca2d, %struct.Memory** %MEMORY
  br label %block_.L_48ca32

block_.L_48ca32:                                  ; preds = %block_.L_48ca2d, %block_48c7b9
  %loadMem_48ca32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5018 = getelementptr inbounds %struct.GPR, %struct.GPR* %5017, i32 0, i32 33
  %5019 = getelementptr inbounds %struct.Reg, %struct.Reg* %5018, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %5019 to i64*
  %5020 = load i64, i64* %PC.i1058
  %5021 = add i64 %5020, 5
  %5022 = load i64, i64* %PC.i1058
  %5023 = add i64 %5022, 5
  store i64 %5023, i64* %PC.i1058
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5021, i64* %5024, align 8
  store %struct.Memory* %loadMem_48ca32, %struct.Memory** %MEMORY
  br label %block_.L_48ca37

block_.L_48ca37:                                  ; preds = %block_.L_48ca32, %block_.L_48c7aa
  %loadMem_48ca37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5026 = getelementptr inbounds %struct.GPR, %struct.GPR* %5025, i32 0, i32 33
  %5027 = getelementptr inbounds %struct.Reg, %struct.Reg* %5026, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %5027 to i64*
  %5028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5029 = getelementptr inbounds %struct.GPR, %struct.GPR* %5028, i32 0, i32 1
  %5030 = getelementptr inbounds %struct.Reg, %struct.Reg* %5029, i32 0, i32 0
  %RAX.i1057 = bitcast %union.anon* %5030 to i64*
  %5031 = load i64, i64* %PC.i1056
  %5032 = add i64 %5031, 8
  store i64 %5032, i64* %PC.i1056
  %5033 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %5033, i64* %RAX.i1057, align 8
  store %struct.Memory* %loadMem_48ca37, %struct.Memory** %MEMORY
  %loadMem_48ca3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5035 = getelementptr inbounds %struct.GPR, %struct.GPR* %5034, i32 0, i32 33
  %5036 = getelementptr inbounds %struct.Reg, %struct.Reg* %5035, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %5036 to i64*
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5038 = getelementptr inbounds %struct.GPR, %struct.GPR* %5037, i32 0, i32 1
  %5039 = getelementptr inbounds %struct.Reg, %struct.Reg* %5038, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %5039 to i64*
  %5040 = load i64, i64* %RAX.i1055
  %5041 = add i64 %5040, 2464
  %5042 = load i64, i64* %PC.i1054
  %5043 = add i64 %5042, 7
  store i64 %5043, i64* %PC.i1054
  %5044 = inttoptr i64 %5041 to i32*
  %5045 = load i32, i32* %5044
  %5046 = sub i32 %5045, 2
  %5047 = icmp ult i32 %5045, 2
  %5048 = zext i1 %5047 to i8
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5048, i8* %5049, align 1
  %5050 = and i32 %5046, 255
  %5051 = call i32 @llvm.ctpop.i32(i32 %5050)
  %5052 = trunc i32 %5051 to i8
  %5053 = and i8 %5052, 1
  %5054 = xor i8 %5053, 1
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5054, i8* %5055, align 1
  %5056 = xor i32 %5045, 2
  %5057 = xor i32 %5056, %5046
  %5058 = lshr i32 %5057, 4
  %5059 = trunc i32 %5058 to i8
  %5060 = and i8 %5059, 1
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5060, i8* %5061, align 1
  %5062 = icmp eq i32 %5046, 0
  %5063 = zext i1 %5062 to i8
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5063, i8* %5064, align 1
  %5065 = lshr i32 %5046, 31
  %5066 = trunc i32 %5065 to i8
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5066, i8* %5067, align 1
  %5068 = lshr i32 %5045, 31
  %5069 = xor i32 %5065, %5068
  %5070 = add i32 %5069, %5068
  %5071 = icmp eq i32 %5070, 2
  %5072 = zext i1 %5071 to i8
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5072, i8* %5073, align 1
  store %struct.Memory* %loadMem_48ca3f, %struct.Memory** %MEMORY
  %loadMem_48ca46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5075 = getelementptr inbounds %struct.GPR, %struct.GPR* %5074, i32 0, i32 33
  %5076 = getelementptr inbounds %struct.Reg, %struct.Reg* %5075, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %5076 to i64*
  %5077 = load i64, i64* %PC.i1053
  %5078 = add i64 %5077, 77
  %5079 = load i64, i64* %PC.i1053
  %5080 = add i64 %5079, 6
  %5081 = load i64, i64* %PC.i1053
  %5082 = add i64 %5081, 6
  store i64 %5082, i64* %PC.i1053
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5084 = load i8, i8* %5083, align 1
  %5085 = icmp eq i8 %5084, 0
  %5086 = zext i1 %5085 to i8
  store i8 %5086, i8* %BRANCH_TAKEN, align 1
  %5087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5088 = select i1 %5085, i64 %5078, i64 %5080
  store i64 %5088, i64* %5087, align 8
  store %struct.Memory* %loadMem_48ca46, %struct.Memory** %MEMORY
  %loadBr_48ca46 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48ca46 = icmp eq i8 %loadBr_48ca46, 1
  br i1 %cmpBr_48ca46, label %block_.L_48ca93, label %block_48ca4c

block_48ca4c:                                     ; preds = %block_.L_48ca37
  %loadMem_48ca4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5090 = getelementptr inbounds %struct.GPR, %struct.GPR* %5089, i32 0, i32 33
  %5091 = getelementptr inbounds %struct.Reg, %struct.Reg* %5090, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %5091 to i64*
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5093 = getelementptr inbounds %struct.GPR, %struct.GPR* %5092, i32 0, i32 1
  %5094 = getelementptr inbounds %struct.Reg, %struct.Reg* %5093, i32 0, i32 0
  %RAX.i1052 = bitcast %union.anon* %5094 to i64*
  %5095 = load i64, i64* %PC.i1051
  %5096 = add i64 %5095, 8
  store i64 %5096, i64* %PC.i1051
  %5097 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5097, i64* %RAX.i1052, align 8
  store %struct.Memory* %loadMem_48ca4c, %struct.Memory** %MEMORY
  %loadMem_48ca54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5099 = getelementptr inbounds %struct.GPR, %struct.GPR* %5098, i32 0, i32 33
  %5100 = getelementptr inbounds %struct.Reg, %struct.Reg* %5099, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %5100 to i64*
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5102 = getelementptr inbounds %struct.GPR, %struct.GPR* %5101, i32 0, i32 1
  %5103 = getelementptr inbounds %struct.Reg, %struct.Reg* %5102, i32 0, i32 0
  %RAX.i1050 = bitcast %union.anon* %5103 to i64*
  %5104 = load i64, i64* %RAX.i1050
  %5105 = add i64 %5104, 24
  %5106 = load i64, i64* %PC.i1049
  %5107 = add i64 %5106, 4
  store i64 %5107, i64* %PC.i1049
  %5108 = inttoptr i64 %5105 to i32*
  %5109 = load i32, i32* %5108
  %5110 = sub i32 %5109, 1
  %5111 = icmp ult i32 %5109, 1
  %5112 = zext i1 %5111 to i8
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5112, i8* %5113, align 1
  %5114 = and i32 %5110, 255
  %5115 = call i32 @llvm.ctpop.i32(i32 %5114)
  %5116 = trunc i32 %5115 to i8
  %5117 = and i8 %5116, 1
  %5118 = xor i8 %5117, 1
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5118, i8* %5119, align 1
  %5120 = xor i32 %5109, 1
  %5121 = xor i32 %5120, %5110
  %5122 = lshr i32 %5121, 4
  %5123 = trunc i32 %5122 to i8
  %5124 = and i8 %5123, 1
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5124, i8* %5125, align 1
  %5126 = icmp eq i32 %5110, 0
  %5127 = zext i1 %5126 to i8
  %5128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5127, i8* %5128, align 1
  %5129 = lshr i32 %5110, 31
  %5130 = trunc i32 %5129 to i8
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5130, i8* %5131, align 1
  %5132 = lshr i32 %5109, 31
  %5133 = xor i32 %5129, %5132
  %5134 = add i32 %5133, %5132
  %5135 = icmp eq i32 %5134, 2
  %5136 = zext i1 %5135 to i8
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5136, i8* %5137, align 1
  store %struct.Memory* %loadMem_48ca54, %struct.Memory** %MEMORY
  %loadMem_48ca58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5139 = getelementptr inbounds %struct.GPR, %struct.GPR* %5138, i32 0, i32 33
  %5140 = getelementptr inbounds %struct.Reg, %struct.Reg* %5139, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %5140 to i64*
  %5141 = load i64, i64* %PC.i1048
  %5142 = add i64 %5141, 59
  %5143 = load i64, i64* %PC.i1048
  %5144 = add i64 %5143, 6
  %5145 = load i64, i64* %PC.i1048
  %5146 = add i64 %5145, 6
  store i64 %5146, i64* %PC.i1048
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5148 = load i8, i8* %5147, align 1
  store i8 %5148, i8* %BRANCH_TAKEN, align 1
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5150 = icmp ne i8 %5148, 0
  %5151 = select i1 %5150, i64 %5142, i64 %5144
  store i64 %5151, i64* %5149, align 8
  store %struct.Memory* %loadMem_48ca58, %struct.Memory** %MEMORY
  %loadBr_48ca58 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48ca58 = icmp eq i8 %loadBr_48ca58, 1
  br i1 %cmpBr_48ca58, label %block_.L_48ca93, label %block_48ca5e

block_48ca5e:                                     ; preds = %block_48ca4c
  %loadMem_48ca5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5153 = getelementptr inbounds %struct.GPR, %struct.GPR* %5152, i32 0, i32 33
  %5154 = getelementptr inbounds %struct.Reg, %struct.Reg* %5153, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %5154 to i64*
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5156 = getelementptr inbounds %struct.GPR, %struct.GPR* %5155, i32 0, i32 15
  %5157 = getelementptr inbounds %struct.Reg, %struct.Reg* %5156, i32 0, i32 0
  %RBP.i1047 = bitcast %union.anon* %5157 to i64*
  %5158 = load i64, i64* %RBP.i1047
  %5159 = sub i64 %5158, 20
  %5160 = load i64, i64* %PC.i1046
  %5161 = add i64 %5160, 4
  store i64 %5161, i64* %PC.i1046
  %5162 = inttoptr i64 %5159 to i32*
  %5163 = load i32, i32* %5162
  %5164 = sub i32 %5163, 10
  %5165 = icmp ult i32 %5163, 10
  %5166 = zext i1 %5165 to i8
  %5167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5166, i8* %5167, align 1
  %5168 = and i32 %5164, 255
  %5169 = call i32 @llvm.ctpop.i32(i32 %5168)
  %5170 = trunc i32 %5169 to i8
  %5171 = and i8 %5170, 1
  %5172 = xor i8 %5171, 1
  %5173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5172, i8* %5173, align 1
  %5174 = xor i32 %5163, 10
  %5175 = xor i32 %5174, %5164
  %5176 = lshr i32 %5175, 4
  %5177 = trunc i32 %5176 to i8
  %5178 = and i8 %5177, 1
  %5179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5178, i8* %5179, align 1
  %5180 = icmp eq i32 %5164, 0
  %5181 = zext i1 %5180 to i8
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5181, i8* %5182, align 1
  %5183 = lshr i32 %5164, 31
  %5184 = trunc i32 %5183 to i8
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5184, i8* %5185, align 1
  %5186 = lshr i32 %5163, 31
  %5187 = xor i32 %5183, %5186
  %5188 = add i32 %5187, %5186
  %5189 = icmp eq i32 %5188, 2
  %5190 = zext i1 %5189 to i8
  %5191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5190, i8* %5191, align 1
  store %struct.Memory* %loadMem_48ca5e, %struct.Memory** %MEMORY
  %loadMem_48ca62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5193 = getelementptr inbounds %struct.GPR, %struct.GPR* %5192, i32 0, i32 33
  %5194 = getelementptr inbounds %struct.Reg, %struct.Reg* %5193, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %5194 to i64*
  %5195 = load i64, i64* %PC.i1045
  %5196 = add i64 %5195, 20
  %5197 = load i64, i64* %PC.i1045
  %5198 = add i64 %5197, 6
  %5199 = load i64, i64* %PC.i1045
  %5200 = add i64 %5199, 6
  store i64 %5200, i64* %PC.i1045
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5202 = load i8, i8* %5201, align 1
  %5203 = icmp eq i8 %5202, 0
  %5204 = zext i1 %5203 to i8
  store i8 %5204, i8* %BRANCH_TAKEN, align 1
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5206 = select i1 %5203, i64 %5196, i64 %5198
  store i64 %5206, i64* %5205, align 8
  store %struct.Memory* %loadMem_48ca62, %struct.Memory** %MEMORY
  %loadBr_48ca62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48ca62 = icmp eq i8 %loadBr_48ca62, 1
  br i1 %cmpBr_48ca62, label %block_.L_48ca76, label %block_48ca68

block_48ca68:                                     ; preds = %block_48ca5e
  %loadMem_48ca68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5208 = getelementptr inbounds %struct.GPR, %struct.GPR* %5207, i32 0, i32 33
  %5209 = getelementptr inbounds %struct.Reg, %struct.Reg* %5208, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %5209 to i64*
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5211 = getelementptr inbounds %struct.GPR, %struct.GPR* %5210, i32 0, i32 1
  %5212 = getelementptr inbounds %struct.Reg, %struct.Reg* %5211, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %5212 to i64*
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5214 = getelementptr inbounds %struct.GPR, %struct.GPR* %5213, i32 0, i32 15
  %5215 = getelementptr inbounds %struct.Reg, %struct.Reg* %5214, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %5215 to i64*
  %5216 = load i64, i64* %RBP.i1044
  %5217 = sub i64 %5216, 36
  %5218 = load i64, i64* %PC.i1042
  %5219 = add i64 %5218, 3
  store i64 %5219, i64* %PC.i1042
  %5220 = inttoptr i64 %5217 to i32*
  %5221 = load i32, i32* %5220
  %5222 = zext i32 %5221 to i64
  store i64 %5222, i64* %RAX.i1043, align 8
  store %struct.Memory* %loadMem_48ca68, %struct.Memory** %MEMORY
  %loadMem_48ca6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5224 = getelementptr inbounds %struct.GPR, %struct.GPR* %5223, i32 0, i32 33
  %5225 = getelementptr inbounds %struct.Reg, %struct.Reg* %5224, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %5225 to i64*
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5227 = getelementptr inbounds %struct.GPR, %struct.GPR* %5226, i32 0, i32 1
  %5228 = getelementptr inbounds %struct.Reg, %struct.Reg* %5227, i32 0, i32 0
  %EAX.i1040 = bitcast %union.anon* %5228 to i32*
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5230 = getelementptr inbounds %struct.GPR, %struct.GPR* %5229, i32 0, i32 15
  %5231 = getelementptr inbounds %struct.Reg, %struct.Reg* %5230, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %5231 to i64*
  %5232 = load i64, i64* %RBP.i1041
  %5233 = sub i64 %5232, 144
  %5234 = load i32, i32* %EAX.i1040
  %5235 = zext i32 %5234 to i64
  %5236 = load i64, i64* %PC.i1039
  %5237 = add i64 %5236, 6
  store i64 %5237, i64* %PC.i1039
  %5238 = inttoptr i64 %5233 to i32*
  store i32 %5234, i32* %5238
  store %struct.Memory* %loadMem_48ca6b, %struct.Memory** %MEMORY
  %loadMem_48ca71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5240 = getelementptr inbounds %struct.GPR, %struct.GPR* %5239, i32 0, i32 33
  %5241 = getelementptr inbounds %struct.Reg, %struct.Reg* %5240, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %5241 to i64*
  %5242 = load i64, i64* %PC.i1038
  %5243 = add i64 %5242, 21
  %5244 = load i64, i64* %PC.i1038
  %5245 = add i64 %5244, 5
  store i64 %5245, i64* %PC.i1038
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5243, i64* %5246, align 8
  store %struct.Memory* %loadMem_48ca71, %struct.Memory** %MEMORY
  br label %block_.L_48ca86

block_.L_48ca76:                                  ; preds = %block_48ca5e
  %loadMem_48ca76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5248 = getelementptr inbounds %struct.GPR, %struct.GPR* %5247, i32 0, i32 33
  %5249 = getelementptr inbounds %struct.Reg, %struct.Reg* %5248, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %5249 to i64*
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5251 = getelementptr inbounds %struct.GPR, %struct.GPR* %5250, i32 0, i32 1
  %5252 = getelementptr inbounds %struct.Reg, %struct.Reg* %5251, i32 0, i32 0
  %RAX.i1037 = bitcast %union.anon* %5252 to i64*
  %5253 = load i64, i64* %PC.i1036
  %5254 = add i64 %5253, 5
  store i64 %5254, i64* %PC.i1036
  store i64 4294967295, i64* %RAX.i1037, align 8
  store %struct.Memory* %loadMem_48ca76, %struct.Memory** %MEMORY
  %loadMem_48ca7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 33
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %5257 to i64*
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5259 = getelementptr inbounds %struct.GPR, %struct.GPR* %5258, i32 0, i32 1
  %5260 = getelementptr inbounds %struct.Reg, %struct.Reg* %5259, i32 0, i32 0
  %EAX.i1034 = bitcast %union.anon* %5260 to i32*
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5262 = getelementptr inbounds %struct.GPR, %struct.GPR* %5261, i32 0, i32 15
  %5263 = getelementptr inbounds %struct.Reg, %struct.Reg* %5262, i32 0, i32 0
  %RBP.i1035 = bitcast %union.anon* %5263 to i64*
  %5264 = load i64, i64* %RBP.i1035
  %5265 = sub i64 %5264, 144
  %5266 = load i32, i32* %EAX.i1034
  %5267 = zext i32 %5266 to i64
  %5268 = load i64, i64* %PC.i1033
  %5269 = add i64 %5268, 6
  store i64 %5269, i64* %PC.i1033
  %5270 = inttoptr i64 %5265 to i32*
  store i32 %5266, i32* %5270
  store %struct.Memory* %loadMem_48ca7b, %struct.Memory** %MEMORY
  %loadMem_48ca81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5272 = getelementptr inbounds %struct.GPR, %struct.GPR* %5271, i32 0, i32 33
  %5273 = getelementptr inbounds %struct.Reg, %struct.Reg* %5272, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %5273 to i64*
  %5274 = load i64, i64* %PC.i1032
  %5275 = add i64 %5274, 5
  %5276 = load i64, i64* %PC.i1032
  %5277 = add i64 %5276, 5
  store i64 %5277, i64* %PC.i1032
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5275, i64* %5278, align 8
  store %struct.Memory* %loadMem_48ca81, %struct.Memory** %MEMORY
  br label %block_.L_48ca86

block_.L_48ca86:                                  ; preds = %block_.L_48ca76, %block_48ca68
  %loadMem_48ca86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5280 = getelementptr inbounds %struct.GPR, %struct.GPR* %5279, i32 0, i32 33
  %5281 = getelementptr inbounds %struct.Reg, %struct.Reg* %5280, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %5281 to i64*
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5283 = getelementptr inbounds %struct.GPR, %struct.GPR* %5282, i32 0, i32 1
  %5284 = getelementptr inbounds %struct.Reg, %struct.Reg* %5283, i32 0, i32 0
  %RAX.i1030 = bitcast %union.anon* %5284 to i64*
  %5285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5286 = getelementptr inbounds %struct.GPR, %struct.GPR* %5285, i32 0, i32 15
  %5287 = getelementptr inbounds %struct.Reg, %struct.Reg* %5286, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %5287 to i64*
  %5288 = load i64, i64* %RBP.i1031
  %5289 = sub i64 %5288, 144
  %5290 = load i64, i64* %PC.i1029
  %5291 = add i64 %5290, 6
  store i64 %5291, i64* %PC.i1029
  %5292 = inttoptr i64 %5289 to i32*
  %5293 = load i32, i32* %5292
  %5294 = zext i32 %5293 to i64
  store i64 %5294, i64* %RAX.i1030, align 8
  store %struct.Memory* %loadMem_48ca86, %struct.Memory** %MEMORY
  %loadMem_48ca8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5296 = getelementptr inbounds %struct.GPR, %struct.GPR* %5295, i32 0, i32 33
  %5297 = getelementptr inbounds %struct.Reg, %struct.Reg* %5296, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %5297 to i64*
  %5298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5299 = getelementptr inbounds %struct.GPR, %struct.GPR* %5298, i32 0, i32 1
  %5300 = getelementptr inbounds %struct.Reg, %struct.Reg* %5299, i32 0, i32 0
  %EAX.i1027 = bitcast %union.anon* %5300 to i32*
  %5301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5302 = getelementptr inbounds %struct.GPR, %struct.GPR* %5301, i32 0, i32 11
  %5303 = getelementptr inbounds %struct.Reg, %struct.Reg* %5302, i32 0, i32 0
  %RDI.i1028 = bitcast %union.anon* %5303 to i64*
  %5304 = load i32, i32* %EAX.i1027
  %5305 = zext i32 %5304 to i64
  %5306 = load i64, i64* %PC.i1026
  %5307 = add i64 %5306, 2
  store i64 %5307, i64* %PC.i1026
  %5308 = and i64 %5305, 4294967295
  store i64 %5308, i64* %RDI.i1028, align 8
  store %struct.Memory* %loadMem_48ca8c, %struct.Memory** %MEMORY
  %loadMem1_48ca8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5310 = getelementptr inbounds %struct.GPR, %struct.GPR* %5309, i32 0, i32 33
  %5311 = getelementptr inbounds %struct.Reg, %struct.Reg* %5310, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %5311 to i64*
  %5312 = load i64, i64* %PC.i1025
  %5313 = add i64 %5312, -454126
  %5314 = load i64, i64* %PC.i1025
  %5315 = add i64 %5314, 5
  %5316 = load i64, i64* %PC.i1025
  %5317 = add i64 %5316, 5
  store i64 %5317, i64* %PC.i1025
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5319 = load i64, i64* %5318, align 8
  %5320 = add i64 %5319, -8
  %5321 = inttoptr i64 %5320 to i64*
  store i64 %5315, i64* %5321
  store i64 %5320, i64* %5318, align 8
  %5322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5313, i64* %5322, align 8
  store %struct.Memory* %loadMem1_48ca8e, %struct.Memory** %MEMORY
  %loadMem2_48ca8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48ca8e = load i64, i64* %3
  %call2_48ca8e = call %struct.Memory* @sub_41dca0.compute_residue_mb(%struct.State* %0, i64 %loadPC_48ca8e, %struct.Memory* %loadMem2_48ca8e)
  store %struct.Memory* %call2_48ca8e, %struct.Memory** %MEMORY
  br label %block_.L_48ca93

block_.L_48ca93:                                  ; preds = %block_.L_48ca86, %block_48ca4c, %block_.L_48ca37
  %loadMem_48ca93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5324 = getelementptr inbounds %struct.GPR, %struct.GPR* %5323, i32 0, i32 33
  %5325 = getelementptr inbounds %struct.Reg, %struct.Reg* %5324, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %5325 to i64*
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5327 = getelementptr inbounds %struct.GPR, %struct.GPR* %5326, i32 0, i32 15
  %5328 = getelementptr inbounds %struct.Reg, %struct.Reg* %5327, i32 0, i32 0
  %RBP.i1024 = bitcast %union.anon* %5328 to i64*
  %5329 = load i64, i64* %RBP.i1024
  %5330 = sub i64 %5329, 20
  %5331 = load i64, i64* %PC.i1023
  %5332 = add i64 %5331, 4
  store i64 %5332, i64* %PC.i1023
  %5333 = inttoptr i64 %5330 to i32*
  %5334 = load i32, i32* %5333
  %5335 = sub i32 %5334, 10
  %5336 = icmp ult i32 %5334, 10
  %5337 = zext i1 %5336 to i8
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5337, i8* %5338, align 1
  %5339 = and i32 %5335, 255
  %5340 = call i32 @llvm.ctpop.i32(i32 %5339)
  %5341 = trunc i32 %5340 to i8
  %5342 = and i8 %5341, 1
  %5343 = xor i8 %5342, 1
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5343, i8* %5344, align 1
  %5345 = xor i32 %5334, 10
  %5346 = xor i32 %5345, %5335
  %5347 = lshr i32 %5346, 4
  %5348 = trunc i32 %5347 to i8
  %5349 = and i8 %5348, 1
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5349, i8* %5350, align 1
  %5351 = icmp eq i32 %5335, 0
  %5352 = zext i1 %5351 to i8
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5352, i8* %5353, align 1
  %5354 = lshr i32 %5335, 31
  %5355 = trunc i32 %5354 to i8
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5355, i8* %5356, align 1
  %5357 = lshr i32 %5334, 31
  %5358 = xor i32 %5354, %5357
  %5359 = add i32 %5358, %5357
  %5360 = icmp eq i32 %5359, 2
  %5361 = zext i1 %5360 to i8
  %5362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5361, i8* %5362, align 1
  store %struct.Memory* %loadMem_48ca93, %struct.Memory** %MEMORY
  %loadMem_48ca97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5364 = getelementptr inbounds %struct.GPR, %struct.GPR* %5363, i32 0, i32 33
  %5365 = getelementptr inbounds %struct.Reg, %struct.Reg* %5364, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %5365 to i64*
  %5366 = load i64, i64* %PC.i1022
  %5367 = add i64 %5366, 151
  %5368 = load i64, i64* %PC.i1022
  %5369 = add i64 %5368, 6
  %5370 = load i64, i64* %PC.i1022
  %5371 = add i64 %5370, 6
  store i64 %5371, i64* %PC.i1022
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5373 = load i8, i8* %5372, align 1
  %5374 = icmp eq i8 %5373, 0
  %5375 = zext i1 %5374 to i8
  store i8 %5375, i8* %BRANCH_TAKEN, align 1
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5377 = select i1 %5374, i64 %5367, i64 %5369
  store i64 %5377, i64* %5376, align 8
  store %struct.Memory* %loadMem_48ca97, %struct.Memory** %MEMORY
  %loadBr_48ca97 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48ca97 = icmp eq i8 %loadBr_48ca97, 1
  br i1 %cmpBr_48ca97, label %block_.L_48cb2e, label %block_48ca9d

block_48ca9d:                                     ; preds = %block_.L_48ca93
  %loadMem_48ca9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5379 = getelementptr inbounds %struct.GPR, %struct.GPR* %5378, i32 0, i32 33
  %5380 = getelementptr inbounds %struct.Reg, %struct.Reg* %5379, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %5380 to i64*
  %5381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5382 = getelementptr inbounds %struct.GPR, %struct.GPR* %5381, i32 0, i32 15
  %5383 = getelementptr inbounds %struct.Reg, %struct.Reg* %5382, i32 0, i32 0
  %RBP.i1021 = bitcast %union.anon* %5383 to i64*
  %5384 = load i64, i64* %RBP.i1021
  %5385 = sub i64 %5384, 40
  %5386 = load i64, i64* %PC.i1020
  %5387 = add i64 %5386, 7
  store i64 %5387, i64* %PC.i1020
  %5388 = inttoptr i64 %5385 to i32*
  store i32 0, i32* %5388
  store %struct.Memory* %loadMem_48ca9d, %struct.Memory** %MEMORY
  br label %block_.L_48caa4

block_.L_48caa4:                                  ; preds = %block_.L_48cb1b, %block_48ca9d
  %loadMem_48caa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5390 = getelementptr inbounds %struct.GPR, %struct.GPR* %5389, i32 0, i32 33
  %5391 = getelementptr inbounds %struct.Reg, %struct.Reg* %5390, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %5391 to i64*
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5393 = getelementptr inbounds %struct.GPR, %struct.GPR* %5392, i32 0, i32 15
  %5394 = getelementptr inbounds %struct.Reg, %struct.Reg* %5393, i32 0, i32 0
  %RBP.i1019 = bitcast %union.anon* %5394 to i64*
  %5395 = load i64, i64* %RBP.i1019
  %5396 = sub i64 %5395, 40
  %5397 = load i64, i64* %PC.i1018
  %5398 = add i64 %5397, 4
  store i64 %5398, i64* %PC.i1018
  %5399 = inttoptr i64 %5396 to i32*
  %5400 = load i32, i32* %5399
  %5401 = sub i32 %5400, 16
  %5402 = icmp ult i32 %5400, 16
  %5403 = zext i1 %5402 to i8
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5403, i8* %5404, align 1
  %5405 = and i32 %5401, 255
  %5406 = call i32 @llvm.ctpop.i32(i32 %5405)
  %5407 = trunc i32 %5406 to i8
  %5408 = and i8 %5407, 1
  %5409 = xor i8 %5408, 1
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5409, i8* %5410, align 1
  %5411 = xor i32 %5400, 16
  %5412 = xor i32 %5411, %5401
  %5413 = lshr i32 %5412, 4
  %5414 = trunc i32 %5413 to i8
  %5415 = and i8 %5414, 1
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5415, i8* %5416, align 1
  %5417 = icmp eq i32 %5401, 0
  %5418 = zext i1 %5417 to i8
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5418, i8* %5419, align 1
  %5420 = lshr i32 %5401, 31
  %5421 = trunc i32 %5420 to i8
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5421, i8* %5422, align 1
  %5423 = lshr i32 %5400, 31
  %5424 = xor i32 %5420, %5423
  %5425 = add i32 %5424, %5423
  %5426 = icmp eq i32 %5425, 2
  %5427 = zext i1 %5426 to i8
  %5428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5427, i8* %5428, align 1
  store %struct.Memory* %loadMem_48caa4, %struct.Memory** %MEMORY
  %loadMem_48caa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5430 = getelementptr inbounds %struct.GPR, %struct.GPR* %5429, i32 0, i32 33
  %5431 = getelementptr inbounds %struct.Reg, %struct.Reg* %5430, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %5431 to i64*
  %5432 = load i64, i64* %PC.i1017
  %5433 = add i64 %5432, 129
  %5434 = load i64, i64* %PC.i1017
  %5435 = add i64 %5434, 6
  %5436 = load i64, i64* %PC.i1017
  %5437 = add i64 %5436, 6
  store i64 %5437, i64* %PC.i1017
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5439 = load i8, i8* %5438, align 1
  %5440 = icmp ne i8 %5439, 0
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5442 = load i8, i8* %5441, align 1
  %5443 = icmp ne i8 %5442, 0
  %5444 = xor i1 %5440, %5443
  %5445 = xor i1 %5444, true
  %5446 = zext i1 %5445 to i8
  store i8 %5446, i8* %BRANCH_TAKEN, align 1
  %5447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5448 = select i1 %5444, i64 %5435, i64 %5433
  store i64 %5448, i64* %5447, align 8
  store %struct.Memory* %loadMem_48caa8, %struct.Memory** %MEMORY
  %loadBr_48caa8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48caa8 = icmp eq i8 %loadBr_48caa8, 1
  br i1 %cmpBr_48caa8, label %block_.L_48cb29, label %block_48caae

block_48caae:                                     ; preds = %block_.L_48caa4
  %loadMem_48caae = load %struct.Memory*, %struct.Memory** %MEMORY
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5450 = getelementptr inbounds %struct.GPR, %struct.GPR* %5449, i32 0, i32 33
  %5451 = getelementptr inbounds %struct.Reg, %struct.Reg* %5450, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %5451 to i64*
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5453 = getelementptr inbounds %struct.GPR, %struct.GPR* %5452, i32 0, i32 15
  %5454 = getelementptr inbounds %struct.Reg, %struct.Reg* %5453, i32 0, i32 0
  %RBP.i1016 = bitcast %union.anon* %5454 to i64*
  %5455 = load i64, i64* %RBP.i1016
  %5456 = sub i64 %5455, 44
  %5457 = load i64, i64* %PC.i1015
  %5458 = add i64 %5457, 7
  store i64 %5458, i64* %PC.i1015
  %5459 = inttoptr i64 %5456 to i32*
  store i32 0, i32* %5459
  store %struct.Memory* %loadMem_48caae, %struct.Memory** %MEMORY
  br label %block_.L_48cab5

block_.L_48cab5:                                  ; preds = %block_48cabf, %block_48caae
  %loadMem_48cab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5461 = getelementptr inbounds %struct.GPR, %struct.GPR* %5460, i32 0, i32 33
  %5462 = getelementptr inbounds %struct.Reg, %struct.Reg* %5461, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %5462 to i64*
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5464 = getelementptr inbounds %struct.GPR, %struct.GPR* %5463, i32 0, i32 15
  %5465 = getelementptr inbounds %struct.Reg, %struct.Reg* %5464, i32 0, i32 0
  %RBP.i1014 = bitcast %union.anon* %5465 to i64*
  %5466 = load i64, i64* %RBP.i1014
  %5467 = sub i64 %5466, 44
  %5468 = load i64, i64* %PC.i1013
  %5469 = add i64 %5468, 4
  store i64 %5469, i64* %PC.i1013
  %5470 = inttoptr i64 %5467 to i32*
  %5471 = load i32, i32* %5470
  %5472 = sub i32 %5471, 16
  %5473 = icmp ult i32 %5471, 16
  %5474 = zext i1 %5473 to i8
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5474, i8* %5475, align 1
  %5476 = and i32 %5472, 255
  %5477 = call i32 @llvm.ctpop.i32(i32 %5476)
  %5478 = trunc i32 %5477 to i8
  %5479 = and i8 %5478, 1
  %5480 = xor i8 %5479, 1
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5480, i8* %5481, align 1
  %5482 = xor i32 %5471, 16
  %5483 = xor i32 %5482, %5472
  %5484 = lshr i32 %5483, 4
  %5485 = trunc i32 %5484 to i8
  %5486 = and i8 %5485, 1
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5486, i8* %5487, align 1
  %5488 = icmp eq i32 %5472, 0
  %5489 = zext i1 %5488 to i8
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5489, i8* %5490, align 1
  %5491 = lshr i32 %5472, 31
  %5492 = trunc i32 %5491 to i8
  %5493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5492, i8* %5493, align 1
  %5494 = lshr i32 %5471, 31
  %5495 = xor i32 %5491, %5494
  %5496 = add i32 %5495, %5494
  %5497 = icmp eq i32 %5496, 2
  %5498 = zext i1 %5497 to i8
  %5499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5498, i8* %5499, align 1
  store %struct.Memory* %loadMem_48cab5, %struct.Memory** %MEMORY
  %loadMem_48cab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 33
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %5502 to i64*
  %5503 = load i64, i64* %PC.i1012
  %5504 = add i64 %5503, 93
  %5505 = load i64, i64* %PC.i1012
  %5506 = add i64 %5505, 6
  %5507 = load i64, i64* %PC.i1012
  %5508 = add i64 %5507, 6
  store i64 %5508, i64* %PC.i1012
  %5509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5510 = load i8, i8* %5509, align 1
  %5511 = icmp ne i8 %5510, 0
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5513 = load i8, i8* %5512, align 1
  %5514 = icmp ne i8 %5513, 0
  %5515 = xor i1 %5511, %5514
  %5516 = xor i1 %5515, true
  %5517 = zext i1 %5516 to i8
  store i8 %5517, i8* %BRANCH_TAKEN, align 1
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5519 = select i1 %5515, i64 %5506, i64 %5504
  store i64 %5519, i64* %5518, align 8
  store %struct.Memory* %loadMem_48cab9, %struct.Memory** %MEMORY
  %loadBr_48cab9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cab9 = icmp eq i8 %loadBr_48cab9, 1
  br i1 %cmpBr_48cab9, label %block_.L_48cb16, label %block_48cabf

block_48cabf:                                     ; preds = %block_.L_48cab5
  %loadMem_48cabf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5521 = getelementptr inbounds %struct.GPR, %struct.GPR* %5520, i32 0, i32 33
  %5522 = getelementptr inbounds %struct.Reg, %struct.Reg* %5521, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %5522 to i64*
  %5523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5524 = getelementptr inbounds %struct.GPR, %struct.GPR* %5523, i32 0, i32 1
  %5525 = getelementptr inbounds %struct.Reg, %struct.Reg* %5524, i32 0, i32 0
  %RAX.i1011 = bitcast %union.anon* %5525 to i64*
  %5526 = load i64, i64* %PC.i1010
  %5527 = add i64 %5526, 10
  store i64 %5527, i64* %PC.i1010
  store i64 ptrtoint (%G__0x6cc660_type* @G__0x6cc660 to i64), i64* %RAX.i1011, align 8
  store %struct.Memory* %loadMem_48cabf, %struct.Memory** %MEMORY
  %loadMem_48cac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5529 = getelementptr inbounds %struct.GPR, %struct.GPR* %5528, i32 0, i32 33
  %5530 = getelementptr inbounds %struct.Reg, %struct.Reg* %5529, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %5530 to i64*
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5532 = getelementptr inbounds %struct.GPR, %struct.GPR* %5531, i32 0, i32 5
  %5533 = getelementptr inbounds %struct.Reg, %struct.Reg* %5532, i32 0, i32 0
  %RCX.i1009 = bitcast %union.anon* %5533 to i64*
  %5534 = load i64, i64* %PC.i1008
  %5535 = add i64 %5534, 8
  store i64 %5535, i64* %PC.i1008
  %5536 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5536, i64* %RCX.i1009, align 8
  store %struct.Memory* %loadMem_48cac9, %struct.Memory** %MEMORY
  %loadMem_48cad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5538 = getelementptr inbounds %struct.GPR, %struct.GPR* %5537, i32 0, i32 33
  %5539 = getelementptr inbounds %struct.Reg, %struct.Reg* %5538, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %5539 to i64*
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5541 = getelementptr inbounds %struct.GPR, %struct.GPR* %5540, i32 0, i32 5
  %5542 = getelementptr inbounds %struct.Reg, %struct.Reg* %5541, i32 0, i32 0
  %RCX.i1007 = bitcast %union.anon* %5542 to i64*
  %5543 = load i64, i64* %RCX.i1007
  %5544 = load i64, i64* %PC.i1006
  %5545 = add i64 %5544, 7
  store i64 %5545, i64* %PC.i1006
  %5546 = add i64 4792, %5543
  store i64 %5546, i64* %RCX.i1007, align 8
  %5547 = icmp ult i64 %5546, %5543
  %5548 = icmp ult i64 %5546, 4792
  %5549 = or i1 %5547, %5548
  %5550 = zext i1 %5549 to i8
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5550, i8* %5551, align 1
  %5552 = trunc i64 %5546 to i32
  %5553 = and i32 %5552, 255
  %5554 = call i32 @llvm.ctpop.i32(i32 %5553)
  %5555 = trunc i32 %5554 to i8
  %5556 = and i8 %5555, 1
  %5557 = xor i8 %5556, 1
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5557, i8* %5558, align 1
  %5559 = xor i64 4792, %5543
  %5560 = xor i64 %5559, %5546
  %5561 = lshr i64 %5560, 4
  %5562 = trunc i64 %5561 to i8
  %5563 = and i8 %5562, 1
  %5564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5563, i8* %5564, align 1
  %5565 = icmp eq i64 %5546, 0
  %5566 = zext i1 %5565 to i8
  %5567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5566, i8* %5567, align 1
  %5568 = lshr i64 %5546, 63
  %5569 = trunc i64 %5568 to i8
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5569, i8* %5570, align 1
  %5571 = lshr i64 %5543, 63
  %5572 = xor i64 %5568, %5571
  %5573 = add i64 %5572, %5568
  %5574 = icmp eq i64 %5573, 2
  %5575 = zext i1 %5574 to i8
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5575, i8* %5576, align 1
  store %struct.Memory* %loadMem_48cad1, %struct.Memory** %MEMORY
  %loadMem_48cad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5578 = getelementptr inbounds %struct.GPR, %struct.GPR* %5577, i32 0, i32 33
  %5579 = getelementptr inbounds %struct.Reg, %struct.Reg* %5578, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %5579 to i64*
  %5580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5581 = getelementptr inbounds %struct.GPR, %struct.GPR* %5580, i32 0, i32 7
  %5582 = getelementptr inbounds %struct.Reg, %struct.Reg* %5581, i32 0, i32 0
  %RDX.i1004 = bitcast %union.anon* %5582 to i64*
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5584 = getelementptr inbounds %struct.GPR, %struct.GPR* %5583, i32 0, i32 15
  %5585 = getelementptr inbounds %struct.Reg, %struct.Reg* %5584, i32 0, i32 0
  %RBP.i1005 = bitcast %union.anon* %5585 to i64*
  %5586 = load i64, i64* %RBP.i1005
  %5587 = sub i64 %5586, 36
  %5588 = load i64, i64* %PC.i1003
  %5589 = add i64 %5588, 4
  store i64 %5589, i64* %PC.i1003
  %5590 = inttoptr i64 %5587 to i32*
  %5591 = load i32, i32* %5590
  %5592 = sext i32 %5591 to i64
  store i64 %5592, i64* %RDX.i1004, align 8
  store %struct.Memory* %loadMem_48cad8, %struct.Memory** %MEMORY
  %loadMem_48cadc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5594 = getelementptr inbounds %struct.GPR, %struct.GPR* %5593, i32 0, i32 33
  %5595 = getelementptr inbounds %struct.Reg, %struct.Reg* %5594, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %5595 to i64*
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5597 = getelementptr inbounds %struct.GPR, %struct.GPR* %5596, i32 0, i32 7
  %5598 = getelementptr inbounds %struct.Reg, %struct.Reg* %5597, i32 0, i32 0
  %RDX.i1002 = bitcast %union.anon* %5598 to i64*
  %5599 = load i64, i64* %RDX.i1002
  %5600 = load i64, i64* %PC.i1001
  %5601 = add i64 %5600, 4
  store i64 %5601, i64* %PC.i1001
  %5602 = shl i64 %5599, 8
  %5603 = icmp slt i64 %5602, 0
  %5604 = shl i64 %5602, 1
  store i64 %5604, i64* %RDX.i1002, align 8
  %5605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5606 = zext i1 %5603 to i8
  store i8 %5606, i8* %5605, align 1
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5608 = trunc i64 %5604 to i32
  store i8 1, i8* %5607, align 1
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5609, align 1
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5611 = icmp eq i64 %5604, 0
  %5612 = zext i1 %5611 to i8
  store i8 %5612, i8* %5610, align 1
  %5613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5614 = lshr i64 %5604, 63
  %5615 = trunc i64 %5614 to i8
  store i8 %5615, i8* %5613, align 1
  %5616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5616, align 1
  store %struct.Memory* %loadMem_48cadc, %struct.Memory** %MEMORY
  %loadMem_48cae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5618 = getelementptr inbounds %struct.GPR, %struct.GPR* %5617, i32 0, i32 33
  %5619 = getelementptr inbounds %struct.Reg, %struct.Reg* %5618, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %5619 to i64*
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5621 = getelementptr inbounds %struct.GPR, %struct.GPR* %5620, i32 0, i32 5
  %5622 = getelementptr inbounds %struct.Reg, %struct.Reg* %5621, i32 0, i32 0
  %RCX.i999 = bitcast %union.anon* %5622 to i64*
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5624 = getelementptr inbounds %struct.GPR, %struct.GPR* %5623, i32 0, i32 7
  %5625 = getelementptr inbounds %struct.Reg, %struct.Reg* %5624, i32 0, i32 0
  %RDX.i1000 = bitcast %union.anon* %5625 to i64*
  %5626 = load i64, i64* %RCX.i999
  %5627 = load i64, i64* %RDX.i1000
  %5628 = load i64, i64* %PC.i998
  %5629 = add i64 %5628, 3
  store i64 %5629, i64* %PC.i998
  %5630 = add i64 %5627, %5626
  store i64 %5630, i64* %RCX.i999, align 8
  %5631 = icmp ult i64 %5630, %5626
  %5632 = icmp ult i64 %5630, %5627
  %5633 = or i1 %5631, %5632
  %5634 = zext i1 %5633 to i8
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5634, i8* %5635, align 1
  %5636 = trunc i64 %5630 to i32
  %5637 = and i32 %5636, 255
  %5638 = call i32 @llvm.ctpop.i32(i32 %5637)
  %5639 = trunc i32 %5638 to i8
  %5640 = and i8 %5639, 1
  %5641 = xor i8 %5640, 1
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5641, i8* %5642, align 1
  %5643 = xor i64 %5627, %5626
  %5644 = xor i64 %5643, %5630
  %5645 = lshr i64 %5644, 4
  %5646 = trunc i64 %5645 to i8
  %5647 = and i8 %5646, 1
  %5648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5647, i8* %5648, align 1
  %5649 = icmp eq i64 %5630, 0
  %5650 = zext i1 %5649 to i8
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5650, i8* %5651, align 1
  %5652 = lshr i64 %5630, 63
  %5653 = trunc i64 %5652 to i8
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5653, i8* %5654, align 1
  %5655 = lshr i64 %5626, 63
  %5656 = lshr i64 %5627, 63
  %5657 = xor i64 %5652, %5655
  %5658 = xor i64 %5652, %5656
  %5659 = add i64 %5657, %5658
  %5660 = icmp eq i64 %5659, 2
  %5661 = zext i1 %5660 to i8
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5661, i8* %5662, align 1
  store %struct.Memory* %loadMem_48cae0, %struct.Memory** %MEMORY
  %loadMem_48cae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5664 = getelementptr inbounds %struct.GPR, %struct.GPR* %5663, i32 0, i32 33
  %5665 = getelementptr inbounds %struct.Reg, %struct.Reg* %5664, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %5665 to i64*
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5667 = getelementptr inbounds %struct.GPR, %struct.GPR* %5666, i32 0, i32 7
  %5668 = getelementptr inbounds %struct.Reg, %struct.Reg* %5667, i32 0, i32 0
  %RDX.i996 = bitcast %union.anon* %5668 to i64*
  %5669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5670 = getelementptr inbounds %struct.GPR, %struct.GPR* %5669, i32 0, i32 15
  %5671 = getelementptr inbounds %struct.Reg, %struct.Reg* %5670, i32 0, i32 0
  %RBP.i997 = bitcast %union.anon* %5671 to i64*
  %5672 = load i64, i64* %RBP.i997
  %5673 = sub i64 %5672, 44
  %5674 = load i64, i64* %PC.i995
  %5675 = add i64 %5674, 4
  store i64 %5675, i64* %PC.i995
  %5676 = inttoptr i64 %5673 to i32*
  %5677 = load i32, i32* %5676
  %5678 = sext i32 %5677 to i64
  store i64 %5678, i64* %RDX.i996, align 8
  store %struct.Memory* %loadMem_48cae3, %struct.Memory** %MEMORY
  %loadMem_48cae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5680 = getelementptr inbounds %struct.GPR, %struct.GPR* %5679, i32 0, i32 33
  %5681 = getelementptr inbounds %struct.Reg, %struct.Reg* %5680, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %5681 to i64*
  %5682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5683 = getelementptr inbounds %struct.GPR, %struct.GPR* %5682, i32 0, i32 7
  %5684 = getelementptr inbounds %struct.Reg, %struct.Reg* %5683, i32 0, i32 0
  %RDX.i994 = bitcast %union.anon* %5684 to i64*
  %5685 = load i64, i64* %RDX.i994
  %5686 = load i64, i64* %PC.i993
  %5687 = add i64 %5686, 4
  store i64 %5687, i64* %PC.i993
  %5688 = shl i64 %5685, 4
  %5689 = icmp slt i64 %5688, 0
  %5690 = shl i64 %5688, 1
  store i64 %5690, i64* %RDX.i994, align 8
  %5691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5692 = zext i1 %5689 to i8
  store i8 %5692, i8* %5691, align 1
  %5693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5694 = trunc i64 %5690 to i32
  %5695 = and i32 %5694, 254
  %5696 = call i32 @llvm.ctpop.i32(i32 %5695)
  %5697 = trunc i32 %5696 to i8
  %5698 = and i8 %5697, 1
  %5699 = xor i8 %5698, 1
  store i8 %5699, i8* %5693, align 1
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5700, align 1
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5702 = icmp eq i64 %5690, 0
  %5703 = zext i1 %5702 to i8
  store i8 %5703, i8* %5701, align 1
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5705 = lshr i64 %5690, 63
  %5706 = trunc i64 %5705 to i8
  store i8 %5706, i8* %5704, align 1
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5707, align 1
  store %struct.Memory* %loadMem_48cae7, %struct.Memory** %MEMORY
  %loadMem_48caeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5709 = getelementptr inbounds %struct.GPR, %struct.GPR* %5708, i32 0, i32 33
  %5710 = getelementptr inbounds %struct.Reg, %struct.Reg* %5709, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %5710 to i64*
  %5711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5712 = getelementptr inbounds %struct.GPR, %struct.GPR* %5711, i32 0, i32 5
  %5713 = getelementptr inbounds %struct.Reg, %struct.Reg* %5712, i32 0, i32 0
  %RCX.i991 = bitcast %union.anon* %5713 to i64*
  %5714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5715 = getelementptr inbounds %struct.GPR, %struct.GPR* %5714, i32 0, i32 7
  %5716 = getelementptr inbounds %struct.Reg, %struct.Reg* %5715, i32 0, i32 0
  %RDX.i992 = bitcast %union.anon* %5716 to i64*
  %5717 = load i64, i64* %RCX.i991
  %5718 = load i64, i64* %RDX.i992
  %5719 = load i64, i64* %PC.i990
  %5720 = add i64 %5719, 3
  store i64 %5720, i64* %PC.i990
  %5721 = add i64 %5718, %5717
  store i64 %5721, i64* %RCX.i991, align 8
  %5722 = icmp ult i64 %5721, %5717
  %5723 = icmp ult i64 %5721, %5718
  %5724 = or i1 %5722, %5723
  %5725 = zext i1 %5724 to i8
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5725, i8* %5726, align 1
  %5727 = trunc i64 %5721 to i32
  %5728 = and i32 %5727, 255
  %5729 = call i32 @llvm.ctpop.i32(i32 %5728)
  %5730 = trunc i32 %5729 to i8
  %5731 = and i8 %5730, 1
  %5732 = xor i8 %5731, 1
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5732, i8* %5733, align 1
  %5734 = xor i64 %5718, %5717
  %5735 = xor i64 %5734, %5721
  %5736 = lshr i64 %5735, 4
  %5737 = trunc i64 %5736 to i8
  %5738 = and i8 %5737, 1
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5738, i8* %5739, align 1
  %5740 = icmp eq i64 %5721, 0
  %5741 = zext i1 %5740 to i8
  %5742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5741, i8* %5742, align 1
  %5743 = lshr i64 %5721, 63
  %5744 = trunc i64 %5743 to i8
  %5745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5744, i8* %5745, align 1
  %5746 = lshr i64 %5717, 63
  %5747 = lshr i64 %5718, 63
  %5748 = xor i64 %5743, %5746
  %5749 = xor i64 %5743, %5747
  %5750 = add i64 %5748, %5749
  %5751 = icmp eq i64 %5750, 2
  %5752 = zext i1 %5751 to i8
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5752, i8* %5753, align 1
  store %struct.Memory* %loadMem_48caeb, %struct.Memory** %MEMORY
  %loadMem_48caee = load %struct.Memory*, %struct.Memory** %MEMORY
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5755 = getelementptr inbounds %struct.GPR, %struct.GPR* %5754, i32 0, i32 33
  %5756 = getelementptr inbounds %struct.Reg, %struct.Reg* %5755, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %5756 to i64*
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5758 = getelementptr inbounds %struct.GPR, %struct.GPR* %5757, i32 0, i32 7
  %5759 = getelementptr inbounds %struct.Reg, %struct.Reg* %5758, i32 0, i32 0
  %RDX.i988 = bitcast %union.anon* %5759 to i64*
  %5760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5761 = getelementptr inbounds %struct.GPR, %struct.GPR* %5760, i32 0, i32 15
  %5762 = getelementptr inbounds %struct.Reg, %struct.Reg* %5761, i32 0, i32 0
  %RBP.i989 = bitcast %union.anon* %5762 to i64*
  %5763 = load i64, i64* %RBP.i989
  %5764 = sub i64 %5763, 40
  %5765 = load i64, i64* %PC.i987
  %5766 = add i64 %5765, 4
  store i64 %5766, i64* %PC.i987
  %5767 = inttoptr i64 %5764 to i32*
  %5768 = load i32, i32* %5767
  %5769 = sext i32 %5768 to i64
  store i64 %5769, i64* %RDX.i988, align 8
  store %struct.Memory* %loadMem_48caee, %struct.Memory** %MEMORY
  %loadMem_48caf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5771 = getelementptr inbounds %struct.GPR, %struct.GPR* %5770, i32 0, i32 33
  %5772 = getelementptr inbounds %struct.Reg, %struct.Reg* %5771, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %5772 to i64*
  %5773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5774 = getelementptr inbounds %struct.GPR, %struct.GPR* %5773, i32 0, i32 5
  %5775 = getelementptr inbounds %struct.Reg, %struct.Reg* %5774, i32 0, i32 0
  %RCX.i984 = bitcast %union.anon* %5775 to i64*
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5777 = getelementptr inbounds %struct.GPR, %struct.GPR* %5776, i32 0, i32 7
  %5778 = getelementptr inbounds %struct.Reg, %struct.Reg* %5777, i32 0, i32 0
  %RDX.i985 = bitcast %union.anon* %5778 to i64*
  %5779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5780 = getelementptr inbounds %struct.GPR, %struct.GPR* %5779, i32 0, i32 9
  %5781 = getelementptr inbounds %struct.Reg, %struct.Reg* %5780, i32 0, i32 0
  %RSI.i986 = bitcast %union.anon* %5781 to i64*
  %5782 = load i64, i64* %RCX.i984
  %5783 = load i64, i64* %RDX.i985
  %5784 = mul i64 %5783, 2
  %5785 = add i64 %5784, %5782
  %5786 = load i64, i64* %PC.i983
  %5787 = add i64 %5786, 4
  store i64 %5787, i64* %PC.i983
  %5788 = inttoptr i64 %5785 to i16*
  %5789 = load i16, i16* %5788
  %5790 = zext i16 %5789 to i64
  store i64 %5790, i64* %RSI.i986, align 8
  store %struct.Memory* %loadMem_48caf2, %struct.Memory** %MEMORY
  %loadMem_48caf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5792 = getelementptr inbounds %struct.GPR, %struct.GPR* %5791, i32 0, i32 33
  %5793 = getelementptr inbounds %struct.Reg, %struct.Reg* %5792, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %5793 to i64*
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5795 = getelementptr inbounds %struct.GPR, %struct.GPR* %5794, i32 0, i32 5
  %5796 = getelementptr inbounds %struct.Reg, %struct.Reg* %5795, i32 0, i32 0
  %RCX.i981 = bitcast %union.anon* %5796 to i64*
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5798 = getelementptr inbounds %struct.GPR, %struct.GPR* %5797, i32 0, i32 15
  %5799 = getelementptr inbounds %struct.Reg, %struct.Reg* %5798, i32 0, i32 0
  %RBP.i982 = bitcast %union.anon* %5799 to i64*
  %5800 = load i64, i64* %RBP.i982
  %5801 = sub i64 %5800, 44
  %5802 = load i64, i64* %PC.i980
  %5803 = add i64 %5802, 4
  store i64 %5803, i64* %PC.i980
  %5804 = inttoptr i64 %5801 to i32*
  %5805 = load i32, i32* %5804
  %5806 = sext i32 %5805 to i64
  store i64 %5806, i64* %RCX.i981, align 8
  store %struct.Memory* %loadMem_48caf6, %struct.Memory** %MEMORY
  %loadMem_48cafa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5808 = getelementptr inbounds %struct.GPR, %struct.GPR* %5807, i32 0, i32 33
  %5809 = getelementptr inbounds %struct.Reg, %struct.Reg* %5808, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %5809 to i64*
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5811 = getelementptr inbounds %struct.GPR, %struct.GPR* %5810, i32 0, i32 5
  %5812 = getelementptr inbounds %struct.Reg, %struct.Reg* %5811, i32 0, i32 0
  %RCX.i979 = bitcast %union.anon* %5812 to i64*
  %5813 = load i64, i64* %RCX.i979
  %5814 = load i64, i64* %PC.i978
  %5815 = add i64 %5814, 4
  store i64 %5815, i64* %PC.i978
  %5816 = shl i64 %5813, 5
  %5817 = icmp slt i64 %5816, 0
  %5818 = shl i64 %5816, 1
  store i64 %5818, i64* %RCX.i979, align 8
  %5819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5820 = zext i1 %5817 to i8
  store i8 %5820, i8* %5819, align 1
  %5821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5822 = trunc i64 %5818 to i32
  %5823 = and i32 %5822, 254
  %5824 = call i32 @llvm.ctpop.i32(i32 %5823)
  %5825 = trunc i32 %5824 to i8
  %5826 = and i8 %5825, 1
  %5827 = xor i8 %5826, 1
  store i8 %5827, i8* %5821, align 1
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5828, align 1
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5830 = icmp eq i64 %5818, 0
  %5831 = zext i1 %5830 to i8
  store i8 %5831, i8* %5829, align 1
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5833 = lshr i64 %5818, 63
  %5834 = trunc i64 %5833 to i8
  store i8 %5834, i8* %5832, align 1
  %5835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5835, align 1
  store %struct.Memory* %loadMem_48cafa, %struct.Memory** %MEMORY
  %loadMem_48cafe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5837 = getelementptr inbounds %struct.GPR, %struct.GPR* %5836, i32 0, i32 33
  %5838 = getelementptr inbounds %struct.Reg, %struct.Reg* %5837, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %5838 to i64*
  %5839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5840 = getelementptr inbounds %struct.GPR, %struct.GPR* %5839, i32 0, i32 1
  %5841 = getelementptr inbounds %struct.Reg, %struct.Reg* %5840, i32 0, i32 0
  %RAX.i976 = bitcast %union.anon* %5841 to i64*
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5843 = getelementptr inbounds %struct.GPR, %struct.GPR* %5842, i32 0, i32 5
  %5844 = getelementptr inbounds %struct.Reg, %struct.Reg* %5843, i32 0, i32 0
  %RCX.i977 = bitcast %union.anon* %5844 to i64*
  %5845 = load i64, i64* %RAX.i976
  %5846 = load i64, i64* %RCX.i977
  %5847 = load i64, i64* %PC.i975
  %5848 = add i64 %5847, 3
  store i64 %5848, i64* %PC.i975
  %5849 = add i64 %5846, %5845
  store i64 %5849, i64* %RAX.i976, align 8
  %5850 = icmp ult i64 %5849, %5845
  %5851 = icmp ult i64 %5849, %5846
  %5852 = or i1 %5850, %5851
  %5853 = zext i1 %5852 to i8
  %5854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5853, i8* %5854, align 1
  %5855 = trunc i64 %5849 to i32
  %5856 = and i32 %5855, 255
  %5857 = call i32 @llvm.ctpop.i32(i32 %5856)
  %5858 = trunc i32 %5857 to i8
  %5859 = and i8 %5858, 1
  %5860 = xor i8 %5859, 1
  %5861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5860, i8* %5861, align 1
  %5862 = xor i64 %5846, %5845
  %5863 = xor i64 %5862, %5849
  %5864 = lshr i64 %5863, 4
  %5865 = trunc i64 %5864 to i8
  %5866 = and i8 %5865, 1
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5866, i8* %5867, align 1
  %5868 = icmp eq i64 %5849, 0
  %5869 = zext i1 %5868 to i8
  %5870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5869, i8* %5870, align 1
  %5871 = lshr i64 %5849, 63
  %5872 = trunc i64 %5871 to i8
  %5873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5872, i8* %5873, align 1
  %5874 = lshr i64 %5845, 63
  %5875 = lshr i64 %5846, 63
  %5876 = xor i64 %5871, %5874
  %5877 = xor i64 %5871, %5875
  %5878 = add i64 %5876, %5877
  %5879 = icmp eq i64 %5878, 2
  %5880 = zext i1 %5879 to i8
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5880, i8* %5881, align 1
  store %struct.Memory* %loadMem_48cafe, %struct.Memory** %MEMORY
  %loadMem_48cb01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5883 = getelementptr inbounds %struct.GPR, %struct.GPR* %5882, i32 0, i32 33
  %5884 = getelementptr inbounds %struct.Reg, %struct.Reg* %5883, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %5884 to i64*
  %5885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5886 = getelementptr inbounds %struct.GPR, %struct.GPR* %5885, i32 0, i32 5
  %5887 = getelementptr inbounds %struct.Reg, %struct.Reg* %5886, i32 0, i32 0
  %RCX.i973 = bitcast %union.anon* %5887 to i64*
  %5888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5889 = getelementptr inbounds %struct.GPR, %struct.GPR* %5888, i32 0, i32 15
  %5890 = getelementptr inbounds %struct.Reg, %struct.Reg* %5889, i32 0, i32 0
  %RBP.i974 = bitcast %union.anon* %5890 to i64*
  %5891 = load i64, i64* %RBP.i974
  %5892 = sub i64 %5891, 40
  %5893 = load i64, i64* %PC.i972
  %5894 = add i64 %5893, 4
  store i64 %5894, i64* %PC.i972
  %5895 = inttoptr i64 %5892 to i32*
  %5896 = load i32, i32* %5895
  %5897 = sext i32 %5896 to i64
  store i64 %5897, i64* %RCX.i973, align 8
  store %struct.Memory* %loadMem_48cb01, %struct.Memory** %MEMORY
  %loadMem_48cb05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5899 = getelementptr inbounds %struct.GPR, %struct.GPR* %5898, i32 0, i32 33
  %5900 = getelementptr inbounds %struct.Reg, %struct.Reg* %5899, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %5900 to i64*
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5902 = getelementptr inbounds %struct.GPR, %struct.GPR* %5901, i32 0, i32 9
  %5903 = getelementptr inbounds %struct.Reg, %struct.Reg* %5902, i32 0, i32 0
  %ESI.i969 = bitcast %union.anon* %5903 to i32*
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5905 = getelementptr inbounds %struct.GPR, %struct.GPR* %5904, i32 0, i32 1
  %5906 = getelementptr inbounds %struct.Reg, %struct.Reg* %5905, i32 0, i32 0
  %RAX.i970 = bitcast %union.anon* %5906 to i64*
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5908 = getelementptr inbounds %struct.GPR, %struct.GPR* %5907, i32 0, i32 5
  %5909 = getelementptr inbounds %struct.Reg, %struct.Reg* %5908, i32 0, i32 0
  %RCX.i971 = bitcast %union.anon* %5909 to i64*
  %5910 = load i64, i64* %RAX.i970
  %5911 = load i64, i64* %RCX.i971
  %5912 = mul i64 %5911, 4
  %5913 = add i64 %5912, %5910
  %5914 = load i32, i32* %ESI.i969
  %5915 = zext i32 %5914 to i64
  %5916 = load i64, i64* %PC.i968
  %5917 = add i64 %5916, 3
  store i64 %5917, i64* %PC.i968
  %5918 = inttoptr i64 %5913 to i32*
  store i32 %5914, i32* %5918
  store %struct.Memory* %loadMem_48cb05, %struct.Memory** %MEMORY
  %loadMem_48cb08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5920 = getelementptr inbounds %struct.GPR, %struct.GPR* %5919, i32 0, i32 33
  %5921 = getelementptr inbounds %struct.Reg, %struct.Reg* %5920, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %5921 to i64*
  %5922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5923 = getelementptr inbounds %struct.GPR, %struct.GPR* %5922, i32 0, i32 1
  %5924 = getelementptr inbounds %struct.Reg, %struct.Reg* %5923, i32 0, i32 0
  %RAX.i966 = bitcast %union.anon* %5924 to i64*
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5926 = getelementptr inbounds %struct.GPR, %struct.GPR* %5925, i32 0, i32 15
  %5927 = getelementptr inbounds %struct.Reg, %struct.Reg* %5926, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %5927 to i64*
  %5928 = load i64, i64* %RBP.i967
  %5929 = sub i64 %5928, 44
  %5930 = load i64, i64* %PC.i965
  %5931 = add i64 %5930, 3
  store i64 %5931, i64* %PC.i965
  %5932 = inttoptr i64 %5929 to i32*
  %5933 = load i32, i32* %5932
  %5934 = zext i32 %5933 to i64
  store i64 %5934, i64* %RAX.i966, align 8
  store %struct.Memory* %loadMem_48cb08, %struct.Memory** %MEMORY
  %loadMem_48cb0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5936 = getelementptr inbounds %struct.GPR, %struct.GPR* %5935, i32 0, i32 33
  %5937 = getelementptr inbounds %struct.Reg, %struct.Reg* %5936, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %5937 to i64*
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5939 = getelementptr inbounds %struct.GPR, %struct.GPR* %5938, i32 0, i32 1
  %5940 = getelementptr inbounds %struct.Reg, %struct.Reg* %5939, i32 0, i32 0
  %RAX.i964 = bitcast %union.anon* %5940 to i64*
  %5941 = load i64, i64* %RAX.i964
  %5942 = load i64, i64* %PC.i963
  %5943 = add i64 %5942, 3
  store i64 %5943, i64* %PC.i963
  %5944 = trunc i64 %5941 to i32
  %5945 = add i32 1, %5944
  %5946 = zext i32 %5945 to i64
  store i64 %5946, i64* %RAX.i964, align 8
  %5947 = icmp ult i32 %5945, %5944
  %5948 = icmp ult i32 %5945, 1
  %5949 = or i1 %5947, %5948
  %5950 = zext i1 %5949 to i8
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5950, i8* %5951, align 1
  %5952 = and i32 %5945, 255
  %5953 = call i32 @llvm.ctpop.i32(i32 %5952)
  %5954 = trunc i32 %5953 to i8
  %5955 = and i8 %5954, 1
  %5956 = xor i8 %5955, 1
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5956, i8* %5957, align 1
  %5958 = xor i64 1, %5941
  %5959 = trunc i64 %5958 to i32
  %5960 = xor i32 %5959, %5945
  %5961 = lshr i32 %5960, 4
  %5962 = trunc i32 %5961 to i8
  %5963 = and i8 %5962, 1
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5963, i8* %5964, align 1
  %5965 = icmp eq i32 %5945, 0
  %5966 = zext i1 %5965 to i8
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5966, i8* %5967, align 1
  %5968 = lshr i32 %5945, 31
  %5969 = trunc i32 %5968 to i8
  %5970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5969, i8* %5970, align 1
  %5971 = lshr i32 %5944, 31
  %5972 = xor i32 %5968, %5971
  %5973 = add i32 %5972, %5968
  %5974 = icmp eq i32 %5973, 2
  %5975 = zext i1 %5974 to i8
  %5976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5975, i8* %5976, align 1
  store %struct.Memory* %loadMem_48cb0b, %struct.Memory** %MEMORY
  %loadMem_48cb0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5978 = getelementptr inbounds %struct.GPR, %struct.GPR* %5977, i32 0, i32 33
  %5979 = getelementptr inbounds %struct.Reg, %struct.Reg* %5978, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %5979 to i64*
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5981 = getelementptr inbounds %struct.GPR, %struct.GPR* %5980, i32 0, i32 1
  %5982 = getelementptr inbounds %struct.Reg, %struct.Reg* %5981, i32 0, i32 0
  %EAX.i961 = bitcast %union.anon* %5982 to i32*
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5984 = getelementptr inbounds %struct.GPR, %struct.GPR* %5983, i32 0, i32 15
  %5985 = getelementptr inbounds %struct.Reg, %struct.Reg* %5984, i32 0, i32 0
  %RBP.i962 = bitcast %union.anon* %5985 to i64*
  %5986 = load i64, i64* %RBP.i962
  %5987 = sub i64 %5986, 44
  %5988 = load i32, i32* %EAX.i961
  %5989 = zext i32 %5988 to i64
  %5990 = load i64, i64* %PC.i960
  %5991 = add i64 %5990, 3
  store i64 %5991, i64* %PC.i960
  %5992 = inttoptr i64 %5987 to i32*
  store i32 %5988, i32* %5992
  store %struct.Memory* %loadMem_48cb0e, %struct.Memory** %MEMORY
  %loadMem_48cb11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5994 = getelementptr inbounds %struct.GPR, %struct.GPR* %5993, i32 0, i32 33
  %5995 = getelementptr inbounds %struct.Reg, %struct.Reg* %5994, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %5995 to i64*
  %5996 = load i64, i64* %PC.i959
  %5997 = add i64 %5996, -92
  %5998 = load i64, i64* %PC.i959
  %5999 = add i64 %5998, 5
  store i64 %5999, i64* %PC.i959
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5997, i64* %6000, align 8
  store %struct.Memory* %loadMem_48cb11, %struct.Memory** %MEMORY
  br label %block_.L_48cab5

block_.L_48cb16:                                  ; preds = %block_.L_48cab5
  %loadMem_48cb16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6002 = getelementptr inbounds %struct.GPR, %struct.GPR* %6001, i32 0, i32 33
  %6003 = getelementptr inbounds %struct.Reg, %struct.Reg* %6002, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %6003 to i64*
  %6004 = load i64, i64* %PC.i958
  %6005 = add i64 %6004, 5
  %6006 = load i64, i64* %PC.i958
  %6007 = add i64 %6006, 5
  store i64 %6007, i64* %PC.i958
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6005, i64* %6008, align 8
  store %struct.Memory* %loadMem_48cb16, %struct.Memory** %MEMORY
  br label %block_.L_48cb1b

block_.L_48cb1b:                                  ; preds = %block_.L_48cb16
  %loadMem_48cb1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6010 = getelementptr inbounds %struct.GPR, %struct.GPR* %6009, i32 0, i32 33
  %6011 = getelementptr inbounds %struct.Reg, %struct.Reg* %6010, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %6011 to i64*
  %6012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6013 = getelementptr inbounds %struct.GPR, %struct.GPR* %6012, i32 0, i32 1
  %6014 = getelementptr inbounds %struct.Reg, %struct.Reg* %6013, i32 0, i32 0
  %RAX.i956 = bitcast %union.anon* %6014 to i64*
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6016 = getelementptr inbounds %struct.GPR, %struct.GPR* %6015, i32 0, i32 15
  %6017 = getelementptr inbounds %struct.Reg, %struct.Reg* %6016, i32 0, i32 0
  %RBP.i957 = bitcast %union.anon* %6017 to i64*
  %6018 = load i64, i64* %RBP.i957
  %6019 = sub i64 %6018, 40
  %6020 = load i64, i64* %PC.i955
  %6021 = add i64 %6020, 3
  store i64 %6021, i64* %PC.i955
  %6022 = inttoptr i64 %6019 to i32*
  %6023 = load i32, i32* %6022
  %6024 = zext i32 %6023 to i64
  store i64 %6024, i64* %RAX.i956, align 8
  store %struct.Memory* %loadMem_48cb1b, %struct.Memory** %MEMORY
  %loadMem_48cb1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6026 = getelementptr inbounds %struct.GPR, %struct.GPR* %6025, i32 0, i32 33
  %6027 = getelementptr inbounds %struct.Reg, %struct.Reg* %6026, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %6027 to i64*
  %6028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6029 = getelementptr inbounds %struct.GPR, %struct.GPR* %6028, i32 0, i32 1
  %6030 = getelementptr inbounds %struct.Reg, %struct.Reg* %6029, i32 0, i32 0
  %RAX.i954 = bitcast %union.anon* %6030 to i64*
  %6031 = load i64, i64* %RAX.i954
  %6032 = load i64, i64* %PC.i953
  %6033 = add i64 %6032, 3
  store i64 %6033, i64* %PC.i953
  %6034 = trunc i64 %6031 to i32
  %6035 = add i32 1, %6034
  %6036 = zext i32 %6035 to i64
  store i64 %6036, i64* %RAX.i954, align 8
  %6037 = icmp ult i32 %6035, %6034
  %6038 = icmp ult i32 %6035, 1
  %6039 = or i1 %6037, %6038
  %6040 = zext i1 %6039 to i8
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6040, i8* %6041, align 1
  %6042 = and i32 %6035, 255
  %6043 = call i32 @llvm.ctpop.i32(i32 %6042)
  %6044 = trunc i32 %6043 to i8
  %6045 = and i8 %6044, 1
  %6046 = xor i8 %6045, 1
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6046, i8* %6047, align 1
  %6048 = xor i64 1, %6031
  %6049 = trunc i64 %6048 to i32
  %6050 = xor i32 %6049, %6035
  %6051 = lshr i32 %6050, 4
  %6052 = trunc i32 %6051 to i8
  %6053 = and i8 %6052, 1
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6053, i8* %6054, align 1
  %6055 = icmp eq i32 %6035, 0
  %6056 = zext i1 %6055 to i8
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6056, i8* %6057, align 1
  %6058 = lshr i32 %6035, 31
  %6059 = trunc i32 %6058 to i8
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6059, i8* %6060, align 1
  %6061 = lshr i32 %6034, 31
  %6062 = xor i32 %6058, %6061
  %6063 = add i32 %6062, %6058
  %6064 = icmp eq i32 %6063, 2
  %6065 = zext i1 %6064 to i8
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6065, i8* %6066, align 1
  store %struct.Memory* %loadMem_48cb1e, %struct.Memory** %MEMORY
  %loadMem_48cb21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6068 = getelementptr inbounds %struct.GPR, %struct.GPR* %6067, i32 0, i32 33
  %6069 = getelementptr inbounds %struct.Reg, %struct.Reg* %6068, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %6069 to i64*
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6071 = getelementptr inbounds %struct.GPR, %struct.GPR* %6070, i32 0, i32 1
  %6072 = getelementptr inbounds %struct.Reg, %struct.Reg* %6071, i32 0, i32 0
  %EAX.i951 = bitcast %union.anon* %6072 to i32*
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6074 = getelementptr inbounds %struct.GPR, %struct.GPR* %6073, i32 0, i32 15
  %6075 = getelementptr inbounds %struct.Reg, %struct.Reg* %6074, i32 0, i32 0
  %RBP.i952 = bitcast %union.anon* %6075 to i64*
  %6076 = load i64, i64* %RBP.i952
  %6077 = sub i64 %6076, 40
  %6078 = load i32, i32* %EAX.i951
  %6079 = zext i32 %6078 to i64
  %6080 = load i64, i64* %PC.i950
  %6081 = add i64 %6080, 3
  store i64 %6081, i64* %PC.i950
  %6082 = inttoptr i64 %6077 to i32*
  store i32 %6078, i32* %6082
  store %struct.Memory* %loadMem_48cb21, %struct.Memory** %MEMORY
  %loadMem_48cb24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6084 = getelementptr inbounds %struct.GPR, %struct.GPR* %6083, i32 0, i32 33
  %6085 = getelementptr inbounds %struct.Reg, %struct.Reg* %6084, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %6085 to i64*
  %6086 = load i64, i64* %PC.i949
  %6087 = add i64 %6086, -128
  %6088 = load i64, i64* %PC.i949
  %6089 = add i64 %6088, 5
  store i64 %6089, i64* %PC.i949
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6087, i64* %6090, align 8
  store %struct.Memory* %loadMem_48cb24, %struct.Memory** %MEMORY
  br label %block_.L_48caa4

block_.L_48cb29:                                  ; preds = %block_.L_48caa4
  %loadMem_48cb29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6092 = getelementptr inbounds %struct.GPR, %struct.GPR* %6091, i32 0, i32 33
  %6093 = getelementptr inbounds %struct.Reg, %struct.Reg* %6092, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %6093 to i64*
  %6094 = load i64, i64* %PC.i948
  %6095 = add i64 %6094, 139
  %6096 = load i64, i64* %PC.i948
  %6097 = add i64 %6096, 5
  store i64 %6097, i64* %PC.i948
  %6098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6095, i64* %6098, align 8
  store %struct.Memory* %loadMem_48cb29, %struct.Memory** %MEMORY
  br label %block_.L_48cbb4

block_.L_48cb2e:                                  ; preds = %block_.L_48ca93
  %loadMem_48cb2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6100 = getelementptr inbounds %struct.GPR, %struct.GPR* %6099, i32 0, i32 33
  %6101 = getelementptr inbounds %struct.Reg, %struct.Reg* %6100, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %6101 to i64*
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6103 = getelementptr inbounds %struct.GPR, %struct.GPR* %6102, i32 0, i32 15
  %6104 = getelementptr inbounds %struct.Reg, %struct.Reg* %6103, i32 0, i32 0
  %RBP.i947 = bitcast %union.anon* %6104 to i64*
  %6105 = load i64, i64* %RBP.i947
  %6106 = sub i64 %6105, 40
  %6107 = load i64, i64* %PC.i946
  %6108 = add i64 %6107, 7
  store i64 %6108, i64* %PC.i946
  %6109 = inttoptr i64 %6106 to i32*
  store i32 0, i32* %6109
  store %struct.Memory* %loadMem_48cb2e, %struct.Memory** %MEMORY
  br label %block_.L_48cb35

block_.L_48cb35:                                  ; preds = %block_.L_48cba1, %block_.L_48cb2e
  %loadMem_48cb35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6111 = getelementptr inbounds %struct.GPR, %struct.GPR* %6110, i32 0, i32 33
  %6112 = getelementptr inbounds %struct.Reg, %struct.Reg* %6111, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %6112 to i64*
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6114 = getelementptr inbounds %struct.GPR, %struct.GPR* %6113, i32 0, i32 15
  %6115 = getelementptr inbounds %struct.Reg, %struct.Reg* %6114, i32 0, i32 0
  %RBP.i945 = bitcast %union.anon* %6115 to i64*
  %6116 = load i64, i64* %RBP.i945
  %6117 = sub i64 %6116, 40
  %6118 = load i64, i64* %PC.i944
  %6119 = add i64 %6118, 4
  store i64 %6119, i64* %PC.i944
  %6120 = inttoptr i64 %6117 to i32*
  %6121 = load i32, i32* %6120
  %6122 = sub i32 %6121, 16
  %6123 = icmp ult i32 %6121, 16
  %6124 = zext i1 %6123 to i8
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6124, i8* %6125, align 1
  %6126 = and i32 %6122, 255
  %6127 = call i32 @llvm.ctpop.i32(i32 %6126)
  %6128 = trunc i32 %6127 to i8
  %6129 = and i8 %6128, 1
  %6130 = xor i8 %6129, 1
  %6131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6130, i8* %6131, align 1
  %6132 = xor i32 %6121, 16
  %6133 = xor i32 %6132, %6122
  %6134 = lshr i32 %6133, 4
  %6135 = trunc i32 %6134 to i8
  %6136 = and i8 %6135, 1
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6136, i8* %6137, align 1
  %6138 = icmp eq i32 %6122, 0
  %6139 = zext i1 %6138 to i8
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6139, i8* %6140, align 1
  %6141 = lshr i32 %6122, 31
  %6142 = trunc i32 %6141 to i8
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6142, i8* %6143, align 1
  %6144 = lshr i32 %6121, 31
  %6145 = xor i32 %6141, %6144
  %6146 = add i32 %6145, %6144
  %6147 = icmp eq i32 %6146, 2
  %6148 = zext i1 %6147 to i8
  %6149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6148, i8* %6149, align 1
  store %struct.Memory* %loadMem_48cb35, %struct.Memory** %MEMORY
  %loadMem_48cb39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6151 = getelementptr inbounds %struct.GPR, %struct.GPR* %6150, i32 0, i32 33
  %6152 = getelementptr inbounds %struct.Reg, %struct.Reg* %6151, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %6152 to i64*
  %6153 = load i64, i64* %PC.i943
  %6154 = add i64 %6153, 118
  %6155 = load i64, i64* %PC.i943
  %6156 = add i64 %6155, 6
  %6157 = load i64, i64* %PC.i943
  %6158 = add i64 %6157, 6
  store i64 %6158, i64* %PC.i943
  %6159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6160 = load i8, i8* %6159, align 1
  %6161 = icmp ne i8 %6160, 0
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6163 = load i8, i8* %6162, align 1
  %6164 = icmp ne i8 %6163, 0
  %6165 = xor i1 %6161, %6164
  %6166 = xor i1 %6165, true
  %6167 = zext i1 %6166 to i8
  store i8 %6167, i8* %BRANCH_TAKEN, align 1
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6169 = select i1 %6165, i64 %6156, i64 %6154
  store i64 %6169, i64* %6168, align 8
  store %struct.Memory* %loadMem_48cb39, %struct.Memory** %MEMORY
  %loadBr_48cb39 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cb39 = icmp eq i8 %loadBr_48cb39, 1
  br i1 %cmpBr_48cb39, label %block_.L_48cbaf, label %block_48cb3f

block_48cb3f:                                     ; preds = %block_.L_48cb35
  %loadMem_48cb3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6171 = getelementptr inbounds %struct.GPR, %struct.GPR* %6170, i32 0, i32 33
  %6172 = getelementptr inbounds %struct.Reg, %struct.Reg* %6171, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %6172 to i64*
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6174 = getelementptr inbounds %struct.GPR, %struct.GPR* %6173, i32 0, i32 15
  %6175 = getelementptr inbounds %struct.Reg, %struct.Reg* %6174, i32 0, i32 0
  %RBP.i942 = bitcast %union.anon* %6175 to i64*
  %6176 = load i64, i64* %RBP.i942
  %6177 = sub i64 %6176, 44
  %6178 = load i64, i64* %PC.i941
  %6179 = add i64 %6178, 7
  store i64 %6179, i64* %PC.i941
  %6180 = inttoptr i64 %6177 to i32*
  store i32 0, i32* %6180
  store %struct.Memory* %loadMem_48cb3f, %struct.Memory** %MEMORY
  br label %block_.L_48cb46

block_.L_48cb46:                                  ; preds = %block_48cb50, %block_48cb3f
  %loadMem_48cb46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6182 = getelementptr inbounds %struct.GPR, %struct.GPR* %6181, i32 0, i32 33
  %6183 = getelementptr inbounds %struct.Reg, %struct.Reg* %6182, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %6183 to i64*
  %6184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6185 = getelementptr inbounds %struct.GPR, %struct.GPR* %6184, i32 0, i32 15
  %6186 = getelementptr inbounds %struct.Reg, %struct.Reg* %6185, i32 0, i32 0
  %RBP.i940 = bitcast %union.anon* %6186 to i64*
  %6187 = load i64, i64* %RBP.i940
  %6188 = sub i64 %6187, 44
  %6189 = load i64, i64* %PC.i939
  %6190 = add i64 %6189, 4
  store i64 %6190, i64* %PC.i939
  %6191 = inttoptr i64 %6188 to i32*
  %6192 = load i32, i32* %6191
  %6193 = sub i32 %6192, 16
  %6194 = icmp ult i32 %6192, 16
  %6195 = zext i1 %6194 to i8
  %6196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6195, i8* %6196, align 1
  %6197 = and i32 %6193, 255
  %6198 = call i32 @llvm.ctpop.i32(i32 %6197)
  %6199 = trunc i32 %6198 to i8
  %6200 = and i8 %6199, 1
  %6201 = xor i8 %6200, 1
  %6202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6201, i8* %6202, align 1
  %6203 = xor i32 %6192, 16
  %6204 = xor i32 %6203, %6193
  %6205 = lshr i32 %6204, 4
  %6206 = trunc i32 %6205 to i8
  %6207 = and i8 %6206, 1
  %6208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6207, i8* %6208, align 1
  %6209 = icmp eq i32 %6193, 0
  %6210 = zext i1 %6209 to i8
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6210, i8* %6211, align 1
  %6212 = lshr i32 %6193, 31
  %6213 = trunc i32 %6212 to i8
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6213, i8* %6214, align 1
  %6215 = lshr i32 %6192, 31
  %6216 = xor i32 %6212, %6215
  %6217 = add i32 %6216, %6215
  %6218 = icmp eq i32 %6217, 2
  %6219 = zext i1 %6218 to i8
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6219, i8* %6220, align 1
  store %struct.Memory* %loadMem_48cb46, %struct.Memory** %MEMORY
  %loadMem_48cb4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6222 = getelementptr inbounds %struct.GPR, %struct.GPR* %6221, i32 0, i32 33
  %6223 = getelementptr inbounds %struct.Reg, %struct.Reg* %6222, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %6223 to i64*
  %6224 = load i64, i64* %PC.i938
  %6225 = add i64 %6224, 82
  %6226 = load i64, i64* %PC.i938
  %6227 = add i64 %6226, 6
  %6228 = load i64, i64* %PC.i938
  %6229 = add i64 %6228, 6
  store i64 %6229, i64* %PC.i938
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6231 = load i8, i8* %6230, align 1
  %6232 = icmp ne i8 %6231, 0
  %6233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6234 = load i8, i8* %6233, align 1
  %6235 = icmp ne i8 %6234, 0
  %6236 = xor i1 %6232, %6235
  %6237 = xor i1 %6236, true
  %6238 = zext i1 %6237 to i8
  store i8 %6238, i8* %BRANCH_TAKEN, align 1
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6240 = select i1 %6236, i64 %6227, i64 %6225
  store i64 %6240, i64* %6239, align 8
  store %struct.Memory* %loadMem_48cb4a, %struct.Memory** %MEMORY
  %loadBr_48cb4a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cb4a = icmp eq i8 %loadBr_48cb4a, 1
  br i1 %cmpBr_48cb4a, label %block_.L_48cb9c, label %block_48cb50

block_48cb50:                                     ; preds = %block_.L_48cb46
  %loadMem_48cb50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6242 = getelementptr inbounds %struct.GPR, %struct.GPR* %6241, i32 0, i32 33
  %6243 = getelementptr inbounds %struct.Reg, %struct.Reg* %6242, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %6243 to i64*
  %6244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6245 = getelementptr inbounds %struct.GPR, %struct.GPR* %6244, i32 0, i32 1
  %6246 = getelementptr inbounds %struct.Reg, %struct.Reg* %6245, i32 0, i32 0
  %RAX.i937 = bitcast %union.anon* %6246 to i64*
  %6247 = load i64, i64* %PC.i936
  %6248 = add i64 %6247, 10
  store i64 %6248, i64* %PC.i936
  store i64 ptrtoint (%G__0x6cc660_type* @G__0x6cc660 to i64), i64* %RAX.i937, align 8
  store %struct.Memory* %loadMem_48cb50, %struct.Memory** %MEMORY
  %loadMem_48cb5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6250 = getelementptr inbounds %struct.GPR, %struct.GPR* %6249, i32 0, i32 33
  %6251 = getelementptr inbounds %struct.Reg, %struct.Reg* %6250, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %6251 to i64*
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6253 = getelementptr inbounds %struct.GPR, %struct.GPR* %6252, i32 0, i32 5
  %6254 = getelementptr inbounds %struct.Reg, %struct.Reg* %6253, i32 0, i32 0
  %RCX.i935 = bitcast %union.anon* %6254 to i64*
  %6255 = load i64, i64* %PC.i934
  %6256 = add i64 %6255, 8
  store i64 %6256, i64* %PC.i934
  %6257 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6257, i64* %RCX.i935, align 8
  store %struct.Memory* %loadMem_48cb5a, %struct.Memory** %MEMORY
  %loadMem_48cb62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6259 = getelementptr inbounds %struct.GPR, %struct.GPR* %6258, i32 0, i32 33
  %6260 = getelementptr inbounds %struct.Reg, %struct.Reg* %6259, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %6260 to i64*
  %6261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6262 = getelementptr inbounds %struct.GPR, %struct.GPR* %6261, i32 0, i32 5
  %6263 = getelementptr inbounds %struct.Reg, %struct.Reg* %6262, i32 0, i32 0
  %RCX.i933 = bitcast %union.anon* %6263 to i64*
  %6264 = load i64, i64* %RCX.i933
  %6265 = load i64, i64* %PC.i932
  %6266 = add i64 %6265, 7
  store i64 %6266, i64* %PC.i932
  %6267 = add i64 12600, %6264
  store i64 %6267, i64* %RCX.i933, align 8
  %6268 = icmp ult i64 %6267, %6264
  %6269 = icmp ult i64 %6267, 12600
  %6270 = or i1 %6268, %6269
  %6271 = zext i1 %6270 to i8
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6271, i8* %6272, align 1
  %6273 = trunc i64 %6267 to i32
  %6274 = and i32 %6273, 255
  %6275 = call i32 @llvm.ctpop.i32(i32 %6274)
  %6276 = trunc i32 %6275 to i8
  %6277 = and i8 %6276, 1
  %6278 = xor i8 %6277, 1
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6278, i8* %6279, align 1
  %6280 = xor i64 12600, %6264
  %6281 = xor i64 %6280, %6267
  %6282 = lshr i64 %6281, 4
  %6283 = trunc i64 %6282 to i8
  %6284 = and i8 %6283, 1
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6284, i8* %6285, align 1
  %6286 = icmp eq i64 %6267, 0
  %6287 = zext i1 %6286 to i8
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6287, i8* %6288, align 1
  %6289 = lshr i64 %6267, 63
  %6290 = trunc i64 %6289 to i8
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6290, i8* %6291, align 1
  %6292 = lshr i64 %6264, 63
  %6293 = xor i64 %6289, %6292
  %6294 = add i64 %6293, %6289
  %6295 = icmp eq i64 %6294, 2
  %6296 = zext i1 %6295 to i8
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6296, i8* %6297, align 1
  store %struct.Memory* %loadMem_48cb62, %struct.Memory** %MEMORY
  %loadMem_48cb69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6299 = getelementptr inbounds %struct.GPR, %struct.GPR* %6298, i32 0, i32 33
  %6300 = getelementptr inbounds %struct.Reg, %struct.Reg* %6299, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %6300 to i64*
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6302 = getelementptr inbounds %struct.GPR, %struct.GPR* %6301, i32 0, i32 7
  %6303 = getelementptr inbounds %struct.Reg, %struct.Reg* %6302, i32 0, i32 0
  %RDX.i930 = bitcast %union.anon* %6303 to i64*
  %6304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6305 = getelementptr inbounds %struct.GPR, %struct.GPR* %6304, i32 0, i32 15
  %6306 = getelementptr inbounds %struct.Reg, %struct.Reg* %6305, i32 0, i32 0
  %RBP.i931 = bitcast %union.anon* %6306 to i64*
  %6307 = load i64, i64* %RBP.i931
  %6308 = sub i64 %6307, 40
  %6309 = load i64, i64* %PC.i929
  %6310 = add i64 %6309, 4
  store i64 %6310, i64* %PC.i929
  %6311 = inttoptr i64 %6308 to i32*
  %6312 = load i32, i32* %6311
  %6313 = sext i32 %6312 to i64
  store i64 %6313, i64* %RDX.i930, align 8
  store %struct.Memory* %loadMem_48cb69, %struct.Memory** %MEMORY
  %loadMem_48cb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6315 = getelementptr inbounds %struct.GPR, %struct.GPR* %6314, i32 0, i32 33
  %6316 = getelementptr inbounds %struct.Reg, %struct.Reg* %6315, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %6316 to i64*
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6318 = getelementptr inbounds %struct.GPR, %struct.GPR* %6317, i32 0, i32 7
  %6319 = getelementptr inbounds %struct.Reg, %struct.Reg* %6318, i32 0, i32 0
  %RDX.i928 = bitcast %union.anon* %6319 to i64*
  %6320 = load i64, i64* %RDX.i928
  %6321 = load i64, i64* %PC.i927
  %6322 = add i64 %6321, 4
  store i64 %6322, i64* %PC.i927
  %6323 = shl i64 %6320, 4
  %6324 = icmp slt i64 %6323, 0
  %6325 = shl i64 %6323, 1
  store i64 %6325, i64* %RDX.i928, align 8
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6327 = zext i1 %6324 to i8
  store i8 %6327, i8* %6326, align 1
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6329 = trunc i64 %6325 to i32
  %6330 = and i32 %6329, 254
  %6331 = call i32 @llvm.ctpop.i32(i32 %6330)
  %6332 = trunc i32 %6331 to i8
  %6333 = and i8 %6332, 1
  %6334 = xor i8 %6333, 1
  store i8 %6334, i8* %6328, align 1
  %6335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6335, align 1
  %6336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6337 = icmp eq i64 %6325, 0
  %6338 = zext i1 %6337 to i8
  store i8 %6338, i8* %6336, align 1
  %6339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6340 = lshr i64 %6325, 63
  %6341 = trunc i64 %6340 to i8
  store i8 %6341, i8* %6339, align 1
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6342, align 1
  store %struct.Memory* %loadMem_48cb6d, %struct.Memory** %MEMORY
  %loadMem_48cb71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6344 = getelementptr inbounds %struct.GPR, %struct.GPR* %6343, i32 0, i32 33
  %6345 = getelementptr inbounds %struct.Reg, %struct.Reg* %6344, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %6345 to i64*
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6347 = getelementptr inbounds %struct.GPR, %struct.GPR* %6346, i32 0, i32 5
  %6348 = getelementptr inbounds %struct.Reg, %struct.Reg* %6347, i32 0, i32 0
  %RCX.i925 = bitcast %union.anon* %6348 to i64*
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6350 = getelementptr inbounds %struct.GPR, %struct.GPR* %6349, i32 0, i32 7
  %6351 = getelementptr inbounds %struct.Reg, %struct.Reg* %6350, i32 0, i32 0
  %RDX.i926 = bitcast %union.anon* %6351 to i64*
  %6352 = load i64, i64* %RCX.i925
  %6353 = load i64, i64* %RDX.i926
  %6354 = load i64, i64* %PC.i924
  %6355 = add i64 %6354, 3
  store i64 %6355, i64* %PC.i924
  %6356 = add i64 %6353, %6352
  store i64 %6356, i64* %RCX.i925, align 8
  %6357 = icmp ult i64 %6356, %6352
  %6358 = icmp ult i64 %6356, %6353
  %6359 = or i1 %6357, %6358
  %6360 = zext i1 %6359 to i8
  %6361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6360, i8* %6361, align 1
  %6362 = trunc i64 %6356 to i32
  %6363 = and i32 %6362, 255
  %6364 = call i32 @llvm.ctpop.i32(i32 %6363)
  %6365 = trunc i32 %6364 to i8
  %6366 = and i8 %6365, 1
  %6367 = xor i8 %6366, 1
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6367, i8* %6368, align 1
  %6369 = xor i64 %6353, %6352
  %6370 = xor i64 %6369, %6356
  %6371 = lshr i64 %6370, 4
  %6372 = trunc i64 %6371 to i8
  %6373 = and i8 %6372, 1
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6373, i8* %6374, align 1
  %6375 = icmp eq i64 %6356, 0
  %6376 = zext i1 %6375 to i8
  %6377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6376, i8* %6377, align 1
  %6378 = lshr i64 %6356, 63
  %6379 = trunc i64 %6378 to i8
  %6380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6379, i8* %6380, align 1
  %6381 = lshr i64 %6352, 63
  %6382 = lshr i64 %6353, 63
  %6383 = xor i64 %6378, %6381
  %6384 = xor i64 %6378, %6382
  %6385 = add i64 %6383, %6384
  %6386 = icmp eq i64 %6385, 2
  %6387 = zext i1 %6386 to i8
  %6388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6387, i8* %6388, align 1
  store %struct.Memory* %loadMem_48cb71, %struct.Memory** %MEMORY
  %loadMem_48cb74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6390 = getelementptr inbounds %struct.GPR, %struct.GPR* %6389, i32 0, i32 33
  %6391 = getelementptr inbounds %struct.Reg, %struct.Reg* %6390, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %6391 to i64*
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6393 = getelementptr inbounds %struct.GPR, %struct.GPR* %6392, i32 0, i32 7
  %6394 = getelementptr inbounds %struct.Reg, %struct.Reg* %6393, i32 0, i32 0
  %RDX.i922 = bitcast %union.anon* %6394 to i64*
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6396 = getelementptr inbounds %struct.GPR, %struct.GPR* %6395, i32 0, i32 15
  %6397 = getelementptr inbounds %struct.Reg, %struct.Reg* %6396, i32 0, i32 0
  %RBP.i923 = bitcast %union.anon* %6397 to i64*
  %6398 = load i64, i64* %RBP.i923
  %6399 = sub i64 %6398, 44
  %6400 = load i64, i64* %PC.i921
  %6401 = add i64 %6400, 4
  store i64 %6401, i64* %PC.i921
  %6402 = inttoptr i64 %6399 to i32*
  %6403 = load i32, i32* %6402
  %6404 = sext i32 %6403 to i64
  store i64 %6404, i64* %RDX.i922, align 8
  store %struct.Memory* %loadMem_48cb74, %struct.Memory** %MEMORY
  %loadMem_48cb78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6406 = getelementptr inbounds %struct.GPR, %struct.GPR* %6405, i32 0, i32 33
  %6407 = getelementptr inbounds %struct.Reg, %struct.Reg* %6406, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %6407 to i64*
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6409 = getelementptr inbounds %struct.GPR, %struct.GPR* %6408, i32 0, i32 5
  %6410 = getelementptr inbounds %struct.Reg, %struct.Reg* %6409, i32 0, i32 0
  %RCX.i918 = bitcast %union.anon* %6410 to i64*
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6412 = getelementptr inbounds %struct.GPR, %struct.GPR* %6411, i32 0, i32 7
  %6413 = getelementptr inbounds %struct.Reg, %struct.Reg* %6412, i32 0, i32 0
  %RDX.i919 = bitcast %union.anon* %6413 to i64*
  %6414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6415 = getelementptr inbounds %struct.GPR, %struct.GPR* %6414, i32 0, i32 9
  %6416 = getelementptr inbounds %struct.Reg, %struct.Reg* %6415, i32 0, i32 0
  %RSI.i920 = bitcast %union.anon* %6416 to i64*
  %6417 = load i64, i64* %RCX.i918
  %6418 = load i64, i64* %RDX.i919
  %6419 = mul i64 %6418, 2
  %6420 = add i64 %6419, %6417
  %6421 = load i64, i64* %PC.i917
  %6422 = add i64 %6421, 4
  store i64 %6422, i64* %PC.i917
  %6423 = inttoptr i64 %6420 to i16*
  %6424 = load i16, i16* %6423
  %6425 = zext i16 %6424 to i64
  store i64 %6425, i64* %RSI.i920, align 8
  store %struct.Memory* %loadMem_48cb78, %struct.Memory** %MEMORY
  %loadMem_48cb7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6427 = getelementptr inbounds %struct.GPR, %struct.GPR* %6426, i32 0, i32 33
  %6428 = getelementptr inbounds %struct.Reg, %struct.Reg* %6427, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %6428 to i64*
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6430 = getelementptr inbounds %struct.GPR, %struct.GPR* %6429, i32 0, i32 5
  %6431 = getelementptr inbounds %struct.Reg, %struct.Reg* %6430, i32 0, i32 0
  %RCX.i915 = bitcast %union.anon* %6431 to i64*
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6433 = getelementptr inbounds %struct.GPR, %struct.GPR* %6432, i32 0, i32 15
  %6434 = getelementptr inbounds %struct.Reg, %struct.Reg* %6433, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %6434 to i64*
  %6435 = load i64, i64* %RBP.i916
  %6436 = sub i64 %6435, 44
  %6437 = load i64, i64* %PC.i914
  %6438 = add i64 %6437, 4
  store i64 %6438, i64* %PC.i914
  %6439 = inttoptr i64 %6436 to i32*
  %6440 = load i32, i32* %6439
  %6441 = sext i32 %6440 to i64
  store i64 %6441, i64* %RCX.i915, align 8
  store %struct.Memory* %loadMem_48cb7c, %struct.Memory** %MEMORY
  %loadMem_48cb80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6443 = getelementptr inbounds %struct.GPR, %struct.GPR* %6442, i32 0, i32 33
  %6444 = getelementptr inbounds %struct.Reg, %struct.Reg* %6443, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %6444 to i64*
  %6445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6446 = getelementptr inbounds %struct.GPR, %struct.GPR* %6445, i32 0, i32 5
  %6447 = getelementptr inbounds %struct.Reg, %struct.Reg* %6446, i32 0, i32 0
  %RCX.i913 = bitcast %union.anon* %6447 to i64*
  %6448 = load i64, i64* %RCX.i913
  %6449 = load i64, i64* %PC.i912
  %6450 = add i64 %6449, 4
  store i64 %6450, i64* %PC.i912
  %6451 = shl i64 %6448, 5
  %6452 = icmp slt i64 %6451, 0
  %6453 = shl i64 %6451, 1
  store i64 %6453, i64* %RCX.i913, align 8
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6455 = zext i1 %6452 to i8
  store i8 %6455, i8* %6454, align 1
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6457 = trunc i64 %6453 to i32
  %6458 = and i32 %6457, 254
  %6459 = call i32 @llvm.ctpop.i32(i32 %6458)
  %6460 = trunc i32 %6459 to i8
  %6461 = and i8 %6460, 1
  %6462 = xor i8 %6461, 1
  store i8 %6462, i8* %6456, align 1
  %6463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6463, align 1
  %6464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6465 = icmp eq i64 %6453, 0
  %6466 = zext i1 %6465 to i8
  store i8 %6466, i8* %6464, align 1
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6468 = lshr i64 %6453, 63
  %6469 = trunc i64 %6468 to i8
  store i8 %6469, i8* %6467, align 1
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6470, align 1
  store %struct.Memory* %loadMem_48cb80, %struct.Memory** %MEMORY
  %loadMem_48cb84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6472 = getelementptr inbounds %struct.GPR, %struct.GPR* %6471, i32 0, i32 33
  %6473 = getelementptr inbounds %struct.Reg, %struct.Reg* %6472, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %6473 to i64*
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6475 = getelementptr inbounds %struct.GPR, %struct.GPR* %6474, i32 0, i32 1
  %6476 = getelementptr inbounds %struct.Reg, %struct.Reg* %6475, i32 0, i32 0
  %RAX.i910 = bitcast %union.anon* %6476 to i64*
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6478 = getelementptr inbounds %struct.GPR, %struct.GPR* %6477, i32 0, i32 5
  %6479 = getelementptr inbounds %struct.Reg, %struct.Reg* %6478, i32 0, i32 0
  %RCX.i911 = bitcast %union.anon* %6479 to i64*
  %6480 = load i64, i64* %RAX.i910
  %6481 = load i64, i64* %RCX.i911
  %6482 = load i64, i64* %PC.i909
  %6483 = add i64 %6482, 3
  store i64 %6483, i64* %PC.i909
  %6484 = add i64 %6481, %6480
  store i64 %6484, i64* %RAX.i910, align 8
  %6485 = icmp ult i64 %6484, %6480
  %6486 = icmp ult i64 %6484, %6481
  %6487 = or i1 %6485, %6486
  %6488 = zext i1 %6487 to i8
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6488, i8* %6489, align 1
  %6490 = trunc i64 %6484 to i32
  %6491 = and i32 %6490, 255
  %6492 = call i32 @llvm.ctpop.i32(i32 %6491)
  %6493 = trunc i32 %6492 to i8
  %6494 = and i8 %6493, 1
  %6495 = xor i8 %6494, 1
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6495, i8* %6496, align 1
  %6497 = xor i64 %6481, %6480
  %6498 = xor i64 %6497, %6484
  %6499 = lshr i64 %6498, 4
  %6500 = trunc i64 %6499 to i8
  %6501 = and i8 %6500, 1
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6501, i8* %6502, align 1
  %6503 = icmp eq i64 %6484, 0
  %6504 = zext i1 %6503 to i8
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6504, i8* %6505, align 1
  %6506 = lshr i64 %6484, 63
  %6507 = trunc i64 %6506 to i8
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6507, i8* %6508, align 1
  %6509 = lshr i64 %6480, 63
  %6510 = lshr i64 %6481, 63
  %6511 = xor i64 %6506, %6509
  %6512 = xor i64 %6506, %6510
  %6513 = add i64 %6511, %6512
  %6514 = icmp eq i64 %6513, 2
  %6515 = zext i1 %6514 to i8
  %6516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6515, i8* %6516, align 1
  store %struct.Memory* %loadMem_48cb84, %struct.Memory** %MEMORY
  %loadMem_48cb87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6518 = getelementptr inbounds %struct.GPR, %struct.GPR* %6517, i32 0, i32 33
  %6519 = getelementptr inbounds %struct.Reg, %struct.Reg* %6518, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %6519 to i64*
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 5
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %RCX.i907 = bitcast %union.anon* %6522 to i64*
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6524 = getelementptr inbounds %struct.GPR, %struct.GPR* %6523, i32 0, i32 15
  %6525 = getelementptr inbounds %struct.Reg, %struct.Reg* %6524, i32 0, i32 0
  %RBP.i908 = bitcast %union.anon* %6525 to i64*
  %6526 = load i64, i64* %RBP.i908
  %6527 = sub i64 %6526, 40
  %6528 = load i64, i64* %PC.i906
  %6529 = add i64 %6528, 4
  store i64 %6529, i64* %PC.i906
  %6530 = inttoptr i64 %6527 to i32*
  %6531 = load i32, i32* %6530
  %6532 = sext i32 %6531 to i64
  store i64 %6532, i64* %RCX.i907, align 8
  store %struct.Memory* %loadMem_48cb87, %struct.Memory** %MEMORY
  %loadMem_48cb8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6534 = getelementptr inbounds %struct.GPR, %struct.GPR* %6533, i32 0, i32 33
  %6535 = getelementptr inbounds %struct.Reg, %struct.Reg* %6534, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %6535 to i64*
  %6536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6537 = getelementptr inbounds %struct.GPR, %struct.GPR* %6536, i32 0, i32 9
  %6538 = getelementptr inbounds %struct.Reg, %struct.Reg* %6537, i32 0, i32 0
  %ESI.i903 = bitcast %union.anon* %6538 to i32*
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6540 = getelementptr inbounds %struct.GPR, %struct.GPR* %6539, i32 0, i32 1
  %6541 = getelementptr inbounds %struct.Reg, %struct.Reg* %6540, i32 0, i32 0
  %RAX.i904 = bitcast %union.anon* %6541 to i64*
  %6542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6543 = getelementptr inbounds %struct.GPR, %struct.GPR* %6542, i32 0, i32 5
  %6544 = getelementptr inbounds %struct.Reg, %struct.Reg* %6543, i32 0, i32 0
  %RCX.i905 = bitcast %union.anon* %6544 to i64*
  %6545 = load i64, i64* %RAX.i904
  %6546 = load i64, i64* %RCX.i905
  %6547 = mul i64 %6546, 4
  %6548 = add i64 %6547, %6545
  %6549 = load i32, i32* %ESI.i903
  %6550 = zext i32 %6549 to i64
  %6551 = load i64, i64* %PC.i902
  %6552 = add i64 %6551, 3
  store i64 %6552, i64* %PC.i902
  %6553 = inttoptr i64 %6548 to i32*
  store i32 %6549, i32* %6553
  store %struct.Memory* %loadMem_48cb8b, %struct.Memory** %MEMORY
  %loadMem_48cb8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6555 = getelementptr inbounds %struct.GPR, %struct.GPR* %6554, i32 0, i32 33
  %6556 = getelementptr inbounds %struct.Reg, %struct.Reg* %6555, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %6556 to i64*
  %6557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6558 = getelementptr inbounds %struct.GPR, %struct.GPR* %6557, i32 0, i32 1
  %6559 = getelementptr inbounds %struct.Reg, %struct.Reg* %6558, i32 0, i32 0
  %RAX.i900 = bitcast %union.anon* %6559 to i64*
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6561 = getelementptr inbounds %struct.GPR, %struct.GPR* %6560, i32 0, i32 15
  %6562 = getelementptr inbounds %struct.Reg, %struct.Reg* %6561, i32 0, i32 0
  %RBP.i901 = bitcast %union.anon* %6562 to i64*
  %6563 = load i64, i64* %RBP.i901
  %6564 = sub i64 %6563, 44
  %6565 = load i64, i64* %PC.i899
  %6566 = add i64 %6565, 3
  store i64 %6566, i64* %PC.i899
  %6567 = inttoptr i64 %6564 to i32*
  %6568 = load i32, i32* %6567
  %6569 = zext i32 %6568 to i64
  store i64 %6569, i64* %RAX.i900, align 8
  store %struct.Memory* %loadMem_48cb8e, %struct.Memory** %MEMORY
  %loadMem_48cb91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6571 = getelementptr inbounds %struct.GPR, %struct.GPR* %6570, i32 0, i32 33
  %6572 = getelementptr inbounds %struct.Reg, %struct.Reg* %6571, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %6572 to i64*
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6574 = getelementptr inbounds %struct.GPR, %struct.GPR* %6573, i32 0, i32 1
  %6575 = getelementptr inbounds %struct.Reg, %struct.Reg* %6574, i32 0, i32 0
  %RAX.i898 = bitcast %union.anon* %6575 to i64*
  %6576 = load i64, i64* %RAX.i898
  %6577 = load i64, i64* %PC.i897
  %6578 = add i64 %6577, 3
  store i64 %6578, i64* %PC.i897
  %6579 = trunc i64 %6576 to i32
  %6580 = add i32 1, %6579
  %6581 = zext i32 %6580 to i64
  store i64 %6581, i64* %RAX.i898, align 8
  %6582 = icmp ult i32 %6580, %6579
  %6583 = icmp ult i32 %6580, 1
  %6584 = or i1 %6582, %6583
  %6585 = zext i1 %6584 to i8
  %6586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6585, i8* %6586, align 1
  %6587 = and i32 %6580, 255
  %6588 = call i32 @llvm.ctpop.i32(i32 %6587)
  %6589 = trunc i32 %6588 to i8
  %6590 = and i8 %6589, 1
  %6591 = xor i8 %6590, 1
  %6592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6591, i8* %6592, align 1
  %6593 = xor i64 1, %6576
  %6594 = trunc i64 %6593 to i32
  %6595 = xor i32 %6594, %6580
  %6596 = lshr i32 %6595, 4
  %6597 = trunc i32 %6596 to i8
  %6598 = and i8 %6597, 1
  %6599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6598, i8* %6599, align 1
  %6600 = icmp eq i32 %6580, 0
  %6601 = zext i1 %6600 to i8
  %6602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6601, i8* %6602, align 1
  %6603 = lshr i32 %6580, 31
  %6604 = trunc i32 %6603 to i8
  %6605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6604, i8* %6605, align 1
  %6606 = lshr i32 %6579, 31
  %6607 = xor i32 %6603, %6606
  %6608 = add i32 %6607, %6603
  %6609 = icmp eq i32 %6608, 2
  %6610 = zext i1 %6609 to i8
  %6611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6610, i8* %6611, align 1
  store %struct.Memory* %loadMem_48cb91, %struct.Memory** %MEMORY
  %loadMem_48cb94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6613 = getelementptr inbounds %struct.GPR, %struct.GPR* %6612, i32 0, i32 33
  %6614 = getelementptr inbounds %struct.Reg, %struct.Reg* %6613, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %6614 to i64*
  %6615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6616 = getelementptr inbounds %struct.GPR, %struct.GPR* %6615, i32 0, i32 1
  %6617 = getelementptr inbounds %struct.Reg, %struct.Reg* %6616, i32 0, i32 0
  %EAX.i895 = bitcast %union.anon* %6617 to i32*
  %6618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6619 = getelementptr inbounds %struct.GPR, %struct.GPR* %6618, i32 0, i32 15
  %6620 = getelementptr inbounds %struct.Reg, %struct.Reg* %6619, i32 0, i32 0
  %RBP.i896 = bitcast %union.anon* %6620 to i64*
  %6621 = load i64, i64* %RBP.i896
  %6622 = sub i64 %6621, 44
  %6623 = load i32, i32* %EAX.i895
  %6624 = zext i32 %6623 to i64
  %6625 = load i64, i64* %PC.i894
  %6626 = add i64 %6625, 3
  store i64 %6626, i64* %PC.i894
  %6627 = inttoptr i64 %6622 to i32*
  store i32 %6623, i32* %6627
  store %struct.Memory* %loadMem_48cb94, %struct.Memory** %MEMORY
  %loadMem_48cb97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6629 = getelementptr inbounds %struct.GPR, %struct.GPR* %6628, i32 0, i32 33
  %6630 = getelementptr inbounds %struct.Reg, %struct.Reg* %6629, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %6630 to i64*
  %6631 = load i64, i64* %PC.i893
  %6632 = add i64 %6631, -81
  %6633 = load i64, i64* %PC.i893
  %6634 = add i64 %6633, 5
  store i64 %6634, i64* %PC.i893
  %6635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6632, i64* %6635, align 8
  store %struct.Memory* %loadMem_48cb97, %struct.Memory** %MEMORY
  br label %block_.L_48cb46

block_.L_48cb9c:                                  ; preds = %block_.L_48cb46
  %loadMem_48cb9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6637 = getelementptr inbounds %struct.GPR, %struct.GPR* %6636, i32 0, i32 33
  %6638 = getelementptr inbounds %struct.Reg, %struct.Reg* %6637, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %6638 to i64*
  %6639 = load i64, i64* %PC.i892
  %6640 = add i64 %6639, 5
  %6641 = load i64, i64* %PC.i892
  %6642 = add i64 %6641, 5
  store i64 %6642, i64* %PC.i892
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6640, i64* %6643, align 8
  store %struct.Memory* %loadMem_48cb9c, %struct.Memory** %MEMORY
  br label %block_.L_48cba1

block_.L_48cba1:                                  ; preds = %block_.L_48cb9c
  %loadMem_48cba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6645 = getelementptr inbounds %struct.GPR, %struct.GPR* %6644, i32 0, i32 33
  %6646 = getelementptr inbounds %struct.Reg, %struct.Reg* %6645, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %6646 to i64*
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6648 = getelementptr inbounds %struct.GPR, %struct.GPR* %6647, i32 0, i32 1
  %6649 = getelementptr inbounds %struct.Reg, %struct.Reg* %6648, i32 0, i32 0
  %RAX.i890 = bitcast %union.anon* %6649 to i64*
  %6650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6651 = getelementptr inbounds %struct.GPR, %struct.GPR* %6650, i32 0, i32 15
  %6652 = getelementptr inbounds %struct.Reg, %struct.Reg* %6651, i32 0, i32 0
  %RBP.i891 = bitcast %union.anon* %6652 to i64*
  %6653 = load i64, i64* %RBP.i891
  %6654 = sub i64 %6653, 40
  %6655 = load i64, i64* %PC.i889
  %6656 = add i64 %6655, 3
  store i64 %6656, i64* %PC.i889
  %6657 = inttoptr i64 %6654 to i32*
  %6658 = load i32, i32* %6657
  %6659 = zext i32 %6658 to i64
  store i64 %6659, i64* %RAX.i890, align 8
  store %struct.Memory* %loadMem_48cba1, %struct.Memory** %MEMORY
  %loadMem_48cba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6661 = getelementptr inbounds %struct.GPR, %struct.GPR* %6660, i32 0, i32 33
  %6662 = getelementptr inbounds %struct.Reg, %struct.Reg* %6661, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %6662 to i64*
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6664 = getelementptr inbounds %struct.GPR, %struct.GPR* %6663, i32 0, i32 1
  %6665 = getelementptr inbounds %struct.Reg, %struct.Reg* %6664, i32 0, i32 0
  %RAX.i888 = bitcast %union.anon* %6665 to i64*
  %6666 = load i64, i64* %RAX.i888
  %6667 = load i64, i64* %PC.i887
  %6668 = add i64 %6667, 3
  store i64 %6668, i64* %PC.i887
  %6669 = trunc i64 %6666 to i32
  %6670 = add i32 1, %6669
  %6671 = zext i32 %6670 to i64
  store i64 %6671, i64* %RAX.i888, align 8
  %6672 = icmp ult i32 %6670, %6669
  %6673 = icmp ult i32 %6670, 1
  %6674 = or i1 %6672, %6673
  %6675 = zext i1 %6674 to i8
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6675, i8* %6676, align 1
  %6677 = and i32 %6670, 255
  %6678 = call i32 @llvm.ctpop.i32(i32 %6677)
  %6679 = trunc i32 %6678 to i8
  %6680 = and i8 %6679, 1
  %6681 = xor i8 %6680, 1
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6681, i8* %6682, align 1
  %6683 = xor i64 1, %6666
  %6684 = trunc i64 %6683 to i32
  %6685 = xor i32 %6684, %6670
  %6686 = lshr i32 %6685, 4
  %6687 = trunc i32 %6686 to i8
  %6688 = and i8 %6687, 1
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6688, i8* %6689, align 1
  %6690 = icmp eq i32 %6670, 0
  %6691 = zext i1 %6690 to i8
  %6692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6691, i8* %6692, align 1
  %6693 = lshr i32 %6670, 31
  %6694 = trunc i32 %6693 to i8
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6694, i8* %6695, align 1
  %6696 = lshr i32 %6669, 31
  %6697 = xor i32 %6693, %6696
  %6698 = add i32 %6697, %6693
  %6699 = icmp eq i32 %6698, 2
  %6700 = zext i1 %6699 to i8
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6700, i8* %6701, align 1
  store %struct.Memory* %loadMem_48cba4, %struct.Memory** %MEMORY
  %loadMem_48cba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6703 = getelementptr inbounds %struct.GPR, %struct.GPR* %6702, i32 0, i32 33
  %6704 = getelementptr inbounds %struct.Reg, %struct.Reg* %6703, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %6704 to i64*
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6706 = getelementptr inbounds %struct.GPR, %struct.GPR* %6705, i32 0, i32 1
  %6707 = getelementptr inbounds %struct.Reg, %struct.Reg* %6706, i32 0, i32 0
  %EAX.i885 = bitcast %union.anon* %6707 to i32*
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6709 = getelementptr inbounds %struct.GPR, %struct.GPR* %6708, i32 0, i32 15
  %6710 = getelementptr inbounds %struct.Reg, %struct.Reg* %6709, i32 0, i32 0
  %RBP.i886 = bitcast %union.anon* %6710 to i64*
  %6711 = load i64, i64* %RBP.i886
  %6712 = sub i64 %6711, 40
  %6713 = load i32, i32* %EAX.i885
  %6714 = zext i32 %6713 to i64
  %6715 = load i64, i64* %PC.i884
  %6716 = add i64 %6715, 3
  store i64 %6716, i64* %PC.i884
  %6717 = inttoptr i64 %6712 to i32*
  store i32 %6713, i32* %6717
  store %struct.Memory* %loadMem_48cba7, %struct.Memory** %MEMORY
  %loadMem_48cbaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6719 = getelementptr inbounds %struct.GPR, %struct.GPR* %6718, i32 0, i32 33
  %6720 = getelementptr inbounds %struct.Reg, %struct.Reg* %6719, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %6720 to i64*
  %6721 = load i64, i64* %PC.i883
  %6722 = add i64 %6721, -117
  %6723 = load i64, i64* %PC.i883
  %6724 = add i64 %6723, 5
  store i64 %6724, i64* %PC.i883
  %6725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6722, i64* %6725, align 8
  store %struct.Memory* %loadMem_48cbaa, %struct.Memory** %MEMORY
  br label %block_.L_48cb35

block_.L_48cbaf:                                  ; preds = %block_.L_48cb35
  %loadMem_48cbaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6727 = getelementptr inbounds %struct.GPR, %struct.GPR* %6726, i32 0, i32 33
  %6728 = getelementptr inbounds %struct.Reg, %struct.Reg* %6727, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %6728 to i64*
  %6729 = load i64, i64* %PC.i882
  %6730 = add i64 %6729, 5
  %6731 = load i64, i64* %PC.i882
  %6732 = add i64 %6731, 5
  store i64 %6732, i64* %PC.i882
  %6733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6730, i64* %6733, align 8
  store %struct.Memory* %loadMem_48cbaf, %struct.Memory** %MEMORY
  br label %block_.L_48cbb4

block_.L_48cbb4:                                  ; preds = %block_.L_48cbaf, %block_.L_48cb29
  %loadMem_48cbb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6735 = getelementptr inbounds %struct.GPR, %struct.GPR* %6734, i32 0, i32 33
  %6736 = getelementptr inbounds %struct.Reg, %struct.Reg* %6735, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %6736 to i64*
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6738 = getelementptr inbounds %struct.GPR, %struct.GPR* %6737, i32 0, i32 1
  %6739 = getelementptr inbounds %struct.Reg, %struct.Reg* %6738, i32 0, i32 0
  %RAX.i881 = bitcast %union.anon* %6739 to i64*
  %6740 = load i64, i64* %PC.i880
  %6741 = add i64 %6740, 8
  store i64 %6741, i64* %PC.i880
  %6742 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6742, i64* %RAX.i881, align 8
  store %struct.Memory* %loadMem_48cbb4, %struct.Memory** %MEMORY
  %loadMem_48cbbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6744 = getelementptr inbounds %struct.GPR, %struct.GPR* %6743, i32 0, i32 33
  %6745 = getelementptr inbounds %struct.Reg, %struct.Reg* %6744, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %6745 to i64*
  %6746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6747 = getelementptr inbounds %struct.GPR, %struct.GPR* %6746, i32 0, i32 1
  %6748 = getelementptr inbounds %struct.Reg, %struct.Reg* %6747, i32 0, i32 0
  %RAX.i879 = bitcast %union.anon* %6748 to i64*
  %6749 = load i64, i64* %RAX.i879
  %6750 = add i64 %6749, 72380
  %6751 = load i64, i64* %PC.i878
  %6752 = add i64 %6751, 10
  store i64 %6752, i64* %PC.i878
  %6753 = inttoptr i64 %6750 to i32*
  store i32 0, i32* %6753
  store %struct.Memory* %loadMem_48cbbc, %struct.Memory** %MEMORY
  %loadMem_48cbc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6755 = getelementptr inbounds %struct.GPR, %struct.GPR* %6754, i32 0, i32 33
  %6756 = getelementptr inbounds %struct.Reg, %struct.Reg* %6755, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %6756 to i64*
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6758 = getelementptr inbounds %struct.GPR, %struct.GPR* %6757, i32 0, i32 15
  %6759 = getelementptr inbounds %struct.Reg, %struct.Reg* %6758, i32 0, i32 0
  %RBP.i877 = bitcast %union.anon* %6759 to i64*
  %6760 = load i64, i64* %RBP.i877
  %6761 = sub i64 %6760, 108
  %6762 = load i64, i64* %PC.i876
  %6763 = add i64 %6762, 7
  store i64 %6763, i64* %PC.i876
  %6764 = inttoptr i64 %6761 to i32*
  store i32 0, i32* %6764
  store %struct.Memory* %loadMem_48cbc6, %struct.Memory** %MEMORY
  %loadMem_48cbcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6766 = getelementptr inbounds %struct.GPR, %struct.GPR* %6765, i32 0, i32 33
  %6767 = getelementptr inbounds %struct.Reg, %struct.Reg* %6766, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %6767 to i64*
  %6768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6769 = getelementptr inbounds %struct.GPR, %struct.GPR* %6768, i32 0, i32 1
  %6770 = getelementptr inbounds %struct.Reg, %struct.Reg* %6769, i32 0, i32 0
  %RAX.i875 = bitcast %union.anon* %6770 to i64*
  %6771 = load i64, i64* %PC.i874
  %6772 = add i64 %6771, 8
  store i64 %6772, i64* %PC.i874
  %6773 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6773, i64* %RAX.i875, align 8
  store %struct.Memory* %loadMem_48cbcd, %struct.Memory** %MEMORY
  %loadMem_48cbd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6775 = getelementptr inbounds %struct.GPR, %struct.GPR* %6774, i32 0, i32 33
  %6776 = getelementptr inbounds %struct.Reg, %struct.Reg* %6775, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %6776 to i64*
  %6777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6778 = getelementptr inbounds %struct.GPR, %struct.GPR* %6777, i32 0, i32 1
  %6779 = getelementptr inbounds %struct.Reg, %struct.Reg* %6778, i32 0, i32 0
  %RAX.i873 = bitcast %union.anon* %6779 to i64*
  %6780 = load i64, i64* %RAX.i873
  %6781 = add i64 %6780, 72724
  %6782 = load i64, i64* %PC.i872
  %6783 = add i64 %6782, 7
  store i64 %6783, i64* %PC.i872
  %6784 = inttoptr i64 %6781 to i32*
  %6785 = load i32, i32* %6784
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6786, align 1
  %6787 = and i32 %6785, 255
  %6788 = call i32 @llvm.ctpop.i32(i32 %6787)
  %6789 = trunc i32 %6788 to i8
  %6790 = and i8 %6789, 1
  %6791 = xor i8 %6790, 1
  %6792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6791, i8* %6792, align 1
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6793, align 1
  %6794 = icmp eq i32 %6785, 0
  %6795 = zext i1 %6794 to i8
  %6796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6795, i8* %6796, align 1
  %6797 = lshr i32 %6785, 31
  %6798 = trunc i32 %6797 to i8
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6798, i8* %6799, align 1
  %6800 = lshr i32 %6785, 31
  %6801 = xor i32 %6797, %6800
  %6802 = add i32 %6801, %6800
  %6803 = icmp eq i32 %6802, 2
  %6804 = zext i1 %6803 to i8
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6804, i8* %6805, align 1
  store %struct.Memory* %loadMem_48cbd5, %struct.Memory** %MEMORY
  %loadMem_48cbdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6807 = getelementptr inbounds %struct.GPR, %struct.GPR* %6806, i32 0, i32 33
  %6808 = getelementptr inbounds %struct.Reg, %struct.Reg* %6807, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %6808 to i64*
  %6809 = load i64, i64* %PC.i871
  %6810 = add i64 %6809, 36
  %6811 = load i64, i64* %PC.i871
  %6812 = add i64 %6811, 6
  %6813 = load i64, i64* %PC.i871
  %6814 = add i64 %6813, 6
  store i64 %6814, i64* %PC.i871
  %6815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6816 = load i8, i8* %6815, align 1
  store i8 %6816, i8* %BRANCH_TAKEN, align 1
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6818 = icmp ne i8 %6816, 0
  %6819 = select i1 %6818, i64 %6810, i64 %6812
  store i64 %6819, i64* %6817, align 8
  store %struct.Memory* %loadMem_48cbdc, %struct.Memory** %MEMORY
  %loadBr_48cbdc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cbdc = icmp eq i8 %loadBr_48cbdc, 1
  br i1 %cmpBr_48cbdc, label %block_.L_48cc00, label %block_48cbe2

block_48cbe2:                                     ; preds = %block_.L_48cbb4
  %loadMem_48cbe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6821 = getelementptr inbounds %struct.GPR, %struct.GPR* %6820, i32 0, i32 33
  %6822 = getelementptr inbounds %struct.Reg, %struct.Reg* %6821, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %6822 to i64*
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6824 = getelementptr inbounds %struct.GPR, %struct.GPR* %6823, i32 0, i32 15
  %6825 = getelementptr inbounds %struct.Reg, %struct.Reg* %6824, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %6825 to i64*
  %6826 = load i64, i64* %RBP.i870
  %6827 = sub i64 %6826, 20
  %6828 = load i64, i64* %PC.i869
  %6829 = add i64 %6828, 4
  store i64 %6829, i64* %PC.i869
  %6830 = inttoptr i64 %6827 to i32*
  %6831 = load i32, i32* %6830
  %6832 = sub i32 %6831, 9
  %6833 = icmp ult i32 %6831, 9
  %6834 = zext i1 %6833 to i8
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6834, i8* %6835, align 1
  %6836 = and i32 %6832, 255
  %6837 = call i32 @llvm.ctpop.i32(i32 %6836)
  %6838 = trunc i32 %6837 to i8
  %6839 = and i8 %6838, 1
  %6840 = xor i8 %6839, 1
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6840, i8* %6841, align 1
  %6842 = xor i32 %6831, 9
  %6843 = xor i32 %6842, %6832
  %6844 = lshr i32 %6843, 4
  %6845 = trunc i32 %6844 to i8
  %6846 = and i8 %6845, 1
  %6847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6846, i8* %6847, align 1
  %6848 = icmp eq i32 %6832, 0
  %6849 = zext i1 %6848 to i8
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6849, i8* %6850, align 1
  %6851 = lshr i32 %6832, 31
  %6852 = trunc i32 %6851 to i8
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6852, i8* %6853, align 1
  %6854 = lshr i32 %6831, 31
  %6855 = xor i32 %6851, %6854
  %6856 = add i32 %6855, %6854
  %6857 = icmp eq i32 %6856, 2
  %6858 = zext i1 %6857 to i8
  %6859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6858, i8* %6859, align 1
  store %struct.Memory* %loadMem_48cbe2, %struct.Memory** %MEMORY
  %loadMem_48cbe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6861 = getelementptr inbounds %struct.GPR, %struct.GPR* %6860, i32 0, i32 33
  %6862 = getelementptr inbounds %struct.Reg, %struct.Reg* %6861, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %6862 to i64*
  %6863 = load i64, i64* %PC.i868
  %6864 = add i64 %6863, 56
  %6865 = load i64, i64* %PC.i868
  %6866 = add i64 %6865, 6
  %6867 = load i64, i64* %PC.i868
  %6868 = add i64 %6867, 6
  store i64 %6868, i64* %PC.i868
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6870 = load i8, i8* %6869, align 1
  store i8 %6870, i8* %BRANCH_TAKEN, align 1
  %6871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6872 = icmp ne i8 %6870, 0
  %6873 = select i1 %6872, i64 %6864, i64 %6866
  store i64 %6873, i64* %6871, align 8
  store %struct.Memory* %loadMem_48cbe6, %struct.Memory** %MEMORY
  %loadBr_48cbe6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cbe6 = icmp eq i8 %loadBr_48cbe6, 1
  br i1 %cmpBr_48cbe6, label %block_.L_48cc1e, label %block_48cbec

block_48cbec:                                     ; preds = %block_48cbe2
  %loadMem_48cbec = load %struct.Memory*, %struct.Memory** %MEMORY
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6875 = getelementptr inbounds %struct.GPR, %struct.GPR* %6874, i32 0, i32 33
  %6876 = getelementptr inbounds %struct.Reg, %struct.Reg* %6875, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %6876 to i64*
  %6877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6878 = getelementptr inbounds %struct.GPR, %struct.GPR* %6877, i32 0, i32 15
  %6879 = getelementptr inbounds %struct.Reg, %struct.Reg* %6878, i32 0, i32 0
  %RBP.i867 = bitcast %union.anon* %6879 to i64*
  %6880 = load i64, i64* %RBP.i867
  %6881 = sub i64 %6880, 20
  %6882 = load i64, i64* %PC.i866
  %6883 = add i64 %6882, 4
  store i64 %6883, i64* %PC.i866
  %6884 = inttoptr i64 %6881 to i32*
  %6885 = load i32, i32* %6884
  %6886 = sub i32 %6885, 10
  %6887 = icmp ult i32 %6885, 10
  %6888 = zext i1 %6887 to i8
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6888, i8* %6889, align 1
  %6890 = and i32 %6886, 255
  %6891 = call i32 @llvm.ctpop.i32(i32 %6890)
  %6892 = trunc i32 %6891 to i8
  %6893 = and i8 %6892, 1
  %6894 = xor i8 %6893, 1
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6894, i8* %6895, align 1
  %6896 = xor i32 %6885, 10
  %6897 = xor i32 %6896, %6886
  %6898 = lshr i32 %6897, 4
  %6899 = trunc i32 %6898 to i8
  %6900 = and i8 %6899, 1
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6900, i8* %6901, align 1
  %6902 = icmp eq i32 %6886, 0
  %6903 = zext i1 %6902 to i8
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6903, i8* %6904, align 1
  %6905 = lshr i32 %6886, 31
  %6906 = trunc i32 %6905 to i8
  %6907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6906, i8* %6907, align 1
  %6908 = lshr i32 %6885, 31
  %6909 = xor i32 %6905, %6908
  %6910 = add i32 %6909, %6908
  %6911 = icmp eq i32 %6910, 2
  %6912 = zext i1 %6911 to i8
  %6913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6912, i8* %6913, align 1
  store %struct.Memory* %loadMem_48cbec, %struct.Memory** %MEMORY
  %loadMem_48cbf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6915 = getelementptr inbounds %struct.GPR, %struct.GPR* %6914, i32 0, i32 33
  %6916 = getelementptr inbounds %struct.Reg, %struct.Reg* %6915, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %6916 to i64*
  %6917 = load i64, i64* %PC.i865
  %6918 = add i64 %6917, 46
  %6919 = load i64, i64* %PC.i865
  %6920 = add i64 %6919, 6
  %6921 = load i64, i64* %PC.i865
  %6922 = add i64 %6921, 6
  store i64 %6922, i64* %PC.i865
  %6923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6924 = load i8, i8* %6923, align 1
  store i8 %6924, i8* %BRANCH_TAKEN, align 1
  %6925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6926 = icmp ne i8 %6924, 0
  %6927 = select i1 %6926, i64 %6918, i64 %6920
  store i64 %6927, i64* %6925, align 8
  store %struct.Memory* %loadMem_48cbf0, %struct.Memory** %MEMORY
  %loadBr_48cbf0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cbf0 = icmp eq i8 %loadBr_48cbf0, 1
  br i1 %cmpBr_48cbf0, label %block_.L_48cc1e, label %block_48cbf6

block_48cbf6:                                     ; preds = %block_48cbec
  %loadMem_48cbf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6929 = getelementptr inbounds %struct.GPR, %struct.GPR* %6928, i32 0, i32 33
  %6930 = getelementptr inbounds %struct.Reg, %struct.Reg* %6929, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %6930 to i64*
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6932 = getelementptr inbounds %struct.GPR, %struct.GPR* %6931, i32 0, i32 15
  %6933 = getelementptr inbounds %struct.Reg, %struct.Reg* %6932, i32 0, i32 0
  %RBP.i864 = bitcast %union.anon* %6933 to i64*
  %6934 = load i64, i64* %RBP.i864
  %6935 = sub i64 %6934, 20
  %6936 = load i64, i64* %PC.i863
  %6937 = add i64 %6936, 4
  store i64 %6937, i64* %PC.i863
  %6938 = inttoptr i64 %6935 to i32*
  %6939 = load i32, i32* %6938
  %6940 = sub i32 %6939, 13
  %6941 = icmp ult i32 %6939, 13
  %6942 = zext i1 %6941 to i8
  %6943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6942, i8* %6943, align 1
  %6944 = and i32 %6940, 255
  %6945 = call i32 @llvm.ctpop.i32(i32 %6944)
  %6946 = trunc i32 %6945 to i8
  %6947 = and i8 %6946, 1
  %6948 = xor i8 %6947, 1
  %6949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6948, i8* %6949, align 1
  %6950 = xor i32 %6939, 13
  %6951 = xor i32 %6950, %6940
  %6952 = lshr i32 %6951, 4
  %6953 = trunc i32 %6952 to i8
  %6954 = and i8 %6953, 1
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6954, i8* %6955, align 1
  %6956 = icmp eq i32 %6940, 0
  %6957 = zext i1 %6956 to i8
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6957, i8* %6958, align 1
  %6959 = lshr i32 %6940, 31
  %6960 = trunc i32 %6959 to i8
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6960, i8* %6961, align 1
  %6962 = lshr i32 %6939, 31
  %6963 = xor i32 %6959, %6962
  %6964 = add i32 %6963, %6962
  %6965 = icmp eq i32 %6964, 2
  %6966 = zext i1 %6965 to i8
  %6967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6966, i8* %6967, align 1
  store %struct.Memory* %loadMem_48cbf6, %struct.Memory** %MEMORY
  %loadMem_48cbfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6969 = getelementptr inbounds %struct.GPR, %struct.GPR* %6968, i32 0, i32 33
  %6970 = getelementptr inbounds %struct.Reg, %struct.Reg* %6969, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %6970 to i64*
  %6971 = load i64, i64* %PC.i862
  %6972 = add i64 %6971, 36
  %6973 = load i64, i64* %PC.i862
  %6974 = add i64 %6973, 6
  %6975 = load i64, i64* %PC.i862
  %6976 = add i64 %6975, 6
  store i64 %6976, i64* %PC.i862
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6978 = load i8, i8* %6977, align 1
  store i8 %6978, i8* %BRANCH_TAKEN, align 1
  %6979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6980 = icmp ne i8 %6978, 0
  %6981 = select i1 %6980, i64 %6972, i64 %6974
  store i64 %6981, i64* %6979, align 8
  store %struct.Memory* %loadMem_48cbfa, %struct.Memory** %MEMORY
  %loadBr_48cbfa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cbfa = icmp eq i8 %loadBr_48cbfa, 1
  br i1 %cmpBr_48cbfa, label %block_.L_48cc1e, label %block_.L_48cc00

block_.L_48cc00:                                  ; preds = %block_48cbf6, %block_.L_48cbb4
  %loadMem_48cc00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6983 = getelementptr inbounds %struct.GPR, %struct.GPR* %6982, i32 0, i32 33
  %6984 = getelementptr inbounds %struct.Reg, %struct.Reg* %6983, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %6984 to i64*
  %6985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6986 = getelementptr inbounds %struct.GPR, %struct.GPR* %6985, i32 0, i32 1
  %6987 = getelementptr inbounds %struct.Reg, %struct.Reg* %6986, i32 0, i32 0
  %RAX.i861 = bitcast %union.anon* %6987 to i64*
  %6988 = load i64, i64* %PC.i860
  %6989 = add i64 %6988, 8
  store i64 %6989, i64* %PC.i860
  %6990 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6990, i64* %RAX.i861, align 8
  store %struct.Memory* %loadMem_48cc00, %struct.Memory** %MEMORY
  %loadMem_48cc08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6992 = getelementptr inbounds %struct.GPR, %struct.GPR* %6991, i32 0, i32 33
  %6993 = getelementptr inbounds %struct.Reg, %struct.Reg* %6992, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %6993 to i64*
  %6994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6995 = getelementptr inbounds %struct.GPR, %struct.GPR* %6994, i32 0, i32 1
  %6996 = getelementptr inbounds %struct.Reg, %struct.Reg* %6995, i32 0, i32 0
  %RAX.i859 = bitcast %union.anon* %6996 to i64*
  %6997 = load i64, i64* %RAX.i859
  %6998 = add i64 %6997, 72700
  %6999 = load i64, i64* %PC.i858
  %7000 = add i64 %6999, 7
  store i64 %7000, i64* %PC.i858
  %7001 = inttoptr i64 %6998 to i32*
  %7002 = load i32, i32* %7001
  %7003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7003, align 1
  %7004 = and i32 %7002, 255
  %7005 = call i32 @llvm.ctpop.i32(i32 %7004)
  %7006 = trunc i32 %7005 to i8
  %7007 = and i8 %7006, 1
  %7008 = xor i8 %7007, 1
  %7009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7008, i8* %7009, align 1
  %7010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7010, align 1
  %7011 = icmp eq i32 %7002, 0
  %7012 = zext i1 %7011 to i8
  %7013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7012, i8* %7013, align 1
  %7014 = lshr i32 %7002, 31
  %7015 = trunc i32 %7014 to i8
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7015, i8* %7016, align 1
  %7017 = lshr i32 %7002, 31
  %7018 = xor i32 %7014, %7017
  %7019 = add i32 %7018, %7017
  %7020 = icmp eq i32 %7019, 2
  %7021 = zext i1 %7020 to i8
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7021, i8* %7022, align 1
  store %struct.Memory* %loadMem_48cc08, %struct.Memory** %MEMORY
  %loadMem_48cc0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7024 = getelementptr inbounds %struct.GPR, %struct.GPR* %7023, i32 0, i32 33
  %7025 = getelementptr inbounds %struct.Reg, %struct.Reg* %7024, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %7025 to i64*
  %7026 = load i64, i64* %PC.i857
  %7027 = add i64 %7026, 15
  %7028 = load i64, i64* %PC.i857
  %7029 = add i64 %7028, 6
  %7030 = load i64, i64* %PC.i857
  %7031 = add i64 %7030, 6
  store i64 %7031, i64* %PC.i857
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7033 = load i8, i8* %7032, align 1
  store i8 %7033, i8* %BRANCH_TAKEN, align 1
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7035 = icmp ne i8 %7033, 0
  %7036 = select i1 %7035, i64 %7027, i64 %7029
  store i64 %7036, i64* %7034, align 8
  store %struct.Memory* %loadMem_48cc0f, %struct.Memory** %MEMORY
  %loadBr_48cc0f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cc0f = icmp eq i8 %loadBr_48cc0f, 1
  br i1 %cmpBr_48cc0f, label %block_.L_48cc1e, label %block_48cc15

block_48cc15:                                     ; preds = %block_.L_48cc00
  %loadMem_48cc15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7038 = getelementptr inbounds %struct.GPR, %struct.GPR* %7037, i32 0, i32 33
  %7039 = getelementptr inbounds %struct.Reg, %struct.Reg* %7038, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %7039 to i64*
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7041 = getelementptr inbounds %struct.GPR, %struct.GPR* %7040, i32 0, i32 11
  %7042 = getelementptr inbounds %struct.Reg, %struct.Reg* %7041, i32 0, i32 0
  %RDI.i855 = bitcast %union.anon* %7042 to i64*
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7044 = getelementptr inbounds %struct.GPR, %struct.GPR* %7043, i32 0, i32 15
  %7045 = getelementptr inbounds %struct.Reg, %struct.Reg* %7044, i32 0, i32 0
  %RBP.i856 = bitcast %union.anon* %7045 to i64*
  %7046 = load i64, i64* %RBP.i856
  %7047 = sub i64 %7046, 108
  %7048 = load i64, i64* %PC.i854
  %7049 = add i64 %7048, 4
  store i64 %7049, i64* %PC.i854
  store i64 %7047, i64* %RDI.i855, align 8
  store %struct.Memory* %loadMem_48cc15, %struct.Memory** %MEMORY
  %loadMem1_48cc19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7051 = getelementptr inbounds %struct.GPR, %struct.GPR* %7050, i32 0, i32 33
  %7052 = getelementptr inbounds %struct.Reg, %struct.Reg* %7051, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %7052 to i64*
  %7053 = load i64, i64* %PC.i853
  %7054 = add i64 %7053, -308953
  %7055 = load i64, i64* %PC.i853
  %7056 = add i64 %7055, 5
  %7057 = load i64, i64* %PC.i853
  %7058 = add i64 %7057, 5
  store i64 %7058, i64* %PC.i853
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7060 = load i64, i64* %7059, align 8
  %7061 = add i64 %7060, -8
  %7062 = inttoptr i64 %7061 to i64*
  store i64 %7056, i64* %7062
  store i64 %7061, i64* %7059, align 8
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7054, i64* %7063, align 8
  store %struct.Memory* %loadMem1_48cc19, %struct.Memory** %MEMORY
  %loadMem2_48cc19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48cc19 = load i64, i64* %3
  %call2_48cc19 = call %struct.Memory* @sub_441540.ChromaResidualCoding(%struct.State* %0, i64 %loadPC_48cc19, %struct.Memory* %loadMem2_48cc19)
  store %struct.Memory* %call2_48cc19, %struct.Memory** %MEMORY
  br label %block_.L_48cc1e

block_.L_48cc1e:                                  ; preds = %block_48cc15, %block_.L_48cc00, %block_48cbf6, %block_48cbec, %block_48cbe2
  %loadMem_48cc1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7065 = getelementptr inbounds %struct.GPR, %struct.GPR* %7064, i32 0, i32 33
  %7066 = getelementptr inbounds %struct.Reg, %struct.Reg* %7065, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %7066 to i64*
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7068 = getelementptr inbounds %struct.GPR, %struct.GPR* %7067, i32 0, i32 15
  %7069 = getelementptr inbounds %struct.Reg, %struct.Reg* %7068, i32 0, i32 0
  %RBP.i852 = bitcast %union.anon* %7069 to i64*
  %7070 = load i64, i64* %RBP.i852
  %7071 = sub i64 %7070, 20
  %7072 = load i64, i64* %PC.i851
  %7073 = add i64 %7072, 4
  store i64 %7073, i64* %PC.i851
  %7074 = inttoptr i64 %7071 to i32*
  %7075 = load i32, i32* %7074
  %7076 = sub i32 %7075, 10
  %7077 = icmp ult i32 %7075, 10
  %7078 = zext i1 %7077 to i8
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7078, i8* %7079, align 1
  %7080 = and i32 %7076, 255
  %7081 = call i32 @llvm.ctpop.i32(i32 %7080)
  %7082 = trunc i32 %7081 to i8
  %7083 = and i8 %7082, 1
  %7084 = xor i8 %7083, 1
  %7085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7084, i8* %7085, align 1
  %7086 = xor i32 %7075, 10
  %7087 = xor i32 %7086, %7076
  %7088 = lshr i32 %7087, 4
  %7089 = trunc i32 %7088 to i8
  %7090 = and i8 %7089, 1
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7090, i8* %7091, align 1
  %7092 = icmp eq i32 %7076, 0
  %7093 = zext i1 %7092 to i8
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7093, i8* %7094, align 1
  %7095 = lshr i32 %7076, 31
  %7096 = trunc i32 %7095 to i8
  %7097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7096, i8* %7097, align 1
  %7098 = lshr i32 %7075, 31
  %7099 = xor i32 %7095, %7098
  %7100 = add i32 %7099, %7098
  %7101 = icmp eq i32 %7100, 2
  %7102 = zext i1 %7101 to i8
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7102, i8* %7103, align 1
  store %struct.Memory* %loadMem_48cc1e, %struct.Memory** %MEMORY
  %loadMem_48cc22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7105 = getelementptr inbounds %struct.GPR, %struct.GPR* %7104, i32 0, i32 33
  %7106 = getelementptr inbounds %struct.Reg, %struct.Reg* %7105, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %7106 to i64*
  %7107 = load i64, i64* %PC.i850
  %7108 = add i64 %7107, 38
  %7109 = load i64, i64* %PC.i850
  %7110 = add i64 %7109, 6
  %7111 = load i64, i64* %PC.i850
  %7112 = add i64 %7111, 6
  store i64 %7112, i64* %PC.i850
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7114 = load i8, i8* %7113, align 1
  %7115 = icmp eq i8 %7114, 0
  %7116 = zext i1 %7115 to i8
  store i8 %7116, i8* %BRANCH_TAKEN, align 1
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7118 = select i1 %7115, i64 %7108, i64 %7110
  store i64 %7118, i64* %7117, align 8
  store %struct.Memory* %loadMem_48cc22, %struct.Memory** %MEMORY
  %loadBr_48cc22 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cc22 = icmp eq i8 %loadBr_48cc22, 1
  br i1 %cmpBr_48cc22, label %block_.L_48cc48, label %block_48cc28

block_48cc28:                                     ; preds = %block_.L_48cc1e
  %loadMem_48cc28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7120 = getelementptr inbounds %struct.GPR, %struct.GPR* %7119, i32 0, i32 33
  %7121 = getelementptr inbounds %struct.Reg, %struct.Reg* %7120, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %7121 to i64*
  %7122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7123 = getelementptr inbounds %struct.GPR, %struct.GPR* %7122, i32 0, i32 1
  %7124 = getelementptr inbounds %struct.Reg, %struct.Reg* %7123, i32 0, i32 0
  %RAX.i848 = bitcast %union.anon* %7124 to i64*
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7126 = getelementptr inbounds %struct.GPR, %struct.GPR* %7125, i32 0, i32 15
  %7127 = getelementptr inbounds %struct.Reg, %struct.Reg* %7126, i32 0, i32 0
  %RBP.i849 = bitcast %union.anon* %7127 to i64*
  %7128 = load i64, i64* %RBP.i849
  %7129 = sub i64 %7128, 80
  %7130 = load i64, i64* %PC.i847
  %7131 = add i64 %7130, 4
  store i64 %7131, i64* %PC.i847
  %7132 = inttoptr i64 %7129 to i64*
  %7133 = load i64, i64* %7132
  store i64 %7133, i64* %RAX.i848, align 8
  store %struct.Memory* %loadMem_48cc28, %struct.Memory** %MEMORY
  %loadMem_48cc2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7135 = getelementptr inbounds %struct.GPR, %struct.GPR* %7134, i32 0, i32 33
  %7136 = getelementptr inbounds %struct.Reg, %struct.Reg* %7135, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %7136 to i64*
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7138 = getelementptr inbounds %struct.GPR, %struct.GPR* %7137, i32 0, i32 1
  %7139 = getelementptr inbounds %struct.Reg, %struct.Reg* %7138, i32 0, i32 0
  %RAX.i845 = bitcast %union.anon* %7139 to i64*
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7141 = getelementptr inbounds %struct.GPR, %struct.GPR* %7140, i32 0, i32 11
  %7142 = getelementptr inbounds %struct.Reg, %struct.Reg* %7141, i32 0, i32 0
  %RDI.i846 = bitcast %union.anon* %7142 to i64*
  %7143 = load i64, i64* %RAX.i845
  %7144 = add i64 %7143, 460
  %7145 = load i64, i64* %PC.i844
  %7146 = add i64 %7145, 6
  store i64 %7146, i64* %PC.i844
  %7147 = inttoptr i64 %7144 to i32*
  %7148 = load i32, i32* %7147
  %7149 = zext i32 %7148 to i64
  store i64 %7149, i64* %RDI.i846, align 8
  store %struct.Memory* %loadMem_48cc2c, %struct.Memory** %MEMORY
  %loadMem_48cc32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7151 = getelementptr inbounds %struct.GPR, %struct.GPR* %7150, i32 0, i32 33
  %7152 = getelementptr inbounds %struct.Reg, %struct.Reg* %7151, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %7152 to i64*
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7154 = getelementptr inbounds %struct.GPR, %struct.GPR* %7153, i32 0, i32 9
  %7155 = getelementptr inbounds %struct.Reg, %struct.Reg* %7154, i32 0, i32 0
  %RSI.i842 = bitcast %union.anon* %7155 to i64*
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7157 = getelementptr inbounds %struct.GPR, %struct.GPR* %7156, i32 0, i32 15
  %7158 = getelementptr inbounds %struct.Reg, %struct.Reg* %7157, i32 0, i32 0
  %RBP.i843 = bitcast %union.anon* %7158 to i64*
  %7159 = load i64, i64* %RBP.i843
  %7160 = sub i64 %7159, 36
  %7161 = load i64, i64* %PC.i841
  %7162 = add i64 %7161, 3
  store i64 %7162, i64* %PC.i841
  %7163 = inttoptr i64 %7160 to i32*
  %7164 = load i32, i32* %7163
  %7165 = zext i32 %7164 to i64
  store i64 %7165, i64* %RSI.i842, align 8
  store %struct.Memory* %loadMem_48cc32, %struct.Memory** %MEMORY
  %loadMem1_48cc35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7167 = getelementptr inbounds %struct.GPR, %struct.GPR* %7166, i32 0, i32 33
  %7168 = getelementptr inbounds %struct.Reg, %struct.Reg* %7167, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %7168 to i64*
  %7169 = load i64, i64* %PC.i840
  %7170 = add i64 %7169, -19525
  %7171 = load i64, i64* %PC.i840
  %7172 = add i64 %7171, 5
  %7173 = load i64, i64* %PC.i840
  %7174 = add i64 %7173, 5
  store i64 %7174, i64* %PC.i840
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7176 = load i64, i64* %7175, align 8
  %7177 = add i64 %7176, -8
  %7178 = inttoptr i64 %7177 to i64*
  store i64 %7172, i64* %7178
  store i64 %7177, i64* %7175, align 8
  %7179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7170, i64* %7179, align 8
  store %struct.Memory* %loadMem1_48cc35, %struct.Memory** %MEMORY
  %loadMem2_48cc35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48cc35 = load i64, i64* %3
  %call2_48cc35 = call %struct.Memory* @sub_487ff0.I16Offset(%struct.State* %0, i64 %loadPC_48cc35, %struct.Memory* %loadMem2_48cc35)
  store %struct.Memory* %call2_48cc35, %struct.Memory** %MEMORY
  %loadMem_48cc3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 33
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %7182 to i64*
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7184 = getelementptr inbounds %struct.GPR, %struct.GPR* %7183, i32 0, i32 5
  %7185 = getelementptr inbounds %struct.Reg, %struct.Reg* %7184, i32 0, i32 0
  %RCX.i839 = bitcast %union.anon* %7185 to i64*
  %7186 = load i64, i64* %PC.i838
  %7187 = add i64 %7186, 8
  store i64 %7187, i64* %PC.i838
  %7188 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7188, i64* %RCX.i839, align 8
  store %struct.Memory* %loadMem_48cc3a, %struct.Memory** %MEMORY
  %loadMem_48cc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7190 = getelementptr inbounds %struct.GPR, %struct.GPR* %7189, i32 0, i32 33
  %7191 = getelementptr inbounds %struct.Reg, %struct.Reg* %7190, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %7191 to i64*
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7193 = getelementptr inbounds %struct.GPR, %struct.GPR* %7192, i32 0, i32 1
  %7194 = getelementptr inbounds %struct.Reg, %struct.Reg* %7193, i32 0, i32 0
  %EAX.i836 = bitcast %union.anon* %7194 to i32*
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7196 = getelementptr inbounds %struct.GPR, %struct.GPR* %7195, i32 0, i32 5
  %7197 = getelementptr inbounds %struct.Reg, %struct.Reg* %7196, i32 0, i32 0
  %RCX.i837 = bitcast %union.anon* %7197 to i64*
  %7198 = load i64, i64* %RCX.i837
  %7199 = add i64 %7198, 72380
  %7200 = load i32, i32* %EAX.i836
  %7201 = zext i32 %7200 to i64
  %7202 = load i64, i64* %PC.i835
  %7203 = add i64 %7202, 6
  store i64 %7203, i64* %PC.i835
  %7204 = inttoptr i64 %7199 to i32*
  store i32 %7200, i32* %7204
  store %struct.Memory* %loadMem_48cc42, %struct.Memory** %MEMORY
  br label %block_.L_48cc48

block_.L_48cc48:                                  ; preds = %block_48cc28, %block_.L_48cc1e
  %loadMem_48cc48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7206 = getelementptr inbounds %struct.GPR, %struct.GPR* %7205, i32 0, i32 33
  %7207 = getelementptr inbounds %struct.Reg, %struct.Reg* %7206, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %7207 to i64*
  %7208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7209 = getelementptr inbounds %struct.GPR, %struct.GPR* %7208, i32 0, i32 1
  %7210 = getelementptr inbounds %struct.Reg, %struct.Reg* %7209, i32 0, i32 0
  %RAX.i834 = bitcast %union.anon* %7210 to i64*
  %7211 = load i64, i64* %PC.i833
  %7212 = add i64 %7211, 8
  store i64 %7212, i64* %PC.i833
  %7213 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7213, i64* %RAX.i834, align 8
  store %struct.Memory* %loadMem_48cc48, %struct.Memory** %MEMORY
  %loadMem_48cc50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7215 = getelementptr inbounds %struct.GPR, %struct.GPR* %7214, i32 0, i32 33
  %7216 = getelementptr inbounds %struct.Reg, %struct.Reg* %7215, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %7216 to i64*
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7218 = getelementptr inbounds %struct.GPR, %struct.GPR* %7217, i32 0, i32 1
  %7219 = getelementptr inbounds %struct.Reg, %struct.Reg* %7218, i32 0, i32 0
  %RAX.i832 = bitcast %union.anon* %7219 to i64*
  %7220 = load i64, i64* %RAX.i832
  %7221 = add i64 %7220, 2464
  %7222 = load i64, i64* %PC.i831
  %7223 = add i64 %7222, 7
  store i64 %7223, i64* %PC.i831
  %7224 = inttoptr i64 %7221 to i32*
  %7225 = load i32, i32* %7224
  %7226 = sub i32 %7225, 2
  %7227 = icmp ult i32 %7225, 2
  %7228 = zext i1 %7227 to i8
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7228, i8* %7229, align 1
  %7230 = and i32 %7226, 255
  %7231 = call i32 @llvm.ctpop.i32(i32 %7230)
  %7232 = trunc i32 %7231 to i8
  %7233 = and i8 %7232, 1
  %7234 = xor i8 %7233, 1
  %7235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7234, i8* %7235, align 1
  %7236 = xor i32 %7225, 2
  %7237 = xor i32 %7236, %7226
  %7238 = lshr i32 %7237, 4
  %7239 = trunc i32 %7238 to i8
  %7240 = and i8 %7239, 1
  %7241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7240, i8* %7241, align 1
  %7242 = icmp eq i32 %7226, 0
  %7243 = zext i1 %7242 to i8
  %7244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7243, i8* %7244, align 1
  %7245 = lshr i32 %7226, 31
  %7246 = trunc i32 %7245 to i8
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7246, i8* %7247, align 1
  %7248 = lshr i32 %7225, 31
  %7249 = xor i32 %7245, %7248
  %7250 = add i32 %7249, %7248
  %7251 = icmp eq i32 %7250, 2
  %7252 = zext i1 %7251 to i8
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7252, i8* %7253, align 1
  store %struct.Memory* %loadMem_48cc50, %struct.Memory** %MEMORY
  %loadMem_48cc57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7255 = getelementptr inbounds %struct.GPR, %struct.GPR* %7254, i32 0, i32 33
  %7256 = getelementptr inbounds %struct.Reg, %struct.Reg* %7255, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %7256 to i64*
  %7257 = load i64, i64* %PC.i830
  %7258 = add i64 %7257, 354
  %7259 = load i64, i64* %PC.i830
  %7260 = add i64 %7259, 6
  %7261 = load i64, i64* %PC.i830
  %7262 = add i64 %7261, 6
  store i64 %7262, i64* %PC.i830
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7264 = load i8, i8* %7263, align 1
  %7265 = icmp eq i8 %7264, 0
  %7266 = zext i1 %7265 to i8
  store i8 %7266, i8* %BRANCH_TAKEN, align 1
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7268 = select i1 %7265, i64 %7258, i64 %7260
  store i64 %7268, i64* %7267, align 8
  store %struct.Memory* %loadMem_48cc57, %struct.Memory** %MEMORY
  %loadBr_48cc57 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cc57 = icmp eq i8 %loadBr_48cc57, 1
  br i1 %cmpBr_48cc57, label %block_.L_48cdb9, label %block_48cc5d

block_48cc5d:                                     ; preds = %block_.L_48cc48
  %loadMem_48cc5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7270 = getelementptr inbounds %struct.GPR, %struct.GPR* %7269, i32 0, i32 33
  %7271 = getelementptr inbounds %struct.Reg, %struct.Reg* %7270, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %7271 to i64*
  %7272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7273 = getelementptr inbounds %struct.GPR, %struct.GPR* %7272, i32 0, i32 1
  %7274 = getelementptr inbounds %struct.Reg, %struct.Reg* %7273, i32 0, i32 0
  %RAX.i829 = bitcast %union.anon* %7274 to i64*
  %7275 = load i64, i64* %PC.i828
  %7276 = add i64 %7275, 8
  store i64 %7276, i64* %PC.i828
  %7277 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7277, i64* %RAX.i829, align 8
  store %struct.Memory* %loadMem_48cc5d, %struct.Memory** %MEMORY
  %loadMem_48cc65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7279 = getelementptr inbounds %struct.GPR, %struct.GPR* %7278, i32 0, i32 33
  %7280 = getelementptr inbounds %struct.Reg, %struct.Reg* %7279, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %7280 to i64*
  %7281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7282 = getelementptr inbounds %struct.GPR, %struct.GPR* %7281, i32 0, i32 1
  %7283 = getelementptr inbounds %struct.Reg, %struct.Reg* %7282, i32 0, i32 0
  %RAX.i827 = bitcast %union.anon* %7283 to i64*
  %7284 = load i64, i64* %RAX.i827
  %7285 = add i64 %7284, 24
  %7286 = load i64, i64* %PC.i826
  %7287 = add i64 %7286, 4
  store i64 %7287, i64* %PC.i826
  %7288 = inttoptr i64 %7285 to i32*
  %7289 = load i32, i32* %7288
  %7290 = sub i32 %7289, 1
  %7291 = icmp ult i32 %7289, 1
  %7292 = zext i1 %7291 to i8
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7292, i8* %7293, align 1
  %7294 = and i32 %7290, 255
  %7295 = call i32 @llvm.ctpop.i32(i32 %7294)
  %7296 = trunc i32 %7295 to i8
  %7297 = and i8 %7296, 1
  %7298 = xor i8 %7297, 1
  %7299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7298, i8* %7299, align 1
  %7300 = xor i32 %7289, 1
  %7301 = xor i32 %7300, %7290
  %7302 = lshr i32 %7301, 4
  %7303 = trunc i32 %7302 to i8
  %7304 = and i8 %7303, 1
  %7305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7304, i8* %7305, align 1
  %7306 = icmp eq i32 %7290, 0
  %7307 = zext i1 %7306 to i8
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7307, i8* %7308, align 1
  %7309 = lshr i32 %7290, 31
  %7310 = trunc i32 %7309 to i8
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7310, i8* %7311, align 1
  %7312 = lshr i32 %7289, 31
  %7313 = xor i32 %7309, %7312
  %7314 = add i32 %7313, %7312
  %7315 = icmp eq i32 %7314, 2
  %7316 = zext i1 %7315 to i8
  %7317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7316, i8* %7317, align 1
  store %struct.Memory* %loadMem_48cc65, %struct.Memory** %MEMORY
  %loadMem_48cc69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7319 = getelementptr inbounds %struct.GPR, %struct.GPR* %7318, i32 0, i32 33
  %7320 = getelementptr inbounds %struct.Reg, %struct.Reg* %7319, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %7320 to i64*
  %7321 = load i64, i64* %PC.i825
  %7322 = add i64 %7321, 336
  %7323 = load i64, i64* %PC.i825
  %7324 = add i64 %7323, 6
  %7325 = load i64, i64* %PC.i825
  %7326 = add i64 %7325, 6
  store i64 %7326, i64* %PC.i825
  %7327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7328 = load i8, i8* %7327, align 1
  store i8 %7328, i8* %BRANCH_TAKEN, align 1
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7330 = icmp ne i8 %7328, 0
  %7331 = select i1 %7330, i64 %7322, i64 %7324
  store i64 %7331, i64* %7329, align 8
  store %struct.Memory* %loadMem_48cc69, %struct.Memory** %MEMORY
  %loadBr_48cc69 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cc69 = icmp eq i8 %loadBr_48cc69, 1
  br i1 %cmpBr_48cc69, label %block_.L_48cdb9, label %block_48cc6f

block_48cc6f:                                     ; preds = %block_48cc5d
  %loadMem_48cc6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7333 = getelementptr inbounds %struct.GPR, %struct.GPR* %7332, i32 0, i32 33
  %7334 = getelementptr inbounds %struct.Reg, %struct.Reg* %7333, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %7334 to i64*
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 15
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %RBP.i824 = bitcast %union.anon* %7337 to i64*
  %7338 = load i64, i64* %RBP.i824
  %7339 = sub i64 %7338, 48
  %7340 = load i64, i64* %PC.i823
  %7341 = add i64 %7340, 7
  store i64 %7341, i64* %PC.i823
  %7342 = inttoptr i64 %7339 to i32*
  store i32 0, i32* %7342
  store %struct.Memory* %loadMem_48cc6f, %struct.Memory** %MEMORY
  br label %block_.L_48cc76

block_.L_48cc76:                                  ; preds = %block_.L_48cd79, %block_48cc6f
  %loadMem_48cc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7344 = getelementptr inbounds %struct.GPR, %struct.GPR* %7343, i32 0, i32 33
  %7345 = getelementptr inbounds %struct.Reg, %struct.Reg* %7344, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %7345 to i64*
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7347 = getelementptr inbounds %struct.GPR, %struct.GPR* %7346, i32 0, i32 1
  %7348 = getelementptr inbounds %struct.Reg, %struct.Reg* %7347, i32 0, i32 0
  %RAX.i821 = bitcast %union.anon* %7348 to i64*
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7350 = getelementptr inbounds %struct.GPR, %struct.GPR* %7349, i32 0, i32 15
  %7351 = getelementptr inbounds %struct.Reg, %struct.Reg* %7350, i32 0, i32 0
  %RBP.i822 = bitcast %union.anon* %7351 to i64*
  %7352 = load i64, i64* %RBP.i822
  %7353 = sub i64 %7352, 48
  %7354 = load i64, i64* %PC.i820
  %7355 = add i64 %7354, 3
  store i64 %7355, i64* %PC.i820
  %7356 = inttoptr i64 %7353 to i32*
  %7357 = load i32, i32* %7356
  %7358 = zext i32 %7357 to i64
  store i64 %7358, i64* %RAX.i821, align 8
  store %struct.Memory* %loadMem_48cc76, %struct.Memory** %MEMORY
  %loadMem_48cc79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7360 = getelementptr inbounds %struct.GPR, %struct.GPR* %7359, i32 0, i32 33
  %7361 = getelementptr inbounds %struct.Reg, %struct.Reg* %7360, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %7361 to i64*
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7363 = getelementptr inbounds %struct.GPR, %struct.GPR* %7362, i32 0, i32 5
  %7364 = getelementptr inbounds %struct.Reg, %struct.Reg* %7363, i32 0, i32 0
  %RCX.i819 = bitcast %union.anon* %7364 to i64*
  %7365 = load i64, i64* %PC.i818
  %7366 = add i64 %7365, 8
  store i64 %7366, i64* %PC.i818
  %7367 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7367, i64* %RCX.i819, align 8
  store %struct.Memory* %loadMem_48cc79, %struct.Memory** %MEMORY
  %loadMem_48cc81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7369 = getelementptr inbounds %struct.GPR, %struct.GPR* %7368, i32 0, i32 33
  %7370 = getelementptr inbounds %struct.Reg, %struct.Reg* %7369, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %7370 to i64*
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 1
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %EAX.i816 = bitcast %union.anon* %7373 to i32*
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7375 = getelementptr inbounds %struct.GPR, %struct.GPR* %7374, i32 0, i32 5
  %7376 = getelementptr inbounds %struct.Reg, %struct.Reg* %7375, i32 0, i32 0
  %RCX.i817 = bitcast %union.anon* %7376 to i64*
  %7377 = load i32, i32* %EAX.i816
  %7378 = zext i32 %7377 to i64
  %7379 = load i64, i64* %RCX.i817
  %7380 = add i64 %7379, 2904
  %7381 = load i64, i64* %PC.i815
  %7382 = add i64 %7381, 6
  store i64 %7382, i64* %PC.i815
  %7383 = inttoptr i64 %7380 to i32*
  %7384 = load i32, i32* %7383
  %7385 = sub i32 %7377, %7384
  %7386 = icmp ult i32 %7377, %7384
  %7387 = zext i1 %7386 to i8
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7387, i8* %7388, align 1
  %7389 = and i32 %7385, 255
  %7390 = call i32 @llvm.ctpop.i32(i32 %7389)
  %7391 = trunc i32 %7390 to i8
  %7392 = and i8 %7391, 1
  %7393 = xor i8 %7392, 1
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7393, i8* %7394, align 1
  %7395 = xor i32 %7384, %7377
  %7396 = xor i32 %7395, %7385
  %7397 = lshr i32 %7396, 4
  %7398 = trunc i32 %7397 to i8
  %7399 = and i8 %7398, 1
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7399, i8* %7400, align 1
  %7401 = icmp eq i32 %7385, 0
  %7402 = zext i1 %7401 to i8
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7402, i8* %7403, align 1
  %7404 = lshr i32 %7385, 31
  %7405 = trunc i32 %7404 to i8
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7405, i8* %7406, align 1
  %7407 = lshr i32 %7377, 31
  %7408 = lshr i32 %7384, 31
  %7409 = xor i32 %7408, %7407
  %7410 = xor i32 %7404, %7407
  %7411 = add i32 %7410, %7409
  %7412 = icmp eq i32 %7411, 2
  %7413 = zext i1 %7412 to i8
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7413, i8* %7414, align 1
  store %struct.Memory* %loadMem_48cc81, %struct.Memory** %MEMORY
  %loadMem_48cc87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7416 = getelementptr inbounds %struct.GPR, %struct.GPR* %7415, i32 0, i32 33
  %7417 = getelementptr inbounds %struct.Reg, %struct.Reg* %7416, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %7417 to i64*
  %7418 = load i64, i64* %PC.i814
  %7419 = add i64 %7418, 256
  %7420 = load i64, i64* %PC.i814
  %7421 = add i64 %7420, 6
  %7422 = load i64, i64* %PC.i814
  %7423 = add i64 %7422, 6
  store i64 %7423, i64* %PC.i814
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7425 = load i8, i8* %7424, align 1
  %7426 = icmp ne i8 %7425, 0
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7428 = load i8, i8* %7427, align 1
  %7429 = icmp ne i8 %7428, 0
  %7430 = xor i1 %7426, %7429
  %7431 = xor i1 %7430, true
  %7432 = zext i1 %7431 to i8
  store i8 %7432, i8* %BRANCH_TAKEN, align 1
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7434 = select i1 %7430, i64 %7421, i64 %7419
  store i64 %7434, i64* %7433, align 8
  store %struct.Memory* %loadMem_48cc87, %struct.Memory** %MEMORY
  %loadBr_48cc87 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cc87 = icmp eq i8 %loadBr_48cc87, 1
  br i1 %cmpBr_48cc87, label %block_.L_48cd87, label %block_48cc8d

block_48cc8d:                                     ; preds = %block_.L_48cc76
  %loadMem_48cc8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7436 = getelementptr inbounds %struct.GPR, %struct.GPR* %7435, i32 0, i32 33
  %7437 = getelementptr inbounds %struct.Reg, %struct.Reg* %7436, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %7437 to i64*
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7439 = getelementptr inbounds %struct.GPR, %struct.GPR* %7438, i32 0, i32 11
  %7440 = getelementptr inbounds %struct.Reg, %struct.Reg* %7439, i32 0, i32 0
  %RDI.i812 = bitcast %union.anon* %7440 to i64*
  %7441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7442 = getelementptr inbounds %struct.GPR, %struct.GPR* %7441, i32 0, i32 15
  %7443 = getelementptr inbounds %struct.Reg, %struct.Reg* %7442, i32 0, i32 0
  %RBP.i813 = bitcast %union.anon* %7443 to i64*
  %7444 = load i64, i64* %RBP.i813
  %7445 = sub i64 %7444, 48
  %7446 = load i64, i64* %PC.i811
  %7447 = add i64 %7446, 3
  store i64 %7447, i64* %PC.i811
  %7448 = inttoptr i64 %7445 to i32*
  %7449 = load i32, i32* %7448
  %7450 = zext i32 %7449 to i64
  store i64 %7450, i64* %RDI.i812, align 8
  store %struct.Memory* %loadMem_48cc8d, %struct.Memory** %MEMORY
  %loadMem_48cc90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7452 = getelementptr inbounds %struct.GPR, %struct.GPR* %7451, i32 0, i32 33
  %7453 = getelementptr inbounds %struct.Reg, %struct.Reg* %7452, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %7453 to i64*
  %7454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7455 = getelementptr inbounds %struct.GPR, %struct.GPR* %7454, i32 0, i32 9
  %7456 = getelementptr inbounds %struct.Reg, %struct.Reg* %7455, i32 0, i32 0
  %RSI.i809 = bitcast %union.anon* %7456 to i64*
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7458 = getelementptr inbounds %struct.GPR, %struct.GPR* %7457, i32 0, i32 15
  %7459 = getelementptr inbounds %struct.Reg, %struct.Reg* %7458, i32 0, i32 0
  %RBP.i810 = bitcast %union.anon* %7459 to i64*
  %7460 = load i64, i64* %RBP.i810
  %7461 = sub i64 %7460, 80
  %7462 = load i64, i64* %PC.i808
  %7463 = add i64 %7462, 4
  store i64 %7463, i64* %PC.i808
  %7464 = inttoptr i64 %7461 to i64*
  %7465 = load i64, i64* %7464
  store i64 %7465, i64* %RSI.i809, align 8
  store %struct.Memory* %loadMem_48cc90, %struct.Memory** %MEMORY
  %loadMem1_48cc94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7467 = getelementptr inbounds %struct.GPR, %struct.GPR* %7466, i32 0, i32 33
  %7468 = getelementptr inbounds %struct.Reg, %struct.Reg* %7467, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %7468 to i64*
  %7469 = load i64, i64* %PC.i807
  %7470 = add i64 %7469, -459380
  %7471 = load i64, i64* %PC.i807
  %7472 = add i64 %7471, 5
  %7473 = load i64, i64* %PC.i807
  %7474 = add i64 %7473, 5
  store i64 %7474, i64* %PC.i807
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7476 = load i64, i64* %7475, align 8
  %7477 = add i64 %7476, -8
  %7478 = inttoptr i64 %7477 to i64*
  store i64 %7472, i64* %7478
  store i64 %7477, i64* %7475, align 8
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7470, i64* %7479, align 8
  store %struct.Memory* %loadMem1_48cc94, %struct.Memory** %MEMORY
  %loadMem2_48cc94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48cc94 = load i64, i64* %3
  %call2_48cc94 = call %struct.Memory* @sub_41ca20.decode_one_mb(%struct.State* %0, i64 %loadPC_48cc94, %struct.Memory* %loadMem2_48cc94)
  store %struct.Memory* %call2_48cc94, %struct.Memory** %MEMORY
  %loadMem_48cc99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7481 = getelementptr inbounds %struct.GPR, %struct.GPR* %7480, i32 0, i32 33
  %7482 = getelementptr inbounds %struct.Reg, %struct.Reg* %7481, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %7482 to i64*
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7484 = getelementptr inbounds %struct.GPR, %struct.GPR* %7483, i32 0, i32 15
  %7485 = getelementptr inbounds %struct.Reg, %struct.Reg* %7484, i32 0, i32 0
  %RBP.i806 = bitcast %union.anon* %7485 to i64*
  %7486 = load i64, i64* %RBP.i806
  %7487 = sub i64 %7486, 44
  %7488 = load i64, i64* %PC.i805
  %7489 = add i64 %7488, 7
  store i64 %7489, i64* %PC.i805
  %7490 = inttoptr i64 %7487 to i32*
  store i32 0, i32* %7490
  store %struct.Memory* %loadMem_48cc99, %struct.Memory** %MEMORY
  br label %block_.L_48cca0

block_.L_48cca0:                                  ; preds = %block_.L_48cd66, %block_48cc8d
  %loadMem_48cca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7492 = getelementptr inbounds %struct.GPR, %struct.GPR* %7491, i32 0, i32 33
  %7493 = getelementptr inbounds %struct.Reg, %struct.Reg* %7492, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %7493 to i64*
  %7494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7495 = getelementptr inbounds %struct.GPR, %struct.GPR* %7494, i32 0, i32 15
  %7496 = getelementptr inbounds %struct.Reg, %struct.Reg* %7495, i32 0, i32 0
  %RBP.i804 = bitcast %union.anon* %7496 to i64*
  %7497 = load i64, i64* %RBP.i804
  %7498 = sub i64 %7497, 44
  %7499 = load i64, i64* %PC.i803
  %7500 = add i64 %7499, 4
  store i64 %7500, i64* %PC.i803
  %7501 = inttoptr i64 %7498 to i32*
  %7502 = load i32, i32* %7501
  %7503 = sub i32 %7502, 16
  %7504 = icmp ult i32 %7502, 16
  %7505 = zext i1 %7504 to i8
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7505, i8* %7506, align 1
  %7507 = and i32 %7503, 255
  %7508 = call i32 @llvm.ctpop.i32(i32 %7507)
  %7509 = trunc i32 %7508 to i8
  %7510 = and i8 %7509, 1
  %7511 = xor i8 %7510, 1
  %7512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7511, i8* %7512, align 1
  %7513 = xor i32 %7502, 16
  %7514 = xor i32 %7513, %7503
  %7515 = lshr i32 %7514, 4
  %7516 = trunc i32 %7515 to i8
  %7517 = and i8 %7516, 1
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7517, i8* %7518, align 1
  %7519 = icmp eq i32 %7503, 0
  %7520 = zext i1 %7519 to i8
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7520, i8* %7521, align 1
  %7522 = lshr i32 %7503, 31
  %7523 = trunc i32 %7522 to i8
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7523, i8* %7524, align 1
  %7525 = lshr i32 %7502, 31
  %7526 = xor i32 %7522, %7525
  %7527 = add i32 %7526, %7525
  %7528 = icmp eq i32 %7527, 2
  %7529 = zext i1 %7528 to i8
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7529, i8* %7530, align 1
  store %struct.Memory* %loadMem_48cca0, %struct.Memory** %MEMORY
  %loadMem_48cca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7532 = getelementptr inbounds %struct.GPR, %struct.GPR* %7531, i32 0, i32 33
  %7533 = getelementptr inbounds %struct.Reg, %struct.Reg* %7532, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %7533 to i64*
  %7534 = load i64, i64* %PC.i802
  %7535 = add i64 %7534, 208
  %7536 = load i64, i64* %PC.i802
  %7537 = add i64 %7536, 6
  %7538 = load i64, i64* %PC.i802
  %7539 = add i64 %7538, 6
  store i64 %7539, i64* %PC.i802
  %7540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7541 = load i8, i8* %7540, align 1
  %7542 = icmp ne i8 %7541, 0
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7544 = load i8, i8* %7543, align 1
  %7545 = icmp ne i8 %7544, 0
  %7546 = xor i1 %7542, %7545
  %7547 = xor i1 %7546, true
  %7548 = zext i1 %7547 to i8
  store i8 %7548, i8* %BRANCH_TAKEN, align 1
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7550 = select i1 %7546, i64 %7537, i64 %7535
  store i64 %7550, i64* %7549, align 8
  store %struct.Memory* %loadMem_48cca4, %struct.Memory** %MEMORY
  %loadBr_48cca4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cca4 = icmp eq i8 %loadBr_48cca4, 1
  br i1 %cmpBr_48cca4, label %block_.L_48cd74, label %block_48ccaa

block_48ccaa:                                     ; preds = %block_.L_48cca0
  %loadMem_48ccaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7552 = getelementptr inbounds %struct.GPR, %struct.GPR* %7551, i32 0, i32 33
  %7553 = getelementptr inbounds %struct.Reg, %struct.Reg* %7552, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %7553 to i64*
  %7554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7555 = getelementptr inbounds %struct.GPR, %struct.GPR* %7554, i32 0, i32 1
  %7556 = getelementptr inbounds %struct.Reg, %struct.Reg* %7555, i32 0, i32 0
  %RAX.i801 = bitcast %union.anon* %7556 to i64*
  %7557 = load i64, i64* %PC.i800
  %7558 = add i64 %7557, 8
  store i64 %7558, i64* %PC.i800
  %7559 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7559, i64* %RAX.i801, align 8
  store %struct.Memory* %loadMem_48ccaa, %struct.Memory** %MEMORY
  %loadMem_48ccb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7561 = getelementptr inbounds %struct.GPR, %struct.GPR* %7560, i32 0, i32 33
  %7562 = getelementptr inbounds %struct.Reg, %struct.Reg* %7561, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %7562 to i64*
  %7563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7564 = getelementptr inbounds %struct.GPR, %struct.GPR* %7563, i32 0, i32 1
  %7565 = getelementptr inbounds %struct.Reg, %struct.Reg* %7564, i32 0, i32 0
  %RAX.i798 = bitcast %union.anon* %7565 to i64*
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7567 = getelementptr inbounds %struct.GPR, %struct.GPR* %7566, i32 0, i32 5
  %7568 = getelementptr inbounds %struct.Reg, %struct.Reg* %7567, i32 0, i32 0
  %RCX.i799 = bitcast %union.anon* %7568 to i64*
  %7569 = load i64, i64* %RAX.i798
  %7570 = add i64 %7569, 168
  %7571 = load i64, i64* %PC.i797
  %7572 = add i64 %7571, 6
  store i64 %7572, i64* %PC.i797
  %7573 = inttoptr i64 %7570 to i32*
  %7574 = load i32, i32* %7573
  %7575 = zext i32 %7574 to i64
  store i64 %7575, i64* %RCX.i799, align 8
  store %struct.Memory* %loadMem_48ccb2, %struct.Memory** %MEMORY
  %loadMem_48ccb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7577 = getelementptr inbounds %struct.GPR, %struct.GPR* %7576, i32 0, i32 33
  %7578 = getelementptr inbounds %struct.Reg, %struct.Reg* %7577, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %7578 to i64*
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7580 = getelementptr inbounds %struct.GPR, %struct.GPR* %7579, i32 0, i32 5
  %7581 = getelementptr inbounds %struct.Reg, %struct.Reg* %7580, i32 0, i32 0
  %ECX.i795 = bitcast %union.anon* %7581 to i32*
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7583 = getelementptr inbounds %struct.GPR, %struct.GPR* %7582, i32 0, i32 15
  %7584 = getelementptr inbounds %struct.Reg, %struct.Reg* %7583, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %7584 to i64*
  %7585 = load i64, i64* %RBP.i796
  %7586 = sub i64 %7585, 40
  %7587 = load i32, i32* %ECX.i795
  %7588 = zext i32 %7587 to i64
  %7589 = load i64, i64* %PC.i794
  %7590 = add i64 %7589, 3
  store i64 %7590, i64* %PC.i794
  %7591 = inttoptr i64 %7586 to i32*
  store i32 %7587, i32* %7591
  store %struct.Memory* %loadMem_48ccb8, %struct.Memory** %MEMORY
  br label %block_.L_48ccbb

block_.L_48ccbb:                                  ; preds = %block_48ccd7, %block_48ccaa
  %loadMem_48ccbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7593 = getelementptr inbounds %struct.GPR, %struct.GPR* %7592, i32 0, i32 33
  %7594 = getelementptr inbounds %struct.Reg, %struct.Reg* %7593, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %7594 to i64*
  %7595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7596 = getelementptr inbounds %struct.GPR, %struct.GPR* %7595, i32 0, i32 1
  %7597 = getelementptr inbounds %struct.Reg, %struct.Reg* %7596, i32 0, i32 0
  %RAX.i792 = bitcast %union.anon* %7597 to i64*
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 15
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %7600 to i64*
  %7601 = load i64, i64* %RBP.i793
  %7602 = sub i64 %7601, 40
  %7603 = load i64, i64* %PC.i791
  %7604 = add i64 %7603, 3
  store i64 %7604, i64* %PC.i791
  %7605 = inttoptr i64 %7602 to i32*
  %7606 = load i32, i32* %7605
  %7607 = zext i32 %7606 to i64
  store i64 %7607, i64* %RAX.i792, align 8
  store %struct.Memory* %loadMem_48ccbb, %struct.Memory** %MEMORY
  %loadMem_48ccbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7609 = getelementptr inbounds %struct.GPR, %struct.GPR* %7608, i32 0, i32 33
  %7610 = getelementptr inbounds %struct.Reg, %struct.Reg* %7609, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %7610 to i64*
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7612 = getelementptr inbounds %struct.GPR, %struct.GPR* %7611, i32 0, i32 5
  %7613 = getelementptr inbounds %struct.Reg, %struct.Reg* %7612, i32 0, i32 0
  %RCX.i790 = bitcast %union.anon* %7613 to i64*
  %7614 = load i64, i64* %PC.i789
  %7615 = add i64 %7614, 8
  store i64 %7615, i64* %PC.i789
  %7616 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7616, i64* %RCX.i790, align 8
  store %struct.Memory* %loadMem_48ccbe, %struct.Memory** %MEMORY
  %loadMem_48ccc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7618 = getelementptr inbounds %struct.GPR, %struct.GPR* %7617, i32 0, i32 33
  %7619 = getelementptr inbounds %struct.Reg, %struct.Reg* %7618, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %7619 to i64*
  %7620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7621 = getelementptr inbounds %struct.GPR, %struct.GPR* %7620, i32 0, i32 5
  %7622 = getelementptr inbounds %struct.Reg, %struct.Reg* %7621, i32 0, i32 0
  %RCX.i787 = bitcast %union.anon* %7622 to i64*
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7624 = getelementptr inbounds %struct.GPR, %struct.GPR* %7623, i32 0, i32 7
  %7625 = getelementptr inbounds %struct.Reg, %struct.Reg* %7624, i32 0, i32 0
  %RDX.i788 = bitcast %union.anon* %7625 to i64*
  %7626 = load i64, i64* %RCX.i787
  %7627 = add i64 %7626, 168
  %7628 = load i64, i64* %PC.i786
  %7629 = add i64 %7628, 6
  store i64 %7629, i64* %PC.i786
  %7630 = inttoptr i64 %7627 to i32*
  %7631 = load i32, i32* %7630
  %7632 = zext i32 %7631 to i64
  store i64 %7632, i64* %RDX.i788, align 8
  store %struct.Memory* %loadMem_48ccc6, %struct.Memory** %MEMORY
  %loadMem_48cccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7634 = getelementptr inbounds %struct.GPR, %struct.GPR* %7633, i32 0, i32 33
  %7635 = getelementptr inbounds %struct.Reg, %struct.Reg* %7634, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %7635 to i64*
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7637 = getelementptr inbounds %struct.GPR, %struct.GPR* %7636, i32 0, i32 7
  %7638 = getelementptr inbounds %struct.Reg, %struct.Reg* %7637, i32 0, i32 0
  %RDX.i785 = bitcast %union.anon* %7638 to i64*
  %7639 = load i64, i64* %RDX.i785
  %7640 = load i64, i64* %PC.i784
  %7641 = add i64 %7640, 3
  store i64 %7641, i64* %PC.i784
  %7642 = trunc i64 %7639 to i32
  %7643 = add i32 16, %7642
  %7644 = zext i32 %7643 to i64
  store i64 %7644, i64* %RDX.i785, align 8
  %7645 = icmp ult i32 %7643, %7642
  %7646 = icmp ult i32 %7643, 16
  %7647 = or i1 %7645, %7646
  %7648 = zext i1 %7647 to i8
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7648, i8* %7649, align 1
  %7650 = and i32 %7643, 255
  %7651 = call i32 @llvm.ctpop.i32(i32 %7650)
  %7652 = trunc i32 %7651 to i8
  %7653 = and i8 %7652, 1
  %7654 = xor i8 %7653, 1
  %7655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7654, i8* %7655, align 1
  %7656 = xor i64 16, %7639
  %7657 = trunc i64 %7656 to i32
  %7658 = xor i32 %7657, %7643
  %7659 = lshr i32 %7658, 4
  %7660 = trunc i32 %7659 to i8
  %7661 = and i8 %7660, 1
  %7662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7661, i8* %7662, align 1
  %7663 = icmp eq i32 %7643, 0
  %7664 = zext i1 %7663 to i8
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7664, i8* %7665, align 1
  %7666 = lshr i32 %7643, 31
  %7667 = trunc i32 %7666 to i8
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7667, i8* %7668, align 1
  %7669 = lshr i32 %7642, 31
  %7670 = xor i32 %7666, %7669
  %7671 = add i32 %7670, %7666
  %7672 = icmp eq i32 %7671, 2
  %7673 = zext i1 %7672 to i8
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7673, i8* %7674, align 1
  store %struct.Memory* %loadMem_48cccc, %struct.Memory** %MEMORY
  %loadMem_48cccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7676 = getelementptr inbounds %struct.GPR, %struct.GPR* %7675, i32 0, i32 33
  %7677 = getelementptr inbounds %struct.Reg, %struct.Reg* %7676, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %7677 to i64*
  %7678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7679 = getelementptr inbounds %struct.GPR, %struct.GPR* %7678, i32 0, i32 1
  %7680 = getelementptr inbounds %struct.Reg, %struct.Reg* %7679, i32 0, i32 0
  %EAX.i782 = bitcast %union.anon* %7680 to i32*
  %7681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7682 = getelementptr inbounds %struct.GPR, %struct.GPR* %7681, i32 0, i32 7
  %7683 = getelementptr inbounds %struct.Reg, %struct.Reg* %7682, i32 0, i32 0
  %EDX.i783 = bitcast %union.anon* %7683 to i32*
  %7684 = load i32, i32* %EAX.i782
  %7685 = zext i32 %7684 to i64
  %7686 = load i32, i32* %EDX.i783
  %7687 = zext i32 %7686 to i64
  %7688 = load i64, i64* %PC.i781
  %7689 = add i64 %7688, 2
  store i64 %7689, i64* %PC.i781
  %7690 = sub i32 %7684, %7686
  %7691 = icmp ult i32 %7684, %7686
  %7692 = zext i1 %7691 to i8
  %7693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7692, i8* %7693, align 1
  %7694 = and i32 %7690, 255
  %7695 = call i32 @llvm.ctpop.i32(i32 %7694)
  %7696 = trunc i32 %7695 to i8
  %7697 = and i8 %7696, 1
  %7698 = xor i8 %7697, 1
  %7699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7698, i8* %7699, align 1
  %7700 = xor i64 %7687, %7685
  %7701 = trunc i64 %7700 to i32
  %7702 = xor i32 %7701, %7690
  %7703 = lshr i32 %7702, 4
  %7704 = trunc i32 %7703 to i8
  %7705 = and i8 %7704, 1
  %7706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7705, i8* %7706, align 1
  %7707 = icmp eq i32 %7690, 0
  %7708 = zext i1 %7707 to i8
  %7709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7708, i8* %7709, align 1
  %7710 = lshr i32 %7690, 31
  %7711 = trunc i32 %7710 to i8
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7711, i8* %7712, align 1
  %7713 = lshr i32 %7684, 31
  %7714 = lshr i32 %7686, 31
  %7715 = xor i32 %7714, %7713
  %7716 = xor i32 %7710, %7713
  %7717 = add i32 %7716, %7715
  %7718 = icmp eq i32 %7717, 2
  %7719 = zext i1 %7718 to i8
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7719, i8* %7720, align 1
  store %struct.Memory* %loadMem_48cccf, %struct.Memory** %MEMORY
  %loadMem_48ccd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7722 = getelementptr inbounds %struct.GPR, %struct.GPR* %7721, i32 0, i32 33
  %7723 = getelementptr inbounds %struct.Reg, %struct.Reg* %7722, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %7723 to i64*
  %7724 = load i64, i64* %PC.i780
  %7725 = add i64 %7724, 144
  %7726 = load i64, i64* %PC.i780
  %7727 = add i64 %7726, 6
  %7728 = load i64, i64* %PC.i780
  %7729 = add i64 %7728, 6
  store i64 %7729, i64* %PC.i780
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7731 = load i8, i8* %7730, align 1
  %7732 = icmp ne i8 %7731, 0
  %7733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7734 = load i8, i8* %7733, align 1
  %7735 = icmp ne i8 %7734, 0
  %7736 = xor i1 %7732, %7735
  %7737 = xor i1 %7736, true
  %7738 = zext i1 %7737 to i8
  store i8 %7738, i8* %BRANCH_TAKEN, align 1
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7740 = select i1 %7736, i64 %7727, i64 %7725
  store i64 %7740, i64* %7739, align 8
  store %struct.Memory* %loadMem_48ccd1, %struct.Memory** %MEMORY
  %loadBr_48ccd1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48ccd1 = icmp eq i8 %loadBr_48ccd1, 1
  br i1 %cmpBr_48ccd1, label %block_.L_48cd61, label %block_48ccd7

block_48ccd7:                                     ; preds = %block_.L_48ccbb
  %loadMem_48ccd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7742 = getelementptr inbounds %struct.GPR, %struct.GPR* %7741, i32 0, i32 33
  %7743 = getelementptr inbounds %struct.Reg, %struct.Reg* %7742, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %7743 to i64*
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7745 = getelementptr inbounds %struct.GPR, %struct.GPR* %7744, i32 0, i32 1
  %7746 = getelementptr inbounds %struct.Reg, %struct.Reg* %7745, i32 0, i32 0
  %RAX.i779 = bitcast %union.anon* %7746 to i64*
  %7747 = load i64, i64* %PC.i778
  %7748 = add i64 %7747, 8
  store i64 %7748, i64* %PC.i778
  %7749 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7749, i64* %RAX.i779, align 8
  store %struct.Memory* %loadMem_48ccd7, %struct.Memory** %MEMORY
  %loadMem_48ccdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7751 = getelementptr inbounds %struct.GPR, %struct.GPR* %7750, i32 0, i32 33
  %7752 = getelementptr inbounds %struct.Reg, %struct.Reg* %7751, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %7752 to i64*
  %7753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7754 = getelementptr inbounds %struct.GPR, %struct.GPR* %7753, i32 0, i32 1
  %7755 = getelementptr inbounds %struct.Reg, %struct.Reg* %7754, i32 0, i32 0
  %RAX.i777 = bitcast %union.anon* %7755 to i64*
  %7756 = load i64, i64* %RAX.i777
  %7757 = add i64 %7756, 71776
  %7758 = load i64, i64* %PC.i776
  %7759 = add i64 %7758, 7
  store i64 %7759, i64* %PC.i776
  %7760 = inttoptr i64 %7757 to i64*
  %7761 = load i64, i64* %7760
  store i64 %7761, i64* %RAX.i777, align 8
  store %struct.Memory* %loadMem_48ccdf, %struct.Memory** %MEMORY
  %loadMem_48cce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7763 = getelementptr inbounds %struct.GPR, %struct.GPR* %7762, i32 0, i32 33
  %7764 = getelementptr inbounds %struct.Reg, %struct.Reg* %7763, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %7764 to i64*
  %7765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7766 = getelementptr inbounds %struct.GPR, %struct.GPR* %7765, i32 0, i32 5
  %7767 = getelementptr inbounds %struct.Reg, %struct.Reg* %7766, i32 0, i32 0
  %RCX.i775 = bitcast %union.anon* %7767 to i64*
  %7768 = load i64, i64* %PC.i774
  %7769 = add i64 %7768, 8
  store i64 %7769, i64* %PC.i774
  %7770 = load i64, i64* bitcast (%G_0x726418_type* @G_0x726418 to i64*)
  store i64 %7770, i64* %RCX.i775, align 8
  store %struct.Memory* %loadMem_48cce6, %struct.Memory** %MEMORY
  %loadMem_48ccee = load %struct.Memory*, %struct.Memory** %MEMORY
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7772 = getelementptr inbounds %struct.GPR, %struct.GPR* %7771, i32 0, i32 33
  %7773 = getelementptr inbounds %struct.Reg, %struct.Reg* %7772, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %7773 to i64*
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7775 = getelementptr inbounds %struct.GPR, %struct.GPR* %7774, i32 0, i32 7
  %7776 = getelementptr inbounds %struct.Reg, %struct.Reg* %7775, i32 0, i32 0
  %RDX.i773 = bitcast %union.anon* %7776 to i64*
  %7777 = load i64, i64* %PC.i772
  %7778 = add i64 %7777, 8
  store i64 %7778, i64* %PC.i772
  %7779 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7779, i64* %RDX.i773, align 8
  store %struct.Memory* %loadMem_48ccee, %struct.Memory** %MEMORY
  %loadMem_48ccf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7781 = getelementptr inbounds %struct.GPR, %struct.GPR* %7780, i32 0, i32 33
  %7782 = getelementptr inbounds %struct.Reg, %struct.Reg* %7781, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %7782 to i64*
  %7783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7784 = getelementptr inbounds %struct.GPR, %struct.GPR* %7783, i32 0, i32 7
  %7785 = getelementptr inbounds %struct.Reg, %struct.Reg* %7784, i32 0, i32 0
  %RDX.i770 = bitcast %union.anon* %7785 to i64*
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7787 = getelementptr inbounds %struct.GPR, %struct.GPR* %7786, i32 0, i32 9
  %7788 = getelementptr inbounds %struct.Reg, %struct.Reg* %7787, i32 0, i32 0
  %RSI.i771 = bitcast %union.anon* %7788 to i64*
  %7789 = load i64, i64* %RDX.i770
  %7790 = add i64 %7789, 172
  %7791 = load i64, i64* %PC.i769
  %7792 = add i64 %7791, 6
  store i64 %7792, i64* %PC.i769
  %7793 = inttoptr i64 %7790 to i32*
  %7794 = load i32, i32* %7793
  %7795 = zext i32 %7794 to i64
  store i64 %7795, i64* %RSI.i771, align 8
  store %struct.Memory* %loadMem_48ccf6, %struct.Memory** %MEMORY
  %loadMem_48ccfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7797 = getelementptr inbounds %struct.GPR, %struct.GPR* %7796, i32 0, i32 33
  %7798 = getelementptr inbounds %struct.Reg, %struct.Reg* %7797, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %7798 to i64*
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7800 = getelementptr inbounds %struct.GPR, %struct.GPR* %7799, i32 0, i32 9
  %7801 = getelementptr inbounds %struct.Reg, %struct.Reg* %7800, i32 0, i32 0
  %RSI.i767 = bitcast %union.anon* %7801 to i64*
  %7802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7803 = getelementptr inbounds %struct.GPR, %struct.GPR* %7802, i32 0, i32 15
  %7804 = getelementptr inbounds %struct.Reg, %struct.Reg* %7803, i32 0, i32 0
  %RBP.i768 = bitcast %union.anon* %7804 to i64*
  %7805 = load i64, i64* %RSI.i767
  %7806 = load i64, i64* %RBP.i768
  %7807 = sub i64 %7806, 44
  %7808 = load i64, i64* %PC.i766
  %7809 = add i64 %7808, 3
  store i64 %7809, i64* %PC.i766
  %7810 = trunc i64 %7805 to i32
  %7811 = inttoptr i64 %7807 to i32*
  %7812 = load i32, i32* %7811
  %7813 = add i32 %7812, %7810
  %7814 = zext i32 %7813 to i64
  store i64 %7814, i64* %RSI.i767, align 8
  %7815 = icmp ult i32 %7813, %7810
  %7816 = icmp ult i32 %7813, %7812
  %7817 = or i1 %7815, %7816
  %7818 = zext i1 %7817 to i8
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7818, i8* %7819, align 1
  %7820 = and i32 %7813, 255
  %7821 = call i32 @llvm.ctpop.i32(i32 %7820)
  %7822 = trunc i32 %7821 to i8
  %7823 = and i8 %7822, 1
  %7824 = xor i8 %7823, 1
  %7825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7824, i8* %7825, align 1
  %7826 = xor i32 %7812, %7810
  %7827 = xor i32 %7826, %7813
  %7828 = lshr i32 %7827, 4
  %7829 = trunc i32 %7828 to i8
  %7830 = and i8 %7829, 1
  %7831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7830, i8* %7831, align 1
  %7832 = icmp eq i32 %7813, 0
  %7833 = zext i1 %7832 to i8
  %7834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7833, i8* %7834, align 1
  %7835 = lshr i32 %7813, 31
  %7836 = trunc i32 %7835 to i8
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7836, i8* %7837, align 1
  %7838 = lshr i32 %7810, 31
  %7839 = lshr i32 %7812, 31
  %7840 = xor i32 %7835, %7838
  %7841 = xor i32 %7835, %7839
  %7842 = add i32 %7840, %7841
  %7843 = icmp eq i32 %7842, 2
  %7844 = zext i1 %7843 to i8
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7844, i8* %7845, align 1
  store %struct.Memory* %loadMem_48ccfc, %struct.Memory** %MEMORY
  %loadMem_48ccff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7847 = getelementptr inbounds %struct.GPR, %struct.GPR* %7846, i32 0, i32 33
  %7848 = getelementptr inbounds %struct.Reg, %struct.Reg* %7847, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %7848 to i64*
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7850 = getelementptr inbounds %struct.GPR, %struct.GPR* %7849, i32 0, i32 9
  %7851 = getelementptr inbounds %struct.Reg, %struct.Reg* %7850, i32 0, i32 0
  %ESI.i764 = bitcast %union.anon* %7851 to i32*
  %7852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7853 = getelementptr inbounds %struct.GPR, %struct.GPR* %7852, i32 0, i32 7
  %7854 = getelementptr inbounds %struct.Reg, %struct.Reg* %7853, i32 0, i32 0
  %RDX.i765 = bitcast %union.anon* %7854 to i64*
  %7855 = load i32, i32* %ESI.i764
  %7856 = zext i32 %7855 to i64
  %7857 = load i64, i64* %PC.i763
  %7858 = add i64 %7857, 3
  store i64 %7858, i64* %PC.i763
  %7859 = shl i64 %7856, 32
  %7860 = ashr exact i64 %7859, 32
  store i64 %7860, i64* %RDX.i765, align 8
  store %struct.Memory* %loadMem_48ccff, %struct.Memory** %MEMORY
  %loadMem_48cd02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7862 = getelementptr inbounds %struct.GPR, %struct.GPR* %7861, i32 0, i32 33
  %7863 = getelementptr inbounds %struct.Reg, %struct.Reg* %7862, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %7863 to i64*
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7865 = getelementptr inbounds %struct.GPR, %struct.GPR* %7864, i32 0, i32 5
  %7866 = getelementptr inbounds %struct.Reg, %struct.Reg* %7865, i32 0, i32 0
  %RCX.i761 = bitcast %union.anon* %7866 to i64*
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7868 = getelementptr inbounds %struct.GPR, %struct.GPR* %7867, i32 0, i32 7
  %7869 = getelementptr inbounds %struct.Reg, %struct.Reg* %7868, i32 0, i32 0
  %RDX.i762 = bitcast %union.anon* %7869 to i64*
  %7870 = load i64, i64* %RCX.i761
  %7871 = load i64, i64* %RDX.i762
  %7872 = mul i64 %7871, 8
  %7873 = add i64 %7872, %7870
  %7874 = load i64, i64* %PC.i760
  %7875 = add i64 %7874, 4
  store i64 %7875, i64* %PC.i760
  %7876 = inttoptr i64 %7873 to i64*
  %7877 = load i64, i64* %7876
  store i64 %7877, i64* %RCX.i761, align 8
  store %struct.Memory* %loadMem_48cd02, %struct.Memory** %MEMORY
  %loadMem_48cd06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7879 = getelementptr inbounds %struct.GPR, %struct.GPR* %7878, i32 0, i32 33
  %7880 = getelementptr inbounds %struct.Reg, %struct.Reg* %7879, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %7880 to i64*
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 7
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %RDX.i758 = bitcast %union.anon* %7883 to i64*
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7885 = getelementptr inbounds %struct.GPR, %struct.GPR* %7884, i32 0, i32 15
  %7886 = getelementptr inbounds %struct.Reg, %struct.Reg* %7885, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %7886 to i64*
  %7887 = load i64, i64* %RBP.i759
  %7888 = sub i64 %7887, 40
  %7889 = load i64, i64* %PC.i757
  %7890 = add i64 %7889, 4
  store i64 %7890, i64* %PC.i757
  %7891 = inttoptr i64 %7888 to i32*
  %7892 = load i32, i32* %7891
  %7893 = sext i32 %7892 to i64
  store i64 %7893, i64* %RDX.i758, align 8
  store %struct.Memory* %loadMem_48cd06, %struct.Memory** %MEMORY
  %loadMem_48cd0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7895 = getelementptr inbounds %struct.GPR, %struct.GPR* %7894, i32 0, i32 33
  %7896 = getelementptr inbounds %struct.Reg, %struct.Reg* %7895, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %7896 to i64*
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7898 = getelementptr inbounds %struct.GPR, %struct.GPR* %7897, i32 0, i32 5
  %7899 = getelementptr inbounds %struct.Reg, %struct.Reg* %7898, i32 0, i32 0
  %RCX.i754 = bitcast %union.anon* %7899 to i64*
  %7900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7901 = getelementptr inbounds %struct.GPR, %struct.GPR* %7900, i32 0, i32 7
  %7902 = getelementptr inbounds %struct.Reg, %struct.Reg* %7901, i32 0, i32 0
  %RDX.i755 = bitcast %union.anon* %7902 to i64*
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7904 = getelementptr inbounds %struct.GPR, %struct.GPR* %7903, i32 0, i32 9
  %7905 = getelementptr inbounds %struct.Reg, %struct.Reg* %7904, i32 0, i32 0
  %RSI.i756 = bitcast %union.anon* %7905 to i64*
  %7906 = load i64, i64* %RCX.i754
  %7907 = load i64, i64* %RDX.i755
  %7908 = mul i64 %7907, 2
  %7909 = add i64 %7908, %7906
  %7910 = load i64, i64* %PC.i753
  %7911 = add i64 %7910, 4
  store i64 %7911, i64* %PC.i753
  %7912 = inttoptr i64 %7909 to i16*
  %7913 = load i16, i16* %7912
  %7914 = zext i16 %7913 to i64
  store i64 %7914, i64* %RSI.i756, align 8
  store %struct.Memory* %loadMem_48cd0a, %struct.Memory** %MEMORY
  %loadMem_48cd0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 33
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %7917 to i64*
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 5
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %RCX.i752 = bitcast %union.anon* %7920 to i64*
  %7921 = load i64, i64* %PC.i751
  %7922 = add i64 %7921, 8
  store i64 %7922, i64* %PC.i751
  %7923 = load i64, i64* bitcast (%G_0x6cb918_type* @G_0x6cb918 to i64*)
  store i64 %7923, i64* %RCX.i752, align 8
  store %struct.Memory* %loadMem_48cd0e, %struct.Memory** %MEMORY
  %loadMem_48cd16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7925 = getelementptr inbounds %struct.GPR, %struct.GPR* %7924, i32 0, i32 33
  %7926 = getelementptr inbounds %struct.Reg, %struct.Reg* %7925, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %7926 to i64*
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7928 = getelementptr inbounds %struct.GPR, %struct.GPR* %7927, i32 0, i32 5
  %7929 = getelementptr inbounds %struct.Reg, %struct.Reg* %7928, i32 0, i32 0
  %RCX.i750 = bitcast %union.anon* %7929 to i64*
  %7930 = load i64, i64* %RCX.i750
  %7931 = add i64 %7930, 8
  %7932 = load i64, i64* %PC.i749
  %7933 = add i64 %7932, 4
  store i64 %7933, i64* %PC.i749
  %7934 = inttoptr i64 %7931 to i64*
  %7935 = load i64, i64* %7934
  store i64 %7935, i64* %RCX.i750, align 8
  store %struct.Memory* %loadMem_48cd16, %struct.Memory** %MEMORY
  %loadMem_48cd1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7937 = getelementptr inbounds %struct.GPR, %struct.GPR* %7936, i32 0, i32 33
  %7938 = getelementptr inbounds %struct.Reg, %struct.Reg* %7937, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %7938 to i64*
  %7939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7940 = getelementptr inbounds %struct.GPR, %struct.GPR* %7939, i32 0, i32 7
  %7941 = getelementptr inbounds %struct.Reg, %struct.Reg* %7940, i32 0, i32 0
  %RDX.i747 = bitcast %union.anon* %7941 to i64*
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7943 = getelementptr inbounds %struct.GPR, %struct.GPR* %7942, i32 0, i32 15
  %7944 = getelementptr inbounds %struct.Reg, %struct.Reg* %7943, i32 0, i32 0
  %RBP.i748 = bitcast %union.anon* %7944 to i64*
  %7945 = load i64, i64* %RBP.i748
  %7946 = sub i64 %7945, 48
  %7947 = load i64, i64* %PC.i746
  %7948 = add i64 %7947, 4
  store i64 %7948, i64* %PC.i746
  %7949 = inttoptr i64 %7946 to i32*
  %7950 = load i32, i32* %7949
  %7951 = sext i32 %7950 to i64
  store i64 %7951, i64* %RDX.i747, align 8
  store %struct.Memory* %loadMem_48cd1a, %struct.Memory** %MEMORY
  %loadMem_48cd1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7953 = getelementptr inbounds %struct.GPR, %struct.GPR* %7952, i32 0, i32 33
  %7954 = getelementptr inbounds %struct.Reg, %struct.Reg* %7953, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %7954 to i64*
  %7955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7956 = getelementptr inbounds %struct.GPR, %struct.GPR* %7955, i32 0, i32 5
  %7957 = getelementptr inbounds %struct.Reg, %struct.Reg* %7956, i32 0, i32 0
  %RCX.i744 = bitcast %union.anon* %7957 to i64*
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7959 = getelementptr inbounds %struct.GPR, %struct.GPR* %7958, i32 0, i32 7
  %7960 = getelementptr inbounds %struct.Reg, %struct.Reg* %7959, i32 0, i32 0
  %RDX.i745 = bitcast %union.anon* %7960 to i64*
  %7961 = load i64, i64* %RCX.i744
  %7962 = load i64, i64* %RDX.i745
  %7963 = mul i64 %7962, 8
  %7964 = add i64 %7963, %7961
  %7965 = load i64, i64* %PC.i743
  %7966 = add i64 %7965, 4
  store i64 %7966, i64* %PC.i743
  %7967 = inttoptr i64 %7964 to i64*
  %7968 = load i64, i64* %7967
  store i64 %7968, i64* %RCX.i744, align 8
  store %struct.Memory* %loadMem_48cd1e, %struct.Memory** %MEMORY
  %loadMem_48cd22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7970 = getelementptr inbounds %struct.GPR, %struct.GPR* %7969, i32 0, i32 33
  %7971 = getelementptr inbounds %struct.Reg, %struct.Reg* %7970, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %7971 to i64*
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7973 = getelementptr inbounds %struct.GPR, %struct.GPR* %7972, i32 0, i32 7
  %7974 = getelementptr inbounds %struct.Reg, %struct.Reg* %7973, i32 0, i32 0
  %RDX.i742 = bitcast %union.anon* %7974 to i64*
  %7975 = load i64, i64* %PC.i741
  %7976 = add i64 %7975, 8
  store i64 %7976, i64* %PC.i741
  %7977 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7977, i64* %RDX.i742, align 8
  store %struct.Memory* %loadMem_48cd22, %struct.Memory** %MEMORY
  %loadMem_48cd2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7979 = getelementptr inbounds %struct.GPR, %struct.GPR* %7978, i32 0, i32 33
  %7980 = getelementptr inbounds %struct.Reg, %struct.Reg* %7979, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %7980 to i64*
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7982 = getelementptr inbounds %struct.GPR, %struct.GPR* %7981, i32 0, i32 7
  %7983 = getelementptr inbounds %struct.Reg, %struct.Reg* %7982, i32 0, i32 0
  %RDX.i739 = bitcast %union.anon* %7983 to i64*
  %7984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7985 = getelementptr inbounds %struct.GPR, %struct.GPR* %7984, i32 0, i32 11
  %7986 = getelementptr inbounds %struct.Reg, %struct.Reg* %7985, i32 0, i32 0
  %RDI.i740 = bitcast %union.anon* %7986 to i64*
  %7987 = load i64, i64* %RDX.i739
  %7988 = add i64 %7987, 172
  %7989 = load i64, i64* %PC.i738
  %7990 = add i64 %7989, 6
  store i64 %7990, i64* %PC.i738
  %7991 = inttoptr i64 %7988 to i32*
  %7992 = load i32, i32* %7991
  %7993 = zext i32 %7992 to i64
  store i64 %7993, i64* %RDI.i740, align 8
  store %struct.Memory* %loadMem_48cd2a, %struct.Memory** %MEMORY
  %loadMem_48cd30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7995 = getelementptr inbounds %struct.GPR, %struct.GPR* %7994, i32 0, i32 33
  %7996 = getelementptr inbounds %struct.Reg, %struct.Reg* %7995, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %7996 to i64*
  %7997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7998 = getelementptr inbounds %struct.GPR, %struct.GPR* %7997, i32 0, i32 11
  %7999 = getelementptr inbounds %struct.Reg, %struct.Reg* %7998, i32 0, i32 0
  %RDI.i736 = bitcast %union.anon* %7999 to i64*
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8001 = getelementptr inbounds %struct.GPR, %struct.GPR* %8000, i32 0, i32 15
  %8002 = getelementptr inbounds %struct.Reg, %struct.Reg* %8001, i32 0, i32 0
  %RBP.i737 = bitcast %union.anon* %8002 to i64*
  %8003 = load i64, i64* %RDI.i736
  %8004 = load i64, i64* %RBP.i737
  %8005 = sub i64 %8004, 44
  %8006 = load i64, i64* %PC.i735
  %8007 = add i64 %8006, 3
  store i64 %8007, i64* %PC.i735
  %8008 = trunc i64 %8003 to i32
  %8009 = inttoptr i64 %8005 to i32*
  %8010 = load i32, i32* %8009
  %8011 = add i32 %8010, %8008
  %8012 = zext i32 %8011 to i64
  store i64 %8012, i64* %RDI.i736, align 8
  %8013 = icmp ult i32 %8011, %8008
  %8014 = icmp ult i32 %8011, %8010
  %8015 = or i1 %8013, %8014
  %8016 = zext i1 %8015 to i8
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8016, i8* %8017, align 1
  %8018 = and i32 %8011, 255
  %8019 = call i32 @llvm.ctpop.i32(i32 %8018)
  %8020 = trunc i32 %8019 to i8
  %8021 = and i8 %8020, 1
  %8022 = xor i8 %8021, 1
  %8023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8022, i8* %8023, align 1
  %8024 = xor i32 %8010, %8008
  %8025 = xor i32 %8024, %8011
  %8026 = lshr i32 %8025, 4
  %8027 = trunc i32 %8026 to i8
  %8028 = and i8 %8027, 1
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8028, i8* %8029, align 1
  %8030 = icmp eq i32 %8011, 0
  %8031 = zext i1 %8030 to i8
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8031, i8* %8032, align 1
  %8033 = lshr i32 %8011, 31
  %8034 = trunc i32 %8033 to i8
  %8035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8034, i8* %8035, align 1
  %8036 = lshr i32 %8008, 31
  %8037 = lshr i32 %8010, 31
  %8038 = xor i32 %8033, %8036
  %8039 = xor i32 %8033, %8037
  %8040 = add i32 %8038, %8039
  %8041 = icmp eq i32 %8040, 2
  %8042 = zext i1 %8041 to i8
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8042, i8* %8043, align 1
  store %struct.Memory* %loadMem_48cd30, %struct.Memory** %MEMORY
  %loadMem_48cd33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8045 = getelementptr inbounds %struct.GPR, %struct.GPR* %8044, i32 0, i32 33
  %8046 = getelementptr inbounds %struct.Reg, %struct.Reg* %8045, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %8046 to i64*
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8048 = getelementptr inbounds %struct.GPR, %struct.GPR* %8047, i32 0, i32 11
  %8049 = getelementptr inbounds %struct.Reg, %struct.Reg* %8048, i32 0, i32 0
  %EDI.i733 = bitcast %union.anon* %8049 to i32*
  %8050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8051 = getelementptr inbounds %struct.GPR, %struct.GPR* %8050, i32 0, i32 7
  %8052 = getelementptr inbounds %struct.Reg, %struct.Reg* %8051, i32 0, i32 0
  %RDX.i734 = bitcast %union.anon* %8052 to i64*
  %8053 = load i32, i32* %EDI.i733
  %8054 = zext i32 %8053 to i64
  %8055 = load i64, i64* %PC.i732
  %8056 = add i64 %8055, 3
  store i64 %8056, i64* %PC.i732
  %8057 = shl i64 %8054, 32
  %8058 = ashr exact i64 %8057, 32
  store i64 %8058, i64* %RDX.i734, align 8
  store %struct.Memory* %loadMem_48cd33, %struct.Memory** %MEMORY
  %loadMem_48cd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8060 = getelementptr inbounds %struct.GPR, %struct.GPR* %8059, i32 0, i32 33
  %8061 = getelementptr inbounds %struct.Reg, %struct.Reg* %8060, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %8061 to i64*
  %8062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8063 = getelementptr inbounds %struct.GPR, %struct.GPR* %8062, i32 0, i32 5
  %8064 = getelementptr inbounds %struct.Reg, %struct.Reg* %8063, i32 0, i32 0
  %RCX.i730 = bitcast %union.anon* %8064 to i64*
  %8065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8066 = getelementptr inbounds %struct.GPR, %struct.GPR* %8065, i32 0, i32 7
  %8067 = getelementptr inbounds %struct.Reg, %struct.Reg* %8066, i32 0, i32 0
  %RDX.i731 = bitcast %union.anon* %8067 to i64*
  %8068 = load i64, i64* %RCX.i730
  %8069 = load i64, i64* %RDX.i731
  %8070 = mul i64 %8069, 8
  %8071 = add i64 %8070, %8068
  %8072 = load i64, i64* %PC.i729
  %8073 = add i64 %8072, 4
  store i64 %8073, i64* %PC.i729
  %8074 = inttoptr i64 %8071 to i64*
  %8075 = load i64, i64* %8074
  store i64 %8075, i64* %RCX.i730, align 8
  store %struct.Memory* %loadMem_48cd36, %struct.Memory** %MEMORY
  %loadMem_48cd3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8077 = getelementptr inbounds %struct.GPR, %struct.GPR* %8076, i32 0, i32 33
  %8078 = getelementptr inbounds %struct.Reg, %struct.Reg* %8077, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %8078 to i64*
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8080 = getelementptr inbounds %struct.GPR, %struct.GPR* %8079, i32 0, i32 7
  %8081 = getelementptr inbounds %struct.Reg, %struct.Reg* %8080, i32 0, i32 0
  %RDX.i727 = bitcast %union.anon* %8081 to i64*
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8083 = getelementptr inbounds %struct.GPR, %struct.GPR* %8082, i32 0, i32 15
  %8084 = getelementptr inbounds %struct.Reg, %struct.Reg* %8083, i32 0, i32 0
  %RBP.i728 = bitcast %union.anon* %8084 to i64*
  %8085 = load i64, i64* %RBP.i728
  %8086 = sub i64 %8085, 40
  %8087 = load i64, i64* %PC.i726
  %8088 = add i64 %8087, 4
  store i64 %8088, i64* %PC.i726
  %8089 = inttoptr i64 %8086 to i32*
  %8090 = load i32, i32* %8089
  %8091 = sext i32 %8090 to i64
  store i64 %8091, i64* %RDX.i727, align 8
  store %struct.Memory* %loadMem_48cd3a, %struct.Memory** %MEMORY
  %loadMem_48cd3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8093 = getelementptr inbounds %struct.GPR, %struct.GPR* %8092, i32 0, i32 33
  %8094 = getelementptr inbounds %struct.Reg, %struct.Reg* %8093, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %8094 to i64*
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8096 = getelementptr inbounds %struct.GPR, %struct.GPR* %8095, i32 0, i32 5
  %8097 = getelementptr inbounds %struct.Reg, %struct.Reg* %8096, i32 0, i32 0
  %RCX.i723 = bitcast %union.anon* %8097 to i64*
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8099 = getelementptr inbounds %struct.GPR, %struct.GPR* %8098, i32 0, i32 7
  %8100 = getelementptr inbounds %struct.Reg, %struct.Reg* %8099, i32 0, i32 0
  %RDX.i724 = bitcast %union.anon* %8100 to i64*
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8102 = getelementptr inbounds %struct.GPR, %struct.GPR* %8101, i32 0, i32 11
  %8103 = getelementptr inbounds %struct.Reg, %struct.Reg* %8102, i32 0, i32 0
  %RDI.i725 = bitcast %union.anon* %8103 to i64*
  %8104 = load i64, i64* %RCX.i723
  %8105 = load i64, i64* %RDX.i724
  %8106 = mul i64 %8105, 2
  %8107 = add i64 %8106, %8104
  %8108 = load i64, i64* %PC.i722
  %8109 = add i64 %8108, 4
  store i64 %8109, i64* %PC.i722
  %8110 = inttoptr i64 %8107 to i16*
  %8111 = load i16, i16* %8110
  %8112 = zext i16 %8111 to i64
  store i64 %8112, i64* %RDI.i725, align 8
  store %struct.Memory* %loadMem_48cd3e, %struct.Memory** %MEMORY
  %loadMem_48cd42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8114 = getelementptr inbounds %struct.GPR, %struct.GPR* %8113, i32 0, i32 33
  %8115 = getelementptr inbounds %struct.Reg, %struct.Reg* %8114, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %8115 to i64*
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8117 = getelementptr inbounds %struct.GPR, %struct.GPR* %8116, i32 0, i32 11
  %8118 = getelementptr inbounds %struct.Reg, %struct.Reg* %8117, i32 0, i32 0
  %EDI.i720 = bitcast %union.anon* %8118 to i32*
  %8119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8120 = getelementptr inbounds %struct.GPR, %struct.GPR* %8119, i32 0, i32 9
  %8121 = getelementptr inbounds %struct.Reg, %struct.Reg* %8120, i32 0, i32 0
  %RSI.i721 = bitcast %union.anon* %8121 to i64*
  %8122 = load i64, i64* %RSI.i721
  %8123 = load i32, i32* %EDI.i720
  %8124 = zext i32 %8123 to i64
  %8125 = load i64, i64* %PC.i719
  %8126 = add i64 %8125, 2
  store i64 %8126, i64* %PC.i719
  %8127 = trunc i64 %8122 to i32
  %8128 = sub i32 %8127, %8123
  %8129 = zext i32 %8128 to i64
  store i64 %8129, i64* %RSI.i721, align 8
  %8130 = icmp ult i32 %8127, %8123
  %8131 = zext i1 %8130 to i8
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8131, i8* %8132, align 1
  %8133 = and i32 %8128, 255
  %8134 = call i32 @llvm.ctpop.i32(i32 %8133)
  %8135 = trunc i32 %8134 to i8
  %8136 = and i8 %8135, 1
  %8137 = xor i8 %8136, 1
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8137, i8* %8138, align 1
  %8139 = xor i64 %8124, %8122
  %8140 = trunc i64 %8139 to i32
  %8141 = xor i32 %8140, %8128
  %8142 = lshr i32 %8141, 4
  %8143 = trunc i32 %8142 to i8
  %8144 = and i8 %8143, 1
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8144, i8* %8145, align 1
  %8146 = icmp eq i32 %8128, 0
  %8147 = zext i1 %8146 to i8
  %8148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8147, i8* %8148, align 1
  %8149 = lshr i32 %8128, 31
  %8150 = trunc i32 %8149 to i8
  %8151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8150, i8* %8151, align 1
  %8152 = lshr i32 %8127, 31
  %8153 = lshr i32 %8123, 31
  %8154 = xor i32 %8153, %8152
  %8155 = xor i32 %8149, %8152
  %8156 = add i32 %8155, %8154
  %8157 = icmp eq i32 %8156, 2
  %8158 = zext i1 %8157 to i8
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8158, i8* %8159, align 1
  store %struct.Memory* %loadMem_48cd42, %struct.Memory** %MEMORY
  %loadMem_48cd44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8161 = getelementptr inbounds %struct.GPR, %struct.GPR* %8160, i32 0, i32 33
  %8162 = getelementptr inbounds %struct.Reg, %struct.Reg* %8161, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %8162 to i64*
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8164 = getelementptr inbounds %struct.GPR, %struct.GPR* %8163, i32 0, i32 9
  %8165 = getelementptr inbounds %struct.Reg, %struct.Reg* %8164, i32 0, i32 0
  %ESI.i717 = bitcast %union.anon* %8165 to i32*
  %8166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8167 = getelementptr inbounds %struct.GPR, %struct.GPR* %8166, i32 0, i32 5
  %8168 = getelementptr inbounds %struct.Reg, %struct.Reg* %8167, i32 0, i32 0
  %RCX.i718 = bitcast %union.anon* %8168 to i64*
  %8169 = load i32, i32* %ESI.i717
  %8170 = zext i32 %8169 to i64
  %8171 = load i64, i64* %PC.i716
  %8172 = add i64 %8171, 3
  store i64 %8172, i64* %PC.i716
  %8173 = shl i64 %8170, 32
  %8174 = ashr exact i64 %8173, 32
  store i64 %8174, i64* %RCX.i718, align 8
  store %struct.Memory* %loadMem_48cd44, %struct.Memory** %MEMORY
  %loadMem_48cd47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8176 = getelementptr inbounds %struct.GPR, %struct.GPR* %8175, i32 0, i32 33
  %8177 = getelementptr inbounds %struct.Reg, %struct.Reg* %8176, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %8177 to i64*
  %8178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8179 = getelementptr inbounds %struct.GPR, %struct.GPR* %8178, i32 0, i32 1
  %8180 = getelementptr inbounds %struct.Reg, %struct.Reg* %8179, i32 0, i32 0
  %RAX.i714 = bitcast %union.anon* %8180 to i64*
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8182 = getelementptr inbounds %struct.GPR, %struct.GPR* %8181, i32 0, i32 5
  %8183 = getelementptr inbounds %struct.Reg, %struct.Reg* %8182, i32 0, i32 0
  %RCX.i715 = bitcast %union.anon* %8183 to i64*
  %8184 = load i64, i64* %RAX.i714
  %8185 = load i64, i64* %RCX.i715
  %8186 = mul i64 %8185, 4
  %8187 = add i64 %8186, %8184
  %8188 = load i64, i64* %PC.i713
  %8189 = add i64 %8188, 4
  store i64 %8189, i64* %PC.i713
  %8190 = inttoptr i64 %8187 to i32*
  %8191 = load i32, i32* %8190
  %8192 = sext i32 %8191 to i64
  store i64 %8192, i64* %RAX.i714, align 8
  store %struct.Memory* %loadMem_48cd47, %struct.Memory** %MEMORY
  %loadMem_48cd4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8194 = getelementptr inbounds %struct.GPR, %struct.GPR* %8193, i32 0, i32 33
  %8195 = getelementptr inbounds %struct.Reg, %struct.Reg* %8194, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %8195 to i64*
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8197 = getelementptr inbounds %struct.GPR, %struct.GPR* %8196, i32 0, i32 1
  %8198 = getelementptr inbounds %struct.Reg, %struct.Reg* %8197, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %8198 to i64*
  %8199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8200 = getelementptr inbounds %struct.GPR, %struct.GPR* %8199, i32 0, i32 15
  %8201 = getelementptr inbounds %struct.Reg, %struct.Reg* %8200, i32 0, i32 0
  %RBP.i712 = bitcast %union.anon* %8201 to i64*
  %8202 = load i64, i64* %RAX.i711
  %8203 = load i64, i64* %RBP.i712
  %8204 = sub i64 %8203, 64
  %8205 = load i64, i64* %PC.i710
  %8206 = add i64 %8205, 4
  store i64 %8206, i64* %PC.i710
  %8207 = inttoptr i64 %8204 to i64*
  %8208 = load i64, i64* %8207
  %8209 = add i64 %8208, %8202
  store i64 %8209, i64* %RAX.i711, align 8
  %8210 = icmp ult i64 %8209, %8202
  %8211 = icmp ult i64 %8209, %8208
  %8212 = or i1 %8210, %8211
  %8213 = zext i1 %8212 to i8
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8213, i8* %8214, align 1
  %8215 = trunc i64 %8209 to i32
  %8216 = and i32 %8215, 255
  %8217 = call i32 @llvm.ctpop.i32(i32 %8216)
  %8218 = trunc i32 %8217 to i8
  %8219 = and i8 %8218, 1
  %8220 = xor i8 %8219, 1
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8220, i8* %8221, align 1
  %8222 = xor i64 %8208, %8202
  %8223 = xor i64 %8222, %8209
  %8224 = lshr i64 %8223, 4
  %8225 = trunc i64 %8224 to i8
  %8226 = and i8 %8225, 1
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8226, i8* %8227, align 1
  %8228 = icmp eq i64 %8209, 0
  %8229 = zext i1 %8228 to i8
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8229, i8* %8230, align 1
  %8231 = lshr i64 %8209, 63
  %8232 = trunc i64 %8231 to i8
  %8233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8232, i8* %8233, align 1
  %8234 = lshr i64 %8202, 63
  %8235 = lshr i64 %8208, 63
  %8236 = xor i64 %8231, %8234
  %8237 = xor i64 %8231, %8235
  %8238 = add i64 %8236, %8237
  %8239 = icmp eq i64 %8238, 2
  %8240 = zext i1 %8239 to i8
  %8241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8240, i8* %8241, align 1
  store %struct.Memory* %loadMem_48cd4b, %struct.Memory** %MEMORY
  %loadMem_48cd4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8243 = getelementptr inbounds %struct.GPR, %struct.GPR* %8242, i32 0, i32 33
  %8244 = getelementptr inbounds %struct.Reg, %struct.Reg* %8243, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %8244 to i64*
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8246 = getelementptr inbounds %struct.GPR, %struct.GPR* %8245, i32 0, i32 1
  %8247 = getelementptr inbounds %struct.Reg, %struct.Reg* %8246, i32 0, i32 0
  %RAX.i708 = bitcast %union.anon* %8247 to i64*
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8249 = getelementptr inbounds %struct.GPR, %struct.GPR* %8248, i32 0, i32 15
  %8250 = getelementptr inbounds %struct.Reg, %struct.Reg* %8249, i32 0, i32 0
  %RBP.i709 = bitcast %union.anon* %8250 to i64*
  %8251 = load i64, i64* %RBP.i709
  %8252 = sub i64 %8251, 64
  %8253 = load i64, i64* %RAX.i708
  %8254 = load i64, i64* %PC.i707
  %8255 = add i64 %8254, 4
  store i64 %8255, i64* %PC.i707
  %8256 = inttoptr i64 %8252 to i64*
  store i64 %8253, i64* %8256
  store %struct.Memory* %loadMem_48cd4f, %struct.Memory** %MEMORY
  %loadMem_48cd53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8258 = getelementptr inbounds %struct.GPR, %struct.GPR* %8257, i32 0, i32 33
  %8259 = getelementptr inbounds %struct.Reg, %struct.Reg* %8258, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %8259 to i64*
  %8260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8261 = getelementptr inbounds %struct.GPR, %struct.GPR* %8260, i32 0, i32 1
  %8262 = getelementptr inbounds %struct.Reg, %struct.Reg* %8261, i32 0, i32 0
  %RAX.i705 = bitcast %union.anon* %8262 to i64*
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8264 = getelementptr inbounds %struct.GPR, %struct.GPR* %8263, i32 0, i32 15
  %8265 = getelementptr inbounds %struct.Reg, %struct.Reg* %8264, i32 0, i32 0
  %RBP.i706 = bitcast %union.anon* %8265 to i64*
  %8266 = load i64, i64* %RBP.i706
  %8267 = sub i64 %8266, 40
  %8268 = load i64, i64* %PC.i704
  %8269 = add i64 %8268, 3
  store i64 %8269, i64* %PC.i704
  %8270 = inttoptr i64 %8267 to i32*
  %8271 = load i32, i32* %8270
  %8272 = zext i32 %8271 to i64
  store i64 %8272, i64* %RAX.i705, align 8
  store %struct.Memory* %loadMem_48cd53, %struct.Memory** %MEMORY
  %loadMem_48cd56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8274 = getelementptr inbounds %struct.GPR, %struct.GPR* %8273, i32 0, i32 33
  %8275 = getelementptr inbounds %struct.Reg, %struct.Reg* %8274, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %8275 to i64*
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8277 = getelementptr inbounds %struct.GPR, %struct.GPR* %8276, i32 0, i32 1
  %8278 = getelementptr inbounds %struct.Reg, %struct.Reg* %8277, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %8278 to i64*
  %8279 = load i64, i64* %RAX.i703
  %8280 = load i64, i64* %PC.i702
  %8281 = add i64 %8280, 3
  store i64 %8281, i64* %PC.i702
  %8282 = trunc i64 %8279 to i32
  %8283 = add i32 1, %8282
  %8284 = zext i32 %8283 to i64
  store i64 %8284, i64* %RAX.i703, align 8
  %8285 = icmp ult i32 %8283, %8282
  %8286 = icmp ult i32 %8283, 1
  %8287 = or i1 %8285, %8286
  %8288 = zext i1 %8287 to i8
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8288, i8* %8289, align 1
  %8290 = and i32 %8283, 255
  %8291 = call i32 @llvm.ctpop.i32(i32 %8290)
  %8292 = trunc i32 %8291 to i8
  %8293 = and i8 %8292, 1
  %8294 = xor i8 %8293, 1
  %8295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8294, i8* %8295, align 1
  %8296 = xor i64 1, %8279
  %8297 = trunc i64 %8296 to i32
  %8298 = xor i32 %8297, %8283
  %8299 = lshr i32 %8298, 4
  %8300 = trunc i32 %8299 to i8
  %8301 = and i8 %8300, 1
  %8302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8301, i8* %8302, align 1
  %8303 = icmp eq i32 %8283, 0
  %8304 = zext i1 %8303 to i8
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8304, i8* %8305, align 1
  %8306 = lshr i32 %8283, 31
  %8307 = trunc i32 %8306 to i8
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8307, i8* %8308, align 1
  %8309 = lshr i32 %8282, 31
  %8310 = xor i32 %8306, %8309
  %8311 = add i32 %8310, %8306
  %8312 = icmp eq i32 %8311, 2
  %8313 = zext i1 %8312 to i8
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8313, i8* %8314, align 1
  store %struct.Memory* %loadMem_48cd56, %struct.Memory** %MEMORY
  %loadMem_48cd59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8316 = getelementptr inbounds %struct.GPR, %struct.GPR* %8315, i32 0, i32 33
  %8317 = getelementptr inbounds %struct.Reg, %struct.Reg* %8316, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %8317 to i64*
  %8318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8319 = getelementptr inbounds %struct.GPR, %struct.GPR* %8318, i32 0, i32 1
  %8320 = getelementptr inbounds %struct.Reg, %struct.Reg* %8319, i32 0, i32 0
  %EAX.i700 = bitcast %union.anon* %8320 to i32*
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8322 = getelementptr inbounds %struct.GPR, %struct.GPR* %8321, i32 0, i32 15
  %8323 = getelementptr inbounds %struct.Reg, %struct.Reg* %8322, i32 0, i32 0
  %RBP.i701 = bitcast %union.anon* %8323 to i64*
  %8324 = load i64, i64* %RBP.i701
  %8325 = sub i64 %8324, 40
  %8326 = load i32, i32* %EAX.i700
  %8327 = zext i32 %8326 to i64
  %8328 = load i64, i64* %PC.i699
  %8329 = add i64 %8328, 3
  store i64 %8329, i64* %PC.i699
  %8330 = inttoptr i64 %8325 to i32*
  store i32 %8326, i32* %8330
  store %struct.Memory* %loadMem_48cd59, %struct.Memory** %MEMORY
  %loadMem_48cd5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8332 = getelementptr inbounds %struct.GPR, %struct.GPR* %8331, i32 0, i32 33
  %8333 = getelementptr inbounds %struct.Reg, %struct.Reg* %8332, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %8333 to i64*
  %8334 = load i64, i64* %PC.i698
  %8335 = add i64 %8334, -161
  %8336 = load i64, i64* %PC.i698
  %8337 = add i64 %8336, 5
  store i64 %8337, i64* %PC.i698
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8335, i64* %8338, align 8
  store %struct.Memory* %loadMem_48cd5c, %struct.Memory** %MEMORY
  br label %block_.L_48ccbb

block_.L_48cd61:                                  ; preds = %block_.L_48ccbb
  %loadMem_48cd61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8340 = getelementptr inbounds %struct.GPR, %struct.GPR* %8339, i32 0, i32 33
  %8341 = getelementptr inbounds %struct.Reg, %struct.Reg* %8340, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %8341 to i64*
  %8342 = load i64, i64* %PC.i697
  %8343 = add i64 %8342, 5
  %8344 = load i64, i64* %PC.i697
  %8345 = add i64 %8344, 5
  store i64 %8345, i64* %PC.i697
  %8346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8343, i64* %8346, align 8
  store %struct.Memory* %loadMem_48cd61, %struct.Memory** %MEMORY
  br label %block_.L_48cd66

block_.L_48cd66:                                  ; preds = %block_.L_48cd61
  %loadMem_48cd66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8348 = getelementptr inbounds %struct.GPR, %struct.GPR* %8347, i32 0, i32 33
  %8349 = getelementptr inbounds %struct.Reg, %struct.Reg* %8348, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %8349 to i64*
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8351 = getelementptr inbounds %struct.GPR, %struct.GPR* %8350, i32 0, i32 1
  %8352 = getelementptr inbounds %struct.Reg, %struct.Reg* %8351, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %8352 to i64*
  %8353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8354 = getelementptr inbounds %struct.GPR, %struct.GPR* %8353, i32 0, i32 15
  %8355 = getelementptr inbounds %struct.Reg, %struct.Reg* %8354, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %8355 to i64*
  %8356 = load i64, i64* %RBP.i696
  %8357 = sub i64 %8356, 44
  %8358 = load i64, i64* %PC.i694
  %8359 = add i64 %8358, 3
  store i64 %8359, i64* %PC.i694
  %8360 = inttoptr i64 %8357 to i32*
  %8361 = load i32, i32* %8360
  %8362 = zext i32 %8361 to i64
  store i64 %8362, i64* %RAX.i695, align 8
  store %struct.Memory* %loadMem_48cd66, %struct.Memory** %MEMORY
  %loadMem_48cd69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8364 = getelementptr inbounds %struct.GPR, %struct.GPR* %8363, i32 0, i32 33
  %8365 = getelementptr inbounds %struct.Reg, %struct.Reg* %8364, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %8365 to i64*
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8367 = getelementptr inbounds %struct.GPR, %struct.GPR* %8366, i32 0, i32 1
  %8368 = getelementptr inbounds %struct.Reg, %struct.Reg* %8367, i32 0, i32 0
  %RAX.i693 = bitcast %union.anon* %8368 to i64*
  %8369 = load i64, i64* %RAX.i693
  %8370 = load i64, i64* %PC.i692
  %8371 = add i64 %8370, 3
  store i64 %8371, i64* %PC.i692
  %8372 = trunc i64 %8369 to i32
  %8373 = add i32 1, %8372
  %8374 = zext i32 %8373 to i64
  store i64 %8374, i64* %RAX.i693, align 8
  %8375 = icmp ult i32 %8373, %8372
  %8376 = icmp ult i32 %8373, 1
  %8377 = or i1 %8375, %8376
  %8378 = zext i1 %8377 to i8
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8378, i8* %8379, align 1
  %8380 = and i32 %8373, 255
  %8381 = call i32 @llvm.ctpop.i32(i32 %8380)
  %8382 = trunc i32 %8381 to i8
  %8383 = and i8 %8382, 1
  %8384 = xor i8 %8383, 1
  %8385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8384, i8* %8385, align 1
  %8386 = xor i64 1, %8369
  %8387 = trunc i64 %8386 to i32
  %8388 = xor i32 %8387, %8373
  %8389 = lshr i32 %8388, 4
  %8390 = trunc i32 %8389 to i8
  %8391 = and i8 %8390, 1
  %8392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8391, i8* %8392, align 1
  %8393 = icmp eq i32 %8373, 0
  %8394 = zext i1 %8393 to i8
  %8395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8394, i8* %8395, align 1
  %8396 = lshr i32 %8373, 31
  %8397 = trunc i32 %8396 to i8
  %8398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8397, i8* %8398, align 1
  %8399 = lshr i32 %8372, 31
  %8400 = xor i32 %8396, %8399
  %8401 = add i32 %8400, %8396
  %8402 = icmp eq i32 %8401, 2
  %8403 = zext i1 %8402 to i8
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8403, i8* %8404, align 1
  store %struct.Memory* %loadMem_48cd69, %struct.Memory** %MEMORY
  %loadMem_48cd6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8406 = getelementptr inbounds %struct.GPR, %struct.GPR* %8405, i32 0, i32 33
  %8407 = getelementptr inbounds %struct.Reg, %struct.Reg* %8406, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %8407 to i64*
  %8408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8409 = getelementptr inbounds %struct.GPR, %struct.GPR* %8408, i32 0, i32 1
  %8410 = getelementptr inbounds %struct.Reg, %struct.Reg* %8409, i32 0, i32 0
  %EAX.i690 = bitcast %union.anon* %8410 to i32*
  %8411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8412 = getelementptr inbounds %struct.GPR, %struct.GPR* %8411, i32 0, i32 15
  %8413 = getelementptr inbounds %struct.Reg, %struct.Reg* %8412, i32 0, i32 0
  %RBP.i691 = bitcast %union.anon* %8413 to i64*
  %8414 = load i64, i64* %RBP.i691
  %8415 = sub i64 %8414, 44
  %8416 = load i32, i32* %EAX.i690
  %8417 = zext i32 %8416 to i64
  %8418 = load i64, i64* %PC.i689
  %8419 = add i64 %8418, 3
  store i64 %8419, i64* %PC.i689
  %8420 = inttoptr i64 %8415 to i32*
  store i32 %8416, i32* %8420
  store %struct.Memory* %loadMem_48cd6c, %struct.Memory** %MEMORY
  %loadMem_48cd6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8422 = getelementptr inbounds %struct.GPR, %struct.GPR* %8421, i32 0, i32 33
  %8423 = getelementptr inbounds %struct.Reg, %struct.Reg* %8422, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %8423 to i64*
  %8424 = load i64, i64* %PC.i688
  %8425 = add i64 %8424, -207
  %8426 = load i64, i64* %PC.i688
  %8427 = add i64 %8426, 5
  store i64 %8427, i64* %PC.i688
  %8428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8425, i64* %8428, align 8
  store %struct.Memory* %loadMem_48cd6f, %struct.Memory** %MEMORY
  br label %block_.L_48cca0

block_.L_48cd74:                                  ; preds = %block_.L_48cca0
  %loadMem_48cd74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8430 = getelementptr inbounds %struct.GPR, %struct.GPR* %8429, i32 0, i32 33
  %8431 = getelementptr inbounds %struct.Reg, %struct.Reg* %8430, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %8431 to i64*
  %8432 = load i64, i64* %PC.i687
  %8433 = add i64 %8432, 5
  %8434 = load i64, i64* %PC.i687
  %8435 = add i64 %8434, 5
  store i64 %8435, i64* %PC.i687
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8433, i64* %8436, align 8
  store %struct.Memory* %loadMem_48cd74, %struct.Memory** %MEMORY
  br label %block_.L_48cd79

block_.L_48cd79:                                  ; preds = %block_.L_48cd74
  %loadMem_48cd79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8438 = getelementptr inbounds %struct.GPR, %struct.GPR* %8437, i32 0, i32 33
  %8439 = getelementptr inbounds %struct.Reg, %struct.Reg* %8438, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %8439 to i64*
  %8440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8441 = getelementptr inbounds %struct.GPR, %struct.GPR* %8440, i32 0, i32 1
  %8442 = getelementptr inbounds %struct.Reg, %struct.Reg* %8441, i32 0, i32 0
  %RAX.i685 = bitcast %union.anon* %8442 to i64*
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8444 = getelementptr inbounds %struct.GPR, %struct.GPR* %8443, i32 0, i32 15
  %8445 = getelementptr inbounds %struct.Reg, %struct.Reg* %8444, i32 0, i32 0
  %RBP.i686 = bitcast %union.anon* %8445 to i64*
  %8446 = load i64, i64* %RBP.i686
  %8447 = sub i64 %8446, 48
  %8448 = load i64, i64* %PC.i684
  %8449 = add i64 %8448, 3
  store i64 %8449, i64* %PC.i684
  %8450 = inttoptr i64 %8447 to i32*
  %8451 = load i32, i32* %8450
  %8452 = zext i32 %8451 to i64
  store i64 %8452, i64* %RAX.i685, align 8
  store %struct.Memory* %loadMem_48cd79, %struct.Memory** %MEMORY
  %loadMem_48cd7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8454 = getelementptr inbounds %struct.GPR, %struct.GPR* %8453, i32 0, i32 33
  %8455 = getelementptr inbounds %struct.Reg, %struct.Reg* %8454, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %8455 to i64*
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8457 = getelementptr inbounds %struct.GPR, %struct.GPR* %8456, i32 0, i32 1
  %8458 = getelementptr inbounds %struct.Reg, %struct.Reg* %8457, i32 0, i32 0
  %RAX.i683 = bitcast %union.anon* %8458 to i64*
  %8459 = load i64, i64* %RAX.i683
  %8460 = load i64, i64* %PC.i682
  %8461 = add i64 %8460, 3
  store i64 %8461, i64* %PC.i682
  %8462 = trunc i64 %8459 to i32
  %8463 = add i32 1, %8462
  %8464 = zext i32 %8463 to i64
  store i64 %8464, i64* %RAX.i683, align 8
  %8465 = icmp ult i32 %8463, %8462
  %8466 = icmp ult i32 %8463, 1
  %8467 = or i1 %8465, %8466
  %8468 = zext i1 %8467 to i8
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8468, i8* %8469, align 1
  %8470 = and i32 %8463, 255
  %8471 = call i32 @llvm.ctpop.i32(i32 %8470)
  %8472 = trunc i32 %8471 to i8
  %8473 = and i8 %8472, 1
  %8474 = xor i8 %8473, 1
  %8475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8474, i8* %8475, align 1
  %8476 = xor i64 1, %8459
  %8477 = trunc i64 %8476 to i32
  %8478 = xor i32 %8477, %8463
  %8479 = lshr i32 %8478, 4
  %8480 = trunc i32 %8479 to i8
  %8481 = and i8 %8480, 1
  %8482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8481, i8* %8482, align 1
  %8483 = icmp eq i32 %8463, 0
  %8484 = zext i1 %8483 to i8
  %8485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8484, i8* %8485, align 1
  %8486 = lshr i32 %8463, 31
  %8487 = trunc i32 %8486 to i8
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8487, i8* %8488, align 1
  %8489 = lshr i32 %8462, 31
  %8490 = xor i32 %8486, %8489
  %8491 = add i32 %8490, %8486
  %8492 = icmp eq i32 %8491, 2
  %8493 = zext i1 %8492 to i8
  %8494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8493, i8* %8494, align 1
  store %struct.Memory* %loadMem_48cd7c, %struct.Memory** %MEMORY
  %loadMem_48cd7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8496 = getelementptr inbounds %struct.GPR, %struct.GPR* %8495, i32 0, i32 33
  %8497 = getelementptr inbounds %struct.Reg, %struct.Reg* %8496, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %8497 to i64*
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8499 = getelementptr inbounds %struct.GPR, %struct.GPR* %8498, i32 0, i32 1
  %8500 = getelementptr inbounds %struct.Reg, %struct.Reg* %8499, i32 0, i32 0
  %EAX.i680 = bitcast %union.anon* %8500 to i32*
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8502 = getelementptr inbounds %struct.GPR, %struct.GPR* %8501, i32 0, i32 15
  %8503 = getelementptr inbounds %struct.Reg, %struct.Reg* %8502, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %8503 to i64*
  %8504 = load i64, i64* %RBP.i681
  %8505 = sub i64 %8504, 48
  %8506 = load i32, i32* %EAX.i680
  %8507 = zext i32 %8506 to i64
  %8508 = load i64, i64* %PC.i679
  %8509 = add i64 %8508, 3
  store i64 %8509, i64* %PC.i679
  %8510 = inttoptr i64 %8505 to i32*
  store i32 %8506, i32* %8510
  store %struct.Memory* %loadMem_48cd7f, %struct.Memory** %MEMORY
  %loadMem_48cd82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8512 = getelementptr inbounds %struct.GPR, %struct.GPR* %8511, i32 0, i32 33
  %8513 = getelementptr inbounds %struct.Reg, %struct.Reg* %8512, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %8513 to i64*
  %8514 = load i64, i64* %PC.i678
  %8515 = add i64 %8514, -268
  %8516 = load i64, i64* %PC.i678
  %8517 = add i64 %8516, 5
  store i64 %8517, i64* %PC.i678
  %8518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8515, i64* %8518, align 8
  store %struct.Memory* %loadMem_48cd82, %struct.Memory** %MEMORY
  br label %block_.L_48cc76

block_.L_48cd87:                                  ; preds = %block_.L_48cc76
  %loadMem_48cd87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8520 = getelementptr inbounds %struct.GPR, %struct.GPR* %8519, i32 0, i32 33
  %8521 = getelementptr inbounds %struct.Reg, %struct.Reg* %8520, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %8521 to i64*
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8523 = getelementptr inbounds %struct.GPR, %struct.GPR* %8522, i32 0, i32 1
  %8524 = getelementptr inbounds %struct.Reg, %struct.Reg* %8523, i32 0, i32 0
  %RAX.i677 = bitcast %union.anon* %8524 to i64*
  %8525 = load i64, i64* %PC.i676
  %8526 = add i64 %8525, 8
  store i64 %8526, i64* %PC.i676
  %8527 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %8527, i64* %RAX.i677, align 8
  store %struct.Memory* %loadMem_48cd87, %struct.Memory** %MEMORY
  %loadMem_48cd8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 33
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %8530 to i64*
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8532 = getelementptr inbounds %struct.GPR, %struct.GPR* %8531, i32 0, i32 1
  %8533 = getelementptr inbounds %struct.Reg, %struct.Reg* %8532, i32 0, i32 0
  %RAX.i675 = bitcast %union.anon* %8533 to i64*
  %8534 = load i64, i64* %RAX.i675
  %8535 = add i64 %8534, 2904
  %8536 = load i64, i64* %PC.i674
  %8537 = add i64 %8536, 7
  store i64 %8537, i64* %PC.i674
  %8538 = inttoptr i64 %8535 to i32*
  %8539 = load i32, i32* %8538
  %8540 = sext i32 %8539 to i64
  store i64 %8540, i64* %RAX.i675, align 8
  store %struct.Memory* %loadMem_48cd8f, %struct.Memory** %MEMORY
  %loadMem_48cd96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8542 = getelementptr inbounds %struct.GPR, %struct.GPR* %8541, i32 0, i32 33
  %8543 = getelementptr inbounds %struct.Reg, %struct.Reg* %8542, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %8543 to i64*
  %8544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8545 = getelementptr inbounds %struct.GPR, %struct.GPR* %8544, i32 0, i32 5
  %8546 = getelementptr inbounds %struct.Reg, %struct.Reg* %8545, i32 0, i32 0
  %RCX.i672 = bitcast %union.anon* %8546 to i64*
  %8547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8548 = getelementptr inbounds %struct.GPR, %struct.GPR* %8547, i32 0, i32 15
  %8549 = getelementptr inbounds %struct.Reg, %struct.Reg* %8548, i32 0, i32 0
  %RBP.i673 = bitcast %union.anon* %8549 to i64*
  %8550 = load i64, i64* %RBP.i673
  %8551 = sub i64 %8550, 64
  %8552 = load i64, i64* %PC.i671
  %8553 = add i64 %8552, 4
  store i64 %8553, i64* %PC.i671
  %8554 = inttoptr i64 %8551 to i64*
  %8555 = load i64, i64* %8554
  store i64 %8555, i64* %RCX.i672, align 8
  store %struct.Memory* %loadMem_48cd96, %struct.Memory** %MEMORY
  %loadMem_48cd9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8557 = getelementptr inbounds %struct.GPR, %struct.GPR* %8556, i32 0, i32 33
  %8558 = getelementptr inbounds %struct.Reg, %struct.Reg* %8557, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %8558 to i64*
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8560 = getelementptr inbounds %struct.GPR, %struct.GPR* %8559, i32 0, i32 1
  %8561 = getelementptr inbounds %struct.Reg, %struct.Reg* %8560, i32 0, i32 0
  %RAX.i669 = bitcast %union.anon* %8561 to i64*
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8563 = getelementptr inbounds %struct.GPR, %struct.GPR* %8562, i32 0, i32 15
  %8564 = getelementptr inbounds %struct.Reg, %struct.Reg* %8563, i32 0, i32 0
  %RBP.i670 = bitcast %union.anon* %8564 to i64*
  %8565 = load i64, i64* %RBP.i670
  %8566 = sub i64 %8565, 152
  %8567 = load i64, i64* %RAX.i669
  %8568 = load i64, i64* %PC.i668
  %8569 = add i64 %8568, 7
  store i64 %8569, i64* %PC.i668
  %8570 = inttoptr i64 %8566 to i64*
  store i64 %8567, i64* %8570
  store %struct.Memory* %loadMem_48cd9a, %struct.Memory** %MEMORY
  %loadMem_48cda1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8572 = getelementptr inbounds %struct.GPR, %struct.GPR* %8571, i32 0, i32 33
  %8573 = getelementptr inbounds %struct.Reg, %struct.Reg* %8572, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %8573 to i64*
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8575 = getelementptr inbounds %struct.GPR, %struct.GPR* %8574, i32 0, i32 1
  %8576 = getelementptr inbounds %struct.Reg, %struct.Reg* %8575, i32 0, i32 0
  %RAX.i666 = bitcast %union.anon* %8576 to i64*
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8578 = getelementptr inbounds %struct.GPR, %struct.GPR* %8577, i32 0, i32 5
  %8579 = getelementptr inbounds %struct.Reg, %struct.Reg* %8578, i32 0, i32 0
  %RCX.i667 = bitcast %union.anon* %8579 to i64*
  %8580 = load i64, i64* %RCX.i667
  %8581 = load i64, i64* %PC.i665
  %8582 = add i64 %8581, 3
  store i64 %8582, i64* %PC.i665
  store i64 %8580, i64* %RAX.i666, align 8
  store %struct.Memory* %loadMem_48cda1, %struct.Memory** %MEMORY
  %loadMem_48cda4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 33
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %8585 to i64*
  %8586 = load i64, i64* %PC.i664
  %8587 = add i64 %8586, 2
  store i64 %8587, i64* %PC.i664
  %8588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %8590 = load i64, i64* %8589, align 8
  %8591 = ashr i64 %8590, 63
  store i64 %8591, i64* %8588, align 8
  store %struct.Memory* %loadMem_48cda4, %struct.Memory** %MEMORY
  %loadMem_48cda6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8593 = getelementptr inbounds %struct.GPR, %struct.GPR* %8592, i32 0, i32 33
  %8594 = getelementptr inbounds %struct.Reg, %struct.Reg* %8593, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %8594 to i64*
  %8595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8596 = getelementptr inbounds %struct.GPR, %struct.GPR* %8595, i32 0, i32 5
  %8597 = getelementptr inbounds %struct.Reg, %struct.Reg* %8596, i32 0, i32 0
  %RCX.i662 = bitcast %union.anon* %8597 to i64*
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8599 = getelementptr inbounds %struct.GPR, %struct.GPR* %8598, i32 0, i32 15
  %8600 = getelementptr inbounds %struct.Reg, %struct.Reg* %8599, i32 0, i32 0
  %RBP.i663 = bitcast %union.anon* %8600 to i64*
  %8601 = load i64, i64* %RBP.i663
  %8602 = sub i64 %8601, 152
  %8603 = load i64, i64* %PC.i661
  %8604 = add i64 %8603, 7
  store i64 %8604, i64* %PC.i661
  %8605 = inttoptr i64 %8602 to i64*
  %8606 = load i64, i64* %8605
  store i64 %8606, i64* %RCX.i662, align 8
  store %struct.Memory* %loadMem_48cda6, %struct.Memory** %MEMORY
  %loadMem_48cdad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8608 = getelementptr inbounds %struct.GPR, %struct.GPR* %8607, i32 0, i32 33
  %8609 = getelementptr inbounds %struct.Reg, %struct.Reg* %8608, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %8609 to i64*
  %8610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8611 = getelementptr inbounds %struct.GPR, %struct.GPR* %8610, i32 0, i32 5
  %8612 = getelementptr inbounds %struct.Reg, %struct.Reg* %8611, i32 0, i32 0
  %RCX.i657 = bitcast %union.anon* %8612 to i64*
  %8613 = load i64, i64* %RCX.i657
  %8614 = load i64, i64* %PC.i656
  %8615 = add i64 %8614, 3
  store i64 %8615, i64* %PC.i656
  %8616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %8617 = load i64, i64* %8616, align 8
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8619 = load i64, i64* %8618, align 8
  %8620 = sext i64 %8613 to i128
  %8621 = and i128 %8620, -18446744073709551616
  %8622 = zext i64 %8619 to i128
  %8623 = shl i128 %8622, 64
  %8624 = zext i64 %8617 to i128
  %8625 = or i128 %8623, %8624
  %8626 = zext i64 %8613 to i128
  %8627 = or i128 %8621, %8626
  %8628 = sdiv i128 %8625, %8627
  %8629 = trunc i128 %8628 to i64
  %8630 = and i128 %8628, 18446744073709551615
  %8631 = sext i64 %8629 to i128
  %8632 = and i128 %8631, -18446744073709551616
  %8633 = or i128 %8632, %8630
  %8634 = icmp eq i128 %8628, %8633
  br i1 %8634, label %8639, label %8635

; <label>:8635:                                   ; preds = %block_.L_48cd87
  %8636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8637 = load i64, i64* %8636, align 8
  %8638 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8637, %struct.Memory* %loadMem_48cdad)
  br label %routine_idivq__rcx.exit

; <label>:8639:                                   ; preds = %block_.L_48cd87
  %8640 = srem i128 %8625, %8627
  %8641 = trunc i128 %8640 to i64
  store i64 %8629, i64* %8616, align 8
  store i64 %8641, i64* %8618, align 8
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8642, align 1
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8643, align 1
  %8644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8644, align 1
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8645, align 1
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8646, align 1
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8647, align 1
  br label %routine_idivq__rcx.exit

routine_idivq__rcx.exit:                          ; preds = %8635, %8639
  %8648 = phi %struct.Memory* [ %8638, %8635 ], [ %loadMem_48cdad, %8639 ]
  store %struct.Memory* %8648, %struct.Memory** %MEMORY
  %loadMem_48cdb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8650 = getelementptr inbounds %struct.GPR, %struct.GPR* %8649, i32 0, i32 33
  %8651 = getelementptr inbounds %struct.Reg, %struct.Reg* %8650, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %8651 to i64*
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8653 = getelementptr inbounds %struct.GPR, %struct.GPR* %8652, i32 0, i32 1
  %8654 = getelementptr inbounds %struct.Reg, %struct.Reg* %8653, i32 0, i32 0
  %RAX.i654 = bitcast %union.anon* %8654 to i64*
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8656 = getelementptr inbounds %struct.GPR, %struct.GPR* %8655, i32 0, i32 15
  %8657 = getelementptr inbounds %struct.Reg, %struct.Reg* %8656, i32 0, i32 0
  %RBP.i655 = bitcast %union.anon* %8657 to i64*
  %8658 = load i64, i64* %RBP.i655
  %8659 = sub i64 %8658, 64
  %8660 = load i64, i64* %RAX.i654
  %8661 = load i64, i64* %PC.i653
  %8662 = add i64 %8661, 4
  store i64 %8662, i64* %PC.i653
  %8663 = inttoptr i64 %8659 to i64*
  store i64 %8660, i64* %8663
  store %struct.Memory* %loadMem_48cdb0, %struct.Memory** %MEMORY
  %loadMem_48cdb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8665 = getelementptr inbounds %struct.GPR, %struct.GPR* %8664, i32 0, i32 33
  %8666 = getelementptr inbounds %struct.Reg, %struct.Reg* %8665, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %8666 to i64*
  %8667 = load i64, i64* %PC.i652
  %8668 = add i64 %8667, 224
  %8669 = load i64, i64* %PC.i652
  %8670 = add i64 %8669, 5
  store i64 %8670, i64* %PC.i652
  %8671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8668, i64* %8671, align 8
  store %struct.Memory* %loadMem_48cdb4, %struct.Memory** %MEMORY
  br label %block_.L_48ce94

block_.L_48cdb9:                                  ; preds = %block_48cc5d, %block_.L_48cc48
  %loadMem_48cdb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8673 = getelementptr inbounds %struct.GPR, %struct.GPR* %8672, i32 0, i32 33
  %8674 = getelementptr inbounds %struct.Reg, %struct.Reg* %8673, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %8674 to i64*
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8676 = getelementptr inbounds %struct.GPR, %struct.GPR* %8675, i32 0, i32 15
  %8677 = getelementptr inbounds %struct.Reg, %struct.Reg* %8676, i32 0, i32 0
  %RBP.i651 = bitcast %union.anon* %8677 to i64*
  %8678 = load i64, i64* %RBP.i651
  %8679 = sub i64 %8678, 44
  %8680 = load i64, i64* %PC.i650
  %8681 = add i64 %8680, 7
  store i64 %8681, i64* %PC.i650
  %8682 = inttoptr i64 %8679 to i32*
  store i32 0, i32* %8682
  store %struct.Memory* %loadMem_48cdb9, %struct.Memory** %MEMORY
  br label %block_.L_48cdc0

block_.L_48cdc0:                                  ; preds = %block_.L_48ce81, %block_.L_48cdb9
  %loadMem_48cdc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8684 = getelementptr inbounds %struct.GPR, %struct.GPR* %8683, i32 0, i32 33
  %8685 = getelementptr inbounds %struct.Reg, %struct.Reg* %8684, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %8685 to i64*
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8687 = getelementptr inbounds %struct.GPR, %struct.GPR* %8686, i32 0, i32 15
  %8688 = getelementptr inbounds %struct.Reg, %struct.Reg* %8687, i32 0, i32 0
  %RBP.i649 = bitcast %union.anon* %8688 to i64*
  %8689 = load i64, i64* %RBP.i649
  %8690 = sub i64 %8689, 44
  %8691 = load i64, i64* %PC.i648
  %8692 = add i64 %8691, 4
  store i64 %8692, i64* %PC.i648
  %8693 = inttoptr i64 %8690 to i32*
  %8694 = load i32, i32* %8693
  %8695 = sub i32 %8694, 16
  %8696 = icmp ult i32 %8694, 16
  %8697 = zext i1 %8696 to i8
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8697, i8* %8698, align 1
  %8699 = and i32 %8695, 255
  %8700 = call i32 @llvm.ctpop.i32(i32 %8699)
  %8701 = trunc i32 %8700 to i8
  %8702 = and i8 %8701, 1
  %8703 = xor i8 %8702, 1
  %8704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8703, i8* %8704, align 1
  %8705 = xor i32 %8694, 16
  %8706 = xor i32 %8705, %8695
  %8707 = lshr i32 %8706, 4
  %8708 = trunc i32 %8707 to i8
  %8709 = and i8 %8708, 1
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8709, i8* %8710, align 1
  %8711 = icmp eq i32 %8695, 0
  %8712 = zext i1 %8711 to i8
  %8713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8712, i8* %8713, align 1
  %8714 = lshr i32 %8695, 31
  %8715 = trunc i32 %8714 to i8
  %8716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8715, i8* %8716, align 1
  %8717 = lshr i32 %8694, 31
  %8718 = xor i32 %8714, %8717
  %8719 = add i32 %8718, %8717
  %8720 = icmp eq i32 %8719, 2
  %8721 = zext i1 %8720 to i8
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8721, i8* %8722, align 1
  store %struct.Memory* %loadMem_48cdc0, %struct.Memory** %MEMORY
  %loadMem_48cdc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 33
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %8725 to i64*
  %8726 = load i64, i64* %PC.i647
  %8727 = add i64 %8726, 203
  %8728 = load i64, i64* %PC.i647
  %8729 = add i64 %8728, 6
  %8730 = load i64, i64* %PC.i647
  %8731 = add i64 %8730, 6
  store i64 %8731, i64* %PC.i647
  %8732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8733 = load i8, i8* %8732, align 1
  %8734 = icmp ne i8 %8733, 0
  %8735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8736 = load i8, i8* %8735, align 1
  %8737 = icmp ne i8 %8736, 0
  %8738 = xor i1 %8734, %8737
  %8739 = xor i1 %8738, true
  %8740 = zext i1 %8739 to i8
  store i8 %8740, i8* %BRANCH_TAKEN, align 1
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8742 = select i1 %8738, i64 %8729, i64 %8727
  store i64 %8742, i64* %8741, align 8
  store %struct.Memory* %loadMem_48cdc4, %struct.Memory** %MEMORY
  %loadBr_48cdc4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cdc4 = icmp eq i8 %loadBr_48cdc4, 1
  br i1 %cmpBr_48cdc4, label %block_.L_48ce8f, label %block_48cdca

block_48cdca:                                     ; preds = %block_.L_48cdc0
  %loadMem_48cdca = load %struct.Memory*, %struct.Memory** %MEMORY
  %8743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8744 = getelementptr inbounds %struct.GPR, %struct.GPR* %8743, i32 0, i32 33
  %8745 = getelementptr inbounds %struct.Reg, %struct.Reg* %8744, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %8745 to i64*
  %8746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8747 = getelementptr inbounds %struct.GPR, %struct.GPR* %8746, i32 0, i32 1
  %8748 = getelementptr inbounds %struct.Reg, %struct.Reg* %8747, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %8748 to i64*
  %8749 = load i64, i64* %PC.i645
  %8750 = add i64 %8749, 8
  store i64 %8750, i64* %PC.i645
  %8751 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8751, i64* %RAX.i646, align 8
  store %struct.Memory* %loadMem_48cdca, %struct.Memory** %MEMORY
  %loadMem_48cdd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8753 = getelementptr inbounds %struct.GPR, %struct.GPR* %8752, i32 0, i32 33
  %8754 = getelementptr inbounds %struct.Reg, %struct.Reg* %8753, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %8754 to i64*
  %8755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8756 = getelementptr inbounds %struct.GPR, %struct.GPR* %8755, i32 0, i32 1
  %8757 = getelementptr inbounds %struct.Reg, %struct.Reg* %8756, i32 0, i32 0
  %RAX.i643 = bitcast %union.anon* %8757 to i64*
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8759 = getelementptr inbounds %struct.GPR, %struct.GPR* %8758, i32 0, i32 5
  %8760 = getelementptr inbounds %struct.Reg, %struct.Reg* %8759, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %8760 to i64*
  %8761 = load i64, i64* %RAX.i643
  %8762 = add i64 %8761, 168
  %8763 = load i64, i64* %PC.i642
  %8764 = add i64 %8763, 6
  store i64 %8764, i64* %PC.i642
  %8765 = inttoptr i64 %8762 to i32*
  %8766 = load i32, i32* %8765
  %8767 = zext i32 %8766 to i64
  store i64 %8767, i64* %RCX.i644, align 8
  store %struct.Memory* %loadMem_48cdd2, %struct.Memory** %MEMORY
  %loadMem_48cdd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8769 = getelementptr inbounds %struct.GPR, %struct.GPR* %8768, i32 0, i32 33
  %8770 = getelementptr inbounds %struct.Reg, %struct.Reg* %8769, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %8770 to i64*
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8772 = getelementptr inbounds %struct.GPR, %struct.GPR* %8771, i32 0, i32 5
  %8773 = getelementptr inbounds %struct.Reg, %struct.Reg* %8772, i32 0, i32 0
  %ECX.i640 = bitcast %union.anon* %8773 to i32*
  %8774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8775 = getelementptr inbounds %struct.GPR, %struct.GPR* %8774, i32 0, i32 15
  %8776 = getelementptr inbounds %struct.Reg, %struct.Reg* %8775, i32 0, i32 0
  %RBP.i641 = bitcast %union.anon* %8776 to i64*
  %8777 = load i64, i64* %RBP.i641
  %8778 = sub i64 %8777, 40
  %8779 = load i32, i32* %ECX.i640
  %8780 = zext i32 %8779 to i64
  %8781 = load i64, i64* %PC.i639
  %8782 = add i64 %8781, 3
  store i64 %8782, i64* %PC.i639
  %8783 = inttoptr i64 %8778 to i32*
  store i32 %8779, i32* %8783
  store %struct.Memory* %loadMem_48cdd8, %struct.Memory** %MEMORY
  br label %block_.L_48cddb

block_.L_48cddb:                                  ; preds = %block_48cdf7, %block_48cdca
  %loadMem_48cddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8785 = getelementptr inbounds %struct.GPR, %struct.GPR* %8784, i32 0, i32 33
  %8786 = getelementptr inbounds %struct.Reg, %struct.Reg* %8785, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %8786 to i64*
  %8787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8788 = getelementptr inbounds %struct.GPR, %struct.GPR* %8787, i32 0, i32 1
  %8789 = getelementptr inbounds %struct.Reg, %struct.Reg* %8788, i32 0, i32 0
  %RAX.i637 = bitcast %union.anon* %8789 to i64*
  %8790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8791 = getelementptr inbounds %struct.GPR, %struct.GPR* %8790, i32 0, i32 15
  %8792 = getelementptr inbounds %struct.Reg, %struct.Reg* %8791, i32 0, i32 0
  %RBP.i638 = bitcast %union.anon* %8792 to i64*
  %8793 = load i64, i64* %RBP.i638
  %8794 = sub i64 %8793, 40
  %8795 = load i64, i64* %PC.i636
  %8796 = add i64 %8795, 3
  store i64 %8796, i64* %PC.i636
  %8797 = inttoptr i64 %8794 to i32*
  %8798 = load i32, i32* %8797
  %8799 = zext i32 %8798 to i64
  store i64 %8799, i64* %RAX.i637, align 8
  store %struct.Memory* %loadMem_48cddb, %struct.Memory** %MEMORY
  %loadMem_48cdde = load %struct.Memory*, %struct.Memory** %MEMORY
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8801 = getelementptr inbounds %struct.GPR, %struct.GPR* %8800, i32 0, i32 33
  %8802 = getelementptr inbounds %struct.Reg, %struct.Reg* %8801, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %8802 to i64*
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8804 = getelementptr inbounds %struct.GPR, %struct.GPR* %8803, i32 0, i32 5
  %8805 = getelementptr inbounds %struct.Reg, %struct.Reg* %8804, i32 0, i32 0
  %RCX.i635 = bitcast %union.anon* %8805 to i64*
  %8806 = load i64, i64* %PC.i634
  %8807 = add i64 %8806, 8
  store i64 %8807, i64* %PC.i634
  %8808 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8808, i64* %RCX.i635, align 8
  store %struct.Memory* %loadMem_48cdde, %struct.Memory** %MEMORY
  %loadMem_48cde6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8810 = getelementptr inbounds %struct.GPR, %struct.GPR* %8809, i32 0, i32 33
  %8811 = getelementptr inbounds %struct.Reg, %struct.Reg* %8810, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %8811 to i64*
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8813 = getelementptr inbounds %struct.GPR, %struct.GPR* %8812, i32 0, i32 5
  %8814 = getelementptr inbounds %struct.Reg, %struct.Reg* %8813, i32 0, i32 0
  %RCX.i632 = bitcast %union.anon* %8814 to i64*
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8816 = getelementptr inbounds %struct.GPR, %struct.GPR* %8815, i32 0, i32 7
  %8817 = getelementptr inbounds %struct.Reg, %struct.Reg* %8816, i32 0, i32 0
  %RDX.i633 = bitcast %union.anon* %8817 to i64*
  %8818 = load i64, i64* %RCX.i632
  %8819 = add i64 %8818, 168
  %8820 = load i64, i64* %PC.i631
  %8821 = add i64 %8820, 6
  store i64 %8821, i64* %PC.i631
  %8822 = inttoptr i64 %8819 to i32*
  %8823 = load i32, i32* %8822
  %8824 = zext i32 %8823 to i64
  store i64 %8824, i64* %RDX.i633, align 8
  store %struct.Memory* %loadMem_48cde6, %struct.Memory** %MEMORY
  %loadMem_48cdec = load %struct.Memory*, %struct.Memory** %MEMORY
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8826 = getelementptr inbounds %struct.GPR, %struct.GPR* %8825, i32 0, i32 33
  %8827 = getelementptr inbounds %struct.Reg, %struct.Reg* %8826, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %8827 to i64*
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 7
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %RDX.i630 = bitcast %union.anon* %8830 to i64*
  %8831 = load i64, i64* %RDX.i630
  %8832 = load i64, i64* %PC.i629
  %8833 = add i64 %8832, 3
  store i64 %8833, i64* %PC.i629
  %8834 = trunc i64 %8831 to i32
  %8835 = add i32 16, %8834
  %8836 = zext i32 %8835 to i64
  store i64 %8836, i64* %RDX.i630, align 8
  %8837 = icmp ult i32 %8835, %8834
  %8838 = icmp ult i32 %8835, 16
  %8839 = or i1 %8837, %8838
  %8840 = zext i1 %8839 to i8
  %8841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8840, i8* %8841, align 1
  %8842 = and i32 %8835, 255
  %8843 = call i32 @llvm.ctpop.i32(i32 %8842)
  %8844 = trunc i32 %8843 to i8
  %8845 = and i8 %8844, 1
  %8846 = xor i8 %8845, 1
  %8847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8846, i8* %8847, align 1
  %8848 = xor i64 16, %8831
  %8849 = trunc i64 %8848 to i32
  %8850 = xor i32 %8849, %8835
  %8851 = lshr i32 %8850, 4
  %8852 = trunc i32 %8851 to i8
  %8853 = and i8 %8852, 1
  %8854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8853, i8* %8854, align 1
  %8855 = icmp eq i32 %8835, 0
  %8856 = zext i1 %8855 to i8
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8856, i8* %8857, align 1
  %8858 = lshr i32 %8835, 31
  %8859 = trunc i32 %8858 to i8
  %8860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8859, i8* %8860, align 1
  %8861 = lshr i32 %8834, 31
  %8862 = xor i32 %8858, %8861
  %8863 = add i32 %8862, %8858
  %8864 = icmp eq i32 %8863, 2
  %8865 = zext i1 %8864 to i8
  %8866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8865, i8* %8866, align 1
  store %struct.Memory* %loadMem_48cdec, %struct.Memory** %MEMORY
  %loadMem_48cdef = load %struct.Memory*, %struct.Memory** %MEMORY
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8868 = getelementptr inbounds %struct.GPR, %struct.GPR* %8867, i32 0, i32 33
  %8869 = getelementptr inbounds %struct.Reg, %struct.Reg* %8868, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %8869 to i64*
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8871 = getelementptr inbounds %struct.GPR, %struct.GPR* %8870, i32 0, i32 1
  %8872 = getelementptr inbounds %struct.Reg, %struct.Reg* %8871, i32 0, i32 0
  %EAX.i627 = bitcast %union.anon* %8872 to i32*
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8874 = getelementptr inbounds %struct.GPR, %struct.GPR* %8873, i32 0, i32 7
  %8875 = getelementptr inbounds %struct.Reg, %struct.Reg* %8874, i32 0, i32 0
  %EDX.i628 = bitcast %union.anon* %8875 to i32*
  %8876 = load i32, i32* %EAX.i627
  %8877 = zext i32 %8876 to i64
  %8878 = load i32, i32* %EDX.i628
  %8879 = zext i32 %8878 to i64
  %8880 = load i64, i64* %PC.i626
  %8881 = add i64 %8880, 2
  store i64 %8881, i64* %PC.i626
  %8882 = sub i32 %8876, %8878
  %8883 = icmp ult i32 %8876, %8878
  %8884 = zext i1 %8883 to i8
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8884, i8* %8885, align 1
  %8886 = and i32 %8882, 255
  %8887 = call i32 @llvm.ctpop.i32(i32 %8886)
  %8888 = trunc i32 %8887 to i8
  %8889 = and i8 %8888, 1
  %8890 = xor i8 %8889, 1
  %8891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8890, i8* %8891, align 1
  %8892 = xor i64 %8879, %8877
  %8893 = trunc i64 %8892 to i32
  %8894 = xor i32 %8893, %8882
  %8895 = lshr i32 %8894, 4
  %8896 = trunc i32 %8895 to i8
  %8897 = and i8 %8896, 1
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8897, i8* %8898, align 1
  %8899 = icmp eq i32 %8882, 0
  %8900 = zext i1 %8899 to i8
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8900, i8* %8901, align 1
  %8902 = lshr i32 %8882, 31
  %8903 = trunc i32 %8902 to i8
  %8904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8903, i8* %8904, align 1
  %8905 = lshr i32 %8876, 31
  %8906 = lshr i32 %8878, 31
  %8907 = xor i32 %8906, %8905
  %8908 = xor i32 %8902, %8905
  %8909 = add i32 %8908, %8907
  %8910 = icmp eq i32 %8909, 2
  %8911 = zext i1 %8910 to i8
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8911, i8* %8912, align 1
  store %struct.Memory* %loadMem_48cdef, %struct.Memory** %MEMORY
  %loadMem_48cdf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8914 = getelementptr inbounds %struct.GPR, %struct.GPR* %8913, i32 0, i32 33
  %8915 = getelementptr inbounds %struct.Reg, %struct.Reg* %8914, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %8915 to i64*
  %8916 = load i64, i64* %PC.i625
  %8917 = add i64 %8916, 139
  %8918 = load i64, i64* %PC.i625
  %8919 = add i64 %8918, 6
  %8920 = load i64, i64* %PC.i625
  %8921 = add i64 %8920, 6
  store i64 %8921, i64* %PC.i625
  %8922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8923 = load i8, i8* %8922, align 1
  %8924 = icmp ne i8 %8923, 0
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8926 = load i8, i8* %8925, align 1
  %8927 = icmp ne i8 %8926, 0
  %8928 = xor i1 %8924, %8927
  %8929 = xor i1 %8928, true
  %8930 = zext i1 %8929 to i8
  store i8 %8930, i8* %BRANCH_TAKEN, align 1
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8932 = select i1 %8928, i64 %8919, i64 %8917
  store i64 %8932, i64* %8931, align 8
  store %struct.Memory* %loadMem_48cdf1, %struct.Memory** %MEMORY
  %loadBr_48cdf1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cdf1 = icmp eq i8 %loadBr_48cdf1, 1
  br i1 %cmpBr_48cdf1, label %block_.L_48ce7c, label %block_48cdf7

block_48cdf7:                                     ; preds = %block_.L_48cddb
  %loadMem_48cdf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8934 = getelementptr inbounds %struct.GPR, %struct.GPR* %8933, i32 0, i32 33
  %8935 = getelementptr inbounds %struct.Reg, %struct.Reg* %8934, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %8935 to i64*
  %8936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8937 = getelementptr inbounds %struct.GPR, %struct.GPR* %8936, i32 0, i32 1
  %8938 = getelementptr inbounds %struct.Reg, %struct.Reg* %8937, i32 0, i32 0
  %RAX.i624 = bitcast %union.anon* %8938 to i64*
  %8939 = load i64, i64* %PC.i623
  %8940 = add i64 %8939, 8
  store i64 %8940, i64* %PC.i623
  %8941 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8941, i64* %RAX.i624, align 8
  store %struct.Memory* %loadMem_48cdf7, %struct.Memory** %MEMORY
  %loadMem_48cdff = load %struct.Memory*, %struct.Memory** %MEMORY
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8943 = getelementptr inbounds %struct.GPR, %struct.GPR* %8942, i32 0, i32 33
  %8944 = getelementptr inbounds %struct.Reg, %struct.Reg* %8943, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %8944 to i64*
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8946 = getelementptr inbounds %struct.GPR, %struct.GPR* %8945, i32 0, i32 1
  %8947 = getelementptr inbounds %struct.Reg, %struct.Reg* %8946, i32 0, i32 0
  %RAX.i622 = bitcast %union.anon* %8947 to i64*
  %8948 = load i64, i64* %RAX.i622
  %8949 = add i64 %8948, 71776
  %8950 = load i64, i64* %PC.i621
  %8951 = add i64 %8950, 7
  store i64 %8951, i64* %PC.i621
  %8952 = inttoptr i64 %8949 to i64*
  %8953 = load i64, i64* %8952
  store i64 %8953, i64* %RAX.i622, align 8
  store %struct.Memory* %loadMem_48cdff, %struct.Memory** %MEMORY
  %loadMem_48ce06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8955 = getelementptr inbounds %struct.GPR, %struct.GPR* %8954, i32 0, i32 33
  %8956 = getelementptr inbounds %struct.Reg, %struct.Reg* %8955, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %8956 to i64*
  %8957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8958 = getelementptr inbounds %struct.GPR, %struct.GPR* %8957, i32 0, i32 5
  %8959 = getelementptr inbounds %struct.Reg, %struct.Reg* %8958, i32 0, i32 0
  %RCX.i620 = bitcast %union.anon* %8959 to i64*
  %8960 = load i64, i64* %PC.i619
  %8961 = add i64 %8960, 8
  store i64 %8961, i64* %PC.i619
  %8962 = load i64, i64* bitcast (%G_0x726418_type* @G_0x726418 to i64*)
  store i64 %8962, i64* %RCX.i620, align 8
  store %struct.Memory* %loadMem_48ce06, %struct.Memory** %MEMORY
  %loadMem_48ce0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8964 = getelementptr inbounds %struct.GPR, %struct.GPR* %8963, i32 0, i32 33
  %8965 = getelementptr inbounds %struct.Reg, %struct.Reg* %8964, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %8965 to i64*
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8967 = getelementptr inbounds %struct.GPR, %struct.GPR* %8966, i32 0, i32 7
  %8968 = getelementptr inbounds %struct.Reg, %struct.Reg* %8967, i32 0, i32 0
  %RDX.i617 = bitcast %union.anon* %8968 to i64*
  %8969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8970 = getelementptr inbounds %struct.GPR, %struct.GPR* %8969, i32 0, i32 15
  %8971 = getelementptr inbounds %struct.Reg, %struct.Reg* %8970, i32 0, i32 0
  %RBP.i618 = bitcast %union.anon* %8971 to i64*
  %8972 = load i64, i64* %RBP.i618
  %8973 = sub i64 %8972, 44
  %8974 = load i64, i64* %PC.i616
  %8975 = add i64 %8974, 3
  store i64 %8975, i64* %PC.i616
  %8976 = inttoptr i64 %8973 to i32*
  %8977 = load i32, i32* %8976
  %8978 = zext i32 %8977 to i64
  store i64 %8978, i64* %RDX.i617, align 8
  store %struct.Memory* %loadMem_48ce0e, %struct.Memory** %MEMORY
  %loadMem_48ce11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8980 = getelementptr inbounds %struct.GPR, %struct.GPR* %8979, i32 0, i32 33
  %8981 = getelementptr inbounds %struct.Reg, %struct.Reg* %8980, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %8981 to i64*
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8983 = getelementptr inbounds %struct.GPR, %struct.GPR* %8982, i32 0, i32 9
  %8984 = getelementptr inbounds %struct.Reg, %struct.Reg* %8983, i32 0, i32 0
  %RSI.i615 = bitcast %union.anon* %8984 to i64*
  %8985 = load i64, i64* %PC.i614
  %8986 = add i64 %8985, 8
  store i64 %8986, i64* %PC.i614
  %8987 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8987, i64* %RSI.i615, align 8
  store %struct.Memory* %loadMem_48ce11, %struct.Memory** %MEMORY
  %loadMem_48ce19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8989 = getelementptr inbounds %struct.GPR, %struct.GPR* %8988, i32 0, i32 33
  %8990 = getelementptr inbounds %struct.Reg, %struct.Reg* %8989, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %8990 to i64*
  %8991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8992 = getelementptr inbounds %struct.GPR, %struct.GPR* %8991, i32 0, i32 7
  %8993 = getelementptr inbounds %struct.Reg, %struct.Reg* %8992, i32 0, i32 0
  %RDX.i612 = bitcast %union.anon* %8993 to i64*
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8995 = getelementptr inbounds %struct.GPR, %struct.GPR* %8994, i32 0, i32 9
  %8996 = getelementptr inbounds %struct.Reg, %struct.Reg* %8995, i32 0, i32 0
  %RSI.i613 = bitcast %union.anon* %8996 to i64*
  %8997 = load i64, i64* %RDX.i612
  %8998 = load i64, i64* %RSI.i613
  %8999 = add i64 %8998, 172
  %9000 = load i64, i64* %PC.i611
  %9001 = add i64 %9000, 6
  store i64 %9001, i64* %PC.i611
  %9002 = trunc i64 %8997 to i32
  %9003 = inttoptr i64 %8999 to i32*
  %9004 = load i32, i32* %9003
  %9005 = add i32 %9004, %9002
  %9006 = zext i32 %9005 to i64
  store i64 %9006, i64* %RDX.i612, align 8
  %9007 = icmp ult i32 %9005, %9002
  %9008 = icmp ult i32 %9005, %9004
  %9009 = or i1 %9007, %9008
  %9010 = zext i1 %9009 to i8
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9010, i8* %9011, align 1
  %9012 = and i32 %9005, 255
  %9013 = call i32 @llvm.ctpop.i32(i32 %9012)
  %9014 = trunc i32 %9013 to i8
  %9015 = and i8 %9014, 1
  %9016 = xor i8 %9015, 1
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9016, i8* %9017, align 1
  %9018 = xor i32 %9004, %9002
  %9019 = xor i32 %9018, %9005
  %9020 = lshr i32 %9019, 4
  %9021 = trunc i32 %9020 to i8
  %9022 = and i8 %9021, 1
  %9023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9022, i8* %9023, align 1
  %9024 = icmp eq i32 %9005, 0
  %9025 = zext i1 %9024 to i8
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9025, i8* %9026, align 1
  %9027 = lshr i32 %9005, 31
  %9028 = trunc i32 %9027 to i8
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9028, i8* %9029, align 1
  %9030 = lshr i32 %9002, 31
  %9031 = lshr i32 %9004, 31
  %9032 = xor i32 %9027, %9030
  %9033 = xor i32 %9027, %9031
  %9034 = add i32 %9032, %9033
  %9035 = icmp eq i32 %9034, 2
  %9036 = zext i1 %9035 to i8
  %9037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9036, i8* %9037, align 1
  store %struct.Memory* %loadMem_48ce19, %struct.Memory** %MEMORY
  %loadMem_48ce1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9039 = getelementptr inbounds %struct.GPR, %struct.GPR* %9038, i32 0, i32 33
  %9040 = getelementptr inbounds %struct.Reg, %struct.Reg* %9039, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %9040 to i64*
  %9041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9042 = getelementptr inbounds %struct.GPR, %struct.GPR* %9041, i32 0, i32 7
  %9043 = getelementptr inbounds %struct.Reg, %struct.Reg* %9042, i32 0, i32 0
  %EDX.i609 = bitcast %union.anon* %9043 to i32*
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9045 = getelementptr inbounds %struct.GPR, %struct.GPR* %9044, i32 0, i32 9
  %9046 = getelementptr inbounds %struct.Reg, %struct.Reg* %9045, i32 0, i32 0
  %RSI.i610 = bitcast %union.anon* %9046 to i64*
  %9047 = load i32, i32* %EDX.i609
  %9048 = zext i32 %9047 to i64
  %9049 = load i64, i64* %PC.i608
  %9050 = add i64 %9049, 3
  store i64 %9050, i64* %PC.i608
  %9051 = shl i64 %9048, 32
  %9052 = ashr exact i64 %9051, 32
  store i64 %9052, i64* %RSI.i610, align 8
  store %struct.Memory* %loadMem_48ce1f, %struct.Memory** %MEMORY
  %loadMem_48ce22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9054 = getelementptr inbounds %struct.GPR, %struct.GPR* %9053, i32 0, i32 33
  %9055 = getelementptr inbounds %struct.Reg, %struct.Reg* %9054, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %9055 to i64*
  %9056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9057 = getelementptr inbounds %struct.GPR, %struct.GPR* %9056, i32 0, i32 5
  %9058 = getelementptr inbounds %struct.Reg, %struct.Reg* %9057, i32 0, i32 0
  %RCX.i606 = bitcast %union.anon* %9058 to i64*
  %9059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9060 = getelementptr inbounds %struct.GPR, %struct.GPR* %9059, i32 0, i32 9
  %9061 = getelementptr inbounds %struct.Reg, %struct.Reg* %9060, i32 0, i32 0
  %RSI.i607 = bitcast %union.anon* %9061 to i64*
  %9062 = load i64, i64* %RCX.i606
  %9063 = load i64, i64* %RSI.i607
  %9064 = mul i64 %9063, 8
  %9065 = add i64 %9064, %9062
  %9066 = load i64, i64* %PC.i605
  %9067 = add i64 %9066, 4
  store i64 %9067, i64* %PC.i605
  %9068 = inttoptr i64 %9065 to i64*
  %9069 = load i64, i64* %9068
  store i64 %9069, i64* %RCX.i606, align 8
  store %struct.Memory* %loadMem_48ce22, %struct.Memory** %MEMORY
  %loadMem_48ce26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9071 = getelementptr inbounds %struct.GPR, %struct.GPR* %9070, i32 0, i32 33
  %9072 = getelementptr inbounds %struct.Reg, %struct.Reg* %9071, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %9072 to i64*
  %9073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9074 = getelementptr inbounds %struct.GPR, %struct.GPR* %9073, i32 0, i32 9
  %9075 = getelementptr inbounds %struct.Reg, %struct.Reg* %9074, i32 0, i32 0
  %RSI.i603 = bitcast %union.anon* %9075 to i64*
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9077 = getelementptr inbounds %struct.GPR, %struct.GPR* %9076, i32 0, i32 15
  %9078 = getelementptr inbounds %struct.Reg, %struct.Reg* %9077, i32 0, i32 0
  %RBP.i604 = bitcast %union.anon* %9078 to i64*
  %9079 = load i64, i64* %RBP.i604
  %9080 = sub i64 %9079, 40
  %9081 = load i64, i64* %PC.i602
  %9082 = add i64 %9081, 4
  store i64 %9082, i64* %PC.i602
  %9083 = inttoptr i64 %9080 to i32*
  %9084 = load i32, i32* %9083
  %9085 = sext i32 %9084 to i64
  store i64 %9085, i64* %RSI.i603, align 8
  store %struct.Memory* %loadMem_48ce26, %struct.Memory** %MEMORY
  %loadMem_48ce2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9087 = getelementptr inbounds %struct.GPR, %struct.GPR* %9086, i32 0, i32 33
  %9088 = getelementptr inbounds %struct.Reg, %struct.Reg* %9087, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %9088 to i64*
  %9089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9090 = getelementptr inbounds %struct.GPR, %struct.GPR* %9089, i32 0, i32 5
  %9091 = getelementptr inbounds %struct.Reg, %struct.Reg* %9090, i32 0, i32 0
  %RCX.i599 = bitcast %union.anon* %9091 to i64*
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9093 = getelementptr inbounds %struct.GPR, %struct.GPR* %9092, i32 0, i32 7
  %9094 = getelementptr inbounds %struct.Reg, %struct.Reg* %9093, i32 0, i32 0
  %RDX.i600 = bitcast %union.anon* %9094 to i64*
  %9095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9096 = getelementptr inbounds %struct.GPR, %struct.GPR* %9095, i32 0, i32 9
  %9097 = getelementptr inbounds %struct.Reg, %struct.Reg* %9096, i32 0, i32 0
  %RSI.i601 = bitcast %union.anon* %9097 to i64*
  %9098 = load i64, i64* %RCX.i599
  %9099 = load i64, i64* %RSI.i601
  %9100 = mul i64 %9099, 2
  %9101 = add i64 %9100, %9098
  %9102 = load i64, i64* %PC.i598
  %9103 = add i64 %9102, 4
  store i64 %9103, i64* %PC.i598
  %9104 = inttoptr i64 %9101 to i16*
  %9105 = load i16, i16* %9104
  %9106 = zext i16 %9105 to i64
  store i64 %9106, i64* %RDX.i600, align 8
  store %struct.Memory* %loadMem_48ce2a, %struct.Memory** %MEMORY
  %loadMem_48ce2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9108 = getelementptr inbounds %struct.GPR, %struct.GPR* %9107, i32 0, i32 33
  %9109 = getelementptr inbounds %struct.Reg, %struct.Reg* %9108, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %9109 to i64*
  %9110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9111 = getelementptr inbounds %struct.GPR, %struct.GPR* %9110, i32 0, i32 5
  %9112 = getelementptr inbounds %struct.Reg, %struct.Reg* %9111, i32 0, i32 0
  %RCX.i597 = bitcast %union.anon* %9112 to i64*
  %9113 = load i64, i64* %PC.i596
  %9114 = add i64 %9113, 8
  store i64 %9114, i64* %PC.i596
  %9115 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %9115, i64* %RCX.i597, align 8
  store %struct.Memory* %loadMem_48ce2e, %struct.Memory** %MEMORY
  %loadMem_48ce36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9117 = getelementptr inbounds %struct.GPR, %struct.GPR* %9116, i32 0, i32 33
  %9118 = getelementptr inbounds %struct.Reg, %struct.Reg* %9117, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %9118 to i64*
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9120 = getelementptr inbounds %struct.GPR, %struct.GPR* %9119, i32 0, i32 5
  %9121 = getelementptr inbounds %struct.Reg, %struct.Reg* %9120, i32 0, i32 0
  %RCX.i595 = bitcast %union.anon* %9121 to i64*
  %9122 = load i64, i64* %RCX.i595
  %9123 = add i64 %9122, 6424
  %9124 = load i64, i64* %PC.i594
  %9125 = add i64 %9124, 7
  store i64 %9125, i64* %PC.i594
  %9126 = inttoptr i64 %9123 to i64*
  %9127 = load i64, i64* %9126
  store i64 %9127, i64* %RCX.i595, align 8
  store %struct.Memory* %loadMem_48ce36, %struct.Memory** %MEMORY
  %loadMem_48ce3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9129 = getelementptr inbounds %struct.GPR, %struct.GPR* %9128, i32 0, i32 33
  %9130 = getelementptr inbounds %struct.Reg, %struct.Reg* %9129, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %9130 to i64*
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9132 = getelementptr inbounds %struct.GPR, %struct.GPR* %9131, i32 0, i32 9
  %9133 = getelementptr inbounds %struct.Reg, %struct.Reg* %9132, i32 0, i32 0
  %RSI.i593 = bitcast %union.anon* %9133 to i64*
  %9134 = load i64, i64* %PC.i592
  %9135 = add i64 %9134, 8
  store i64 %9135, i64* %PC.i592
  %9136 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9136, i64* %RSI.i593, align 8
  store %struct.Memory* %loadMem_48ce3d, %struct.Memory** %MEMORY
  %loadMem_48ce45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9138 = getelementptr inbounds %struct.GPR, %struct.GPR* %9137, i32 0, i32 33
  %9139 = getelementptr inbounds %struct.Reg, %struct.Reg* %9138, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %9139 to i64*
  %9140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9141 = getelementptr inbounds %struct.GPR, %struct.GPR* %9140, i32 0, i32 9
  %9142 = getelementptr inbounds %struct.Reg, %struct.Reg* %9141, i32 0, i32 0
  %RSI.i590 = bitcast %union.anon* %9142 to i64*
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9144 = getelementptr inbounds %struct.GPR, %struct.GPR* %9143, i32 0, i32 11
  %9145 = getelementptr inbounds %struct.Reg, %struct.Reg* %9144, i32 0, i32 0
  %RDI.i591 = bitcast %union.anon* %9145 to i64*
  %9146 = load i64, i64* %RSI.i590
  %9147 = add i64 %9146, 156
  %9148 = load i64, i64* %PC.i589
  %9149 = add i64 %9148, 6
  store i64 %9149, i64* %PC.i589
  %9150 = inttoptr i64 %9147 to i32*
  %9151 = load i32, i32* %9150
  %9152 = zext i32 %9151 to i64
  store i64 %9152, i64* %RDI.i591, align 8
  store %struct.Memory* %loadMem_48ce45, %struct.Memory** %MEMORY
  %loadMem_48ce4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9154 = getelementptr inbounds %struct.GPR, %struct.GPR* %9153, i32 0, i32 33
  %9155 = getelementptr inbounds %struct.Reg, %struct.Reg* %9154, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %9155 to i64*
  %9156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9157 = getelementptr inbounds %struct.GPR, %struct.GPR* %9156, i32 0, i32 11
  %9158 = getelementptr inbounds %struct.Reg, %struct.Reg* %9157, i32 0, i32 0
  %RDI.i587 = bitcast %union.anon* %9158 to i64*
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9160 = getelementptr inbounds %struct.GPR, %struct.GPR* %9159, i32 0, i32 15
  %9161 = getelementptr inbounds %struct.Reg, %struct.Reg* %9160, i32 0, i32 0
  %RBP.i588 = bitcast %union.anon* %9161 to i64*
  %9162 = load i64, i64* %RDI.i587
  %9163 = load i64, i64* %RBP.i588
  %9164 = sub i64 %9163, 44
  %9165 = load i64, i64* %PC.i586
  %9166 = add i64 %9165, 3
  store i64 %9166, i64* %PC.i586
  %9167 = trunc i64 %9162 to i32
  %9168 = inttoptr i64 %9164 to i32*
  %9169 = load i32, i32* %9168
  %9170 = add i32 %9169, %9167
  %9171 = zext i32 %9170 to i64
  store i64 %9171, i64* %RDI.i587, align 8
  %9172 = icmp ult i32 %9170, %9167
  %9173 = icmp ult i32 %9170, %9169
  %9174 = or i1 %9172, %9173
  %9175 = zext i1 %9174 to i8
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9175, i8* %9176, align 1
  %9177 = and i32 %9170, 255
  %9178 = call i32 @llvm.ctpop.i32(i32 %9177)
  %9179 = trunc i32 %9178 to i8
  %9180 = and i8 %9179, 1
  %9181 = xor i8 %9180, 1
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9181, i8* %9182, align 1
  %9183 = xor i32 %9169, %9167
  %9184 = xor i32 %9183, %9170
  %9185 = lshr i32 %9184, 4
  %9186 = trunc i32 %9185 to i8
  %9187 = and i8 %9186, 1
  %9188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9187, i8* %9188, align 1
  %9189 = icmp eq i32 %9170, 0
  %9190 = zext i1 %9189 to i8
  %9191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9190, i8* %9191, align 1
  %9192 = lshr i32 %9170, 31
  %9193 = trunc i32 %9192 to i8
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9193, i8* %9194, align 1
  %9195 = lshr i32 %9167, 31
  %9196 = lshr i32 %9169, 31
  %9197 = xor i32 %9192, %9195
  %9198 = xor i32 %9192, %9196
  %9199 = add i32 %9197, %9198
  %9200 = icmp eq i32 %9199, 2
  %9201 = zext i1 %9200 to i8
  %9202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9201, i8* %9202, align 1
  store %struct.Memory* %loadMem_48ce4b, %struct.Memory** %MEMORY
  %loadMem_48ce4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9204 = getelementptr inbounds %struct.GPR, %struct.GPR* %9203, i32 0, i32 33
  %9205 = getelementptr inbounds %struct.Reg, %struct.Reg* %9204, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %9205 to i64*
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9207 = getelementptr inbounds %struct.GPR, %struct.GPR* %9206, i32 0, i32 11
  %9208 = getelementptr inbounds %struct.Reg, %struct.Reg* %9207, i32 0, i32 0
  %EDI.i584 = bitcast %union.anon* %9208 to i32*
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9210 = getelementptr inbounds %struct.GPR, %struct.GPR* %9209, i32 0, i32 9
  %9211 = getelementptr inbounds %struct.Reg, %struct.Reg* %9210, i32 0, i32 0
  %RSI.i585 = bitcast %union.anon* %9211 to i64*
  %9212 = load i32, i32* %EDI.i584
  %9213 = zext i32 %9212 to i64
  %9214 = load i64, i64* %PC.i583
  %9215 = add i64 %9214, 3
  store i64 %9215, i64* %PC.i583
  %9216 = shl i64 %9213, 32
  %9217 = ashr exact i64 %9216, 32
  store i64 %9217, i64* %RSI.i585, align 8
  store %struct.Memory* %loadMem_48ce4e, %struct.Memory** %MEMORY
  %loadMem_48ce51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9219 = getelementptr inbounds %struct.GPR, %struct.GPR* %9218, i32 0, i32 33
  %9220 = getelementptr inbounds %struct.Reg, %struct.Reg* %9219, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %9220 to i64*
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9222 = getelementptr inbounds %struct.GPR, %struct.GPR* %9221, i32 0, i32 5
  %9223 = getelementptr inbounds %struct.Reg, %struct.Reg* %9222, i32 0, i32 0
  %RCX.i581 = bitcast %union.anon* %9223 to i64*
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9225 = getelementptr inbounds %struct.GPR, %struct.GPR* %9224, i32 0, i32 9
  %9226 = getelementptr inbounds %struct.Reg, %struct.Reg* %9225, i32 0, i32 0
  %RSI.i582 = bitcast %union.anon* %9226 to i64*
  %9227 = load i64, i64* %RCX.i581
  %9228 = load i64, i64* %RSI.i582
  %9229 = mul i64 %9228, 8
  %9230 = add i64 %9229, %9227
  %9231 = load i64, i64* %PC.i580
  %9232 = add i64 %9231, 4
  store i64 %9232, i64* %PC.i580
  %9233 = inttoptr i64 %9230 to i64*
  %9234 = load i64, i64* %9233
  store i64 %9234, i64* %RCX.i581, align 8
  store %struct.Memory* %loadMem_48ce51, %struct.Memory** %MEMORY
  %loadMem_48ce55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9236 = getelementptr inbounds %struct.GPR, %struct.GPR* %9235, i32 0, i32 33
  %9237 = getelementptr inbounds %struct.Reg, %struct.Reg* %9236, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %9237 to i64*
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9239 = getelementptr inbounds %struct.GPR, %struct.GPR* %9238, i32 0, i32 9
  %9240 = getelementptr inbounds %struct.Reg, %struct.Reg* %9239, i32 0, i32 0
  %RSI.i578 = bitcast %union.anon* %9240 to i64*
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9242 = getelementptr inbounds %struct.GPR, %struct.GPR* %9241, i32 0, i32 15
  %9243 = getelementptr inbounds %struct.Reg, %struct.Reg* %9242, i32 0, i32 0
  %RBP.i579 = bitcast %union.anon* %9243 to i64*
  %9244 = load i64, i64* %RBP.i579
  %9245 = sub i64 %9244, 40
  %9246 = load i64, i64* %PC.i577
  %9247 = add i64 %9246, 4
  store i64 %9247, i64* %PC.i577
  %9248 = inttoptr i64 %9245 to i32*
  %9249 = load i32, i32* %9248
  %9250 = sext i32 %9249 to i64
  store i64 %9250, i64* %RSI.i578, align 8
  store %struct.Memory* %loadMem_48ce55, %struct.Memory** %MEMORY
  %loadMem_48ce59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9252 = getelementptr inbounds %struct.GPR, %struct.GPR* %9251, i32 0, i32 33
  %9253 = getelementptr inbounds %struct.Reg, %struct.Reg* %9252, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %9253 to i64*
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9255 = getelementptr inbounds %struct.GPR, %struct.GPR* %9254, i32 0, i32 5
  %9256 = getelementptr inbounds %struct.Reg, %struct.Reg* %9255, i32 0, i32 0
  %RCX.i574 = bitcast %union.anon* %9256 to i64*
  %9257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9258 = getelementptr inbounds %struct.GPR, %struct.GPR* %9257, i32 0, i32 9
  %9259 = getelementptr inbounds %struct.Reg, %struct.Reg* %9258, i32 0, i32 0
  %RSI.i575 = bitcast %union.anon* %9259 to i64*
  %9260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9261 = getelementptr inbounds %struct.GPR, %struct.GPR* %9260, i32 0, i32 11
  %9262 = getelementptr inbounds %struct.Reg, %struct.Reg* %9261, i32 0, i32 0
  %RDI.i576 = bitcast %union.anon* %9262 to i64*
  %9263 = load i64, i64* %RCX.i574
  %9264 = load i64, i64* %RSI.i575
  %9265 = mul i64 %9264, 2
  %9266 = add i64 %9265, %9263
  %9267 = load i64, i64* %PC.i573
  %9268 = add i64 %9267, 4
  store i64 %9268, i64* %PC.i573
  %9269 = inttoptr i64 %9266 to i16*
  %9270 = load i16, i16* %9269
  %9271 = zext i16 %9270 to i64
  store i64 %9271, i64* %RDI.i576, align 8
  store %struct.Memory* %loadMem_48ce59, %struct.Memory** %MEMORY
  %loadMem_48ce5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9273 = getelementptr inbounds %struct.GPR, %struct.GPR* %9272, i32 0, i32 33
  %9274 = getelementptr inbounds %struct.Reg, %struct.Reg* %9273, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %9274 to i64*
  %9275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9276 = getelementptr inbounds %struct.GPR, %struct.GPR* %9275, i32 0, i32 11
  %9277 = getelementptr inbounds %struct.Reg, %struct.Reg* %9276, i32 0, i32 0
  %EDI.i571 = bitcast %union.anon* %9277 to i32*
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9279 = getelementptr inbounds %struct.GPR, %struct.GPR* %9278, i32 0, i32 7
  %9280 = getelementptr inbounds %struct.Reg, %struct.Reg* %9279, i32 0, i32 0
  %RDX.i572 = bitcast %union.anon* %9280 to i64*
  %9281 = load i64, i64* %RDX.i572
  %9282 = load i32, i32* %EDI.i571
  %9283 = zext i32 %9282 to i64
  %9284 = load i64, i64* %PC.i570
  %9285 = add i64 %9284, 2
  store i64 %9285, i64* %PC.i570
  %9286 = trunc i64 %9281 to i32
  %9287 = sub i32 %9286, %9282
  %9288 = zext i32 %9287 to i64
  store i64 %9288, i64* %RDX.i572, align 8
  %9289 = icmp ult i32 %9286, %9282
  %9290 = zext i1 %9289 to i8
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9290, i8* %9291, align 1
  %9292 = and i32 %9287, 255
  %9293 = call i32 @llvm.ctpop.i32(i32 %9292)
  %9294 = trunc i32 %9293 to i8
  %9295 = and i8 %9294, 1
  %9296 = xor i8 %9295, 1
  %9297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9296, i8* %9297, align 1
  %9298 = xor i64 %9283, %9281
  %9299 = trunc i64 %9298 to i32
  %9300 = xor i32 %9299, %9287
  %9301 = lshr i32 %9300, 4
  %9302 = trunc i32 %9301 to i8
  %9303 = and i8 %9302, 1
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9303, i8* %9304, align 1
  %9305 = icmp eq i32 %9287, 0
  %9306 = zext i1 %9305 to i8
  %9307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9306, i8* %9307, align 1
  %9308 = lshr i32 %9287, 31
  %9309 = trunc i32 %9308 to i8
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9309, i8* %9310, align 1
  %9311 = lshr i32 %9286, 31
  %9312 = lshr i32 %9282, 31
  %9313 = xor i32 %9312, %9311
  %9314 = xor i32 %9308, %9311
  %9315 = add i32 %9314, %9313
  %9316 = icmp eq i32 %9315, 2
  %9317 = zext i1 %9316 to i8
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9317, i8* %9318, align 1
  store %struct.Memory* %loadMem_48ce5d, %struct.Memory** %MEMORY
  %loadMem_48ce5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9320 = getelementptr inbounds %struct.GPR, %struct.GPR* %9319, i32 0, i32 33
  %9321 = getelementptr inbounds %struct.Reg, %struct.Reg* %9320, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %9321 to i64*
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9323 = getelementptr inbounds %struct.GPR, %struct.GPR* %9322, i32 0, i32 7
  %9324 = getelementptr inbounds %struct.Reg, %struct.Reg* %9323, i32 0, i32 0
  %EDX.i568 = bitcast %union.anon* %9324 to i32*
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9326 = getelementptr inbounds %struct.GPR, %struct.GPR* %9325, i32 0, i32 5
  %9327 = getelementptr inbounds %struct.Reg, %struct.Reg* %9326, i32 0, i32 0
  %RCX.i569 = bitcast %union.anon* %9327 to i64*
  %9328 = load i32, i32* %EDX.i568
  %9329 = zext i32 %9328 to i64
  %9330 = load i64, i64* %PC.i567
  %9331 = add i64 %9330, 3
  store i64 %9331, i64* %PC.i567
  %9332 = shl i64 %9329, 32
  %9333 = ashr exact i64 %9332, 32
  store i64 %9333, i64* %RCX.i569, align 8
  store %struct.Memory* %loadMem_48ce5f, %struct.Memory** %MEMORY
  %loadMem_48ce62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9335 = getelementptr inbounds %struct.GPR, %struct.GPR* %9334, i32 0, i32 33
  %9336 = getelementptr inbounds %struct.Reg, %struct.Reg* %9335, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %9336 to i64*
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9338 = getelementptr inbounds %struct.GPR, %struct.GPR* %9337, i32 0, i32 1
  %9339 = getelementptr inbounds %struct.Reg, %struct.Reg* %9338, i32 0, i32 0
  %RAX.i565 = bitcast %union.anon* %9339 to i64*
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9341 = getelementptr inbounds %struct.GPR, %struct.GPR* %9340, i32 0, i32 5
  %9342 = getelementptr inbounds %struct.Reg, %struct.Reg* %9341, i32 0, i32 0
  %RCX.i566 = bitcast %union.anon* %9342 to i64*
  %9343 = load i64, i64* %RAX.i565
  %9344 = load i64, i64* %RCX.i566
  %9345 = mul i64 %9344, 4
  %9346 = add i64 %9345, %9343
  %9347 = load i64, i64* %PC.i564
  %9348 = add i64 %9347, 4
  store i64 %9348, i64* %PC.i564
  %9349 = inttoptr i64 %9346 to i32*
  %9350 = load i32, i32* %9349
  %9351 = sext i32 %9350 to i64
  store i64 %9351, i64* %RAX.i565, align 8
  store %struct.Memory* %loadMem_48ce62, %struct.Memory** %MEMORY
  %loadMem_48ce66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9353 = getelementptr inbounds %struct.GPR, %struct.GPR* %9352, i32 0, i32 33
  %9354 = getelementptr inbounds %struct.Reg, %struct.Reg* %9353, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %9354 to i64*
  %9355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9356 = getelementptr inbounds %struct.GPR, %struct.GPR* %9355, i32 0, i32 1
  %9357 = getelementptr inbounds %struct.Reg, %struct.Reg* %9356, i32 0, i32 0
  %RAX.i562 = bitcast %union.anon* %9357 to i64*
  %9358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9359 = getelementptr inbounds %struct.GPR, %struct.GPR* %9358, i32 0, i32 15
  %9360 = getelementptr inbounds %struct.Reg, %struct.Reg* %9359, i32 0, i32 0
  %RBP.i563 = bitcast %union.anon* %9360 to i64*
  %9361 = load i64, i64* %RAX.i562
  %9362 = load i64, i64* %RBP.i563
  %9363 = sub i64 %9362, 64
  %9364 = load i64, i64* %PC.i561
  %9365 = add i64 %9364, 4
  store i64 %9365, i64* %PC.i561
  %9366 = inttoptr i64 %9363 to i64*
  %9367 = load i64, i64* %9366
  %9368 = add i64 %9367, %9361
  store i64 %9368, i64* %RAX.i562, align 8
  %9369 = icmp ult i64 %9368, %9361
  %9370 = icmp ult i64 %9368, %9367
  %9371 = or i1 %9369, %9370
  %9372 = zext i1 %9371 to i8
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9372, i8* %9373, align 1
  %9374 = trunc i64 %9368 to i32
  %9375 = and i32 %9374, 255
  %9376 = call i32 @llvm.ctpop.i32(i32 %9375)
  %9377 = trunc i32 %9376 to i8
  %9378 = and i8 %9377, 1
  %9379 = xor i8 %9378, 1
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9379, i8* %9380, align 1
  %9381 = xor i64 %9367, %9361
  %9382 = xor i64 %9381, %9368
  %9383 = lshr i64 %9382, 4
  %9384 = trunc i64 %9383 to i8
  %9385 = and i8 %9384, 1
  %9386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9385, i8* %9386, align 1
  %9387 = icmp eq i64 %9368, 0
  %9388 = zext i1 %9387 to i8
  %9389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9388, i8* %9389, align 1
  %9390 = lshr i64 %9368, 63
  %9391 = trunc i64 %9390 to i8
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9391, i8* %9392, align 1
  %9393 = lshr i64 %9361, 63
  %9394 = lshr i64 %9367, 63
  %9395 = xor i64 %9390, %9393
  %9396 = xor i64 %9390, %9394
  %9397 = add i64 %9395, %9396
  %9398 = icmp eq i64 %9397, 2
  %9399 = zext i1 %9398 to i8
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9399, i8* %9400, align 1
  store %struct.Memory* %loadMem_48ce66, %struct.Memory** %MEMORY
  %loadMem_48ce6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 33
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 1
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %9406 to i64*
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 15
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %9409 to i64*
  %9410 = load i64, i64* %RBP.i560
  %9411 = sub i64 %9410, 64
  %9412 = load i64, i64* %RAX.i559
  %9413 = load i64, i64* %PC.i558
  %9414 = add i64 %9413, 4
  store i64 %9414, i64* %PC.i558
  %9415 = inttoptr i64 %9411 to i64*
  store i64 %9412, i64* %9415
  store %struct.Memory* %loadMem_48ce6a, %struct.Memory** %MEMORY
  %loadMem_48ce6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9417 = getelementptr inbounds %struct.GPR, %struct.GPR* %9416, i32 0, i32 33
  %9418 = getelementptr inbounds %struct.Reg, %struct.Reg* %9417, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %9418 to i64*
  %9419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9420 = getelementptr inbounds %struct.GPR, %struct.GPR* %9419, i32 0, i32 1
  %9421 = getelementptr inbounds %struct.Reg, %struct.Reg* %9420, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %9421 to i64*
  %9422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9423 = getelementptr inbounds %struct.GPR, %struct.GPR* %9422, i32 0, i32 15
  %9424 = getelementptr inbounds %struct.Reg, %struct.Reg* %9423, i32 0, i32 0
  %RBP.i557 = bitcast %union.anon* %9424 to i64*
  %9425 = load i64, i64* %RBP.i557
  %9426 = sub i64 %9425, 40
  %9427 = load i64, i64* %PC.i555
  %9428 = add i64 %9427, 3
  store i64 %9428, i64* %PC.i555
  %9429 = inttoptr i64 %9426 to i32*
  %9430 = load i32, i32* %9429
  %9431 = zext i32 %9430 to i64
  store i64 %9431, i64* %RAX.i556, align 8
  store %struct.Memory* %loadMem_48ce6e, %struct.Memory** %MEMORY
  %loadMem_48ce71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 33
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %9434 to i64*
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9436 = getelementptr inbounds %struct.GPR, %struct.GPR* %9435, i32 0, i32 1
  %9437 = getelementptr inbounds %struct.Reg, %struct.Reg* %9436, i32 0, i32 0
  %RAX.i554 = bitcast %union.anon* %9437 to i64*
  %9438 = load i64, i64* %RAX.i554
  %9439 = load i64, i64* %PC.i553
  %9440 = add i64 %9439, 3
  store i64 %9440, i64* %PC.i553
  %9441 = trunc i64 %9438 to i32
  %9442 = add i32 1, %9441
  %9443 = zext i32 %9442 to i64
  store i64 %9443, i64* %RAX.i554, align 8
  %9444 = icmp ult i32 %9442, %9441
  %9445 = icmp ult i32 %9442, 1
  %9446 = or i1 %9444, %9445
  %9447 = zext i1 %9446 to i8
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9447, i8* %9448, align 1
  %9449 = and i32 %9442, 255
  %9450 = call i32 @llvm.ctpop.i32(i32 %9449)
  %9451 = trunc i32 %9450 to i8
  %9452 = and i8 %9451, 1
  %9453 = xor i8 %9452, 1
  %9454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9453, i8* %9454, align 1
  %9455 = xor i64 1, %9438
  %9456 = trunc i64 %9455 to i32
  %9457 = xor i32 %9456, %9442
  %9458 = lshr i32 %9457, 4
  %9459 = trunc i32 %9458 to i8
  %9460 = and i8 %9459, 1
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9460, i8* %9461, align 1
  %9462 = icmp eq i32 %9442, 0
  %9463 = zext i1 %9462 to i8
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9463, i8* %9464, align 1
  %9465 = lshr i32 %9442, 31
  %9466 = trunc i32 %9465 to i8
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9466, i8* %9467, align 1
  %9468 = lshr i32 %9441, 31
  %9469 = xor i32 %9465, %9468
  %9470 = add i32 %9469, %9465
  %9471 = icmp eq i32 %9470, 2
  %9472 = zext i1 %9471 to i8
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9472, i8* %9473, align 1
  store %struct.Memory* %loadMem_48ce71, %struct.Memory** %MEMORY
  %loadMem_48ce74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9475 = getelementptr inbounds %struct.GPR, %struct.GPR* %9474, i32 0, i32 33
  %9476 = getelementptr inbounds %struct.Reg, %struct.Reg* %9475, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %9476 to i64*
  %9477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9478 = getelementptr inbounds %struct.GPR, %struct.GPR* %9477, i32 0, i32 1
  %9479 = getelementptr inbounds %struct.Reg, %struct.Reg* %9478, i32 0, i32 0
  %EAX.i551 = bitcast %union.anon* %9479 to i32*
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9481 = getelementptr inbounds %struct.GPR, %struct.GPR* %9480, i32 0, i32 15
  %9482 = getelementptr inbounds %struct.Reg, %struct.Reg* %9481, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %9482 to i64*
  %9483 = load i64, i64* %RBP.i552
  %9484 = sub i64 %9483, 40
  %9485 = load i32, i32* %EAX.i551
  %9486 = zext i32 %9485 to i64
  %9487 = load i64, i64* %PC.i550
  %9488 = add i64 %9487, 3
  store i64 %9488, i64* %PC.i550
  %9489 = inttoptr i64 %9484 to i32*
  store i32 %9485, i32* %9489
  store %struct.Memory* %loadMem_48ce74, %struct.Memory** %MEMORY
  %loadMem_48ce77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9491 = getelementptr inbounds %struct.GPR, %struct.GPR* %9490, i32 0, i32 33
  %9492 = getelementptr inbounds %struct.Reg, %struct.Reg* %9491, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %9492 to i64*
  %9493 = load i64, i64* %PC.i549
  %9494 = add i64 %9493, -156
  %9495 = load i64, i64* %PC.i549
  %9496 = add i64 %9495, 5
  store i64 %9496, i64* %PC.i549
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9494, i64* %9497, align 8
  store %struct.Memory* %loadMem_48ce77, %struct.Memory** %MEMORY
  br label %block_.L_48cddb

block_.L_48ce7c:                                  ; preds = %block_.L_48cddb
  %loadMem_48ce7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9499 = getelementptr inbounds %struct.GPR, %struct.GPR* %9498, i32 0, i32 33
  %9500 = getelementptr inbounds %struct.Reg, %struct.Reg* %9499, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %9500 to i64*
  %9501 = load i64, i64* %PC.i548
  %9502 = add i64 %9501, 5
  %9503 = load i64, i64* %PC.i548
  %9504 = add i64 %9503, 5
  store i64 %9504, i64* %PC.i548
  %9505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9502, i64* %9505, align 8
  store %struct.Memory* %loadMem_48ce7c, %struct.Memory** %MEMORY
  br label %block_.L_48ce81

block_.L_48ce81:                                  ; preds = %block_.L_48ce7c
  %loadMem_48ce81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9507 = getelementptr inbounds %struct.GPR, %struct.GPR* %9506, i32 0, i32 33
  %9508 = getelementptr inbounds %struct.Reg, %struct.Reg* %9507, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %9508 to i64*
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9510 = getelementptr inbounds %struct.GPR, %struct.GPR* %9509, i32 0, i32 1
  %9511 = getelementptr inbounds %struct.Reg, %struct.Reg* %9510, i32 0, i32 0
  %RAX.i546 = bitcast %union.anon* %9511 to i64*
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9513 = getelementptr inbounds %struct.GPR, %struct.GPR* %9512, i32 0, i32 15
  %9514 = getelementptr inbounds %struct.Reg, %struct.Reg* %9513, i32 0, i32 0
  %RBP.i547 = bitcast %union.anon* %9514 to i64*
  %9515 = load i64, i64* %RBP.i547
  %9516 = sub i64 %9515, 44
  %9517 = load i64, i64* %PC.i545
  %9518 = add i64 %9517, 3
  store i64 %9518, i64* %PC.i545
  %9519 = inttoptr i64 %9516 to i32*
  %9520 = load i32, i32* %9519
  %9521 = zext i32 %9520 to i64
  store i64 %9521, i64* %RAX.i546, align 8
  store %struct.Memory* %loadMem_48ce81, %struct.Memory** %MEMORY
  %loadMem_48ce84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9523 = getelementptr inbounds %struct.GPR, %struct.GPR* %9522, i32 0, i32 33
  %9524 = getelementptr inbounds %struct.Reg, %struct.Reg* %9523, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %9524 to i64*
  %9525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9526 = getelementptr inbounds %struct.GPR, %struct.GPR* %9525, i32 0, i32 1
  %9527 = getelementptr inbounds %struct.Reg, %struct.Reg* %9526, i32 0, i32 0
  %RAX.i544 = bitcast %union.anon* %9527 to i64*
  %9528 = load i64, i64* %RAX.i544
  %9529 = load i64, i64* %PC.i543
  %9530 = add i64 %9529, 3
  store i64 %9530, i64* %PC.i543
  %9531 = trunc i64 %9528 to i32
  %9532 = add i32 1, %9531
  %9533 = zext i32 %9532 to i64
  store i64 %9533, i64* %RAX.i544, align 8
  %9534 = icmp ult i32 %9532, %9531
  %9535 = icmp ult i32 %9532, 1
  %9536 = or i1 %9534, %9535
  %9537 = zext i1 %9536 to i8
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9537, i8* %9538, align 1
  %9539 = and i32 %9532, 255
  %9540 = call i32 @llvm.ctpop.i32(i32 %9539)
  %9541 = trunc i32 %9540 to i8
  %9542 = and i8 %9541, 1
  %9543 = xor i8 %9542, 1
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9543, i8* %9544, align 1
  %9545 = xor i64 1, %9528
  %9546 = trunc i64 %9545 to i32
  %9547 = xor i32 %9546, %9532
  %9548 = lshr i32 %9547, 4
  %9549 = trunc i32 %9548 to i8
  %9550 = and i8 %9549, 1
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9550, i8* %9551, align 1
  %9552 = icmp eq i32 %9532, 0
  %9553 = zext i1 %9552 to i8
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9553, i8* %9554, align 1
  %9555 = lshr i32 %9532, 31
  %9556 = trunc i32 %9555 to i8
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9556, i8* %9557, align 1
  %9558 = lshr i32 %9531, 31
  %9559 = xor i32 %9555, %9558
  %9560 = add i32 %9559, %9555
  %9561 = icmp eq i32 %9560, 2
  %9562 = zext i1 %9561 to i8
  %9563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9562, i8* %9563, align 1
  store %struct.Memory* %loadMem_48ce84, %struct.Memory** %MEMORY
  %loadMem_48ce87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9565 = getelementptr inbounds %struct.GPR, %struct.GPR* %9564, i32 0, i32 33
  %9566 = getelementptr inbounds %struct.Reg, %struct.Reg* %9565, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %9566 to i64*
  %9567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9568 = getelementptr inbounds %struct.GPR, %struct.GPR* %9567, i32 0, i32 1
  %9569 = getelementptr inbounds %struct.Reg, %struct.Reg* %9568, i32 0, i32 0
  %EAX.i541 = bitcast %union.anon* %9569 to i32*
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9571 = getelementptr inbounds %struct.GPR, %struct.GPR* %9570, i32 0, i32 15
  %9572 = getelementptr inbounds %struct.Reg, %struct.Reg* %9571, i32 0, i32 0
  %RBP.i542 = bitcast %union.anon* %9572 to i64*
  %9573 = load i64, i64* %RBP.i542
  %9574 = sub i64 %9573, 44
  %9575 = load i32, i32* %EAX.i541
  %9576 = zext i32 %9575 to i64
  %9577 = load i64, i64* %PC.i540
  %9578 = add i64 %9577, 3
  store i64 %9578, i64* %PC.i540
  %9579 = inttoptr i64 %9574 to i32*
  store i32 %9575, i32* %9579
  store %struct.Memory* %loadMem_48ce87, %struct.Memory** %MEMORY
  %loadMem_48ce8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9581 = getelementptr inbounds %struct.GPR, %struct.GPR* %9580, i32 0, i32 33
  %9582 = getelementptr inbounds %struct.Reg, %struct.Reg* %9581, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %9582 to i64*
  %9583 = load i64, i64* %PC.i539
  %9584 = add i64 %9583, -202
  %9585 = load i64, i64* %PC.i539
  %9586 = add i64 %9585, 5
  store i64 %9586, i64* %PC.i539
  %9587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9584, i64* %9587, align 8
  store %struct.Memory* %loadMem_48ce8a, %struct.Memory** %MEMORY
  br label %block_.L_48cdc0

block_.L_48ce8f:                                  ; preds = %block_.L_48cdc0
  %loadMem_48ce8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9589 = getelementptr inbounds %struct.GPR, %struct.GPR* %9588, i32 0, i32 33
  %9590 = getelementptr inbounds %struct.Reg, %struct.Reg* %9589, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %9590 to i64*
  %9591 = load i64, i64* %PC.i538
  %9592 = add i64 %9591, 5
  %9593 = load i64, i64* %PC.i538
  %9594 = add i64 %9593, 5
  store i64 %9594, i64* %PC.i538
  %9595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9592, i64* %9595, align 8
  store %struct.Memory* %loadMem_48ce8f, %struct.Memory** %MEMORY
  br label %block_.L_48ce94

block_.L_48ce94:                                  ; preds = %block_.L_48ce8f, %routine_idivq__rcx.exit
  %loadMem_48ce94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9597 = getelementptr inbounds %struct.GPR, %struct.GPR* %9596, i32 0, i32 33
  %9598 = getelementptr inbounds %struct.Reg, %struct.Reg* %9597, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %9598 to i64*
  %9599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9600 = getelementptr inbounds %struct.GPR, %struct.GPR* %9599, i32 0, i32 1
  %9601 = getelementptr inbounds %struct.Reg, %struct.Reg* %9600, i32 0, i32 0
  %RAX.i537 = bitcast %union.anon* %9601 to i64*
  %9602 = load i64, i64* %PC.i536
  %9603 = add i64 %9602, 8
  store i64 %9603, i64* %PC.i536
  %9604 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9604, i64* %RAX.i537, align 8
  store %struct.Memory* %loadMem_48ce94, %struct.Memory** %MEMORY
  %loadMem_48ce9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9606 = getelementptr inbounds %struct.GPR, %struct.GPR* %9605, i32 0, i32 33
  %9607 = getelementptr inbounds %struct.Reg, %struct.Reg* %9606, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %9607 to i64*
  %9608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9609 = getelementptr inbounds %struct.GPR, %struct.GPR* %9608, i32 0, i32 1
  %9610 = getelementptr inbounds %struct.Reg, %struct.Reg* %9609, i32 0, i32 0
  %RAX.i535 = bitcast %union.anon* %9610 to i64*
  %9611 = load i64, i64* %RAX.i535
  %9612 = add i64 %9611, 72700
  %9613 = load i64, i64* %PC.i534
  %9614 = add i64 %9613, 7
  store i64 %9614, i64* %PC.i534
  %9615 = inttoptr i64 %9612 to i32*
  %9616 = load i32, i32* %9615
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9617, align 1
  %9618 = and i32 %9616, 255
  %9619 = call i32 @llvm.ctpop.i32(i32 %9618)
  %9620 = trunc i32 %9619 to i8
  %9621 = and i8 %9620, 1
  %9622 = xor i8 %9621, 1
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9622, i8* %9623, align 1
  %9624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9624, align 1
  %9625 = icmp eq i32 %9616, 0
  %9626 = zext i1 %9625 to i8
  %9627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9626, i8* %9627, align 1
  %9628 = lshr i32 %9616, 31
  %9629 = trunc i32 %9628 to i8
  %9630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9629, i8* %9630, align 1
  %9631 = lshr i32 %9616, 31
  %9632 = xor i32 %9628, %9631
  %9633 = add i32 %9632, %9631
  %9634 = icmp eq i32 %9633, 2
  %9635 = zext i1 %9634 to i8
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9635, i8* %9636, align 1
  store %struct.Memory* %loadMem_48ce9c, %struct.Memory** %MEMORY
  %loadMem_48cea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9638 = getelementptr inbounds %struct.GPR, %struct.GPR* %9637, i32 0, i32 33
  %9639 = getelementptr inbounds %struct.Reg, %struct.Reg* %9638, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %9639 to i64*
  %9640 = load i64, i64* %PC.i533
  %9641 = add i64 %9640, 382
  %9642 = load i64, i64* %PC.i533
  %9643 = add i64 %9642, 6
  %9644 = load i64, i64* %PC.i533
  %9645 = add i64 %9644, 6
  store i64 %9645, i64* %PC.i533
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9647 = load i8, i8* %9646, align 1
  store i8 %9647, i8* %BRANCH_TAKEN, align 1
  %9648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9649 = icmp ne i8 %9647, 0
  %9650 = select i1 %9649, i64 %9641, i64 %9643
  store i64 %9650, i64* %9648, align 8
  store %struct.Memory* %loadMem_48cea3, %struct.Memory** %MEMORY
  %loadBr_48cea3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cea3 = icmp eq i8 %loadBr_48cea3, 1
  br i1 %cmpBr_48cea3, label %block_.L_48d021, label %block_48cea9

block_48cea9:                                     ; preds = %block_.L_48ce94
  %loadMem_48cea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9652 = getelementptr inbounds %struct.GPR, %struct.GPR* %9651, i32 0, i32 33
  %9653 = getelementptr inbounds %struct.Reg, %struct.Reg* %9652, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %9653 to i64*
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9655 = getelementptr inbounds %struct.GPR, %struct.GPR* %9654, i32 0, i32 15
  %9656 = getelementptr inbounds %struct.Reg, %struct.Reg* %9655, i32 0, i32 0
  %RBP.i532 = bitcast %union.anon* %9656 to i64*
  %9657 = load i64, i64* %RBP.i532
  %9658 = sub i64 %9657, 44
  %9659 = load i64, i64* %PC.i531
  %9660 = add i64 %9659, 7
  store i64 %9660, i64* %PC.i531
  %9661 = inttoptr i64 %9658 to i32*
  store i32 0, i32* %9661
  store %struct.Memory* %loadMem_48cea9, %struct.Memory** %MEMORY
  br label %block_.L_48ceb0

block_.L_48ceb0:                                  ; preds = %block_.L_48d00e, %block_48cea9
  %loadMem_48ceb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9663 = getelementptr inbounds %struct.GPR, %struct.GPR* %9662, i32 0, i32 33
  %9664 = getelementptr inbounds %struct.Reg, %struct.Reg* %9663, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %9664 to i64*
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9666 = getelementptr inbounds %struct.GPR, %struct.GPR* %9665, i32 0, i32 1
  %9667 = getelementptr inbounds %struct.Reg, %struct.Reg* %9666, i32 0, i32 0
  %RAX.i529 = bitcast %union.anon* %9667 to i64*
  %9668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9669 = getelementptr inbounds %struct.GPR, %struct.GPR* %9668, i32 0, i32 15
  %9670 = getelementptr inbounds %struct.Reg, %struct.Reg* %9669, i32 0, i32 0
  %RBP.i530 = bitcast %union.anon* %9670 to i64*
  %9671 = load i64, i64* %RBP.i530
  %9672 = sub i64 %9671, 44
  %9673 = load i64, i64* %PC.i528
  %9674 = add i64 %9673, 3
  store i64 %9674, i64* %PC.i528
  %9675 = inttoptr i64 %9672 to i32*
  %9676 = load i32, i32* %9675
  %9677 = zext i32 %9676 to i64
  store i64 %9677, i64* %RAX.i529, align 8
  store %struct.Memory* %loadMem_48ceb0, %struct.Memory** %MEMORY
  %loadMem_48ceb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9679 = getelementptr inbounds %struct.GPR, %struct.GPR* %9678, i32 0, i32 33
  %9680 = getelementptr inbounds %struct.Reg, %struct.Reg* %9679, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %9680 to i64*
  %9681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9682 = getelementptr inbounds %struct.GPR, %struct.GPR* %9681, i32 0, i32 5
  %9683 = getelementptr inbounds %struct.Reg, %struct.Reg* %9682, i32 0, i32 0
  %RCX.i527 = bitcast %union.anon* %9683 to i64*
  %9684 = load i64, i64* %PC.i526
  %9685 = add i64 %9684, 8
  store i64 %9685, i64* %PC.i526
  %9686 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9686, i64* %RCX.i527, align 8
  store %struct.Memory* %loadMem_48ceb3, %struct.Memory** %MEMORY
  %loadMem_48cebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9688 = getelementptr inbounds %struct.GPR, %struct.GPR* %9687, i32 0, i32 33
  %9689 = getelementptr inbounds %struct.Reg, %struct.Reg* %9688, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %9689 to i64*
  %9690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9691 = getelementptr inbounds %struct.GPR, %struct.GPR* %9690, i32 0, i32 1
  %9692 = getelementptr inbounds %struct.Reg, %struct.Reg* %9691, i32 0, i32 0
  %EAX.i524 = bitcast %union.anon* %9692 to i32*
  %9693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9694 = getelementptr inbounds %struct.GPR, %struct.GPR* %9693, i32 0, i32 5
  %9695 = getelementptr inbounds %struct.Reg, %struct.Reg* %9694, i32 0, i32 0
  %RCX.i525 = bitcast %union.anon* %9695 to i64*
  %9696 = load i32, i32* %EAX.i524
  %9697 = zext i32 %9696 to i64
  %9698 = load i64, i64* %RCX.i525
  %9699 = add i64 %9698, 72712
  %9700 = load i64, i64* %PC.i523
  %9701 = add i64 %9700, 6
  store i64 %9701, i64* %PC.i523
  %9702 = inttoptr i64 %9699 to i32*
  %9703 = load i32, i32* %9702
  %9704 = sub i32 %9696, %9703
  %9705 = icmp ult i32 %9696, %9703
  %9706 = zext i1 %9705 to i8
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9706, i8* %9707, align 1
  %9708 = and i32 %9704, 255
  %9709 = call i32 @llvm.ctpop.i32(i32 %9708)
  %9710 = trunc i32 %9709 to i8
  %9711 = and i8 %9710, 1
  %9712 = xor i8 %9711, 1
  %9713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9712, i8* %9713, align 1
  %9714 = xor i32 %9703, %9696
  %9715 = xor i32 %9714, %9704
  %9716 = lshr i32 %9715, 4
  %9717 = trunc i32 %9716 to i8
  %9718 = and i8 %9717, 1
  %9719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9718, i8* %9719, align 1
  %9720 = icmp eq i32 %9704, 0
  %9721 = zext i1 %9720 to i8
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9721, i8* %9722, align 1
  %9723 = lshr i32 %9704, 31
  %9724 = trunc i32 %9723 to i8
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9724, i8* %9725, align 1
  %9726 = lshr i32 %9696, 31
  %9727 = lshr i32 %9703, 31
  %9728 = xor i32 %9727, %9726
  %9729 = xor i32 %9723, %9726
  %9730 = add i32 %9729, %9728
  %9731 = icmp eq i32 %9730, 2
  %9732 = zext i1 %9731 to i8
  %9733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9732, i8* %9733, align 1
  store %struct.Memory* %loadMem_48cebb, %struct.Memory** %MEMORY
  %loadMem_48cec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9735 = getelementptr inbounds %struct.GPR, %struct.GPR* %9734, i32 0, i32 33
  %9736 = getelementptr inbounds %struct.Reg, %struct.Reg* %9735, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %9736 to i64*
  %9737 = load i64, i64* %PC.i522
  %9738 = add i64 %9737, 347
  %9739 = load i64, i64* %PC.i522
  %9740 = add i64 %9739, 6
  %9741 = load i64, i64* %PC.i522
  %9742 = add i64 %9741, 6
  store i64 %9742, i64* %PC.i522
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9744 = load i8, i8* %9743, align 1
  %9745 = icmp ne i8 %9744, 0
  %9746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9747 = load i8, i8* %9746, align 1
  %9748 = icmp ne i8 %9747, 0
  %9749 = xor i1 %9745, %9748
  %9750 = xor i1 %9749, true
  %9751 = zext i1 %9750 to i8
  store i8 %9751, i8* %BRANCH_TAKEN, align 1
  %9752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9753 = select i1 %9749, i64 %9740, i64 %9738
  store i64 %9753, i64* %9752, align 8
  store %struct.Memory* %loadMem_48cec1, %struct.Memory** %MEMORY
  %loadBr_48cec1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cec1 = icmp eq i8 %loadBr_48cec1, 1
  br i1 %cmpBr_48cec1, label %block_.L_48d01c, label %block_48cec7

block_48cec7:                                     ; preds = %block_.L_48ceb0
  %loadMem_48cec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9755 = getelementptr inbounds %struct.GPR, %struct.GPR* %9754, i32 0, i32 33
  %9756 = getelementptr inbounds %struct.Reg, %struct.Reg* %9755, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %9756 to i64*
  %9757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9758 = getelementptr inbounds %struct.GPR, %struct.GPR* %9757, i32 0, i32 1
  %9759 = getelementptr inbounds %struct.Reg, %struct.Reg* %9758, i32 0, i32 0
  %RAX.i521 = bitcast %union.anon* %9759 to i64*
  %9760 = load i64, i64* %PC.i520
  %9761 = add i64 %9760, 8
  store i64 %9761, i64* %PC.i520
  %9762 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9762, i64* %RAX.i521, align 8
  store %struct.Memory* %loadMem_48cec7, %struct.Memory** %MEMORY
  %loadMem_48cecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9764 = getelementptr inbounds %struct.GPR, %struct.GPR* %9763, i32 0, i32 33
  %9765 = getelementptr inbounds %struct.Reg, %struct.Reg* %9764, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %9765 to i64*
  %9766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9767 = getelementptr inbounds %struct.GPR, %struct.GPR* %9766, i32 0, i32 1
  %9768 = getelementptr inbounds %struct.Reg, %struct.Reg* %9767, i32 0, i32 0
  %RAX.i518 = bitcast %union.anon* %9768 to i64*
  %9769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9770 = getelementptr inbounds %struct.GPR, %struct.GPR* %9769, i32 0, i32 5
  %9771 = getelementptr inbounds %struct.Reg, %struct.Reg* %9770, i32 0, i32 0
  %RCX.i519 = bitcast %union.anon* %9771 to i64*
  %9772 = load i64, i64* %RAX.i518
  %9773 = add i64 %9772, 176
  %9774 = load i64, i64* %PC.i517
  %9775 = add i64 %9774, 6
  store i64 %9775, i64* %PC.i517
  %9776 = inttoptr i64 %9773 to i32*
  %9777 = load i32, i32* %9776
  %9778 = zext i32 %9777 to i64
  store i64 %9778, i64* %RCX.i519, align 8
  store %struct.Memory* %loadMem_48cecf, %struct.Memory** %MEMORY
  %loadMem_48ced5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9780 = getelementptr inbounds %struct.GPR, %struct.GPR* %9779, i32 0, i32 33
  %9781 = getelementptr inbounds %struct.Reg, %struct.Reg* %9780, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %9781 to i64*
  %9782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9783 = getelementptr inbounds %struct.GPR, %struct.GPR* %9782, i32 0, i32 5
  %9784 = getelementptr inbounds %struct.Reg, %struct.Reg* %9783, i32 0, i32 0
  %ECX.i515 = bitcast %union.anon* %9784 to i32*
  %9785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9786 = getelementptr inbounds %struct.GPR, %struct.GPR* %9785, i32 0, i32 15
  %9787 = getelementptr inbounds %struct.Reg, %struct.Reg* %9786, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %9787 to i64*
  %9788 = load i64, i64* %RBP.i516
  %9789 = sub i64 %9788, 40
  %9790 = load i32, i32* %ECX.i515
  %9791 = zext i32 %9790 to i64
  %9792 = load i64, i64* %PC.i514
  %9793 = add i64 %9792, 3
  store i64 %9793, i64* %PC.i514
  %9794 = inttoptr i64 %9789 to i32*
  store i32 %9790, i32* %9794
  store %struct.Memory* %loadMem_48ced5, %struct.Memory** %MEMORY
  br label %block_.L_48ced8

block_.L_48ced8:                                  ; preds = %block_48ceff, %block_48cec7
  %loadMem_48ced8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9796 = getelementptr inbounds %struct.GPR, %struct.GPR* %9795, i32 0, i32 33
  %9797 = getelementptr inbounds %struct.Reg, %struct.Reg* %9796, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %9797 to i64*
  %9798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9799 = getelementptr inbounds %struct.GPR, %struct.GPR* %9798, i32 0, i32 1
  %9800 = getelementptr inbounds %struct.Reg, %struct.Reg* %9799, i32 0, i32 0
  %RAX.i512 = bitcast %union.anon* %9800 to i64*
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9802 = getelementptr inbounds %struct.GPR, %struct.GPR* %9801, i32 0, i32 15
  %9803 = getelementptr inbounds %struct.Reg, %struct.Reg* %9802, i32 0, i32 0
  %RBP.i513 = bitcast %union.anon* %9803 to i64*
  %9804 = load i64, i64* %RBP.i513
  %9805 = sub i64 %9804, 40
  %9806 = load i64, i64* %PC.i511
  %9807 = add i64 %9806, 3
  store i64 %9807, i64* %PC.i511
  %9808 = inttoptr i64 %9805 to i32*
  %9809 = load i32, i32* %9808
  %9810 = zext i32 %9809 to i64
  store i64 %9810, i64* %RAX.i512, align 8
  store %struct.Memory* %loadMem_48ced8, %struct.Memory** %MEMORY
  %loadMem_48cedb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9812 = getelementptr inbounds %struct.GPR, %struct.GPR* %9811, i32 0, i32 33
  %9813 = getelementptr inbounds %struct.Reg, %struct.Reg* %9812, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %9813 to i64*
  %9814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9815 = getelementptr inbounds %struct.GPR, %struct.GPR* %9814, i32 0, i32 5
  %9816 = getelementptr inbounds %struct.Reg, %struct.Reg* %9815, i32 0, i32 0
  %RCX.i510 = bitcast %union.anon* %9816 to i64*
  %9817 = load i64, i64* %PC.i509
  %9818 = add i64 %9817, 8
  store i64 %9818, i64* %PC.i509
  %9819 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9819, i64* %RCX.i510, align 8
  store %struct.Memory* %loadMem_48cedb, %struct.Memory** %MEMORY
  %loadMem_48cee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9821 = getelementptr inbounds %struct.GPR, %struct.GPR* %9820, i32 0, i32 33
  %9822 = getelementptr inbounds %struct.Reg, %struct.Reg* %9821, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %9822 to i64*
  %9823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9824 = getelementptr inbounds %struct.GPR, %struct.GPR* %9823, i32 0, i32 5
  %9825 = getelementptr inbounds %struct.Reg, %struct.Reg* %9824, i32 0, i32 0
  %RCX.i507 = bitcast %union.anon* %9825 to i64*
  %9826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9827 = getelementptr inbounds %struct.GPR, %struct.GPR* %9826, i32 0, i32 7
  %9828 = getelementptr inbounds %struct.Reg, %struct.Reg* %9827, i32 0, i32 0
  %RDX.i508 = bitcast %union.anon* %9828 to i64*
  %9829 = load i64, i64* %RCX.i507
  %9830 = add i64 %9829, 176
  %9831 = load i64, i64* %PC.i506
  %9832 = add i64 %9831, 6
  store i64 %9832, i64* %PC.i506
  %9833 = inttoptr i64 %9830 to i32*
  %9834 = load i32, i32* %9833
  %9835 = zext i32 %9834 to i64
  store i64 %9835, i64* %RDX.i508, align 8
  store %struct.Memory* %loadMem_48cee3, %struct.Memory** %MEMORY
  %loadMem_48cee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9837 = getelementptr inbounds %struct.GPR, %struct.GPR* %9836, i32 0, i32 33
  %9838 = getelementptr inbounds %struct.Reg, %struct.Reg* %9837, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %9838 to i64*
  %9839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9840 = getelementptr inbounds %struct.GPR, %struct.GPR* %9839, i32 0, i32 5
  %9841 = getelementptr inbounds %struct.Reg, %struct.Reg* %9840, i32 0, i32 0
  %RCX.i505 = bitcast %union.anon* %9841 to i64*
  %9842 = load i64, i64* %PC.i504
  %9843 = add i64 %9842, 8
  store i64 %9843, i64* %PC.i504
  %9844 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9844, i64* %RCX.i505, align 8
  store %struct.Memory* %loadMem_48cee9, %struct.Memory** %MEMORY
  %loadMem_48cef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9846 = getelementptr inbounds %struct.GPR, %struct.GPR* %9845, i32 0, i32 33
  %9847 = getelementptr inbounds %struct.Reg, %struct.Reg* %9846, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %9847 to i64*
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9849 = getelementptr inbounds %struct.GPR, %struct.GPR* %9848, i32 0, i32 5
  %9850 = getelementptr inbounds %struct.Reg, %struct.Reg* %9849, i32 0, i32 0
  %RCX.i502 = bitcast %union.anon* %9850 to i64*
  %9851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9852 = getelementptr inbounds %struct.GPR, %struct.GPR* %9851, i32 0, i32 7
  %9853 = getelementptr inbounds %struct.Reg, %struct.Reg* %9852, i32 0, i32 0
  %RDX.i503 = bitcast %union.anon* %9853 to i64*
  %9854 = load i64, i64* %RDX.i503
  %9855 = load i64, i64* %RCX.i502
  %9856 = add i64 %9855, 72708
  %9857 = load i64, i64* %PC.i501
  %9858 = add i64 %9857, 6
  store i64 %9858, i64* %PC.i501
  %9859 = trunc i64 %9854 to i32
  %9860 = inttoptr i64 %9856 to i32*
  %9861 = load i32, i32* %9860
  %9862 = add i32 %9861, %9859
  %9863 = zext i32 %9862 to i64
  store i64 %9863, i64* %RDX.i503, align 8
  %9864 = icmp ult i32 %9862, %9859
  %9865 = icmp ult i32 %9862, %9861
  %9866 = or i1 %9864, %9865
  %9867 = zext i1 %9866 to i8
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9867, i8* %9868, align 1
  %9869 = and i32 %9862, 255
  %9870 = call i32 @llvm.ctpop.i32(i32 %9869)
  %9871 = trunc i32 %9870 to i8
  %9872 = and i8 %9871, 1
  %9873 = xor i8 %9872, 1
  %9874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9873, i8* %9874, align 1
  %9875 = xor i32 %9861, %9859
  %9876 = xor i32 %9875, %9862
  %9877 = lshr i32 %9876, 4
  %9878 = trunc i32 %9877 to i8
  %9879 = and i8 %9878, 1
  %9880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9879, i8* %9880, align 1
  %9881 = icmp eq i32 %9862, 0
  %9882 = zext i1 %9881 to i8
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9882, i8* %9883, align 1
  %9884 = lshr i32 %9862, 31
  %9885 = trunc i32 %9884 to i8
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9885, i8* %9886, align 1
  %9887 = lshr i32 %9859, 31
  %9888 = lshr i32 %9861, 31
  %9889 = xor i32 %9884, %9887
  %9890 = xor i32 %9884, %9888
  %9891 = add i32 %9889, %9890
  %9892 = icmp eq i32 %9891, 2
  %9893 = zext i1 %9892 to i8
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9893, i8* %9894, align 1
  store %struct.Memory* %loadMem_48cef1, %struct.Memory** %MEMORY
  %loadMem_48cef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9896 = getelementptr inbounds %struct.GPR, %struct.GPR* %9895, i32 0, i32 33
  %9897 = getelementptr inbounds %struct.Reg, %struct.Reg* %9896, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %9897 to i64*
  %9898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9899 = getelementptr inbounds %struct.GPR, %struct.GPR* %9898, i32 0, i32 1
  %9900 = getelementptr inbounds %struct.Reg, %struct.Reg* %9899, i32 0, i32 0
  %EAX.i499 = bitcast %union.anon* %9900 to i32*
  %9901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9902 = getelementptr inbounds %struct.GPR, %struct.GPR* %9901, i32 0, i32 7
  %9903 = getelementptr inbounds %struct.Reg, %struct.Reg* %9902, i32 0, i32 0
  %EDX.i500 = bitcast %union.anon* %9903 to i32*
  %9904 = load i32, i32* %EAX.i499
  %9905 = zext i32 %9904 to i64
  %9906 = load i32, i32* %EDX.i500
  %9907 = zext i32 %9906 to i64
  %9908 = load i64, i64* %PC.i498
  %9909 = add i64 %9908, 2
  store i64 %9909, i64* %PC.i498
  %9910 = sub i32 %9904, %9906
  %9911 = icmp ult i32 %9904, %9906
  %9912 = zext i1 %9911 to i8
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9912, i8* %9913, align 1
  %9914 = and i32 %9910, 255
  %9915 = call i32 @llvm.ctpop.i32(i32 %9914)
  %9916 = trunc i32 %9915 to i8
  %9917 = and i8 %9916, 1
  %9918 = xor i8 %9917, 1
  %9919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9918, i8* %9919, align 1
  %9920 = xor i64 %9907, %9905
  %9921 = trunc i64 %9920 to i32
  %9922 = xor i32 %9921, %9910
  %9923 = lshr i32 %9922, 4
  %9924 = trunc i32 %9923 to i8
  %9925 = and i8 %9924, 1
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9925, i8* %9926, align 1
  %9927 = icmp eq i32 %9910, 0
  %9928 = zext i1 %9927 to i8
  %9929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9928, i8* %9929, align 1
  %9930 = lshr i32 %9910, 31
  %9931 = trunc i32 %9930 to i8
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9931, i8* %9932, align 1
  %9933 = lshr i32 %9904, 31
  %9934 = lshr i32 %9906, 31
  %9935 = xor i32 %9934, %9933
  %9936 = xor i32 %9930, %9933
  %9937 = add i32 %9936, %9935
  %9938 = icmp eq i32 %9937, 2
  %9939 = zext i1 %9938 to i8
  %9940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9939, i8* %9940, align 1
  store %struct.Memory* %loadMem_48cef7, %struct.Memory** %MEMORY
  %loadMem_48cef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9942 = getelementptr inbounds %struct.GPR, %struct.GPR* %9941, i32 0, i32 33
  %9943 = getelementptr inbounds %struct.Reg, %struct.Reg* %9942, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %9943 to i64*
  %9944 = load i64, i64* %PC.i497
  %9945 = add i64 %9944, 272
  %9946 = load i64, i64* %PC.i497
  %9947 = add i64 %9946, 6
  %9948 = load i64, i64* %PC.i497
  %9949 = add i64 %9948, 6
  store i64 %9949, i64* %PC.i497
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9951 = load i8, i8* %9950, align 1
  %9952 = icmp ne i8 %9951, 0
  %9953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9954 = load i8, i8* %9953, align 1
  %9955 = icmp ne i8 %9954, 0
  %9956 = xor i1 %9952, %9955
  %9957 = xor i1 %9956, true
  %9958 = zext i1 %9957 to i8
  store i8 %9958, i8* %BRANCH_TAKEN, align 1
  %9959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9960 = select i1 %9956, i64 %9947, i64 %9945
  store i64 %9960, i64* %9959, align 8
  store %struct.Memory* %loadMem_48cef9, %struct.Memory** %MEMORY
  %loadBr_48cef9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48cef9 = icmp eq i8 %loadBr_48cef9, 1
  br i1 %cmpBr_48cef9, label %block_.L_48d009, label %block_48ceff

block_48ceff:                                     ; preds = %block_.L_48ced8
  %loadMem_48ceff = load %struct.Memory*, %struct.Memory** %MEMORY
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9962 = getelementptr inbounds %struct.GPR, %struct.GPR* %9961, i32 0, i32 33
  %9963 = getelementptr inbounds %struct.Reg, %struct.Reg* %9962, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %9963 to i64*
  %9964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9965 = getelementptr inbounds %struct.GPR, %struct.GPR* %9964, i32 0, i32 1
  %9966 = getelementptr inbounds %struct.Reg, %struct.Reg* %9965, i32 0, i32 0
  %RAX.i496 = bitcast %union.anon* %9966 to i64*
  %9967 = load i64, i64* %PC.i495
  %9968 = add i64 %9967, 8
  store i64 %9968, i64* %PC.i495
  %9969 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9969, i64* %RAX.i496, align 8
  store %struct.Memory* %loadMem_48ceff, %struct.Memory** %MEMORY
  %loadMem_48cf07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9971 = getelementptr inbounds %struct.GPR, %struct.GPR* %9970, i32 0, i32 33
  %9972 = getelementptr inbounds %struct.Reg, %struct.Reg* %9971, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %9972 to i64*
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9974 = getelementptr inbounds %struct.GPR, %struct.GPR* %9973, i32 0, i32 1
  %9975 = getelementptr inbounds %struct.Reg, %struct.Reg* %9974, i32 0, i32 0
  %RAX.i494 = bitcast %union.anon* %9975 to i64*
  %9976 = load i64, i64* %RAX.i494
  %9977 = add i64 %9976, 71776
  %9978 = load i64, i64* %PC.i493
  %9979 = add i64 %9978, 7
  store i64 %9979, i64* %PC.i493
  %9980 = inttoptr i64 %9977 to i64*
  %9981 = load i64, i64* %9980
  store i64 %9981, i64* %RAX.i494, align 8
  store %struct.Memory* %loadMem_48cf07, %struct.Memory** %MEMORY
  %loadMem_48cf0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9983 = getelementptr inbounds %struct.GPR, %struct.GPR* %9982, i32 0, i32 33
  %9984 = getelementptr inbounds %struct.Reg, %struct.Reg* %9983, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %9984 to i64*
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9986 = getelementptr inbounds %struct.GPR, %struct.GPR* %9985, i32 0, i32 5
  %9987 = getelementptr inbounds %struct.Reg, %struct.Reg* %9986, i32 0, i32 0
  %RCX.i492 = bitcast %union.anon* %9987 to i64*
  %9988 = load i64, i64* %PC.i491
  %9989 = add i64 %9988, 8
  store i64 %9989, i64* %PC.i491
  %9990 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %9990, i64* %RCX.i492, align 8
  store %struct.Memory* %loadMem_48cf0e, %struct.Memory** %MEMORY
  %loadMem_48cf16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9992 = getelementptr inbounds %struct.GPR, %struct.GPR* %9991, i32 0, i32 33
  %9993 = getelementptr inbounds %struct.Reg, %struct.Reg* %9992, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %9993 to i64*
  %9994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9995 = getelementptr inbounds %struct.GPR, %struct.GPR* %9994, i32 0, i32 5
  %9996 = getelementptr inbounds %struct.Reg, %struct.Reg* %9995, i32 0, i32 0
  %RCX.i490 = bitcast %union.anon* %9996 to i64*
  %9997 = load i64, i64* %RCX.i490
  %9998 = load i64, i64* %PC.i489
  %9999 = add i64 %9998, 3
  store i64 %9999, i64* %PC.i489
  %10000 = inttoptr i64 %9997 to i64*
  %10001 = load i64, i64* %10000
  store i64 %10001, i64* %RCX.i490, align 8
  store %struct.Memory* %loadMem_48cf16, %struct.Memory** %MEMORY
  %loadMem_48cf19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10003 = getelementptr inbounds %struct.GPR, %struct.GPR* %10002, i32 0, i32 33
  %10004 = getelementptr inbounds %struct.Reg, %struct.Reg* %10003, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %10004 to i64*
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10006 = getelementptr inbounds %struct.GPR, %struct.GPR* %10005, i32 0, i32 7
  %10007 = getelementptr inbounds %struct.Reg, %struct.Reg* %10006, i32 0, i32 0
  %RDX.i487 = bitcast %union.anon* %10007 to i64*
  %10008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10009 = getelementptr inbounds %struct.GPR, %struct.GPR* %10008, i32 0, i32 15
  %10010 = getelementptr inbounds %struct.Reg, %struct.Reg* %10009, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %10010 to i64*
  %10011 = load i64, i64* %RBP.i488
  %10012 = sub i64 %10011, 44
  %10013 = load i64, i64* %PC.i486
  %10014 = add i64 %10013, 3
  store i64 %10014, i64* %PC.i486
  %10015 = inttoptr i64 %10012 to i32*
  %10016 = load i32, i32* %10015
  %10017 = zext i32 %10016 to i64
  store i64 %10017, i64* %RDX.i487, align 8
  store %struct.Memory* %loadMem_48cf19, %struct.Memory** %MEMORY
  %loadMem_48cf1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10019 = getelementptr inbounds %struct.GPR, %struct.GPR* %10018, i32 0, i32 33
  %10020 = getelementptr inbounds %struct.Reg, %struct.Reg* %10019, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %10020 to i64*
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10022 = getelementptr inbounds %struct.GPR, %struct.GPR* %10021, i32 0, i32 9
  %10023 = getelementptr inbounds %struct.Reg, %struct.Reg* %10022, i32 0, i32 0
  %RSI.i485 = bitcast %union.anon* %10023 to i64*
  %10024 = load i64, i64* %PC.i484
  %10025 = add i64 %10024, 8
  store i64 %10025, i64* %PC.i484
  %10026 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10026, i64* %RSI.i485, align 8
  store %struct.Memory* %loadMem_48cf1c, %struct.Memory** %MEMORY
  %loadMem_48cf24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10028 = getelementptr inbounds %struct.GPR, %struct.GPR* %10027, i32 0, i32 33
  %10029 = getelementptr inbounds %struct.Reg, %struct.Reg* %10028, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %10029 to i64*
  %10030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10031 = getelementptr inbounds %struct.GPR, %struct.GPR* %10030, i32 0, i32 7
  %10032 = getelementptr inbounds %struct.Reg, %struct.Reg* %10031, i32 0, i32 0
  %RDX.i482 = bitcast %union.anon* %10032 to i64*
  %10033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10034 = getelementptr inbounds %struct.GPR, %struct.GPR* %10033, i32 0, i32 9
  %10035 = getelementptr inbounds %struct.Reg, %struct.Reg* %10034, i32 0, i32 0
  %RSI.i483 = bitcast %union.anon* %10035 to i64*
  %10036 = load i64, i64* %RDX.i482
  %10037 = load i64, i64* %RSI.i483
  %10038 = add i64 %10037, 180
  %10039 = load i64, i64* %PC.i481
  %10040 = add i64 %10039, 6
  store i64 %10040, i64* %PC.i481
  %10041 = trunc i64 %10036 to i32
  %10042 = inttoptr i64 %10038 to i32*
  %10043 = load i32, i32* %10042
  %10044 = add i32 %10043, %10041
  %10045 = zext i32 %10044 to i64
  store i64 %10045, i64* %RDX.i482, align 8
  %10046 = icmp ult i32 %10044, %10041
  %10047 = icmp ult i32 %10044, %10043
  %10048 = or i1 %10046, %10047
  %10049 = zext i1 %10048 to i8
  %10050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10049, i8* %10050, align 1
  %10051 = and i32 %10044, 255
  %10052 = call i32 @llvm.ctpop.i32(i32 %10051)
  %10053 = trunc i32 %10052 to i8
  %10054 = and i8 %10053, 1
  %10055 = xor i8 %10054, 1
  %10056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10055, i8* %10056, align 1
  %10057 = xor i32 %10043, %10041
  %10058 = xor i32 %10057, %10044
  %10059 = lshr i32 %10058, 4
  %10060 = trunc i32 %10059 to i8
  %10061 = and i8 %10060, 1
  %10062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10061, i8* %10062, align 1
  %10063 = icmp eq i32 %10044, 0
  %10064 = zext i1 %10063 to i8
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10064, i8* %10065, align 1
  %10066 = lshr i32 %10044, 31
  %10067 = trunc i32 %10066 to i8
  %10068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10067, i8* %10068, align 1
  %10069 = lshr i32 %10041, 31
  %10070 = lshr i32 %10043, 31
  %10071 = xor i32 %10066, %10069
  %10072 = xor i32 %10066, %10070
  %10073 = add i32 %10071, %10072
  %10074 = icmp eq i32 %10073, 2
  %10075 = zext i1 %10074 to i8
  %10076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10075, i8* %10076, align 1
  store %struct.Memory* %loadMem_48cf24, %struct.Memory** %MEMORY
  %loadMem_48cf2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10078 = getelementptr inbounds %struct.GPR, %struct.GPR* %10077, i32 0, i32 33
  %10079 = getelementptr inbounds %struct.Reg, %struct.Reg* %10078, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %10079 to i64*
  %10080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10081 = getelementptr inbounds %struct.GPR, %struct.GPR* %10080, i32 0, i32 7
  %10082 = getelementptr inbounds %struct.Reg, %struct.Reg* %10081, i32 0, i32 0
  %EDX.i479 = bitcast %union.anon* %10082 to i32*
  %10083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10084 = getelementptr inbounds %struct.GPR, %struct.GPR* %10083, i32 0, i32 9
  %10085 = getelementptr inbounds %struct.Reg, %struct.Reg* %10084, i32 0, i32 0
  %RSI.i480 = bitcast %union.anon* %10085 to i64*
  %10086 = load i32, i32* %EDX.i479
  %10087 = zext i32 %10086 to i64
  %10088 = load i64, i64* %PC.i478
  %10089 = add i64 %10088, 3
  store i64 %10089, i64* %PC.i478
  %10090 = shl i64 %10087, 32
  %10091 = ashr exact i64 %10090, 32
  store i64 %10091, i64* %RSI.i480, align 8
  store %struct.Memory* %loadMem_48cf2a, %struct.Memory** %MEMORY
  %loadMem_48cf2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10093 = getelementptr inbounds %struct.GPR, %struct.GPR* %10092, i32 0, i32 33
  %10094 = getelementptr inbounds %struct.Reg, %struct.Reg* %10093, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %10094 to i64*
  %10095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10096 = getelementptr inbounds %struct.GPR, %struct.GPR* %10095, i32 0, i32 5
  %10097 = getelementptr inbounds %struct.Reg, %struct.Reg* %10096, i32 0, i32 0
  %RCX.i476 = bitcast %union.anon* %10097 to i64*
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10099 = getelementptr inbounds %struct.GPR, %struct.GPR* %10098, i32 0, i32 9
  %10100 = getelementptr inbounds %struct.Reg, %struct.Reg* %10099, i32 0, i32 0
  %RSI.i477 = bitcast %union.anon* %10100 to i64*
  %10101 = load i64, i64* %RCX.i476
  %10102 = load i64, i64* %RSI.i477
  %10103 = mul i64 %10102, 8
  %10104 = add i64 %10103, %10101
  %10105 = load i64, i64* %PC.i475
  %10106 = add i64 %10105, 4
  store i64 %10106, i64* %PC.i475
  %10107 = inttoptr i64 %10104 to i64*
  %10108 = load i64, i64* %10107
  store i64 %10108, i64* %RCX.i476, align 8
  store %struct.Memory* %loadMem_48cf2d, %struct.Memory** %MEMORY
  %loadMem_48cf31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10110 = getelementptr inbounds %struct.GPR, %struct.GPR* %10109, i32 0, i32 33
  %10111 = getelementptr inbounds %struct.Reg, %struct.Reg* %10110, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %10111 to i64*
  %10112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10113 = getelementptr inbounds %struct.GPR, %struct.GPR* %10112, i32 0, i32 9
  %10114 = getelementptr inbounds %struct.Reg, %struct.Reg* %10113, i32 0, i32 0
  %RSI.i473 = bitcast %union.anon* %10114 to i64*
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10116 = getelementptr inbounds %struct.GPR, %struct.GPR* %10115, i32 0, i32 15
  %10117 = getelementptr inbounds %struct.Reg, %struct.Reg* %10116, i32 0, i32 0
  %RBP.i474 = bitcast %union.anon* %10117 to i64*
  %10118 = load i64, i64* %RBP.i474
  %10119 = sub i64 %10118, 40
  %10120 = load i64, i64* %PC.i472
  %10121 = add i64 %10120, 4
  store i64 %10121, i64* %PC.i472
  %10122 = inttoptr i64 %10119 to i32*
  %10123 = load i32, i32* %10122
  %10124 = sext i32 %10123 to i64
  store i64 %10124, i64* %RSI.i473, align 8
  store %struct.Memory* %loadMem_48cf31, %struct.Memory** %MEMORY
  %loadMem_48cf35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10126 = getelementptr inbounds %struct.GPR, %struct.GPR* %10125, i32 0, i32 33
  %10127 = getelementptr inbounds %struct.Reg, %struct.Reg* %10126, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %10127 to i64*
  %10128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10129 = getelementptr inbounds %struct.GPR, %struct.GPR* %10128, i32 0, i32 5
  %10130 = getelementptr inbounds %struct.Reg, %struct.Reg* %10129, i32 0, i32 0
  %RCX.i469 = bitcast %union.anon* %10130 to i64*
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10132 = getelementptr inbounds %struct.GPR, %struct.GPR* %10131, i32 0, i32 7
  %10133 = getelementptr inbounds %struct.Reg, %struct.Reg* %10132, i32 0, i32 0
  %RDX.i470 = bitcast %union.anon* %10133 to i64*
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 9
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %RSI.i471 = bitcast %union.anon* %10136 to i64*
  %10137 = load i64, i64* %RCX.i469
  %10138 = load i64, i64* %RSI.i471
  %10139 = mul i64 %10138, 2
  %10140 = add i64 %10139, %10137
  %10141 = load i64, i64* %PC.i468
  %10142 = add i64 %10141, 4
  store i64 %10142, i64* %PC.i468
  %10143 = inttoptr i64 %10140 to i16*
  %10144 = load i16, i16* %10143
  %10145 = zext i16 %10144 to i64
  store i64 %10145, i64* %RDX.i470, align 8
  store %struct.Memory* %loadMem_48cf35, %struct.Memory** %MEMORY
  %loadMem_48cf39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10147 = getelementptr inbounds %struct.GPR, %struct.GPR* %10146, i32 0, i32 33
  %10148 = getelementptr inbounds %struct.Reg, %struct.Reg* %10147, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %10148 to i64*
  %10149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10150 = getelementptr inbounds %struct.GPR, %struct.GPR* %10149, i32 0, i32 5
  %10151 = getelementptr inbounds %struct.Reg, %struct.Reg* %10150, i32 0, i32 0
  %RCX.i467 = bitcast %union.anon* %10151 to i64*
  %10152 = load i64, i64* %PC.i466
  %10153 = add i64 %10152, 8
  store i64 %10153, i64* %PC.i466
  %10154 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %10154, i64* %RCX.i467, align 8
  store %struct.Memory* %loadMem_48cf39, %struct.Memory** %MEMORY
  %loadMem_48cf41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10156 = getelementptr inbounds %struct.GPR, %struct.GPR* %10155, i32 0, i32 33
  %10157 = getelementptr inbounds %struct.Reg, %struct.Reg* %10156, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %10157 to i64*
  %10158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10159 = getelementptr inbounds %struct.GPR, %struct.GPR* %10158, i32 0, i32 5
  %10160 = getelementptr inbounds %struct.Reg, %struct.Reg* %10159, i32 0, i32 0
  %RCX.i465 = bitcast %union.anon* %10160 to i64*
  %10161 = load i64, i64* %RCX.i465
  %10162 = add i64 %10161, 6464
  %10163 = load i64, i64* %PC.i464
  %10164 = add i64 %10163, 7
  store i64 %10164, i64* %PC.i464
  %10165 = inttoptr i64 %10162 to i64*
  %10166 = load i64, i64* %10165
  store i64 %10166, i64* %RCX.i465, align 8
  store %struct.Memory* %loadMem_48cf41, %struct.Memory** %MEMORY
  %loadMem_48cf48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10168 = getelementptr inbounds %struct.GPR, %struct.GPR* %10167, i32 0, i32 33
  %10169 = getelementptr inbounds %struct.Reg, %struct.Reg* %10168, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %10169 to i64*
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10171 = getelementptr inbounds %struct.GPR, %struct.GPR* %10170, i32 0, i32 5
  %10172 = getelementptr inbounds %struct.Reg, %struct.Reg* %10171, i32 0, i32 0
  %RCX.i463 = bitcast %union.anon* %10172 to i64*
  %10173 = load i64, i64* %RCX.i463
  %10174 = load i64, i64* %PC.i462
  %10175 = add i64 %10174, 3
  store i64 %10175, i64* %PC.i462
  %10176 = inttoptr i64 %10173 to i64*
  %10177 = load i64, i64* %10176
  store i64 %10177, i64* %RCX.i463, align 8
  store %struct.Memory* %loadMem_48cf48, %struct.Memory** %MEMORY
  %loadMem_48cf4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10179 = getelementptr inbounds %struct.GPR, %struct.GPR* %10178, i32 0, i32 33
  %10180 = getelementptr inbounds %struct.Reg, %struct.Reg* %10179, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %10180 to i64*
  %10181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10182 = getelementptr inbounds %struct.GPR, %struct.GPR* %10181, i32 0, i32 9
  %10183 = getelementptr inbounds %struct.Reg, %struct.Reg* %10182, i32 0, i32 0
  %RSI.i461 = bitcast %union.anon* %10183 to i64*
  %10184 = load i64, i64* %PC.i460
  %10185 = add i64 %10184, 8
  store i64 %10185, i64* %PC.i460
  %10186 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10186, i64* %RSI.i461, align 8
  store %struct.Memory* %loadMem_48cf4b, %struct.Memory** %MEMORY
  %loadMem_48cf53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10188 = getelementptr inbounds %struct.GPR, %struct.GPR* %10187, i32 0, i32 33
  %10189 = getelementptr inbounds %struct.Reg, %struct.Reg* %10188, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %10189 to i64*
  %10190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10191 = getelementptr inbounds %struct.GPR, %struct.GPR* %10190, i32 0, i32 9
  %10192 = getelementptr inbounds %struct.Reg, %struct.Reg* %10191, i32 0, i32 0
  %RSI.i458 = bitcast %union.anon* %10192 to i64*
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10194 = getelementptr inbounds %struct.GPR, %struct.GPR* %10193, i32 0, i32 11
  %10195 = getelementptr inbounds %struct.Reg, %struct.Reg* %10194, i32 0, i32 0
  %RDI.i459 = bitcast %union.anon* %10195 to i64*
  %10196 = load i64, i64* %RSI.i458
  %10197 = add i64 %10196, 164
  %10198 = load i64, i64* %PC.i457
  %10199 = add i64 %10198, 6
  store i64 %10199, i64* %PC.i457
  %10200 = inttoptr i64 %10197 to i32*
  %10201 = load i32, i32* %10200
  %10202 = zext i32 %10201 to i64
  store i64 %10202, i64* %RDI.i459, align 8
  store %struct.Memory* %loadMem_48cf53, %struct.Memory** %MEMORY
  %loadMem_48cf59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10204 = getelementptr inbounds %struct.GPR, %struct.GPR* %10203, i32 0, i32 33
  %10205 = getelementptr inbounds %struct.Reg, %struct.Reg* %10204, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %10205 to i64*
  %10206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10207 = getelementptr inbounds %struct.GPR, %struct.GPR* %10206, i32 0, i32 11
  %10208 = getelementptr inbounds %struct.Reg, %struct.Reg* %10207, i32 0, i32 0
  %RDI.i455 = bitcast %union.anon* %10208 to i64*
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10210 = getelementptr inbounds %struct.GPR, %struct.GPR* %10209, i32 0, i32 15
  %10211 = getelementptr inbounds %struct.Reg, %struct.Reg* %10210, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %10211 to i64*
  %10212 = load i64, i64* %RDI.i455
  %10213 = load i64, i64* %RBP.i456
  %10214 = sub i64 %10213, 44
  %10215 = load i64, i64* %PC.i454
  %10216 = add i64 %10215, 3
  store i64 %10216, i64* %PC.i454
  %10217 = trunc i64 %10212 to i32
  %10218 = inttoptr i64 %10214 to i32*
  %10219 = load i32, i32* %10218
  %10220 = add i32 %10219, %10217
  %10221 = zext i32 %10220 to i64
  store i64 %10221, i64* %RDI.i455, align 8
  %10222 = icmp ult i32 %10220, %10217
  %10223 = icmp ult i32 %10220, %10219
  %10224 = or i1 %10222, %10223
  %10225 = zext i1 %10224 to i8
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10225, i8* %10226, align 1
  %10227 = and i32 %10220, 255
  %10228 = call i32 @llvm.ctpop.i32(i32 %10227)
  %10229 = trunc i32 %10228 to i8
  %10230 = and i8 %10229, 1
  %10231 = xor i8 %10230, 1
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10231, i8* %10232, align 1
  %10233 = xor i32 %10219, %10217
  %10234 = xor i32 %10233, %10220
  %10235 = lshr i32 %10234, 4
  %10236 = trunc i32 %10235 to i8
  %10237 = and i8 %10236, 1
  %10238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10237, i8* %10238, align 1
  %10239 = icmp eq i32 %10220, 0
  %10240 = zext i1 %10239 to i8
  %10241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10240, i8* %10241, align 1
  %10242 = lshr i32 %10220, 31
  %10243 = trunc i32 %10242 to i8
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10243, i8* %10244, align 1
  %10245 = lshr i32 %10217, 31
  %10246 = lshr i32 %10219, 31
  %10247 = xor i32 %10242, %10245
  %10248 = xor i32 %10242, %10246
  %10249 = add i32 %10247, %10248
  %10250 = icmp eq i32 %10249, 2
  %10251 = zext i1 %10250 to i8
  %10252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10251, i8* %10252, align 1
  store %struct.Memory* %loadMem_48cf59, %struct.Memory** %MEMORY
  %loadMem_48cf5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10254 = getelementptr inbounds %struct.GPR, %struct.GPR* %10253, i32 0, i32 33
  %10255 = getelementptr inbounds %struct.Reg, %struct.Reg* %10254, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %10255 to i64*
  %10256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10257 = getelementptr inbounds %struct.GPR, %struct.GPR* %10256, i32 0, i32 11
  %10258 = getelementptr inbounds %struct.Reg, %struct.Reg* %10257, i32 0, i32 0
  %EDI.i452 = bitcast %union.anon* %10258 to i32*
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10260 = getelementptr inbounds %struct.GPR, %struct.GPR* %10259, i32 0, i32 9
  %10261 = getelementptr inbounds %struct.Reg, %struct.Reg* %10260, i32 0, i32 0
  %RSI.i453 = bitcast %union.anon* %10261 to i64*
  %10262 = load i32, i32* %EDI.i452
  %10263 = zext i32 %10262 to i64
  %10264 = load i64, i64* %PC.i451
  %10265 = add i64 %10264, 3
  store i64 %10265, i64* %PC.i451
  %10266 = shl i64 %10263, 32
  %10267 = ashr exact i64 %10266, 32
  store i64 %10267, i64* %RSI.i453, align 8
  store %struct.Memory* %loadMem_48cf5c, %struct.Memory** %MEMORY
  %loadMem_48cf5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10269 = getelementptr inbounds %struct.GPR, %struct.GPR* %10268, i32 0, i32 33
  %10270 = getelementptr inbounds %struct.Reg, %struct.Reg* %10269, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %10270 to i64*
  %10271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10272 = getelementptr inbounds %struct.GPR, %struct.GPR* %10271, i32 0, i32 5
  %10273 = getelementptr inbounds %struct.Reg, %struct.Reg* %10272, i32 0, i32 0
  %RCX.i449 = bitcast %union.anon* %10273 to i64*
  %10274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10275 = getelementptr inbounds %struct.GPR, %struct.GPR* %10274, i32 0, i32 9
  %10276 = getelementptr inbounds %struct.Reg, %struct.Reg* %10275, i32 0, i32 0
  %RSI.i450 = bitcast %union.anon* %10276 to i64*
  %10277 = load i64, i64* %RCX.i449
  %10278 = load i64, i64* %RSI.i450
  %10279 = mul i64 %10278, 8
  %10280 = add i64 %10279, %10277
  %10281 = load i64, i64* %PC.i448
  %10282 = add i64 %10281, 4
  store i64 %10282, i64* %PC.i448
  %10283 = inttoptr i64 %10280 to i64*
  %10284 = load i64, i64* %10283
  store i64 %10284, i64* %RCX.i449, align 8
  store %struct.Memory* %loadMem_48cf5f, %struct.Memory** %MEMORY
  %loadMem_48cf63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10286 = getelementptr inbounds %struct.GPR, %struct.GPR* %10285, i32 0, i32 33
  %10287 = getelementptr inbounds %struct.Reg, %struct.Reg* %10286, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %10287 to i64*
  %10288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10289 = getelementptr inbounds %struct.GPR, %struct.GPR* %10288, i32 0, i32 9
  %10290 = getelementptr inbounds %struct.Reg, %struct.Reg* %10289, i32 0, i32 0
  %RSI.i446 = bitcast %union.anon* %10290 to i64*
  %10291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10292 = getelementptr inbounds %struct.GPR, %struct.GPR* %10291, i32 0, i32 15
  %10293 = getelementptr inbounds %struct.Reg, %struct.Reg* %10292, i32 0, i32 0
  %RBP.i447 = bitcast %union.anon* %10293 to i64*
  %10294 = load i64, i64* %RBP.i447
  %10295 = sub i64 %10294, 40
  %10296 = load i64, i64* %PC.i445
  %10297 = add i64 %10296, 4
  store i64 %10297, i64* %PC.i445
  %10298 = inttoptr i64 %10295 to i32*
  %10299 = load i32, i32* %10298
  %10300 = sext i32 %10299 to i64
  store i64 %10300, i64* %RSI.i446, align 8
  store %struct.Memory* %loadMem_48cf63, %struct.Memory** %MEMORY
  %loadMem_48cf67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10302 = getelementptr inbounds %struct.GPR, %struct.GPR* %10301, i32 0, i32 33
  %10303 = getelementptr inbounds %struct.Reg, %struct.Reg* %10302, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %10303 to i64*
  %10304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10305 = getelementptr inbounds %struct.GPR, %struct.GPR* %10304, i32 0, i32 5
  %10306 = getelementptr inbounds %struct.Reg, %struct.Reg* %10305, i32 0, i32 0
  %RCX.i442 = bitcast %union.anon* %10306 to i64*
  %10307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10308 = getelementptr inbounds %struct.GPR, %struct.GPR* %10307, i32 0, i32 9
  %10309 = getelementptr inbounds %struct.Reg, %struct.Reg* %10308, i32 0, i32 0
  %RSI.i443 = bitcast %union.anon* %10309 to i64*
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10311 = getelementptr inbounds %struct.GPR, %struct.GPR* %10310, i32 0, i32 11
  %10312 = getelementptr inbounds %struct.Reg, %struct.Reg* %10311, i32 0, i32 0
  %RDI.i444 = bitcast %union.anon* %10312 to i64*
  %10313 = load i64, i64* %RCX.i442
  %10314 = load i64, i64* %RSI.i443
  %10315 = mul i64 %10314, 2
  %10316 = add i64 %10315, %10313
  %10317 = load i64, i64* %PC.i441
  %10318 = add i64 %10317, 4
  store i64 %10318, i64* %PC.i441
  %10319 = inttoptr i64 %10316 to i16*
  %10320 = load i16, i16* %10319
  %10321 = zext i16 %10320 to i64
  store i64 %10321, i64* %RDI.i444, align 8
  store %struct.Memory* %loadMem_48cf67, %struct.Memory** %MEMORY
  %loadMem_48cf6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10323 = getelementptr inbounds %struct.GPR, %struct.GPR* %10322, i32 0, i32 33
  %10324 = getelementptr inbounds %struct.Reg, %struct.Reg* %10323, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %10324 to i64*
  %10325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10326 = getelementptr inbounds %struct.GPR, %struct.GPR* %10325, i32 0, i32 11
  %10327 = getelementptr inbounds %struct.Reg, %struct.Reg* %10326, i32 0, i32 0
  %EDI.i439 = bitcast %union.anon* %10327 to i32*
  %10328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10329 = getelementptr inbounds %struct.GPR, %struct.GPR* %10328, i32 0, i32 7
  %10330 = getelementptr inbounds %struct.Reg, %struct.Reg* %10329, i32 0, i32 0
  %RDX.i440 = bitcast %union.anon* %10330 to i64*
  %10331 = load i64, i64* %RDX.i440
  %10332 = load i32, i32* %EDI.i439
  %10333 = zext i32 %10332 to i64
  %10334 = load i64, i64* %PC.i438
  %10335 = add i64 %10334, 2
  store i64 %10335, i64* %PC.i438
  %10336 = trunc i64 %10331 to i32
  %10337 = sub i32 %10336, %10332
  %10338 = zext i32 %10337 to i64
  store i64 %10338, i64* %RDX.i440, align 8
  %10339 = icmp ult i32 %10336, %10332
  %10340 = zext i1 %10339 to i8
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10340, i8* %10341, align 1
  %10342 = and i32 %10337, 255
  %10343 = call i32 @llvm.ctpop.i32(i32 %10342)
  %10344 = trunc i32 %10343 to i8
  %10345 = and i8 %10344, 1
  %10346 = xor i8 %10345, 1
  %10347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10346, i8* %10347, align 1
  %10348 = xor i64 %10333, %10331
  %10349 = trunc i64 %10348 to i32
  %10350 = xor i32 %10349, %10337
  %10351 = lshr i32 %10350, 4
  %10352 = trunc i32 %10351 to i8
  %10353 = and i8 %10352, 1
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10353, i8* %10354, align 1
  %10355 = icmp eq i32 %10337, 0
  %10356 = zext i1 %10355 to i8
  %10357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10356, i8* %10357, align 1
  %10358 = lshr i32 %10337, 31
  %10359 = trunc i32 %10358 to i8
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10359, i8* %10360, align 1
  %10361 = lshr i32 %10336, 31
  %10362 = lshr i32 %10332, 31
  %10363 = xor i32 %10362, %10361
  %10364 = xor i32 %10358, %10361
  %10365 = add i32 %10364, %10363
  %10366 = icmp eq i32 %10365, 2
  %10367 = zext i1 %10366 to i8
  %10368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10367, i8* %10368, align 1
  store %struct.Memory* %loadMem_48cf6b, %struct.Memory** %MEMORY
  %loadMem_48cf6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10370 = getelementptr inbounds %struct.GPR, %struct.GPR* %10369, i32 0, i32 33
  %10371 = getelementptr inbounds %struct.Reg, %struct.Reg* %10370, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %10371 to i64*
  %10372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10373 = getelementptr inbounds %struct.GPR, %struct.GPR* %10372, i32 0, i32 7
  %10374 = getelementptr inbounds %struct.Reg, %struct.Reg* %10373, i32 0, i32 0
  %EDX.i436 = bitcast %union.anon* %10374 to i32*
  %10375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10376 = getelementptr inbounds %struct.GPR, %struct.GPR* %10375, i32 0, i32 5
  %10377 = getelementptr inbounds %struct.Reg, %struct.Reg* %10376, i32 0, i32 0
  %RCX.i437 = bitcast %union.anon* %10377 to i64*
  %10378 = load i32, i32* %EDX.i436
  %10379 = zext i32 %10378 to i64
  %10380 = load i64, i64* %PC.i435
  %10381 = add i64 %10380, 3
  store i64 %10381, i64* %PC.i435
  %10382 = shl i64 %10379, 32
  %10383 = ashr exact i64 %10382, 32
  store i64 %10383, i64* %RCX.i437, align 8
  store %struct.Memory* %loadMem_48cf6d, %struct.Memory** %MEMORY
  %loadMem_48cf70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10385 = getelementptr inbounds %struct.GPR, %struct.GPR* %10384, i32 0, i32 33
  %10386 = getelementptr inbounds %struct.Reg, %struct.Reg* %10385, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %10386 to i64*
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10388 = getelementptr inbounds %struct.GPR, %struct.GPR* %10387, i32 0, i32 1
  %10389 = getelementptr inbounds %struct.Reg, %struct.Reg* %10388, i32 0, i32 0
  %RAX.i433 = bitcast %union.anon* %10389 to i64*
  %10390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10391 = getelementptr inbounds %struct.GPR, %struct.GPR* %10390, i32 0, i32 5
  %10392 = getelementptr inbounds %struct.Reg, %struct.Reg* %10391, i32 0, i32 0
  %RCX.i434 = bitcast %union.anon* %10392 to i64*
  %10393 = load i64, i64* %RAX.i433
  %10394 = load i64, i64* %RCX.i434
  %10395 = mul i64 %10394, 4
  %10396 = add i64 %10395, %10393
  %10397 = load i64, i64* %PC.i432
  %10398 = add i64 %10397, 4
  store i64 %10398, i64* %PC.i432
  %10399 = inttoptr i64 %10396 to i32*
  %10400 = load i32, i32* %10399
  %10401 = sext i32 %10400 to i64
  store i64 %10401, i64* %RAX.i433, align 8
  store %struct.Memory* %loadMem_48cf70, %struct.Memory** %MEMORY
  %loadMem_48cf74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10403 = getelementptr inbounds %struct.GPR, %struct.GPR* %10402, i32 0, i32 33
  %10404 = getelementptr inbounds %struct.Reg, %struct.Reg* %10403, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %10404 to i64*
  %10405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10406 = getelementptr inbounds %struct.GPR, %struct.GPR* %10405, i32 0, i32 1
  %10407 = getelementptr inbounds %struct.Reg, %struct.Reg* %10406, i32 0, i32 0
  %RAX.i430 = bitcast %union.anon* %10407 to i64*
  %10408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10409 = getelementptr inbounds %struct.GPR, %struct.GPR* %10408, i32 0, i32 15
  %10410 = getelementptr inbounds %struct.Reg, %struct.Reg* %10409, i32 0, i32 0
  %RBP.i431 = bitcast %union.anon* %10410 to i64*
  %10411 = load i64, i64* %RAX.i430
  %10412 = load i64, i64* %RBP.i431
  %10413 = sub i64 %10412, 64
  %10414 = load i64, i64* %PC.i429
  %10415 = add i64 %10414, 4
  store i64 %10415, i64* %PC.i429
  %10416 = inttoptr i64 %10413 to i64*
  %10417 = load i64, i64* %10416
  %10418 = add i64 %10417, %10411
  store i64 %10418, i64* %RAX.i430, align 8
  %10419 = icmp ult i64 %10418, %10411
  %10420 = icmp ult i64 %10418, %10417
  %10421 = or i1 %10419, %10420
  %10422 = zext i1 %10421 to i8
  %10423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10422, i8* %10423, align 1
  %10424 = trunc i64 %10418 to i32
  %10425 = and i32 %10424, 255
  %10426 = call i32 @llvm.ctpop.i32(i32 %10425)
  %10427 = trunc i32 %10426 to i8
  %10428 = and i8 %10427, 1
  %10429 = xor i8 %10428, 1
  %10430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10429, i8* %10430, align 1
  %10431 = xor i64 %10417, %10411
  %10432 = xor i64 %10431, %10418
  %10433 = lshr i64 %10432, 4
  %10434 = trunc i64 %10433 to i8
  %10435 = and i8 %10434, 1
  %10436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10435, i8* %10436, align 1
  %10437 = icmp eq i64 %10418, 0
  %10438 = zext i1 %10437 to i8
  %10439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10438, i8* %10439, align 1
  %10440 = lshr i64 %10418, 63
  %10441 = trunc i64 %10440 to i8
  %10442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10441, i8* %10442, align 1
  %10443 = lshr i64 %10411, 63
  %10444 = lshr i64 %10417, 63
  %10445 = xor i64 %10440, %10443
  %10446 = xor i64 %10440, %10444
  %10447 = add i64 %10445, %10446
  %10448 = icmp eq i64 %10447, 2
  %10449 = zext i1 %10448 to i8
  %10450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10449, i8* %10450, align 1
  store %struct.Memory* %loadMem_48cf74, %struct.Memory** %MEMORY
  %loadMem_48cf78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10452 = getelementptr inbounds %struct.GPR, %struct.GPR* %10451, i32 0, i32 33
  %10453 = getelementptr inbounds %struct.Reg, %struct.Reg* %10452, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %10453 to i64*
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10455 = getelementptr inbounds %struct.GPR, %struct.GPR* %10454, i32 0, i32 1
  %10456 = getelementptr inbounds %struct.Reg, %struct.Reg* %10455, i32 0, i32 0
  %RAX.i427 = bitcast %union.anon* %10456 to i64*
  %10457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10458 = getelementptr inbounds %struct.GPR, %struct.GPR* %10457, i32 0, i32 15
  %10459 = getelementptr inbounds %struct.Reg, %struct.Reg* %10458, i32 0, i32 0
  %RBP.i428 = bitcast %union.anon* %10459 to i64*
  %10460 = load i64, i64* %RBP.i428
  %10461 = sub i64 %10460, 64
  %10462 = load i64, i64* %RAX.i427
  %10463 = load i64, i64* %PC.i426
  %10464 = add i64 %10463, 4
  store i64 %10464, i64* %PC.i426
  %10465 = inttoptr i64 %10461 to i64*
  store i64 %10462, i64* %10465
  store %struct.Memory* %loadMem_48cf78, %struct.Memory** %MEMORY
  %loadMem_48cf7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10467 = getelementptr inbounds %struct.GPR, %struct.GPR* %10466, i32 0, i32 33
  %10468 = getelementptr inbounds %struct.Reg, %struct.Reg* %10467, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %10468 to i64*
  %10469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10470 = getelementptr inbounds %struct.GPR, %struct.GPR* %10469, i32 0, i32 1
  %10471 = getelementptr inbounds %struct.Reg, %struct.Reg* %10470, i32 0, i32 0
  %RAX.i425 = bitcast %union.anon* %10471 to i64*
  %10472 = load i64, i64* %PC.i424
  %10473 = add i64 %10472, 8
  store i64 %10473, i64* %PC.i424
  %10474 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10474, i64* %RAX.i425, align 8
  store %struct.Memory* %loadMem_48cf7c, %struct.Memory** %MEMORY
  %loadMem_48cf84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10476 = getelementptr inbounds %struct.GPR, %struct.GPR* %10475, i32 0, i32 33
  %10477 = getelementptr inbounds %struct.Reg, %struct.Reg* %10476, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %10477 to i64*
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10479 = getelementptr inbounds %struct.GPR, %struct.GPR* %10478, i32 0, i32 1
  %10480 = getelementptr inbounds %struct.Reg, %struct.Reg* %10479, i32 0, i32 0
  %RAX.i423 = bitcast %union.anon* %10480 to i64*
  %10481 = load i64, i64* %RAX.i423
  %10482 = add i64 %10481, 71776
  %10483 = load i64, i64* %PC.i422
  %10484 = add i64 %10483, 7
  store i64 %10484, i64* %PC.i422
  %10485 = inttoptr i64 %10482 to i64*
  %10486 = load i64, i64* %10485
  store i64 %10486, i64* %RAX.i423, align 8
  store %struct.Memory* %loadMem_48cf84, %struct.Memory** %MEMORY
  %loadMem_48cf8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10488 = getelementptr inbounds %struct.GPR, %struct.GPR* %10487, i32 0, i32 33
  %10489 = getelementptr inbounds %struct.Reg, %struct.Reg* %10488, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %10489 to i64*
  %10490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10491 = getelementptr inbounds %struct.GPR, %struct.GPR* %10490, i32 0, i32 5
  %10492 = getelementptr inbounds %struct.Reg, %struct.Reg* %10491, i32 0, i32 0
  %RCX.i421 = bitcast %union.anon* %10492 to i64*
  %10493 = load i64, i64* %PC.i420
  %10494 = add i64 %10493, 8
  store i64 %10494, i64* %PC.i420
  %10495 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %10495, i64* %RCX.i421, align 8
  store %struct.Memory* %loadMem_48cf8b, %struct.Memory** %MEMORY
  %loadMem_48cf93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10497 = getelementptr inbounds %struct.GPR, %struct.GPR* %10496, i32 0, i32 33
  %10498 = getelementptr inbounds %struct.Reg, %struct.Reg* %10497, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %10498 to i64*
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10500 = getelementptr inbounds %struct.GPR, %struct.GPR* %10499, i32 0, i32 5
  %10501 = getelementptr inbounds %struct.Reg, %struct.Reg* %10500, i32 0, i32 0
  %RCX.i419 = bitcast %union.anon* %10501 to i64*
  %10502 = load i64, i64* %RCX.i419
  %10503 = add i64 %10502, 8
  %10504 = load i64, i64* %PC.i418
  %10505 = add i64 %10504, 4
  store i64 %10505, i64* %PC.i418
  %10506 = inttoptr i64 %10503 to i64*
  %10507 = load i64, i64* %10506
  store i64 %10507, i64* %RCX.i419, align 8
  store %struct.Memory* %loadMem_48cf93, %struct.Memory** %MEMORY
  %loadMem_48cf97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10509 = getelementptr inbounds %struct.GPR, %struct.GPR* %10508, i32 0, i32 33
  %10510 = getelementptr inbounds %struct.Reg, %struct.Reg* %10509, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %10510 to i64*
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10512 = getelementptr inbounds %struct.GPR, %struct.GPR* %10511, i32 0, i32 7
  %10513 = getelementptr inbounds %struct.Reg, %struct.Reg* %10512, i32 0, i32 0
  %RDX.i416 = bitcast %union.anon* %10513 to i64*
  %10514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10515 = getelementptr inbounds %struct.GPR, %struct.GPR* %10514, i32 0, i32 15
  %10516 = getelementptr inbounds %struct.Reg, %struct.Reg* %10515, i32 0, i32 0
  %RBP.i417 = bitcast %union.anon* %10516 to i64*
  %10517 = load i64, i64* %RBP.i417
  %10518 = sub i64 %10517, 44
  %10519 = load i64, i64* %PC.i415
  %10520 = add i64 %10519, 3
  store i64 %10520, i64* %PC.i415
  %10521 = inttoptr i64 %10518 to i32*
  %10522 = load i32, i32* %10521
  %10523 = zext i32 %10522 to i64
  store i64 %10523, i64* %RDX.i416, align 8
  store %struct.Memory* %loadMem_48cf97, %struct.Memory** %MEMORY
  %loadMem_48cf9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10525 = getelementptr inbounds %struct.GPR, %struct.GPR* %10524, i32 0, i32 33
  %10526 = getelementptr inbounds %struct.Reg, %struct.Reg* %10525, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %10526 to i64*
  %10527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10528 = getelementptr inbounds %struct.GPR, %struct.GPR* %10527, i32 0, i32 9
  %10529 = getelementptr inbounds %struct.Reg, %struct.Reg* %10528, i32 0, i32 0
  %RSI.i414 = bitcast %union.anon* %10529 to i64*
  %10530 = load i64, i64* %PC.i413
  %10531 = add i64 %10530, 8
  store i64 %10531, i64* %PC.i413
  %10532 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10532, i64* %RSI.i414, align 8
  store %struct.Memory* %loadMem_48cf9a, %struct.Memory** %MEMORY
  %loadMem_48cfa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10534 = getelementptr inbounds %struct.GPR, %struct.GPR* %10533, i32 0, i32 33
  %10535 = getelementptr inbounds %struct.Reg, %struct.Reg* %10534, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %10535 to i64*
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10537 = getelementptr inbounds %struct.GPR, %struct.GPR* %10536, i32 0, i32 7
  %10538 = getelementptr inbounds %struct.Reg, %struct.Reg* %10537, i32 0, i32 0
  %RDX.i411 = bitcast %union.anon* %10538 to i64*
  %10539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10540 = getelementptr inbounds %struct.GPR, %struct.GPR* %10539, i32 0, i32 9
  %10541 = getelementptr inbounds %struct.Reg, %struct.Reg* %10540, i32 0, i32 0
  %RSI.i412 = bitcast %union.anon* %10541 to i64*
  %10542 = load i64, i64* %RDX.i411
  %10543 = load i64, i64* %RSI.i412
  %10544 = add i64 %10543, 180
  %10545 = load i64, i64* %PC.i410
  %10546 = add i64 %10545, 6
  store i64 %10546, i64* %PC.i410
  %10547 = trunc i64 %10542 to i32
  %10548 = inttoptr i64 %10544 to i32*
  %10549 = load i32, i32* %10548
  %10550 = add i32 %10549, %10547
  %10551 = zext i32 %10550 to i64
  store i64 %10551, i64* %RDX.i411, align 8
  %10552 = icmp ult i32 %10550, %10547
  %10553 = icmp ult i32 %10550, %10549
  %10554 = or i1 %10552, %10553
  %10555 = zext i1 %10554 to i8
  %10556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10555, i8* %10556, align 1
  %10557 = and i32 %10550, 255
  %10558 = call i32 @llvm.ctpop.i32(i32 %10557)
  %10559 = trunc i32 %10558 to i8
  %10560 = and i8 %10559, 1
  %10561 = xor i8 %10560, 1
  %10562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10561, i8* %10562, align 1
  %10563 = xor i32 %10549, %10547
  %10564 = xor i32 %10563, %10550
  %10565 = lshr i32 %10564, 4
  %10566 = trunc i32 %10565 to i8
  %10567 = and i8 %10566, 1
  %10568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10567, i8* %10568, align 1
  %10569 = icmp eq i32 %10550, 0
  %10570 = zext i1 %10569 to i8
  %10571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10570, i8* %10571, align 1
  %10572 = lshr i32 %10550, 31
  %10573 = trunc i32 %10572 to i8
  %10574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10573, i8* %10574, align 1
  %10575 = lshr i32 %10547, 31
  %10576 = lshr i32 %10549, 31
  %10577 = xor i32 %10572, %10575
  %10578 = xor i32 %10572, %10576
  %10579 = add i32 %10577, %10578
  %10580 = icmp eq i32 %10579, 2
  %10581 = zext i1 %10580 to i8
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10581, i8* %10582, align 1
  store %struct.Memory* %loadMem_48cfa2, %struct.Memory** %MEMORY
  %loadMem_48cfa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10584 = getelementptr inbounds %struct.GPR, %struct.GPR* %10583, i32 0, i32 33
  %10585 = getelementptr inbounds %struct.Reg, %struct.Reg* %10584, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %10585 to i64*
  %10586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10587 = getelementptr inbounds %struct.GPR, %struct.GPR* %10586, i32 0, i32 7
  %10588 = getelementptr inbounds %struct.Reg, %struct.Reg* %10587, i32 0, i32 0
  %EDX.i408 = bitcast %union.anon* %10588 to i32*
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10590 = getelementptr inbounds %struct.GPR, %struct.GPR* %10589, i32 0, i32 9
  %10591 = getelementptr inbounds %struct.Reg, %struct.Reg* %10590, i32 0, i32 0
  %RSI.i409 = bitcast %union.anon* %10591 to i64*
  %10592 = load i32, i32* %EDX.i408
  %10593 = zext i32 %10592 to i64
  %10594 = load i64, i64* %PC.i407
  %10595 = add i64 %10594, 3
  store i64 %10595, i64* %PC.i407
  %10596 = shl i64 %10593, 32
  %10597 = ashr exact i64 %10596, 32
  store i64 %10597, i64* %RSI.i409, align 8
  store %struct.Memory* %loadMem_48cfa8, %struct.Memory** %MEMORY
  %loadMem_48cfab = load %struct.Memory*, %struct.Memory** %MEMORY
  %10598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10599 = getelementptr inbounds %struct.GPR, %struct.GPR* %10598, i32 0, i32 33
  %10600 = getelementptr inbounds %struct.Reg, %struct.Reg* %10599, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %10600 to i64*
  %10601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10602 = getelementptr inbounds %struct.GPR, %struct.GPR* %10601, i32 0, i32 5
  %10603 = getelementptr inbounds %struct.Reg, %struct.Reg* %10602, i32 0, i32 0
  %RCX.i405 = bitcast %union.anon* %10603 to i64*
  %10604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10605 = getelementptr inbounds %struct.GPR, %struct.GPR* %10604, i32 0, i32 9
  %10606 = getelementptr inbounds %struct.Reg, %struct.Reg* %10605, i32 0, i32 0
  %RSI.i406 = bitcast %union.anon* %10606 to i64*
  %10607 = load i64, i64* %RCX.i405
  %10608 = load i64, i64* %RSI.i406
  %10609 = mul i64 %10608, 8
  %10610 = add i64 %10609, %10607
  %10611 = load i64, i64* %PC.i404
  %10612 = add i64 %10611, 4
  store i64 %10612, i64* %PC.i404
  %10613 = inttoptr i64 %10610 to i64*
  %10614 = load i64, i64* %10613
  store i64 %10614, i64* %RCX.i405, align 8
  store %struct.Memory* %loadMem_48cfab, %struct.Memory** %MEMORY
  %loadMem_48cfaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10616 = getelementptr inbounds %struct.GPR, %struct.GPR* %10615, i32 0, i32 33
  %10617 = getelementptr inbounds %struct.Reg, %struct.Reg* %10616, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %10617 to i64*
  %10618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10619 = getelementptr inbounds %struct.GPR, %struct.GPR* %10618, i32 0, i32 9
  %10620 = getelementptr inbounds %struct.Reg, %struct.Reg* %10619, i32 0, i32 0
  %RSI.i402 = bitcast %union.anon* %10620 to i64*
  %10621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10622 = getelementptr inbounds %struct.GPR, %struct.GPR* %10621, i32 0, i32 15
  %10623 = getelementptr inbounds %struct.Reg, %struct.Reg* %10622, i32 0, i32 0
  %RBP.i403 = bitcast %union.anon* %10623 to i64*
  %10624 = load i64, i64* %RBP.i403
  %10625 = sub i64 %10624, 40
  %10626 = load i64, i64* %PC.i401
  %10627 = add i64 %10626, 4
  store i64 %10627, i64* %PC.i401
  %10628 = inttoptr i64 %10625 to i32*
  %10629 = load i32, i32* %10628
  %10630 = sext i32 %10629 to i64
  store i64 %10630, i64* %RSI.i402, align 8
  store %struct.Memory* %loadMem_48cfaf, %struct.Memory** %MEMORY
  %loadMem_48cfb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10632 = getelementptr inbounds %struct.GPR, %struct.GPR* %10631, i32 0, i32 33
  %10633 = getelementptr inbounds %struct.Reg, %struct.Reg* %10632, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %10633 to i64*
  %10634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10635 = getelementptr inbounds %struct.GPR, %struct.GPR* %10634, i32 0, i32 5
  %10636 = getelementptr inbounds %struct.Reg, %struct.Reg* %10635, i32 0, i32 0
  %RCX.i398 = bitcast %union.anon* %10636 to i64*
  %10637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10638 = getelementptr inbounds %struct.GPR, %struct.GPR* %10637, i32 0, i32 7
  %10639 = getelementptr inbounds %struct.Reg, %struct.Reg* %10638, i32 0, i32 0
  %RDX.i399 = bitcast %union.anon* %10639 to i64*
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10641 = getelementptr inbounds %struct.GPR, %struct.GPR* %10640, i32 0, i32 9
  %10642 = getelementptr inbounds %struct.Reg, %struct.Reg* %10641, i32 0, i32 0
  %RSI.i400 = bitcast %union.anon* %10642 to i64*
  %10643 = load i64, i64* %RCX.i398
  %10644 = load i64, i64* %RSI.i400
  %10645 = mul i64 %10644, 2
  %10646 = add i64 %10645, %10643
  %10647 = load i64, i64* %PC.i397
  %10648 = add i64 %10647, 4
  store i64 %10648, i64* %PC.i397
  %10649 = inttoptr i64 %10646 to i16*
  %10650 = load i16, i16* %10649
  %10651 = zext i16 %10650 to i64
  store i64 %10651, i64* %RDX.i399, align 8
  store %struct.Memory* %loadMem_48cfb3, %struct.Memory** %MEMORY
  %loadMem_48cfb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10653 = getelementptr inbounds %struct.GPR, %struct.GPR* %10652, i32 0, i32 33
  %10654 = getelementptr inbounds %struct.Reg, %struct.Reg* %10653, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %10654 to i64*
  %10655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10656 = getelementptr inbounds %struct.GPR, %struct.GPR* %10655, i32 0, i32 5
  %10657 = getelementptr inbounds %struct.Reg, %struct.Reg* %10656, i32 0, i32 0
  %RCX.i396 = bitcast %union.anon* %10657 to i64*
  %10658 = load i64, i64* %PC.i395
  %10659 = add i64 %10658, 8
  store i64 %10659, i64* %PC.i395
  %10660 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %10660, i64* %RCX.i396, align 8
  store %struct.Memory* %loadMem_48cfb7, %struct.Memory** %MEMORY
  %loadMem_48cfbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10662 = getelementptr inbounds %struct.GPR, %struct.GPR* %10661, i32 0, i32 33
  %10663 = getelementptr inbounds %struct.Reg, %struct.Reg* %10662, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %10663 to i64*
  %10664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10665 = getelementptr inbounds %struct.GPR, %struct.GPR* %10664, i32 0, i32 5
  %10666 = getelementptr inbounds %struct.Reg, %struct.Reg* %10665, i32 0, i32 0
  %RCX.i394 = bitcast %union.anon* %10666 to i64*
  %10667 = load i64, i64* %RCX.i394
  %10668 = add i64 %10667, 6464
  %10669 = load i64, i64* %PC.i393
  %10670 = add i64 %10669, 7
  store i64 %10670, i64* %PC.i393
  %10671 = inttoptr i64 %10668 to i64*
  %10672 = load i64, i64* %10671
  store i64 %10672, i64* %RCX.i394, align 8
  store %struct.Memory* %loadMem_48cfbf, %struct.Memory** %MEMORY
  %loadMem_48cfc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10674 = getelementptr inbounds %struct.GPR, %struct.GPR* %10673, i32 0, i32 33
  %10675 = getelementptr inbounds %struct.Reg, %struct.Reg* %10674, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %10675 to i64*
  %10676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10677 = getelementptr inbounds %struct.GPR, %struct.GPR* %10676, i32 0, i32 5
  %10678 = getelementptr inbounds %struct.Reg, %struct.Reg* %10677, i32 0, i32 0
  %RCX.i392 = bitcast %union.anon* %10678 to i64*
  %10679 = load i64, i64* %RCX.i392
  %10680 = add i64 %10679, 8
  %10681 = load i64, i64* %PC.i391
  %10682 = add i64 %10681, 4
  store i64 %10682, i64* %PC.i391
  %10683 = inttoptr i64 %10680 to i64*
  %10684 = load i64, i64* %10683
  store i64 %10684, i64* %RCX.i392, align 8
  store %struct.Memory* %loadMem_48cfc6, %struct.Memory** %MEMORY
  %loadMem_48cfca = load %struct.Memory*, %struct.Memory** %MEMORY
  %10685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10686 = getelementptr inbounds %struct.GPR, %struct.GPR* %10685, i32 0, i32 33
  %10687 = getelementptr inbounds %struct.Reg, %struct.Reg* %10686, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %10687 to i64*
  %10688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10689 = getelementptr inbounds %struct.GPR, %struct.GPR* %10688, i32 0, i32 9
  %10690 = getelementptr inbounds %struct.Reg, %struct.Reg* %10689, i32 0, i32 0
  %RSI.i390 = bitcast %union.anon* %10690 to i64*
  %10691 = load i64, i64* %PC.i389
  %10692 = add i64 %10691, 8
  store i64 %10692, i64* %PC.i389
  %10693 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10693, i64* %RSI.i390, align 8
  store %struct.Memory* %loadMem_48cfca, %struct.Memory** %MEMORY
  %loadMem_48cfd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10695 = getelementptr inbounds %struct.GPR, %struct.GPR* %10694, i32 0, i32 33
  %10696 = getelementptr inbounds %struct.Reg, %struct.Reg* %10695, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %10696 to i64*
  %10697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10698 = getelementptr inbounds %struct.GPR, %struct.GPR* %10697, i32 0, i32 9
  %10699 = getelementptr inbounds %struct.Reg, %struct.Reg* %10698, i32 0, i32 0
  %RSI.i387 = bitcast %union.anon* %10699 to i64*
  %10700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10701 = getelementptr inbounds %struct.GPR, %struct.GPR* %10700, i32 0, i32 11
  %10702 = getelementptr inbounds %struct.Reg, %struct.Reg* %10701, i32 0, i32 0
  %RDI.i388 = bitcast %union.anon* %10702 to i64*
  %10703 = load i64, i64* %RSI.i387
  %10704 = add i64 %10703, 164
  %10705 = load i64, i64* %PC.i386
  %10706 = add i64 %10705, 6
  store i64 %10706, i64* %PC.i386
  %10707 = inttoptr i64 %10704 to i32*
  %10708 = load i32, i32* %10707
  %10709 = zext i32 %10708 to i64
  store i64 %10709, i64* %RDI.i388, align 8
  store %struct.Memory* %loadMem_48cfd2, %struct.Memory** %MEMORY
  %loadMem_48cfd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10711 = getelementptr inbounds %struct.GPR, %struct.GPR* %10710, i32 0, i32 33
  %10712 = getelementptr inbounds %struct.Reg, %struct.Reg* %10711, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %10712 to i64*
  %10713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10714 = getelementptr inbounds %struct.GPR, %struct.GPR* %10713, i32 0, i32 11
  %10715 = getelementptr inbounds %struct.Reg, %struct.Reg* %10714, i32 0, i32 0
  %RDI.i384 = bitcast %union.anon* %10715 to i64*
  %10716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10717 = getelementptr inbounds %struct.GPR, %struct.GPR* %10716, i32 0, i32 15
  %10718 = getelementptr inbounds %struct.Reg, %struct.Reg* %10717, i32 0, i32 0
  %RBP.i385 = bitcast %union.anon* %10718 to i64*
  %10719 = load i64, i64* %RDI.i384
  %10720 = load i64, i64* %RBP.i385
  %10721 = sub i64 %10720, 44
  %10722 = load i64, i64* %PC.i383
  %10723 = add i64 %10722, 3
  store i64 %10723, i64* %PC.i383
  %10724 = trunc i64 %10719 to i32
  %10725 = inttoptr i64 %10721 to i32*
  %10726 = load i32, i32* %10725
  %10727 = add i32 %10726, %10724
  %10728 = zext i32 %10727 to i64
  store i64 %10728, i64* %RDI.i384, align 8
  %10729 = icmp ult i32 %10727, %10724
  %10730 = icmp ult i32 %10727, %10726
  %10731 = or i1 %10729, %10730
  %10732 = zext i1 %10731 to i8
  %10733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10732, i8* %10733, align 1
  %10734 = and i32 %10727, 255
  %10735 = call i32 @llvm.ctpop.i32(i32 %10734)
  %10736 = trunc i32 %10735 to i8
  %10737 = and i8 %10736, 1
  %10738 = xor i8 %10737, 1
  %10739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10738, i8* %10739, align 1
  %10740 = xor i32 %10726, %10724
  %10741 = xor i32 %10740, %10727
  %10742 = lshr i32 %10741, 4
  %10743 = trunc i32 %10742 to i8
  %10744 = and i8 %10743, 1
  %10745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10744, i8* %10745, align 1
  %10746 = icmp eq i32 %10727, 0
  %10747 = zext i1 %10746 to i8
  %10748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10747, i8* %10748, align 1
  %10749 = lshr i32 %10727, 31
  %10750 = trunc i32 %10749 to i8
  %10751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10750, i8* %10751, align 1
  %10752 = lshr i32 %10724, 31
  %10753 = lshr i32 %10726, 31
  %10754 = xor i32 %10749, %10752
  %10755 = xor i32 %10749, %10753
  %10756 = add i32 %10754, %10755
  %10757 = icmp eq i32 %10756, 2
  %10758 = zext i1 %10757 to i8
  %10759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10758, i8* %10759, align 1
  store %struct.Memory* %loadMem_48cfd8, %struct.Memory** %MEMORY
  %loadMem_48cfdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10761 = getelementptr inbounds %struct.GPR, %struct.GPR* %10760, i32 0, i32 33
  %10762 = getelementptr inbounds %struct.Reg, %struct.Reg* %10761, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %10762 to i64*
  %10763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10764 = getelementptr inbounds %struct.GPR, %struct.GPR* %10763, i32 0, i32 11
  %10765 = getelementptr inbounds %struct.Reg, %struct.Reg* %10764, i32 0, i32 0
  %EDI.i381 = bitcast %union.anon* %10765 to i32*
  %10766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10767 = getelementptr inbounds %struct.GPR, %struct.GPR* %10766, i32 0, i32 9
  %10768 = getelementptr inbounds %struct.Reg, %struct.Reg* %10767, i32 0, i32 0
  %RSI.i382 = bitcast %union.anon* %10768 to i64*
  %10769 = load i32, i32* %EDI.i381
  %10770 = zext i32 %10769 to i64
  %10771 = load i64, i64* %PC.i380
  %10772 = add i64 %10771, 3
  store i64 %10772, i64* %PC.i380
  %10773 = shl i64 %10770, 32
  %10774 = ashr exact i64 %10773, 32
  store i64 %10774, i64* %RSI.i382, align 8
  store %struct.Memory* %loadMem_48cfdb, %struct.Memory** %MEMORY
  %loadMem_48cfde = load %struct.Memory*, %struct.Memory** %MEMORY
  %10775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10776 = getelementptr inbounds %struct.GPR, %struct.GPR* %10775, i32 0, i32 33
  %10777 = getelementptr inbounds %struct.Reg, %struct.Reg* %10776, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %10777 to i64*
  %10778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10779 = getelementptr inbounds %struct.GPR, %struct.GPR* %10778, i32 0, i32 5
  %10780 = getelementptr inbounds %struct.Reg, %struct.Reg* %10779, i32 0, i32 0
  %RCX.i378 = bitcast %union.anon* %10780 to i64*
  %10781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10782 = getelementptr inbounds %struct.GPR, %struct.GPR* %10781, i32 0, i32 9
  %10783 = getelementptr inbounds %struct.Reg, %struct.Reg* %10782, i32 0, i32 0
  %RSI.i379 = bitcast %union.anon* %10783 to i64*
  %10784 = load i64, i64* %RCX.i378
  %10785 = load i64, i64* %RSI.i379
  %10786 = mul i64 %10785, 8
  %10787 = add i64 %10786, %10784
  %10788 = load i64, i64* %PC.i377
  %10789 = add i64 %10788, 4
  store i64 %10789, i64* %PC.i377
  %10790 = inttoptr i64 %10787 to i64*
  %10791 = load i64, i64* %10790
  store i64 %10791, i64* %RCX.i378, align 8
  store %struct.Memory* %loadMem_48cfde, %struct.Memory** %MEMORY
  %loadMem_48cfe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10793 = getelementptr inbounds %struct.GPR, %struct.GPR* %10792, i32 0, i32 33
  %10794 = getelementptr inbounds %struct.Reg, %struct.Reg* %10793, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %10794 to i64*
  %10795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10796 = getelementptr inbounds %struct.GPR, %struct.GPR* %10795, i32 0, i32 9
  %10797 = getelementptr inbounds %struct.Reg, %struct.Reg* %10796, i32 0, i32 0
  %RSI.i375 = bitcast %union.anon* %10797 to i64*
  %10798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10799 = getelementptr inbounds %struct.GPR, %struct.GPR* %10798, i32 0, i32 15
  %10800 = getelementptr inbounds %struct.Reg, %struct.Reg* %10799, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %10800 to i64*
  %10801 = load i64, i64* %RBP.i376
  %10802 = sub i64 %10801, 40
  %10803 = load i64, i64* %PC.i374
  %10804 = add i64 %10803, 4
  store i64 %10804, i64* %PC.i374
  %10805 = inttoptr i64 %10802 to i32*
  %10806 = load i32, i32* %10805
  %10807 = sext i32 %10806 to i64
  store i64 %10807, i64* %RSI.i375, align 8
  store %struct.Memory* %loadMem_48cfe2, %struct.Memory** %MEMORY
  %loadMem_48cfe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10809 = getelementptr inbounds %struct.GPR, %struct.GPR* %10808, i32 0, i32 33
  %10810 = getelementptr inbounds %struct.Reg, %struct.Reg* %10809, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %10810 to i64*
  %10811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10812 = getelementptr inbounds %struct.GPR, %struct.GPR* %10811, i32 0, i32 5
  %10813 = getelementptr inbounds %struct.Reg, %struct.Reg* %10812, i32 0, i32 0
  %RCX.i371 = bitcast %union.anon* %10813 to i64*
  %10814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10815 = getelementptr inbounds %struct.GPR, %struct.GPR* %10814, i32 0, i32 9
  %10816 = getelementptr inbounds %struct.Reg, %struct.Reg* %10815, i32 0, i32 0
  %RSI.i372 = bitcast %union.anon* %10816 to i64*
  %10817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10818 = getelementptr inbounds %struct.GPR, %struct.GPR* %10817, i32 0, i32 11
  %10819 = getelementptr inbounds %struct.Reg, %struct.Reg* %10818, i32 0, i32 0
  %RDI.i373 = bitcast %union.anon* %10819 to i64*
  %10820 = load i64, i64* %RCX.i371
  %10821 = load i64, i64* %RSI.i372
  %10822 = mul i64 %10821, 2
  %10823 = add i64 %10822, %10820
  %10824 = load i64, i64* %PC.i370
  %10825 = add i64 %10824, 4
  store i64 %10825, i64* %PC.i370
  %10826 = inttoptr i64 %10823 to i16*
  %10827 = load i16, i16* %10826
  %10828 = zext i16 %10827 to i64
  store i64 %10828, i64* %RDI.i373, align 8
  store %struct.Memory* %loadMem_48cfe6, %struct.Memory** %MEMORY
  %loadMem_48cfea = load %struct.Memory*, %struct.Memory** %MEMORY
  %10829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10830 = getelementptr inbounds %struct.GPR, %struct.GPR* %10829, i32 0, i32 33
  %10831 = getelementptr inbounds %struct.Reg, %struct.Reg* %10830, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %10831 to i64*
  %10832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10833 = getelementptr inbounds %struct.GPR, %struct.GPR* %10832, i32 0, i32 11
  %10834 = getelementptr inbounds %struct.Reg, %struct.Reg* %10833, i32 0, i32 0
  %EDI.i368 = bitcast %union.anon* %10834 to i32*
  %10835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10836 = getelementptr inbounds %struct.GPR, %struct.GPR* %10835, i32 0, i32 7
  %10837 = getelementptr inbounds %struct.Reg, %struct.Reg* %10836, i32 0, i32 0
  %RDX.i369 = bitcast %union.anon* %10837 to i64*
  %10838 = load i64, i64* %RDX.i369
  %10839 = load i32, i32* %EDI.i368
  %10840 = zext i32 %10839 to i64
  %10841 = load i64, i64* %PC.i367
  %10842 = add i64 %10841, 2
  store i64 %10842, i64* %PC.i367
  %10843 = trunc i64 %10838 to i32
  %10844 = sub i32 %10843, %10839
  %10845 = zext i32 %10844 to i64
  store i64 %10845, i64* %RDX.i369, align 8
  %10846 = icmp ult i32 %10843, %10839
  %10847 = zext i1 %10846 to i8
  %10848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10847, i8* %10848, align 1
  %10849 = and i32 %10844, 255
  %10850 = call i32 @llvm.ctpop.i32(i32 %10849)
  %10851 = trunc i32 %10850 to i8
  %10852 = and i8 %10851, 1
  %10853 = xor i8 %10852, 1
  %10854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10853, i8* %10854, align 1
  %10855 = xor i64 %10840, %10838
  %10856 = trunc i64 %10855 to i32
  %10857 = xor i32 %10856, %10844
  %10858 = lshr i32 %10857, 4
  %10859 = trunc i32 %10858 to i8
  %10860 = and i8 %10859, 1
  %10861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10860, i8* %10861, align 1
  %10862 = icmp eq i32 %10844, 0
  %10863 = zext i1 %10862 to i8
  %10864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10863, i8* %10864, align 1
  %10865 = lshr i32 %10844, 31
  %10866 = trunc i32 %10865 to i8
  %10867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10866, i8* %10867, align 1
  %10868 = lshr i32 %10843, 31
  %10869 = lshr i32 %10839, 31
  %10870 = xor i32 %10869, %10868
  %10871 = xor i32 %10865, %10868
  %10872 = add i32 %10871, %10870
  %10873 = icmp eq i32 %10872, 2
  %10874 = zext i1 %10873 to i8
  %10875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10874, i8* %10875, align 1
  store %struct.Memory* %loadMem_48cfea, %struct.Memory** %MEMORY
  %loadMem_48cfec = load %struct.Memory*, %struct.Memory** %MEMORY
  %10876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10877 = getelementptr inbounds %struct.GPR, %struct.GPR* %10876, i32 0, i32 33
  %10878 = getelementptr inbounds %struct.Reg, %struct.Reg* %10877, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %10878 to i64*
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10880 = getelementptr inbounds %struct.GPR, %struct.GPR* %10879, i32 0, i32 7
  %10881 = getelementptr inbounds %struct.Reg, %struct.Reg* %10880, i32 0, i32 0
  %EDX.i365 = bitcast %union.anon* %10881 to i32*
  %10882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10883 = getelementptr inbounds %struct.GPR, %struct.GPR* %10882, i32 0, i32 5
  %10884 = getelementptr inbounds %struct.Reg, %struct.Reg* %10883, i32 0, i32 0
  %RCX.i366 = bitcast %union.anon* %10884 to i64*
  %10885 = load i32, i32* %EDX.i365
  %10886 = zext i32 %10885 to i64
  %10887 = load i64, i64* %PC.i364
  %10888 = add i64 %10887, 3
  store i64 %10888, i64* %PC.i364
  %10889 = shl i64 %10886, 32
  %10890 = ashr exact i64 %10889, 32
  store i64 %10890, i64* %RCX.i366, align 8
  store %struct.Memory* %loadMem_48cfec, %struct.Memory** %MEMORY
  %loadMem_48cfef = load %struct.Memory*, %struct.Memory** %MEMORY
  %10891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10892 = getelementptr inbounds %struct.GPR, %struct.GPR* %10891, i32 0, i32 33
  %10893 = getelementptr inbounds %struct.Reg, %struct.Reg* %10892, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %10893 to i64*
  %10894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10895 = getelementptr inbounds %struct.GPR, %struct.GPR* %10894, i32 0, i32 1
  %10896 = getelementptr inbounds %struct.Reg, %struct.Reg* %10895, i32 0, i32 0
  %RAX.i362 = bitcast %union.anon* %10896 to i64*
  %10897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10898 = getelementptr inbounds %struct.GPR, %struct.GPR* %10897, i32 0, i32 5
  %10899 = getelementptr inbounds %struct.Reg, %struct.Reg* %10898, i32 0, i32 0
  %RCX.i363 = bitcast %union.anon* %10899 to i64*
  %10900 = load i64, i64* %RAX.i362
  %10901 = load i64, i64* %RCX.i363
  %10902 = mul i64 %10901, 4
  %10903 = add i64 %10902, %10900
  %10904 = load i64, i64* %PC.i361
  %10905 = add i64 %10904, 4
  store i64 %10905, i64* %PC.i361
  %10906 = inttoptr i64 %10903 to i32*
  %10907 = load i32, i32* %10906
  %10908 = sext i32 %10907 to i64
  store i64 %10908, i64* %RAX.i362, align 8
  store %struct.Memory* %loadMem_48cfef, %struct.Memory** %MEMORY
  %loadMem_48cff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10910 = getelementptr inbounds %struct.GPR, %struct.GPR* %10909, i32 0, i32 33
  %10911 = getelementptr inbounds %struct.Reg, %struct.Reg* %10910, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %10911 to i64*
  %10912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10913 = getelementptr inbounds %struct.GPR, %struct.GPR* %10912, i32 0, i32 1
  %10914 = getelementptr inbounds %struct.Reg, %struct.Reg* %10913, i32 0, i32 0
  %RAX.i359 = bitcast %union.anon* %10914 to i64*
  %10915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10916 = getelementptr inbounds %struct.GPR, %struct.GPR* %10915, i32 0, i32 15
  %10917 = getelementptr inbounds %struct.Reg, %struct.Reg* %10916, i32 0, i32 0
  %RBP.i360 = bitcast %union.anon* %10917 to i64*
  %10918 = load i64, i64* %RAX.i359
  %10919 = load i64, i64* %RBP.i360
  %10920 = sub i64 %10919, 64
  %10921 = load i64, i64* %PC.i358
  %10922 = add i64 %10921, 4
  store i64 %10922, i64* %PC.i358
  %10923 = inttoptr i64 %10920 to i64*
  %10924 = load i64, i64* %10923
  %10925 = add i64 %10924, %10918
  store i64 %10925, i64* %RAX.i359, align 8
  %10926 = icmp ult i64 %10925, %10918
  %10927 = icmp ult i64 %10925, %10924
  %10928 = or i1 %10926, %10927
  %10929 = zext i1 %10928 to i8
  %10930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10929, i8* %10930, align 1
  %10931 = trunc i64 %10925 to i32
  %10932 = and i32 %10931, 255
  %10933 = call i32 @llvm.ctpop.i32(i32 %10932)
  %10934 = trunc i32 %10933 to i8
  %10935 = and i8 %10934, 1
  %10936 = xor i8 %10935, 1
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10936, i8* %10937, align 1
  %10938 = xor i64 %10924, %10918
  %10939 = xor i64 %10938, %10925
  %10940 = lshr i64 %10939, 4
  %10941 = trunc i64 %10940 to i8
  %10942 = and i8 %10941, 1
  %10943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10942, i8* %10943, align 1
  %10944 = icmp eq i64 %10925, 0
  %10945 = zext i1 %10944 to i8
  %10946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10945, i8* %10946, align 1
  %10947 = lshr i64 %10925, 63
  %10948 = trunc i64 %10947 to i8
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10948, i8* %10949, align 1
  %10950 = lshr i64 %10918, 63
  %10951 = lshr i64 %10924, 63
  %10952 = xor i64 %10947, %10950
  %10953 = xor i64 %10947, %10951
  %10954 = add i64 %10952, %10953
  %10955 = icmp eq i64 %10954, 2
  %10956 = zext i1 %10955 to i8
  %10957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10956, i8* %10957, align 1
  store %struct.Memory* %loadMem_48cff3, %struct.Memory** %MEMORY
  %loadMem_48cff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10959 = getelementptr inbounds %struct.GPR, %struct.GPR* %10958, i32 0, i32 33
  %10960 = getelementptr inbounds %struct.Reg, %struct.Reg* %10959, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %10960 to i64*
  %10961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10962 = getelementptr inbounds %struct.GPR, %struct.GPR* %10961, i32 0, i32 1
  %10963 = getelementptr inbounds %struct.Reg, %struct.Reg* %10962, i32 0, i32 0
  %RAX.i356 = bitcast %union.anon* %10963 to i64*
  %10964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10965 = getelementptr inbounds %struct.GPR, %struct.GPR* %10964, i32 0, i32 15
  %10966 = getelementptr inbounds %struct.Reg, %struct.Reg* %10965, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %10966 to i64*
  %10967 = load i64, i64* %RBP.i357
  %10968 = sub i64 %10967, 64
  %10969 = load i64, i64* %RAX.i356
  %10970 = load i64, i64* %PC.i355
  %10971 = add i64 %10970, 4
  store i64 %10971, i64* %PC.i355
  %10972 = inttoptr i64 %10968 to i64*
  store i64 %10969, i64* %10972
  store %struct.Memory* %loadMem_48cff7, %struct.Memory** %MEMORY
  %loadMem_48cffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10974 = getelementptr inbounds %struct.GPR, %struct.GPR* %10973, i32 0, i32 33
  %10975 = getelementptr inbounds %struct.Reg, %struct.Reg* %10974, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %10975 to i64*
  %10976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10977 = getelementptr inbounds %struct.GPR, %struct.GPR* %10976, i32 0, i32 1
  %10978 = getelementptr inbounds %struct.Reg, %struct.Reg* %10977, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %10978 to i64*
  %10979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10980 = getelementptr inbounds %struct.GPR, %struct.GPR* %10979, i32 0, i32 15
  %10981 = getelementptr inbounds %struct.Reg, %struct.Reg* %10980, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %10981 to i64*
  %10982 = load i64, i64* %RBP.i354
  %10983 = sub i64 %10982, 40
  %10984 = load i64, i64* %PC.i352
  %10985 = add i64 %10984, 3
  store i64 %10985, i64* %PC.i352
  %10986 = inttoptr i64 %10983 to i32*
  %10987 = load i32, i32* %10986
  %10988 = zext i32 %10987 to i64
  store i64 %10988, i64* %RAX.i353, align 8
  store %struct.Memory* %loadMem_48cffb, %struct.Memory** %MEMORY
  %loadMem_48cffe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10990 = getelementptr inbounds %struct.GPR, %struct.GPR* %10989, i32 0, i32 33
  %10991 = getelementptr inbounds %struct.Reg, %struct.Reg* %10990, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %10991 to i64*
  %10992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10993 = getelementptr inbounds %struct.GPR, %struct.GPR* %10992, i32 0, i32 1
  %10994 = getelementptr inbounds %struct.Reg, %struct.Reg* %10993, i32 0, i32 0
  %RAX.i351 = bitcast %union.anon* %10994 to i64*
  %10995 = load i64, i64* %RAX.i351
  %10996 = load i64, i64* %PC.i350
  %10997 = add i64 %10996, 3
  store i64 %10997, i64* %PC.i350
  %10998 = trunc i64 %10995 to i32
  %10999 = add i32 1, %10998
  %11000 = zext i32 %10999 to i64
  store i64 %11000, i64* %RAX.i351, align 8
  %11001 = icmp ult i32 %10999, %10998
  %11002 = icmp ult i32 %10999, 1
  %11003 = or i1 %11001, %11002
  %11004 = zext i1 %11003 to i8
  %11005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11004, i8* %11005, align 1
  %11006 = and i32 %10999, 255
  %11007 = call i32 @llvm.ctpop.i32(i32 %11006)
  %11008 = trunc i32 %11007 to i8
  %11009 = and i8 %11008, 1
  %11010 = xor i8 %11009, 1
  %11011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11010, i8* %11011, align 1
  %11012 = xor i64 1, %10995
  %11013 = trunc i64 %11012 to i32
  %11014 = xor i32 %11013, %10999
  %11015 = lshr i32 %11014, 4
  %11016 = trunc i32 %11015 to i8
  %11017 = and i8 %11016, 1
  %11018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11017, i8* %11018, align 1
  %11019 = icmp eq i32 %10999, 0
  %11020 = zext i1 %11019 to i8
  %11021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11020, i8* %11021, align 1
  %11022 = lshr i32 %10999, 31
  %11023 = trunc i32 %11022 to i8
  %11024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11023, i8* %11024, align 1
  %11025 = lshr i32 %10998, 31
  %11026 = xor i32 %11022, %11025
  %11027 = add i32 %11026, %11022
  %11028 = icmp eq i32 %11027, 2
  %11029 = zext i1 %11028 to i8
  %11030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11029, i8* %11030, align 1
  store %struct.Memory* %loadMem_48cffe, %struct.Memory** %MEMORY
  %loadMem_48d001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11032 = getelementptr inbounds %struct.GPR, %struct.GPR* %11031, i32 0, i32 33
  %11033 = getelementptr inbounds %struct.Reg, %struct.Reg* %11032, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %11033 to i64*
  %11034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11035 = getelementptr inbounds %struct.GPR, %struct.GPR* %11034, i32 0, i32 1
  %11036 = getelementptr inbounds %struct.Reg, %struct.Reg* %11035, i32 0, i32 0
  %EAX.i348 = bitcast %union.anon* %11036 to i32*
  %11037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11038 = getelementptr inbounds %struct.GPR, %struct.GPR* %11037, i32 0, i32 15
  %11039 = getelementptr inbounds %struct.Reg, %struct.Reg* %11038, i32 0, i32 0
  %RBP.i349 = bitcast %union.anon* %11039 to i64*
  %11040 = load i64, i64* %RBP.i349
  %11041 = sub i64 %11040, 40
  %11042 = load i32, i32* %EAX.i348
  %11043 = zext i32 %11042 to i64
  %11044 = load i64, i64* %PC.i347
  %11045 = add i64 %11044, 3
  store i64 %11045, i64* %PC.i347
  %11046 = inttoptr i64 %11041 to i32*
  store i32 %11042, i32* %11046
  store %struct.Memory* %loadMem_48d001, %struct.Memory** %MEMORY
  %loadMem_48d004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11048 = getelementptr inbounds %struct.GPR, %struct.GPR* %11047, i32 0, i32 33
  %11049 = getelementptr inbounds %struct.Reg, %struct.Reg* %11048, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %11049 to i64*
  %11050 = load i64, i64* %PC.i346
  %11051 = add i64 %11050, -300
  %11052 = load i64, i64* %PC.i346
  %11053 = add i64 %11052, 5
  store i64 %11053, i64* %PC.i346
  %11054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11051, i64* %11054, align 8
  store %struct.Memory* %loadMem_48d004, %struct.Memory** %MEMORY
  br label %block_.L_48ced8

block_.L_48d009:                                  ; preds = %block_.L_48ced8
  %loadMem_48d009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11056 = getelementptr inbounds %struct.GPR, %struct.GPR* %11055, i32 0, i32 33
  %11057 = getelementptr inbounds %struct.Reg, %struct.Reg* %11056, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %11057 to i64*
  %11058 = load i64, i64* %PC.i345
  %11059 = add i64 %11058, 5
  %11060 = load i64, i64* %PC.i345
  %11061 = add i64 %11060, 5
  store i64 %11061, i64* %PC.i345
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11059, i64* %11062, align 8
  store %struct.Memory* %loadMem_48d009, %struct.Memory** %MEMORY
  br label %block_.L_48d00e

block_.L_48d00e:                                  ; preds = %block_.L_48d009
  %loadMem_48d00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11064 = getelementptr inbounds %struct.GPR, %struct.GPR* %11063, i32 0, i32 33
  %11065 = getelementptr inbounds %struct.Reg, %struct.Reg* %11064, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %11065 to i64*
  %11066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11067 = getelementptr inbounds %struct.GPR, %struct.GPR* %11066, i32 0, i32 1
  %11068 = getelementptr inbounds %struct.Reg, %struct.Reg* %11067, i32 0, i32 0
  %RAX.i343 = bitcast %union.anon* %11068 to i64*
  %11069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11070 = getelementptr inbounds %struct.GPR, %struct.GPR* %11069, i32 0, i32 15
  %11071 = getelementptr inbounds %struct.Reg, %struct.Reg* %11070, i32 0, i32 0
  %RBP.i344 = bitcast %union.anon* %11071 to i64*
  %11072 = load i64, i64* %RBP.i344
  %11073 = sub i64 %11072, 44
  %11074 = load i64, i64* %PC.i342
  %11075 = add i64 %11074, 3
  store i64 %11075, i64* %PC.i342
  %11076 = inttoptr i64 %11073 to i32*
  %11077 = load i32, i32* %11076
  %11078 = zext i32 %11077 to i64
  store i64 %11078, i64* %RAX.i343, align 8
  store %struct.Memory* %loadMem_48d00e, %struct.Memory** %MEMORY
  %loadMem_48d011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11080 = getelementptr inbounds %struct.GPR, %struct.GPR* %11079, i32 0, i32 33
  %11081 = getelementptr inbounds %struct.Reg, %struct.Reg* %11080, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %11081 to i64*
  %11082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11083 = getelementptr inbounds %struct.GPR, %struct.GPR* %11082, i32 0, i32 1
  %11084 = getelementptr inbounds %struct.Reg, %struct.Reg* %11083, i32 0, i32 0
  %RAX.i341 = bitcast %union.anon* %11084 to i64*
  %11085 = load i64, i64* %RAX.i341
  %11086 = load i64, i64* %PC.i340
  %11087 = add i64 %11086, 3
  store i64 %11087, i64* %PC.i340
  %11088 = trunc i64 %11085 to i32
  %11089 = add i32 1, %11088
  %11090 = zext i32 %11089 to i64
  store i64 %11090, i64* %RAX.i341, align 8
  %11091 = icmp ult i32 %11089, %11088
  %11092 = icmp ult i32 %11089, 1
  %11093 = or i1 %11091, %11092
  %11094 = zext i1 %11093 to i8
  %11095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11094, i8* %11095, align 1
  %11096 = and i32 %11089, 255
  %11097 = call i32 @llvm.ctpop.i32(i32 %11096)
  %11098 = trunc i32 %11097 to i8
  %11099 = and i8 %11098, 1
  %11100 = xor i8 %11099, 1
  %11101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11100, i8* %11101, align 1
  %11102 = xor i64 1, %11085
  %11103 = trunc i64 %11102 to i32
  %11104 = xor i32 %11103, %11089
  %11105 = lshr i32 %11104, 4
  %11106 = trunc i32 %11105 to i8
  %11107 = and i8 %11106, 1
  %11108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11107, i8* %11108, align 1
  %11109 = icmp eq i32 %11089, 0
  %11110 = zext i1 %11109 to i8
  %11111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11110, i8* %11111, align 1
  %11112 = lshr i32 %11089, 31
  %11113 = trunc i32 %11112 to i8
  %11114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11113, i8* %11114, align 1
  %11115 = lshr i32 %11088, 31
  %11116 = xor i32 %11112, %11115
  %11117 = add i32 %11116, %11112
  %11118 = icmp eq i32 %11117, 2
  %11119 = zext i1 %11118 to i8
  %11120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11119, i8* %11120, align 1
  store %struct.Memory* %loadMem_48d011, %struct.Memory** %MEMORY
  %loadMem_48d014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11122 = getelementptr inbounds %struct.GPR, %struct.GPR* %11121, i32 0, i32 33
  %11123 = getelementptr inbounds %struct.Reg, %struct.Reg* %11122, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %11123 to i64*
  %11124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11125 = getelementptr inbounds %struct.GPR, %struct.GPR* %11124, i32 0, i32 1
  %11126 = getelementptr inbounds %struct.Reg, %struct.Reg* %11125, i32 0, i32 0
  %EAX.i338 = bitcast %union.anon* %11126 to i32*
  %11127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11128 = getelementptr inbounds %struct.GPR, %struct.GPR* %11127, i32 0, i32 15
  %11129 = getelementptr inbounds %struct.Reg, %struct.Reg* %11128, i32 0, i32 0
  %RBP.i339 = bitcast %union.anon* %11129 to i64*
  %11130 = load i64, i64* %RBP.i339
  %11131 = sub i64 %11130, 44
  %11132 = load i32, i32* %EAX.i338
  %11133 = zext i32 %11132 to i64
  %11134 = load i64, i64* %PC.i337
  %11135 = add i64 %11134, 3
  store i64 %11135, i64* %PC.i337
  %11136 = inttoptr i64 %11131 to i32*
  store i32 %11132, i32* %11136
  store %struct.Memory* %loadMem_48d014, %struct.Memory** %MEMORY
  %loadMem_48d017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11138 = getelementptr inbounds %struct.GPR, %struct.GPR* %11137, i32 0, i32 33
  %11139 = getelementptr inbounds %struct.Reg, %struct.Reg* %11138, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %11139 to i64*
  %11140 = load i64, i64* %PC.i336
  %11141 = add i64 %11140, -359
  %11142 = load i64, i64* %PC.i336
  %11143 = add i64 %11142, 5
  store i64 %11143, i64* %PC.i336
  %11144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11141, i64* %11144, align 8
  store %struct.Memory* %loadMem_48d017, %struct.Memory** %MEMORY
  br label %block_.L_48ceb0

block_.L_48d01c:                                  ; preds = %block_.L_48ceb0
  %loadMem_48d01c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11146 = getelementptr inbounds %struct.GPR, %struct.GPR* %11145, i32 0, i32 33
  %11147 = getelementptr inbounds %struct.Reg, %struct.Reg* %11146, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %11147 to i64*
  %11148 = load i64, i64* %PC.i335
  %11149 = add i64 %11148, 5
  %11150 = load i64, i64* %PC.i335
  %11151 = add i64 %11150, 5
  store i64 %11151, i64* %PC.i335
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11149, i64* %11152, align 8
  store %struct.Memory* %loadMem_48d01c, %struct.Memory** %MEMORY
  br label %block_.L_48d021

block_.L_48d021:                                  ; preds = %block_.L_48d01c, %block_.L_48ce94
  %loadMem_48d021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11154 = getelementptr inbounds %struct.GPR, %struct.GPR* %11153, i32 0, i32 33
  %11155 = getelementptr inbounds %struct.Reg, %struct.Reg* %11154, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %11155 to i64*
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11157 = getelementptr inbounds %struct.GPR, %struct.GPR* %11156, i32 0, i32 11
  %11158 = getelementptr inbounds %struct.Reg, %struct.Reg* %11157, i32 0, i32 0
  %RDI.i334 = bitcast %union.anon* %11158 to i64*
  %11159 = load i64, i64* %PC.i333
  %11160 = add i64 %11159, 8
  store i64 %11160, i64* %PC.i333
  %11161 = load i64, i64* bitcast (%G_0x6cc628_type* @G_0x6cc628 to i64*)
  store i64 %11161, i64* %RDI.i334, align 8
  store %struct.Memory* %loadMem_48d021, %struct.Memory** %MEMORY
  %loadMem1_48d029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11163 = getelementptr inbounds %struct.GPR, %struct.GPR* %11162, i32 0, i32 33
  %11164 = getelementptr inbounds %struct.Reg, %struct.Reg* %11163, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %11164 to i64*
  %11165 = load i64, i64* %PC.i332
  %11166 = add i64 %11165, 67735
  %11167 = load i64, i64* %PC.i332
  %11168 = add i64 %11167, 5
  %11169 = load i64, i64* %PC.i332
  %11170 = add i64 %11169, 5
  store i64 %11170, i64* %PC.i332
  %11171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11172 = load i64, i64* %11171, align 8
  %11173 = add i64 %11172, -8
  %11174 = inttoptr i64 %11173 to i64*
  store i64 %11168, i64* %11174
  store i64 %11173, i64* %11171, align 8
  %11175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11166, i64* %11175, align 8
  store %struct.Memory* %loadMem1_48d029, %struct.Memory** %MEMORY
  %loadMem2_48d029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48d029 = load i64, i64* %3
  %call2_48d029 = call %struct.Memory* @sub_49d8c0.store_coding_state(%struct.State* %0, i64 %loadPC_48d029, %struct.Memory* %loadMem2_48d029)
  store %struct.Memory* %call2_48d029, %struct.Memory** %MEMORY
  %loadMem_48d02e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11177 = getelementptr inbounds %struct.GPR, %struct.GPR* %11176, i32 0, i32 33
  %11178 = getelementptr inbounds %struct.Reg, %struct.Reg* %11177, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %11178 to i64*
  %11179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11180 = getelementptr inbounds %struct.GPR, %struct.GPR* %11179, i32 0, i32 15
  %11181 = getelementptr inbounds %struct.Reg, %struct.Reg* %11180, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %11181 to i64*
  %11182 = load i64, i64* %RBP.i331
  %11183 = sub i64 %11182, 100
  %11184 = load i64, i64* %PC.i330
  %11185 = add i64 %11184, 4
  store i64 %11185, i64* %PC.i330
  %11186 = inttoptr i64 %11183 to i32*
  %11187 = load i32, i32* %11186
  %11188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11188, align 1
  %11189 = and i32 %11187, 255
  %11190 = call i32 @llvm.ctpop.i32(i32 %11189)
  %11191 = trunc i32 %11190 to i8
  %11192 = and i8 %11191, 1
  %11193 = xor i8 %11192, 1
  %11194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11193, i8* %11194, align 1
  %11195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11195, align 1
  %11196 = icmp eq i32 %11187, 0
  %11197 = zext i1 %11196 to i8
  %11198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11197, i8* %11198, align 1
  %11199 = lshr i32 %11187, 31
  %11200 = trunc i32 %11199 to i8
  %11201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11200, i8* %11201, align 1
  %11202 = lshr i32 %11187, 31
  %11203 = xor i32 %11199, %11202
  %11204 = add i32 %11203, %11202
  %11205 = icmp eq i32 %11204, 2
  %11206 = zext i1 %11205 to i8
  %11207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11206, i8* %11207, align 1
  store %struct.Memory* %loadMem_48d02e, %struct.Memory** %MEMORY
  %loadMem_48d032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11209 = getelementptr inbounds %struct.GPR, %struct.GPR* %11208, i32 0, i32 33
  %11210 = getelementptr inbounds %struct.Reg, %struct.Reg* %11209, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %11210 to i64*
  %11211 = load i64, i64* %PC.i329
  %11212 = add i64 %11211, 210
  %11213 = load i64, i64* %PC.i329
  %11214 = add i64 %11213, 6
  %11215 = load i64, i64* %PC.i329
  %11216 = add i64 %11215, 6
  store i64 %11216, i64* %PC.i329
  %11217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11218 = load i8, i8* %11217, align 1
  store i8 %11218, i8* %BRANCH_TAKEN, align 1
  %11219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11220 = icmp ne i8 %11218, 0
  %11221 = select i1 %11220, i64 %11212, i64 %11214
  store i64 %11221, i64* %11219, align 8
  store %struct.Memory* %loadMem_48d032, %struct.Memory** %MEMORY
  %loadBr_48d032 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d032 = icmp eq i8 %loadBr_48d032, 1
  br i1 %cmpBr_48d032, label %block_.L_48d104, label %block_48d038

block_48d038:                                     ; preds = %block_.L_48d021
  %loadMem_48d038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11223 = getelementptr inbounds %struct.GPR, %struct.GPR* %11222, i32 0, i32 33
  %11224 = getelementptr inbounds %struct.Reg, %struct.Reg* %11223, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %11224 to i64*
  %11225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11226 = getelementptr inbounds %struct.GPR, %struct.GPR* %11225, i32 0, i32 1
  %11227 = getelementptr inbounds %struct.Reg, %struct.Reg* %11226, i32 0, i32 0
  %RAX.i327 = bitcast %union.anon* %11227 to i64*
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11229 = getelementptr inbounds %struct.GPR, %struct.GPR* %11228, i32 0, i32 15
  %11230 = getelementptr inbounds %struct.Reg, %struct.Reg* %11229, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %11230 to i64*
  %11231 = load i64, i64* %RBP.i328
  %11232 = sub i64 %11231, 80
  %11233 = load i64, i64* %PC.i326
  %11234 = add i64 %11233, 4
  store i64 %11234, i64* %PC.i326
  %11235 = inttoptr i64 %11232 to i64*
  %11236 = load i64, i64* %11235
  store i64 %11236, i64* %RAX.i327, align 8
  store %struct.Memory* %loadMem_48d038, %struct.Memory** %MEMORY
  %loadMem_48d03c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11238 = getelementptr inbounds %struct.GPR, %struct.GPR* %11237, i32 0, i32 33
  %11239 = getelementptr inbounds %struct.Reg, %struct.Reg* %11238, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %11239 to i64*
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11241 = getelementptr inbounds %struct.GPR, %struct.GPR* %11240, i32 0, i32 1
  %11242 = getelementptr inbounds %struct.Reg, %struct.Reg* %11241, i32 0, i32 0
  %RAX.i325 = bitcast %union.anon* %11242 to i64*
  %11243 = load i64, i64* %RAX.i325
  %11244 = add i64 %11243, 72
  %11245 = load i64, i64* %PC.i324
  %11246 = add i64 %11245, 4
  store i64 %11246, i64* %PC.i324
  %11247 = inttoptr i64 %11244 to i32*
  %11248 = load i32, i32* %11247
  %11249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11249, align 1
  %11250 = and i32 %11248, 255
  %11251 = call i32 @llvm.ctpop.i32(i32 %11250)
  %11252 = trunc i32 %11251 to i8
  %11253 = and i8 %11252, 1
  %11254 = xor i8 %11253, 1
  %11255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11254, i8* %11255, align 1
  %11256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11256, align 1
  %11257 = icmp eq i32 %11248, 0
  %11258 = zext i1 %11257 to i8
  %11259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11258, i8* %11259, align 1
  %11260 = lshr i32 %11248, 31
  %11261 = trunc i32 %11260 to i8
  %11262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11261, i8* %11262, align 1
  %11263 = lshr i32 %11248, 31
  %11264 = xor i32 %11260, %11263
  %11265 = add i32 %11264, %11263
  %11266 = icmp eq i32 %11265, 2
  %11267 = zext i1 %11266 to i8
  %11268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11267, i8* %11268, align 1
  store %struct.Memory* %loadMem_48d03c, %struct.Memory** %MEMORY
  %loadMem_48d040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11270 = getelementptr inbounds %struct.GPR, %struct.GPR* %11269, i32 0, i32 33
  %11271 = getelementptr inbounds %struct.Reg, %struct.Reg* %11270, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %11271 to i64*
  %11272 = load i64, i64* %PC.i323
  %11273 = add i64 %11272, 33
  %11274 = load i64, i64* %PC.i323
  %11275 = add i64 %11274, 6
  %11276 = load i64, i64* %PC.i323
  %11277 = add i64 %11276, 6
  store i64 %11277, i64* %PC.i323
  %11278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11279 = load i8, i8* %11278, align 1
  %11280 = icmp eq i8 %11279, 0
  %11281 = zext i1 %11280 to i8
  store i8 %11281, i8* %BRANCH_TAKEN, align 1
  %11282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11283 = select i1 %11280, i64 %11273, i64 %11275
  store i64 %11283, i64* %11282, align 8
  store %struct.Memory* %loadMem_48d040, %struct.Memory** %MEMORY
  %loadBr_48d040 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d040 = icmp eq i8 %loadBr_48d040, 1
  br i1 %cmpBr_48d040, label %block_.L_48d061, label %block_48d046

block_48d046:                                     ; preds = %block_48d038
  %loadMem_48d046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11285 = getelementptr inbounds %struct.GPR, %struct.GPR* %11284, i32 0, i32 33
  %11286 = getelementptr inbounds %struct.Reg, %struct.Reg* %11285, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %11286 to i64*
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11288 = getelementptr inbounds %struct.GPR, %struct.GPR* %11287, i32 0, i32 15
  %11289 = getelementptr inbounds %struct.Reg, %struct.Reg* %11288, i32 0, i32 0
  %RBP.i322 = bitcast %union.anon* %11289 to i64*
  %11290 = load i64, i64* %RBP.i322
  %11291 = sub i64 %11290, 92
  %11292 = load i64, i64* %PC.i321
  %11293 = add i64 %11292, 4
  store i64 %11293, i64* %PC.i321
  %11294 = inttoptr i64 %11291 to i32*
  %11295 = load i32, i32* %11294
  %11296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11296, align 1
  %11297 = and i32 %11295, 255
  %11298 = call i32 @llvm.ctpop.i32(i32 %11297)
  %11299 = trunc i32 %11298 to i8
  %11300 = and i8 %11299, 1
  %11301 = xor i8 %11300, 1
  %11302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11301, i8* %11302, align 1
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11303, align 1
  %11304 = icmp eq i32 %11295, 0
  %11305 = zext i1 %11304 to i8
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11305, i8* %11306, align 1
  %11307 = lshr i32 %11295, 31
  %11308 = trunc i32 %11307 to i8
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11308, i8* %11309, align 1
  %11310 = lshr i32 %11295, 31
  %11311 = xor i32 %11307, %11310
  %11312 = add i32 %11311, %11310
  %11313 = icmp eq i32 %11312, 2
  %11314 = zext i1 %11313 to i8
  %11315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11314, i8* %11315, align 1
  store %struct.Memory* %loadMem_48d046, %struct.Memory** %MEMORY
  %loadMem_48d04a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11317 = getelementptr inbounds %struct.GPR, %struct.GPR* %11316, i32 0, i32 33
  %11318 = getelementptr inbounds %struct.Reg, %struct.Reg* %11317, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %11318 to i64*
  %11319 = load i64, i64* %PC.i320
  %11320 = add i64 %11319, 99
  %11321 = load i64, i64* %PC.i320
  %11322 = add i64 %11321, 6
  %11323 = load i64, i64* %PC.i320
  %11324 = add i64 %11323, 6
  store i64 %11324, i64* %PC.i320
  %11325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11326 = load i8, i8* %11325, align 1
  store i8 %11326, i8* %BRANCH_TAKEN, align 1
  %11327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11328 = icmp ne i8 %11326, 0
  %11329 = select i1 %11328, i64 %11320, i64 %11322
  store i64 %11329, i64* %11327, align 8
  store %struct.Memory* %loadMem_48d04a, %struct.Memory** %MEMORY
  %loadBr_48d04a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d04a = icmp eq i8 %loadBr_48d04a, 1
  br i1 %cmpBr_48d04a, label %block_.L_48d0ad, label %block_48d050

block_48d050:                                     ; preds = %block_48d046
  %loadMem_48d050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11331 = getelementptr inbounds %struct.GPR, %struct.GPR* %11330, i32 0, i32 33
  %11332 = getelementptr inbounds %struct.Reg, %struct.Reg* %11331, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %11332 to i64*
  %11333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11334 = getelementptr inbounds %struct.GPR, %struct.GPR* %11333, i32 0, i32 1
  %11335 = getelementptr inbounds %struct.Reg, %struct.Reg* %11334, i32 0, i32 0
  %RAX.i318 = bitcast %union.anon* %11335 to i64*
  %11336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11337 = getelementptr inbounds %struct.GPR, %struct.GPR* %11336, i32 0, i32 15
  %11338 = getelementptr inbounds %struct.Reg, %struct.Reg* %11337, i32 0, i32 0
  %RBP.i319 = bitcast %union.anon* %11338 to i64*
  %11339 = load i64, i64* %RBP.i319
  %11340 = sub i64 %11339, 80
  %11341 = load i64, i64* %PC.i317
  %11342 = add i64 %11341, 4
  store i64 %11342, i64* %PC.i317
  %11343 = inttoptr i64 %11340 to i64*
  %11344 = load i64, i64* %11343
  store i64 %11344, i64* %RAX.i318, align 8
  store %struct.Memory* %loadMem_48d050, %struct.Memory** %MEMORY
  %loadMem_48d054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11346 = getelementptr inbounds %struct.GPR, %struct.GPR* %11345, i32 0, i32 33
  %11347 = getelementptr inbounds %struct.Reg, %struct.Reg* %11346, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %11347 to i64*
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11349 = getelementptr inbounds %struct.GPR, %struct.GPR* %11348, i32 0, i32 1
  %11350 = getelementptr inbounds %struct.Reg, %struct.Reg* %11349, i32 0, i32 0
  %RAX.i316 = bitcast %union.anon* %11350 to i64*
  %11351 = load i64, i64* %RAX.i316
  %11352 = add i64 %11351, 460
  %11353 = load i64, i64* %PC.i315
  %11354 = add i64 %11353, 7
  store i64 %11354, i64* %PC.i315
  %11355 = inttoptr i64 %11352 to i32*
  %11356 = load i32, i32* %11355
  %11357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11357, align 1
  %11358 = and i32 %11356, 255
  %11359 = call i32 @llvm.ctpop.i32(i32 %11358)
  %11360 = trunc i32 %11359 to i8
  %11361 = and i8 %11360, 1
  %11362 = xor i8 %11361, 1
  %11363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11362, i8* %11363, align 1
  %11364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11364, align 1
  %11365 = icmp eq i32 %11356, 0
  %11366 = zext i1 %11365 to i8
  %11367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11366, i8* %11367, align 1
  %11368 = lshr i32 %11356, 31
  %11369 = trunc i32 %11368 to i8
  %11370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11369, i8* %11370, align 1
  %11371 = lshr i32 %11356, 31
  %11372 = xor i32 %11368, %11371
  %11373 = add i32 %11372, %11371
  %11374 = icmp eq i32 %11373, 2
  %11375 = zext i1 %11374 to i8
  %11376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11375, i8* %11376, align 1
  store %struct.Memory* %loadMem_48d054, %struct.Memory** %MEMORY
  %loadMem_48d05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11378 = getelementptr inbounds %struct.GPR, %struct.GPR* %11377, i32 0, i32 33
  %11379 = getelementptr inbounds %struct.Reg, %struct.Reg* %11378, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %11379 to i64*
  %11380 = load i64, i64* %PC.i314
  %11381 = add i64 %11380, 82
  %11382 = load i64, i64* %PC.i314
  %11383 = add i64 %11382, 6
  %11384 = load i64, i64* %PC.i314
  %11385 = add i64 %11384, 6
  store i64 %11385, i64* %PC.i314
  %11386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11387 = load i8, i8* %11386, align 1
  store i8 %11387, i8* %BRANCH_TAKEN, align 1
  %11388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11389 = icmp ne i8 %11387, 0
  %11390 = select i1 %11389, i64 %11381, i64 %11383
  store i64 %11390, i64* %11388, align 8
  store %struct.Memory* %loadMem_48d05b, %struct.Memory** %MEMORY
  %loadBr_48d05b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d05b = icmp eq i8 %loadBr_48d05b, 1
  br i1 %cmpBr_48d05b, label %block_.L_48d0ad, label %block_.L_48d061

block_.L_48d061:                                  ; preds = %block_48d050, %block_48d038
  %loadMem_48d061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11392 = getelementptr inbounds %struct.GPR, %struct.GPR* %11391, i32 0, i32 33
  %11393 = getelementptr inbounds %struct.Reg, %struct.Reg* %11392, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %11393 to i64*
  %11394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11395 = getelementptr inbounds %struct.GPR, %struct.GPR* %11394, i32 0, i32 11
  %11396 = getelementptr inbounds %struct.Reg, %struct.Reg* %11395, i32 0, i32 0
  %RDI.i313 = bitcast %union.anon* %11396 to i64*
  %11397 = load i64, i64* %PC.i312
  %11398 = add i64 %11397, 5
  store i64 %11398, i64* %PC.i312
  store i64 1, i64* %RDI.i313, align 8
  store %struct.Memory* %loadMem_48d061, %struct.Memory** %MEMORY
  %loadMem_48d066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11400 = getelementptr inbounds %struct.GPR, %struct.GPR* %11399, i32 0, i32 33
  %11401 = getelementptr inbounds %struct.Reg, %struct.Reg* %11400, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %11401 to i64*
  %11402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11403 = getelementptr inbounds %struct.GPR, %struct.GPR* %11402, i32 0, i32 1
  %11404 = getelementptr inbounds %struct.Reg, %struct.Reg* %11403, i32 0, i32 0
  %RAX.i311 = bitcast %union.anon* %11404 to i64*
  %11405 = load i64, i64* %PC.i310
  %11406 = add i64 %11405, 8
  store i64 %11406, i64* %PC.i310
  %11407 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11407, i64* %RAX.i311, align 8
  store %struct.Memory* %loadMem_48d066, %struct.Memory** %MEMORY
  %loadMem_48d06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11409 = getelementptr inbounds %struct.GPR, %struct.GPR* %11408, i32 0, i32 33
  %11410 = getelementptr inbounds %struct.Reg, %struct.Reg* %11409, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %11410 to i64*
  %11411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11412 = getelementptr inbounds %struct.GPR, %struct.GPR* %11411, i32 0, i32 1
  %11413 = getelementptr inbounds %struct.Reg, %struct.Reg* %11412, i32 0, i32 0
  %RAX.i308 = bitcast %union.anon* %11413 to i64*
  %11414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11415 = getelementptr inbounds %struct.GPR, %struct.GPR* %11414, i32 0, i32 5
  %11416 = getelementptr inbounds %struct.Reg, %struct.Reg* %11415, i32 0, i32 0
  %RCX.i309 = bitcast %union.anon* %11416 to i64*
  %11417 = load i64, i64* %RAX.i308
  %11418 = add i64 %11417, 120
  %11419 = load i64, i64* %PC.i307
  %11420 = add i64 %11419, 3
  store i64 %11420, i64* %PC.i307
  %11421 = inttoptr i64 %11418 to i32*
  %11422 = load i32, i32* %11421
  %11423 = zext i32 %11422 to i64
  store i64 %11423, i64* %RCX.i309, align 8
  store %struct.Memory* %loadMem_48d06e, %struct.Memory** %MEMORY
  %loadMem_48d071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11425 = getelementptr inbounds %struct.GPR, %struct.GPR* %11424, i32 0, i32 33
  %11426 = getelementptr inbounds %struct.Reg, %struct.Reg* %11425, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %11426 to i64*
  %11427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11428 = getelementptr inbounds %struct.GPR, %struct.GPR* %11427, i32 0, i32 5
  %11429 = getelementptr inbounds %struct.Reg, %struct.Reg* %11428, i32 0, i32 0
  %ECX.i305 = bitcast %union.anon* %11429 to i32*
  %11430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11431 = getelementptr inbounds %struct.GPR, %struct.GPR* %11430, i32 0, i32 15
  %11432 = getelementptr inbounds %struct.Reg, %struct.Reg* %11431, i32 0, i32 0
  %RBP.i306 = bitcast %union.anon* %11432 to i64*
  %11433 = load i64, i64* %RBP.i306
  %11434 = sub i64 %11433, 96
  %11435 = load i32, i32* %ECX.i305
  %11436 = zext i32 %11435 to i64
  %11437 = load i64, i64* %PC.i304
  %11438 = add i64 %11437, 3
  store i64 %11438, i64* %PC.i304
  %11439 = inttoptr i64 %11434 to i32*
  store i32 %11435, i32* %11439
  store %struct.Memory* %loadMem_48d071, %struct.Memory** %MEMORY
  %loadMem1_48d074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11441 = getelementptr inbounds %struct.GPR, %struct.GPR* %11440, i32 0, i32 33
  %11442 = getelementptr inbounds %struct.Reg, %struct.Reg* %11441, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %11442 to i64*
  %11443 = load i64, i64* %PC.i303
  %11444 = add i64 %11443, -299284
  %11445 = load i64, i64* %PC.i303
  %11446 = add i64 %11445, 5
  %11447 = load i64, i64* %PC.i303
  %11448 = add i64 %11447, 5
  store i64 %11448, i64* %PC.i303
  %11449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11450 = load i64, i64* %11449, align 8
  %11451 = add i64 %11450, -8
  %11452 = inttoptr i64 %11451 to i64*
  store i64 %11446, i64* %11452
  store i64 %11451, i64* %11449, align 8
  %11453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11444, i64* %11453, align 8
  store %struct.Memory* %loadMem1_48d074, %struct.Memory** %MEMORY
  %loadMem2_48d074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48d074 = load i64, i64* %3
  %call2_48d074 = call %struct.Memory* @sub_443f60.writeMBLayer(%struct.State* %0, i64 %loadPC_48d074, %struct.Memory* %loadMem2_48d074)
  store %struct.Memory* %call2_48d074, %struct.Memory** %MEMORY
  %loadMem_48d079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11455 = getelementptr inbounds %struct.GPR, %struct.GPR* %11454, i32 0, i32 33
  %11456 = getelementptr inbounds %struct.Reg, %struct.Reg* %11455, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %11456 to i64*
  %11457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11458 = getelementptr inbounds %struct.GPR, %struct.GPR* %11457, i32 0, i32 7
  %11459 = getelementptr inbounds %struct.Reg, %struct.Reg* %11458, i32 0, i32 0
  %RDX.i301 = bitcast %union.anon* %11459 to i64*
  %11460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11461 = getelementptr inbounds %struct.GPR, %struct.GPR* %11460, i32 0, i32 15
  %11462 = getelementptr inbounds %struct.Reg, %struct.Reg* %11461, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %11462 to i64*
  %11463 = load i64, i64* %RBP.i302
  %11464 = sub i64 %11463, 104
  %11465 = load i64, i64* %PC.i300
  %11466 = add i64 %11465, 4
  store i64 %11466, i64* %PC.i300
  store i64 %11464, i64* %RDX.i301, align 8
  store %struct.Memory* %loadMem_48d079, %struct.Memory** %MEMORY
  %loadMem_48d07d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11468 = getelementptr inbounds %struct.GPR, %struct.GPR* %11467, i32 0, i32 33
  %11469 = getelementptr inbounds %struct.Reg, %struct.Reg* %11468, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %11469 to i64*
  %11470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11471 = getelementptr inbounds %struct.GPR, %struct.GPR* %11470, i32 0, i32 5
  %11472 = getelementptr inbounds %struct.Reg, %struct.Reg* %11471, i32 0, i32 0
  %RCX.i298 = bitcast %union.anon* %11472 to i64*
  %11473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11474 = getelementptr inbounds %struct.GPR, %struct.GPR* %11473, i32 0, i32 15
  %11475 = getelementptr inbounds %struct.Reg, %struct.Reg* %11474, i32 0, i32 0
  %RBP.i299 = bitcast %union.anon* %11475 to i64*
  %11476 = load i64, i64* %RBP.i299
  %11477 = sub i64 %11476, 108
  %11478 = load i64, i64* %PC.i297
  %11479 = add i64 %11478, 4
  store i64 %11479, i64* %PC.i297
  store i64 %11477, i64* %RCX.i298, align 8
  store %struct.Memory* %loadMem_48d07d, %struct.Memory** %MEMORY
  %loadMem_48d081 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11481 = getelementptr inbounds %struct.GPR, %struct.GPR* %11480, i32 0, i32 33
  %11482 = getelementptr inbounds %struct.Reg, %struct.Reg* %11481, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %11482 to i64*
  %11483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11484 = getelementptr inbounds %struct.GPR, %struct.GPR* %11483, i32 0, i32 1
  %11485 = getelementptr inbounds %struct.Reg, %struct.Reg* %11484, i32 0, i32 0
  %EAX.i295 = bitcast %union.anon* %11485 to i32*
  %11486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11487 = getelementptr inbounds %struct.GPR, %struct.GPR* %11486, i32 0, i32 15
  %11488 = getelementptr inbounds %struct.Reg, %struct.Reg* %11487, i32 0, i32 0
  %RBP.i296 = bitcast %union.anon* %11488 to i64*
  %11489 = load i64, i64* %RBP.i296
  %11490 = sub i64 %11489, 52
  %11491 = load i32, i32* %EAX.i295
  %11492 = zext i32 %11491 to i64
  %11493 = load i64, i64* %PC.i294
  %11494 = add i64 %11493, 3
  store i64 %11494, i64* %PC.i294
  %11495 = inttoptr i64 %11490 to i32*
  store i32 %11491, i32* %11495
  store %struct.Memory* %loadMem_48d081, %struct.Memory** %MEMORY
  %loadMem_48d084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11497 = getelementptr inbounds %struct.GPR, %struct.GPR* %11496, i32 0, i32 33
  %11498 = getelementptr inbounds %struct.Reg, %struct.Reg* %11497, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %11498 to i64*
  %11499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11500 = getelementptr inbounds %struct.GPR, %struct.GPR* %11499, i32 0, i32 11
  %11501 = getelementptr inbounds %struct.Reg, %struct.Reg* %11500, i32 0, i32 0
  %RDI.i292 = bitcast %union.anon* %11501 to i64*
  %11502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11503 = getelementptr inbounds %struct.GPR, %struct.GPR* %11502, i32 0, i32 15
  %11504 = getelementptr inbounds %struct.Reg, %struct.Reg* %11503, i32 0, i32 0
  %RBP.i293 = bitcast %union.anon* %11504 to i64*
  %11505 = load i64, i64* %RBP.i293
  %11506 = sub i64 %11505, 96
  %11507 = load i64, i64* %PC.i291
  %11508 = add i64 %11507, 3
  store i64 %11508, i64* %PC.i291
  %11509 = inttoptr i64 %11506 to i32*
  %11510 = load i32, i32* %11509
  %11511 = zext i32 %11510 to i64
  store i64 %11511, i64* %RDI.i292, align 8
  store %struct.Memory* %loadMem_48d084, %struct.Memory** %MEMORY
  %loadMem_48d087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11513 = getelementptr inbounds %struct.GPR, %struct.GPR* %11512, i32 0, i32 33
  %11514 = getelementptr inbounds %struct.Reg, %struct.Reg* %11513, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %11514 to i64*
  %11515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11516 = getelementptr inbounds %struct.GPR, %struct.GPR* %11515, i32 0, i32 9
  %11517 = getelementptr inbounds %struct.Reg, %struct.Reg* %11516, i32 0, i32 0
  %RSI.i289 = bitcast %union.anon* %11517 to i64*
  %11518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11519 = getelementptr inbounds %struct.GPR, %struct.GPR* %11518, i32 0, i32 15
  %11520 = getelementptr inbounds %struct.Reg, %struct.Reg* %11519, i32 0, i32 0
  %RBP.i290 = bitcast %union.anon* %11520 to i64*
  %11521 = load i64, i64* %RBP.i290
  %11522 = sub i64 %11521, 108
  %11523 = load i64, i64* %PC.i288
  %11524 = add i64 %11523, 3
  store i64 %11524, i64* %PC.i288
  %11525 = inttoptr i64 %11522 to i32*
  %11526 = load i32, i32* %11525
  %11527 = zext i32 %11526 to i64
  store i64 %11527, i64* %RSI.i289, align 8
  store %struct.Memory* %loadMem_48d087, %struct.Memory** %MEMORY
  %loadMem1_48d08a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11529 = getelementptr inbounds %struct.GPR, %struct.GPR* %11528, i32 0, i32 33
  %11530 = getelementptr inbounds %struct.Reg, %struct.Reg* %11529, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %11530 to i64*
  %11531 = load i64, i64* %PC.i287
  %11532 = add i64 %11531, 128630
  %11533 = load i64, i64* %PC.i287
  %11534 = add i64 %11533, 5
  %11535 = load i64, i64* %PC.i287
  %11536 = add i64 %11535, 5
  store i64 %11536, i64* %PC.i287
  %11537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11538 = load i64, i64* %11537, align 8
  %11539 = add i64 %11538, -8
  %11540 = inttoptr i64 %11539 to i64*
  store i64 %11534, i64* %11540
  store i64 %11539, i64* %11537, align 8
  %11541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11532, i64* %11541, align 8
  store %struct.Memory* %loadMem1_48d08a, %struct.Memory** %MEMORY
  %loadMem2_48d08a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48d08a = load i64, i64* %3
  %call2_48d08a = call %struct.Memory* @sub_4ac700.ue_linfo(%struct.State* %0, i64 %loadPC_48d08a, %struct.Memory* %loadMem2_48d08a)
  store %struct.Memory* %call2_48d08a, %struct.Memory** %MEMORY
  %loadMem_48d08f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11543 = getelementptr inbounds %struct.GPR, %struct.GPR* %11542, i32 0, i32 33
  %11544 = getelementptr inbounds %struct.Reg, %struct.Reg* %11543, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %11544 to i64*
  %11545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11546 = getelementptr inbounds %struct.GPR, %struct.GPR* %11545, i32 0, i32 1
  %11547 = getelementptr inbounds %struct.Reg, %struct.Reg* %11546, i32 0, i32 0
  %RAX.i285 = bitcast %union.anon* %11547 to i64*
  %11548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11549 = getelementptr inbounds %struct.GPR, %struct.GPR* %11548, i32 0, i32 15
  %11550 = getelementptr inbounds %struct.Reg, %struct.Reg* %11549, i32 0, i32 0
  %RBP.i286 = bitcast %union.anon* %11550 to i64*
  %11551 = load i64, i64* %RBP.i286
  %11552 = sub i64 %11551, 104
  %11553 = load i64, i64* %PC.i284
  %11554 = add i64 %11553, 3
  store i64 %11554, i64* %PC.i284
  %11555 = inttoptr i64 %11552 to i32*
  %11556 = load i32, i32* %11555
  %11557 = zext i32 %11556 to i64
  store i64 %11557, i64* %RAX.i285, align 8
  store %struct.Memory* %loadMem_48d08f, %struct.Memory** %MEMORY
  %loadMem_48d092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11559 = getelementptr inbounds %struct.GPR, %struct.GPR* %11558, i32 0, i32 33
  %11560 = getelementptr inbounds %struct.Reg, %struct.Reg* %11559, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %11560 to i64*
  %11561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11562 = getelementptr inbounds %struct.GPR, %struct.GPR* %11561, i32 0, i32 9
  %11563 = getelementptr inbounds %struct.Reg, %struct.Reg* %11562, i32 0, i32 0
  %RSI.i282 = bitcast %union.anon* %11563 to i64*
  %11564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11565 = getelementptr inbounds %struct.GPR, %struct.GPR* %11564, i32 0, i32 15
  %11566 = getelementptr inbounds %struct.Reg, %struct.Reg* %11565, i32 0, i32 0
  %RBP.i283 = bitcast %union.anon* %11566 to i64*
  %11567 = load i64, i64* %RBP.i283
  %11568 = sub i64 %11567, 52
  %11569 = load i64, i64* %PC.i281
  %11570 = add i64 %11569, 3
  store i64 %11570, i64* %PC.i281
  %11571 = inttoptr i64 %11568 to i32*
  %11572 = load i32, i32* %11571
  %11573 = zext i32 %11572 to i64
  store i64 %11573, i64* %RSI.i282, align 8
  store %struct.Memory* %loadMem_48d092, %struct.Memory** %MEMORY
  %loadMem_48d095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11575 = getelementptr inbounds %struct.GPR, %struct.GPR* %11574, i32 0, i32 33
  %11576 = getelementptr inbounds %struct.Reg, %struct.Reg* %11575, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %11576 to i64*
  %11577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11578 = getelementptr inbounds %struct.GPR, %struct.GPR* %11577, i32 0, i32 1
  %11579 = getelementptr inbounds %struct.Reg, %struct.Reg* %11578, i32 0, i32 0
  %EAX.i279 = bitcast %union.anon* %11579 to i32*
  %11580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11581 = getelementptr inbounds %struct.GPR, %struct.GPR* %11580, i32 0, i32 9
  %11582 = getelementptr inbounds %struct.Reg, %struct.Reg* %11581, i32 0, i32 0
  %RSI.i280 = bitcast %union.anon* %11582 to i64*
  %11583 = load i64, i64* %RSI.i280
  %11584 = load i32, i32* %EAX.i279
  %11585 = zext i32 %11584 to i64
  %11586 = load i64, i64* %PC.i278
  %11587 = add i64 %11586, 2
  store i64 %11587, i64* %PC.i278
  %11588 = trunc i64 %11583 to i32
  %11589 = sub i32 %11588, %11584
  %11590 = zext i32 %11589 to i64
  store i64 %11590, i64* %RSI.i280, align 8
  %11591 = icmp ult i32 %11588, %11584
  %11592 = zext i1 %11591 to i8
  %11593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11592, i8* %11593, align 1
  %11594 = and i32 %11589, 255
  %11595 = call i32 @llvm.ctpop.i32(i32 %11594)
  %11596 = trunc i32 %11595 to i8
  %11597 = and i8 %11596, 1
  %11598 = xor i8 %11597, 1
  %11599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11598, i8* %11599, align 1
  %11600 = xor i64 %11585, %11583
  %11601 = trunc i64 %11600 to i32
  %11602 = xor i32 %11601, %11589
  %11603 = lshr i32 %11602, 4
  %11604 = trunc i32 %11603 to i8
  %11605 = and i8 %11604, 1
  %11606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11605, i8* %11606, align 1
  %11607 = icmp eq i32 %11589, 0
  %11608 = zext i1 %11607 to i8
  %11609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11608, i8* %11609, align 1
  %11610 = lshr i32 %11589, 31
  %11611 = trunc i32 %11610 to i8
  %11612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11611, i8* %11612, align 1
  %11613 = lshr i32 %11588, 31
  %11614 = lshr i32 %11584, 31
  %11615 = xor i32 %11614, %11613
  %11616 = xor i32 %11610, %11613
  %11617 = add i32 %11616, %11615
  %11618 = icmp eq i32 %11617, 2
  %11619 = zext i1 %11618 to i8
  %11620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11619, i8* %11620, align 1
  store %struct.Memory* %loadMem_48d095, %struct.Memory** %MEMORY
  %loadMem_48d097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11622 = getelementptr inbounds %struct.GPR, %struct.GPR* %11621, i32 0, i32 33
  %11623 = getelementptr inbounds %struct.Reg, %struct.Reg* %11622, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %11623 to i64*
  %11624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11625 = getelementptr inbounds %struct.GPR, %struct.GPR* %11624, i32 0, i32 9
  %11626 = getelementptr inbounds %struct.Reg, %struct.Reg* %11625, i32 0, i32 0
  %ESI.i276 = bitcast %union.anon* %11626 to i32*
  %11627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11628 = getelementptr inbounds %struct.GPR, %struct.GPR* %11627, i32 0, i32 15
  %11629 = getelementptr inbounds %struct.Reg, %struct.Reg* %11628, i32 0, i32 0
  %RBP.i277 = bitcast %union.anon* %11629 to i64*
  %11630 = load i64, i64* %RBP.i277
  %11631 = sub i64 %11630, 52
  %11632 = load i32, i32* %ESI.i276
  %11633 = zext i32 %11632 to i64
  %11634 = load i64, i64* %PC.i275
  %11635 = add i64 %11634, 3
  store i64 %11635, i64* %PC.i275
  %11636 = inttoptr i64 %11631 to i32*
  store i32 %11632, i32* %11636
  store %struct.Memory* %loadMem_48d097, %struct.Memory** %MEMORY
  %loadMem_48d09a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11638 = getelementptr inbounds %struct.GPR, %struct.GPR* %11637, i32 0, i32 33
  %11639 = getelementptr inbounds %struct.Reg, %struct.Reg* %11638, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %11639 to i64*
  %11640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11641 = getelementptr inbounds %struct.GPR, %struct.GPR* %11640, i32 0, i32 1
  %11642 = getelementptr inbounds %struct.Reg, %struct.Reg* %11641, i32 0, i32 0
  %RAX.i273 = bitcast %union.anon* %11642 to i64*
  %11643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11644 = getelementptr inbounds %struct.GPR, %struct.GPR* %11643, i32 0, i32 15
  %11645 = getelementptr inbounds %struct.Reg, %struct.Reg* %11644, i32 0, i32 0
  %RBP.i274 = bitcast %union.anon* %11645 to i64*
  %11646 = load i64, i64* %RBP.i274
  %11647 = sub i64 %11646, 96
  %11648 = load i64, i64* %PC.i272
  %11649 = add i64 %11648, 3
  store i64 %11649, i64* %PC.i272
  %11650 = inttoptr i64 %11647 to i32*
  %11651 = load i32, i32* %11650
  %11652 = zext i32 %11651 to i64
  store i64 %11652, i64* %RAX.i273, align 8
  store %struct.Memory* %loadMem_48d09a, %struct.Memory** %MEMORY
  %loadMem_48d09d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11654 = getelementptr inbounds %struct.GPR, %struct.GPR* %11653, i32 0, i32 33
  %11655 = getelementptr inbounds %struct.Reg, %struct.Reg* %11654, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %11655 to i64*
  %11656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11657 = getelementptr inbounds %struct.GPR, %struct.GPR* %11656, i32 0, i32 5
  %11658 = getelementptr inbounds %struct.Reg, %struct.Reg* %11657, i32 0, i32 0
  %RCX.i271 = bitcast %union.anon* %11658 to i64*
  %11659 = load i64, i64* %PC.i270
  %11660 = add i64 %11659, 8
  store i64 %11660, i64* %PC.i270
  %11661 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11661, i64* %RCX.i271, align 8
  store %struct.Memory* %loadMem_48d09d, %struct.Memory** %MEMORY
  %loadMem_48d0a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11663 = getelementptr inbounds %struct.GPR, %struct.GPR* %11662, i32 0, i32 33
  %11664 = getelementptr inbounds %struct.Reg, %struct.Reg* %11663, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %11664 to i64*
  %11665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11666 = getelementptr inbounds %struct.GPR, %struct.GPR* %11665, i32 0, i32 1
  %11667 = getelementptr inbounds %struct.Reg, %struct.Reg* %11666, i32 0, i32 0
  %EAX.i268 = bitcast %union.anon* %11667 to i32*
  %11668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11669 = getelementptr inbounds %struct.GPR, %struct.GPR* %11668, i32 0, i32 5
  %11670 = getelementptr inbounds %struct.Reg, %struct.Reg* %11669, i32 0, i32 0
  %RCX.i269 = bitcast %union.anon* %11670 to i64*
  %11671 = load i64, i64* %RCX.i269
  %11672 = add i64 %11671, 120
  %11673 = load i32, i32* %EAX.i268
  %11674 = zext i32 %11673 to i64
  %11675 = load i64, i64* %PC.i267
  %11676 = add i64 %11675, 3
  store i64 %11676, i64* %PC.i267
  %11677 = inttoptr i64 %11672 to i32*
  store i32 %11673, i32* %11677
  store %struct.Memory* %loadMem_48d0a5, %struct.Memory** %MEMORY
  %loadMem_48d0a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11679 = getelementptr inbounds %struct.GPR, %struct.GPR* %11678, i32 0, i32 33
  %11680 = getelementptr inbounds %struct.Reg, %struct.Reg* %11679, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %11680 to i64*
  %11681 = load i64, i64* %PC.i266
  %11682 = add i64 %11681, 87
  %11683 = load i64, i64* %PC.i266
  %11684 = add i64 %11683, 5
  store i64 %11684, i64* %PC.i266
  %11685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11682, i64* %11685, align 8
  store %struct.Memory* %loadMem_48d0a8, %struct.Memory** %MEMORY
  br label %block_.L_48d0ff

block_.L_48d0ad:                                  ; preds = %block_48d050, %block_48d046
  %loadMem_48d0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %11686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11687 = getelementptr inbounds %struct.GPR, %struct.GPR* %11686, i32 0, i32 33
  %11688 = getelementptr inbounds %struct.Reg, %struct.Reg* %11687, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %11688 to i64*
  %11689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11690 = getelementptr inbounds %struct.GPR, %struct.GPR* %11689, i32 0, i32 7
  %11691 = getelementptr inbounds %struct.Reg, %struct.Reg* %11690, i32 0, i32 0
  %RDX.i264 = bitcast %union.anon* %11691 to i64*
  %11692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11693 = getelementptr inbounds %struct.GPR, %struct.GPR* %11692, i32 0, i32 15
  %11694 = getelementptr inbounds %struct.Reg, %struct.Reg* %11693, i32 0, i32 0
  %RBP.i265 = bitcast %union.anon* %11694 to i64*
  %11695 = load i64, i64* %RBP.i265
  %11696 = sub i64 %11695, 52
  %11697 = load i64, i64* %PC.i263
  %11698 = add i64 %11697, 4
  store i64 %11698, i64* %PC.i263
  store i64 %11696, i64* %RDX.i264, align 8
  store %struct.Memory* %loadMem_48d0ad, %struct.Memory** %MEMORY
  %loadMem_48d0b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11700 = getelementptr inbounds %struct.GPR, %struct.GPR* %11699, i32 0, i32 33
  %11701 = getelementptr inbounds %struct.Reg, %struct.Reg* %11700, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %11701 to i64*
  %11702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11703 = getelementptr inbounds %struct.GPR, %struct.GPR* %11702, i32 0, i32 5
  %11704 = getelementptr inbounds %struct.Reg, %struct.Reg* %11703, i32 0, i32 0
  %RCX.i261 = bitcast %union.anon* %11704 to i64*
  %11705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11706 = getelementptr inbounds %struct.GPR, %struct.GPR* %11705, i32 0, i32 15
  %11707 = getelementptr inbounds %struct.Reg, %struct.Reg* %11706, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %11707 to i64*
  %11708 = load i64, i64* %RBP.i262
  %11709 = sub i64 %11708, 108
  %11710 = load i64, i64* %PC.i260
  %11711 = add i64 %11710, 4
  store i64 %11711, i64* %PC.i260
  store i64 %11709, i64* %RCX.i261, align 8
  store %struct.Memory* %loadMem_48d0b1, %struct.Memory** %MEMORY
  %loadMem_48d0b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11713 = getelementptr inbounds %struct.GPR, %struct.GPR* %11712, i32 0, i32 33
  %11714 = getelementptr inbounds %struct.Reg, %struct.Reg* %11713, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %11714 to i64*
  %11715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11716 = getelementptr inbounds %struct.GPR, %struct.GPR* %11715, i32 0, i32 1
  %11717 = getelementptr inbounds %struct.Reg, %struct.Reg* %11716, i32 0, i32 0
  %RAX.i259 = bitcast %union.anon* %11717 to i64*
  %11718 = load i64, i64* %PC.i258
  %11719 = add i64 %11718, 8
  store i64 %11719, i64* %PC.i258
  %11720 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11720, i64* %RAX.i259, align 8
  store %struct.Memory* %loadMem_48d0b5, %struct.Memory** %MEMORY
  %loadMem_48d0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11722 = getelementptr inbounds %struct.GPR, %struct.GPR* %11721, i32 0, i32 33
  %11723 = getelementptr inbounds %struct.Reg, %struct.Reg* %11722, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %11723 to i64*
  %11724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11725 = getelementptr inbounds %struct.GPR, %struct.GPR* %11724, i32 0, i32 1
  %11726 = getelementptr inbounds %struct.Reg, %struct.Reg* %11725, i32 0, i32 0
  %RAX.i256 = bitcast %union.anon* %11726 to i64*
  %11727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11728 = getelementptr inbounds %struct.GPR, %struct.GPR* %11727, i32 0, i32 9
  %11729 = getelementptr inbounds %struct.Reg, %struct.Reg* %11728, i32 0, i32 0
  %RSI.i257 = bitcast %union.anon* %11729 to i64*
  %11730 = load i64, i64* %RAX.i256
  %11731 = add i64 %11730, 120
  %11732 = load i64, i64* %PC.i255
  %11733 = add i64 %11732, 3
  store i64 %11733, i64* %PC.i255
  %11734 = inttoptr i64 %11731 to i32*
  %11735 = load i32, i32* %11734
  %11736 = zext i32 %11735 to i64
  store i64 %11736, i64* %RSI.i257, align 8
  store %struct.Memory* %loadMem_48d0bd, %struct.Memory** %MEMORY
  %loadMem_48d0c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11738 = getelementptr inbounds %struct.GPR, %struct.GPR* %11737, i32 0, i32 33
  %11739 = getelementptr inbounds %struct.Reg, %struct.Reg* %11738, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %11739 to i64*
  %11740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11741 = getelementptr inbounds %struct.GPR, %struct.GPR* %11740, i32 0, i32 9
  %11742 = getelementptr inbounds %struct.Reg, %struct.Reg* %11741, i32 0, i32 0
  %RSI.i254 = bitcast %union.anon* %11742 to i64*
  %11743 = load i64, i64* %RSI.i254
  %11744 = load i64, i64* %PC.i253
  %11745 = add i64 %11744, 3
  store i64 %11745, i64* %PC.i253
  %11746 = trunc i64 %11743 to i32
  %11747 = add i32 1, %11746
  %11748 = zext i32 %11747 to i64
  store i64 %11748, i64* %RSI.i254, align 8
  %11749 = icmp ult i32 %11747, %11746
  %11750 = icmp ult i32 %11747, 1
  %11751 = or i1 %11749, %11750
  %11752 = zext i1 %11751 to i8
  %11753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11752, i8* %11753, align 1
  %11754 = and i32 %11747, 255
  %11755 = call i32 @llvm.ctpop.i32(i32 %11754)
  %11756 = trunc i32 %11755 to i8
  %11757 = and i8 %11756, 1
  %11758 = xor i8 %11757, 1
  %11759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11758, i8* %11759, align 1
  %11760 = xor i64 1, %11743
  %11761 = trunc i64 %11760 to i32
  %11762 = xor i32 %11761, %11747
  %11763 = lshr i32 %11762, 4
  %11764 = trunc i32 %11763 to i8
  %11765 = and i8 %11764, 1
  %11766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11765, i8* %11766, align 1
  %11767 = icmp eq i32 %11747, 0
  %11768 = zext i1 %11767 to i8
  %11769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11768, i8* %11769, align 1
  %11770 = lshr i32 %11747, 31
  %11771 = trunc i32 %11770 to i8
  %11772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11771, i8* %11772, align 1
  %11773 = lshr i32 %11746, 31
  %11774 = xor i32 %11770, %11773
  %11775 = add i32 %11774, %11770
  %11776 = icmp eq i32 %11775, 2
  %11777 = zext i1 %11776 to i8
  %11778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11777, i8* %11778, align 1
  store %struct.Memory* %loadMem_48d0c0, %struct.Memory** %MEMORY
  %loadMem_48d0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11780 = getelementptr inbounds %struct.GPR, %struct.GPR* %11779, i32 0, i32 33
  %11781 = getelementptr inbounds %struct.Reg, %struct.Reg* %11780, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %11781 to i64*
  %11782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11783 = getelementptr inbounds %struct.GPR, %struct.GPR* %11782, i32 0, i32 11
  %11784 = getelementptr inbounds %struct.Reg, %struct.Reg* %11783, i32 0, i32 0
  %RDI.i251 = bitcast %union.anon* %11784 to i64*
  %11785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11786 = getelementptr inbounds %struct.GPR, %struct.GPR* %11785, i32 0, i32 15
  %11787 = getelementptr inbounds %struct.Reg, %struct.Reg* %11786, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %11787 to i64*
  %11788 = load i64, i64* %RBP.i252
  %11789 = sub i64 %11788, 108
  %11790 = load i64, i64* %PC.i250
  %11791 = add i64 %11790, 3
  store i64 %11791, i64* %PC.i250
  %11792 = inttoptr i64 %11789 to i32*
  %11793 = load i32, i32* %11792
  %11794 = zext i32 %11793 to i64
  store i64 %11794, i64* %RDI.i251, align 8
  store %struct.Memory* %loadMem_48d0c3, %struct.Memory** %MEMORY
  %loadMem_48d0c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11796 = getelementptr inbounds %struct.GPR, %struct.GPR* %11795, i32 0, i32 33
  %11797 = getelementptr inbounds %struct.Reg, %struct.Reg* %11796, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %11797 to i64*
  %11798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11799 = getelementptr inbounds %struct.GPR, %struct.GPR* %11798, i32 0, i32 11
  %11800 = getelementptr inbounds %struct.Reg, %struct.Reg* %11799, i32 0, i32 0
  %EDI.i248 = bitcast %union.anon* %11800 to i32*
  %11801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11802 = getelementptr inbounds %struct.GPR, %struct.GPR* %11801, i32 0, i32 15
  %11803 = getelementptr inbounds %struct.Reg, %struct.Reg* %11802, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %11803 to i64*
  %11804 = load i64, i64* %RBP.i249
  %11805 = sub i64 %11804, 156
  %11806 = load i32, i32* %EDI.i248
  %11807 = zext i32 %11806 to i64
  %11808 = load i64, i64* %PC.i247
  %11809 = add i64 %11808, 6
  store i64 %11809, i64* %PC.i247
  %11810 = inttoptr i64 %11805 to i32*
  store i32 %11806, i32* %11810
  store %struct.Memory* %loadMem_48d0c6, %struct.Memory** %MEMORY
  %loadMem_48d0cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11812 = getelementptr inbounds %struct.GPR, %struct.GPR* %11811, i32 0, i32 33
  %11813 = getelementptr inbounds %struct.Reg, %struct.Reg* %11812, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %11813 to i64*
  %11814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11815 = getelementptr inbounds %struct.GPR, %struct.GPR* %11814, i32 0, i32 9
  %11816 = getelementptr inbounds %struct.Reg, %struct.Reg* %11815, i32 0, i32 0
  %ESI.i245 = bitcast %union.anon* %11816 to i32*
  %11817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11818 = getelementptr inbounds %struct.GPR, %struct.GPR* %11817, i32 0, i32 11
  %11819 = getelementptr inbounds %struct.Reg, %struct.Reg* %11818, i32 0, i32 0
  %RDI.i246 = bitcast %union.anon* %11819 to i64*
  %11820 = load i32, i32* %ESI.i245
  %11821 = zext i32 %11820 to i64
  %11822 = load i64, i64* %PC.i244
  %11823 = add i64 %11822, 2
  store i64 %11823, i64* %PC.i244
  %11824 = and i64 %11821, 4294967295
  store i64 %11824, i64* %RDI.i246, align 8
  store %struct.Memory* %loadMem_48d0cc, %struct.Memory** %MEMORY
  %loadMem_48d0ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %11825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11826 = getelementptr inbounds %struct.GPR, %struct.GPR* %11825, i32 0, i32 33
  %11827 = getelementptr inbounds %struct.Reg, %struct.Reg* %11826, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %11827 to i64*
  %11828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11829 = getelementptr inbounds %struct.GPR, %struct.GPR* %11828, i32 0, i32 9
  %11830 = getelementptr inbounds %struct.Reg, %struct.Reg* %11829, i32 0, i32 0
  %RSI.i242 = bitcast %union.anon* %11830 to i64*
  %11831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11832 = getelementptr inbounds %struct.GPR, %struct.GPR* %11831, i32 0, i32 15
  %11833 = getelementptr inbounds %struct.Reg, %struct.Reg* %11832, i32 0, i32 0
  %RBP.i243 = bitcast %union.anon* %11833 to i64*
  %11834 = load i64, i64* %RBP.i243
  %11835 = sub i64 %11834, 156
  %11836 = load i64, i64* %PC.i241
  %11837 = add i64 %11836, 6
  store i64 %11837, i64* %PC.i241
  %11838 = inttoptr i64 %11835 to i32*
  %11839 = load i32, i32* %11838
  %11840 = zext i32 %11839 to i64
  store i64 %11840, i64* %RSI.i242, align 8
  store %struct.Memory* %loadMem_48d0ce, %struct.Memory** %MEMORY
  %loadMem1_48d0d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11842 = getelementptr inbounds %struct.GPR, %struct.GPR* %11841, i32 0, i32 33
  %11843 = getelementptr inbounds %struct.Reg, %struct.Reg* %11842, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %11843 to i64*
  %11844 = load i64, i64* %PC.i240
  %11845 = add i64 %11844, 128556
  %11846 = load i64, i64* %PC.i240
  %11847 = add i64 %11846, 5
  %11848 = load i64, i64* %PC.i240
  %11849 = add i64 %11848, 5
  store i64 %11849, i64* %PC.i240
  %11850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11851 = load i64, i64* %11850, align 8
  %11852 = add i64 %11851, -8
  %11853 = inttoptr i64 %11852 to i64*
  store i64 %11847, i64* %11853
  store i64 %11852, i64* %11850, align 8
  %11854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11845, i64* %11854, align 8
  store %struct.Memory* %loadMem1_48d0d4, %struct.Memory** %MEMORY
  %loadMem2_48d0d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48d0d4 = load i64, i64* %3
  %call2_48d0d4 = call %struct.Memory* @sub_4ac700.ue_linfo(%struct.State* %0, i64 %loadPC_48d0d4, %struct.Memory* %loadMem2_48d0d4)
  store %struct.Memory* %call2_48d0d4, %struct.Memory** %MEMORY
  %loadMem_48d0d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11856 = getelementptr inbounds %struct.GPR, %struct.GPR* %11855, i32 0, i32 33
  %11857 = getelementptr inbounds %struct.Reg, %struct.Reg* %11856, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %11857 to i64*
  %11858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11859 = getelementptr inbounds %struct.GPR, %struct.GPR* %11858, i32 0, i32 7
  %11860 = getelementptr inbounds %struct.Reg, %struct.Reg* %11859, i32 0, i32 0
  %RDX.i238 = bitcast %union.anon* %11860 to i64*
  %11861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11862 = getelementptr inbounds %struct.GPR, %struct.GPR* %11861, i32 0, i32 15
  %11863 = getelementptr inbounds %struct.Reg, %struct.Reg* %11862, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %11863 to i64*
  %11864 = load i64, i64* %RBP.i239
  %11865 = sub i64 %11864, 104
  %11866 = load i64, i64* %PC.i237
  %11867 = add i64 %11866, 4
  store i64 %11867, i64* %PC.i237
  store i64 %11865, i64* %RDX.i238, align 8
  store %struct.Memory* %loadMem_48d0d9, %struct.Memory** %MEMORY
  %loadMem_48d0dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11869 = getelementptr inbounds %struct.GPR, %struct.GPR* %11868, i32 0, i32 33
  %11870 = getelementptr inbounds %struct.Reg, %struct.Reg* %11869, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %11870 to i64*
  %11871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11872 = getelementptr inbounds %struct.GPR, %struct.GPR* %11871, i32 0, i32 5
  %11873 = getelementptr inbounds %struct.Reg, %struct.Reg* %11872, i32 0, i32 0
  %RCX.i235 = bitcast %union.anon* %11873 to i64*
  %11874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11875 = getelementptr inbounds %struct.GPR, %struct.GPR* %11874, i32 0, i32 15
  %11876 = getelementptr inbounds %struct.Reg, %struct.Reg* %11875, i32 0, i32 0
  %RBP.i236 = bitcast %union.anon* %11876 to i64*
  %11877 = load i64, i64* %RBP.i236
  %11878 = sub i64 %11877, 108
  %11879 = load i64, i64* %PC.i234
  %11880 = add i64 %11879, 4
  store i64 %11880, i64* %PC.i234
  store i64 %11878, i64* %RCX.i235, align 8
  store %struct.Memory* %loadMem_48d0dd, %struct.Memory** %MEMORY
  %loadMem_48d0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11882 = getelementptr inbounds %struct.GPR, %struct.GPR* %11881, i32 0, i32 33
  %11883 = getelementptr inbounds %struct.Reg, %struct.Reg* %11882, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %11883 to i64*
  %11884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11885 = getelementptr inbounds %struct.GPR, %struct.GPR* %11884, i32 0, i32 1
  %11886 = getelementptr inbounds %struct.Reg, %struct.Reg* %11885, i32 0, i32 0
  %RAX.i233 = bitcast %union.anon* %11886 to i64*
  %11887 = load i64, i64* %PC.i232
  %11888 = add i64 %11887, 8
  store i64 %11888, i64* %PC.i232
  %11889 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11889, i64* %RAX.i233, align 8
  store %struct.Memory* %loadMem_48d0e1, %struct.Memory** %MEMORY
  %loadMem_48d0e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11891 = getelementptr inbounds %struct.GPR, %struct.GPR* %11890, i32 0, i32 33
  %11892 = getelementptr inbounds %struct.Reg, %struct.Reg* %11891, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %11892 to i64*
  %11893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11894 = getelementptr inbounds %struct.GPR, %struct.GPR* %11893, i32 0, i32 1
  %11895 = getelementptr inbounds %struct.Reg, %struct.Reg* %11894, i32 0, i32 0
  %RAX.i230 = bitcast %union.anon* %11895 to i64*
  %11896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11897 = getelementptr inbounds %struct.GPR, %struct.GPR* %11896, i32 0, i32 11
  %11898 = getelementptr inbounds %struct.Reg, %struct.Reg* %11897, i32 0, i32 0
  %RDI.i231 = bitcast %union.anon* %11898 to i64*
  %11899 = load i64, i64* %RAX.i230
  %11900 = add i64 %11899, 120
  %11901 = load i64, i64* %PC.i229
  %11902 = add i64 %11901, 3
  store i64 %11902, i64* %PC.i229
  %11903 = inttoptr i64 %11900 to i32*
  %11904 = load i32, i32* %11903
  %11905 = zext i32 %11904 to i64
  store i64 %11905, i64* %RDI.i231, align 8
  store %struct.Memory* %loadMem_48d0e9, %struct.Memory** %MEMORY
  %loadMem_48d0ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %11906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11907 = getelementptr inbounds %struct.GPR, %struct.GPR* %11906, i32 0, i32 33
  %11908 = getelementptr inbounds %struct.Reg, %struct.Reg* %11907, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %11908 to i64*
  %11909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11910 = getelementptr inbounds %struct.GPR, %struct.GPR* %11909, i32 0, i32 9
  %11911 = getelementptr inbounds %struct.Reg, %struct.Reg* %11910, i32 0, i32 0
  %RSI.i227 = bitcast %union.anon* %11911 to i64*
  %11912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11913 = getelementptr inbounds %struct.GPR, %struct.GPR* %11912, i32 0, i32 15
  %11914 = getelementptr inbounds %struct.Reg, %struct.Reg* %11913, i32 0, i32 0
  %RBP.i228 = bitcast %union.anon* %11914 to i64*
  %11915 = load i64, i64* %RBP.i228
  %11916 = sub i64 %11915, 108
  %11917 = load i64, i64* %PC.i226
  %11918 = add i64 %11917, 3
  store i64 %11918, i64* %PC.i226
  %11919 = inttoptr i64 %11916 to i32*
  %11920 = load i32, i32* %11919
  %11921 = zext i32 %11920 to i64
  store i64 %11921, i64* %RSI.i227, align 8
  store %struct.Memory* %loadMem_48d0ec, %struct.Memory** %MEMORY
  %loadMem1_48d0ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %11922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11923 = getelementptr inbounds %struct.GPR, %struct.GPR* %11922, i32 0, i32 33
  %11924 = getelementptr inbounds %struct.Reg, %struct.Reg* %11923, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %11924 to i64*
  %11925 = load i64, i64* %PC.i225
  %11926 = add i64 %11925, 128529
  %11927 = load i64, i64* %PC.i225
  %11928 = add i64 %11927, 5
  %11929 = load i64, i64* %PC.i225
  %11930 = add i64 %11929, 5
  store i64 %11930, i64* %PC.i225
  %11931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11932 = load i64, i64* %11931, align 8
  %11933 = add i64 %11932, -8
  %11934 = inttoptr i64 %11933 to i64*
  store i64 %11928, i64* %11934
  store i64 %11933, i64* %11931, align 8
  %11935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11926, i64* %11935, align 8
  store %struct.Memory* %loadMem1_48d0ef, %struct.Memory** %MEMORY
  %loadMem2_48d0ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48d0ef = load i64, i64* %3
  %call2_48d0ef = call %struct.Memory* @sub_4ac700.ue_linfo(%struct.State* %0, i64 %loadPC_48d0ef, %struct.Memory* %loadMem2_48d0ef)
  store %struct.Memory* %call2_48d0ef, %struct.Memory** %MEMORY
  %loadMem_48d0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11937 = getelementptr inbounds %struct.GPR, %struct.GPR* %11936, i32 0, i32 33
  %11938 = getelementptr inbounds %struct.Reg, %struct.Reg* %11937, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %11938 to i64*
  %11939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11940 = getelementptr inbounds %struct.GPR, %struct.GPR* %11939, i32 0, i32 9
  %11941 = getelementptr inbounds %struct.Reg, %struct.Reg* %11940, i32 0, i32 0
  %RSI.i223 = bitcast %union.anon* %11941 to i64*
  %11942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11943 = getelementptr inbounds %struct.GPR, %struct.GPR* %11942, i32 0, i32 15
  %11944 = getelementptr inbounds %struct.Reg, %struct.Reg* %11943, i32 0, i32 0
  %RBP.i224 = bitcast %union.anon* %11944 to i64*
  %11945 = load i64, i64* %RBP.i224
  %11946 = sub i64 %11945, 104
  %11947 = load i64, i64* %PC.i222
  %11948 = add i64 %11947, 3
  store i64 %11948, i64* %PC.i222
  %11949 = inttoptr i64 %11946 to i32*
  %11950 = load i32, i32* %11949
  %11951 = zext i32 %11950 to i64
  store i64 %11951, i64* %RSI.i223, align 8
  store %struct.Memory* %loadMem_48d0f4, %struct.Memory** %MEMORY
  %loadMem_48d0f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11953 = getelementptr inbounds %struct.GPR, %struct.GPR* %11952, i32 0, i32 33
  %11954 = getelementptr inbounds %struct.Reg, %struct.Reg* %11953, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %11954 to i64*
  %11955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11956 = getelementptr inbounds %struct.GPR, %struct.GPR* %11955, i32 0, i32 11
  %11957 = getelementptr inbounds %struct.Reg, %struct.Reg* %11956, i32 0, i32 0
  %RDI.i220 = bitcast %union.anon* %11957 to i64*
  %11958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11959 = getelementptr inbounds %struct.GPR, %struct.GPR* %11958, i32 0, i32 15
  %11960 = getelementptr inbounds %struct.Reg, %struct.Reg* %11959, i32 0, i32 0
  %RBP.i221 = bitcast %union.anon* %11960 to i64*
  %11961 = load i64, i64* %RBP.i221
  %11962 = sub i64 %11961, 52
  %11963 = load i64, i64* %PC.i219
  %11964 = add i64 %11963, 3
  store i64 %11964, i64* %PC.i219
  %11965 = inttoptr i64 %11962 to i32*
  %11966 = load i32, i32* %11965
  %11967 = zext i32 %11966 to i64
  store i64 %11967, i64* %RDI.i220, align 8
  store %struct.Memory* %loadMem_48d0f7, %struct.Memory** %MEMORY
  %loadMem_48d0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11969 = getelementptr inbounds %struct.GPR, %struct.GPR* %11968, i32 0, i32 33
  %11970 = getelementptr inbounds %struct.Reg, %struct.Reg* %11969, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %11970 to i64*
  %11971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11972 = getelementptr inbounds %struct.GPR, %struct.GPR* %11971, i32 0, i32 9
  %11973 = getelementptr inbounds %struct.Reg, %struct.Reg* %11972, i32 0, i32 0
  %ESI.i217 = bitcast %union.anon* %11973 to i32*
  %11974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11975 = getelementptr inbounds %struct.GPR, %struct.GPR* %11974, i32 0, i32 11
  %11976 = getelementptr inbounds %struct.Reg, %struct.Reg* %11975, i32 0, i32 0
  %RDI.i218 = bitcast %union.anon* %11976 to i64*
  %11977 = load i64, i64* %RDI.i218
  %11978 = load i32, i32* %ESI.i217
  %11979 = zext i32 %11978 to i64
  %11980 = load i64, i64* %PC.i216
  %11981 = add i64 %11980, 2
  store i64 %11981, i64* %PC.i216
  %11982 = trunc i64 %11977 to i32
  %11983 = sub i32 %11982, %11978
  %11984 = zext i32 %11983 to i64
  store i64 %11984, i64* %RDI.i218, align 8
  %11985 = icmp ult i32 %11982, %11978
  %11986 = zext i1 %11985 to i8
  %11987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11986, i8* %11987, align 1
  %11988 = and i32 %11983, 255
  %11989 = call i32 @llvm.ctpop.i32(i32 %11988)
  %11990 = trunc i32 %11989 to i8
  %11991 = and i8 %11990, 1
  %11992 = xor i8 %11991, 1
  %11993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11992, i8* %11993, align 1
  %11994 = xor i64 %11979, %11977
  %11995 = trunc i64 %11994 to i32
  %11996 = xor i32 %11995, %11983
  %11997 = lshr i32 %11996, 4
  %11998 = trunc i32 %11997 to i8
  %11999 = and i8 %11998, 1
  %12000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11999, i8* %12000, align 1
  %12001 = icmp eq i32 %11983, 0
  %12002 = zext i1 %12001 to i8
  %12003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12002, i8* %12003, align 1
  %12004 = lshr i32 %11983, 31
  %12005 = trunc i32 %12004 to i8
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12005, i8* %12006, align 1
  %12007 = lshr i32 %11982, 31
  %12008 = lshr i32 %11978, 31
  %12009 = xor i32 %12008, %12007
  %12010 = xor i32 %12004, %12007
  %12011 = add i32 %12010, %12009
  %12012 = icmp eq i32 %12011, 2
  %12013 = zext i1 %12012 to i8
  %12014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12013, i8* %12014, align 1
  store %struct.Memory* %loadMem_48d0fa, %struct.Memory** %MEMORY
  %loadMem_48d0fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12016 = getelementptr inbounds %struct.GPR, %struct.GPR* %12015, i32 0, i32 33
  %12017 = getelementptr inbounds %struct.Reg, %struct.Reg* %12016, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %12017 to i64*
  %12018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12019 = getelementptr inbounds %struct.GPR, %struct.GPR* %12018, i32 0, i32 11
  %12020 = getelementptr inbounds %struct.Reg, %struct.Reg* %12019, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %12020 to i32*
  %12021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12022 = getelementptr inbounds %struct.GPR, %struct.GPR* %12021, i32 0, i32 15
  %12023 = getelementptr inbounds %struct.Reg, %struct.Reg* %12022, i32 0, i32 0
  %RBP.i215 = bitcast %union.anon* %12023 to i64*
  %12024 = load i64, i64* %RBP.i215
  %12025 = sub i64 %12024, 52
  %12026 = load i32, i32* %EDI.i
  %12027 = zext i32 %12026 to i64
  %12028 = load i64, i64* %PC.i214
  %12029 = add i64 %12028, 3
  store i64 %12029, i64* %PC.i214
  %12030 = inttoptr i64 %12025 to i32*
  store i32 %12026, i32* %12030
  store %struct.Memory* %loadMem_48d0fc, %struct.Memory** %MEMORY
  br label %block_.L_48d0ff

block_.L_48d0ff:                                  ; preds = %block_.L_48d0ad, %block_.L_48d061
  %loadMem_48d0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %12031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12032 = getelementptr inbounds %struct.GPR, %struct.GPR* %12031, i32 0, i32 33
  %12033 = getelementptr inbounds %struct.Reg, %struct.Reg* %12032, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %12033 to i64*
  %12034 = load i64, i64* %PC.i213
  %12035 = add i64 %12034, 18
  %12036 = load i64, i64* %PC.i213
  %12037 = add i64 %12036, 5
  store i64 %12037, i64* %PC.i213
  %12038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12035, i64* %12038, align 8
  store %struct.Memory* %loadMem_48d0ff, %struct.Memory** %MEMORY
  br label %block_.L_48d111

block_.L_48d104:                                  ; preds = %block_.L_48d021
  %loadMem_48d104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12040 = getelementptr inbounds %struct.GPR, %struct.GPR* %12039, i32 0, i32 33
  %12041 = getelementptr inbounds %struct.Reg, %struct.Reg* %12040, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %12041 to i64*
  %12042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12043 = getelementptr inbounds %struct.GPR, %struct.GPR* %12042, i32 0, i32 11
  %12044 = getelementptr inbounds %struct.Reg, %struct.Reg* %12043, i32 0, i32 0
  %RDI.i212 = bitcast %union.anon* %12044 to i64*
  %12045 = load i64, i64* %PC.i211
  %12046 = add i64 %12045, 5
  store i64 %12046, i64* %PC.i211
  store i64 1, i64* %RDI.i212, align 8
  store %struct.Memory* %loadMem_48d104, %struct.Memory** %MEMORY
  %loadMem1_48d109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12048 = getelementptr inbounds %struct.GPR, %struct.GPR* %12047, i32 0, i32 33
  %12049 = getelementptr inbounds %struct.Reg, %struct.Reg* %12048, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %12049 to i64*
  %12050 = load i64, i64* %PC.i210
  %12051 = add i64 %12050, -299433
  %12052 = load i64, i64* %PC.i210
  %12053 = add i64 %12052, 5
  %12054 = load i64, i64* %PC.i210
  %12055 = add i64 %12054, 5
  store i64 %12055, i64* %PC.i210
  %12056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12057 = load i64, i64* %12056, align 8
  %12058 = add i64 %12057, -8
  %12059 = inttoptr i64 %12058 to i64*
  store i64 %12053, i64* %12059
  store i64 %12058, i64* %12056, align 8
  %12060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12051, i64* %12060, align 8
  store %struct.Memory* %loadMem1_48d109, %struct.Memory** %MEMORY
  %loadMem2_48d109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48d109 = load i64, i64* %3
  %call2_48d109 = call %struct.Memory* @sub_443f60.writeMBLayer(%struct.State* %0, i64 %loadPC_48d109, %struct.Memory* %loadMem2_48d109)
  store %struct.Memory* %call2_48d109, %struct.Memory** %MEMORY
  %loadMem_48d10e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12062 = getelementptr inbounds %struct.GPR, %struct.GPR* %12061, i32 0, i32 33
  %12063 = getelementptr inbounds %struct.Reg, %struct.Reg* %12062, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %12063 to i64*
  %12064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12065 = getelementptr inbounds %struct.GPR, %struct.GPR* %12064, i32 0, i32 1
  %12066 = getelementptr inbounds %struct.Reg, %struct.Reg* %12065, i32 0, i32 0
  %EAX.i208 = bitcast %union.anon* %12066 to i32*
  %12067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12068 = getelementptr inbounds %struct.GPR, %struct.GPR* %12067, i32 0, i32 15
  %12069 = getelementptr inbounds %struct.Reg, %struct.Reg* %12068, i32 0, i32 0
  %RBP.i209 = bitcast %union.anon* %12069 to i64*
  %12070 = load i64, i64* %RBP.i209
  %12071 = sub i64 %12070, 52
  %12072 = load i32, i32* %EAX.i208
  %12073 = zext i32 %12072 to i64
  %12074 = load i64, i64* %PC.i207
  %12075 = add i64 %12074, 3
  store i64 %12075, i64* %PC.i207
  %12076 = inttoptr i64 %12071 to i32*
  store i32 %12072, i32* %12076
  store %struct.Memory* %loadMem_48d10e, %struct.Memory** %MEMORY
  br label %block_.L_48d111

block_.L_48d111:                                  ; preds = %block_.L_48d104, %block_.L_48d0ff
  %loadMem_48d111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12078 = getelementptr inbounds %struct.GPR, %struct.GPR* %12077, i32 0, i32 33
  %12079 = getelementptr inbounds %struct.Reg, %struct.Reg* %12078, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %12079 to i64*
  %12080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12081 = getelementptr inbounds %struct.GPR, %struct.GPR* %12080, i32 0, i32 11
  %12082 = getelementptr inbounds %struct.Reg, %struct.Reg* %12081, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %12082 to i64*
  %12083 = load i64, i64* %PC.i206
  %12084 = add i64 %12083, 8
  store i64 %12084, i64* %PC.i206
  %12085 = load i64, i64* bitcast (%G_0x6cc628_type* @G_0x6cc628 to i64*)
  store i64 %12085, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_48d111, %struct.Memory** %MEMORY
  %loadMem1_48d119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12087 = getelementptr inbounds %struct.GPR, %struct.GPR* %12086, i32 0, i32 33
  %12088 = getelementptr inbounds %struct.Reg, %struct.Reg* %12087, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %12088 to i64*
  %12089 = load i64, i64* %PC.i205
  %12090 = add i64 %12089, 68327
  %12091 = load i64, i64* %PC.i205
  %12092 = add i64 %12091, 5
  %12093 = load i64, i64* %PC.i205
  %12094 = add i64 %12093, 5
  store i64 %12094, i64* %PC.i205
  %12095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12096 = load i64, i64* %12095, align 8
  %12097 = add i64 %12096, -8
  %12098 = inttoptr i64 %12097 to i64*
  store i64 %12092, i64* %12098
  store i64 %12097, i64* %12095, align 8
  %12099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12090, i64* %12099, align 8
  store %struct.Memory* %loadMem1_48d119, %struct.Memory** %MEMORY
  %loadMem2_48d119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48d119 = load i64, i64* %3
  %call2_48d119 = call %struct.Memory* @sub_49dc00.reset_coding_state(%struct.State* %0, i64 %loadPC_48d119, %struct.Memory* %loadMem2_48d119)
  store %struct.Memory* %call2_48d119, %struct.Memory** %MEMORY
  %loadMem_48d11e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12101 = getelementptr inbounds %struct.GPR, %struct.GPR* %12100, i32 0, i32 33
  %12102 = getelementptr inbounds %struct.Reg, %struct.Reg* %12101, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %12102 to i64*
  %12103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12104 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12103, i64 0, i64 0
  %YMM0.i204 = bitcast %union.VectorReg* %12104 to %"class.std::bitset"*
  %12105 = bitcast %"class.std::bitset"* %YMM0.i204 to i8*
  %12106 = load i64, i64* %PC.i203
  %12107 = add i64 %12106, ptrtoint (%G_0x24762__rip__type* @G_0x24762__rip_ to i64)
  %12108 = load i64, i64* %PC.i203
  %12109 = add i64 %12108, 8
  store i64 %12109, i64* %PC.i203
  %12110 = inttoptr i64 %12107 to double*
  %12111 = load double, double* %12110
  %12112 = bitcast i8* %12105 to double*
  store double %12111, double* %12112, align 1
  %12113 = getelementptr inbounds i8, i8* %12105, i64 8
  %12114 = bitcast i8* %12113 to double*
  store double 0.000000e+00, double* %12114, align 1
  store %struct.Memory* %loadMem_48d11e, %struct.Memory** %MEMORY
  %loadMem_48d126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12116 = getelementptr inbounds %struct.GPR, %struct.GPR* %12115, i32 0, i32 33
  %12117 = getelementptr inbounds %struct.Reg, %struct.Reg* %12116, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %12117 to i64*
  %12118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12119 = getelementptr inbounds %struct.GPR, %struct.GPR* %12118, i32 0, i32 15
  %12120 = getelementptr inbounds %struct.Reg, %struct.Reg* %12119, i32 0, i32 0
  %RBP.i201 = bitcast %union.anon* %12120 to i64*
  %12121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12122 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12121, i64 0, i64 1
  %YMM1.i202 = bitcast %union.VectorReg* %12122 to %"class.std::bitset"*
  %12123 = bitcast %"class.std::bitset"* %YMM1.i202 to i8*
  %12124 = load i64, i64* %RBP.i201
  %12125 = sub i64 %12124, 64
  %12126 = load i64, i64* %PC.i200
  %12127 = add i64 %12126, 6
  store i64 %12127, i64* %PC.i200
  %12128 = inttoptr i64 %12125 to i64*
  %12129 = load i64, i64* %12128
  %12130 = sitofp i64 %12129 to double
  %12131 = bitcast i8* %12123 to double*
  store double %12130, double* %12131, align 1
  store %struct.Memory* %loadMem_48d126, %struct.Memory** %MEMORY
  %loadMem_48d12c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12133 = getelementptr inbounds %struct.GPR, %struct.GPR* %12132, i32 0, i32 33
  %12134 = getelementptr inbounds %struct.Reg, %struct.Reg* %12133, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %12134 to i64*
  %12135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12136 = getelementptr inbounds %struct.GPR, %struct.GPR* %12135, i32 0, i32 15
  %12137 = getelementptr inbounds %struct.Reg, %struct.Reg* %12136, i32 0, i32 0
  %RBP.i198 = bitcast %union.anon* %12137 to i64*
  %12138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12139 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12138, i64 0, i64 2
  %YMM2.i199 = bitcast %union.VectorReg* %12139 to %"class.std::bitset"*
  %12140 = bitcast %"class.std::bitset"* %YMM2.i199 to i8*
  %12141 = load i64, i64* %RBP.i198
  %12142 = sub i64 %12141, 16
  %12143 = load i64, i64* %PC.i197
  %12144 = add i64 %12143, 5
  store i64 %12144, i64* %PC.i197
  %12145 = inttoptr i64 %12142 to double*
  %12146 = load double, double* %12145
  %12147 = bitcast i8* %12140 to double*
  store double %12146, double* %12147, align 1
  %12148 = getelementptr inbounds i8, i8* %12140, i64 8
  %12149 = bitcast i8* %12148 to double*
  store double 0.000000e+00, double* %12149, align 1
  store %struct.Memory* %loadMem_48d12c, %struct.Memory** %MEMORY
  %loadMem_48d131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12151 = getelementptr inbounds %struct.GPR, %struct.GPR* %12150, i32 0, i32 33
  %12152 = getelementptr inbounds %struct.Reg, %struct.Reg* %12151, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %12152 to i64*
  %12153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12154 = getelementptr inbounds %struct.GPR, %struct.GPR* %12153, i32 0, i32 15
  %12155 = getelementptr inbounds %struct.Reg, %struct.Reg* %12154, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %12155 to i64*
  %12156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12157 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12156, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %12157 to %"class.std::bitset"*
  %12158 = bitcast %"class.std::bitset"* %YMM3.i to i8*
  %12159 = load i64, i64* %RBP.i196
  %12160 = sub i64 %12159, 52
  %12161 = load i64, i64* %PC.i195
  %12162 = add i64 %12161, 5
  store i64 %12162, i64* %PC.i195
  %12163 = inttoptr i64 %12160 to i32*
  %12164 = load i32, i32* %12163
  %12165 = sitofp i32 %12164 to double
  %12166 = bitcast i8* %12158 to double*
  store double %12165, double* %12166, align 1
  store %struct.Memory* %loadMem_48d131, %struct.Memory** %MEMORY
  %loadMem_48d136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12168 = getelementptr inbounds %struct.GPR, %struct.GPR* %12167, i32 0, i32 33
  %12169 = getelementptr inbounds %struct.Reg, %struct.Reg* %12168, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %12169 to i64*
  %12170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12171 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12170, i64 0, i64 0
  %XMM0.i191 = bitcast %union.VectorReg* %12171 to %union.vec128_t*
  %12172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12173 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12172, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %12173 to %union.vec128_t*
  %12174 = bitcast %union.vec128_t* %XMM0.i191 to i8*
  %12175 = bitcast %union.vec128_t* %XMM3.i to i8*
  %12176 = load i64, i64* %PC.i190
  %12177 = add i64 %12176, 4
  store i64 %12177, i64* %PC.i190
  %12178 = bitcast i8* %12174 to double*
  %12179 = load double, double* %12178, align 1
  %12180 = bitcast i8* %12175 to double*
  %12181 = load double, double* %12180, align 1
  %12182 = fcmp uno double %12179, %12181
  br i1 %12182, label %12183, label %12195

; <label>:12183:                                  ; preds = %block_.L_48d111
  %12184 = fadd double %12179, %12181
  %12185 = bitcast double %12184 to i64
  %12186 = and i64 %12185, 9221120237041090560
  %12187 = icmp eq i64 %12186, 9218868437227405312
  %12188 = and i64 %12185, 2251799813685247
  %12189 = icmp ne i64 %12188, 0
  %12190 = and i1 %12187, %12189
  br i1 %12190, label %12191, label %12201

; <label>:12191:                                  ; preds = %12183
  %12192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12193 = load i64, i64* %12192, align 8
  %12194 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12193, %struct.Memory* %loadMem_48d136)
  br label %routine_ucomisd__xmm3___xmm0.exit

; <label>:12195:                                  ; preds = %block_.L_48d111
  %12196 = fcmp ogt double %12179, %12181
  br i1 %12196, label %12201, label %12197

; <label>:12197:                                  ; preds = %12195
  %12198 = fcmp olt double %12179, %12181
  br i1 %12198, label %12201, label %12199

; <label>:12199:                                  ; preds = %12197
  %12200 = fcmp oeq double %12179, %12181
  br i1 %12200, label %12201, label %12208

; <label>:12201:                                  ; preds = %12199, %12197, %12195, %12183
  %12202 = phi i8 [ 0, %12195 ], [ 0, %12197 ], [ 1, %12199 ], [ 1, %12183 ]
  %12203 = phi i8 [ 0, %12195 ], [ 0, %12197 ], [ 0, %12199 ], [ 1, %12183 ]
  %12204 = phi i8 [ 0, %12195 ], [ 1, %12197 ], [ 0, %12199 ], [ 1, %12183 ]
  %12205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12202, i8* %12205, align 1
  %12206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12203, i8* %12206, align 1
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12204, i8* %12207, align 1
  br label %12208

; <label>:12208:                                  ; preds = %12201, %12199
  %12209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12209, align 1
  %12210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12210, align 1
  %12211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12211, align 1
  br label %routine_ucomisd__xmm3___xmm0.exit

routine_ucomisd__xmm3___xmm0.exit:                ; preds = %12191, %12208
  %12212 = phi %struct.Memory* [ %12194, %12191 ], [ %loadMem_48d136, %12208 ]
  store %struct.Memory* %12212, %struct.Memory** %MEMORY
  %loadMem_48d13a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12214 = getelementptr inbounds %struct.GPR, %struct.GPR* %12213, i32 0, i32 33
  %12215 = getelementptr inbounds %struct.Reg, %struct.Reg* %12214, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %12215 to i64*
  %12216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12217 = getelementptr inbounds %struct.GPR, %struct.GPR* %12216, i32 0, i32 15
  %12218 = getelementptr inbounds %struct.Reg, %struct.Reg* %12217, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %12218 to i64*
  %12219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12220 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12219, i64 0, i64 2
  %XMM2.i189 = bitcast %union.VectorReg* %12220 to %union.vec128_t*
  %12221 = load i64, i64* %RBP.i188
  %12222 = sub i64 %12221, 168
  %12223 = bitcast %union.vec128_t* %XMM2.i189 to i8*
  %12224 = load i64, i64* %PC.i187
  %12225 = add i64 %12224, 8
  store i64 %12225, i64* %PC.i187
  %12226 = bitcast i8* %12223 to double*
  %12227 = load double, double* %12226, align 1
  %12228 = inttoptr i64 %12222 to double*
  store double %12227, double* %12228
  store %struct.Memory* %loadMem_48d13a, %struct.Memory** %MEMORY
  %loadMem_48d142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12230 = getelementptr inbounds %struct.GPR, %struct.GPR* %12229, i32 0, i32 33
  %12231 = getelementptr inbounds %struct.Reg, %struct.Reg* %12230, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %12231 to i64*
  %12232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12233 = getelementptr inbounds %struct.GPR, %struct.GPR* %12232, i32 0, i32 15
  %12234 = getelementptr inbounds %struct.Reg, %struct.Reg* %12233, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %12234 to i64*
  %12235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12236 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12235, i64 0, i64 1
  %XMM1.i186 = bitcast %union.VectorReg* %12236 to %union.vec128_t*
  %12237 = load i64, i64* %RBP.i185
  %12238 = sub i64 %12237, 176
  %12239 = bitcast %union.vec128_t* %XMM1.i186 to i8*
  %12240 = load i64, i64* %PC.i184
  %12241 = add i64 %12240, 8
  store i64 %12241, i64* %PC.i184
  %12242 = bitcast i8* %12239 to double*
  %12243 = load double, double* %12242, align 1
  %12244 = inttoptr i64 %12238 to double*
  store double %12243, double* %12244
  store %struct.Memory* %loadMem_48d142, %struct.Memory** %MEMORY
  %loadMem_48d14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12246 = getelementptr inbounds %struct.GPR, %struct.GPR* %12245, i32 0, i32 33
  %12247 = getelementptr inbounds %struct.Reg, %struct.Reg* %12246, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %12247 to i64*
  %12248 = load i64, i64* %PC.i183
  %12249 = add i64 %12248, 27
  %12250 = load i64, i64* %PC.i183
  %12251 = add i64 %12250, 6
  %12252 = load i64, i64* %PC.i183
  %12253 = add i64 %12252, 6
  store i64 %12253, i64* %PC.i183
  %12254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12255 = load i8, i8* %12254, align 1
  %12256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12257 = load i8, i8* %12256, align 1
  %12258 = or i8 %12257, %12255
  %12259 = icmp ne i8 %12258, 0
  %12260 = zext i1 %12259 to i8
  store i8 %12260, i8* %BRANCH_TAKEN, align 1
  %12261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12262 = select i1 %12259, i64 %12249, i64 %12251
  store i64 %12262, i64* %12261, align 8
  store %struct.Memory* %loadMem_48d14a, %struct.Memory** %MEMORY
  %loadBr_48d14a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d14a = icmp eq i8 %loadBr_48d14a, 1
  br i1 %cmpBr_48d14a, label %block_.L_48d165, label %block_48d150

block_48d150:                                     ; preds = %routine_ucomisd__xmm3___xmm0.exit
  %loadMem_48d150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12264 = getelementptr inbounds %struct.GPR, %struct.GPR* %12263, i32 0, i32 33
  %12265 = getelementptr inbounds %struct.Reg, %struct.Reg* %12264, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %12265 to i64*
  %12266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12266, i64 0, i64 0
  %YMM0.i182 = bitcast %union.VectorReg* %12267 to %"class.std::bitset"*
  %12268 = bitcast %"class.std::bitset"* %YMM0.i182 to i8*
  %12269 = load i64, i64* %PC.i181
  %12270 = add i64 %12269, ptrtoint (%G_0x24730__rip__type* @G_0x24730__rip_ to i64)
  %12271 = load i64, i64* %PC.i181
  %12272 = add i64 %12271, 8
  store i64 %12272, i64* %PC.i181
  %12273 = inttoptr i64 %12270 to double*
  %12274 = load double, double* %12273
  %12275 = bitcast i8* %12268 to double*
  store double %12274, double* %12275, align 1
  %12276 = getelementptr inbounds i8, i8* %12268, i64 8
  %12277 = bitcast i8* %12276 to double*
  store double 0.000000e+00, double* %12277, align 1
  store %struct.Memory* %loadMem_48d150, %struct.Memory** %MEMORY
  %loadMem_48d158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12279 = getelementptr inbounds %struct.GPR, %struct.GPR* %12278, i32 0, i32 33
  %12280 = getelementptr inbounds %struct.Reg, %struct.Reg* %12279, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %12280 to i64*
  %12281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12282 = getelementptr inbounds %struct.GPR, %struct.GPR* %12281, i32 0, i32 15
  %12283 = getelementptr inbounds %struct.Reg, %struct.Reg* %12282, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %12283 to i64*
  %12284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12284, i64 0, i64 0
  %XMM0.i180 = bitcast %union.VectorReg* %12285 to %union.vec128_t*
  %12286 = load i64, i64* %RBP.i179
  %12287 = sub i64 %12286, 184
  %12288 = bitcast %union.vec128_t* %XMM0.i180 to i8*
  %12289 = load i64, i64* %PC.i178
  %12290 = add i64 %12289, 8
  store i64 %12290, i64* %PC.i178
  %12291 = bitcast i8* %12288 to double*
  %12292 = load double, double* %12291, align 1
  %12293 = inttoptr i64 %12287 to double*
  store double %12292, double* %12293
  store %struct.Memory* %loadMem_48d158, %struct.Memory** %MEMORY
  %loadMem_48d160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12295 = getelementptr inbounds %struct.GPR, %struct.GPR* %12294, i32 0, i32 33
  %12296 = getelementptr inbounds %struct.Reg, %struct.Reg* %12295, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %12296 to i64*
  %12297 = load i64, i64* %PC.i177
  %12298 = add i64 %12297, 18
  %12299 = load i64, i64* %PC.i177
  %12300 = add i64 %12299, 5
  store i64 %12300, i64* %PC.i177
  %12301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12298, i64* %12301, align 8
  store %struct.Memory* %loadMem_48d160, %struct.Memory** %MEMORY
  br label %block_.L_48d172

block_.L_48d165:                                  ; preds = %routine_ucomisd__xmm3___xmm0.exit
  %loadMem_48d165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12303 = getelementptr inbounds %struct.GPR, %struct.GPR* %12302, i32 0, i32 33
  %12304 = getelementptr inbounds %struct.Reg, %struct.Reg* %12303, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %12304 to i64*
  %12305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12306 = getelementptr inbounds %struct.GPR, %struct.GPR* %12305, i32 0, i32 15
  %12307 = getelementptr inbounds %struct.Reg, %struct.Reg* %12306, i32 0, i32 0
  %RBP.i175 = bitcast %union.anon* %12307 to i64*
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12308, i64 0, i64 0
  %YMM0.i176 = bitcast %union.VectorReg* %12309 to %"class.std::bitset"*
  %12310 = bitcast %"class.std::bitset"* %YMM0.i176 to i8*
  %12311 = load i64, i64* %RBP.i175
  %12312 = sub i64 %12311, 52
  %12313 = load i64, i64* %PC.i174
  %12314 = add i64 %12313, 5
  store i64 %12314, i64* %PC.i174
  %12315 = inttoptr i64 %12312 to i32*
  %12316 = load i32, i32* %12315
  %12317 = sitofp i32 %12316 to double
  %12318 = bitcast i8* %12310 to double*
  store double %12317, double* %12318, align 1
  store %struct.Memory* %loadMem_48d165, %struct.Memory** %MEMORY
  %loadMem_48d16a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12320 = getelementptr inbounds %struct.GPR, %struct.GPR* %12319, i32 0, i32 33
  %12321 = getelementptr inbounds %struct.Reg, %struct.Reg* %12320, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %12321 to i64*
  %12322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12323 = getelementptr inbounds %struct.GPR, %struct.GPR* %12322, i32 0, i32 15
  %12324 = getelementptr inbounds %struct.Reg, %struct.Reg* %12323, i32 0, i32 0
  %RBP.i172 = bitcast %union.anon* %12324 to i64*
  %12325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12326 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12325, i64 0, i64 0
  %XMM0.i173 = bitcast %union.VectorReg* %12326 to %union.vec128_t*
  %12327 = load i64, i64* %RBP.i172
  %12328 = sub i64 %12327, 184
  %12329 = bitcast %union.vec128_t* %XMM0.i173 to i8*
  %12330 = load i64, i64* %PC.i171
  %12331 = add i64 %12330, 8
  store i64 %12331, i64* %PC.i171
  %12332 = bitcast i8* %12329 to double*
  %12333 = load double, double* %12332, align 1
  %12334 = inttoptr i64 %12328 to double*
  store double %12333, double* %12334
  store %struct.Memory* %loadMem_48d16a, %struct.Memory** %MEMORY
  br label %block_.L_48d172

block_.L_48d172:                                  ; preds = %block_.L_48d165, %block_48d150
  %loadMem_48d172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12336 = getelementptr inbounds %struct.GPR, %struct.GPR* %12335, i32 0, i32 33
  %12337 = getelementptr inbounds %struct.Reg, %struct.Reg* %12336, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %12337 to i64*
  %12338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12339 = getelementptr inbounds %struct.GPR, %struct.GPR* %12338, i32 0, i32 15
  %12340 = getelementptr inbounds %struct.Reg, %struct.Reg* %12339, i32 0, i32 0
  %RBP.i169 = bitcast %union.anon* %12340 to i64*
  %12341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12342 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12341, i64 0, i64 0
  %YMM0.i170 = bitcast %union.VectorReg* %12342 to %"class.std::bitset"*
  %12343 = bitcast %"class.std::bitset"* %YMM0.i170 to i8*
  %12344 = load i64, i64* %RBP.i169
  %12345 = sub i64 %12344, 184
  %12346 = load i64, i64* %PC.i168
  %12347 = add i64 %12346, 8
  store i64 %12347, i64* %PC.i168
  %12348 = inttoptr i64 %12345 to double*
  %12349 = load double, double* %12348
  %12350 = bitcast i8* %12343 to double*
  store double %12349, double* %12350, align 1
  %12351 = getelementptr inbounds i8, i8* %12343, i64 8
  %12352 = bitcast i8* %12351 to double*
  store double 0.000000e+00, double* %12352, align 1
  store %struct.Memory* %loadMem_48d172, %struct.Memory** %MEMORY
  %loadMem_48d17a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12354 = getelementptr inbounds %struct.GPR, %struct.GPR* %12353, i32 0, i32 33
  %12355 = getelementptr inbounds %struct.Reg, %struct.Reg* %12354, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %12355 to i64*
  %12356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12357 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12356, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %12357 to %"class.std::bitset"*
  %12358 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %12359 = load i64, i64* %PC.i167
  %12360 = add i64 %12359, ptrtoint (%G_0x2483e__rip__type* @G_0x2483e__rip_ to i64)
  %12361 = load i64, i64* %PC.i167
  %12362 = add i64 %12361, 8
  store i64 %12362, i64* %PC.i167
  %12363 = inttoptr i64 %12360 to double*
  %12364 = load double, double* %12363
  %12365 = bitcast i8* %12358 to double*
  store double %12364, double* %12365, align 1
  %12366 = getelementptr inbounds i8, i8* %12358, i64 8
  %12367 = bitcast i8* %12366 to double*
  store double 0.000000e+00, double* %12367, align 1
  store %struct.Memory* %loadMem_48d17a, %struct.Memory** %MEMORY
  %loadMem_48d182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12369 = getelementptr inbounds %struct.GPR, %struct.GPR* %12368, i32 0, i32 33
  %12370 = getelementptr inbounds %struct.Reg, %struct.Reg* %12369, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %12370 to i64*
  %12371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12372 = getelementptr inbounds %struct.GPR, %struct.GPR* %12371, i32 0, i32 15
  %12373 = getelementptr inbounds %struct.Reg, %struct.Reg* %12372, i32 0, i32 0
  %RBP.i165 = bitcast %union.anon* %12373 to i64*
  %12374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12375 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12374, i64 0, i64 2
  %YMM2.i166 = bitcast %union.VectorReg* %12375 to %"class.std::bitset"*
  %12376 = bitcast %"class.std::bitset"* %YMM2.i166 to i8*
  %12377 = load i64, i64* %RBP.i165
  %12378 = sub i64 %12377, 168
  %12379 = load i64, i64* %PC.i164
  %12380 = add i64 %12379, 8
  store i64 %12380, i64* %PC.i164
  %12381 = inttoptr i64 %12378 to double*
  %12382 = load double, double* %12381
  %12383 = bitcast i8* %12376 to double*
  store double %12382, double* %12383, align 1
  %12384 = getelementptr inbounds i8, i8* %12376, i64 8
  %12385 = bitcast i8* %12384 to double*
  store double 0.000000e+00, double* %12385, align 1
  store %struct.Memory* %loadMem_48d182, %struct.Memory** %MEMORY
  %loadMem_48d18a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12387 = getelementptr inbounds %struct.GPR, %struct.GPR* %12386, i32 0, i32 33
  %12388 = getelementptr inbounds %struct.Reg, %struct.Reg* %12387, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %12388 to i64*
  %12389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12390 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12389, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %12390 to %"class.std::bitset"*
  %12391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12392 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12391, i64 0, i64 0
  %XMM0.i163 = bitcast %union.VectorReg* %12392 to %union.vec128_t*
  %12393 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %12394 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %12395 = bitcast %union.vec128_t* %XMM0.i163 to i8*
  %12396 = load i64, i64* %PC.i162
  %12397 = add i64 %12396, 4
  store i64 %12397, i64* %PC.i162
  %12398 = bitcast i8* %12394 to double*
  %12399 = load double, double* %12398, align 1
  %12400 = getelementptr inbounds i8, i8* %12394, i64 8
  %12401 = bitcast i8* %12400 to i64*
  %12402 = load i64, i64* %12401, align 1
  %12403 = bitcast i8* %12395 to double*
  %12404 = load double, double* %12403, align 1
  %12405 = fmul double %12399, %12404
  %12406 = bitcast i8* %12393 to double*
  store double %12405, double* %12406, align 1
  %12407 = getelementptr inbounds i8, i8* %12393, i64 8
  %12408 = bitcast i8* %12407 to i64*
  store i64 %12402, i64* %12408, align 1
  store %struct.Memory* %loadMem_48d18a, %struct.Memory** %MEMORY
  %loadMem_48d18e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12410 = getelementptr inbounds %struct.GPR, %struct.GPR* %12409, i32 0, i32 33
  %12411 = getelementptr inbounds %struct.Reg, %struct.Reg* %12410, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %12411 to i64*
  %12412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12413 = getelementptr inbounds %struct.GPR, %struct.GPR* %12412, i32 0, i32 15
  %12414 = getelementptr inbounds %struct.Reg, %struct.Reg* %12413, i32 0, i32 0
  %RBP.i160 = bitcast %union.anon* %12414 to i64*
  %12415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12416 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12415, i64 0, i64 0
  %YMM0.i161 = bitcast %union.VectorReg* %12416 to %"class.std::bitset"*
  %12417 = bitcast %"class.std::bitset"* %YMM0.i161 to i8*
  %12418 = load i64, i64* %RBP.i160
  %12419 = sub i64 %12418, 176
  %12420 = load i64, i64* %PC.i159
  %12421 = add i64 %12420, 8
  store i64 %12421, i64* %PC.i159
  %12422 = inttoptr i64 %12419 to double*
  %12423 = load double, double* %12422
  %12424 = bitcast i8* %12417 to double*
  store double %12423, double* %12424, align 1
  %12425 = getelementptr inbounds i8, i8* %12417, i64 8
  %12426 = bitcast i8* %12425 to double*
  store double 0.000000e+00, double* %12426, align 1
  store %struct.Memory* %loadMem_48d18e, %struct.Memory** %MEMORY
  %loadMem_48d196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12428 = getelementptr inbounds %struct.GPR, %struct.GPR* %12427, i32 0, i32 33
  %12429 = getelementptr inbounds %struct.Reg, %struct.Reg* %12428, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %12429 to i64*
  %12430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12431 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12430, i64 0, i64 0
  %YMM0.i158 = bitcast %union.VectorReg* %12431 to %"class.std::bitset"*
  %12432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12433 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12432, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %12433 to %union.vec128_t*
  %12434 = bitcast %"class.std::bitset"* %YMM0.i158 to i8*
  %12435 = bitcast %"class.std::bitset"* %YMM0.i158 to i8*
  %12436 = bitcast %union.vec128_t* %XMM2.i to i8*
  %12437 = load i64, i64* %PC.i157
  %12438 = add i64 %12437, 4
  store i64 %12438, i64* %PC.i157
  %12439 = bitcast i8* %12435 to double*
  %12440 = load double, double* %12439, align 1
  %12441 = getelementptr inbounds i8, i8* %12435, i64 8
  %12442 = bitcast i8* %12441 to i64*
  %12443 = load i64, i64* %12442, align 1
  %12444 = bitcast i8* %12436 to double*
  %12445 = load double, double* %12444, align 1
  %12446 = fadd double %12440, %12445
  %12447 = bitcast i8* %12434 to double*
  store double %12446, double* %12447, align 1
  %12448 = getelementptr inbounds i8, i8* %12434, i64 8
  %12449 = bitcast i8* %12448 to i64*
  store i64 %12443, i64* %12449, align 1
  store %struct.Memory* %loadMem_48d196, %struct.Memory** %MEMORY
  %loadMem_48d19a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12451 = getelementptr inbounds %struct.GPR, %struct.GPR* %12450, i32 0, i32 33
  %12452 = getelementptr inbounds %struct.Reg, %struct.Reg* %12451, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %12452 to i64*
  %12453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12454 = getelementptr inbounds %struct.GPR, %struct.GPR* %12453, i32 0, i32 15
  %12455 = getelementptr inbounds %struct.Reg, %struct.Reg* %12454, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %12455 to i64*
  %12456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12457 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12456, i64 0, i64 0
  %XMM0.i156 = bitcast %union.VectorReg* %12457 to %union.vec128_t*
  %12458 = load i64, i64* %RBP.i155
  %12459 = sub i64 %12458, 72
  %12460 = bitcast %union.vec128_t* %XMM0.i156 to i8*
  %12461 = load i64, i64* %PC.i154
  %12462 = add i64 %12461, 5
  store i64 %12462, i64* %PC.i154
  %12463 = bitcast i8* %12460 to double*
  %12464 = load double, double* %12463, align 1
  %12465 = inttoptr i64 %12459 to double*
  store double %12464, double* %12465
  store %struct.Memory* %loadMem_48d19a, %struct.Memory** %MEMORY
  %loadMem_48d19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12467 = getelementptr inbounds %struct.GPR, %struct.GPR* %12466, i32 0, i32 33
  %12468 = getelementptr inbounds %struct.Reg, %struct.Reg* %12467, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %12468 to i64*
  %12469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12470 = getelementptr inbounds %struct.GPR, %struct.GPR* %12469, i32 0, i32 15
  %12471 = getelementptr inbounds %struct.Reg, %struct.Reg* %12470, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %12471 to i64*
  %12472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12473 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12472, i64 0, i64 0
  %YMM0.i153 = bitcast %union.VectorReg* %12473 to %"class.std::bitset"*
  %12474 = bitcast %"class.std::bitset"* %YMM0.i153 to i8*
  %12475 = load i64, i64* %RBP.i152
  %12476 = sub i64 %12475, 72
  %12477 = load i64, i64* %PC.i151
  %12478 = add i64 %12477, 5
  store i64 %12478, i64* %PC.i151
  %12479 = inttoptr i64 %12476 to double*
  %12480 = load double, double* %12479
  %12481 = bitcast i8* %12474 to double*
  store double %12480, double* %12481, align 1
  %12482 = getelementptr inbounds i8, i8* %12474, i64 8
  %12483 = bitcast i8* %12482 to double*
  store double 0.000000e+00, double* %12483, align 1
  store %struct.Memory* %loadMem_48d19f, %struct.Memory** %MEMORY
  %loadMem_48d1a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12485 = getelementptr inbounds %struct.GPR, %struct.GPR* %12484, i32 0, i32 33
  %12486 = getelementptr inbounds %struct.Reg, %struct.Reg* %12485, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %12486 to i64*
  %12487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12488 = getelementptr inbounds %struct.GPR, %struct.GPR* %12487, i32 0, i32 1
  %12489 = getelementptr inbounds %struct.Reg, %struct.Reg* %12488, i32 0, i32 0
  %RAX.i149 = bitcast %union.anon* %12489 to i64*
  %12490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12491 = getelementptr inbounds %struct.GPR, %struct.GPR* %12490, i32 0, i32 15
  %12492 = getelementptr inbounds %struct.Reg, %struct.Reg* %12491, i32 0, i32 0
  %RBP.i150 = bitcast %union.anon* %12492 to i64*
  %12493 = load i64, i64* %RBP.i150
  %12494 = sub i64 %12493, 32
  %12495 = load i64, i64* %PC.i148
  %12496 = add i64 %12495, 4
  store i64 %12496, i64* %PC.i148
  %12497 = inttoptr i64 %12494 to i64*
  %12498 = load i64, i64* %12497
  store i64 %12498, i64* %RAX.i149, align 8
  store %struct.Memory* %loadMem_48d1a4, %struct.Memory** %MEMORY
  %loadMem_48d1a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12500 = getelementptr inbounds %struct.GPR, %struct.GPR* %12499, i32 0, i32 33
  %12501 = getelementptr inbounds %struct.Reg, %struct.Reg* %12500, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %12501 to i64*
  %12502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12503 = getelementptr inbounds %struct.GPR, %struct.GPR* %12502, i32 0, i32 1
  %12504 = getelementptr inbounds %struct.Reg, %struct.Reg* %12503, i32 0, i32 0
  %RAX.i146 = bitcast %union.anon* %12504 to i64*
  %12505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12506 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12505, i64 0, i64 0
  %YMM0.i147 = bitcast %union.VectorReg* %12506 to %"class.std::bitset"*
  %12507 = bitcast %"class.std::bitset"* %YMM0.i147 to i8*
  %12508 = bitcast %"class.std::bitset"* %YMM0.i147 to i8*
  %12509 = load i64, i64* %RAX.i146
  %12510 = load i64, i64* %PC.i145
  %12511 = add i64 %12510, 4
  store i64 %12511, i64* %PC.i145
  %12512 = bitcast i8* %12508 to double*
  %12513 = load double, double* %12512, align 1
  %12514 = getelementptr inbounds i8, i8* %12508, i64 8
  %12515 = bitcast i8* %12514 to i64*
  %12516 = load i64, i64* %12515, align 1
  %12517 = inttoptr i64 %12509 to double*
  %12518 = load double, double* %12517
  %12519 = fsub double %12513, %12518
  %12520 = bitcast i8* %12507 to double*
  store double %12519, double* %12520, align 1
  %12521 = getelementptr inbounds i8, i8* %12507, i64 8
  %12522 = bitcast i8* %12521 to i64*
  store i64 %12516, i64* %12522, align 1
  store %struct.Memory* %loadMem_48d1a8, %struct.Memory** %MEMORY
  %loadMem_48d1ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %12523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12524 = getelementptr inbounds %struct.GPR, %struct.GPR* %12523, i32 0, i32 33
  %12525 = getelementptr inbounds %struct.Reg, %struct.Reg* %12524, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %12525 to i64*
  %12526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12527 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12526, i64 0, i64 0
  %XMM0.i142 = bitcast %union.VectorReg* %12527 to %union.vec128_t*
  %12528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12529 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12528, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %12529 to %union.vec128_t*
  %12530 = bitcast %union.vec128_t* %XMM0.i142 to i8*
  %12531 = bitcast %union.vec128_t* %XMM1.i to i8*
  %12532 = load i64, i64* %PC.i141
  %12533 = add i64 %12532, 4
  store i64 %12533, i64* %PC.i141
  %12534 = bitcast i8* %12530 to double*
  %12535 = load double, double* %12534, align 1
  %12536 = bitcast i8* %12531 to double*
  %12537 = load double, double* %12536, align 1
  %12538 = fcmp uno double %12535, %12537
  br i1 %12538, label %12539, label %12551

; <label>:12539:                                  ; preds = %block_.L_48d172
  %12540 = fadd double %12535, %12537
  %12541 = bitcast double %12540 to i64
  %12542 = and i64 %12541, 9221120237041090560
  %12543 = icmp eq i64 %12542, 9218868437227405312
  %12544 = and i64 %12541, 2251799813685247
  %12545 = icmp ne i64 %12544, 0
  %12546 = and i1 %12543, %12545
  br i1 %12546, label %12547, label %12557

; <label>:12547:                                  ; preds = %12539
  %12548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12549 = load i64, i64* %12548, align 8
  %12550 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12549, %struct.Memory* %loadMem_48d1ac)
  br label %routine_ucomisd__xmm1___xmm0.exit

; <label>:12551:                                  ; preds = %block_.L_48d172
  %12552 = fcmp ogt double %12535, %12537
  br i1 %12552, label %12557, label %12553

; <label>:12553:                                  ; preds = %12551
  %12554 = fcmp olt double %12535, %12537
  br i1 %12554, label %12557, label %12555

; <label>:12555:                                  ; preds = %12553
  %12556 = fcmp oeq double %12535, %12537
  br i1 %12556, label %12557, label %12564

; <label>:12557:                                  ; preds = %12555, %12553, %12551, %12539
  %12558 = phi i8 [ 0, %12551 ], [ 0, %12553 ], [ 1, %12555 ], [ 1, %12539 ]
  %12559 = phi i8 [ 0, %12551 ], [ 0, %12553 ], [ 0, %12555 ], [ 1, %12539 ]
  %12560 = phi i8 [ 0, %12551 ], [ 1, %12553 ], [ 0, %12555 ], [ 1, %12539 ]
  %12561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12558, i8* %12561, align 1
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12559, i8* %12562, align 1
  %12563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12560, i8* %12563, align 1
  br label %12564

; <label>:12564:                                  ; preds = %12557, %12555
  %12565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12565, align 1
  %12566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12566, align 1
  %12567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12567, align 1
  br label %routine_ucomisd__xmm1___xmm0.exit

routine_ucomisd__xmm1___xmm0.exit:                ; preds = %12547, %12564
  %12568 = phi %struct.Memory* [ %12550, %12547 ], [ %loadMem_48d1ac, %12564 ]
  store %struct.Memory* %12568, %struct.Memory** %MEMORY
  %loadMem_48d1b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12570 = getelementptr inbounds %struct.GPR, %struct.GPR* %12569, i32 0, i32 33
  %12571 = getelementptr inbounds %struct.Reg, %struct.Reg* %12570, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %12571 to i64*
  %12572 = load i64, i64* %PC.i140
  %12573 = add i64 %12572, 72
  %12574 = load i64, i64* %PC.i140
  %12575 = add i64 %12574, 6
  %12576 = load i64, i64* %PC.i140
  %12577 = add i64 %12576, 6
  store i64 %12577, i64* %PC.i140
  %12578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12579 = load i8, i8* %12578, align 1
  %12580 = icmp eq i8 %12579, 0
  %12581 = zext i1 %12580 to i8
  store i8 %12581, i8* %BRANCH_TAKEN, align 1
  %12582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12583 = select i1 %12580, i64 %12573, i64 %12575
  store i64 %12583, i64* %12582, align 8
  store %struct.Memory* %loadMem_48d1b0, %struct.Memory** %MEMORY
  %loadBr_48d1b0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d1b0 = icmp eq i8 %loadBr_48d1b0, 1
  br i1 %cmpBr_48d1b0, label %block_.L_48d1f8, label %block_48d1b6

block_48d1b6:                                     ; preds = %routine_ucomisd__xmm1___xmm0.exit
  %loadMem_48d1b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12585 = getelementptr inbounds %struct.GPR, %struct.GPR* %12584, i32 0, i32 33
  %12586 = getelementptr inbounds %struct.Reg, %struct.Reg* %12585, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %12586 to i64*
  %12587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12588 = getelementptr inbounds %struct.GPR, %struct.GPR* %12587, i32 0, i32 1
  %12589 = getelementptr inbounds %struct.Reg, %struct.Reg* %12588, i32 0, i32 0
  %RAX.i139 = bitcast %union.anon* %12589 to i64*
  %12590 = load i64, i64* %PC.i138
  %12591 = add i64 %12590, 8
  store i64 %12591, i64* %PC.i138
  %12592 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12592, i64* %RAX.i139, align 8
  store %struct.Memory* %loadMem_48d1b6, %struct.Memory** %MEMORY
  %loadMem_48d1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %12593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12594 = getelementptr inbounds %struct.GPR, %struct.GPR* %12593, i32 0, i32 33
  %12595 = getelementptr inbounds %struct.Reg, %struct.Reg* %12594, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %12595 to i64*
  %12596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12597 = getelementptr inbounds %struct.GPR, %struct.GPR* %12596, i32 0, i32 1
  %12598 = getelementptr inbounds %struct.Reg, %struct.Reg* %12597, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %12598 to i64*
  %12599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12600 = getelementptr inbounds %struct.GPR, %struct.GPR* %12599, i32 0, i32 5
  %12601 = getelementptr inbounds %struct.Reg, %struct.Reg* %12600, i32 0, i32 0
  %RCX.i137 = bitcast %union.anon* %12601 to i64*
  %12602 = load i64, i64* %RAX.i136
  %12603 = add i64 %12602, 40
  %12604 = load i64, i64* %PC.i135
  %12605 = add i64 %12604, 3
  store i64 %12605, i64* %PC.i135
  %12606 = inttoptr i64 %12603 to i32*
  %12607 = load i32, i32* %12606
  %12608 = zext i32 %12607 to i64
  store i64 %12608, i64* %RCX.i137, align 8
  store %struct.Memory* %loadMem_48d1be, %struct.Memory** %MEMORY
  %loadMem_48d1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12610 = getelementptr inbounds %struct.GPR, %struct.GPR* %12609, i32 0, i32 33
  %12611 = getelementptr inbounds %struct.Reg, %struct.Reg* %12610, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %12611 to i64*
  %12612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12613 = getelementptr inbounds %struct.GPR, %struct.GPR* %12612, i32 0, i32 1
  %12614 = getelementptr inbounds %struct.Reg, %struct.Reg* %12613, i32 0, i32 0
  %RAX.i134 = bitcast %union.anon* %12614 to i64*
  %12615 = load i64, i64* %PC.i133
  %12616 = add i64 %12615, 8
  store i64 %12616, i64* %PC.i133
  %12617 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12617, i64* %RAX.i134, align 8
  store %struct.Memory* %loadMem_48d1c1, %struct.Memory** %MEMORY
  %loadMem_48d1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12619 = getelementptr inbounds %struct.GPR, %struct.GPR* %12618, i32 0, i32 33
  %12620 = getelementptr inbounds %struct.Reg, %struct.Reg* %12619, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %12620 to i64*
  %12621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12622 = getelementptr inbounds %struct.GPR, %struct.GPR* %12621, i32 0, i32 1
  %12623 = getelementptr inbounds %struct.Reg, %struct.Reg* %12622, i32 0, i32 0
  %RAX.i131 = bitcast %union.anon* %12623 to i64*
  %12624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12625 = getelementptr inbounds %struct.GPR, %struct.GPR* %12624, i32 0, i32 5
  %12626 = getelementptr inbounds %struct.Reg, %struct.Reg* %12625, i32 0, i32 0
  %RCX.i132 = bitcast %union.anon* %12626 to i64*
  %12627 = load i64, i64* %RCX.i132
  %12628 = load i64, i64* %RAX.i131
  %12629 = add i64 %12628, 72668
  %12630 = load i64, i64* %PC.i130
  %12631 = add i64 %12630, 6
  store i64 %12631, i64* %PC.i130
  %12632 = trunc i64 %12627 to i32
  %12633 = inttoptr i64 %12629 to i32*
  %12634 = load i32, i32* %12633
  %12635 = add i32 %12634, %12632
  %12636 = zext i32 %12635 to i64
  store i64 %12636, i64* %RCX.i132, align 8
  %12637 = icmp ult i32 %12635, %12632
  %12638 = icmp ult i32 %12635, %12634
  %12639 = or i1 %12637, %12638
  %12640 = zext i1 %12639 to i8
  %12641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12640, i8* %12641, align 1
  %12642 = and i32 %12635, 255
  %12643 = call i32 @llvm.ctpop.i32(i32 %12642)
  %12644 = trunc i32 %12643 to i8
  %12645 = and i8 %12644, 1
  %12646 = xor i8 %12645, 1
  %12647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12646, i8* %12647, align 1
  %12648 = xor i32 %12634, %12632
  %12649 = xor i32 %12648, %12635
  %12650 = lshr i32 %12649, 4
  %12651 = trunc i32 %12650 to i8
  %12652 = and i8 %12651, 1
  %12653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12652, i8* %12653, align 1
  %12654 = icmp eq i32 %12635, 0
  %12655 = zext i1 %12654 to i8
  %12656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12655, i8* %12656, align 1
  %12657 = lshr i32 %12635, 31
  %12658 = trunc i32 %12657 to i8
  %12659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12658, i8* %12659, align 1
  %12660 = lshr i32 %12632, 31
  %12661 = lshr i32 %12634, 31
  %12662 = xor i32 %12657, %12660
  %12663 = xor i32 %12657, %12661
  %12664 = add i32 %12662, %12663
  %12665 = icmp eq i32 %12664, 2
  %12666 = zext i1 %12665 to i8
  %12667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12666, i8* %12667, align 1
  store %struct.Memory* %loadMem_48d1c9, %struct.Memory** %MEMORY
  %loadMem_48d1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12669 = getelementptr inbounds %struct.GPR, %struct.GPR* %12668, i32 0, i32 33
  %12670 = getelementptr inbounds %struct.Reg, %struct.Reg* %12669, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %12670 to i64*
  %12671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12672 = getelementptr inbounds %struct.GPR, %struct.GPR* %12671, i32 0, i32 5
  %12673 = getelementptr inbounds %struct.Reg, %struct.Reg* %12672, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %12673 to i32*
  %12674 = load i32, i32* %ECX.i
  %12675 = zext i32 %12674 to i64
  %12676 = load i64, i64* %PC.i129
  %12677 = add i64 %12676, 3
  store i64 %12677, i64* %PC.i129
  %12678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12678, align 1
  %12679 = and i32 %12674, 255
  %12680 = call i32 @llvm.ctpop.i32(i32 %12679)
  %12681 = trunc i32 %12680 to i8
  %12682 = and i8 %12681, 1
  %12683 = xor i8 %12682, 1
  %12684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12683, i8* %12684, align 1
  %12685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12685, align 1
  %12686 = icmp eq i32 %12674, 0
  %12687 = zext i1 %12686 to i8
  %12688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12687, i8* %12688, align 1
  %12689 = lshr i32 %12674, 31
  %12690 = trunc i32 %12689 to i8
  %12691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12690, i8* %12691, align 1
  %12692 = lshr i32 %12674, 31
  %12693 = xor i32 %12689, %12692
  %12694 = add i32 %12693, %12692
  %12695 = icmp eq i32 %12694, 2
  %12696 = zext i1 %12695 to i8
  %12697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12696, i8* %12697, align 1
  store %struct.Memory* %loadMem_48d1cf, %struct.Memory** %MEMORY
  %loadMem_48d1d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12699 = getelementptr inbounds %struct.GPR, %struct.GPR* %12698, i32 0, i32 33
  %12700 = getelementptr inbounds %struct.Reg, %struct.Reg* %12699, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %12700 to i64*
  %12701 = load i64, i64* %PC.i128
  %12702 = add i64 %12701, 50
  %12703 = load i64, i64* %PC.i128
  %12704 = add i64 %12703, 6
  %12705 = load i64, i64* %PC.i128
  %12706 = add i64 %12705, 6
  store i64 %12706, i64* %PC.i128
  %12707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12708 = load i8, i8* %12707, align 1
  %12709 = icmp eq i8 %12708, 0
  %12710 = zext i1 %12709 to i8
  store i8 %12710, i8* %BRANCH_TAKEN, align 1
  %12711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12712 = select i1 %12709, i64 %12702, i64 %12704
  store i64 %12712, i64* %12711, align 8
  store %struct.Memory* %loadMem_48d1d2, %struct.Memory** %MEMORY
  %loadBr_48d1d2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d1d2 = icmp eq i8 %loadBr_48d1d2, 1
  br i1 %cmpBr_48d1d2, label %block_.L_48d204, label %block_48d1d8

block_48d1d8:                                     ; preds = %block_48d1b6
  %loadMem_48d1d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12714 = getelementptr inbounds %struct.GPR, %struct.GPR* %12713, i32 0, i32 33
  %12715 = getelementptr inbounds %struct.Reg, %struct.Reg* %12714, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %12715 to i64*
  %12716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12717 = getelementptr inbounds %struct.GPR, %struct.GPR* %12716, i32 0, i32 1
  %12718 = getelementptr inbounds %struct.Reg, %struct.Reg* %12717, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %12718 to i64*
  %12719 = load i64, i64* %PC.i126
  %12720 = add i64 %12719, 8
  store i64 %12720, i64* %PC.i126
  %12721 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12721, i64* %RAX.i127, align 8
  store %struct.Memory* %loadMem_48d1d8, %struct.Memory** %MEMORY
  %loadMem_48d1e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12723 = getelementptr inbounds %struct.GPR, %struct.GPR* %12722, i32 0, i32 33
  %12724 = getelementptr inbounds %struct.Reg, %struct.Reg* %12723, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %12724 to i64*
  %12725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12726 = getelementptr inbounds %struct.GPR, %struct.GPR* %12725, i32 0, i32 1
  %12727 = getelementptr inbounds %struct.Reg, %struct.Reg* %12726, i32 0, i32 0
  %RAX.i125 = bitcast %union.anon* %12727 to i64*
  %12728 = load i64, i64* %RAX.i125
  %12729 = add i64 %12728, 72704
  %12730 = load i64, i64* %PC.i124
  %12731 = add i64 %12730, 7
  store i64 %12731, i64* %PC.i124
  %12732 = inttoptr i64 %12729 to i32*
  %12733 = load i32, i32* %12732
  %12734 = sub i32 %12733, 1
  %12735 = icmp ult i32 %12733, 1
  %12736 = zext i1 %12735 to i8
  %12737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12736, i8* %12737, align 1
  %12738 = and i32 %12734, 255
  %12739 = call i32 @llvm.ctpop.i32(i32 %12738)
  %12740 = trunc i32 %12739 to i8
  %12741 = and i8 %12740, 1
  %12742 = xor i8 %12741, 1
  %12743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12742, i8* %12743, align 1
  %12744 = xor i32 %12733, 1
  %12745 = xor i32 %12744, %12734
  %12746 = lshr i32 %12745, 4
  %12747 = trunc i32 %12746 to i8
  %12748 = and i8 %12747, 1
  %12749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12748, i8* %12749, align 1
  %12750 = icmp eq i32 %12734, 0
  %12751 = zext i1 %12750 to i8
  %12752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12751, i8* %12752, align 1
  %12753 = lshr i32 %12734, 31
  %12754 = trunc i32 %12753 to i8
  %12755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12754, i8* %12755, align 1
  %12756 = lshr i32 %12733, 31
  %12757 = xor i32 %12753, %12756
  %12758 = add i32 %12757, %12756
  %12759 = icmp eq i32 %12758, 2
  %12760 = zext i1 %12759 to i8
  %12761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12760, i8* %12761, align 1
  store %struct.Memory* %loadMem_48d1e0, %struct.Memory** %MEMORY
  %loadMem_48d1e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12763 = getelementptr inbounds %struct.GPR, %struct.GPR* %12762, i32 0, i32 33
  %12764 = getelementptr inbounds %struct.Reg, %struct.Reg* %12763, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %12764 to i64*
  %12765 = load i64, i64* %PC.i123
  %12766 = add i64 %12765, 29
  %12767 = load i64, i64* %PC.i123
  %12768 = add i64 %12767, 6
  %12769 = load i64, i64* %PC.i123
  %12770 = add i64 %12769, 6
  store i64 %12770, i64* %PC.i123
  %12771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12772 = load i8, i8* %12771, align 1
  %12773 = icmp eq i8 %12772, 0
  %12774 = zext i1 %12773 to i8
  store i8 %12774, i8* %BRANCH_TAKEN, align 1
  %12775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12776 = select i1 %12773, i64 %12766, i64 %12768
  store i64 %12776, i64* %12775, align 8
  store %struct.Memory* %loadMem_48d1e7, %struct.Memory** %MEMORY
  %loadBr_48d1e7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d1e7 = icmp eq i8 %loadBr_48d1e7, 1
  br i1 %cmpBr_48d1e7, label %block_.L_48d204, label %block_48d1ed

block_48d1ed:                                     ; preds = %block_48d1d8
  %loadMem_48d1ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %12777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12778 = getelementptr inbounds %struct.GPR, %struct.GPR* %12777, i32 0, i32 33
  %12779 = getelementptr inbounds %struct.Reg, %struct.Reg* %12778, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %12779 to i64*
  %12780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12781 = getelementptr inbounds %struct.GPR, %struct.GPR* %12780, i32 0, i32 15
  %12782 = getelementptr inbounds %struct.Reg, %struct.Reg* %12781, i32 0, i32 0
  %RBP.i122 = bitcast %union.anon* %12782 to i64*
  %12783 = load i64, i64* %RBP.i122
  %12784 = sub i64 %12783, 64
  %12785 = load i64, i64* %PC.i121
  %12786 = add i64 %12785, 5
  store i64 %12786, i64* %PC.i121
  %12787 = inttoptr i64 %12784 to i64*
  %12788 = load i64, i64* %12787
  %12789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12789, align 1
  %12790 = trunc i64 %12788 to i32
  %12791 = and i32 %12790, 255
  %12792 = call i32 @llvm.ctpop.i32(i32 %12791)
  %12793 = trunc i32 %12792 to i8
  %12794 = and i8 %12793, 1
  %12795 = xor i8 %12794, 1
  %12796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12795, i8* %12796, align 1
  %12797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12797, align 1
  %12798 = icmp eq i64 %12788, 0
  %12799 = zext i1 %12798 to i8
  %12800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12799, i8* %12800, align 1
  %12801 = lshr i64 %12788, 63
  %12802 = trunc i64 %12801 to i8
  %12803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12802, i8* %12803, align 1
  %12804 = lshr i64 %12788, 63
  %12805 = xor i64 %12801, %12804
  %12806 = add i64 %12805, %12804
  %12807 = icmp eq i64 %12806, 2
  %12808 = zext i1 %12807 to i8
  %12809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12808, i8* %12809, align 1
  store %struct.Memory* %loadMem_48d1ed, %struct.Memory** %MEMORY
  %loadMem_48d1f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12811 = getelementptr inbounds %struct.GPR, %struct.GPR* %12810, i32 0, i32 33
  %12812 = getelementptr inbounds %struct.Reg, %struct.Reg* %12811, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %12812 to i64*
  %12813 = load i64, i64* %PC.i120
  %12814 = add i64 %12813, 18
  %12815 = load i64, i64* %PC.i120
  %12816 = add i64 %12815, 6
  %12817 = load i64, i64* %PC.i120
  %12818 = add i64 %12817, 6
  store i64 %12818, i64* %PC.i120
  %12819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12820 = load i8, i8* %12819, align 1
  store i8 %12820, i8* %BRANCH_TAKEN, align 1
  %12821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12822 = icmp ne i8 %12820, 0
  %12823 = select i1 %12822, i64 %12814, i64 %12816
  store i64 %12823, i64* %12821, align 8
  store %struct.Memory* %loadMem_48d1f2, %struct.Memory** %MEMORY
  %loadBr_48d1f2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d1f2 = icmp eq i8 %loadBr_48d1f2, 1
  br i1 %cmpBr_48d1f2, label %block_.L_48d204, label %block_.L_48d1f8

block_.L_48d1f8:                                  ; preds = %block_48d1ed, %routine_ucomisd__xmm1___xmm0.exit
  %loadMem_48d1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12825 = getelementptr inbounds %struct.GPR, %struct.GPR* %12824, i32 0, i32 33
  %12826 = getelementptr inbounds %struct.Reg, %struct.Reg* %12825, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %12826 to i64*
  %12827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12828 = getelementptr inbounds %struct.GPR, %struct.GPR* %12827, i32 0, i32 15
  %12829 = getelementptr inbounds %struct.Reg, %struct.Reg* %12828, i32 0, i32 0
  %RBP.i119 = bitcast %union.anon* %12829 to i64*
  %12830 = load i64, i64* %RBP.i119
  %12831 = sub i64 %12830, 4
  %12832 = load i64, i64* %PC.i118
  %12833 = add i64 %12832, 7
  store i64 %12833, i64* %PC.i118
  %12834 = inttoptr i64 %12831 to i32*
  store i32 0, i32* %12834
  store %struct.Memory* %loadMem_48d1f8, %struct.Memory** %MEMORY
  %loadMem_48d1ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %12835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12836 = getelementptr inbounds %struct.GPR, %struct.GPR* %12835, i32 0, i32 33
  %12837 = getelementptr inbounds %struct.Reg, %struct.Reg* %12836, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %12837 to i64*
  %12838 = load i64, i64* %PC.i117
  %12839 = add i64 %12838, 306
  %12840 = load i64, i64* %PC.i117
  %12841 = add i64 %12840, 5
  store i64 %12841, i64* %PC.i117
  %12842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12839, i64* %12842, align 8
  store %struct.Memory* %loadMem_48d1ff, %struct.Memory** %MEMORY
  br label %block_.L_48d331

block_.L_48d204:                                  ; preds = %block_48d1ed, %block_48d1d8, %block_48d1b6
  %loadMem_48d204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12844 = getelementptr inbounds %struct.GPR, %struct.GPR* %12843, i32 0, i32 33
  %12845 = getelementptr inbounds %struct.Reg, %struct.Reg* %12844, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %12845 to i64*
  %12846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12847 = getelementptr inbounds %struct.GPR, %struct.GPR* %12846, i32 0, i32 1
  %12848 = getelementptr inbounds %struct.Reg, %struct.Reg* %12847, i32 0, i32 0
  %RAX.i116 = bitcast %union.anon* %12848 to i64*
  %12849 = load i64, i64* %PC.i115
  %12850 = add i64 %12849, 8
  store i64 %12850, i64* %PC.i115
  %12851 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12851, i64* %RAX.i116, align 8
  store %struct.Memory* %loadMem_48d204, %struct.Memory** %MEMORY
  %loadMem_48d20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12853 = getelementptr inbounds %struct.GPR, %struct.GPR* %12852, i32 0, i32 33
  %12854 = getelementptr inbounds %struct.Reg, %struct.Reg* %12853, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %12854 to i64*
  %12855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12856 = getelementptr inbounds %struct.GPR, %struct.GPR* %12855, i32 0, i32 1
  %12857 = getelementptr inbounds %struct.Reg, %struct.Reg* %12856, i32 0, i32 0
  %RAX.i114 = bitcast %union.anon* %12857 to i64*
  %12858 = load i64, i64* %RAX.i114
  %12859 = add i64 %12858, 72400
  %12860 = load i64, i64* %PC.i113
  %12861 = add i64 %12860, 7
  store i64 %12861, i64* %PC.i113
  %12862 = inttoptr i64 %12859 to i32*
  %12863 = load i32, i32* %12862
  %12864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12864, align 1
  %12865 = and i32 %12863, 255
  %12866 = call i32 @llvm.ctpop.i32(i32 %12865)
  %12867 = trunc i32 %12866 to i8
  %12868 = and i8 %12867, 1
  %12869 = xor i8 %12868, 1
  %12870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12869, i8* %12870, align 1
  %12871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12871, align 1
  %12872 = icmp eq i32 %12863, 0
  %12873 = zext i1 %12872 to i8
  %12874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12873, i8* %12874, align 1
  %12875 = lshr i32 %12863, 31
  %12876 = trunc i32 %12875 to i8
  %12877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12876, i8* %12877, align 1
  %12878 = lshr i32 %12863, 31
  %12879 = xor i32 %12875, %12878
  %12880 = add i32 %12879, %12878
  %12881 = icmp eq i32 %12880, 2
  %12882 = zext i1 %12881 to i8
  %12883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12882, i8* %12883, align 1
  store %struct.Memory* %loadMem_48d20c, %struct.Memory** %MEMORY
  %loadMem_48d213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12885 = getelementptr inbounds %struct.GPR, %struct.GPR* %12884, i32 0, i32 33
  %12886 = getelementptr inbounds %struct.Reg, %struct.Reg* %12885, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %12886 to i64*
  %12887 = load i64, i64* %PC.i112
  %12888 = add i64 %12887, 266
  %12889 = load i64, i64* %PC.i112
  %12890 = add i64 %12889, 6
  %12891 = load i64, i64* %PC.i112
  %12892 = add i64 %12891, 6
  store i64 %12892, i64* %PC.i112
  %12893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12894 = load i8, i8* %12893, align 1
  store i8 %12894, i8* %BRANCH_TAKEN, align 1
  %12895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12896 = icmp ne i8 %12894, 0
  %12897 = select i1 %12896, i64 %12888, i64 %12890
  store i64 %12897, i64* %12895, align 8
  store %struct.Memory* %loadMem_48d213, %struct.Memory** %MEMORY
  %loadBr_48d213 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d213 = icmp eq i8 %loadBr_48d213, 1
  br i1 %cmpBr_48d213, label %block_.L_48d31d, label %block_48d219

block_48d219:                                     ; preds = %block_.L_48d204
  %loadMem_48d219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12899 = getelementptr inbounds %struct.GPR, %struct.GPR* %12898, i32 0, i32 33
  %12900 = getelementptr inbounds %struct.Reg, %struct.Reg* %12899, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %12900 to i64*
  %12901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12902 = getelementptr inbounds %struct.GPR, %struct.GPR* %12901, i32 0, i32 15
  %12903 = getelementptr inbounds %struct.Reg, %struct.Reg* %12902, i32 0, i32 0
  %RBP.i111 = bitcast %union.anon* %12903 to i64*
  %12904 = load i64, i64* %RBP.i111
  %12905 = sub i64 %12904, 20
  %12906 = load i64, i64* %PC.i110
  %12907 = add i64 %12906, 4
  store i64 %12907, i64* %PC.i110
  %12908 = inttoptr i64 %12905 to i32*
  %12909 = load i32, i32* %12908
  %12910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12910, align 1
  %12911 = and i32 %12909, 255
  %12912 = call i32 @llvm.ctpop.i32(i32 %12911)
  %12913 = trunc i32 %12912 to i8
  %12914 = and i8 %12913, 1
  %12915 = xor i8 %12914, 1
  %12916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12915, i8* %12916, align 1
  %12917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12917, align 1
  %12918 = icmp eq i32 %12909, 0
  %12919 = zext i1 %12918 to i8
  %12920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12919, i8* %12920, align 1
  %12921 = lshr i32 %12909, 31
  %12922 = trunc i32 %12921 to i8
  %12923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12922, i8* %12923, align 1
  %12924 = lshr i32 %12909, 31
  %12925 = xor i32 %12921, %12924
  %12926 = add i32 %12925, %12924
  %12927 = icmp eq i32 %12926, 2
  %12928 = zext i1 %12927 to i8
  %12929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12928, i8* %12929, align 1
  store %struct.Memory* %loadMem_48d219, %struct.Memory** %MEMORY
  %loadMem_48d21d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12931 = getelementptr inbounds %struct.GPR, %struct.GPR* %12930, i32 0, i32 33
  %12932 = getelementptr inbounds %struct.Reg, %struct.Reg* %12931, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %12932 to i64*
  %12933 = load i64, i64* %PC.i109
  %12934 = add i64 %12933, 24
  %12935 = load i64, i64* %PC.i109
  %12936 = add i64 %12935, 6
  %12937 = load i64, i64* %PC.i109
  %12938 = add i64 %12937, 6
  store i64 %12938, i64* %PC.i109
  %12939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12940 = load i8, i8* %12939, align 1
  store i8 %12940, i8* %BRANCH_TAKEN, align 1
  %12941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12942 = icmp ne i8 %12940, 0
  %12943 = select i1 %12942, i64 %12934, i64 %12936
  store i64 %12943, i64* %12941, align 8
  store %struct.Memory* %loadMem_48d21d, %struct.Memory** %MEMORY
  %loadBr_48d21d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d21d = icmp eq i8 %loadBr_48d21d, 1
  br i1 %cmpBr_48d21d, label %block_.L_48d235, label %block_48d223

block_48d223:                                     ; preds = %block_48d219
  %loadMem_48d223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12945 = getelementptr inbounds %struct.GPR, %struct.GPR* %12944, i32 0, i32 33
  %12946 = getelementptr inbounds %struct.Reg, %struct.Reg* %12945, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %12946 to i64*
  %12947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12948 = getelementptr inbounds %struct.GPR, %struct.GPR* %12947, i32 0, i32 1
  %12949 = getelementptr inbounds %struct.Reg, %struct.Reg* %12948, i32 0, i32 0
  %EAX.i107 = bitcast %union.anon* %12949 to i32*
  %12950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12951 = getelementptr inbounds %struct.GPR, %struct.GPR* %12950, i32 0, i32 1
  %12952 = getelementptr inbounds %struct.Reg, %struct.Reg* %12951, i32 0, i32 0
  %RAX.i108 = bitcast %union.anon* %12952 to i64*
  %12953 = load i64, i64* %RAX.i108
  %12954 = load i32, i32* %EAX.i107
  %12955 = zext i32 %12954 to i64
  %12956 = load i64, i64* %PC.i106
  %12957 = add i64 %12956, 2
  store i64 %12957, i64* %PC.i106
  %12958 = xor i64 %12955, %12953
  %12959 = trunc i64 %12958 to i32
  %12960 = and i64 %12958, 4294967295
  store i64 %12960, i64* %RAX.i108, align 8
  %12961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12961, align 1
  %12962 = and i32 %12959, 255
  %12963 = call i32 @llvm.ctpop.i32(i32 %12962)
  %12964 = trunc i32 %12963 to i8
  %12965 = and i8 %12964, 1
  %12966 = xor i8 %12965, 1
  %12967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12966, i8* %12967, align 1
  %12968 = icmp eq i32 %12959, 0
  %12969 = zext i1 %12968 to i8
  %12970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12969, i8* %12970, align 1
  %12971 = lshr i32 %12959, 31
  %12972 = trunc i32 %12971 to i8
  %12973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12972, i8* %12973, align 1
  %12974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12974, align 1
  %12975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12975, align 1
  store %struct.Memory* %loadMem_48d223, %struct.Memory** %MEMORY
  %loadMem_48d225 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12977 = getelementptr inbounds %struct.GPR, %struct.GPR* %12976, i32 0, i32 33
  %12978 = getelementptr inbounds %struct.Reg, %struct.Reg* %12977, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %12978 to i64*
  %12979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12980 = getelementptr inbounds %struct.GPR, %struct.GPR* %12979, i32 0, i32 1
  %12981 = getelementptr inbounds %struct.Reg, %struct.Reg* %12980, i32 0, i32 0
  %12982 = bitcast %union.anon* %12981 to %struct.anon.2*
  %AL.i104 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12982, i32 0, i32 0
  %12983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12984 = getelementptr inbounds %struct.GPR, %struct.GPR* %12983, i32 0, i32 5
  %12985 = getelementptr inbounds %struct.Reg, %struct.Reg* %12984, i32 0, i32 0
  %12986 = bitcast %union.anon* %12985 to %struct.anon.2*
  %CL.i105 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12986, i32 0, i32 0
  %12987 = load i8, i8* %AL.i104
  %12988 = zext i8 %12987 to i64
  %12989 = load i64, i64* %PC.i103
  %12990 = add i64 %12989, 2
  store i64 %12990, i64* %PC.i103
  store i8 %12987, i8* %CL.i105, align 1
  store %struct.Memory* %loadMem_48d225, %struct.Memory** %MEMORY
  %loadMem_48d227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12992 = getelementptr inbounds %struct.GPR, %struct.GPR* %12991, i32 0, i32 33
  %12993 = getelementptr inbounds %struct.Reg, %struct.Reg* %12992, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %12993 to i64*
  %12994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12995 = getelementptr inbounds %struct.GPR, %struct.GPR* %12994, i32 0, i32 5
  %12996 = getelementptr inbounds %struct.Reg, %struct.Reg* %12995, i32 0, i32 0
  %12997 = bitcast %union.anon* %12996 to %struct.anon.2*
  %CL.i102 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12997, i32 0, i32 0
  %12998 = load i8, i8* %CL.i102
  %12999 = zext i8 %12998 to i64
  %13000 = load i64, i64* %PC.i101
  %13001 = add i64 %13000, 3
  store i64 %13001, i64* %PC.i101
  %13002 = and i64 1, %12999
  %13003 = trunc i64 %13002 to i8
  %13004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13004, align 1
  %13005 = trunc i64 %13002 to i32
  %13006 = and i32 %13005, 255
  %13007 = call i32 @llvm.ctpop.i32(i32 %13006)
  %13008 = trunc i32 %13007 to i8
  %13009 = and i8 %13008, 1
  %13010 = xor i8 %13009, 1
  %13011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13010, i8* %13011, align 1
  %13012 = icmp eq i8 %13003, 0
  %13013 = zext i1 %13012 to i8
  %13014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13013, i8* %13014, align 1
  %13015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13015, align 1
  %13016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13016, align 1
  %13017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13017, align 1
  store %struct.Memory* %loadMem_48d227, %struct.Memory** %MEMORY
  %loadMem_48d22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13019 = getelementptr inbounds %struct.GPR, %struct.GPR* %13018, i32 0, i32 33
  %13020 = getelementptr inbounds %struct.Reg, %struct.Reg* %13019, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %13020 to i64*
  %13021 = load i64, i64* %PC.i100
  %13022 = add i64 %13021, 66
  %13023 = load i64, i64* %PC.i100
  %13024 = add i64 %13023, 6
  %13025 = load i64, i64* %PC.i100
  %13026 = add i64 %13025, 6
  store i64 %13026, i64* %PC.i100
  %13027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13028 = load i8, i8* %13027, align 1
  %13029 = icmp eq i8 %13028, 0
  %13030 = zext i1 %13029 to i8
  store i8 %13030, i8* %BRANCH_TAKEN, align 1
  %13031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13032 = select i1 %13029, i64 %13022, i64 %13024
  store i64 %13032, i64* %13031, align 8
  store %struct.Memory* %loadMem_48d22a, %struct.Memory** %MEMORY
  %loadBr_48d22a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d22a = icmp eq i8 %loadBr_48d22a, 1
  br i1 %cmpBr_48d22a, label %block_.L_48d26c, label %block_48d230

block_48d230:                                     ; preds = %block_48d223
  %loadMem_48d230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13034 = getelementptr inbounds %struct.GPR, %struct.GPR* %13033, i32 0, i32 33
  %13035 = getelementptr inbounds %struct.Reg, %struct.Reg* %13034, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %13035 to i64*
  %13036 = load i64, i64* %PC.i99
  %13037 = add i64 %13036, 237
  %13038 = load i64, i64* %PC.i99
  %13039 = add i64 %13038, 5
  store i64 %13039, i64* %PC.i99
  %13040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13037, i64* %13040, align 8
  store %struct.Memory* %loadMem_48d230, %struct.Memory** %MEMORY
  br label %block_.L_48d31d

block_.L_48d235:                                  ; preds = %block_48d219
  %loadMem_48d235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13042 = getelementptr inbounds %struct.GPR, %struct.GPR* %13041, i32 0, i32 33
  %13043 = getelementptr inbounds %struct.Reg, %struct.Reg* %13042, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %13043 to i64*
  %13044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13045 = getelementptr inbounds %struct.GPR, %struct.GPR* %13044, i32 0, i32 1
  %13046 = getelementptr inbounds %struct.Reg, %struct.Reg* %13045, i32 0, i32 0
  %RAX.i98 = bitcast %union.anon* %13046 to i64*
  %13047 = load i64, i64* %PC.i97
  %13048 = add i64 %13047, 8
  store i64 %13048, i64* %PC.i97
  %13049 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13049, i64* %RAX.i98, align 8
  store %struct.Memory* %loadMem_48d235, %struct.Memory** %MEMORY
  %loadMem_48d23d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13051 = getelementptr inbounds %struct.GPR, %struct.GPR* %13050, i32 0, i32 33
  %13052 = getelementptr inbounds %struct.Reg, %struct.Reg* %13051, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %13052 to i64*
  %13053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13054 = getelementptr inbounds %struct.GPR, %struct.GPR* %13053, i32 0, i32 1
  %13055 = getelementptr inbounds %struct.Reg, %struct.Reg* %13054, i32 0, i32 0
  %RAX.i96 = bitcast %union.anon* %13055 to i64*
  %13056 = load i64, i64* %RAX.i96
  %13057 = add i64 %13056, 24
  %13058 = load i64, i64* %PC.i95
  %13059 = add i64 %13058, 4
  store i64 %13059, i64* %PC.i95
  %13060 = inttoptr i64 %13057 to i32*
  %13061 = load i32, i32* %13060
  %13062 = sub i32 %13061, 1
  %13063 = icmp ult i32 %13061, 1
  %13064 = zext i1 %13063 to i8
  %13065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13064, i8* %13065, align 1
  %13066 = and i32 %13062, 255
  %13067 = call i32 @llvm.ctpop.i32(i32 %13066)
  %13068 = trunc i32 %13067 to i8
  %13069 = and i8 %13068, 1
  %13070 = xor i8 %13069, 1
  %13071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13070, i8* %13071, align 1
  %13072 = xor i32 %13061, 1
  %13073 = xor i32 %13072, %13062
  %13074 = lshr i32 %13073, 4
  %13075 = trunc i32 %13074 to i8
  %13076 = and i8 %13075, 1
  %13077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13076, i8* %13077, align 1
  %13078 = icmp eq i32 %13062, 0
  %13079 = zext i1 %13078 to i8
  %13080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13079, i8* %13080, align 1
  %13081 = lshr i32 %13062, 31
  %13082 = trunc i32 %13081 to i8
  %13083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13082, i8* %13083, align 1
  %13084 = lshr i32 %13061, 31
  %13085 = xor i32 %13081, %13084
  %13086 = add i32 %13085, %13084
  %13087 = icmp eq i32 %13086, 2
  %13088 = zext i1 %13087 to i8
  %13089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13088, i8* %13089, align 1
  store %struct.Memory* %loadMem_48d23d, %struct.Memory** %MEMORY
  %loadMem_48d241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13091 = getelementptr inbounds %struct.GPR, %struct.GPR* %13090, i32 0, i32 33
  %13092 = getelementptr inbounds %struct.Reg, %struct.Reg* %13091, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %13092 to i64*
  %13093 = load i64, i64* %PC.i94
  %13094 = add i64 %13093, 28
  %13095 = load i64, i64* %PC.i94
  %13096 = add i64 %13095, 6
  %13097 = load i64, i64* %PC.i94
  %13098 = add i64 %13097, 6
  store i64 %13098, i64* %PC.i94
  %13099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13100 = load i8, i8* %13099, align 1
  %13101 = icmp eq i8 %13100, 0
  %13102 = zext i1 %13101 to i8
  store i8 %13102, i8* %BRANCH_TAKEN, align 1
  %13103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13104 = select i1 %13101, i64 %13094, i64 %13096
  store i64 %13104, i64* %13103, align 8
  store %struct.Memory* %loadMem_48d241, %struct.Memory** %MEMORY
  %loadBr_48d241 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d241 = icmp eq i8 %loadBr_48d241, 1
  br i1 %cmpBr_48d241, label %block_.L_48d25d, label %block_48d247

block_48d247:                                     ; preds = %block_.L_48d235
  %loadMem_48d247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13106 = getelementptr inbounds %struct.GPR, %struct.GPR* %13105, i32 0, i32 33
  %13107 = getelementptr inbounds %struct.Reg, %struct.Reg* %13106, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %13107 to i64*
  %13108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13109 = getelementptr inbounds %struct.GPR, %struct.GPR* %13108, i32 0, i32 1
  %13110 = getelementptr inbounds %struct.Reg, %struct.Reg* %13109, i32 0, i32 0
  %RAX.i92 = bitcast %union.anon* %13110 to i64*
  %13111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13112 = getelementptr inbounds %struct.GPR, %struct.GPR* %13111, i32 0, i32 15
  %13113 = getelementptr inbounds %struct.Reg, %struct.Reg* %13112, i32 0, i32 0
  %RBP.i93 = bitcast %union.anon* %13113 to i64*
  %13114 = load i64, i64* %RBP.i93
  %13115 = sub i64 %13114, 80
  %13116 = load i64, i64* %PC.i91
  %13117 = add i64 %13116, 4
  store i64 %13117, i64* %PC.i91
  %13118 = inttoptr i64 %13115 to i64*
  %13119 = load i64, i64* %13118
  store i64 %13119, i64* %RAX.i92, align 8
  store %struct.Memory* %loadMem_48d247, %struct.Memory** %MEMORY
  %loadMem_48d24b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13121 = getelementptr inbounds %struct.GPR, %struct.GPR* %13120, i32 0, i32 33
  %13122 = getelementptr inbounds %struct.Reg, %struct.Reg* %13121, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %13122 to i64*
  %13123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13124 = getelementptr inbounds %struct.GPR, %struct.GPR* %13123, i32 0, i32 1
  %13125 = getelementptr inbounds %struct.Reg, %struct.Reg* %13124, i32 0, i32 0
  %RAX.i90 = bitcast %union.anon* %13125 to i64*
  %13126 = load i64, i64* %RAX.i90
  %13127 = add i64 %13126, 460
  %13128 = load i64, i64* %PC.i89
  %13129 = add i64 %13128, 7
  store i64 %13129, i64* %PC.i89
  %13130 = inttoptr i64 %13127 to i32*
  %13131 = load i32, i32* %13130
  %13132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13132, align 1
  %13133 = and i32 %13131, 255
  %13134 = call i32 @llvm.ctpop.i32(i32 %13133)
  %13135 = trunc i32 %13134 to i8
  %13136 = and i8 %13135, 1
  %13137 = xor i8 %13136, 1
  %13138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13137, i8* %13138, align 1
  %13139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13139, align 1
  %13140 = icmp eq i32 %13131, 0
  %13141 = zext i1 %13140 to i8
  %13142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13141, i8* %13142, align 1
  %13143 = lshr i32 %13131, 31
  %13144 = trunc i32 %13143 to i8
  %13145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13144, i8* %13145, align 1
  %13146 = lshr i32 %13131, 31
  %13147 = xor i32 %13143, %13146
  %13148 = add i32 %13147, %13146
  %13149 = icmp eq i32 %13148, 2
  %13150 = zext i1 %13149 to i8
  %13151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13150, i8* %13151, align 1
  store %struct.Memory* %loadMem_48d24b, %struct.Memory** %MEMORY
  %loadMem_48d252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13153 = getelementptr inbounds %struct.GPR, %struct.GPR* %13152, i32 0, i32 33
  %13154 = getelementptr inbounds %struct.Reg, %struct.Reg* %13153, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %13154 to i64*
  %13155 = load i64, i64* %PC.i88
  %13156 = add i64 %13155, 203
  %13157 = load i64, i64* %PC.i88
  %13158 = add i64 %13157, 6
  %13159 = load i64, i64* %PC.i88
  %13160 = add i64 %13159, 6
  store i64 %13160, i64* %PC.i88
  %13161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13162 = load i8, i8* %13161, align 1
  %13163 = icmp eq i8 %13162, 0
  %13164 = zext i1 %13163 to i8
  store i8 %13164, i8* %BRANCH_TAKEN, align 1
  %13165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13166 = select i1 %13163, i64 %13156, i64 %13158
  store i64 %13166, i64* %13165, align 8
  store %struct.Memory* %loadMem_48d252, %struct.Memory** %MEMORY
  %loadBr_48d252 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d252 = icmp eq i8 %loadBr_48d252, 1
  br i1 %cmpBr_48d252, label %block_.L_48d31d, label %block_48d258

block_48d258:                                     ; preds = %block_48d247
  %loadMem_48d258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13168 = getelementptr inbounds %struct.GPR, %struct.GPR* %13167, i32 0, i32 33
  %13169 = getelementptr inbounds %struct.Reg, %struct.Reg* %13168, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %13169 to i64*
  %13170 = load i64, i64* %PC.i87
  %13171 = add i64 %13170, 20
  %13172 = load i64, i64* %PC.i87
  %13173 = add i64 %13172, 5
  store i64 %13173, i64* %PC.i87
  %13174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13171, i64* %13174, align 8
  store %struct.Memory* %loadMem_48d258, %struct.Memory** %MEMORY
  br label %block_.L_48d26c

block_.L_48d25d:                                  ; preds = %block_.L_48d235
  %loadMem_48d25d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13176 = getelementptr inbounds %struct.GPR, %struct.GPR* %13175, i32 0, i32 33
  %13177 = getelementptr inbounds %struct.Reg, %struct.Reg* %13176, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %13177 to i64*
  %13178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13179 = getelementptr inbounds %struct.GPR, %struct.GPR* %13178, i32 0, i32 1
  %13180 = getelementptr inbounds %struct.Reg, %struct.Reg* %13179, i32 0, i32 0
  %13181 = bitcast %union.anon* %13180 to %struct.anon.2*
  %AL.i86 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13181, i32 0, i32 0
  %13182 = load i64, i64* %PC.i85
  %13183 = add i64 %13182, 2
  store i64 %13183, i64* %PC.i85
  store i8 1, i8* %AL.i86, align 1
  store %struct.Memory* %loadMem_48d25d, %struct.Memory** %MEMORY
  %loadMem_48d25f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13185 = getelementptr inbounds %struct.GPR, %struct.GPR* %13184, i32 0, i32 33
  %13186 = getelementptr inbounds %struct.Reg, %struct.Reg* %13185, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %13186 to i64*
  %13187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13188 = getelementptr inbounds %struct.GPR, %struct.GPR* %13187, i32 0, i32 1
  %13189 = getelementptr inbounds %struct.Reg, %struct.Reg* %13188, i32 0, i32 0
  %13190 = bitcast %union.anon* %13189 to %struct.anon.2*
  %AL.i84 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13190, i32 0, i32 0
  %13191 = load i8, i8* %AL.i84
  %13192 = zext i8 %13191 to i64
  %13193 = load i64, i64* %PC.i83
  %13194 = add i64 %13193, 2
  store i64 %13194, i64* %PC.i83
  %13195 = and i64 1, %13192
  %13196 = trunc i64 %13195 to i8
  %13197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13197, align 1
  %13198 = trunc i64 %13195 to i32
  %13199 = and i32 %13198, 255
  %13200 = call i32 @llvm.ctpop.i32(i32 %13199)
  %13201 = trunc i32 %13200 to i8
  %13202 = and i8 %13201, 1
  %13203 = xor i8 %13202, 1
  %13204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13203, i8* %13204, align 1
  %13205 = icmp eq i8 %13196, 0
  %13206 = zext i1 %13205 to i8
  %13207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13206, i8* %13207, align 1
  %13208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13208, align 1
  %13209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13209, align 1
  %13210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13210, align 1
  store %struct.Memory* %loadMem_48d25f, %struct.Memory** %MEMORY
  %loadMem_48d261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13212 = getelementptr inbounds %struct.GPR, %struct.GPR* %13211, i32 0, i32 33
  %13213 = getelementptr inbounds %struct.Reg, %struct.Reg* %13212, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %13213 to i64*
  %13214 = load i64, i64* %PC.i82
  %13215 = add i64 %13214, 11
  %13216 = load i64, i64* %PC.i82
  %13217 = add i64 %13216, 6
  %13218 = load i64, i64* %PC.i82
  %13219 = add i64 %13218, 6
  store i64 %13219, i64* %PC.i82
  %13220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13221 = load i8, i8* %13220, align 1
  %13222 = icmp eq i8 %13221, 0
  %13223 = zext i1 %13222 to i8
  store i8 %13223, i8* %BRANCH_TAKEN, align 1
  %13224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13225 = select i1 %13222, i64 %13215, i64 %13217
  store i64 %13225, i64* %13224, align 8
  store %struct.Memory* %loadMem_48d261, %struct.Memory** %MEMORY
  %loadBr_48d261 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d261 = icmp eq i8 %loadBr_48d261, 1
  br i1 %cmpBr_48d261, label %block_.L_48d26c, label %block_48d267

block_48d267:                                     ; preds = %block_.L_48d25d
  %loadMem_48d267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13227 = getelementptr inbounds %struct.GPR, %struct.GPR* %13226, i32 0, i32 33
  %13228 = getelementptr inbounds %struct.Reg, %struct.Reg* %13227, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %13228 to i64*
  %13229 = load i64, i64* %PC.i81
  %13230 = add i64 %13229, 182
  %13231 = load i64, i64* %PC.i81
  %13232 = add i64 %13231, 5
  store i64 %13232, i64* %PC.i81
  %13233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13230, i64* %13233, align 8
  store %struct.Memory* %loadMem_48d267, %struct.Memory** %MEMORY
  br label %block_.L_48d31d

block_.L_48d26c:                                  ; preds = %block_.L_48d25d, %block_48d258, %block_48d223
  %loadMem_48d26c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13235 = getelementptr inbounds %struct.GPR, %struct.GPR* %13234, i32 0, i32 33
  %13236 = getelementptr inbounds %struct.Reg, %struct.Reg* %13235, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %13236 to i64*
  %13237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13238 = getelementptr inbounds %struct.GPR, %struct.GPR* %13237, i32 0, i32 1
  %13239 = getelementptr inbounds %struct.Reg, %struct.Reg* %13238, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %13239 to i64*
  %13240 = load i64, i64* %PC.i79
  %13241 = add i64 %13240, 5
  store i64 %13241, i64* %PC.i79
  store i64 2, i64* %RAX.i80, align 8
  store %struct.Memory* %loadMem_48d26c, %struct.Memory** %MEMORY
  %loadMem_48d271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13243 = getelementptr inbounds %struct.GPR, %struct.GPR* %13242, i32 0, i32 33
  %13244 = getelementptr inbounds %struct.Reg, %struct.Reg* %13243, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %13244 to i64*
  %13245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13246 = getelementptr inbounds %struct.GPR, %struct.GPR* %13245, i32 0, i32 5
  %13247 = getelementptr inbounds %struct.Reg, %struct.Reg* %13246, i32 0, i32 0
  %RCX.i78 = bitcast %union.anon* %13247 to i64*
  %13248 = load i64, i64* %PC.i77
  %13249 = add i64 %13248, 8
  store i64 %13249, i64* %PC.i77
  %13250 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13250, i64* %RCX.i78, align 8
  store %struct.Memory* %loadMem_48d271, %struct.Memory** %MEMORY
  %loadMem_48d279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13252 = getelementptr inbounds %struct.GPR, %struct.GPR* %13251, i32 0, i32 33
  %13253 = getelementptr inbounds %struct.Reg, %struct.Reg* %13252, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %13253 to i64*
  %13254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13255 = getelementptr inbounds %struct.GPR, %struct.GPR* %13254, i32 0, i32 5
  %13256 = getelementptr inbounds %struct.Reg, %struct.Reg* %13255, i32 0, i32 0
  %RCX.i76 = bitcast %union.anon* %13256 to i64*
  %13257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13258 = getelementptr inbounds %struct.GPR, %struct.GPR* %13257, i32 0, i32 7
  %13259 = getelementptr inbounds %struct.Reg, %struct.Reg* %13258, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %13259 to i64*
  %13260 = load i64, i64* %RCX.i76
  %13261 = add i64 %13260, 12
  %13262 = load i64, i64* %PC.i75
  %13263 = add i64 %13262, 3
  store i64 %13263, i64* %PC.i75
  %13264 = inttoptr i64 %13261 to i32*
  %13265 = load i32, i32* %13264
  %13266 = zext i32 %13265 to i64
  store i64 %13266, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_48d279, %struct.Memory** %MEMORY
  %loadMem_48d27c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13268 = getelementptr inbounds %struct.GPR, %struct.GPR* %13267, i32 0, i32 33
  %13269 = getelementptr inbounds %struct.Reg, %struct.Reg* %13268, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %13269 to i64*
  %13270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13271 = getelementptr inbounds %struct.GPR, %struct.GPR* %13270, i32 0, i32 1
  %13272 = getelementptr inbounds %struct.Reg, %struct.Reg* %13271, i32 0, i32 0
  %EAX.i73 = bitcast %union.anon* %13272 to i32*
  %13273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13274 = getelementptr inbounds %struct.GPR, %struct.GPR* %13273, i32 0, i32 15
  %13275 = getelementptr inbounds %struct.Reg, %struct.Reg* %13274, i32 0, i32 0
  %RBP.i74 = bitcast %union.anon* %13275 to i64*
  %13276 = load i64, i64* %RBP.i74
  %13277 = sub i64 %13276, 188
  %13278 = load i32, i32* %EAX.i73
  %13279 = zext i32 %13278 to i64
  %13280 = load i64, i64* %PC.i72
  %13281 = add i64 %13280, 6
  store i64 %13281, i64* %PC.i72
  %13282 = inttoptr i64 %13277 to i32*
  store i32 %13278, i32* %13282
  store %struct.Memory* %loadMem_48d27c, %struct.Memory** %MEMORY
  %loadMem_48d282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13284 = getelementptr inbounds %struct.GPR, %struct.GPR* %13283, i32 0, i32 33
  %13285 = getelementptr inbounds %struct.Reg, %struct.Reg* %13284, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %13285 to i64*
  %13286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13287 = getelementptr inbounds %struct.GPR, %struct.GPR* %13286, i32 0, i32 7
  %13288 = getelementptr inbounds %struct.Reg, %struct.Reg* %13287, i32 0, i32 0
  %EDX.i70 = bitcast %union.anon* %13288 to i32*
  %13289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13290 = getelementptr inbounds %struct.GPR, %struct.GPR* %13289, i32 0, i32 1
  %13291 = getelementptr inbounds %struct.Reg, %struct.Reg* %13290, i32 0, i32 0
  %RAX.i71 = bitcast %union.anon* %13291 to i64*
  %13292 = load i32, i32* %EDX.i70
  %13293 = zext i32 %13292 to i64
  %13294 = load i64, i64* %PC.i69
  %13295 = add i64 %13294, 2
  store i64 %13295, i64* %PC.i69
  %13296 = and i64 %13293, 4294967295
  store i64 %13296, i64* %RAX.i71, align 8
  store %struct.Memory* %loadMem_48d282, %struct.Memory** %MEMORY
  %loadMem_48d284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13298 = getelementptr inbounds %struct.GPR, %struct.GPR* %13297, i32 0, i32 33
  %13299 = getelementptr inbounds %struct.Reg, %struct.Reg* %13298, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %13299 to i64*
  %13300 = load i64, i64* %PC.i68
  %13301 = add i64 %13300, 1
  store i64 %13301, i64* %PC.i68
  %13302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %13303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13304 = bitcast %union.anon* %13303 to i32*
  %13305 = load i32, i32* %13304, align 8
  %13306 = sext i32 %13305 to i64
  %13307 = lshr i64 %13306, 32
  store i64 %13307, i64* %13302, align 8
  store %struct.Memory* %loadMem_48d284, %struct.Memory** %MEMORY
  %loadMem_48d285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13309 = getelementptr inbounds %struct.GPR, %struct.GPR* %13308, i32 0, i32 33
  %13310 = getelementptr inbounds %struct.Reg, %struct.Reg* %13309, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %13310 to i64*
  %13311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13312 = getelementptr inbounds %struct.GPR, %struct.GPR* %13311, i32 0, i32 9
  %13313 = getelementptr inbounds %struct.Reg, %struct.Reg* %13312, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %13313 to i64*
  %13314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13315 = getelementptr inbounds %struct.GPR, %struct.GPR* %13314, i32 0, i32 15
  %13316 = getelementptr inbounds %struct.Reg, %struct.Reg* %13315, i32 0, i32 0
  %RBP.i67 = bitcast %union.anon* %13316 to i64*
  %13317 = load i64, i64* %RBP.i67
  %13318 = sub i64 %13317, 188
  %13319 = load i64, i64* %PC.i66
  %13320 = add i64 %13319, 6
  store i64 %13320, i64* %PC.i66
  %13321 = inttoptr i64 %13318 to i32*
  %13322 = load i32, i32* %13321
  %13323 = zext i32 %13322 to i64
  store i64 %13323, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_48d285, %struct.Memory** %MEMORY
  %loadMem_48d28b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13325 = getelementptr inbounds %struct.GPR, %struct.GPR* %13324, i32 0, i32 33
  %13326 = getelementptr inbounds %struct.Reg, %struct.Reg* %13325, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %13326 to i64*
  %13327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13328 = getelementptr inbounds %struct.GPR, %struct.GPR* %13327, i32 0, i32 9
  %13329 = getelementptr inbounds %struct.Reg, %struct.Reg* %13328, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %13329 to i32*
  %13330 = load i32, i32* %ESI.i
  %13331 = zext i32 %13330 to i64
  %13332 = load i64, i64* %PC.i62
  %13333 = add i64 %13332, 2
  store i64 %13333, i64* %PC.i62
  %13334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13335 = bitcast %union.anon* %13334 to i32*
  %13336 = load i32, i32* %13335, align 8
  %13337 = zext i32 %13336 to i64
  %13338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %13339 = bitcast %union.anon* %13338 to i32*
  %13340 = load i32, i32* %13339, align 8
  %13341 = zext i32 %13340 to i64
  %13342 = shl i64 %13331, 32
  %13343 = ashr exact i64 %13342, 32
  %13344 = shl i64 %13341, 32
  %13345 = or i64 %13344, %13337
  %13346 = sdiv i64 %13345, %13343
  %13347 = shl i64 %13346, 32
  %13348 = ashr exact i64 %13347, 32
  %13349 = icmp eq i64 %13346, %13348
  br i1 %13349, label %13354, label %13350

; <label>:13350:                                  ; preds = %block_.L_48d26c
  %13351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13352 = load i64, i64* %13351, align 8
  %13353 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13352, %struct.Memory* %loadMem_48d28b)
  br label %routine_idivl__esi.exit

; <label>:13354:                                  ; preds = %block_.L_48d26c
  %13355 = srem i64 %13345, %13343
  %13356 = getelementptr inbounds %union.anon, %union.anon* %13334, i64 0, i32 0
  %13357 = and i64 %13346, 4294967295
  store i64 %13357, i64* %13356, align 8
  %13358 = getelementptr inbounds %union.anon, %union.anon* %13338, i64 0, i32 0
  %13359 = and i64 %13355, 4294967295
  store i64 %13359, i64* %13358, align 8
  %13360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13360, align 1
  %13361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %13361, align 1
  %13362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13362, align 1
  %13363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13363, align 1
  %13364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13364, align 1
  %13365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13365, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %13350, %13354
  %13366 = phi %struct.Memory* [ %13353, %13350 ], [ %loadMem_48d28b, %13354 ]
  store %struct.Memory* %13366, %struct.Memory** %MEMORY
  %loadMem_48d28d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13368 = getelementptr inbounds %struct.GPR, %struct.GPR* %13367, i32 0, i32 33
  %13369 = getelementptr inbounds %struct.Reg, %struct.Reg* %13368, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %13369 to i64*
  %13370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13371 = getelementptr inbounds %struct.GPR, %struct.GPR* %13370, i32 0, i32 7
  %13372 = getelementptr inbounds %struct.Reg, %struct.Reg* %13371, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %13372 to i32*
  %13373 = load i32, i32* %EDX.i
  %13374 = zext i32 %13373 to i64
  %13375 = load i64, i64* %PC.i61
  %13376 = add i64 %13375, 3
  store i64 %13376, i64* %PC.i61
  %13377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13377, align 1
  %13378 = and i32 %13373, 255
  %13379 = call i32 @llvm.ctpop.i32(i32 %13378)
  %13380 = trunc i32 %13379 to i8
  %13381 = and i8 %13380, 1
  %13382 = xor i8 %13381, 1
  %13383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13382, i8* %13383, align 1
  %13384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13384, align 1
  %13385 = icmp eq i32 %13373, 0
  %13386 = zext i1 %13385 to i8
  %13387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13386, i8* %13387, align 1
  %13388 = lshr i32 %13373, 31
  %13389 = trunc i32 %13388 to i8
  %13390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13389, i8* %13390, align 1
  %13391 = lshr i32 %13373, 31
  %13392 = xor i32 %13388, %13391
  %13393 = add i32 %13392, %13391
  %13394 = icmp eq i32 %13393, 2
  %13395 = zext i1 %13394 to i8
  %13396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13395, i8* %13396, align 1
  store %struct.Memory* %loadMem_48d28d, %struct.Memory** %MEMORY
  %loadMem_48d290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13398 = getelementptr inbounds %struct.GPR, %struct.GPR* %13397, i32 0, i32 33
  %13399 = getelementptr inbounds %struct.Reg, %struct.Reg* %13398, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %13399 to i64*
  %13400 = load i64, i64* %PC.i60
  %13401 = add i64 %13400, 136
  %13402 = load i64, i64* %PC.i60
  %13403 = add i64 %13402, 6
  %13404 = load i64, i64* %PC.i60
  %13405 = add i64 %13404, 6
  store i64 %13405, i64* %PC.i60
  %13406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13407 = load i8, i8* %13406, align 1
  store i8 %13407, i8* %BRANCH_TAKEN, align 1
  %13408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13409 = icmp ne i8 %13407, 0
  %13410 = select i1 %13409, i64 %13401, i64 %13403
  store i64 %13410, i64* %13408, align 8
  store %struct.Memory* %loadMem_48d290, %struct.Memory** %MEMORY
  %loadBr_48d290 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d290 = icmp eq i8 %loadBr_48d290, 1
  br i1 %cmpBr_48d290, label %block_.L_48d318, label %block_48d296

block_48d296:                                     ; preds = %routine_idivl__esi.exit
  %loadMem_48d296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13412 = getelementptr inbounds %struct.GPR, %struct.GPR* %13411, i32 0, i32 33
  %13413 = getelementptr inbounds %struct.Reg, %struct.Reg* %13412, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %13413 to i64*
  %13414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13415 = getelementptr inbounds %struct.GPR, %struct.GPR* %13414, i32 0, i32 1
  %13416 = getelementptr inbounds %struct.Reg, %struct.Reg* %13415, i32 0, i32 0
  %RAX.i58 = bitcast %union.anon* %13416 to i64*
  %13417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13418 = getelementptr inbounds %struct.GPR, %struct.GPR* %13417, i32 0, i32 15
  %13419 = getelementptr inbounds %struct.Reg, %struct.Reg* %13418, i32 0, i32 0
  %RBP.i59 = bitcast %union.anon* %13419 to i64*
  %13420 = load i64, i64* %RBP.i59
  %13421 = sub i64 %13420, 88
  %13422 = load i64, i64* %PC.i57
  %13423 = add i64 %13422, 4
  store i64 %13423, i64* %PC.i57
  %13424 = inttoptr i64 %13421 to i64*
  %13425 = load i64, i64* %13424
  store i64 %13425, i64* %RAX.i58, align 8
  store %struct.Memory* %loadMem_48d296, %struct.Memory** %MEMORY
  %loadMem_48d29a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13427 = getelementptr inbounds %struct.GPR, %struct.GPR* %13426, i32 0, i32 33
  %13428 = getelementptr inbounds %struct.Reg, %struct.Reg* %13427, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %13428 to i64*
  %13429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13430 = getelementptr inbounds %struct.GPR, %struct.GPR* %13429, i32 0, i32 1
  %13431 = getelementptr inbounds %struct.Reg, %struct.Reg* %13430, i32 0, i32 0
  %RAX.i56 = bitcast %union.anon* %13431 to i64*
  %13432 = load i64, i64* %RAX.i56
  %13433 = add i64 %13432, 72
  %13434 = load i64, i64* %PC.i55
  %13435 = add i64 %13434, 4
  store i64 %13435, i64* %PC.i55
  %13436 = inttoptr i64 %13433 to i32*
  %13437 = load i32, i32* %13436
  %13438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13438, align 1
  %13439 = and i32 %13437, 255
  %13440 = call i32 @llvm.ctpop.i32(i32 %13439)
  %13441 = trunc i32 %13440 to i8
  %13442 = and i8 %13441, 1
  %13443 = xor i8 %13442, 1
  %13444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13443, i8* %13444, align 1
  %13445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13445, align 1
  %13446 = icmp eq i32 %13437, 0
  %13447 = zext i1 %13446 to i8
  %13448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13447, i8* %13448, align 1
  %13449 = lshr i32 %13437, 31
  %13450 = trunc i32 %13449 to i8
  %13451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13450, i8* %13451, align 1
  %13452 = lshr i32 %13437, 31
  %13453 = xor i32 %13449, %13452
  %13454 = add i32 %13453, %13452
  %13455 = icmp eq i32 %13454, 2
  %13456 = zext i1 %13455 to i8
  %13457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13456, i8* %13457, align 1
  store %struct.Memory* %loadMem_48d29a, %struct.Memory** %MEMORY
  %loadMem_48d29e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13459 = getelementptr inbounds %struct.GPR, %struct.GPR* %13458, i32 0, i32 33
  %13460 = getelementptr inbounds %struct.Reg, %struct.Reg* %13459, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %13460 to i64*
  %13461 = load i64, i64* %PC.i54
  %13462 = add i64 %13461, 24
  %13463 = load i64, i64* %PC.i54
  %13464 = add i64 %13463, 6
  %13465 = load i64, i64* %PC.i54
  %13466 = add i64 %13465, 6
  store i64 %13466, i64* %PC.i54
  %13467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13468 = load i8, i8* %13467, align 1
  store i8 %13468, i8* %BRANCH_TAKEN, align 1
  %13469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13470 = icmp ne i8 %13468, 0
  %13471 = select i1 %13470, i64 %13462, i64 %13464
  store i64 %13471, i64* %13469, align 8
  store %struct.Memory* %loadMem_48d29e, %struct.Memory** %MEMORY
  %loadBr_48d29e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d29e = icmp eq i8 %loadBr_48d29e, 1
  br i1 %cmpBr_48d29e, label %block_.L_48d2b6, label %block_48d2a4

block_48d2a4:                                     ; preds = %block_48d296
  %loadMem_48d2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13473 = getelementptr inbounds %struct.GPR, %struct.GPR* %13472, i32 0, i32 33
  %13474 = getelementptr inbounds %struct.Reg, %struct.Reg* %13473, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %13474 to i64*
  %13475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13476 = getelementptr inbounds %struct.GPR, %struct.GPR* %13475, i32 0, i32 1
  %13477 = getelementptr inbounds %struct.Reg, %struct.Reg* %13476, i32 0, i32 0
  %EAX.i52 = bitcast %union.anon* %13477 to i32*
  %13478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13479 = getelementptr inbounds %struct.GPR, %struct.GPR* %13478, i32 0, i32 1
  %13480 = getelementptr inbounds %struct.Reg, %struct.Reg* %13479, i32 0, i32 0
  %RAX.i53 = bitcast %union.anon* %13480 to i64*
  %13481 = load i64, i64* %RAX.i53
  %13482 = load i32, i32* %EAX.i52
  %13483 = zext i32 %13482 to i64
  %13484 = load i64, i64* %PC.i51
  %13485 = add i64 %13484, 2
  store i64 %13485, i64* %PC.i51
  %13486 = xor i64 %13483, %13481
  %13487 = trunc i64 %13486 to i32
  %13488 = and i64 %13486, 4294967295
  store i64 %13488, i64* %RAX.i53, align 8
  %13489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13489, align 1
  %13490 = and i32 %13487, 255
  %13491 = call i32 @llvm.ctpop.i32(i32 %13490)
  %13492 = trunc i32 %13491 to i8
  %13493 = and i8 %13492, 1
  %13494 = xor i8 %13493, 1
  %13495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13494, i8* %13495, align 1
  %13496 = icmp eq i32 %13487, 0
  %13497 = zext i1 %13496 to i8
  %13498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13497, i8* %13498, align 1
  %13499 = lshr i32 %13487, 31
  %13500 = trunc i32 %13499 to i8
  %13501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13500, i8* %13501, align 1
  %13502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13502, align 1
  %13503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13503, align 1
  store %struct.Memory* %loadMem_48d2a4, %struct.Memory** %MEMORY
  %loadMem_48d2a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13505 = getelementptr inbounds %struct.GPR, %struct.GPR* %13504, i32 0, i32 33
  %13506 = getelementptr inbounds %struct.Reg, %struct.Reg* %13505, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %13506 to i64*
  %13507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13508 = getelementptr inbounds %struct.GPR, %struct.GPR* %13507, i32 0, i32 1
  %13509 = getelementptr inbounds %struct.Reg, %struct.Reg* %13508, i32 0, i32 0
  %13510 = bitcast %union.anon* %13509 to %struct.anon.2*
  %AL.i49 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13510, i32 0, i32 0
  %13511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13512 = getelementptr inbounds %struct.GPR, %struct.GPR* %13511, i32 0, i32 5
  %13513 = getelementptr inbounds %struct.Reg, %struct.Reg* %13512, i32 0, i32 0
  %13514 = bitcast %union.anon* %13513 to %struct.anon.2*
  %CL.i50 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13514, i32 0, i32 0
  %13515 = load i8, i8* %AL.i49
  %13516 = zext i8 %13515 to i64
  %13517 = load i64, i64* %PC.i48
  %13518 = add i64 %13517, 2
  store i64 %13518, i64* %PC.i48
  store i8 %13515, i8* %CL.i50, align 1
  store %struct.Memory* %loadMem_48d2a6, %struct.Memory** %MEMORY
  %loadMem_48d2a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13520 = getelementptr inbounds %struct.GPR, %struct.GPR* %13519, i32 0, i32 33
  %13521 = getelementptr inbounds %struct.Reg, %struct.Reg* %13520, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %13521 to i64*
  %13522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13523 = getelementptr inbounds %struct.GPR, %struct.GPR* %13522, i32 0, i32 5
  %13524 = getelementptr inbounds %struct.Reg, %struct.Reg* %13523, i32 0, i32 0
  %13525 = bitcast %union.anon* %13524 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13525, i32 0, i32 0
  %13526 = load i8, i8* %CL.i
  %13527 = zext i8 %13526 to i64
  %13528 = load i64, i64* %PC.i47
  %13529 = add i64 %13528, 3
  store i64 %13529, i64* %PC.i47
  %13530 = and i64 1, %13527
  %13531 = trunc i64 %13530 to i8
  %13532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13532, align 1
  %13533 = trunc i64 %13530 to i32
  %13534 = and i32 %13533, 255
  %13535 = call i32 @llvm.ctpop.i32(i32 %13534)
  %13536 = trunc i32 %13535 to i8
  %13537 = and i8 %13536, 1
  %13538 = xor i8 %13537, 1
  %13539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13538, i8* %13539, align 1
  %13540 = icmp eq i8 %13531, 0
  %13541 = zext i1 %13540 to i8
  %13542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13541, i8* %13542, align 1
  %13543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13543, align 1
  %13544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13544, align 1
  %13545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13545, align 1
  store %struct.Memory* %loadMem_48d2a8, %struct.Memory** %MEMORY
  %loadMem_48d2ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %13546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13547 = getelementptr inbounds %struct.GPR, %struct.GPR* %13546, i32 0, i32 33
  %13548 = getelementptr inbounds %struct.Reg, %struct.Reg* %13547, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %13548 to i64*
  %13549 = load i64, i64* %PC.i46
  %13550 = add i64 %13549, 66
  %13551 = load i64, i64* %PC.i46
  %13552 = add i64 %13551, 6
  %13553 = load i64, i64* %PC.i46
  %13554 = add i64 %13553, 6
  store i64 %13554, i64* %PC.i46
  %13555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13556 = load i8, i8* %13555, align 1
  %13557 = icmp eq i8 %13556, 0
  %13558 = zext i1 %13557 to i8
  store i8 %13558, i8* %BRANCH_TAKEN, align 1
  %13559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13560 = select i1 %13557, i64 %13550, i64 %13552
  store i64 %13560, i64* %13559, align 8
  store %struct.Memory* %loadMem_48d2ab, %struct.Memory** %MEMORY
  %loadBr_48d2ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d2ab = icmp eq i8 %loadBr_48d2ab, 1
  br i1 %cmpBr_48d2ab, label %block_.L_48d2ed, label %block_48d2b1

block_48d2b1:                                     ; preds = %block_48d2a4
  %loadMem_48d2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13562 = getelementptr inbounds %struct.GPR, %struct.GPR* %13561, i32 0, i32 33
  %13563 = getelementptr inbounds %struct.Reg, %struct.Reg* %13562, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %13563 to i64*
  %13564 = load i64, i64* %PC.i45
  %13565 = add i64 %13564, 98
  %13566 = load i64, i64* %PC.i45
  %13567 = add i64 %13566, 5
  store i64 %13567, i64* %PC.i45
  %13568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13565, i64* %13568, align 8
  store %struct.Memory* %loadMem_48d2b1, %struct.Memory** %MEMORY
  br label %block_.L_48d313

block_.L_48d2b6:                                  ; preds = %block_48d296
  %loadMem_48d2b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13570 = getelementptr inbounds %struct.GPR, %struct.GPR* %13569, i32 0, i32 33
  %13571 = getelementptr inbounds %struct.Reg, %struct.Reg* %13570, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %13571 to i64*
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13573 = getelementptr inbounds %struct.GPR, %struct.GPR* %13572, i32 0, i32 1
  %13574 = getelementptr inbounds %struct.Reg, %struct.Reg* %13573, i32 0, i32 0
  %RAX.i44 = bitcast %union.anon* %13574 to i64*
  %13575 = load i64, i64* %PC.i43
  %13576 = add i64 %13575, 8
  store i64 %13576, i64* %PC.i43
  %13577 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13577, i64* %RAX.i44, align 8
  store %struct.Memory* %loadMem_48d2b6, %struct.Memory** %MEMORY
  %loadMem_48d2be = load %struct.Memory*, %struct.Memory** %MEMORY
  %13578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13579 = getelementptr inbounds %struct.GPR, %struct.GPR* %13578, i32 0, i32 33
  %13580 = getelementptr inbounds %struct.Reg, %struct.Reg* %13579, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %13580 to i64*
  %13581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13582 = getelementptr inbounds %struct.GPR, %struct.GPR* %13581, i32 0, i32 1
  %13583 = getelementptr inbounds %struct.Reg, %struct.Reg* %13582, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %13583 to i64*
  %13584 = load i64, i64* %RAX.i42
  %13585 = add i64 %13584, 24
  %13586 = load i64, i64* %PC.i41
  %13587 = add i64 %13586, 4
  store i64 %13587, i64* %PC.i41
  %13588 = inttoptr i64 %13585 to i32*
  %13589 = load i32, i32* %13588
  %13590 = sub i32 %13589, 1
  %13591 = icmp ult i32 %13589, 1
  %13592 = zext i1 %13591 to i8
  %13593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13592, i8* %13593, align 1
  %13594 = and i32 %13590, 255
  %13595 = call i32 @llvm.ctpop.i32(i32 %13594)
  %13596 = trunc i32 %13595 to i8
  %13597 = and i8 %13596, 1
  %13598 = xor i8 %13597, 1
  %13599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13598, i8* %13599, align 1
  %13600 = xor i32 %13589, 1
  %13601 = xor i32 %13600, %13590
  %13602 = lshr i32 %13601, 4
  %13603 = trunc i32 %13602 to i8
  %13604 = and i8 %13603, 1
  %13605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13604, i8* %13605, align 1
  %13606 = icmp eq i32 %13590, 0
  %13607 = zext i1 %13606 to i8
  %13608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13607, i8* %13608, align 1
  %13609 = lshr i32 %13590, 31
  %13610 = trunc i32 %13609 to i8
  %13611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13610, i8* %13611, align 1
  %13612 = lshr i32 %13589, 31
  %13613 = xor i32 %13609, %13612
  %13614 = add i32 %13613, %13612
  %13615 = icmp eq i32 %13614, 2
  %13616 = zext i1 %13615 to i8
  %13617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13616, i8* %13617, align 1
  store %struct.Memory* %loadMem_48d2be, %struct.Memory** %MEMORY
  %loadMem_48d2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13619 = getelementptr inbounds %struct.GPR, %struct.GPR* %13618, i32 0, i32 33
  %13620 = getelementptr inbounds %struct.Reg, %struct.Reg* %13619, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %13620 to i64*
  %13621 = load i64, i64* %PC.i40
  %13622 = add i64 %13621, 28
  %13623 = load i64, i64* %PC.i40
  %13624 = add i64 %13623, 6
  %13625 = load i64, i64* %PC.i40
  %13626 = add i64 %13625, 6
  store i64 %13626, i64* %PC.i40
  %13627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13628 = load i8, i8* %13627, align 1
  %13629 = icmp eq i8 %13628, 0
  %13630 = zext i1 %13629 to i8
  store i8 %13630, i8* %BRANCH_TAKEN, align 1
  %13631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13632 = select i1 %13629, i64 %13622, i64 %13624
  store i64 %13632, i64* %13631, align 8
  store %struct.Memory* %loadMem_48d2c2, %struct.Memory** %MEMORY
  %loadBr_48d2c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d2c2 = icmp eq i8 %loadBr_48d2c2, 1
  br i1 %cmpBr_48d2c2, label %block_.L_48d2de, label %block_48d2c8

block_48d2c8:                                     ; preds = %block_.L_48d2b6
  %loadMem_48d2c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13634 = getelementptr inbounds %struct.GPR, %struct.GPR* %13633, i32 0, i32 33
  %13635 = getelementptr inbounds %struct.Reg, %struct.Reg* %13634, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %13635 to i64*
  %13636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13637 = getelementptr inbounds %struct.GPR, %struct.GPR* %13636, i32 0, i32 1
  %13638 = getelementptr inbounds %struct.Reg, %struct.Reg* %13637, i32 0, i32 0
  %RAX.i38 = bitcast %union.anon* %13638 to i64*
  %13639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13640 = getelementptr inbounds %struct.GPR, %struct.GPR* %13639, i32 0, i32 15
  %13641 = getelementptr inbounds %struct.Reg, %struct.Reg* %13640, i32 0, i32 0
  %RBP.i39 = bitcast %union.anon* %13641 to i64*
  %13642 = load i64, i64* %RBP.i39
  %13643 = sub i64 %13642, 88
  %13644 = load i64, i64* %PC.i37
  %13645 = add i64 %13644, 4
  store i64 %13645, i64* %PC.i37
  %13646 = inttoptr i64 %13643 to i64*
  %13647 = load i64, i64* %13646
  store i64 %13647, i64* %RAX.i38, align 8
  store %struct.Memory* %loadMem_48d2c8, %struct.Memory** %MEMORY
  %loadMem_48d2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13649 = getelementptr inbounds %struct.GPR, %struct.GPR* %13648, i32 0, i32 33
  %13650 = getelementptr inbounds %struct.Reg, %struct.Reg* %13649, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %13650 to i64*
  %13651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13652 = getelementptr inbounds %struct.GPR, %struct.GPR* %13651, i32 0, i32 1
  %13653 = getelementptr inbounds %struct.Reg, %struct.Reg* %13652, i32 0, i32 0
  %RAX.i36 = bitcast %union.anon* %13653 to i64*
  %13654 = load i64, i64* %RAX.i36
  %13655 = add i64 %13654, 460
  %13656 = load i64, i64* %PC.i35
  %13657 = add i64 %13656, 7
  store i64 %13657, i64* %PC.i35
  %13658 = inttoptr i64 %13655 to i32*
  %13659 = load i32, i32* %13658
  %13660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13660, align 1
  %13661 = and i32 %13659, 255
  %13662 = call i32 @llvm.ctpop.i32(i32 %13661)
  %13663 = trunc i32 %13662 to i8
  %13664 = and i8 %13663, 1
  %13665 = xor i8 %13664, 1
  %13666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13665, i8* %13666, align 1
  %13667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13667, align 1
  %13668 = icmp eq i32 %13659, 0
  %13669 = zext i1 %13668 to i8
  %13670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13669, i8* %13670, align 1
  %13671 = lshr i32 %13659, 31
  %13672 = trunc i32 %13671 to i8
  %13673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13672, i8* %13673, align 1
  %13674 = lshr i32 %13659, 31
  %13675 = xor i32 %13671, %13674
  %13676 = add i32 %13675, %13674
  %13677 = icmp eq i32 %13676, 2
  %13678 = zext i1 %13677 to i8
  %13679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13678, i8* %13679, align 1
  store %struct.Memory* %loadMem_48d2cc, %struct.Memory** %MEMORY
  %loadMem_48d2d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13681 = getelementptr inbounds %struct.GPR, %struct.GPR* %13680, i32 0, i32 33
  %13682 = getelementptr inbounds %struct.Reg, %struct.Reg* %13681, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %13682 to i64*
  %13683 = load i64, i64* %PC.i34
  %13684 = add i64 %13683, 64
  %13685 = load i64, i64* %PC.i34
  %13686 = add i64 %13685, 6
  %13687 = load i64, i64* %PC.i34
  %13688 = add i64 %13687, 6
  store i64 %13688, i64* %PC.i34
  %13689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13690 = load i8, i8* %13689, align 1
  %13691 = icmp eq i8 %13690, 0
  %13692 = zext i1 %13691 to i8
  store i8 %13692, i8* %BRANCH_TAKEN, align 1
  %13693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13694 = select i1 %13691, i64 %13684, i64 %13686
  store i64 %13694, i64* %13693, align 8
  store %struct.Memory* %loadMem_48d2d3, %struct.Memory** %MEMORY
  %loadBr_48d2d3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d2d3 = icmp eq i8 %loadBr_48d2d3, 1
  br i1 %cmpBr_48d2d3, label %block_.L_48d313, label %block_48d2d9

block_48d2d9:                                     ; preds = %block_48d2c8
  %loadMem_48d2d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13696 = getelementptr inbounds %struct.GPR, %struct.GPR* %13695, i32 0, i32 33
  %13697 = getelementptr inbounds %struct.Reg, %struct.Reg* %13696, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %13697 to i64*
  %13698 = load i64, i64* %PC.i33
  %13699 = add i64 %13698, 20
  %13700 = load i64, i64* %PC.i33
  %13701 = add i64 %13700, 5
  store i64 %13701, i64* %PC.i33
  %13702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13699, i64* %13702, align 8
  store %struct.Memory* %loadMem_48d2d9, %struct.Memory** %MEMORY
  br label %block_.L_48d2ed

block_.L_48d2de:                                  ; preds = %block_.L_48d2b6
  %loadMem_48d2de = load %struct.Memory*, %struct.Memory** %MEMORY
  %13703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13704 = getelementptr inbounds %struct.GPR, %struct.GPR* %13703, i32 0, i32 33
  %13705 = getelementptr inbounds %struct.Reg, %struct.Reg* %13704, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %13705 to i64*
  %13706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13707 = getelementptr inbounds %struct.GPR, %struct.GPR* %13706, i32 0, i32 1
  %13708 = getelementptr inbounds %struct.Reg, %struct.Reg* %13707, i32 0, i32 0
  %13709 = bitcast %union.anon* %13708 to %struct.anon.2*
  %AL.i32 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13709, i32 0, i32 0
  %13710 = load i64, i64* %PC.i31
  %13711 = add i64 %13710, 2
  store i64 %13711, i64* %PC.i31
  store i8 1, i8* %AL.i32, align 1
  store %struct.Memory* %loadMem_48d2de, %struct.Memory** %MEMORY
  %loadMem_48d2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13713 = getelementptr inbounds %struct.GPR, %struct.GPR* %13712, i32 0, i32 33
  %13714 = getelementptr inbounds %struct.Reg, %struct.Reg* %13713, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %13714 to i64*
  %13715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13716 = getelementptr inbounds %struct.GPR, %struct.GPR* %13715, i32 0, i32 1
  %13717 = getelementptr inbounds %struct.Reg, %struct.Reg* %13716, i32 0, i32 0
  %13718 = bitcast %union.anon* %13717 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13718, i32 0, i32 0
  %13719 = load i8, i8* %AL.i
  %13720 = zext i8 %13719 to i64
  %13721 = load i64, i64* %PC.i30
  %13722 = add i64 %13721, 2
  store i64 %13722, i64* %PC.i30
  %13723 = and i64 1, %13720
  %13724 = trunc i64 %13723 to i8
  %13725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13725, align 1
  %13726 = trunc i64 %13723 to i32
  %13727 = and i32 %13726, 255
  %13728 = call i32 @llvm.ctpop.i32(i32 %13727)
  %13729 = trunc i32 %13728 to i8
  %13730 = and i8 %13729, 1
  %13731 = xor i8 %13730, 1
  %13732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13731, i8* %13732, align 1
  %13733 = icmp eq i8 %13724, 0
  %13734 = zext i1 %13733 to i8
  %13735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13734, i8* %13735, align 1
  %13736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13736, align 1
  %13737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13737, align 1
  %13738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13738, align 1
  store %struct.Memory* %loadMem_48d2e0, %struct.Memory** %MEMORY
  %loadMem_48d2e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13740 = getelementptr inbounds %struct.GPR, %struct.GPR* %13739, i32 0, i32 33
  %13741 = getelementptr inbounds %struct.Reg, %struct.Reg* %13740, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %13741 to i64*
  %13742 = load i64, i64* %PC.i29
  %13743 = add i64 %13742, 11
  %13744 = load i64, i64* %PC.i29
  %13745 = add i64 %13744, 6
  %13746 = load i64, i64* %PC.i29
  %13747 = add i64 %13746, 6
  store i64 %13747, i64* %PC.i29
  %13748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13749 = load i8, i8* %13748, align 1
  %13750 = icmp eq i8 %13749, 0
  %13751 = zext i1 %13750 to i8
  store i8 %13751, i8* %BRANCH_TAKEN, align 1
  %13752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13753 = select i1 %13750, i64 %13743, i64 %13745
  store i64 %13753, i64* %13752, align 8
  store %struct.Memory* %loadMem_48d2e2, %struct.Memory** %MEMORY
  %loadBr_48d2e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d2e2 = icmp eq i8 %loadBr_48d2e2, 1
  br i1 %cmpBr_48d2e2, label %block_.L_48d2ed, label %block_48d2e8

block_48d2e8:                                     ; preds = %block_.L_48d2de
  %loadMem_48d2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13755 = getelementptr inbounds %struct.GPR, %struct.GPR* %13754, i32 0, i32 33
  %13756 = getelementptr inbounds %struct.Reg, %struct.Reg* %13755, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %13756 to i64*
  %13757 = load i64, i64* %PC.i28
  %13758 = add i64 %13757, 43
  %13759 = load i64, i64* %PC.i28
  %13760 = add i64 %13759, 5
  store i64 %13760, i64* %PC.i28
  %13761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13758, i64* %13761, align 8
  store %struct.Memory* %loadMem_48d2e8, %struct.Memory** %MEMORY
  br label %block_.L_48d313

block_.L_48d2ed:                                  ; preds = %block_.L_48d2de, %block_48d2d9, %block_48d2a4
  %loadMem1_48d2ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %13762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13763 = getelementptr inbounds %struct.GPR, %struct.GPR* %13762, i32 0, i32 33
  %13764 = getelementptr inbounds %struct.Reg, %struct.Reg* %13763, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %13764 to i64*
  %13765 = load i64, i64* %PC.i27
  %13766 = add i64 %13765, 83
  %13767 = load i64, i64* %PC.i27
  %13768 = add i64 %13767, 5
  %13769 = load i64, i64* %PC.i27
  %13770 = add i64 %13769, 5
  store i64 %13770, i64* %PC.i27
  %13771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13772 = load i64, i64* %13771, align 8
  %13773 = add i64 %13772, -8
  %13774 = inttoptr i64 %13773 to i64*
  store i64 %13768, i64* %13774
  store i64 %13773, i64* %13771, align 8
  %13775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13766, i64* %13775, align 8
  store %struct.Memory* %loadMem1_48d2ed, %struct.Memory** %MEMORY
  %loadMem2_48d2ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48d2ed = load i64, i64* %3
  %call2_48d2ed = call %struct.Memory* @sub_48d340.field_flag_inference(%struct.State* %0, i64 %loadPC_48d2ed, %struct.Memory* %loadMem2_48d2ed)
  store %struct.Memory* %call2_48d2ed, %struct.Memory** %MEMORY
  %loadMem_48d2f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13777 = getelementptr inbounds %struct.GPR, %struct.GPR* %13776, i32 0, i32 33
  %13778 = getelementptr inbounds %struct.Reg, %struct.Reg* %13777, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %13778 to i64*
  %13779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13780 = getelementptr inbounds %struct.GPR, %struct.GPR* %13779, i32 0, i32 5
  %13781 = getelementptr inbounds %struct.Reg, %struct.Reg* %13780, i32 0, i32 0
  %RCX.i25 = bitcast %union.anon* %13781 to i64*
  %13782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13783 = getelementptr inbounds %struct.GPR, %struct.GPR* %13782, i32 0, i32 15
  %13784 = getelementptr inbounds %struct.Reg, %struct.Reg* %13783, i32 0, i32 0
  %RBP.i26 = bitcast %union.anon* %13784 to i64*
  %13785 = load i64, i64* %RBP.i26
  %13786 = sub i64 %13785, 80
  %13787 = load i64, i64* %PC.i24
  %13788 = add i64 %13787, 4
  store i64 %13788, i64* %PC.i24
  %13789 = inttoptr i64 %13786 to i64*
  %13790 = load i64, i64* %13789
  store i64 %13790, i64* %RCX.i25, align 8
  store %struct.Memory* %loadMem_48d2f2, %struct.Memory** %MEMORY
  %loadMem_48d2f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13792 = getelementptr inbounds %struct.GPR, %struct.GPR* %13791, i32 0, i32 33
  %13793 = getelementptr inbounds %struct.Reg, %struct.Reg* %13792, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %13793 to i64*
  %13794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13795 = getelementptr inbounds %struct.GPR, %struct.GPR* %13794, i32 0, i32 1
  %13796 = getelementptr inbounds %struct.Reg, %struct.Reg* %13795, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %13796 to i32*
  %13797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13798 = getelementptr inbounds %struct.GPR, %struct.GPR* %13797, i32 0, i32 5
  %13799 = getelementptr inbounds %struct.Reg, %struct.Reg* %13798, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %13799 to i64*
  %13800 = load i32, i32* %EAX.i
  %13801 = zext i32 %13800 to i64
  %13802 = load i64, i64* %RCX.i
  %13803 = add i64 %13802, 532
  %13804 = load i64, i64* %PC.i23
  %13805 = add i64 %13804, 6
  store i64 %13805, i64* %PC.i23
  %13806 = inttoptr i64 %13803 to i32*
  %13807 = load i32, i32* %13806
  %13808 = sub i32 %13800, %13807
  %13809 = icmp ult i32 %13800, %13807
  %13810 = zext i1 %13809 to i8
  %13811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13810, i8* %13811, align 1
  %13812 = and i32 %13808, 255
  %13813 = call i32 @llvm.ctpop.i32(i32 %13812)
  %13814 = trunc i32 %13813 to i8
  %13815 = and i8 %13814, 1
  %13816 = xor i8 %13815, 1
  %13817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13816, i8* %13817, align 1
  %13818 = xor i32 %13807, %13800
  %13819 = xor i32 %13818, %13808
  %13820 = lshr i32 %13819, 4
  %13821 = trunc i32 %13820 to i8
  %13822 = and i8 %13821, 1
  %13823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13822, i8* %13823, align 1
  %13824 = icmp eq i32 %13808, 0
  %13825 = zext i1 %13824 to i8
  %13826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13825, i8* %13826, align 1
  %13827 = lshr i32 %13808, 31
  %13828 = trunc i32 %13827 to i8
  %13829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13828, i8* %13829, align 1
  %13830 = lshr i32 %13800, 31
  %13831 = lshr i32 %13807, 31
  %13832 = xor i32 %13831, %13830
  %13833 = xor i32 %13827, %13830
  %13834 = add i32 %13833, %13832
  %13835 = icmp eq i32 %13834, 2
  %13836 = zext i1 %13835 to i8
  %13837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13836, i8* %13837, align 1
  store %struct.Memory* %loadMem_48d2f6, %struct.Memory** %MEMORY
  %loadMem_48d2fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13839 = getelementptr inbounds %struct.GPR, %struct.GPR* %13838, i32 0, i32 33
  %13840 = getelementptr inbounds %struct.Reg, %struct.Reg* %13839, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %13840 to i64*
  %13841 = load i64, i64* %PC.i22
  %13842 = add i64 %13841, 18
  %13843 = load i64, i64* %PC.i22
  %13844 = add i64 %13843, 6
  %13845 = load i64, i64* %PC.i22
  %13846 = add i64 %13845, 6
  store i64 %13846, i64* %PC.i22
  %13847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13848 = load i8, i8* %13847, align 1
  store i8 %13848, i8* %BRANCH_TAKEN, align 1
  %13849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13850 = icmp ne i8 %13848, 0
  %13851 = select i1 %13850, i64 %13842, i64 %13844
  store i64 %13851, i64* %13849, align 8
  store %struct.Memory* %loadMem_48d2fc, %struct.Memory** %MEMORY
  %loadBr_48d2fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48d2fc = icmp eq i8 %loadBr_48d2fc, 1
  br i1 %cmpBr_48d2fc, label %block_.L_48d30e, label %block_48d302

block_48d302:                                     ; preds = %block_.L_48d2ed
  %loadMem_48d302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13853 = getelementptr inbounds %struct.GPR, %struct.GPR* %13852, i32 0, i32 33
  %13854 = getelementptr inbounds %struct.Reg, %struct.Reg* %13853, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %13854 to i64*
  %13855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13856 = getelementptr inbounds %struct.GPR, %struct.GPR* %13855, i32 0, i32 15
  %13857 = getelementptr inbounds %struct.Reg, %struct.Reg* %13856, i32 0, i32 0
  %RBP.i21 = bitcast %union.anon* %13857 to i64*
  %13858 = load i64, i64* %RBP.i21
  %13859 = sub i64 %13858, 4
  %13860 = load i64, i64* %PC.i20
  %13861 = add i64 %13860, 7
  store i64 %13861, i64* %PC.i20
  %13862 = inttoptr i64 %13859 to i32*
  store i32 0, i32* %13862
  store %struct.Memory* %loadMem_48d302, %struct.Memory** %MEMORY
  %loadMem_48d309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13864 = getelementptr inbounds %struct.GPR, %struct.GPR* %13863, i32 0, i32 33
  %13865 = getelementptr inbounds %struct.Reg, %struct.Reg* %13864, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %13865 to i64*
  %13866 = load i64, i64* %PC.i19
  %13867 = add i64 %13866, 40
  %13868 = load i64, i64* %PC.i19
  %13869 = add i64 %13868, 5
  store i64 %13869, i64* %PC.i19
  %13870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13867, i64* %13870, align 8
  store %struct.Memory* %loadMem_48d309, %struct.Memory** %MEMORY
  br label %block_.L_48d331

block_.L_48d30e:                                  ; preds = %block_.L_48d2ed
  %loadMem_48d30e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13872 = getelementptr inbounds %struct.GPR, %struct.GPR* %13871, i32 0, i32 33
  %13873 = getelementptr inbounds %struct.Reg, %struct.Reg* %13872, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %13873 to i64*
  %13874 = load i64, i64* %PC.i18
  %13875 = add i64 %13874, 5
  %13876 = load i64, i64* %PC.i18
  %13877 = add i64 %13876, 5
  store i64 %13877, i64* %PC.i18
  %13878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13875, i64* %13878, align 8
  store %struct.Memory* %loadMem_48d30e, %struct.Memory** %MEMORY
  br label %block_.L_48d313

block_.L_48d313:                                  ; preds = %block_.L_48d30e, %block_48d2e8, %block_48d2c8, %block_48d2b1
  %loadMem_48d313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13880 = getelementptr inbounds %struct.GPR, %struct.GPR* %13879, i32 0, i32 33
  %13881 = getelementptr inbounds %struct.Reg, %struct.Reg* %13880, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %13881 to i64*
  %13882 = load i64, i64* %PC.i17
  %13883 = add i64 %13882, 5
  %13884 = load i64, i64* %PC.i17
  %13885 = add i64 %13884, 5
  store i64 %13885, i64* %PC.i17
  %13886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13883, i64* %13886, align 8
  store %struct.Memory* %loadMem_48d313, %struct.Memory** %MEMORY
  br label %block_.L_48d318

block_.L_48d318:                                  ; preds = %block_.L_48d313, %routine_idivl__esi.exit
  %loadMem_48d318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13888 = getelementptr inbounds %struct.GPR, %struct.GPR* %13887, i32 0, i32 33
  %13889 = getelementptr inbounds %struct.Reg, %struct.Reg* %13888, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %13889 to i64*
  %13890 = load i64, i64* %PC.i16
  %13891 = add i64 %13890, 5
  %13892 = load i64, i64* %PC.i16
  %13893 = add i64 %13892, 5
  store i64 %13893, i64* %PC.i16
  %13894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13891, i64* %13894, align 8
  store %struct.Memory* %loadMem_48d318, %struct.Memory** %MEMORY
  br label %block_.L_48d31d

block_.L_48d31d:                                  ; preds = %block_.L_48d318, %block_48d267, %block_48d247, %block_48d230, %block_.L_48d204
  %loadMem_48d31d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13896 = getelementptr inbounds %struct.GPR, %struct.GPR* %13895, i32 0, i32 33
  %13897 = getelementptr inbounds %struct.Reg, %struct.Reg* %13896, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %13897 to i64*
  %13898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13899 = getelementptr inbounds %struct.GPR, %struct.GPR* %13898, i32 0, i32 15
  %13900 = getelementptr inbounds %struct.Reg, %struct.Reg* %13899, i32 0, i32 0
  %RBP.i15 = bitcast %union.anon* %13900 to i64*
  %13901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13902 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13901, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %13902 to %"class.std::bitset"*
  %13903 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %13904 = load i64, i64* %RBP.i15
  %13905 = sub i64 %13904, 72
  %13906 = load i64, i64* %PC.i14
  %13907 = add i64 %13906, 5
  store i64 %13907, i64* %PC.i14
  %13908 = inttoptr i64 %13905 to double*
  %13909 = load double, double* %13908
  %13910 = bitcast i8* %13903 to double*
  store double %13909, double* %13910, align 1
  %13911 = getelementptr inbounds i8, i8* %13903, i64 8
  %13912 = bitcast i8* %13911 to double*
  store double 0.000000e+00, double* %13912, align 1
  store %struct.Memory* %loadMem_48d31d, %struct.Memory** %MEMORY
  %loadMem_48d322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13914 = getelementptr inbounds %struct.GPR, %struct.GPR* %13913, i32 0, i32 33
  %13915 = getelementptr inbounds %struct.Reg, %struct.Reg* %13914, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %13915 to i64*
  %13916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13917 = getelementptr inbounds %struct.GPR, %struct.GPR* %13916, i32 0, i32 1
  %13918 = getelementptr inbounds %struct.Reg, %struct.Reg* %13917, i32 0, i32 0
  %RAX.i12 = bitcast %union.anon* %13918 to i64*
  %13919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13920 = getelementptr inbounds %struct.GPR, %struct.GPR* %13919, i32 0, i32 15
  %13921 = getelementptr inbounds %struct.Reg, %struct.Reg* %13920, i32 0, i32 0
  %RBP.i13 = bitcast %union.anon* %13921 to i64*
  %13922 = load i64, i64* %RBP.i13
  %13923 = sub i64 %13922, 32
  %13924 = load i64, i64* %PC.i11
  %13925 = add i64 %13924, 4
  store i64 %13925, i64* %PC.i11
  %13926 = inttoptr i64 %13923 to i64*
  %13927 = load i64, i64* %13926
  store i64 %13927, i64* %RAX.i12, align 8
  store %struct.Memory* %loadMem_48d322, %struct.Memory** %MEMORY
  %loadMem_48d326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13929 = getelementptr inbounds %struct.GPR, %struct.GPR* %13928, i32 0, i32 33
  %13930 = getelementptr inbounds %struct.Reg, %struct.Reg* %13929, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %13930 to i64*
  %13931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13932 = getelementptr inbounds %struct.GPR, %struct.GPR* %13931, i32 0, i32 1
  %13933 = getelementptr inbounds %struct.Reg, %struct.Reg* %13932, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %13933 to i64*
  %13934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13935 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13934, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %13935 to %union.vec128_t*
  %13936 = load i64, i64* %RAX.i10
  %13937 = bitcast %union.vec128_t* %XMM0.i to i8*
  %13938 = load i64, i64* %PC.i9
  %13939 = add i64 %13938, 4
  store i64 %13939, i64* %PC.i9
  %13940 = bitcast i8* %13937 to double*
  %13941 = load double, double* %13940, align 1
  %13942 = inttoptr i64 %13936 to double*
  store double %13941, double* %13942
  store %struct.Memory* %loadMem_48d326, %struct.Memory** %MEMORY
  %loadMem_48d32a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13944 = getelementptr inbounds %struct.GPR, %struct.GPR* %13943, i32 0, i32 33
  %13945 = getelementptr inbounds %struct.Reg, %struct.Reg* %13944, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %13945 to i64*
  %13946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13947 = getelementptr inbounds %struct.GPR, %struct.GPR* %13946, i32 0, i32 15
  %13948 = getelementptr inbounds %struct.Reg, %struct.Reg* %13947, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %13948 to i64*
  %13949 = load i64, i64* %RBP.i8
  %13950 = sub i64 %13949, 4
  %13951 = load i64, i64* %PC.i7
  %13952 = add i64 %13951, 7
  store i64 %13952, i64* %PC.i7
  %13953 = inttoptr i64 %13950 to i32*
  store i32 1, i32* %13953
  store %struct.Memory* %loadMem_48d32a, %struct.Memory** %MEMORY
  br label %block_.L_48d331

block_.L_48d331:                                  ; preds = %block_.L_48d31d, %block_48d302, %block_.L_48d1f8, %block_48c79e, %block_48c72a
  %loadMem_48d331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13955 = getelementptr inbounds %struct.GPR, %struct.GPR* %13954, i32 0, i32 33
  %13956 = getelementptr inbounds %struct.Reg, %struct.Reg* %13955, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %13956 to i64*
  %13957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13958 = getelementptr inbounds %struct.GPR, %struct.GPR* %13957, i32 0, i32 1
  %13959 = getelementptr inbounds %struct.Reg, %struct.Reg* %13958, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %13959 to i64*
  %13960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13961 = getelementptr inbounds %struct.GPR, %struct.GPR* %13960, i32 0, i32 15
  %13962 = getelementptr inbounds %struct.Reg, %struct.Reg* %13961, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %13962 to i64*
  %13963 = load i64, i64* %RBP.i6
  %13964 = sub i64 %13963, 4
  %13965 = load i64, i64* %PC.i5
  %13966 = add i64 %13965, 3
  store i64 %13966, i64* %PC.i5
  %13967 = inttoptr i64 %13964 to i32*
  %13968 = load i32, i32* %13967
  %13969 = zext i32 %13968 to i64
  store i64 %13969, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_48d331, %struct.Memory** %MEMORY
  %loadMem_48d334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13971 = getelementptr inbounds %struct.GPR, %struct.GPR* %13970, i32 0, i32 33
  %13972 = getelementptr inbounds %struct.Reg, %struct.Reg* %13971, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %13972 to i64*
  %13973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13974 = getelementptr inbounds %struct.GPR, %struct.GPR* %13973, i32 0, i32 13
  %13975 = getelementptr inbounds %struct.Reg, %struct.Reg* %13974, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %13975 to i64*
  %13976 = load i64, i64* %RSP.i
  %13977 = load i64, i64* %PC.i4
  %13978 = add i64 %13977, 7
  store i64 %13978, i64* %PC.i4
  %13979 = add i64 192, %13976
  store i64 %13979, i64* %RSP.i, align 8
  %13980 = icmp ult i64 %13979, %13976
  %13981 = icmp ult i64 %13979, 192
  %13982 = or i1 %13980, %13981
  %13983 = zext i1 %13982 to i8
  %13984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13983, i8* %13984, align 1
  %13985 = trunc i64 %13979 to i32
  %13986 = and i32 %13985, 255
  %13987 = call i32 @llvm.ctpop.i32(i32 %13986)
  %13988 = trunc i32 %13987 to i8
  %13989 = and i8 %13988, 1
  %13990 = xor i8 %13989, 1
  %13991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13990, i8* %13991, align 1
  %13992 = xor i64 192, %13976
  %13993 = xor i64 %13992, %13979
  %13994 = lshr i64 %13993, 4
  %13995 = trunc i64 %13994 to i8
  %13996 = and i8 %13995, 1
  %13997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13996, i8* %13997, align 1
  %13998 = icmp eq i64 %13979, 0
  %13999 = zext i1 %13998 to i8
  %14000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13999, i8* %14000, align 1
  %14001 = lshr i64 %13979, 63
  %14002 = trunc i64 %14001 to i8
  %14003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14002, i8* %14003, align 1
  %14004 = lshr i64 %13976, 63
  %14005 = xor i64 %14001, %14004
  %14006 = add i64 %14005, %14001
  %14007 = icmp eq i64 %14006, 2
  %14008 = zext i1 %14007 to i8
  %14009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14008, i8* %14009, align 1
  store %struct.Memory* %loadMem_48d334, %struct.Memory** %MEMORY
  %loadMem_48d33b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14011 = getelementptr inbounds %struct.GPR, %struct.GPR* %14010, i32 0, i32 33
  %14012 = getelementptr inbounds %struct.Reg, %struct.Reg* %14011, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %14012 to i64*
  %14013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14014 = getelementptr inbounds %struct.GPR, %struct.GPR* %14013, i32 0, i32 15
  %14015 = getelementptr inbounds %struct.Reg, %struct.Reg* %14014, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %14015 to i64*
  %14016 = load i64, i64* %PC.i2
  %14017 = add i64 %14016, 1
  store i64 %14017, i64* %PC.i2
  %14018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14019 = load i64, i64* %14018, align 8
  %14020 = add i64 %14019, 8
  %14021 = inttoptr i64 %14019 to i64*
  %14022 = load i64, i64* %14021
  store i64 %14022, i64* %RBP.i3, align 8
  store i64 %14020, i64* %14018, align 8
  store %struct.Memory* %loadMem_48d33b, %struct.Memory** %MEMORY
  %loadMem_48d33c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14024 = getelementptr inbounds %struct.GPR, %struct.GPR* %14023, i32 0, i32 33
  %14025 = getelementptr inbounds %struct.Reg, %struct.Reg* %14024, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %14025 to i64*
  %14026 = load i64, i64* %PC.i1
  %14027 = add i64 %14026, 1
  store i64 %14027, i64* %PC.i1
  %14028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14030 = load i64, i64* %14029, align 8
  %14031 = inttoptr i64 %14030 to i64*
  %14032 = load i64, i64* %14031
  store i64 %14032, i64* %14028, align 8
  %14033 = add i64 %14030, 8
  store i64 %14033, i64* %14029, align 8
  store %struct.Memory* %loadMem_48d33c, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_48d33c
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0xc0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 192
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 192
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 192, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 16
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 0, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rax___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48c61a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c62a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x88__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl___dl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %DL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sete__sil(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %SIL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___sil(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %SIL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %SIL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__sil___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %SIL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__dl__MINUS0x89__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 137
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48c684(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x934__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2356
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setne__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x89__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 137
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x89__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 137
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.SetModesAndRefframeForBlocks(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48c761(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48c761(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x98__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x9c__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c75c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c749(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722cb8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722cb8_type* @G_0x722cb8 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x78__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x2c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___rax__rdx_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = sext i16 %22 to i64
  %24 = and i64 %23, 4294967295
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c736(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d331(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c73b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c6f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c74e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c6e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c761(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c7af(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.LumaResidualCoding(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48c7aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x1cc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 460
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x23c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 572
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48ca37(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48c7c7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.SetCoeffAndReconstruction8x8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48ca32(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x9__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 9
  %16 = icmp ult i32 %14, 9
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 9
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48c8e7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x6c__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x10__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Mode_Decision_for_Intra4x4Macroblock(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x1cc__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 460
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48c8e2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c89f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c88c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c879(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d0920___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d0920_type* @G__0x6d0920 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %19, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = xor i32 %31, %34
  %36 = add i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48c866(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 2, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c86b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c827(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c87e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c816(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c891(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c805(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 116
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 116
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c8cc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.dct_chroma_DC(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c8a6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x1cc__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 460
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x1cc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 460
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48ca2d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xa__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 10
  %16 = icmp ult i32 %14, 10
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 10
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48c903(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x24__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Intra16x16_Mode_Decision(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48ca28(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xd__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 13
  %16 = icmp ult i32 %14, 13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 13
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48ca23(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Mode_Decision_for_new_Intra8x8Macroblock(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48ca1e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c9db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c9c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48c9b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48c9a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c9a7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c963(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c9ba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c952(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c9cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c941(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48ca08(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48c9e2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48ca23(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x9a0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48ca93(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48ca93(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48ca76(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48ca86(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967295, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x90__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.compute_residue_mb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48cb2e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48cb29(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48cb16(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cc660___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cc660_type* @G__0x6cc660 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x12b8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 4792, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4792
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4792, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 8
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cab5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cb1b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48caa4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cbb4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48cbaf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48cb9c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cb46(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cba1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cb35(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11abc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72380
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 108
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48cc00(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48cc1e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11bfc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.ChromaResidualCoding(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48cc48(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x1cc__rax____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.I16Offset(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11abc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72380
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48cdb9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48cdb9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0xb58__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 2904
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48cd87(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.decode_one_mb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48cd74(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xa8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xa8__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x10___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 16, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 16
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 16, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48cd61(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x11860__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71776
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x726418___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x726418_type* @G_0x726418 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xac__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb918___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb918_type* @G_0x6cb918 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xac__rdx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rax__rcx_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sext i32 %19 to i64
  store i64 %20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq_MINUS0x40__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = add i64 %18, %12
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i64 %19, %12
  %21 = icmp ult i64 %19, %18
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = trunc i64 %19 to i32
  %26 = and i32 %25, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i64 %18, %12
  %33 = xor i64 %32, %19
  %34 = lshr i64 %33, 4
  %35 = trunc i64 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i64 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %19, 63
  %42 = trunc i64 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i64 %12, 63
  %45 = lshr i64 %18, 63
  %46 = xor i64 %41, %44
  %47 = xor i64 %41, %45
  %48 = add i64 %46, %47
  %49 = icmp eq i64 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48ccbb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cd66(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cca0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cd79(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cc76(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xb58__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2904
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cqto(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = ashr i64 %10, 63
  store i64 %11, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x98__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivq__rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = sext i64 %9 to i128
  %17 = and i128 %16, -18446744073709551616
  %18 = zext i64 %15 to i128
  %19 = shl i128 %18, 64
  %20 = zext i64 %13 to i128
  %21 = or i128 %19, %20
  %22 = zext i64 %9 to i128
  %23 = or i128 %17, %22
  %24 = sdiv i128 %21, %23
  %25 = trunc i128 %24 to i64
  %26 = and i128 %24, 18446744073709551615
  %27 = sext i64 %25 to i128
  %28 = and i128 %27, -18446744073709551616
  %29 = or i128 %28, %26
  %30 = icmp eq i128 %24, %29
  br i1 %30, label %35, label %31

; <label>:31:                                     ; preds = %block_400488
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %33, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVrdxraxI2RnImEEEP6MemoryS4_R5StateT_.exit

; <label>:35:                                     ; preds = %block_400488
  %36 = srem i128 %21, %23
  %37 = trunc i128 %36 to i64
  store i64 %25, i64* %12, align 8
  store i64 %37, i64* %14, align 8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %43, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVrdxraxI2RnImEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVrdxraxI2RnImEEEP6MemoryS4_R5StateT_.exit: ; preds = %31, %35
  %44 = phi %struct.Memory* [ %34, %31 ], [ %2, %35 ]
  ret %struct.Memory* %44
}

define %struct.Memory* @routine_jmpq_.L_48ce94(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48ce8f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48ce7c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0xac__rsi____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 172
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rsi_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1918__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x9c__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rsi_2____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cddb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48ce81(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48cdc0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48d021(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11c08__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 72712
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48d01c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb0__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb0__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11c04__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 72708
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48d009(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f6f90___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0xb4__rsi____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 180
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1940__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xa4__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48ced8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d00e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48ceb0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d021(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cc628___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cc628_type* @G_0x6cc628 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.store_coding_state(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 100
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48d104(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x48__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48d061(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48d0ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x78__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.writeMBLayer(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x68__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x6c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.ue_linfo(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x78__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d0ff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x34__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x78__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x9c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x78__rax____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d111(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.reset_coding_state(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x24762__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x24762__rip__type* @G_0x24762__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdq_MINUS0x40__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sitofp i64 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x10__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x34__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm3___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM3 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 168
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 176
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_48d165(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x24730__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x24730__rip__type* @G_0x24730__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 184
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d172(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x34__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x2483e__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x2483e__rip__type* @G_0x2483e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xa8__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xb0__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm2___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 72
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x48__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd___rax____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = bitcast i8* %12 to double*
  %17 = load double, double* %16, align 1
  %18 = getelementptr inbounds i8, i8* %12, i64 8
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 1
  %21 = inttoptr i64 %13 to double*
  %22 = load double, double* %21
  %23 = fsub double %17, %22
  %24 = bitcast i8* %11 to double*
  store double %23, double* %24, align 1
  %25 = getelementptr inbounds i8, i8* %11, i64 8
  %26 = bitcast i8* %25 to i64*
  store i64 %20, i64* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jae_.L_48d1f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x28__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11bdc__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48d204(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11c00__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72704
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = trunc i64 %14 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = icmp eq i64 %14, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %14, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %14, 63
  %31 = xor i64 %27, %30
  %32 = add i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48d204(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48d31d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48d235(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testb__0x1___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %CL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48d26c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d31d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48d25d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48d31d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d26c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48d318(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48d2b6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48d2ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d313(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48d2de(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48d313(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d2ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.field_flag_inference(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x214__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 532
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_48d30e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48d318(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RAX
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %12 to double*
  %16 = load double, double* %15, align 1
  %17 = inttoptr i64 %11 to double*
  store double %16, double* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xc0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 192, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 192
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 192, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
