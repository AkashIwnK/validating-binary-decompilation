; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%G__0x4b23a0_type = type <{ [8 x i8] }>
%G__0x6d09f0_type = type <{ [8 x i8] }>
%G__0x70d010_type = type <{ [8 x i8] }>
%G__0x70e8f0_type = type <{ [8 x i8] }>
%G__0x70fe80_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb8f8 = global %G_0x6cb8f8_type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G__0x4b23a0 = global %G__0x4b23a0_type zeroinitializer
@G__0x6d09f0 = global %G__0x6d09f0_type zeroinitializer
@G__0x70d010 = global %G__0x70d010_type zeroinitializer
@G__0x70e8f0 = global %G__0x70e8f0_type zeroinitializer
@G__0x70fe80 = global %G__0x70fe80_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_475150.sign(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @dct_luma(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_406250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_406250, %struct.Memory** %MEMORY
  %loadMem_406251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1868 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1869 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1870 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1869
  %27 = load i64, i64* %PC.i1868
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1868
  store i64 %26, i64* %RBP.i1870, align 8
  store %struct.Memory* %loadMem_406251, %struct.Memory** %MEMORY
  %loadMem_406254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1952 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1953 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1953
  %36 = load i64, i64* %PC.i1952
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1952
  %38 = sub i64 %35, 256
  store i64 %38, i64* %RSP.i1953, align 8
  %39 = icmp ult i64 %35, 256
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 256, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_406254, %struct.Memory** %MEMORY
  %loadMem_40625b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1981 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EAX.i1982 = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 1
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RAX.i1983 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RAX.i1983
  %77 = load i32, i32* %EAX.i1982
  %78 = zext i32 %77 to i64
  %79 = load i64, i64* %PC.i1981
  %80 = add i64 %79, 2
  store i64 %80, i64* %PC.i1981
  %81 = xor i64 %78, %76
  %82 = trunc i64 %81 to i32
  %83 = and i64 %81, 4294967295
  store i64 %83, i64* %RAX.i1983, align 8
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %84, align 1
  %85 = and i32 %82, 255
  %86 = call i32 @llvm.ctpop.i32(i32 %85)
  %87 = trunc i32 %86 to i8
  %88 = and i8 %87, 1
  %89 = xor i8 %88, 1
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %89, i8* %90, align 1
  %91 = icmp eq i32 %82, 0
  %92 = zext i1 %91 to i8
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %92, i8* %93, align 1
  %94 = lshr i32 %82, 31
  %95 = trunc i32 %94 to i8
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %95, i8* %96, align 1
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %98, align 1
  store %struct.Memory* %loadMem_40625b, %struct.Memory** %MEMORY
  %loadMem_40625d = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i2554 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 1
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %105 = bitcast %union.anon* %104 to %struct.anon.2*
  %AL.i2555 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %105, i32 0, i32 0
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 17
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %109 = bitcast %union.anon* %108 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %109, i32 0, i32 0
  %110 = load i8, i8* %AL.i2555
  %111 = zext i8 %110 to i64
  %112 = load i64, i64* %PC.i2554
  %113 = add i64 %112, 3
  store i64 %113, i64* %PC.i2554
  store i8 %110, i8* %R8B.i, align 1
  store %struct.Memory* %loadMem_40625d, %struct.Memory** %MEMORY
  %loadMem_406260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 33
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %PC.i2576 = bitcast %union.anon* %116 to i64*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 1
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %RAX.i2577 = bitcast %union.anon* %119 to i64*
  %120 = load i64, i64* %PC.i2576
  %121 = add i64 %120, 5
  store i64 %121, i64* %PC.i2576
  store i64 2, i64* %RAX.i2577, align 8
  store %struct.Memory* %loadMem_406260, %struct.Memory** %MEMORY
  %loadMem_406265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %123 = getelementptr inbounds %struct.GPR, %struct.GPR* %122, i32 0, i32 33
  %124 = getelementptr inbounds %struct.Reg, %struct.Reg* %123, i32 0, i32 0
  %PC.i2702 = bitcast %union.anon* %124 to i64*
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %126 = getelementptr inbounds %struct.GPR, %struct.GPR* %125, i32 0, i32 19
  %127 = getelementptr inbounds %struct.Reg, %struct.Reg* %126, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %127 to i32*
  %128 = bitcast i32* %R9D.i to i64*
  %129 = load i64, i64* %PC.i2702
  %130 = add i64 %129, 6
  store i64 %130, i64* %PC.i2702
  store i64 4, i64* %128, align 8
  store %struct.Memory* %loadMem_406265, %struct.Memory** %MEMORY
  %loadMem_40626b = load %struct.Memory*, %struct.Memory** %MEMORY
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 33
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %PC.i2718 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 11
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %EDI.i2719 = bitcast %union.anon* %136 to i32*
  %137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %138 = getelementptr inbounds %struct.GPR, %struct.GPR* %137, i32 0, i32 15
  %139 = getelementptr inbounds %struct.Reg, %struct.Reg* %138, i32 0, i32 0
  %RBP.i2720 = bitcast %union.anon* %139 to i64*
  %140 = load i64, i64* %RBP.i2720
  %141 = sub i64 %140, 4
  %142 = load i32, i32* %EDI.i2719
  %143 = zext i32 %142 to i64
  %144 = load i64, i64* %PC.i2718
  %145 = add i64 %144, 3
  store i64 %145, i64* %PC.i2718
  %146 = inttoptr i64 %141 to i32*
  store i32 %142, i32* %146
  store %struct.Memory* %loadMem_40626b, %struct.Memory** %MEMORY
  %loadMem_40626e = load %struct.Memory*, %struct.Memory** %MEMORY
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 33
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %PC.i2737 = bitcast %union.anon* %149 to i64*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI.i2738 = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 15
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %RBP.i2739 = bitcast %union.anon* %155 to i64*
  %156 = load i64, i64* %RBP.i2739
  %157 = sub i64 %156, 8
  %158 = load i32, i32* %ESI.i2738
  %159 = zext i32 %158 to i64
  %160 = load i64, i64* %PC.i2737
  %161 = add i64 %160, 3
  store i64 %161, i64* %PC.i2737
  %162 = inttoptr i64 %157 to i32*
  store i32 %158, i32* %162
  store %struct.Memory* %loadMem_40626e, %struct.Memory** %MEMORY
  %loadMem_406271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %164 = getelementptr inbounds %struct.GPR, %struct.GPR* %163, i32 0, i32 33
  %165 = getelementptr inbounds %struct.Reg, %struct.Reg* %164, i32 0, i32 0
  %PC.i2755 = bitcast %union.anon* %165 to i64*
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %167 = getelementptr inbounds %struct.GPR, %struct.GPR* %166, i32 0, i32 7
  %168 = getelementptr inbounds %struct.Reg, %struct.Reg* %167, i32 0, i32 0
  %RDX.i2756 = bitcast %union.anon* %168 to i64*
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 15
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %RBP.i2757 = bitcast %union.anon* %171 to i64*
  %172 = load i64, i64* %RBP.i2757
  %173 = sub i64 %172, 16
  %174 = load i64, i64* %RDX.i2756
  %175 = load i64, i64* %PC.i2755
  %176 = add i64 %175, 4
  store i64 %176, i64* %PC.i2755
  %177 = inttoptr i64 %173 to i64*
  store i64 %174, i64* %177
  store %struct.Memory* %loadMem_406271, %struct.Memory** %MEMORY
  %loadMem_406275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %179 = getelementptr inbounds %struct.GPR, %struct.GPR* %178, i32 0, i32 33
  %180 = getelementptr inbounds %struct.Reg, %struct.Reg* %179, i32 0, i32 0
  %PC.i2770 = bitcast %union.anon* %180 to i64*
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %182 = getelementptr inbounds %struct.GPR, %struct.GPR* %181, i32 0, i32 5
  %183 = getelementptr inbounds %struct.Reg, %struct.Reg* %182, i32 0, i32 0
  %ECX.i2771 = bitcast %union.anon* %183 to i32*
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %185 = getelementptr inbounds %struct.GPR, %struct.GPR* %184, i32 0, i32 15
  %186 = getelementptr inbounds %struct.Reg, %struct.Reg* %185, i32 0, i32 0
  %RBP.i2772 = bitcast %union.anon* %186 to i64*
  %187 = load i64, i64* %RBP.i2772
  %188 = sub i64 %187, 20
  %189 = load i32, i32* %ECX.i2771
  %190 = zext i32 %189 to i64
  %191 = load i64, i64* %PC.i2770
  %192 = add i64 %191, 3
  store i64 %192, i64* %PC.i2770
  %193 = inttoptr i64 %188 to i32*
  store i32 %189, i32* %193
  store %struct.Memory* %loadMem_406275, %struct.Memory** %MEMORY
  %loadMem_406278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %195 = getelementptr inbounds %struct.GPR, %struct.GPR* %194, i32 0, i32 33
  %196 = getelementptr inbounds %struct.Reg, %struct.Reg* %195, i32 0, i32 0
  %PC.i2783 = bitcast %union.anon* %196 to i64*
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %198 = getelementptr inbounds %struct.GPR, %struct.GPR* %197, i32 0, i32 5
  %199 = getelementptr inbounds %struct.Reg, %struct.Reg* %198, i32 0, i32 0
  %RCX.i2784 = bitcast %union.anon* %199 to i64*
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %201 = getelementptr inbounds %struct.GPR, %struct.GPR* %200, i32 0, i32 15
  %202 = getelementptr inbounds %struct.Reg, %struct.Reg* %201, i32 0, i32 0
  %RBP.i2785 = bitcast %union.anon* %202 to i64*
  %203 = load i64, i64* %RBP.i2785
  %204 = sub i64 %203, 4
  %205 = load i64, i64* %PC.i2783
  %206 = add i64 %205, 3
  store i64 %206, i64* %PC.i2783
  %207 = inttoptr i64 %204 to i32*
  %208 = load i32, i32* %207
  %209 = zext i32 %208 to i64
  store i64 %209, i64* %RCX.i2784, align 8
  store %struct.Memory* %loadMem_406278, %struct.Memory** %MEMORY
  %loadMem_40627b = load %struct.Memory*, %struct.Memory** %MEMORY
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 33
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %PC.i2790 = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 1
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %EAX.i2791 = bitcast %union.anon* %215 to i32*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 15
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %RBP.i2792 = bitcast %union.anon* %218 to i64*
  %219 = load i64, i64* %RBP.i2792
  %220 = sub i64 %219, 160
  %221 = load i32, i32* %EAX.i2791
  %222 = zext i32 %221 to i64
  %223 = load i64, i64* %PC.i2790
  %224 = add i64 %223, 6
  store i64 %224, i64* %PC.i2790
  %225 = inttoptr i64 %220 to i32*
  store i32 %221, i32* %225
  store %struct.Memory* %loadMem_40627b, %struct.Memory** %MEMORY
  %loadMem_406281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %227 = getelementptr inbounds %struct.GPR, %struct.GPR* %226, i32 0, i32 33
  %228 = getelementptr inbounds %struct.Reg, %struct.Reg* %227, i32 0, i32 0
  %PC.i2787 = bitcast %union.anon* %228 to i64*
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %230 = getelementptr inbounds %struct.GPR, %struct.GPR* %229, i32 0, i32 5
  %231 = getelementptr inbounds %struct.Reg, %struct.Reg* %230, i32 0, i32 0
  %ECX.i2788 = bitcast %union.anon* %231 to i32*
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %233 = getelementptr inbounds %struct.GPR, %struct.GPR* %232, i32 0, i32 1
  %234 = getelementptr inbounds %struct.Reg, %struct.Reg* %233, i32 0, i32 0
  %RAX.i2789 = bitcast %union.anon* %234 to i64*
  %235 = load i32, i32* %ECX.i2788
  %236 = zext i32 %235 to i64
  %237 = load i64, i64* %PC.i2787
  %238 = add i64 %237, 2
  store i64 %238, i64* %PC.i2787
  %239 = and i64 %236, 4294967295
  store i64 %239, i64* %RAX.i2789, align 8
  store %struct.Memory* %loadMem_406281, %struct.Memory** %MEMORY
  %loadMem_406283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %241 = getelementptr inbounds %struct.GPR, %struct.GPR* %240, i32 0, i32 33
  %242 = getelementptr inbounds %struct.Reg, %struct.Reg* %241, i32 0, i32 0
  %PC.i2786 = bitcast %union.anon* %242 to i64*
  %243 = load i64, i64* %PC.i2786
  %244 = add i64 %243, 1
  store i64 %244, i64* %PC.i2786
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %247 = bitcast %union.anon* %246 to i32*
  %248 = load i32, i32* %247, align 8
  %249 = sext i32 %248 to i64
  %250 = lshr i64 %249, 32
  store i64 %250, i64* %245, align 8
  store %struct.Memory* %loadMem_406283, %struct.Memory** %MEMORY
  %loadMem_406284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %252 = getelementptr inbounds %struct.GPR, %struct.GPR* %251, i32 0, i32 33
  %253 = getelementptr inbounds %struct.Reg, %struct.Reg* %252, i32 0, i32 0
  %PC.i2780 = bitcast %union.anon* %253 to i64*
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %255 = getelementptr inbounds %struct.GPR, %struct.GPR* %254, i32 0, i32 19
  %256 = getelementptr inbounds %struct.Reg, %struct.Reg* %255, i32 0, i32 0
  %R9D.i2781 = bitcast %union.anon* %256 to i32*
  %257 = load i32, i32* %R9D.i2781
  %258 = zext i32 %257 to i64
  %259 = load i64, i64* %PC.i2780
  %260 = add i64 %259, 3
  store i64 %260, i64* %PC.i2780
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %262 = bitcast %union.anon* %261 to i32*
  %263 = load i32, i32* %262, align 8
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %266 = bitcast %union.anon* %265 to i32*
  %267 = load i32, i32* %266, align 8
  %268 = zext i32 %267 to i64
  %269 = shl i64 %258, 32
  %270 = ashr exact i64 %269, 32
  %271 = shl i64 %268, 32
  %272 = or i64 %271, %264
  %273 = sdiv i64 %272, %270
  %274 = shl i64 %273, 32
  %275 = ashr exact i64 %274, 32
  %276 = icmp eq i64 %273, %275
  br i1 %276, label %281, label %277

; <label>:277:                                    ; preds = %entry
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %279 = load i64, i64* %278, align 8
  %280 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %279, %struct.Memory* %loadMem_406284)
  br label %routine_idivl__r9d.exit2782

; <label>:281:                                    ; preds = %entry
  %282 = srem i64 %272, %270
  %283 = getelementptr inbounds %union.anon, %union.anon* %261, i64 0, i32 0
  %284 = and i64 %273, 4294967295
  store i64 %284, i64* %283, align 8
  %285 = getelementptr inbounds %union.anon, %union.anon* %265, i64 0, i32 0
  %286 = and i64 %282, 4294967295
  store i64 %286, i64* %285, align 8
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %287, align 1
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %288, align 1
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %289, align 1
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %290, align 1
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %291, align 1
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %292, align 1
  br label %routine_idivl__r9d.exit2782

routine_idivl__r9d.exit2782:                      ; preds = %277, %281
  %293 = phi %struct.Memory* [ %280, %277 ], [ %loadMem_406284, %281 ]
  store %struct.Memory* %293, %struct.Memory** %MEMORY
  %loadMem_406287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 33
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %PC.i2777 = bitcast %union.anon* %296 to i64*
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %298 = getelementptr inbounds %struct.GPR, %struct.GPR* %297, i32 0, i32 1
  %299 = getelementptr inbounds %struct.Reg, %struct.Reg* %298, i32 0, i32 0
  %EAX.i2778 = bitcast %union.anon* %299 to i32*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %301 = getelementptr inbounds %struct.GPR, %struct.GPR* %300, i32 0, i32 15
  %302 = getelementptr inbounds %struct.Reg, %struct.Reg* %301, i32 0, i32 0
  %RBP.i2779 = bitcast %union.anon* %302 to i64*
  %303 = load i64, i64* %RBP.i2779
  %304 = sub i64 %303, 116
  %305 = load i32, i32* %EAX.i2778
  %306 = zext i32 %305 to i64
  %307 = load i64, i64* %PC.i2777
  %308 = add i64 %307, 3
  store i64 %308, i64* %PC.i2777
  %309 = inttoptr i64 %304 to i32*
  store i32 %305, i32* %309
  store %struct.Memory* %loadMem_406287, %struct.Memory** %MEMORY
  %loadMem_40628a = load %struct.Memory*, %struct.Memory** %MEMORY
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %311 = getelementptr inbounds %struct.GPR, %struct.GPR* %310, i32 0, i32 33
  %312 = getelementptr inbounds %struct.Reg, %struct.Reg* %311, i32 0, i32 0
  %PC.i2774 = bitcast %union.anon* %312 to i64*
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %314 = getelementptr inbounds %struct.GPR, %struct.GPR* %313, i32 0, i32 1
  %315 = getelementptr inbounds %struct.Reg, %struct.Reg* %314, i32 0, i32 0
  %RAX.i2775 = bitcast %union.anon* %315 to i64*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %317 = getelementptr inbounds %struct.GPR, %struct.GPR* %316, i32 0, i32 15
  %318 = getelementptr inbounds %struct.Reg, %struct.Reg* %317, i32 0, i32 0
  %RBP.i2776 = bitcast %union.anon* %318 to i64*
  %319 = load i64, i64* %RBP.i2776
  %320 = sub i64 %319, 8
  %321 = load i64, i64* %PC.i2774
  %322 = add i64 %321, 3
  store i64 %322, i64* %PC.i2774
  %323 = inttoptr i64 %320 to i32*
  %324 = load i32, i32* %323
  %325 = zext i32 %324 to i64
  store i64 %325, i64* %RAX.i2775, align 8
  store %struct.Memory* %loadMem_40628a, %struct.Memory** %MEMORY
  %loadMem_40628d = load %struct.Memory*, %struct.Memory** %MEMORY
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %327 = getelementptr inbounds %struct.GPR, %struct.GPR* %326, i32 0, i32 33
  %328 = getelementptr inbounds %struct.Reg, %struct.Reg* %327, i32 0, i32 0
  %PC.i2773 = bitcast %union.anon* %328 to i64*
  %329 = load i64, i64* %PC.i2773
  %330 = add i64 %329, 1
  store i64 %330, i64* %PC.i2773
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %333 = bitcast %union.anon* %332 to i32*
  %334 = load i32, i32* %333, align 8
  %335 = sext i32 %334 to i64
  %336 = lshr i64 %335, 32
  store i64 %336, i64* %331, align 8
  store %struct.Memory* %loadMem_40628d, %struct.Memory** %MEMORY
  %loadMem_40628e = load %struct.Memory*, %struct.Memory** %MEMORY
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %338 = getelementptr inbounds %struct.GPR, %struct.GPR* %337, i32 0, i32 33
  %339 = getelementptr inbounds %struct.Reg, %struct.Reg* %338, i32 0, i32 0
  %PC.i2768 = bitcast %union.anon* %339 to i64*
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %341 = getelementptr inbounds %struct.GPR, %struct.GPR* %340, i32 0, i32 19
  %342 = getelementptr inbounds %struct.Reg, %struct.Reg* %341, i32 0, i32 0
  %R9D.i2769 = bitcast %union.anon* %342 to i32*
  %343 = load i32, i32* %R9D.i2769
  %344 = zext i32 %343 to i64
  %345 = load i64, i64* %PC.i2768
  %346 = add i64 %345, 3
  store i64 %346, i64* %PC.i2768
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %348 = bitcast %union.anon* %347 to i32*
  %349 = load i32, i32* %348, align 8
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %352 = bitcast %union.anon* %351 to i32*
  %353 = load i32, i32* %352, align 8
  %354 = zext i32 %353 to i64
  %355 = shl i64 %344, 32
  %356 = ashr exact i64 %355, 32
  %357 = shl i64 %354, 32
  %358 = or i64 %357, %350
  %359 = sdiv i64 %358, %356
  %360 = shl i64 %359, 32
  %361 = ashr exact i64 %360, 32
  %362 = icmp eq i64 %359, %361
  br i1 %362, label %367, label %363

; <label>:363:                                    ; preds = %routine_idivl__r9d.exit2782
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %365 = load i64, i64* %364, align 8
  %366 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %365, %struct.Memory* %loadMem_40628e)
  br label %routine_idivl__r9d.exit

; <label>:367:                                    ; preds = %routine_idivl__r9d.exit2782
  %368 = srem i64 %358, %356
  %369 = getelementptr inbounds %union.anon, %union.anon* %347, i64 0, i32 0
  %370 = and i64 %359, 4294967295
  store i64 %370, i64* %369, align 8
  %371 = getelementptr inbounds %union.anon, %union.anon* %351, i64 0, i32 0
  %372 = and i64 %368, 4294967295
  store i64 %372, i64* %371, align 8
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %373, align 1
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %374, align 1
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %375, align 1
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %376, align 1
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %377, align 1
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %378, align 1
  br label %routine_idivl__r9d.exit

routine_idivl__r9d.exit:                          ; preds = %363, %367
  %379 = phi %struct.Memory* [ %366, %363 ], [ %loadMem_40628e, %367 ]
  store %struct.Memory* %379, %struct.Memory** %MEMORY
  %loadMem_406291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %381 = getelementptr inbounds %struct.GPR, %struct.GPR* %380, i32 0, i32 33
  %382 = getelementptr inbounds %struct.Reg, %struct.Reg* %381, i32 0, i32 0
  %PC.i2765 = bitcast %union.anon* %382 to i64*
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 1
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %EAX.i2766 = bitcast %union.anon* %385 to i32*
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %387 = getelementptr inbounds %struct.GPR, %struct.GPR* %386, i32 0, i32 15
  %388 = getelementptr inbounds %struct.Reg, %struct.Reg* %387, i32 0, i32 0
  %RBP.i2767 = bitcast %union.anon* %388 to i64*
  %389 = load i64, i64* %RBP.i2767
  %390 = sub i64 %389, 120
  %391 = load i32, i32* %EAX.i2766
  %392 = zext i32 %391 to i64
  %393 = load i64, i64* %PC.i2765
  %394 = add i64 %393, 3
  store i64 %394, i64* %PC.i2765
  %395 = inttoptr i64 %390 to i32*
  store i32 %391, i32* %395
  store %struct.Memory* %loadMem_406291, %struct.Memory** %MEMORY
  %loadMem_406294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %397 = getelementptr inbounds %struct.GPR, %struct.GPR* %396, i32 0, i32 33
  %398 = getelementptr inbounds %struct.Reg, %struct.Reg* %397, i32 0, i32 0
  %PC.i2762 = bitcast %union.anon* %398 to i64*
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 1
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %RAX.i2763 = bitcast %union.anon* %401 to i64*
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 15
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %RBP.i2764 = bitcast %union.anon* %404 to i64*
  %405 = load i64, i64* %RBP.i2764
  %406 = sub i64 %405, 120
  %407 = load i64, i64* %PC.i2762
  %408 = add i64 %407, 3
  store i64 %408, i64* %PC.i2762
  %409 = inttoptr i64 %406 to i32*
  %410 = load i32, i32* %409
  %411 = zext i32 %410 to i64
  store i64 %411, i64* %RAX.i2763, align 8
  store %struct.Memory* %loadMem_406294, %struct.Memory** %MEMORY
  %loadMem_406297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %413 = getelementptr inbounds %struct.GPR, %struct.GPR* %412, i32 0, i32 33
  %414 = getelementptr inbounds %struct.Reg, %struct.Reg* %413, i32 0, i32 0
  %PC.i2761 = bitcast %union.anon* %414 to i64*
  %415 = load i64, i64* %PC.i2761
  %416 = add i64 %415, 1
  store i64 %416, i64* %PC.i2761
  %417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %419 = bitcast %union.anon* %418 to i32*
  %420 = load i32, i32* %419, align 8
  %421 = sext i32 %420 to i64
  %422 = lshr i64 %421, 32
  store i64 %422, i64* %417, align 8
  store %struct.Memory* %loadMem_406297, %struct.Memory** %MEMORY
  %loadMem_406298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %424 = getelementptr inbounds %struct.GPR, %struct.GPR* %423, i32 0, i32 33
  %425 = getelementptr inbounds %struct.Reg, %struct.Reg* %424, i32 0, i32 0
  %PC.i2758 = bitcast %union.anon* %425 to i64*
  %426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %427 = getelementptr inbounds %struct.GPR, %struct.GPR* %426, i32 0, i32 5
  %428 = getelementptr inbounds %struct.Reg, %struct.Reg* %427, i32 0, i32 0
  %RCX.i2759 = bitcast %union.anon* %428 to i64*
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 15
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %RBP.i2760 = bitcast %union.anon* %431 to i64*
  %432 = load i64, i64* %RBP.i2760
  %433 = sub i64 %432, 160
  %434 = load i64, i64* %PC.i2758
  %435 = add i64 %434, 6
  store i64 %435, i64* %PC.i2758
  %436 = inttoptr i64 %433 to i32*
  %437 = load i32, i32* %436
  %438 = zext i32 %437 to i64
  store i64 %438, i64* %RCX.i2759, align 8
  store %struct.Memory* %loadMem_406298, %struct.Memory** %MEMORY
  %loadMem_40629e = load %struct.Memory*, %struct.Memory** %MEMORY
  %439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %440 = getelementptr inbounds %struct.GPR, %struct.GPR* %439, i32 0, i32 33
  %441 = getelementptr inbounds %struct.Reg, %struct.Reg* %440, i32 0, i32 0
  %PC.i2752 = bitcast %union.anon* %441 to i64*
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %443 = getelementptr inbounds %struct.GPR, %struct.GPR* %442, i32 0, i32 5
  %444 = getelementptr inbounds %struct.Reg, %struct.Reg* %443, i32 0, i32 0
  %ECX.i2753 = bitcast %union.anon* %444 to i32*
  %445 = load i32, i32* %ECX.i2753
  %446 = zext i32 %445 to i64
  %447 = load i64, i64* %PC.i2752
  %448 = add i64 %447, 2
  store i64 %448, i64* %PC.i2752
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %450 = bitcast %union.anon* %449 to i32*
  %451 = load i32, i32* %450, align 8
  %452 = zext i32 %451 to i64
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %454 = bitcast %union.anon* %453 to i32*
  %455 = load i32, i32* %454, align 8
  %456 = zext i32 %455 to i64
  %457 = shl i64 %446, 32
  %458 = ashr exact i64 %457, 32
  %459 = shl i64 %456, 32
  %460 = or i64 %459, %452
  %461 = sdiv i64 %460, %458
  %462 = shl i64 %461, 32
  %463 = ashr exact i64 %462, 32
  %464 = icmp eq i64 %461, %463
  br i1 %464, label %469, label %465

; <label>:465:                                    ; preds = %routine_idivl__r9d.exit
  %466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %467 = load i64, i64* %466, align 8
  %468 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %467, %struct.Memory* %loadMem_40629e)
  br label %routine_idivl__ecx.exit2754

; <label>:469:                                    ; preds = %routine_idivl__r9d.exit
  %470 = srem i64 %460, %458
  %471 = getelementptr inbounds %union.anon, %union.anon* %449, i64 0, i32 0
  %472 = and i64 %461, 4294967295
  store i64 %472, i64* %471, align 8
  %473 = getelementptr inbounds %union.anon, %union.anon* %453, i64 0, i32 0
  %474 = and i64 %470, 4294967295
  store i64 %474, i64* %473, align 8
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %475, align 1
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %476, align 1
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %477, align 1
  %478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %478, align 1
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %479, align 1
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %480, align 1
  br label %routine_idivl__ecx.exit2754

routine_idivl__ecx.exit2754:                      ; preds = %465, %469
  %481 = phi %struct.Memory* [ %468, %465 ], [ %loadMem_40629e, %469 ]
  store %struct.Memory* %481, %struct.Memory** %MEMORY
  %loadMem_4062a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %483 = getelementptr inbounds %struct.GPR, %struct.GPR* %482, i32 0, i32 33
  %484 = getelementptr inbounds %struct.Reg, %struct.Reg* %483, i32 0, i32 0
  %PC.i2750 = bitcast %union.anon* %484 to i64*
  %485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %486 = getelementptr inbounds %struct.GPR, %struct.GPR* %485, i32 0, i32 1
  %487 = getelementptr inbounds %struct.Reg, %struct.Reg* %486, i32 0, i32 0
  %RAX.i2751 = bitcast %union.anon* %487 to i64*
  %488 = load i64, i64* %RAX.i2751
  %489 = load i64, i64* %PC.i2750
  %490 = add i64 %489, 2
  store i64 %490, i64* %PC.i2750
  %491 = trunc i64 %488 to i32
  %492 = shl i32 %491, 1
  %493 = icmp slt i32 %491, 0
  %494 = icmp slt i32 %492, 0
  %495 = xor i1 %493, %494
  %496 = zext i32 %492 to i64
  store i64 %496, i64* %RAX.i2751, align 8
  %497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %498 = zext i1 %493 to i8
  store i8 %498, i8* %497, align 1
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %500 = and i32 %492, 254
  %501 = call i32 @llvm.ctpop.i32(i32 %500)
  %502 = trunc i32 %501 to i8
  %503 = and i8 %502, 1
  %504 = xor i8 %503, 1
  store i8 %504, i8* %499, align 1
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %505, align 1
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %507 = icmp eq i32 %492, 0
  %508 = zext i1 %507 to i8
  store i8 %508, i8* %506, align 1
  %509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %510 = lshr i32 %492, 31
  %511 = trunc i32 %510 to i8
  store i8 %511, i8* %509, align 1
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %513 = zext i1 %495 to i8
  store i8 %513, i8* %512, align 1
  store %struct.Memory* %loadMem_4062a0, %struct.Memory** %MEMORY
  %loadMem_4062a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %515 = getelementptr inbounds %struct.GPR, %struct.GPR* %514, i32 0, i32 33
  %516 = getelementptr inbounds %struct.Reg, %struct.Reg* %515, i32 0, i32 0
  %PC.i2747 = bitcast %union.anon* %516 to i64*
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %518 = getelementptr inbounds %struct.GPR, %struct.GPR* %517, i32 0, i32 9
  %519 = getelementptr inbounds %struct.Reg, %struct.Reg* %518, i32 0, i32 0
  %RSI.i2748 = bitcast %union.anon* %519 to i64*
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %521 = getelementptr inbounds %struct.GPR, %struct.GPR* %520, i32 0, i32 15
  %522 = getelementptr inbounds %struct.Reg, %struct.Reg* %521, i32 0, i32 0
  %RBP.i2749 = bitcast %union.anon* %522 to i64*
  %523 = load i64, i64* %RBP.i2749
  %524 = sub i64 %523, 116
  %525 = load i64, i64* %PC.i2747
  %526 = add i64 %525, 3
  store i64 %526, i64* %PC.i2747
  %527 = inttoptr i64 %524 to i32*
  %528 = load i32, i32* %527
  %529 = zext i32 %528 to i64
  store i64 %529, i64* %RSI.i2748, align 8
  store %struct.Memory* %loadMem_4062a3, %struct.Memory** %MEMORY
  %loadMem_4062a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %531 = getelementptr inbounds %struct.GPR, %struct.GPR* %530, i32 0, i32 33
  %532 = getelementptr inbounds %struct.Reg, %struct.Reg* %531, i32 0, i32 0
  %PC.i2744 = bitcast %union.anon* %532 to i64*
  %533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %534 = getelementptr inbounds %struct.GPR, %struct.GPR* %533, i32 0, i32 1
  %535 = getelementptr inbounds %struct.Reg, %struct.Reg* %534, i32 0, i32 0
  %EAX.i2745 = bitcast %union.anon* %535 to i32*
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %537 = getelementptr inbounds %struct.GPR, %struct.GPR* %536, i32 0, i32 15
  %538 = getelementptr inbounds %struct.Reg, %struct.Reg* %537, i32 0, i32 0
  %RBP.i2746 = bitcast %union.anon* %538 to i64*
  %539 = load i64, i64* %RBP.i2746
  %540 = sub i64 %539, 164
  %541 = load i32, i32* %EAX.i2745
  %542 = zext i32 %541 to i64
  %543 = load i64, i64* %PC.i2744
  %544 = add i64 %543, 6
  store i64 %544, i64* %PC.i2744
  %545 = inttoptr i64 %540 to i32*
  store i32 %541, i32* %545
  store %struct.Memory* %loadMem_4062a6, %struct.Memory** %MEMORY
  %loadMem_4062ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %547 = getelementptr inbounds %struct.GPR, %struct.GPR* %546, i32 0, i32 33
  %548 = getelementptr inbounds %struct.Reg, %struct.Reg* %547, i32 0, i32 0
  %PC.i2741 = bitcast %union.anon* %548 to i64*
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %550 = getelementptr inbounds %struct.GPR, %struct.GPR* %549, i32 0, i32 9
  %551 = getelementptr inbounds %struct.Reg, %struct.Reg* %550, i32 0, i32 0
  %ESI.i2742 = bitcast %union.anon* %551 to i32*
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %553 = getelementptr inbounds %struct.GPR, %struct.GPR* %552, i32 0, i32 1
  %554 = getelementptr inbounds %struct.Reg, %struct.Reg* %553, i32 0, i32 0
  %RAX.i2743 = bitcast %union.anon* %554 to i64*
  %555 = load i32, i32* %ESI.i2742
  %556 = zext i32 %555 to i64
  %557 = load i64, i64* %PC.i2741
  %558 = add i64 %557, 2
  store i64 %558, i64* %PC.i2741
  %559 = and i64 %556, 4294967295
  store i64 %559, i64* %RAX.i2743, align 8
  store %struct.Memory* %loadMem_4062ac, %struct.Memory** %MEMORY
  %loadMem_4062ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %561 = getelementptr inbounds %struct.GPR, %struct.GPR* %560, i32 0, i32 33
  %562 = getelementptr inbounds %struct.Reg, %struct.Reg* %561, i32 0, i32 0
  %PC.i2740 = bitcast %union.anon* %562 to i64*
  %563 = load i64, i64* %PC.i2740
  %564 = add i64 %563, 1
  store i64 %564, i64* %PC.i2740
  %565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %567 = bitcast %union.anon* %566 to i32*
  %568 = load i32, i32* %567, align 8
  %569 = sext i32 %568 to i64
  %570 = lshr i64 %569, 32
  store i64 %570, i64* %565, align 8
  store %struct.Memory* %loadMem_4062ae, %struct.Memory** %MEMORY
  %loadMem_4062af = load %struct.Memory*, %struct.Memory** %MEMORY
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %572 = getelementptr inbounds %struct.GPR, %struct.GPR* %571, i32 0, i32 33
  %573 = getelementptr inbounds %struct.Reg, %struct.Reg* %572, i32 0, i32 0
  %PC.i2734 = bitcast %union.anon* %573 to i64*
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %575 = getelementptr inbounds %struct.GPR, %struct.GPR* %574, i32 0, i32 5
  %576 = getelementptr inbounds %struct.Reg, %struct.Reg* %575, i32 0, i32 0
  %ECX.i2735 = bitcast %union.anon* %576 to i32*
  %577 = load i32, i32* %ECX.i2735
  %578 = zext i32 %577 to i64
  %579 = load i64, i64* %PC.i2734
  %580 = add i64 %579, 2
  store i64 %580, i64* %PC.i2734
  %581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %582 = bitcast %union.anon* %581 to i32*
  %583 = load i32, i32* %582, align 8
  %584 = zext i32 %583 to i64
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %586 = bitcast %union.anon* %585 to i32*
  %587 = load i32, i32* %586, align 8
  %588 = zext i32 %587 to i64
  %589 = shl i64 %578, 32
  %590 = ashr exact i64 %589, 32
  %591 = shl i64 %588, 32
  %592 = or i64 %591, %584
  %593 = sdiv i64 %592, %590
  %594 = shl i64 %593, 32
  %595 = ashr exact i64 %594, 32
  %596 = icmp eq i64 %593, %595
  br i1 %596, label %601, label %597

; <label>:597:                                    ; preds = %routine_idivl__ecx.exit2754
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %599 = load i64, i64* %598, align 8
  %600 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %599, %struct.Memory* %loadMem_4062af)
  br label %routine_idivl__ecx.exit2736

; <label>:601:                                    ; preds = %routine_idivl__ecx.exit2754
  %602 = srem i64 %592, %590
  %603 = getelementptr inbounds %union.anon, %union.anon* %581, i64 0, i32 0
  %604 = and i64 %593, 4294967295
  store i64 %604, i64* %603, align 8
  %605 = getelementptr inbounds %union.anon, %union.anon* %585, i64 0, i32 0
  %606 = and i64 %602, 4294967295
  store i64 %606, i64* %605, align 8
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %607, align 1
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %608, align 1
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %609, align 1
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %610, align 1
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %611, align 1
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %612, align 1
  br label %routine_idivl__ecx.exit2736

routine_idivl__ecx.exit2736:                      ; preds = %597, %601
  %613 = phi %struct.Memory* [ %600, %597 ], [ %loadMem_4062af, %601 ]
  store %struct.Memory* %613, %struct.Memory** %MEMORY
  %loadMem_4062b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %615 = getelementptr inbounds %struct.GPR, %struct.GPR* %614, i32 0, i32 33
  %616 = getelementptr inbounds %struct.Reg, %struct.Reg* %615, i32 0, i32 0
  %PC.i2731 = bitcast %union.anon* %616 to i64*
  %617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %618 = getelementptr inbounds %struct.GPR, %struct.GPR* %617, i32 0, i32 9
  %619 = getelementptr inbounds %struct.Reg, %struct.Reg* %618, i32 0, i32 0
  %RSI.i2732 = bitcast %union.anon* %619 to i64*
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %621 = getelementptr inbounds %struct.GPR, %struct.GPR* %620, i32 0, i32 15
  %622 = getelementptr inbounds %struct.Reg, %struct.Reg* %621, i32 0, i32 0
  %RBP.i2733 = bitcast %union.anon* %622 to i64*
  %623 = load i64, i64* %RBP.i2733
  %624 = sub i64 %623, 164
  %625 = load i64, i64* %PC.i2731
  %626 = add i64 %625, 6
  store i64 %626, i64* %PC.i2731
  %627 = inttoptr i64 %624 to i32*
  %628 = load i32, i32* %627
  %629 = zext i32 %628 to i64
  store i64 %629, i64* %RSI.i2732, align 8
  store %struct.Memory* %loadMem_4062b1, %struct.Memory** %MEMORY
  %loadMem_4062b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %631 = getelementptr inbounds %struct.GPR, %struct.GPR* %630, i32 0, i32 33
  %632 = getelementptr inbounds %struct.Reg, %struct.Reg* %631, i32 0, i32 0
  %PC.i2728 = bitcast %union.anon* %632 to i64*
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %634 = getelementptr inbounds %struct.GPR, %struct.GPR* %633, i32 0, i32 1
  %635 = getelementptr inbounds %struct.Reg, %struct.Reg* %634, i32 0, i32 0
  %EAX.i2729 = bitcast %union.anon* %635 to i32*
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 9
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %RSI.i2730 = bitcast %union.anon* %638 to i64*
  %639 = load i64, i64* %RSI.i2730
  %640 = load i32, i32* %EAX.i2729
  %641 = zext i32 %640 to i64
  %642 = load i64, i64* %PC.i2728
  %643 = add i64 %642, 2
  store i64 %643, i64* %PC.i2728
  %644 = trunc i64 %639 to i32
  %645 = add i32 %640, %644
  %646 = zext i32 %645 to i64
  store i64 %646, i64* %RSI.i2730, align 8
  %647 = icmp ult i32 %645, %644
  %648 = icmp ult i32 %645, %640
  %649 = or i1 %647, %648
  %650 = zext i1 %649 to i8
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %650, i8* %651, align 1
  %652 = and i32 %645, 255
  %653 = call i32 @llvm.ctpop.i32(i32 %652)
  %654 = trunc i32 %653 to i8
  %655 = and i8 %654, 1
  %656 = xor i8 %655, 1
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %656, i8* %657, align 1
  %658 = xor i64 %641, %639
  %659 = trunc i64 %658 to i32
  %660 = xor i32 %659, %645
  %661 = lshr i32 %660, 4
  %662 = trunc i32 %661 to i8
  %663 = and i8 %662, 1
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %663, i8* %664, align 1
  %665 = icmp eq i32 %645, 0
  %666 = zext i1 %665 to i8
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %666, i8* %667, align 1
  %668 = lshr i32 %645, 31
  %669 = trunc i32 %668 to i8
  %670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %669, i8* %670, align 1
  %671 = lshr i32 %644, 31
  %672 = lshr i32 %640, 31
  %673 = xor i32 %668, %671
  %674 = xor i32 %668, %672
  %675 = add i32 %673, %674
  %676 = icmp eq i32 %675, 2
  %677 = zext i1 %676 to i8
  %678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %677, i8* %678, align 1
  store %struct.Memory* %loadMem_4062b7, %struct.Memory** %MEMORY
  %loadMem_4062b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %680 = getelementptr inbounds %struct.GPR, %struct.GPR* %679, i32 0, i32 33
  %681 = getelementptr inbounds %struct.Reg, %struct.Reg* %680, i32 0, i32 0
  %PC.i2725 = bitcast %union.anon* %681 to i64*
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %683 = getelementptr inbounds %struct.GPR, %struct.GPR* %682, i32 0, i32 9
  %684 = getelementptr inbounds %struct.Reg, %struct.Reg* %683, i32 0, i32 0
  %ESI.i2726 = bitcast %union.anon* %684 to i32*
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %686 = getelementptr inbounds %struct.GPR, %struct.GPR* %685, i32 0, i32 15
  %687 = getelementptr inbounds %struct.Reg, %struct.Reg* %686, i32 0, i32 0
  %RBP.i2727 = bitcast %union.anon* %687 to i64*
  %688 = load i64, i64* %RBP.i2727
  %689 = sub i64 %688, 124
  %690 = load i32, i32* %ESI.i2726
  %691 = zext i32 %690 to i64
  %692 = load i64, i64* %PC.i2725
  %693 = add i64 %692, 3
  store i64 %693, i64* %PC.i2725
  %694 = inttoptr i64 %689 to i32*
  store i32 %690, i32* %694
  store %struct.Memory* %loadMem_4062b9, %struct.Memory** %MEMORY
  %loadMem_4062bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %696 = getelementptr inbounds %struct.GPR, %struct.GPR* %695, i32 0, i32 33
  %697 = getelementptr inbounds %struct.Reg, %struct.Reg* %696, i32 0, i32 0
  %PC.i2722 = bitcast %union.anon* %697 to i64*
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %699 = getelementptr inbounds %struct.GPR, %struct.GPR* %698, i32 0, i32 1
  %700 = getelementptr inbounds %struct.Reg, %struct.Reg* %699, i32 0, i32 0
  %RAX.i2723 = bitcast %union.anon* %700 to i64*
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %702 = getelementptr inbounds %struct.GPR, %struct.GPR* %701, i32 0, i32 15
  %703 = getelementptr inbounds %struct.Reg, %struct.Reg* %702, i32 0, i32 0
  %RBP.i2724 = bitcast %union.anon* %703 to i64*
  %704 = load i64, i64* %RBP.i2724
  %705 = sub i64 %704, 120
  %706 = load i64, i64* %PC.i2722
  %707 = add i64 %706, 3
  store i64 %707, i64* %PC.i2722
  %708 = inttoptr i64 %705 to i32*
  %709 = load i32, i32* %708
  %710 = zext i32 %709 to i64
  store i64 %710, i64* %RAX.i2723, align 8
  store %struct.Memory* %loadMem_4062bc, %struct.Memory** %MEMORY
  %loadMem_4062bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %712 = getelementptr inbounds %struct.GPR, %struct.GPR* %711, i32 0, i32 33
  %713 = getelementptr inbounds %struct.Reg, %struct.Reg* %712, i32 0, i32 0
  %PC.i2721 = bitcast %union.anon* %713 to i64*
  %714 = load i64, i64* %PC.i2721
  %715 = add i64 %714, 1
  store i64 %715, i64* %PC.i2721
  %716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %718 = bitcast %union.anon* %717 to i32*
  %719 = load i32, i32* %718, align 8
  %720 = sext i32 %719 to i64
  %721 = lshr i64 %720, 32
  store i64 %721, i64* %716, align 8
  store %struct.Memory* %loadMem_4062bf, %struct.Memory** %MEMORY
  %loadMem_4062c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %723 = getelementptr inbounds %struct.GPR, %struct.GPR* %722, i32 0, i32 33
  %724 = getelementptr inbounds %struct.Reg, %struct.Reg* %723, i32 0, i32 0
  %PC.i2715 = bitcast %union.anon* %724 to i64*
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 5
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %ECX.i2716 = bitcast %union.anon* %727 to i32*
  %728 = load i32, i32* %ECX.i2716
  %729 = zext i32 %728 to i64
  %730 = load i64, i64* %PC.i2715
  %731 = add i64 %730, 2
  store i64 %731, i64* %PC.i2715
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %733 = bitcast %union.anon* %732 to i32*
  %734 = load i32, i32* %733, align 8
  %735 = zext i32 %734 to i64
  %736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %737 = bitcast %union.anon* %736 to i32*
  %738 = load i32, i32* %737, align 8
  %739 = zext i32 %738 to i64
  %740 = shl i64 %729, 32
  %741 = ashr exact i64 %740, 32
  %742 = shl i64 %739, 32
  %743 = or i64 %742, %735
  %744 = sdiv i64 %743, %741
  %745 = shl i64 %744, 32
  %746 = ashr exact i64 %745, 32
  %747 = icmp eq i64 %744, %746
  br i1 %747, label %752, label %748

; <label>:748:                                    ; preds = %routine_idivl__ecx.exit2736
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %750 = load i64, i64* %749, align 8
  %751 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %750, %struct.Memory* %loadMem_4062c0)
  br label %routine_idivl__ecx.exit2717

; <label>:752:                                    ; preds = %routine_idivl__ecx.exit2736
  %753 = srem i64 %743, %741
  %754 = getelementptr inbounds %union.anon, %union.anon* %732, i64 0, i32 0
  %755 = and i64 %744, 4294967295
  store i64 %755, i64* %754, align 8
  %756 = getelementptr inbounds %union.anon, %union.anon* %736, i64 0, i32 0
  %757 = and i64 %753, 4294967295
  store i64 %757, i64* %756, align 8
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %758, align 1
  %759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %759, align 1
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %760, align 1
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %761, align 1
  %762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %762, align 1
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %763, align 1
  br label %routine_idivl__ecx.exit2717

routine_idivl__ecx.exit2717:                      ; preds = %748, %752
  %764 = phi %struct.Memory* [ %751, %748 ], [ %loadMem_4062c0, %752 ]
  store %struct.Memory* %764, %struct.Memory** %MEMORY
  %loadMem_4062c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %766 = getelementptr inbounds %struct.GPR, %struct.GPR* %765, i32 0, i32 33
  %767 = getelementptr inbounds %struct.Reg, %struct.Reg* %766, i32 0, i32 0
  %PC.i2713 = bitcast %union.anon* %767 to i64*
  %768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %769 = getelementptr inbounds %struct.GPR, %struct.GPR* %768, i32 0, i32 7
  %770 = getelementptr inbounds %struct.Reg, %struct.Reg* %769, i32 0, i32 0
  %RDX.i2714 = bitcast %union.anon* %770 to i64*
  %771 = load i64, i64* %RDX.i2714
  %772 = load i64, i64* %PC.i2713
  %773 = add i64 %772, 2
  store i64 %773, i64* %PC.i2713
  %774 = trunc i64 %771 to i32
  %775 = shl i32 %774, 1
  %776 = icmp slt i32 %774, 0
  %777 = icmp slt i32 %775, 0
  %778 = xor i1 %776, %777
  %779 = zext i32 %775 to i64
  store i64 %779, i64* %RDX.i2714, align 8
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %781 = zext i1 %776 to i8
  store i8 %781, i8* %780, align 1
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %783 = and i32 %775, 254
  %784 = call i32 @llvm.ctpop.i32(i32 %783)
  %785 = trunc i32 %784 to i8
  %786 = and i8 %785, 1
  %787 = xor i8 %786, 1
  store i8 %787, i8* %782, align 1
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %788, align 1
  %789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %790 = icmp eq i32 %775, 0
  %791 = zext i1 %790 to i8
  store i8 %791, i8* %789, align 1
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %793 = lshr i32 %775, 31
  %794 = trunc i32 %793 to i8
  store i8 %794, i8* %792, align 1
  %795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %796 = zext i1 %778 to i8
  store i8 %796, i8* %795, align 1
  store %struct.Memory* %loadMem_4062c2, %struct.Memory** %MEMORY
  %loadMem_4062c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 33
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %PC.i2710 = bitcast %union.anon* %799 to i64*
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 9
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %RSI.i2711 = bitcast %union.anon* %802 to i64*
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %804 = getelementptr inbounds %struct.GPR, %struct.GPR* %803, i32 0, i32 15
  %805 = getelementptr inbounds %struct.Reg, %struct.Reg* %804, i32 0, i32 0
  %RBP.i2712 = bitcast %union.anon* %805 to i64*
  %806 = load i64, i64* %RBP.i2712
  %807 = sub i64 %806, 116
  %808 = load i64, i64* %PC.i2710
  %809 = add i64 %808, 3
  store i64 %809, i64* %PC.i2710
  %810 = inttoptr i64 %807 to i32*
  %811 = load i32, i32* %810
  %812 = zext i32 %811 to i64
  store i64 %812, i64* %RSI.i2711, align 8
  store %struct.Memory* %loadMem_4062c5, %struct.Memory** %MEMORY
  %loadMem_4062c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %814 = getelementptr inbounds %struct.GPR, %struct.GPR* %813, i32 0, i32 33
  %815 = getelementptr inbounds %struct.Reg, %struct.Reg* %814, i32 0, i32 0
  %PC.i2707 = bitcast %union.anon* %815 to i64*
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %817 = getelementptr inbounds %struct.GPR, %struct.GPR* %816, i32 0, i32 9
  %818 = getelementptr inbounds %struct.Reg, %struct.Reg* %817, i32 0, i32 0
  %ESI.i2708 = bitcast %union.anon* %818 to i32*
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %820 = getelementptr inbounds %struct.GPR, %struct.GPR* %819, i32 0, i32 1
  %821 = getelementptr inbounds %struct.Reg, %struct.Reg* %820, i32 0, i32 0
  %RAX.i2709 = bitcast %union.anon* %821 to i64*
  %822 = load i32, i32* %ESI.i2708
  %823 = zext i32 %822 to i64
  %824 = load i64, i64* %PC.i2707
  %825 = add i64 %824, 2
  store i64 %825, i64* %PC.i2707
  %826 = and i64 %823, 4294967295
  store i64 %826, i64* %RAX.i2709, align 8
  store %struct.Memory* %loadMem_4062c8, %struct.Memory** %MEMORY
  %loadMem_4062ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 33
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %PC.i2704 = bitcast %union.anon* %829 to i64*
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %831 = getelementptr inbounds %struct.GPR, %struct.GPR* %830, i32 0, i32 7
  %832 = getelementptr inbounds %struct.Reg, %struct.Reg* %831, i32 0, i32 0
  %EDX.i2705 = bitcast %union.anon* %832 to i32*
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %834 = getelementptr inbounds %struct.GPR, %struct.GPR* %833, i32 0, i32 15
  %835 = getelementptr inbounds %struct.Reg, %struct.Reg* %834, i32 0, i32 0
  %RBP.i2706 = bitcast %union.anon* %835 to i64*
  %836 = load i64, i64* %RBP.i2706
  %837 = sub i64 %836, 168
  %838 = load i32, i32* %EDX.i2705
  %839 = zext i32 %838 to i64
  %840 = load i64, i64* %PC.i2704
  %841 = add i64 %840, 6
  store i64 %841, i64* %PC.i2704
  %842 = inttoptr i64 %837 to i32*
  store i32 %838, i32* %842
  store %struct.Memory* %loadMem_4062ca, %struct.Memory** %MEMORY
  %loadMem_4062d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %844 = getelementptr inbounds %struct.GPR, %struct.GPR* %843, i32 0, i32 33
  %845 = getelementptr inbounds %struct.Reg, %struct.Reg* %844, i32 0, i32 0
  %PC.i2703 = bitcast %union.anon* %845 to i64*
  %846 = load i64, i64* %PC.i2703
  %847 = add i64 %846, 1
  store i64 %847, i64* %PC.i2703
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %850 = bitcast %union.anon* %849 to i32*
  %851 = load i32, i32* %850, align 8
  %852 = sext i32 %851 to i64
  %853 = lshr i64 %852, 32
  store i64 %853, i64* %848, align 8
  store %struct.Memory* %loadMem_4062d0, %struct.Memory** %MEMORY
  %loadMem_4062d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %855 = getelementptr inbounds %struct.GPR, %struct.GPR* %854, i32 0, i32 33
  %856 = getelementptr inbounds %struct.Reg, %struct.Reg* %855, i32 0, i32 0
  %PC.i2699 = bitcast %union.anon* %856 to i64*
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %858 = getelementptr inbounds %struct.GPR, %struct.GPR* %857, i32 0, i32 5
  %859 = getelementptr inbounds %struct.Reg, %struct.Reg* %858, i32 0, i32 0
  %ECX.i2700 = bitcast %union.anon* %859 to i32*
  %860 = load i32, i32* %ECX.i2700
  %861 = zext i32 %860 to i64
  %862 = load i64, i64* %PC.i2699
  %863 = add i64 %862, 2
  store i64 %863, i64* %PC.i2699
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %865 = bitcast %union.anon* %864 to i32*
  %866 = load i32, i32* %865, align 8
  %867 = zext i32 %866 to i64
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %869 = bitcast %union.anon* %868 to i32*
  %870 = load i32, i32* %869, align 8
  %871 = zext i32 %870 to i64
  %872 = shl i64 %861, 32
  %873 = ashr exact i64 %872, 32
  %874 = shl i64 %871, 32
  %875 = or i64 %874, %867
  %876 = sdiv i64 %875, %873
  %877 = shl i64 %876, 32
  %878 = ashr exact i64 %877, 32
  %879 = icmp eq i64 %876, %878
  br i1 %879, label %884, label %880

; <label>:880:                                    ; preds = %routine_idivl__ecx.exit2717
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %882 = load i64, i64* %881, align 8
  %883 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %882, %struct.Memory* %loadMem_4062d1)
  br label %routine_idivl__ecx.exit2701

; <label>:884:                                    ; preds = %routine_idivl__ecx.exit2717
  %885 = srem i64 %875, %873
  %886 = getelementptr inbounds %union.anon, %union.anon* %864, i64 0, i32 0
  %887 = and i64 %876, 4294967295
  store i64 %887, i64* %886, align 8
  %888 = getelementptr inbounds %union.anon, %union.anon* %868, i64 0, i32 0
  %889 = and i64 %885, 4294967295
  store i64 %889, i64* %888, align 8
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %890, align 1
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %891, align 1
  %892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %892, align 1
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %893, align 1
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %894, align 1
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %895, align 1
  br label %routine_idivl__ecx.exit2701

routine_idivl__ecx.exit2701:                      ; preds = %880, %884
  %896 = phi %struct.Memory* [ %883, %880 ], [ %loadMem_4062d1, %884 ]
  store %struct.Memory* %896, %struct.Memory** %MEMORY
  %loadMem_4062d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %898 = getelementptr inbounds %struct.GPR, %struct.GPR* %897, i32 0, i32 33
  %899 = getelementptr inbounds %struct.Reg, %struct.Reg* %898, i32 0, i32 0
  %PC.i2696 = bitcast %union.anon* %899 to i64*
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %901 = getelementptr inbounds %struct.GPR, %struct.GPR* %900, i32 0, i32 9
  %902 = getelementptr inbounds %struct.Reg, %struct.Reg* %901, i32 0, i32 0
  %RSI.i2697 = bitcast %union.anon* %902 to i64*
  %903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %904 = getelementptr inbounds %struct.GPR, %struct.GPR* %903, i32 0, i32 15
  %905 = getelementptr inbounds %struct.Reg, %struct.Reg* %904, i32 0, i32 0
  %RBP.i2698 = bitcast %union.anon* %905 to i64*
  %906 = load i64, i64* %RBP.i2698
  %907 = sub i64 %906, 168
  %908 = load i64, i64* %PC.i2696
  %909 = add i64 %908, 6
  store i64 %909, i64* %PC.i2696
  %910 = inttoptr i64 %907 to i32*
  %911 = load i32, i32* %910
  %912 = zext i32 %911 to i64
  store i64 %912, i64* %RSI.i2697, align 8
  store %struct.Memory* %loadMem_4062d3, %struct.Memory** %MEMORY
  %loadMem_4062d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %914 = getelementptr inbounds %struct.GPR, %struct.GPR* %913, i32 0, i32 33
  %915 = getelementptr inbounds %struct.Reg, %struct.Reg* %914, i32 0, i32 0
  %PC.i2693 = bitcast %union.anon* %915 to i64*
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %917 = getelementptr inbounds %struct.GPR, %struct.GPR* %916, i32 0, i32 7
  %918 = getelementptr inbounds %struct.Reg, %struct.Reg* %917, i32 0, i32 0
  %EDX.i2694 = bitcast %union.anon* %918 to i32*
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %920 = getelementptr inbounds %struct.GPR, %struct.GPR* %919, i32 0, i32 9
  %921 = getelementptr inbounds %struct.Reg, %struct.Reg* %920, i32 0, i32 0
  %RSI.i2695 = bitcast %union.anon* %921 to i64*
  %922 = load i64, i64* %RSI.i2695
  %923 = load i32, i32* %EDX.i2694
  %924 = zext i32 %923 to i64
  %925 = load i64, i64* %PC.i2693
  %926 = add i64 %925, 2
  store i64 %926, i64* %PC.i2693
  %927 = trunc i64 %922 to i32
  %928 = add i32 %923, %927
  %929 = zext i32 %928 to i64
  store i64 %929, i64* %RSI.i2695, align 8
  %930 = icmp ult i32 %928, %927
  %931 = icmp ult i32 %928, %923
  %932 = or i1 %930, %931
  %933 = zext i1 %932 to i8
  %934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %933, i8* %934, align 1
  %935 = and i32 %928, 255
  %936 = call i32 @llvm.ctpop.i32(i32 %935)
  %937 = trunc i32 %936 to i8
  %938 = and i8 %937, 1
  %939 = xor i8 %938, 1
  %940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %939, i8* %940, align 1
  %941 = xor i64 %924, %922
  %942 = trunc i64 %941 to i32
  %943 = xor i32 %942, %928
  %944 = lshr i32 %943, 4
  %945 = trunc i32 %944 to i8
  %946 = and i8 %945, 1
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %946, i8* %947, align 1
  %948 = icmp eq i32 %928, 0
  %949 = zext i1 %948 to i8
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %949, i8* %950, align 1
  %951 = lshr i32 %928, 31
  %952 = trunc i32 %951 to i8
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %952, i8* %953, align 1
  %954 = lshr i32 %927, 31
  %955 = lshr i32 %923, 31
  %956 = xor i32 %951, %954
  %957 = xor i32 %951, %955
  %958 = add i32 %956, %957
  %959 = icmp eq i32 %958, 2
  %960 = zext i1 %959 to i8
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %960, i8* %961, align 1
  store %struct.Memory* %loadMem_4062d9, %struct.Memory** %MEMORY
  %loadMem_4062db = load %struct.Memory*, %struct.Memory** %MEMORY
  %962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %963 = getelementptr inbounds %struct.GPR, %struct.GPR* %962, i32 0, i32 33
  %964 = getelementptr inbounds %struct.Reg, %struct.Reg* %963, i32 0, i32 0
  %PC.i2690 = bitcast %union.anon* %964 to i64*
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %966 = getelementptr inbounds %struct.GPR, %struct.GPR* %965, i32 0, i32 9
  %967 = getelementptr inbounds %struct.Reg, %struct.Reg* %966, i32 0, i32 0
  %ESI.i2691 = bitcast %union.anon* %967 to i32*
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 15
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %RBP.i2692 = bitcast %union.anon* %970 to i64*
  %971 = load i64, i64* %RBP.i2692
  %972 = sub i64 %971, 128
  %973 = load i32, i32* %ESI.i2691
  %974 = zext i32 %973 to i64
  %975 = load i64, i64* %PC.i2690
  %976 = add i64 %975, 3
  store i64 %976, i64* %PC.i2690
  %977 = inttoptr i64 %972 to i32*
  store i32 %973, i32* %977
  store %struct.Memory* %loadMem_4062db, %struct.Memory** %MEMORY
  %loadMem_4062de = load %struct.Memory*, %struct.Memory** %MEMORY
  %978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %979 = getelementptr inbounds %struct.GPR, %struct.GPR* %978, i32 0, i32 33
  %980 = getelementptr inbounds %struct.Reg, %struct.Reg* %979, i32 0, i32 0
  %PC.i2688 = bitcast %union.anon* %980 to i64*
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %982 = getelementptr inbounds %struct.GPR, %struct.GPR* %981, i32 0, i32 21
  %983 = getelementptr inbounds %struct.Reg, %struct.Reg* %982, i32 0, i32 0
  %R10.i2689 = bitcast %union.anon* %983 to i64*
  %984 = load i64, i64* %PC.i2688
  %985 = add i64 %984, 8
  store i64 %985, i64* %PC.i2688
  %986 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %986, i64* %R10.i2689, align 8
  store %struct.Memory* %loadMem_4062de, %struct.Memory** %MEMORY
  %loadMem_4062e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %988 = getelementptr inbounds %struct.GPR, %struct.GPR* %987, i32 0, i32 33
  %989 = getelementptr inbounds %struct.Reg, %struct.Reg* %988, i32 0, i32 0
  %PC.i2686 = bitcast %union.anon* %989 to i64*
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %991 = getelementptr inbounds %struct.GPR, %struct.GPR* %990, i32 0, i32 21
  %992 = getelementptr inbounds %struct.Reg, %struct.Reg* %991, i32 0, i32 0
  %R10.i2687 = bitcast %union.anon* %992 to i64*
  %993 = load i64, i64* %R10.i2687
  %994 = add i64 %993, 14136
  %995 = load i64, i64* %PC.i2686
  %996 = add i64 %995, 7
  store i64 %996, i64* %PC.i2686
  %997 = inttoptr i64 %994 to i64*
  %998 = load i64, i64* %997
  store i64 %998, i64* %R10.i2687, align 8
  store %struct.Memory* %loadMem_4062e6, %struct.Memory** %MEMORY
  %loadMem_4062ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1000 = getelementptr inbounds %struct.GPR, %struct.GPR* %999, i32 0, i32 33
  %1001 = getelementptr inbounds %struct.Reg, %struct.Reg* %1000, i32 0, i32 0
  %PC.i2683 = bitcast %union.anon* %1001 to i64*
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1003 = getelementptr inbounds %struct.GPR, %struct.GPR* %1002, i32 0, i32 15
  %1004 = getelementptr inbounds %struct.Reg, %struct.Reg* %1003, i32 0, i32 0
  %RBP.i2684 = bitcast %union.anon* %1004 to i64*
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1006 = getelementptr inbounds %struct.GPR, %struct.GPR* %1005, i32 0, i32 23
  %1007 = getelementptr inbounds %struct.Reg, %struct.Reg* %1006, i32 0, i32 0
  %R11.i2685 = bitcast %union.anon* %1007 to i64*
  %1008 = load i64, i64* %RBP.i2684
  %1009 = sub i64 %1008, 124
  %1010 = load i64, i64* %PC.i2683
  %1011 = add i64 %1010, 4
  store i64 %1011, i64* %PC.i2683
  %1012 = inttoptr i64 %1009 to i32*
  %1013 = load i32, i32* %1012
  %1014 = sext i32 %1013 to i64
  store i64 %1014, i64* %R11.i2685, align 8
  store %struct.Memory* %loadMem_4062ed, %struct.Memory** %MEMORY
  %loadMem_4062f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 33
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %PC.i2680 = bitcast %union.anon* %1017 to i64*
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1019 = getelementptr inbounds %struct.GPR, %struct.GPR* %1018, i32 0, i32 21
  %1020 = getelementptr inbounds %struct.Reg, %struct.Reg* %1019, i32 0, i32 0
  %R10.i2681 = bitcast %union.anon* %1020 to i64*
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1022 = getelementptr inbounds %struct.GPR, %struct.GPR* %1021, i32 0, i32 23
  %1023 = getelementptr inbounds %struct.Reg, %struct.Reg* %1022, i32 0, i32 0
  %R11.i2682 = bitcast %union.anon* %1023 to i64*
  %1024 = load i64, i64* %R10.i2681
  %1025 = load i64, i64* %R11.i2682
  %1026 = mul i64 %1025, 8
  %1027 = add i64 %1026, %1024
  %1028 = load i64, i64* %PC.i2680
  %1029 = add i64 %1028, 4
  store i64 %1029, i64* %PC.i2680
  %1030 = inttoptr i64 %1027 to i64*
  %1031 = load i64, i64* %1030
  store i64 %1031, i64* %R10.i2681, align 8
  store %struct.Memory* %loadMem_4062f1, %struct.Memory** %MEMORY
  %loadMem_4062f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1033 = getelementptr inbounds %struct.GPR, %struct.GPR* %1032, i32 0, i32 33
  %1034 = getelementptr inbounds %struct.Reg, %struct.Reg* %1033, i32 0, i32 0
  %PC.i2677 = bitcast %union.anon* %1034 to i64*
  %1035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1036 = getelementptr inbounds %struct.GPR, %struct.GPR* %1035, i32 0, i32 15
  %1037 = getelementptr inbounds %struct.Reg, %struct.Reg* %1036, i32 0, i32 0
  %RBP.i2678 = bitcast %union.anon* %1037 to i64*
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1039 = getelementptr inbounds %struct.GPR, %struct.GPR* %1038, i32 0, i32 23
  %1040 = getelementptr inbounds %struct.Reg, %struct.Reg* %1039, i32 0, i32 0
  %R11.i2679 = bitcast %union.anon* %1040 to i64*
  %1041 = load i64, i64* %RBP.i2678
  %1042 = sub i64 %1041, 128
  %1043 = load i64, i64* %PC.i2677
  %1044 = add i64 %1043, 4
  store i64 %1044, i64* %PC.i2677
  %1045 = inttoptr i64 %1042 to i32*
  %1046 = load i32, i32* %1045
  %1047 = sext i32 %1046 to i64
  store i64 %1047, i64* %R11.i2679, align 8
  store %struct.Memory* %loadMem_4062f5, %struct.Memory** %MEMORY
  %loadMem_4062f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1049 = getelementptr inbounds %struct.GPR, %struct.GPR* %1048, i32 0, i32 33
  %1050 = getelementptr inbounds %struct.Reg, %struct.Reg* %1049, i32 0, i32 0
  %PC.i2674 = bitcast %union.anon* %1050 to i64*
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1052 = getelementptr inbounds %struct.GPR, %struct.GPR* %1051, i32 0, i32 21
  %1053 = getelementptr inbounds %struct.Reg, %struct.Reg* %1052, i32 0, i32 0
  %R10.i2675 = bitcast %union.anon* %1053 to i64*
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1055 = getelementptr inbounds %struct.GPR, %struct.GPR* %1054, i32 0, i32 23
  %1056 = getelementptr inbounds %struct.Reg, %struct.Reg* %1055, i32 0, i32 0
  %R11.i2676 = bitcast %union.anon* %1056 to i64*
  %1057 = load i64, i64* %R10.i2675
  %1058 = load i64, i64* %R11.i2676
  %1059 = mul i64 %1058, 8
  %1060 = add i64 %1059, %1057
  %1061 = load i64, i64* %PC.i2674
  %1062 = add i64 %1061, 4
  store i64 %1062, i64* %PC.i2674
  %1063 = inttoptr i64 %1060 to i64*
  %1064 = load i64, i64* %1063
  store i64 %1064, i64* %R10.i2675, align 8
  store %struct.Memory* %loadMem_4062f9, %struct.Memory** %MEMORY
  %loadMem_4062fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 33
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %PC.i2672 = bitcast %union.anon* %1067 to i64*
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1069 = getelementptr inbounds %struct.GPR, %struct.GPR* %1068, i32 0, i32 21
  %1070 = getelementptr inbounds %struct.Reg, %struct.Reg* %1069, i32 0, i32 0
  %R10.i2673 = bitcast %union.anon* %1070 to i64*
  %1071 = load i64, i64* %R10.i2673
  %1072 = load i64, i64* %PC.i2672
  %1073 = add i64 %1072, 3
  store i64 %1073, i64* %PC.i2672
  %1074 = inttoptr i64 %1071 to i64*
  %1075 = load i64, i64* %1074
  store i64 %1075, i64* %R10.i2673, align 8
  store %struct.Memory* %loadMem_4062fd, %struct.Memory** %MEMORY
  %loadMem_406300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1077 = getelementptr inbounds %struct.GPR, %struct.GPR* %1076, i32 0, i32 33
  %1078 = getelementptr inbounds %struct.Reg, %struct.Reg* %1077, i32 0, i32 0
  %PC.i2669 = bitcast %union.anon* %1078 to i64*
  %1079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1080 = getelementptr inbounds %struct.GPR, %struct.GPR* %1079, i32 0, i32 15
  %1081 = getelementptr inbounds %struct.Reg, %struct.Reg* %1080, i32 0, i32 0
  %RBP.i2670 = bitcast %union.anon* %1081 to i64*
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1083 = getelementptr inbounds %struct.GPR, %struct.GPR* %1082, i32 0, i32 21
  %1084 = getelementptr inbounds %struct.Reg, %struct.Reg* %1083, i32 0, i32 0
  %R10.i2671 = bitcast %union.anon* %1084 to i64*
  %1085 = load i64, i64* %RBP.i2670
  %1086 = sub i64 %1085, 136
  %1087 = load i64, i64* %R10.i2671
  %1088 = load i64, i64* %PC.i2669
  %1089 = add i64 %1088, 7
  store i64 %1089, i64* %PC.i2669
  %1090 = inttoptr i64 %1086 to i64*
  store i64 %1087, i64* %1090
  store %struct.Memory* %loadMem_406300, %struct.Memory** %MEMORY
  %loadMem_406307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1092 = getelementptr inbounds %struct.GPR, %struct.GPR* %1091, i32 0, i32 33
  %1093 = getelementptr inbounds %struct.Reg, %struct.Reg* %1092, i32 0, i32 0
  %PC.i2667 = bitcast %union.anon* %1093 to i64*
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1095 = getelementptr inbounds %struct.GPR, %struct.GPR* %1094, i32 0, i32 21
  %1096 = getelementptr inbounds %struct.Reg, %struct.Reg* %1095, i32 0, i32 0
  %R10.i2668 = bitcast %union.anon* %1096 to i64*
  %1097 = load i64, i64* %PC.i2667
  %1098 = add i64 %1097, 8
  store i64 %1098, i64* %PC.i2667
  %1099 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1099, i64* %R10.i2668, align 8
  store %struct.Memory* %loadMem_406307, %struct.Memory** %MEMORY
  %loadMem_40630f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1101 = getelementptr inbounds %struct.GPR, %struct.GPR* %1100, i32 0, i32 33
  %1102 = getelementptr inbounds %struct.Reg, %struct.Reg* %1101, i32 0, i32 0
  %PC.i2665 = bitcast %union.anon* %1102 to i64*
  %1103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1104 = getelementptr inbounds %struct.GPR, %struct.GPR* %1103, i32 0, i32 21
  %1105 = getelementptr inbounds %struct.Reg, %struct.Reg* %1104, i32 0, i32 0
  %R10.i2666 = bitcast %union.anon* %1105 to i64*
  %1106 = load i64, i64* %R10.i2666
  %1107 = add i64 %1106, 14136
  %1108 = load i64, i64* %PC.i2665
  %1109 = add i64 %1108, 7
  store i64 %1109, i64* %PC.i2665
  %1110 = inttoptr i64 %1107 to i64*
  %1111 = load i64, i64* %1110
  store i64 %1111, i64* %R10.i2666, align 8
  store %struct.Memory* %loadMem_40630f, %struct.Memory** %MEMORY
  %loadMem_406316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1113 = getelementptr inbounds %struct.GPR, %struct.GPR* %1112, i32 0, i32 33
  %1114 = getelementptr inbounds %struct.Reg, %struct.Reg* %1113, i32 0, i32 0
  %PC.i2662 = bitcast %union.anon* %1114 to i64*
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1116 = getelementptr inbounds %struct.GPR, %struct.GPR* %1115, i32 0, i32 15
  %1117 = getelementptr inbounds %struct.Reg, %struct.Reg* %1116, i32 0, i32 0
  %RBP.i2663 = bitcast %union.anon* %1117 to i64*
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1119 = getelementptr inbounds %struct.GPR, %struct.GPR* %1118, i32 0, i32 23
  %1120 = getelementptr inbounds %struct.Reg, %struct.Reg* %1119, i32 0, i32 0
  %R11.i2664 = bitcast %union.anon* %1120 to i64*
  %1121 = load i64, i64* %RBP.i2663
  %1122 = sub i64 %1121, 124
  %1123 = load i64, i64* %PC.i2662
  %1124 = add i64 %1123, 4
  store i64 %1124, i64* %PC.i2662
  %1125 = inttoptr i64 %1122 to i32*
  %1126 = load i32, i32* %1125
  %1127 = sext i32 %1126 to i64
  store i64 %1127, i64* %R11.i2664, align 8
  store %struct.Memory* %loadMem_406316, %struct.Memory** %MEMORY
  %loadMem_40631a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1129 = getelementptr inbounds %struct.GPR, %struct.GPR* %1128, i32 0, i32 33
  %1130 = getelementptr inbounds %struct.Reg, %struct.Reg* %1129, i32 0, i32 0
  %PC.i2659 = bitcast %union.anon* %1130 to i64*
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1132 = getelementptr inbounds %struct.GPR, %struct.GPR* %1131, i32 0, i32 21
  %1133 = getelementptr inbounds %struct.Reg, %struct.Reg* %1132, i32 0, i32 0
  %R10.i2660 = bitcast %union.anon* %1133 to i64*
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1135 = getelementptr inbounds %struct.GPR, %struct.GPR* %1134, i32 0, i32 23
  %1136 = getelementptr inbounds %struct.Reg, %struct.Reg* %1135, i32 0, i32 0
  %R11.i2661 = bitcast %union.anon* %1136 to i64*
  %1137 = load i64, i64* %R10.i2660
  %1138 = load i64, i64* %R11.i2661
  %1139 = mul i64 %1138, 8
  %1140 = add i64 %1139, %1137
  %1141 = load i64, i64* %PC.i2659
  %1142 = add i64 %1141, 4
  store i64 %1142, i64* %PC.i2659
  %1143 = inttoptr i64 %1140 to i64*
  %1144 = load i64, i64* %1143
  store i64 %1144, i64* %R10.i2660, align 8
  store %struct.Memory* %loadMem_40631a, %struct.Memory** %MEMORY
  %loadMem_40631e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1146 = getelementptr inbounds %struct.GPR, %struct.GPR* %1145, i32 0, i32 33
  %1147 = getelementptr inbounds %struct.Reg, %struct.Reg* %1146, i32 0, i32 0
  %PC.i2656 = bitcast %union.anon* %1147 to i64*
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1149 = getelementptr inbounds %struct.GPR, %struct.GPR* %1148, i32 0, i32 15
  %1150 = getelementptr inbounds %struct.Reg, %struct.Reg* %1149, i32 0, i32 0
  %RBP.i2657 = bitcast %union.anon* %1150 to i64*
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1152 = getelementptr inbounds %struct.GPR, %struct.GPR* %1151, i32 0, i32 23
  %1153 = getelementptr inbounds %struct.Reg, %struct.Reg* %1152, i32 0, i32 0
  %R11.i2658 = bitcast %union.anon* %1153 to i64*
  %1154 = load i64, i64* %RBP.i2657
  %1155 = sub i64 %1154, 128
  %1156 = load i64, i64* %PC.i2656
  %1157 = add i64 %1156, 4
  store i64 %1157, i64* %PC.i2656
  %1158 = inttoptr i64 %1155 to i32*
  %1159 = load i32, i32* %1158
  %1160 = sext i32 %1159 to i64
  store i64 %1160, i64* %R11.i2658, align 8
  store %struct.Memory* %loadMem_40631e, %struct.Memory** %MEMORY
  %loadMem_406322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1162 = getelementptr inbounds %struct.GPR, %struct.GPR* %1161, i32 0, i32 33
  %1163 = getelementptr inbounds %struct.Reg, %struct.Reg* %1162, i32 0, i32 0
  %PC.i2653 = bitcast %union.anon* %1163 to i64*
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1165 = getelementptr inbounds %struct.GPR, %struct.GPR* %1164, i32 0, i32 21
  %1166 = getelementptr inbounds %struct.Reg, %struct.Reg* %1165, i32 0, i32 0
  %R10.i2654 = bitcast %union.anon* %1166 to i64*
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 23
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %R11.i2655 = bitcast %union.anon* %1169 to i64*
  %1170 = load i64, i64* %R10.i2654
  %1171 = load i64, i64* %R11.i2655
  %1172 = mul i64 %1171, 8
  %1173 = add i64 %1172, %1170
  %1174 = load i64, i64* %PC.i2653
  %1175 = add i64 %1174, 4
  store i64 %1175, i64* %PC.i2653
  %1176 = inttoptr i64 %1173 to i64*
  %1177 = load i64, i64* %1176
  store i64 %1177, i64* %R10.i2654, align 8
  store %struct.Memory* %loadMem_406322, %struct.Memory** %MEMORY
  %loadMem_406326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1179 = getelementptr inbounds %struct.GPR, %struct.GPR* %1178, i32 0, i32 33
  %1180 = getelementptr inbounds %struct.Reg, %struct.Reg* %1179, i32 0, i32 0
  %PC.i2651 = bitcast %union.anon* %1180 to i64*
  %1181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1182 = getelementptr inbounds %struct.GPR, %struct.GPR* %1181, i32 0, i32 21
  %1183 = getelementptr inbounds %struct.Reg, %struct.Reg* %1182, i32 0, i32 0
  %R10.i2652 = bitcast %union.anon* %1183 to i64*
  %1184 = load i64, i64* %R10.i2652
  %1185 = add i64 %1184, 8
  %1186 = load i64, i64* %PC.i2651
  %1187 = add i64 %1186, 4
  store i64 %1187, i64* %PC.i2651
  %1188 = inttoptr i64 %1185 to i64*
  %1189 = load i64, i64* %1188
  store i64 %1189, i64* %R10.i2652, align 8
  store %struct.Memory* %loadMem_406326, %struct.Memory** %MEMORY
  %loadMem_40632a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1191 = getelementptr inbounds %struct.GPR, %struct.GPR* %1190, i32 0, i32 33
  %1192 = getelementptr inbounds %struct.Reg, %struct.Reg* %1191, i32 0, i32 0
  %PC.i2648 = bitcast %union.anon* %1192 to i64*
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1194 = getelementptr inbounds %struct.GPR, %struct.GPR* %1193, i32 0, i32 15
  %1195 = getelementptr inbounds %struct.Reg, %struct.Reg* %1194, i32 0, i32 0
  %RBP.i2649 = bitcast %union.anon* %1195 to i64*
  %1196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1197 = getelementptr inbounds %struct.GPR, %struct.GPR* %1196, i32 0, i32 21
  %1198 = getelementptr inbounds %struct.Reg, %struct.Reg* %1197, i32 0, i32 0
  %R10.i2650 = bitcast %union.anon* %1198 to i64*
  %1199 = load i64, i64* %RBP.i2649
  %1200 = sub i64 %1199, 144
  %1201 = load i64, i64* %R10.i2650
  %1202 = load i64, i64* %PC.i2648
  %1203 = add i64 %1202, 7
  store i64 %1203, i64* %PC.i2648
  %1204 = inttoptr i64 %1200 to i64*
  store i64 %1201, i64* %1204
  store %struct.Memory* %loadMem_40632a, %struct.Memory** %MEMORY
  %loadMem_406331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1206 = getelementptr inbounds %struct.GPR, %struct.GPR* %1205, i32 0, i32 33
  %1207 = getelementptr inbounds %struct.Reg, %struct.Reg* %1206, i32 0, i32 0
  %PC.i2646 = bitcast %union.anon* %1207 to i64*
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1209 = getelementptr inbounds %struct.GPR, %struct.GPR* %1208, i32 0, i32 21
  %1210 = getelementptr inbounds %struct.Reg, %struct.Reg* %1209, i32 0, i32 0
  %R10.i2647 = bitcast %union.anon* %1210 to i64*
  %1211 = load i64, i64* %PC.i2646
  %1212 = add i64 %1211, 8
  store i64 %1212, i64* %PC.i2646
  %1213 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1213, i64* %R10.i2647, align 8
  store %struct.Memory* %loadMem_406331, %struct.Memory** %MEMORY
  %loadMem_406339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1215 = getelementptr inbounds %struct.GPR, %struct.GPR* %1214, i32 0, i32 33
  %1216 = getelementptr inbounds %struct.Reg, %struct.Reg* %1215, i32 0, i32 0
  %PC.i2644 = bitcast %union.anon* %1216 to i64*
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1218 = getelementptr inbounds %struct.GPR, %struct.GPR* %1217, i32 0, i32 21
  %1219 = getelementptr inbounds %struct.Reg, %struct.Reg* %1218, i32 0, i32 0
  %R10.i2645 = bitcast %union.anon* %1219 to i64*
  %1220 = load i64, i64* %R10.i2645
  %1221 = add i64 %1220, 14168
  %1222 = load i64, i64* %PC.i2644
  %1223 = add i64 %1222, 7
  store i64 %1223, i64* %PC.i2644
  %1224 = inttoptr i64 %1221 to i64*
  %1225 = load i64, i64* %1224
  store i64 %1225, i64* %R10.i2645, align 8
  store %struct.Memory* %loadMem_406339, %struct.Memory** %MEMORY
  %loadMem_406340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1227 = getelementptr inbounds %struct.GPR, %struct.GPR* %1226, i32 0, i32 33
  %1228 = getelementptr inbounds %struct.Reg, %struct.Reg* %1227, i32 0, i32 0
  %PC.i2642 = bitcast %union.anon* %1228 to i64*
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 23
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %R11.i2643 = bitcast %union.anon* %1231 to i64*
  %1232 = load i64, i64* %PC.i2642
  %1233 = add i64 %1232, 8
  store i64 %1233, i64* %PC.i2642
  %1234 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1234, i64* %R11.i2643, align 8
  store %struct.Memory* %loadMem_406340, %struct.Memory** %MEMORY
  %loadMem_406348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1236 = getelementptr inbounds %struct.GPR, %struct.GPR* %1235, i32 0, i32 33
  %1237 = getelementptr inbounds %struct.Reg, %struct.Reg* %1236, i32 0, i32 0
  %PC.i2640 = bitcast %union.anon* %1237 to i64*
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1239 = getelementptr inbounds %struct.GPR, %struct.GPR* %1238, i32 0, i32 23
  %1240 = getelementptr inbounds %struct.Reg, %struct.Reg* %1239, i32 0, i32 0
  %R11.i2641 = bitcast %union.anon* %1240 to i64*
  %1241 = load i64, i64* %R11.i2641
  %1242 = add i64 %1241, 12
  %1243 = load i64, i64* %PC.i2640
  %1244 = add i64 %1243, 4
  store i64 %1244, i64* %PC.i2640
  %1245 = inttoptr i64 %1242 to i32*
  %1246 = load i32, i32* %1245
  %1247 = sext i32 %1246 to i64
  store i64 %1247, i64* %R11.i2641, align 8
  store %struct.Memory* %loadMem_406348, %struct.Memory** %MEMORY
  %loadMem_40634c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1249 = getelementptr inbounds %struct.GPR, %struct.GPR* %1248, i32 0, i32 33
  %1250 = getelementptr inbounds %struct.Reg, %struct.Reg* %1249, i32 0, i32 0
  %PC.i2638 = bitcast %union.anon* %1250 to i64*
  %1251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1252 = getelementptr inbounds %struct.GPR, %struct.GPR* %1251, i32 0, i32 23
  %1253 = getelementptr inbounds %struct.Reg, %struct.Reg* %1252, i32 0, i32 0
  %R11.i2639 = bitcast %union.anon* %1253 to i64*
  %1254 = load i64, i64* %R11.i2639
  %1255 = load i64, i64* %PC.i2638
  %1256 = add i64 %1255, 7
  store i64 %1256, i64* %PC.i2638
  %1257 = sext i64 %1254 to i128
  %1258 = and i128 %1257, -18446744073709551616
  %1259 = zext i64 %1254 to i128
  %1260 = or i128 %1258, %1259
  %1261 = mul i128 632, %1260
  %1262 = trunc i128 %1261 to i64
  store i64 %1262, i64* %R11.i2639, align 8
  %1263 = sext i64 %1262 to i128
  %1264 = icmp ne i128 %1263, %1261
  %1265 = zext i1 %1264 to i8
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1265, i8* %1266, align 1
  %1267 = trunc i128 %1261 to i32
  %1268 = and i32 %1267, 255
  %1269 = call i32 @llvm.ctpop.i32(i32 %1268)
  %1270 = trunc i32 %1269 to i8
  %1271 = and i8 %1270, 1
  %1272 = xor i8 %1271, 1
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1272, i8* %1273, align 1
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1274, align 1
  %1275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1275, align 1
  %1276 = lshr i64 %1262, 63
  %1277 = trunc i64 %1276 to i8
  %1278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1277, i8* %1278, align 1
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1265, i8* %1279, align 1
  store %struct.Memory* %loadMem_40634c, %struct.Memory** %MEMORY
  %loadMem_406353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 33
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %PC.i2636 = bitcast %union.anon* %1282 to i64*
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1284 = getelementptr inbounds %struct.GPR, %struct.GPR* %1283, i32 0, i32 21
  %1285 = getelementptr inbounds %struct.Reg, %struct.Reg* %1284, i32 0, i32 0
  %R10.i2637 = bitcast %union.anon* %1285 to i64*
  %1286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1287 = getelementptr inbounds %struct.GPR, %struct.GPR* %1286, i32 0, i32 23
  %1288 = getelementptr inbounds %struct.Reg, %struct.Reg* %1287, i32 0, i32 0
  %R11.i = bitcast %union.anon* %1288 to i64*
  %1289 = load i64, i64* %R10.i2637
  %1290 = load i64, i64* %R11.i
  %1291 = load i64, i64* %PC.i2636
  %1292 = add i64 %1291, 3
  store i64 %1292, i64* %PC.i2636
  %1293 = add i64 %1290, %1289
  store i64 %1293, i64* %R10.i2637, align 8
  %1294 = icmp ult i64 %1293, %1289
  %1295 = icmp ult i64 %1293, %1290
  %1296 = or i1 %1294, %1295
  %1297 = zext i1 %1296 to i8
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1297, i8* %1298, align 1
  %1299 = trunc i64 %1293 to i32
  %1300 = and i32 %1299, 255
  %1301 = call i32 @llvm.ctpop.i32(i32 %1300)
  %1302 = trunc i32 %1301 to i8
  %1303 = and i8 %1302, 1
  %1304 = xor i8 %1303, 1
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1304, i8* %1305, align 1
  %1306 = xor i64 %1290, %1289
  %1307 = xor i64 %1306, %1293
  %1308 = lshr i64 %1307, 4
  %1309 = trunc i64 %1308 to i8
  %1310 = and i8 %1309, 1
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1310, i8* %1311, align 1
  %1312 = icmp eq i64 %1293, 0
  %1313 = zext i1 %1312 to i8
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1313, i8* %1314, align 1
  %1315 = lshr i64 %1293, 63
  %1316 = trunc i64 %1315 to i8
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1316, i8* %1317, align 1
  %1318 = lshr i64 %1289, 63
  %1319 = lshr i64 %1290, 63
  %1320 = xor i64 %1315, %1318
  %1321 = xor i64 %1315, %1319
  %1322 = add i64 %1320, %1321
  %1323 = icmp eq i64 %1322, 2
  %1324 = zext i1 %1323 to i8
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1324, i8* %1325, align 1
  store %struct.Memory* %loadMem_406353, %struct.Memory** %MEMORY
  %loadMem_406356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1327 = getelementptr inbounds %struct.GPR, %struct.GPR* %1326, i32 0, i32 33
  %1328 = getelementptr inbounds %struct.Reg, %struct.Reg* %1327, i32 0, i32 0
  %PC.i2633 = bitcast %union.anon* %1328 to i64*
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1330 = getelementptr inbounds %struct.GPR, %struct.GPR* %1329, i32 0, i32 15
  %1331 = getelementptr inbounds %struct.Reg, %struct.Reg* %1330, i32 0, i32 0
  %RBP.i2634 = bitcast %union.anon* %1331 to i64*
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 21
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %R10.i2635 = bitcast %union.anon* %1334 to i64*
  %1335 = load i64, i64* %RBP.i2634
  %1336 = sub i64 %1335, 152
  %1337 = load i64, i64* %R10.i2635
  %1338 = load i64, i64* %PC.i2633
  %1339 = add i64 %1338, 7
  store i64 %1339, i64* %PC.i2633
  %1340 = inttoptr i64 %1336 to i64*
  store i64 %1337, i64* %1340
  store %struct.Memory* %loadMem_406356, %struct.Memory** %MEMORY
  %loadMem_40635d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1342 = getelementptr inbounds %struct.GPR, %struct.GPR* %1341, i32 0, i32 33
  %1343 = getelementptr inbounds %struct.Reg, %struct.Reg* %1342, i32 0, i32 0
  %PC.i2630 = bitcast %union.anon* %1343 to i64*
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1345 = getelementptr inbounds %struct.GPR, %struct.GPR* %1344, i32 0, i32 15
  %1346 = getelementptr inbounds %struct.Reg, %struct.Reg* %1345, i32 0, i32 0
  %RBP.i2631 = bitcast %union.anon* %1346 to i64*
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1348 = getelementptr inbounds %struct.GPR, %struct.GPR* %1347, i32 0, i32 21
  %1349 = getelementptr inbounds %struct.Reg, %struct.Reg* %1348, i32 0, i32 0
  %R10.i2632 = bitcast %union.anon* %1349 to i64*
  %1350 = load i64, i64* %RBP.i2631
  %1351 = sub i64 %1350, 152
  %1352 = load i64, i64* %PC.i2630
  %1353 = add i64 %1352, 7
  store i64 %1353, i64* %PC.i2630
  %1354 = inttoptr i64 %1351 to i64*
  %1355 = load i64, i64* %1354
  store i64 %1355, i64* %R10.i2632, align 8
  store %struct.Memory* %loadMem_40635d, %struct.Memory** %MEMORY
  %loadMem_406364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1357 = getelementptr inbounds %struct.GPR, %struct.GPR* %1356, i32 0, i32 33
  %1358 = getelementptr inbounds %struct.Reg, %struct.Reg* %1357, i32 0, i32 0
  %PC.i2627 = bitcast %union.anon* %1358 to i64*
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 7
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %RDX.i2628 = bitcast %union.anon* %1361 to i64*
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 21
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %R10.i2629 = bitcast %union.anon* %1364 to i64*
  %1365 = load i64, i64* %R10.i2629
  %1366 = add i64 %1365, 12
  %1367 = load i64, i64* %PC.i2627
  %1368 = add i64 %1367, 4
  store i64 %1368, i64* %PC.i2627
  %1369 = inttoptr i64 %1366 to i32*
  %1370 = load i32, i32* %1369
  %1371 = zext i32 %1370 to i64
  store i64 %1371, i64* %RDX.i2628, align 8
  store %struct.Memory* %loadMem_406364, %struct.Memory** %MEMORY
  %loadMem_406368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1373 = getelementptr inbounds %struct.GPR, %struct.GPR* %1372, i32 0, i32 33
  %1374 = getelementptr inbounds %struct.Reg, %struct.Reg* %1373, i32 0, i32 0
  %PC.i2625 = bitcast %union.anon* %1374 to i64*
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1376 = getelementptr inbounds %struct.GPR, %struct.GPR* %1375, i32 0, i32 21
  %1377 = getelementptr inbounds %struct.Reg, %struct.Reg* %1376, i32 0, i32 0
  %R10.i2626 = bitcast %union.anon* %1377 to i64*
  %1378 = load i64, i64* %PC.i2625
  %1379 = add i64 %1378, 8
  store i64 %1379, i64* %PC.i2625
  %1380 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1380, i64* %R10.i2626, align 8
  store %struct.Memory* %loadMem_406368, %struct.Memory** %MEMORY
  %loadMem_406370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1382 = getelementptr inbounds %struct.GPR, %struct.GPR* %1381, i32 0, i32 33
  %1383 = getelementptr inbounds %struct.Reg, %struct.Reg* %1382, i32 0, i32 0
  %PC.i2623 = bitcast %union.anon* %1383 to i64*
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1385 = getelementptr inbounds %struct.GPR, %struct.GPR* %1384, i32 0, i32 7
  %1386 = getelementptr inbounds %struct.Reg, %struct.Reg* %1385, i32 0, i32 0
  %RDX.i2624 = bitcast %union.anon* %1386 to i64*
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1388 = getelementptr inbounds %struct.GPR, %struct.GPR* %1387, i32 0, i32 21
  %1389 = getelementptr inbounds %struct.Reg, %struct.Reg* %1388, i32 0, i32 0
  %R10.i = bitcast %union.anon* %1389 to i64*
  %1390 = load i64, i64* %RDX.i2624
  %1391 = load i64, i64* %R10.i
  %1392 = add i64 %1391, 72668
  %1393 = load i64, i64* %PC.i2623
  %1394 = add i64 %1393, 7
  store i64 %1394, i64* %PC.i2623
  %1395 = trunc i64 %1390 to i32
  %1396 = inttoptr i64 %1392 to i32*
  %1397 = load i32, i32* %1396
  %1398 = add i32 %1397, %1395
  %1399 = zext i32 %1398 to i64
  store i64 %1399, i64* %RDX.i2624, align 8
  %1400 = icmp ult i32 %1398, %1395
  %1401 = icmp ult i32 %1398, %1397
  %1402 = or i1 %1400, %1401
  %1403 = zext i1 %1402 to i8
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1403, i8* %1404, align 1
  %1405 = and i32 %1398, 255
  %1406 = call i32 @llvm.ctpop.i32(i32 %1405)
  %1407 = trunc i32 %1406 to i8
  %1408 = and i8 %1407, 1
  %1409 = xor i8 %1408, 1
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1409, i8* %1410, align 1
  %1411 = xor i32 %1397, %1395
  %1412 = xor i32 %1411, %1398
  %1413 = lshr i32 %1412, 4
  %1414 = trunc i32 %1413 to i8
  %1415 = and i8 %1414, 1
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1415, i8* %1416, align 1
  %1417 = icmp eq i32 %1398, 0
  %1418 = zext i1 %1417 to i8
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1418, i8* %1419, align 1
  %1420 = lshr i32 %1398, 31
  %1421 = trunc i32 %1420 to i8
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1421, i8* %1422, align 1
  %1423 = lshr i32 %1395, 31
  %1424 = lshr i32 %1397, 31
  %1425 = xor i32 %1420, %1423
  %1426 = xor i32 %1420, %1424
  %1427 = add i32 %1425, %1426
  %1428 = icmp eq i32 %1427, 2
  %1429 = zext i1 %1428 to i8
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1429, i8* %1430, align 1
  store %struct.Memory* %loadMem_406370, %struct.Memory** %MEMORY
  %loadMem_406377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1432 = getelementptr inbounds %struct.GPR, %struct.GPR* %1431, i32 0, i32 33
  %1433 = getelementptr inbounds %struct.Reg, %struct.Reg* %1432, i32 0, i32 0
  %PC.i2621 = bitcast %union.anon* %1433 to i64*
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1435 = getelementptr inbounds %struct.GPR, %struct.GPR* %1434, i32 0, i32 7
  %1436 = getelementptr inbounds %struct.Reg, %struct.Reg* %1435, i32 0, i32 0
  %EDX.i2622 = bitcast %union.anon* %1436 to i32*
  %1437 = load i32, i32* %EDX.i2622
  %1438 = zext i32 %1437 to i64
  %1439 = load i64, i64* %PC.i2621
  %1440 = add i64 %1439, 3
  store i64 %1440, i64* %PC.i2621
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1441, align 1
  %1442 = and i32 %1437, 255
  %1443 = call i32 @llvm.ctpop.i32(i32 %1442)
  %1444 = trunc i32 %1443 to i8
  %1445 = and i8 %1444, 1
  %1446 = xor i8 %1445, 1
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1446, i8* %1447, align 1
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1448, align 1
  %1449 = icmp eq i32 %1437, 0
  %1450 = zext i1 %1449 to i8
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1450, i8* %1451, align 1
  %1452 = lshr i32 %1437, 31
  %1453 = trunc i32 %1452 to i8
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1453, i8* %1454, align 1
  %1455 = lshr i32 %1437, 31
  %1456 = xor i32 %1452, %1455
  %1457 = add i32 %1456, %1455
  %1458 = icmp eq i32 %1457, 2
  %1459 = zext i1 %1458 to i8
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1459, i8* %1460, align 1
  store %struct.Memory* %loadMem_406377, %struct.Memory** %MEMORY
  %loadMem_40637a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1462 = getelementptr inbounds %struct.GPR, %struct.GPR* %1461, i32 0, i32 33
  %1463 = getelementptr inbounds %struct.Reg, %struct.Reg* %1462, i32 0, i32 0
  %PC.i2618 = bitcast %union.anon* %1463 to i64*
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1465 = getelementptr inbounds %struct.GPR, %struct.GPR* %1464, i32 0, i32 17
  %1466 = getelementptr inbounds %struct.Reg, %struct.Reg* %1465, i32 0, i32 0
  %1467 = bitcast %union.anon* %1466 to %struct.anon.2*
  %R8B.i2619 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1467, i32 0, i32 0
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1469 = getelementptr inbounds %struct.GPR, %struct.GPR* %1468, i32 0, i32 15
  %1470 = getelementptr inbounds %struct.Reg, %struct.Reg* %1469, i32 0, i32 0
  %RBP.i2620 = bitcast %union.anon* %1470 to i64*
  %1471 = load i64, i64* %RBP.i2620
  %1472 = sub i64 %1471, 169
  %1473 = load i8, i8* %R8B.i2619
  %1474 = zext i8 %1473 to i64
  %1475 = load i64, i64* %PC.i2618
  %1476 = add i64 %1475, 7
  store i64 %1476, i64* %PC.i2618
  %1477 = inttoptr i64 %1472 to i8*
  store i8 %1473, i8* %1477
  store %struct.Memory* %loadMem_40637a, %struct.Memory** %MEMORY
  %loadMem_406381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 33
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %PC.i2617 = bitcast %union.anon* %1480 to i64*
  %1481 = load i64, i64* %PC.i2617
  %1482 = add i64 %1481, 30
  %1483 = load i64, i64* %PC.i2617
  %1484 = add i64 %1483, 6
  %1485 = load i64, i64* %PC.i2617
  %1486 = add i64 %1485, 6
  store i64 %1486, i64* %PC.i2617
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1488 = load i8, i8* %1487, align 1
  %1489 = icmp eq i8 %1488, 0
  %1490 = zext i1 %1489 to i8
  store i8 %1490, i8* %BRANCH_TAKEN, align 1
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1492 = select i1 %1489, i64 %1482, i64 %1484
  store i64 %1492, i64* %1491, align 8
  store %struct.Memory* %loadMem_406381, %struct.Memory** %MEMORY
  %loadBr_406381 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406381 = icmp eq i8 %loadBr_406381, 1
  br i1 %cmpBr_406381, label %block_.L_40639f, label %block_406387

block_406387:                                     ; preds = %routine_idivl__ecx.exit2701
  %loadMem_406387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1494 = getelementptr inbounds %struct.GPR, %struct.GPR* %1493, i32 0, i32 33
  %1495 = getelementptr inbounds %struct.Reg, %struct.Reg* %1494, i32 0, i32 0
  %PC.i2615 = bitcast %union.anon* %1495 to i64*
  %1496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1497 = getelementptr inbounds %struct.GPR, %struct.GPR* %1496, i32 0, i32 1
  %1498 = getelementptr inbounds %struct.Reg, %struct.Reg* %1497, i32 0, i32 0
  %RAX.i2616 = bitcast %union.anon* %1498 to i64*
  %1499 = load i64, i64* %PC.i2615
  %1500 = add i64 %1499, 8
  store i64 %1500, i64* %PC.i2615
  %1501 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1501, i64* %RAX.i2616, align 8
  store %struct.Memory* %loadMem_406387, %struct.Memory** %MEMORY
  %loadMem_40638f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1503 = getelementptr inbounds %struct.GPR, %struct.GPR* %1502, i32 0, i32 33
  %1504 = getelementptr inbounds %struct.Reg, %struct.Reg* %1503, i32 0, i32 0
  %PC.i2613 = bitcast %union.anon* %1504 to i64*
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1506 = getelementptr inbounds %struct.GPR, %struct.GPR* %1505, i32 0, i32 1
  %1507 = getelementptr inbounds %struct.Reg, %struct.Reg* %1506, i32 0, i32 0
  %RAX.i2614 = bitcast %union.anon* %1507 to i64*
  %1508 = load i64, i64* %RAX.i2614
  %1509 = add i64 %1508, 72704
  %1510 = load i64, i64* %PC.i2613
  %1511 = add i64 %1510, 7
  store i64 %1511, i64* %PC.i2613
  %1512 = inttoptr i64 %1509 to i32*
  %1513 = load i32, i32* %1512
  %1514 = sub i32 %1513, 1
  %1515 = icmp ult i32 %1513, 1
  %1516 = zext i1 %1515 to i8
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1516, i8* %1517, align 1
  %1518 = and i32 %1514, 255
  %1519 = call i32 @llvm.ctpop.i32(i32 %1518)
  %1520 = trunc i32 %1519 to i8
  %1521 = and i8 %1520, 1
  %1522 = xor i8 %1521, 1
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1522, i8* %1523, align 1
  %1524 = xor i32 %1513, 1
  %1525 = xor i32 %1524, %1514
  %1526 = lshr i32 %1525, 4
  %1527 = trunc i32 %1526 to i8
  %1528 = and i8 %1527, 1
  %1529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1528, i8* %1529, align 1
  %1530 = icmp eq i32 %1514, 0
  %1531 = zext i1 %1530 to i8
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1531, i8* %1532, align 1
  %1533 = lshr i32 %1514, 31
  %1534 = trunc i32 %1533 to i8
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1534, i8* %1535, align 1
  %1536 = lshr i32 %1513, 31
  %1537 = xor i32 %1533, %1536
  %1538 = add i32 %1537, %1536
  %1539 = icmp eq i32 %1538, 2
  %1540 = zext i1 %1539 to i8
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1540, i8* %1541, align 1
  store %struct.Memory* %loadMem_40638f, %struct.Memory** %MEMORY
  %loadMem_406396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1543 = getelementptr inbounds %struct.GPR, %struct.GPR* %1542, i32 0, i32 33
  %1544 = getelementptr inbounds %struct.Reg, %struct.Reg* %1543, i32 0, i32 0
  %PC.i2611 = bitcast %union.anon* %1544 to i64*
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1546 = getelementptr inbounds %struct.GPR, %struct.GPR* %1545, i32 0, i32 5
  %1547 = getelementptr inbounds %struct.Reg, %struct.Reg* %1546, i32 0, i32 0
  %1548 = bitcast %union.anon* %1547 to %struct.anon.2*
  %CL.i2612 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1548, i32 0, i32 0
  %1549 = load i64, i64* %PC.i2611
  %1550 = add i64 %1549, 3
  store i64 %1550, i64* %PC.i2611
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1552 = load i8, i8* %1551, align 1
  store i8 %1552, i8* %CL.i2612, align 1
  store %struct.Memory* %loadMem_406396, %struct.Memory** %MEMORY
  %loadMem_406399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1554 = getelementptr inbounds %struct.GPR, %struct.GPR* %1553, i32 0, i32 33
  %1555 = getelementptr inbounds %struct.Reg, %struct.Reg* %1554, i32 0, i32 0
  %PC.i2608 = bitcast %union.anon* %1555 to i64*
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 5
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %1559 = bitcast %union.anon* %1558 to %struct.anon.2*
  %CL.i2609 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1559, i32 0, i32 0
  %1560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1561 = getelementptr inbounds %struct.GPR, %struct.GPR* %1560, i32 0, i32 15
  %1562 = getelementptr inbounds %struct.Reg, %struct.Reg* %1561, i32 0, i32 0
  %RBP.i2610 = bitcast %union.anon* %1562 to i64*
  %1563 = load i64, i64* %RBP.i2610
  %1564 = sub i64 %1563, 169
  %1565 = load i8, i8* %CL.i2609
  %1566 = zext i8 %1565 to i64
  %1567 = load i64, i64* %PC.i2608
  %1568 = add i64 %1567, 6
  store i64 %1568, i64* %PC.i2608
  %1569 = inttoptr i64 %1564 to i8*
  store i8 %1565, i8* %1569
  store %struct.Memory* %loadMem_406399, %struct.Memory** %MEMORY
  br label %block_.L_40639f

block_.L_40639f:                                  ; preds = %block_406387, %routine_idivl__ecx.exit2701
  %loadMem_40639f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1571 = getelementptr inbounds %struct.GPR, %struct.GPR* %1570, i32 0, i32 33
  %1572 = getelementptr inbounds %struct.Reg, %struct.Reg* %1571, i32 0, i32 0
  %PC.i2605 = bitcast %union.anon* %1572 to i64*
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1574 = getelementptr inbounds %struct.GPR, %struct.GPR* %1573, i32 0, i32 1
  %1575 = getelementptr inbounds %struct.Reg, %struct.Reg* %1574, i32 0, i32 0
  %1576 = bitcast %union.anon* %1575 to %struct.anon.2*
  %AL.i2606 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1576, i32 0, i32 0
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1578 = getelementptr inbounds %struct.GPR, %struct.GPR* %1577, i32 0, i32 15
  %1579 = getelementptr inbounds %struct.Reg, %struct.Reg* %1578, i32 0, i32 0
  %RBP.i2607 = bitcast %union.anon* %1579 to i64*
  %1580 = load i64, i64* %RBP.i2607
  %1581 = sub i64 %1580, 169
  %1582 = load i64, i64* %PC.i2605
  %1583 = add i64 %1582, 6
  store i64 %1583, i64* %PC.i2605
  %1584 = inttoptr i64 %1581 to i8*
  %1585 = load i8, i8* %1584
  store i8 %1585, i8* %AL.i2606, align 1
  store %struct.Memory* %loadMem_40639f, %struct.Memory** %MEMORY
  %loadMem_4063a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1587 = getelementptr inbounds %struct.GPR, %struct.GPR* %1586, i32 0, i32 33
  %1588 = getelementptr inbounds %struct.Reg, %struct.Reg* %1587, i32 0, i32 0
  %PC.i2603 = bitcast %union.anon* %1588 to i64*
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1590 = getelementptr inbounds %struct.GPR, %struct.GPR* %1589, i32 0, i32 5
  %1591 = getelementptr inbounds %struct.Reg, %struct.Reg* %1590, i32 0, i32 0
  %RCX.i2604 = bitcast %union.anon* %1591 to i64*
  %1592 = load i64, i64* %PC.i2603
  %1593 = add i64 %1592, 5
  store i64 %1593, i64* %PC.i2603
  store i64 6, i64* %RCX.i2604, align 8
  store %struct.Memory* %loadMem_4063a5, %struct.Memory** %MEMORY
  %loadMem_4063aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1595 = getelementptr inbounds %struct.GPR, %struct.GPR* %1594, i32 0, i32 33
  %1596 = getelementptr inbounds %struct.Reg, %struct.Reg* %1595, i32 0, i32 0
  %PC.i2601 = bitcast %union.anon* %1596 to i64*
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1598 = getelementptr inbounds %struct.GPR, %struct.GPR* %1597, i32 0, i32 1
  %1599 = getelementptr inbounds %struct.Reg, %struct.Reg* %1598, i32 0, i32 0
  %1600 = bitcast %union.anon* %1599 to %struct.anon.2*
  %AL.i2602 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1600, i32 0, i32 0
  %1601 = load i8, i8* %AL.i2602
  %1602 = zext i8 %1601 to i64
  %1603 = load i64, i64* %PC.i2601
  %1604 = add i64 %1603, 2
  store i64 %1604, i64* %PC.i2601
  %1605 = and i64 1, %1602
  %1606 = trunc i64 %1605 to i8
  store i8 %1606, i8* %AL.i2602, align 1
  %1607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1607, align 1
  %1608 = trunc i64 %1605 to i32
  %1609 = and i32 %1608, 255
  %1610 = call i32 @llvm.ctpop.i32(i32 %1609)
  %1611 = trunc i32 %1610 to i8
  %1612 = and i8 %1611, 1
  %1613 = xor i8 %1612, 1
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1613, i8* %1614, align 1
  %1615 = icmp eq i8 %1606, 0
  %1616 = zext i1 %1615 to i8
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1616, i8* %1617, align 1
  %1618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1618, align 1
  %1619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1619, align 1
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1620, align 1
  store %struct.Memory* %loadMem_4063aa, %struct.Memory** %MEMORY
  %loadMem_4063ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1622 = getelementptr inbounds %struct.GPR, %struct.GPR* %1621, i32 0, i32 33
  %1623 = getelementptr inbounds %struct.Reg, %struct.Reg* %1622, i32 0, i32 0
  %PC.i2598 = bitcast %union.anon* %1623 to i64*
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1625 = getelementptr inbounds %struct.GPR, %struct.GPR* %1624, i32 0, i32 1
  %1626 = getelementptr inbounds %struct.Reg, %struct.Reg* %1625, i32 0, i32 0
  %1627 = bitcast %union.anon* %1626 to %struct.anon.2*
  %AL.i2599 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1627, i32 0, i32 0
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1629 = getelementptr inbounds %struct.GPR, %struct.GPR* %1628, i32 0, i32 7
  %1630 = getelementptr inbounds %struct.Reg, %struct.Reg* %1629, i32 0, i32 0
  %RDX.i2600 = bitcast %union.anon* %1630 to i64*
  %1631 = load i8, i8* %AL.i2599
  %1632 = zext i8 %1631 to i64
  %1633 = load i64, i64* %PC.i2598
  %1634 = add i64 %1633, 3
  store i64 %1634, i64* %PC.i2598
  %1635 = and i64 %1632, 255
  store i64 %1635, i64* %RDX.i2600, align 8
  store %struct.Memory* %loadMem_4063ac, %struct.Memory** %MEMORY
  %loadMem_4063af = load %struct.Memory*, %struct.Memory** %MEMORY
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1637 = getelementptr inbounds %struct.GPR, %struct.GPR* %1636, i32 0, i32 33
  %1638 = getelementptr inbounds %struct.Reg, %struct.Reg* %1637, i32 0, i32 0
  %PC.i2595 = bitcast %union.anon* %1638 to i64*
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1640 = getelementptr inbounds %struct.GPR, %struct.GPR* %1639, i32 0, i32 7
  %1641 = getelementptr inbounds %struct.Reg, %struct.Reg* %1640, i32 0, i32 0
  %EDX.i2596 = bitcast %union.anon* %1641 to i32*
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1643 = getelementptr inbounds %struct.GPR, %struct.GPR* %1642, i32 0, i32 15
  %1644 = getelementptr inbounds %struct.Reg, %struct.Reg* %1643, i32 0, i32 0
  %RBP.i2597 = bitcast %union.anon* %1644 to i64*
  %1645 = load i64, i64* %RBP.i2597
  %1646 = sub i64 %1645, 156
  %1647 = load i32, i32* %EDX.i2596
  %1648 = zext i32 %1647 to i64
  %1649 = load i64, i64* %PC.i2595
  %1650 = add i64 %1649, 6
  store i64 %1650, i64* %PC.i2595
  %1651 = inttoptr i64 %1646 to i32*
  store i32 %1647, i32* %1651
  store %struct.Memory* %loadMem_4063af, %struct.Memory** %MEMORY
  %loadMem_4063b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1653 = getelementptr inbounds %struct.GPR, %struct.GPR* %1652, i32 0, i32 33
  %1654 = getelementptr inbounds %struct.Reg, %struct.Reg* %1653, i32 0, i32 0
  %PC.i2592 = bitcast %union.anon* %1654 to i64*
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1656 = getelementptr inbounds %struct.GPR, %struct.GPR* %1655, i32 0, i32 9
  %1657 = getelementptr inbounds %struct.Reg, %struct.Reg* %1656, i32 0, i32 0
  %RSI.i2593 = bitcast %union.anon* %1657 to i64*
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 15
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %RBP.i2594 = bitcast %union.anon* %1660 to i64*
  %1661 = load i64, i64* %RBP.i2594
  %1662 = sub i64 %1661, 152
  %1663 = load i64, i64* %PC.i2592
  %1664 = add i64 %1663, 7
  store i64 %1664, i64* %PC.i2592
  %1665 = inttoptr i64 %1662 to i64*
  %1666 = load i64, i64* %1665
  store i64 %1666, i64* %RSI.i2593, align 8
  store %struct.Memory* %loadMem_4063b5, %struct.Memory** %MEMORY
  %loadMem_4063bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1668 = getelementptr inbounds %struct.GPR, %struct.GPR* %1667, i32 0, i32 33
  %1669 = getelementptr inbounds %struct.Reg, %struct.Reg* %1668, i32 0, i32 0
  %PC.i2589 = bitcast %union.anon* %1669 to i64*
  %1670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1671 = getelementptr inbounds %struct.GPR, %struct.GPR* %1670, i32 0, i32 7
  %1672 = getelementptr inbounds %struct.Reg, %struct.Reg* %1671, i32 0, i32 0
  %RDX.i2590 = bitcast %union.anon* %1672 to i64*
  %1673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1674 = getelementptr inbounds %struct.GPR, %struct.GPR* %1673, i32 0, i32 9
  %1675 = getelementptr inbounds %struct.Reg, %struct.Reg* %1674, i32 0, i32 0
  %RSI.i2591 = bitcast %union.anon* %1675 to i64*
  %1676 = load i64, i64* %RSI.i2591
  %1677 = add i64 %1676, 12
  %1678 = load i64, i64* %PC.i2589
  %1679 = add i64 %1678, 3
  store i64 %1679, i64* %PC.i2589
  %1680 = inttoptr i64 %1677 to i32*
  %1681 = load i32, i32* %1680
  %1682 = zext i32 %1681 to i64
  store i64 %1682, i64* %RDX.i2590, align 8
  store %struct.Memory* %loadMem_4063bc, %struct.Memory** %MEMORY
  %loadMem_4063bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1684 = getelementptr inbounds %struct.GPR, %struct.GPR* %1683, i32 0, i32 33
  %1685 = getelementptr inbounds %struct.Reg, %struct.Reg* %1684, i32 0, i32 0
  %PC.i2587 = bitcast %union.anon* %1685 to i64*
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1687 = getelementptr inbounds %struct.GPR, %struct.GPR* %1686, i32 0, i32 9
  %1688 = getelementptr inbounds %struct.Reg, %struct.Reg* %1687, i32 0, i32 0
  %RSI.i2588 = bitcast %union.anon* %1688 to i64*
  %1689 = load i64, i64* %PC.i2587
  %1690 = add i64 %1689, 8
  store i64 %1690, i64* %PC.i2587
  %1691 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1691, i64* %RSI.i2588, align 8
  store %struct.Memory* %loadMem_4063bf, %struct.Memory** %MEMORY
  %loadMem_4063c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1693 = getelementptr inbounds %struct.GPR, %struct.GPR* %1692, i32 0, i32 33
  %1694 = getelementptr inbounds %struct.Reg, %struct.Reg* %1693, i32 0, i32 0
  %PC.i2584 = bitcast %union.anon* %1694 to i64*
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1696 = getelementptr inbounds %struct.GPR, %struct.GPR* %1695, i32 0, i32 7
  %1697 = getelementptr inbounds %struct.Reg, %struct.Reg* %1696, i32 0, i32 0
  %RDX.i2585 = bitcast %union.anon* %1697 to i64*
  %1698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1699 = getelementptr inbounds %struct.GPR, %struct.GPR* %1698, i32 0, i32 9
  %1700 = getelementptr inbounds %struct.Reg, %struct.Reg* %1699, i32 0, i32 0
  %RSI.i2586 = bitcast %union.anon* %1700 to i64*
  %1701 = load i64, i64* %RDX.i2585
  %1702 = load i64, i64* %RSI.i2586
  %1703 = add i64 %1702, 72668
  %1704 = load i64, i64* %PC.i2584
  %1705 = add i64 %1704, 6
  store i64 %1705, i64* %PC.i2584
  %1706 = trunc i64 %1701 to i32
  %1707 = inttoptr i64 %1703 to i32*
  %1708 = load i32, i32* %1707
  %1709 = add i32 %1708, %1706
  %1710 = zext i32 %1709 to i64
  store i64 %1710, i64* %RDX.i2585, align 8
  %1711 = icmp ult i32 %1709, %1706
  %1712 = icmp ult i32 %1709, %1708
  %1713 = or i1 %1711, %1712
  %1714 = zext i1 %1713 to i8
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1714, i8* %1715, align 1
  %1716 = and i32 %1709, 255
  %1717 = call i32 @llvm.ctpop.i32(i32 %1716)
  %1718 = trunc i32 %1717 to i8
  %1719 = and i8 %1718, 1
  %1720 = xor i8 %1719, 1
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1720, i8* %1721, align 1
  %1722 = xor i32 %1708, %1706
  %1723 = xor i32 %1722, %1709
  %1724 = lshr i32 %1723, 4
  %1725 = trunc i32 %1724 to i8
  %1726 = and i8 %1725, 1
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1726, i8* %1727, align 1
  %1728 = icmp eq i32 %1709, 0
  %1729 = zext i1 %1728 to i8
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1729, i8* %1730, align 1
  %1731 = lshr i32 %1709, 31
  %1732 = trunc i32 %1731 to i8
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1732, i8* %1733, align 1
  %1734 = lshr i32 %1706, 31
  %1735 = lshr i32 %1708, 31
  %1736 = xor i32 %1731, %1734
  %1737 = xor i32 %1731, %1735
  %1738 = add i32 %1736, %1737
  %1739 = icmp eq i32 %1738, 2
  %1740 = zext i1 %1739 to i8
  %1741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1740, i8* %1741, align 1
  store %struct.Memory* %loadMem_4063c7, %struct.Memory** %MEMORY
  %loadMem_4063cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1743 = getelementptr inbounds %struct.GPR, %struct.GPR* %1742, i32 0, i32 33
  %1744 = getelementptr inbounds %struct.Reg, %struct.Reg* %1743, i32 0, i32 0
  %PC.i2582 = bitcast %union.anon* %1744 to i64*
  %1745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1746 = getelementptr inbounds %struct.GPR, %struct.GPR* %1745, i32 0, i32 7
  %1747 = getelementptr inbounds %struct.Reg, %struct.Reg* %1746, i32 0, i32 0
  %RDX.i2583 = bitcast %union.anon* %1747 to i64*
  %1748 = load i64, i64* %RDX.i2583
  %1749 = load i64, i64* %PC.i2582
  %1750 = add i64 %1749, 3
  store i64 %1750, i64* %PC.i2582
  %1751 = trunc i64 %1748 to i32
  %1752 = zext i32 %1751 to i64
  store i64 %1752, i64* %RDX.i2583, align 8
  %1753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1753, align 1
  %1754 = and i32 %1751, 255
  %1755 = call i32 @llvm.ctpop.i32(i32 %1754)
  %1756 = trunc i32 %1755 to i8
  %1757 = and i8 %1756, 1
  %1758 = xor i8 %1757, 1
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1758, i8* %1759, align 1
  %1760 = trunc i64 %1748 to i32
  %1761 = xor i32 %1760, %1751
  %1762 = lshr i32 %1761, 4
  %1763 = trunc i32 %1762 to i8
  %1764 = and i8 %1763, 1
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1764, i8* %1765, align 1
  %1766 = icmp eq i32 %1751, 0
  %1767 = zext i1 %1766 to i8
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1767, i8* %1768, align 1
  %1769 = lshr i32 %1751, 31
  %1770 = trunc i32 %1769 to i8
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1770, i8* %1771, align 1
  %1772 = lshr i32 %1751, 31
  %1773 = xor i32 %1769, %1772
  %1774 = add i32 %1773, %1772
  %1775 = icmp eq i32 %1774, 2
  %1776 = zext i1 %1775 to i8
  %1777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1776, i8* %1777, align 1
  store %struct.Memory* %loadMem_4063cd, %struct.Memory** %MEMORY
  %loadMem_4063d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1779 = getelementptr inbounds %struct.GPR, %struct.GPR* %1778, i32 0, i32 33
  %1780 = getelementptr inbounds %struct.Reg, %struct.Reg* %1779, i32 0, i32 0
  %PC.i2579 = bitcast %union.anon* %1780 to i64*
  %1781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1782 = getelementptr inbounds %struct.GPR, %struct.GPR* %1781, i32 0, i32 7
  %1783 = getelementptr inbounds %struct.Reg, %struct.Reg* %1782, i32 0, i32 0
  %EDX.i2580 = bitcast %union.anon* %1783 to i32*
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1785 = getelementptr inbounds %struct.GPR, %struct.GPR* %1784, i32 0, i32 1
  %1786 = getelementptr inbounds %struct.Reg, %struct.Reg* %1785, i32 0, i32 0
  %RAX.i2581 = bitcast %union.anon* %1786 to i64*
  %1787 = load i32, i32* %EDX.i2580
  %1788 = zext i32 %1787 to i64
  %1789 = load i64, i64* %PC.i2579
  %1790 = add i64 %1789, 2
  store i64 %1790, i64* %PC.i2579
  %1791 = and i64 %1788, 4294967295
  store i64 %1791, i64* %RAX.i2581, align 8
  store %struct.Memory* %loadMem_4063d0, %struct.Memory** %MEMORY
  %loadMem_4063d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1793 = getelementptr inbounds %struct.GPR, %struct.GPR* %1792, i32 0, i32 33
  %1794 = getelementptr inbounds %struct.Reg, %struct.Reg* %1793, i32 0, i32 0
  %PC.i2578 = bitcast %union.anon* %1794 to i64*
  %1795 = load i64, i64* %PC.i2578
  %1796 = add i64 %1795, 1
  store i64 %1796, i64* %PC.i2578
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1799 = bitcast %union.anon* %1798 to i32*
  %1800 = load i32, i32* %1799, align 8
  %1801 = sext i32 %1800 to i64
  %1802 = lshr i64 %1801, 32
  store i64 %1802, i64* %1797, align 8
  store %struct.Memory* %loadMem_4063d2, %struct.Memory** %MEMORY
  %loadMem_4063d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1804 = getelementptr inbounds %struct.GPR, %struct.GPR* %1803, i32 0, i32 33
  %1805 = getelementptr inbounds %struct.Reg, %struct.Reg* %1804, i32 0, i32 0
  %PC.i2573 = bitcast %union.anon* %1805 to i64*
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1807 = getelementptr inbounds %struct.GPR, %struct.GPR* %1806, i32 0, i32 5
  %1808 = getelementptr inbounds %struct.Reg, %struct.Reg* %1807, i32 0, i32 0
  %ECX.i2574 = bitcast %union.anon* %1808 to i32*
  %1809 = load i32, i32* %ECX.i2574
  %1810 = zext i32 %1809 to i64
  %1811 = load i64, i64* %PC.i2573
  %1812 = add i64 %1811, 2
  store i64 %1812, i64* %PC.i2573
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1814 = bitcast %union.anon* %1813 to i32*
  %1815 = load i32, i32* %1814, align 8
  %1816 = zext i32 %1815 to i64
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1818 = bitcast %union.anon* %1817 to i32*
  %1819 = load i32, i32* %1818, align 8
  %1820 = zext i32 %1819 to i64
  %1821 = shl i64 %1810, 32
  %1822 = ashr exact i64 %1821, 32
  %1823 = shl i64 %1820, 32
  %1824 = or i64 %1823, %1816
  %1825 = sdiv i64 %1824, %1822
  %1826 = shl i64 %1825, 32
  %1827 = ashr exact i64 %1826, 32
  %1828 = icmp eq i64 %1825, %1827
  br i1 %1828, label %1833, label %1829

; <label>:1829:                                   ; preds = %block_.L_40639f
  %1830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1831 = load i64, i64* %1830, align 8
  %1832 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1831, %struct.Memory* %loadMem_4063d3)
  br label %routine_idivl__ecx.exit2575

; <label>:1833:                                   ; preds = %block_.L_40639f
  %1834 = srem i64 %1824, %1822
  %1835 = getelementptr inbounds %union.anon, %union.anon* %1813, i64 0, i32 0
  %1836 = and i64 %1825, 4294967295
  store i64 %1836, i64* %1835, align 8
  %1837 = getelementptr inbounds %union.anon, %union.anon* %1817, i64 0, i32 0
  %1838 = and i64 %1834, 4294967295
  store i64 %1838, i64* %1837, align 8
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1839, align 1
  %1840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1840, align 1
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1841, align 1
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1842, align 1
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1843, align 1
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1844, align 1
  br label %routine_idivl__ecx.exit2575

routine_idivl__ecx.exit2575:                      ; preds = %1829, %1833
  %1845 = phi %struct.Memory* [ %1832, %1829 ], [ %loadMem_4063d3, %1833 ]
  store %struct.Memory* %1845, %struct.Memory** %MEMORY
  %loadMem_4063d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1847 = getelementptr inbounds %struct.GPR, %struct.GPR* %1846, i32 0, i32 33
  %1848 = getelementptr inbounds %struct.Reg, %struct.Reg* %1847, i32 0, i32 0
  %PC.i2570 = bitcast %union.anon* %1848 to i64*
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1850 = getelementptr inbounds %struct.GPR, %struct.GPR* %1849, i32 0, i32 1
  %1851 = getelementptr inbounds %struct.Reg, %struct.Reg* %1850, i32 0, i32 0
  %EAX.i2571 = bitcast %union.anon* %1851 to i32*
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1853 = getelementptr inbounds %struct.GPR, %struct.GPR* %1852, i32 0, i32 15
  %1854 = getelementptr inbounds %struct.Reg, %struct.Reg* %1853, i32 0, i32 0
  %RBP.i2572 = bitcast %union.anon* %1854 to i64*
  %1855 = load i64, i64* %RBP.i2572
  %1856 = sub i64 %1855, 104
  %1857 = load i32, i32* %EAX.i2571
  %1858 = zext i32 %1857 to i64
  %1859 = load i64, i64* %PC.i2570
  %1860 = add i64 %1859, 3
  store i64 %1860, i64* %PC.i2570
  %1861 = inttoptr i64 %1856 to i32*
  store i32 %1857, i32* %1861
  store %struct.Memory* %loadMem_4063d5, %struct.Memory** %MEMORY
  %loadMem_4063d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1863 = getelementptr inbounds %struct.GPR, %struct.GPR* %1862, i32 0, i32 33
  %1864 = getelementptr inbounds %struct.Reg, %struct.Reg* %1863, i32 0, i32 0
  %PC.i2567 = bitcast %union.anon* %1864 to i64*
  %1865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1866 = getelementptr inbounds %struct.GPR, %struct.GPR* %1865, i32 0, i32 9
  %1867 = getelementptr inbounds %struct.Reg, %struct.Reg* %1866, i32 0, i32 0
  %RSI.i2568 = bitcast %union.anon* %1867 to i64*
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1869 = getelementptr inbounds %struct.GPR, %struct.GPR* %1868, i32 0, i32 15
  %1870 = getelementptr inbounds %struct.Reg, %struct.Reg* %1869, i32 0, i32 0
  %RBP.i2569 = bitcast %union.anon* %1870 to i64*
  %1871 = load i64, i64* %RBP.i2569
  %1872 = sub i64 %1871, 152
  %1873 = load i64, i64* %PC.i2567
  %1874 = add i64 %1873, 7
  store i64 %1874, i64* %PC.i2567
  %1875 = inttoptr i64 %1872 to i64*
  %1876 = load i64, i64* %1875
  store i64 %1876, i64* %RSI.i2568, align 8
  store %struct.Memory* %loadMem_4063d8, %struct.Memory** %MEMORY
  %loadMem_4063df = load %struct.Memory*, %struct.Memory** %MEMORY
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 33
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %PC.i2564 = bitcast %union.anon* %1879 to i64*
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 1
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %RAX.i2565 = bitcast %union.anon* %1882 to i64*
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 9
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %RSI.i2566 = bitcast %union.anon* %1885 to i64*
  %1886 = load i64, i64* %RSI.i2566
  %1887 = add i64 %1886, 12
  %1888 = load i64, i64* %PC.i2564
  %1889 = add i64 %1888, 3
  store i64 %1889, i64* %PC.i2564
  %1890 = inttoptr i64 %1887 to i32*
  %1891 = load i32, i32* %1890
  %1892 = zext i32 %1891 to i64
  store i64 %1892, i64* %RAX.i2565, align 8
  store %struct.Memory* %loadMem_4063df, %struct.Memory** %MEMORY
  %loadMem_4063e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1894 = getelementptr inbounds %struct.GPR, %struct.GPR* %1893, i32 0, i32 33
  %1895 = getelementptr inbounds %struct.Reg, %struct.Reg* %1894, i32 0, i32 0
  %PC.i2562 = bitcast %union.anon* %1895 to i64*
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1897 = getelementptr inbounds %struct.GPR, %struct.GPR* %1896, i32 0, i32 9
  %1898 = getelementptr inbounds %struct.Reg, %struct.Reg* %1897, i32 0, i32 0
  %RSI.i2563 = bitcast %union.anon* %1898 to i64*
  %1899 = load i64, i64* %PC.i2562
  %1900 = add i64 %1899, 8
  store i64 %1900, i64* %PC.i2562
  %1901 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1901, i64* %RSI.i2563, align 8
  store %struct.Memory* %loadMem_4063e2, %struct.Memory** %MEMORY
  %loadMem_4063ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1903 = getelementptr inbounds %struct.GPR, %struct.GPR* %1902, i32 0, i32 33
  %1904 = getelementptr inbounds %struct.Reg, %struct.Reg* %1903, i32 0, i32 0
  %PC.i2559 = bitcast %union.anon* %1904 to i64*
  %1905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1906 = getelementptr inbounds %struct.GPR, %struct.GPR* %1905, i32 0, i32 1
  %1907 = getelementptr inbounds %struct.Reg, %struct.Reg* %1906, i32 0, i32 0
  %RAX.i2560 = bitcast %union.anon* %1907 to i64*
  %1908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1909 = getelementptr inbounds %struct.GPR, %struct.GPR* %1908, i32 0, i32 9
  %1910 = getelementptr inbounds %struct.Reg, %struct.Reg* %1909, i32 0, i32 0
  %RSI.i2561 = bitcast %union.anon* %1910 to i64*
  %1911 = load i64, i64* %RAX.i2560
  %1912 = load i64, i64* %RSI.i2561
  %1913 = add i64 %1912, 72668
  %1914 = load i64, i64* %PC.i2559
  %1915 = add i64 %1914, 6
  store i64 %1915, i64* %PC.i2559
  %1916 = trunc i64 %1911 to i32
  %1917 = inttoptr i64 %1913 to i32*
  %1918 = load i32, i32* %1917
  %1919 = add i32 %1918, %1916
  %1920 = zext i32 %1919 to i64
  store i64 %1920, i64* %RAX.i2560, align 8
  %1921 = icmp ult i32 %1919, %1916
  %1922 = icmp ult i32 %1919, %1918
  %1923 = or i1 %1921, %1922
  %1924 = zext i1 %1923 to i8
  %1925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1924, i8* %1925, align 1
  %1926 = and i32 %1919, 255
  %1927 = call i32 @llvm.ctpop.i32(i32 %1926)
  %1928 = trunc i32 %1927 to i8
  %1929 = and i8 %1928, 1
  %1930 = xor i8 %1929, 1
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1930, i8* %1931, align 1
  %1932 = xor i32 %1918, %1916
  %1933 = xor i32 %1932, %1919
  %1934 = lshr i32 %1933, 4
  %1935 = trunc i32 %1934 to i8
  %1936 = and i8 %1935, 1
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1936, i8* %1937, align 1
  %1938 = icmp eq i32 %1919, 0
  %1939 = zext i1 %1938 to i8
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1939, i8* %1940, align 1
  %1941 = lshr i32 %1919, 31
  %1942 = trunc i32 %1941 to i8
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1942, i8* %1943, align 1
  %1944 = lshr i32 %1916, 31
  %1945 = lshr i32 %1918, 31
  %1946 = xor i32 %1941, %1944
  %1947 = xor i32 %1941, %1945
  %1948 = add i32 %1946, %1947
  %1949 = icmp eq i32 %1948, 2
  %1950 = zext i1 %1949 to i8
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1950, i8* %1951, align 1
  store %struct.Memory* %loadMem_4063ea, %struct.Memory** %MEMORY
  %loadMem_4063f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1953 = getelementptr inbounds %struct.GPR, %struct.GPR* %1952, i32 0, i32 33
  %1954 = getelementptr inbounds %struct.Reg, %struct.Reg* %1953, i32 0, i32 0
  %PC.i2557 = bitcast %union.anon* %1954 to i64*
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1956 = getelementptr inbounds %struct.GPR, %struct.GPR* %1955, i32 0, i32 1
  %1957 = getelementptr inbounds %struct.Reg, %struct.Reg* %1956, i32 0, i32 0
  %RAX.i2558 = bitcast %union.anon* %1957 to i64*
  %1958 = load i64, i64* %RAX.i2558
  %1959 = load i64, i64* %PC.i2557
  %1960 = add i64 %1959, 3
  store i64 %1960, i64* %PC.i2557
  %1961 = trunc i64 %1958 to i32
  %1962 = zext i32 %1961 to i64
  store i64 %1962, i64* %RAX.i2558, align 8
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1963, align 1
  %1964 = and i32 %1961, 255
  %1965 = call i32 @llvm.ctpop.i32(i32 %1964)
  %1966 = trunc i32 %1965 to i8
  %1967 = and i8 %1966, 1
  %1968 = xor i8 %1967, 1
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1968, i8* %1969, align 1
  %1970 = trunc i64 %1958 to i32
  %1971 = xor i32 %1970, %1961
  %1972 = lshr i32 %1971, 4
  %1973 = trunc i32 %1972 to i8
  %1974 = and i8 %1973, 1
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1974, i8* %1975, align 1
  %1976 = icmp eq i32 %1961, 0
  %1977 = zext i1 %1976 to i8
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1977, i8* %1978, align 1
  %1979 = lshr i32 %1961, 31
  %1980 = trunc i32 %1979 to i8
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1980, i8* %1981, align 1
  %1982 = lshr i32 %1961, 31
  %1983 = xor i32 %1979, %1982
  %1984 = add i32 %1983, %1982
  %1985 = icmp eq i32 %1984, 2
  %1986 = zext i1 %1985 to i8
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1986, i8* %1987, align 1
  store %struct.Memory* %loadMem_4063f0, %struct.Memory** %MEMORY
  %loadMem_4063f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1989 = getelementptr inbounds %struct.GPR, %struct.GPR* %1988, i32 0, i32 33
  %1990 = getelementptr inbounds %struct.Reg, %struct.Reg* %1989, i32 0, i32 0
  %PC.i2556 = bitcast %union.anon* %1990 to i64*
  %1991 = load i64, i64* %PC.i2556
  %1992 = add i64 %1991, 1
  store i64 %1992, i64* %PC.i2556
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1995 = bitcast %union.anon* %1994 to i32*
  %1996 = load i32, i32* %1995, align 8
  %1997 = sext i32 %1996 to i64
  %1998 = lshr i64 %1997, 32
  store i64 %1998, i64* %1993, align 8
  store %struct.Memory* %loadMem_4063f3, %struct.Memory** %MEMORY
  %loadMem_4063f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2000 = getelementptr inbounds %struct.GPR, %struct.GPR* %1999, i32 0, i32 33
  %2001 = getelementptr inbounds %struct.Reg, %struct.Reg* %2000, i32 0, i32 0
  %PC.i2552 = bitcast %union.anon* %2001 to i64*
  %2002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2003 = getelementptr inbounds %struct.GPR, %struct.GPR* %2002, i32 0, i32 5
  %2004 = getelementptr inbounds %struct.Reg, %struct.Reg* %2003, i32 0, i32 0
  %ECX.i2553 = bitcast %union.anon* %2004 to i32*
  %2005 = load i32, i32* %ECX.i2553
  %2006 = zext i32 %2005 to i64
  %2007 = load i64, i64* %PC.i2552
  %2008 = add i64 %2007, 2
  store i64 %2008, i64* %PC.i2552
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2010 = bitcast %union.anon* %2009 to i32*
  %2011 = load i32, i32* %2010, align 8
  %2012 = zext i32 %2011 to i64
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2014 = bitcast %union.anon* %2013 to i32*
  %2015 = load i32, i32* %2014, align 8
  %2016 = zext i32 %2015 to i64
  %2017 = shl i64 %2006, 32
  %2018 = ashr exact i64 %2017, 32
  %2019 = shl i64 %2016, 32
  %2020 = or i64 %2019, %2012
  %2021 = sdiv i64 %2020, %2018
  %2022 = shl i64 %2021, 32
  %2023 = ashr exact i64 %2022, 32
  %2024 = icmp eq i64 %2021, %2023
  br i1 %2024, label %2029, label %2025

; <label>:2025:                                   ; preds = %routine_idivl__ecx.exit2575
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2027 = load i64, i64* %2026, align 8
  %2028 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2027, %struct.Memory* %loadMem_4063f4)
  br label %routine_idivl__ecx.exit

; <label>:2029:                                   ; preds = %routine_idivl__ecx.exit2575
  %2030 = srem i64 %2020, %2018
  %2031 = getelementptr inbounds %union.anon, %union.anon* %2009, i64 0, i32 0
  %2032 = and i64 %2021, 4294967295
  store i64 %2032, i64* %2031, align 8
  %2033 = getelementptr inbounds %union.anon, %union.anon* %2013, i64 0, i32 0
  %2034 = and i64 %2030, 4294967295
  store i64 %2034, i64* %2033, align 8
  %2035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2035, align 1
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2036, align 1
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2037, align 1
  %2038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2038, align 1
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2039, align 1
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2040, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %2025, %2029
  %2041 = phi %struct.Memory* [ %2028, %2025 ], [ %loadMem_4063f4, %2029 ]
  store %struct.Memory* %2041, %struct.Memory** %MEMORY
  %loadMem_4063f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2043 = getelementptr inbounds %struct.GPR, %struct.GPR* %2042, i32 0, i32 33
  %2044 = getelementptr inbounds %struct.Reg, %struct.Reg* %2043, i32 0, i32 0
  %PC.i2549 = bitcast %union.anon* %2044 to i64*
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2046 = getelementptr inbounds %struct.GPR, %struct.GPR* %2045, i32 0, i32 7
  %2047 = getelementptr inbounds %struct.Reg, %struct.Reg* %2046, i32 0, i32 0
  %EDX.i2550 = bitcast %union.anon* %2047 to i32*
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2049 = getelementptr inbounds %struct.GPR, %struct.GPR* %2048, i32 0, i32 15
  %2050 = getelementptr inbounds %struct.Reg, %struct.Reg* %2049, i32 0, i32 0
  %RBP.i2551 = bitcast %union.anon* %2050 to i64*
  %2051 = load i64, i64* %RBP.i2551
  %2052 = sub i64 %2051, 108
  %2053 = load i32, i32* %EDX.i2550
  %2054 = zext i32 %2053 to i64
  %2055 = load i64, i64* %PC.i2549
  %2056 = add i64 %2055, 3
  store i64 %2056, i64* %PC.i2549
  %2057 = inttoptr i64 %2052 to i32*
  store i32 %2053, i32* %2057
  store %struct.Memory* %loadMem_4063f6, %struct.Memory** %MEMORY
  %loadMem_4063f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2059 = getelementptr inbounds %struct.GPR, %struct.GPR* %2058, i32 0, i32 33
  %2060 = getelementptr inbounds %struct.Reg, %struct.Reg* %2059, i32 0, i32 0
  %PC.i2546 = bitcast %union.anon* %2060 to i64*
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2062 = getelementptr inbounds %struct.GPR, %struct.GPR* %2061, i32 0, i32 5
  %2063 = getelementptr inbounds %struct.Reg, %struct.Reg* %2062, i32 0, i32 0
  %RCX.i2547 = bitcast %union.anon* %2063 to i64*
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2065 = getelementptr inbounds %struct.GPR, %struct.GPR* %2064, i32 0, i32 15
  %2066 = getelementptr inbounds %struct.Reg, %struct.Reg* %2065, i32 0, i32 0
  %RBP.i2548 = bitcast %union.anon* %2066 to i64*
  %2067 = load i64, i64* %RBP.i2548
  %2068 = sub i64 %2067, 104
  %2069 = load i64, i64* %PC.i2546
  %2070 = add i64 %2069, 3
  store i64 %2070, i64* %PC.i2546
  %2071 = inttoptr i64 %2068 to i32*
  %2072 = load i32, i32* %2071
  %2073 = zext i32 %2072 to i64
  store i64 %2073, i64* %RCX.i2547, align 8
  store %struct.Memory* %loadMem_4063f9, %struct.Memory** %MEMORY
  %loadMem_4063fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2075 = getelementptr inbounds %struct.GPR, %struct.GPR* %2074, i32 0, i32 33
  %2076 = getelementptr inbounds %struct.Reg, %struct.Reg* %2075, i32 0, i32 0
  %PC.i2544 = bitcast %union.anon* %2076 to i64*
  %2077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2078 = getelementptr inbounds %struct.GPR, %struct.GPR* %2077, i32 0, i32 5
  %2079 = getelementptr inbounds %struct.Reg, %struct.Reg* %2078, i32 0, i32 0
  %RCX.i2545 = bitcast %union.anon* %2079 to i64*
  %2080 = load i64, i64* %RCX.i2545
  %2081 = load i64, i64* %PC.i2544
  %2082 = add i64 %2081, 3
  store i64 %2082, i64* %PC.i2544
  %2083 = trunc i64 %2080 to i32
  %2084 = add i32 15, %2083
  %2085 = zext i32 %2084 to i64
  store i64 %2085, i64* %RCX.i2545, align 8
  %2086 = icmp ult i32 %2084, %2083
  %2087 = icmp ult i32 %2084, 15
  %2088 = or i1 %2086, %2087
  %2089 = zext i1 %2088 to i8
  %2090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2089, i8* %2090, align 1
  %2091 = and i32 %2084, 255
  %2092 = call i32 @llvm.ctpop.i32(i32 %2091)
  %2093 = trunc i32 %2092 to i8
  %2094 = and i8 %2093, 1
  %2095 = xor i8 %2094, 1
  %2096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2095, i8* %2096, align 1
  %2097 = xor i64 15, %2080
  %2098 = trunc i64 %2097 to i32
  %2099 = xor i32 %2098, %2084
  %2100 = lshr i32 %2099, 4
  %2101 = trunc i32 %2100 to i8
  %2102 = and i8 %2101, 1
  %2103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2102, i8* %2103, align 1
  %2104 = icmp eq i32 %2084, 0
  %2105 = zext i1 %2104 to i8
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2105, i8* %2106, align 1
  %2107 = lshr i32 %2084, 31
  %2108 = trunc i32 %2107 to i8
  %2109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2108, i8* %2109, align 1
  %2110 = lshr i32 %2083, 31
  %2111 = xor i32 %2107, %2110
  %2112 = add i32 %2111, %2107
  %2113 = icmp eq i32 %2112, 2
  %2114 = zext i1 %2113 to i8
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2114, i8* %2115, align 1
  store %struct.Memory* %loadMem_4063fc, %struct.Memory** %MEMORY
  %loadMem_4063ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2117 = getelementptr inbounds %struct.GPR, %struct.GPR* %2116, i32 0, i32 33
  %2118 = getelementptr inbounds %struct.Reg, %struct.Reg* %2117, i32 0, i32 0
  %PC.i2541 = bitcast %union.anon* %2118 to i64*
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2120 = getelementptr inbounds %struct.GPR, %struct.GPR* %2119, i32 0, i32 5
  %2121 = getelementptr inbounds %struct.Reg, %struct.Reg* %2120, i32 0, i32 0
  %ECX.i2542 = bitcast %union.anon* %2121 to i32*
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2123 = getelementptr inbounds %struct.GPR, %struct.GPR* %2122, i32 0, i32 15
  %2124 = getelementptr inbounds %struct.Reg, %struct.Reg* %2123, i32 0, i32 0
  %RBP.i2543 = bitcast %union.anon* %2124 to i64*
  %2125 = load i64, i64* %RBP.i2543
  %2126 = sub i64 %2125, 112
  %2127 = load i32, i32* %ECX.i2542
  %2128 = zext i32 %2127 to i64
  %2129 = load i64, i64* %PC.i2541
  %2130 = add i64 %2129, 3
  store i64 %2130, i64* %PC.i2541
  %2131 = inttoptr i64 %2126 to i32*
  store i32 %2127, i32* %2131
  store %struct.Memory* %loadMem_4063ff, %struct.Memory** %MEMORY
  %loadMem_406402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2133 = getelementptr inbounds %struct.GPR, %struct.GPR* %2132, i32 0, i32 33
  %2134 = getelementptr inbounds %struct.Reg, %struct.Reg* %2133, i32 0, i32 0
  %PC.i2539 = bitcast %union.anon* %2134 to i64*
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 15
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %RBP.i2540 = bitcast %union.anon* %2137 to i64*
  %2138 = load i64, i64* %RBP.i2540
  %2139 = sub i64 %2138, 28
  %2140 = load i64, i64* %PC.i2539
  %2141 = add i64 %2140, 7
  store i64 %2141, i64* %PC.i2539
  %2142 = inttoptr i64 %2139 to i32*
  store i32 0, i32* %2142
  store %struct.Memory* %loadMem_406402, %struct.Memory** %MEMORY
  br label %block_.L_406409

block_.L_406409:                                  ; preds = %block_.L_406500, %routine_idivl__ecx.exit
  %loadMem_406409 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2144 = getelementptr inbounds %struct.GPR, %struct.GPR* %2143, i32 0, i32 33
  %2145 = getelementptr inbounds %struct.Reg, %struct.Reg* %2144, i32 0, i32 0
  %PC.i2536 = bitcast %union.anon* %2145 to i64*
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2147 = getelementptr inbounds %struct.GPR, %struct.GPR* %2146, i32 0, i32 1
  %2148 = getelementptr inbounds %struct.Reg, %struct.Reg* %2147, i32 0, i32 0
  %EAX.i2537 = bitcast %union.anon* %2148 to i32*
  %2149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2150 = getelementptr inbounds %struct.GPR, %struct.GPR* %2149, i32 0, i32 1
  %2151 = getelementptr inbounds %struct.Reg, %struct.Reg* %2150, i32 0, i32 0
  %RAX.i2538 = bitcast %union.anon* %2151 to i64*
  %2152 = load i64, i64* %RAX.i2538
  %2153 = load i32, i32* %EAX.i2537
  %2154 = zext i32 %2153 to i64
  %2155 = load i64, i64* %PC.i2536
  %2156 = add i64 %2155, 2
  store i64 %2156, i64* %PC.i2536
  %2157 = xor i64 %2154, %2152
  %2158 = trunc i64 %2157 to i32
  %2159 = and i64 %2157, 4294967295
  store i64 %2159, i64* %RAX.i2538, align 8
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2160, align 1
  %2161 = and i32 %2158, 255
  %2162 = call i32 @llvm.ctpop.i32(i32 %2161)
  %2163 = trunc i32 %2162 to i8
  %2164 = and i8 %2163, 1
  %2165 = xor i8 %2164, 1
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2165, i8* %2166, align 1
  %2167 = icmp eq i32 %2158, 0
  %2168 = zext i1 %2167 to i8
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2168, i8* %2169, align 1
  %2170 = lshr i32 %2158, 31
  %2171 = trunc i32 %2170 to i8
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2171, i8* %2172, align 1
  %2173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2173, align 1
  %2174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2174, align 1
  store %struct.Memory* %loadMem_406409, %struct.Memory** %MEMORY
  %loadMem_40640b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 33
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %PC.i2533 = bitcast %union.anon* %2177 to i64*
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 1
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %2181 = bitcast %union.anon* %2180 to %struct.anon.2*
  %AL.i2534 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2181, i32 0, i32 0
  %2182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2183 = getelementptr inbounds %struct.GPR, %struct.GPR* %2182, i32 0, i32 5
  %2184 = getelementptr inbounds %struct.Reg, %struct.Reg* %2183, i32 0, i32 0
  %2185 = bitcast %union.anon* %2184 to %struct.anon.2*
  %CL.i2535 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2185, i32 0, i32 0
  %2186 = load i8, i8* %AL.i2534
  %2187 = zext i8 %2186 to i64
  %2188 = load i64, i64* %PC.i2533
  %2189 = add i64 %2188, 2
  store i64 %2189, i64* %PC.i2533
  store i8 %2186, i8* %CL.i2535, align 1
  store %struct.Memory* %loadMem_40640b, %struct.Memory** %MEMORY
  %loadMem_40640d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2191 = getelementptr inbounds %struct.GPR, %struct.GPR* %2190, i32 0, i32 33
  %2192 = getelementptr inbounds %struct.Reg, %struct.Reg* %2191, i32 0, i32 0
  %PC.i2531 = bitcast %union.anon* %2192 to i64*
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2194 = getelementptr inbounds %struct.GPR, %struct.GPR* %2193, i32 0, i32 15
  %2195 = getelementptr inbounds %struct.Reg, %struct.Reg* %2194, i32 0, i32 0
  %RBP.i2532 = bitcast %union.anon* %2195 to i64*
  %2196 = load i64, i64* %RBP.i2532
  %2197 = sub i64 %2196, 28
  %2198 = load i64, i64* %PC.i2531
  %2199 = add i64 %2198, 4
  store i64 %2199, i64* %PC.i2531
  %2200 = inttoptr i64 %2197 to i32*
  %2201 = load i32, i32* %2200
  %2202 = sub i32 %2201, 4
  %2203 = icmp ult i32 %2201, 4
  %2204 = zext i1 %2203 to i8
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2204, i8* %2205, align 1
  %2206 = and i32 %2202, 255
  %2207 = call i32 @llvm.ctpop.i32(i32 %2206)
  %2208 = trunc i32 %2207 to i8
  %2209 = and i8 %2208, 1
  %2210 = xor i8 %2209, 1
  %2211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2210, i8* %2211, align 1
  %2212 = xor i32 %2201, 4
  %2213 = xor i32 %2212, %2202
  %2214 = lshr i32 %2213, 4
  %2215 = trunc i32 %2214 to i8
  %2216 = and i8 %2215, 1
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2216, i8* %2217, align 1
  %2218 = icmp eq i32 %2202, 0
  %2219 = zext i1 %2218 to i8
  %2220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2219, i8* %2220, align 1
  %2221 = lshr i32 %2202, 31
  %2222 = trunc i32 %2221 to i8
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2222, i8* %2223, align 1
  %2224 = lshr i32 %2201, 31
  %2225 = xor i32 %2221, %2224
  %2226 = add i32 %2225, %2224
  %2227 = icmp eq i32 %2226, 2
  %2228 = zext i1 %2227 to i8
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2228, i8* %2229, align 1
  store %struct.Memory* %loadMem_40640d, %struct.Memory** %MEMORY
  %loadMem_406411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2231 = getelementptr inbounds %struct.GPR, %struct.GPR* %2230, i32 0, i32 33
  %2232 = getelementptr inbounds %struct.Reg, %struct.Reg* %2231, i32 0, i32 0
  %PC.i2528 = bitcast %union.anon* %2232 to i64*
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2234 = getelementptr inbounds %struct.GPR, %struct.GPR* %2233, i32 0, i32 5
  %2235 = getelementptr inbounds %struct.Reg, %struct.Reg* %2234, i32 0, i32 0
  %2236 = bitcast %union.anon* %2235 to %struct.anon.2*
  %CL.i2529 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2236, i32 0, i32 0
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2238 = getelementptr inbounds %struct.GPR, %struct.GPR* %2237, i32 0, i32 15
  %2239 = getelementptr inbounds %struct.Reg, %struct.Reg* %2238, i32 0, i32 0
  %RBP.i2530 = bitcast %union.anon* %2239 to i64*
  %2240 = load i64, i64* %RBP.i2530
  %2241 = sub i64 %2240, 170
  %2242 = load i8, i8* %CL.i2529
  %2243 = zext i8 %2242 to i64
  %2244 = load i64, i64* %PC.i2528
  %2245 = add i64 %2244, 6
  store i64 %2245, i64* %PC.i2528
  %2246 = inttoptr i64 %2241 to i8*
  store i8 %2242, i8* %2246
  store %struct.Memory* %loadMem_406411, %struct.Memory** %MEMORY
  %loadMem_406417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2248 = getelementptr inbounds %struct.GPR, %struct.GPR* %2247, i32 0, i32 33
  %2249 = getelementptr inbounds %struct.Reg, %struct.Reg* %2248, i32 0, i32 0
  %PC.i2527 = bitcast %union.anon* %2249 to i64*
  %2250 = load i64, i64* %PC.i2527
  %2251 = add i64 %2250, 24
  %2252 = load i64, i64* %PC.i2527
  %2253 = add i64 %2252, 6
  %2254 = load i64, i64* %PC.i2527
  %2255 = add i64 %2254, 6
  store i64 %2255, i64* %PC.i2527
  %2256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2257 = load i8, i8* %2256, align 1
  %2258 = icmp ne i8 %2257, 0
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2260 = load i8, i8* %2259, align 1
  %2261 = icmp ne i8 %2260, 0
  %2262 = xor i1 %2258, %2261
  %2263 = xor i1 %2262, true
  %2264 = zext i1 %2263 to i8
  store i8 %2264, i8* %BRANCH_TAKEN, align 1
  %2265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2266 = select i1 %2262, i64 %2253, i64 %2251
  store i64 %2266, i64* %2265, align 8
  store %struct.Memory* %loadMem_406417, %struct.Memory** %MEMORY
  %loadBr_406417 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406417 = icmp eq i8 %loadBr_406417, 1
  br i1 %cmpBr_406417, label %block_.L_40642f, label %block_40641d

block_40641d:                                     ; preds = %block_.L_406409
  %loadMem_40641d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2268 = getelementptr inbounds %struct.GPR, %struct.GPR* %2267, i32 0, i32 33
  %2269 = getelementptr inbounds %struct.Reg, %struct.Reg* %2268, i32 0, i32 0
  %PC.i2525 = bitcast %union.anon* %2269 to i64*
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2271 = getelementptr inbounds %struct.GPR, %struct.GPR* %2270, i32 0, i32 15
  %2272 = getelementptr inbounds %struct.Reg, %struct.Reg* %2271, i32 0, i32 0
  %RBP.i2526 = bitcast %union.anon* %2272 to i64*
  %2273 = load i64, i64* %RBP.i2526
  %2274 = sub i64 %2273, 156
  %2275 = load i64, i64* %PC.i2525
  %2276 = add i64 %2275, 7
  store i64 %2276, i64* %PC.i2525
  %2277 = inttoptr i64 %2274 to i32*
  %2278 = load i32, i32* %2277
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2279, align 1
  %2280 = and i32 %2278, 255
  %2281 = call i32 @llvm.ctpop.i32(i32 %2280)
  %2282 = trunc i32 %2281 to i8
  %2283 = and i8 %2282, 1
  %2284 = xor i8 %2283, 1
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2284, i8* %2285, align 1
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2286, align 1
  %2287 = icmp eq i32 %2278, 0
  %2288 = zext i1 %2287 to i8
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2288, i8* %2289, align 1
  %2290 = lshr i32 %2278, 31
  %2291 = trunc i32 %2290 to i8
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2291, i8* %2292, align 1
  %2293 = lshr i32 %2278, 31
  %2294 = xor i32 %2290, %2293
  %2295 = add i32 %2294, %2293
  %2296 = icmp eq i32 %2295, 2
  %2297 = zext i1 %2296 to i8
  %2298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2297, i8* %2298, align 1
  store %struct.Memory* %loadMem_40641d, %struct.Memory** %MEMORY
  %loadMem_406424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 33
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %PC.i2523 = bitcast %union.anon* %2301 to i64*
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2303 = getelementptr inbounds %struct.GPR, %struct.GPR* %2302, i32 0, i32 1
  %2304 = getelementptr inbounds %struct.Reg, %struct.Reg* %2303, i32 0, i32 0
  %2305 = bitcast %union.anon* %2304 to %struct.anon.2*
  %AL.i2524 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2305, i32 0, i32 0
  %2306 = load i64, i64* %PC.i2523
  %2307 = add i64 %2306, 3
  store i64 %2307, i64* %PC.i2523
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2309 = load i8, i8* %2308, align 1
  %2310 = icmp eq i8 %2309, 0
  %2311 = zext i1 %2310 to i8
  store i8 %2311, i8* %AL.i2524, align 1
  store %struct.Memory* %loadMem_406424, %struct.Memory** %MEMORY
  %loadMem_406427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2313 = getelementptr inbounds %struct.GPR, %struct.GPR* %2312, i32 0, i32 33
  %2314 = getelementptr inbounds %struct.Reg, %struct.Reg* %2313, i32 0, i32 0
  %PC.i2521 = bitcast %union.anon* %2314 to i64*
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2316 = getelementptr inbounds %struct.GPR, %struct.GPR* %2315, i32 0, i32 1
  %2317 = getelementptr inbounds %struct.Reg, %struct.Reg* %2316, i32 0, i32 0
  %2318 = bitcast %union.anon* %2317 to %struct.anon.2*
  %AL.i2522 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2318, i32 0, i32 0
  %2319 = load i8, i8* %AL.i2522
  %2320 = zext i8 %2319 to i64
  %2321 = load i64, i64* %PC.i2521
  %2322 = add i64 %2321, 2
  store i64 %2322, i64* %PC.i2521
  %2323 = xor i64 255, %2320
  %2324 = trunc i64 %2323 to i8
  store i8 %2324, i8* %AL.i2522, align 1
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2325, align 1
  %2326 = trunc i64 %2323 to i32
  %2327 = and i32 %2326, 255
  %2328 = call i32 @llvm.ctpop.i32(i32 %2327)
  %2329 = trunc i32 %2328 to i8
  %2330 = and i8 %2329, 1
  %2331 = xor i8 %2330, 1
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2331, i8* %2332, align 1
  %2333 = icmp eq i8 %2324, 0
  %2334 = zext i1 %2333 to i8
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2334, i8* %2335, align 1
  %2336 = lshr i8 %2324, 7
  %2337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2336, i8* %2337, align 1
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2338, align 1
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2339, align 1
  store %struct.Memory* %loadMem_406427, %struct.Memory** %MEMORY
  %loadMem_406429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2341 = getelementptr inbounds %struct.GPR, %struct.GPR* %2340, i32 0, i32 33
  %2342 = getelementptr inbounds %struct.Reg, %struct.Reg* %2341, i32 0, i32 0
  %PC.i2518 = bitcast %union.anon* %2342 to i64*
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 1
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %2346 = bitcast %union.anon* %2345 to %struct.anon.2*
  %AL.i2519 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2346, i32 0, i32 0
  %2347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2348 = getelementptr inbounds %struct.GPR, %struct.GPR* %2347, i32 0, i32 15
  %2349 = getelementptr inbounds %struct.Reg, %struct.Reg* %2348, i32 0, i32 0
  %RBP.i2520 = bitcast %union.anon* %2349 to i64*
  %2350 = load i64, i64* %RBP.i2520
  %2351 = sub i64 %2350, 170
  %2352 = load i8, i8* %AL.i2519
  %2353 = zext i8 %2352 to i64
  %2354 = load i64, i64* %PC.i2518
  %2355 = add i64 %2354, 6
  store i64 %2355, i64* %PC.i2518
  %2356 = inttoptr i64 %2351 to i8*
  store i8 %2352, i8* %2356
  store %struct.Memory* %loadMem_406429, %struct.Memory** %MEMORY
  br label %block_.L_40642f

block_.L_40642f:                                  ; preds = %block_40641d, %block_.L_406409
  %loadMem_40642f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2358 = getelementptr inbounds %struct.GPR, %struct.GPR* %2357, i32 0, i32 33
  %2359 = getelementptr inbounds %struct.Reg, %struct.Reg* %2358, i32 0, i32 0
  %PC.i2515 = bitcast %union.anon* %2359 to i64*
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2361 = getelementptr inbounds %struct.GPR, %struct.GPR* %2360, i32 0, i32 1
  %2362 = getelementptr inbounds %struct.Reg, %struct.Reg* %2361, i32 0, i32 0
  %2363 = bitcast %union.anon* %2362 to %struct.anon.2*
  %AL.i2516 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2363, i32 0, i32 0
  %2364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2365 = getelementptr inbounds %struct.GPR, %struct.GPR* %2364, i32 0, i32 15
  %2366 = getelementptr inbounds %struct.Reg, %struct.Reg* %2365, i32 0, i32 0
  %RBP.i2517 = bitcast %union.anon* %2366 to i64*
  %2367 = load i64, i64* %RBP.i2517
  %2368 = sub i64 %2367, 170
  %2369 = load i64, i64* %PC.i2515
  %2370 = add i64 %2369, 6
  store i64 %2370, i64* %PC.i2515
  %2371 = inttoptr i64 %2368 to i8*
  %2372 = load i8, i8* %2371
  store i8 %2372, i8* %AL.i2516, align 1
  store %struct.Memory* %loadMem_40642f, %struct.Memory** %MEMORY
  %loadMem_406435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 33
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %PC.i2513 = bitcast %union.anon* %2375 to i64*
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 1
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %2379 = bitcast %union.anon* %2378 to %struct.anon.2*
  %AL.i2514 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2379, i32 0, i32 0
  %2380 = load i8, i8* %AL.i2514
  %2381 = zext i8 %2380 to i64
  %2382 = load i64, i64* %PC.i2513
  %2383 = add i64 %2382, 2
  store i64 %2383, i64* %PC.i2513
  %2384 = and i64 1, %2381
  %2385 = trunc i64 %2384 to i8
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2386, align 1
  %2387 = trunc i64 %2384 to i32
  %2388 = and i32 %2387, 255
  %2389 = call i32 @llvm.ctpop.i32(i32 %2388)
  %2390 = trunc i32 %2389 to i8
  %2391 = and i8 %2390, 1
  %2392 = xor i8 %2391, 1
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2392, i8* %2393, align 1
  %2394 = icmp eq i8 %2385, 0
  %2395 = zext i1 %2394 to i8
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2395, i8* %2396, align 1
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2397, align 1
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2398, align 1
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2399, align 1
  store %struct.Memory* %loadMem_406435, %struct.Memory** %MEMORY
  %loadMem_406437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2401 = getelementptr inbounds %struct.GPR, %struct.GPR* %2400, i32 0, i32 33
  %2402 = getelementptr inbounds %struct.Reg, %struct.Reg* %2401, i32 0, i32 0
  %PC.i2512 = bitcast %union.anon* %2402 to i64*
  %2403 = load i64, i64* %PC.i2512
  %2404 = add i64 %2403, 11
  %2405 = load i64, i64* %PC.i2512
  %2406 = add i64 %2405, 6
  %2407 = load i64, i64* %PC.i2512
  %2408 = add i64 %2407, 6
  store i64 %2408, i64* %PC.i2512
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2410 = load i8, i8* %2409, align 1
  %2411 = icmp eq i8 %2410, 0
  %2412 = zext i1 %2411 to i8
  store i8 %2412, i8* %BRANCH_TAKEN, align 1
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2414 = select i1 %2411, i64 %2404, i64 %2406
  store i64 %2414, i64* %2413, align 8
  store %struct.Memory* %loadMem_406437, %struct.Memory** %MEMORY
  %loadBr_406437 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406437 = icmp eq i8 %loadBr_406437, 1
  br i1 %cmpBr_406437, label %block_.L_406442, label %block_40643d

block_40643d:                                     ; preds = %block_.L_40642f
  %loadMem_40643d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2416 = getelementptr inbounds %struct.GPR, %struct.GPR* %2415, i32 0, i32 33
  %2417 = getelementptr inbounds %struct.Reg, %struct.Reg* %2416, i32 0, i32 0
  %PC.i2511 = bitcast %union.anon* %2417 to i64*
  %2418 = load i64, i64* %PC.i2511
  %2419 = add i64 %2418, 317
  %2420 = load i64, i64* %PC.i2511
  %2421 = add i64 %2420, 5
  store i64 %2421, i64* %PC.i2511
  %2422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2419, i64* %2422, align 8
  store %struct.Memory* %loadMem_40643d, %struct.Memory** %MEMORY
  br label %block_.L_40657a

block_.L_406442:                                  ; preds = %block_.L_40642f
  %loadMem_406442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2424 = getelementptr inbounds %struct.GPR, %struct.GPR* %2423, i32 0, i32 33
  %2425 = getelementptr inbounds %struct.Reg, %struct.Reg* %2424, i32 0, i32 0
  %PC.i2509 = bitcast %union.anon* %2425 to i64*
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2427 = getelementptr inbounds %struct.GPR, %struct.GPR* %2426, i32 0, i32 15
  %2428 = getelementptr inbounds %struct.Reg, %struct.Reg* %2427, i32 0, i32 0
  %RBP.i2510 = bitcast %union.anon* %2428 to i64*
  %2429 = load i64, i64* %RBP.i2510
  %2430 = sub i64 %2429, 24
  %2431 = load i64, i64* %PC.i2509
  %2432 = add i64 %2431, 7
  store i64 %2432, i64* %PC.i2509
  %2433 = inttoptr i64 %2430 to i32*
  store i32 0, i32* %2433
  store %struct.Memory* %loadMem_406442, %struct.Memory** %MEMORY
  br label %block_.L_406449

block_.L_406449:                                  ; preds = %block_406453, %block_.L_406442
  %loadMem_406449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2435 = getelementptr inbounds %struct.GPR, %struct.GPR* %2434, i32 0, i32 33
  %2436 = getelementptr inbounds %struct.Reg, %struct.Reg* %2435, i32 0, i32 0
  %PC.i2507 = bitcast %union.anon* %2436 to i64*
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 15
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %RBP.i2508 = bitcast %union.anon* %2439 to i64*
  %2440 = load i64, i64* %RBP.i2508
  %2441 = sub i64 %2440, 24
  %2442 = load i64, i64* %PC.i2507
  %2443 = add i64 %2442, 4
  store i64 %2443, i64* %PC.i2507
  %2444 = inttoptr i64 %2441 to i32*
  %2445 = load i32, i32* %2444
  %2446 = sub i32 %2445, 2
  %2447 = icmp ult i32 %2445, 2
  %2448 = zext i1 %2447 to i8
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2448, i8* %2449, align 1
  %2450 = and i32 %2446, 255
  %2451 = call i32 @llvm.ctpop.i32(i32 %2450)
  %2452 = trunc i32 %2451 to i8
  %2453 = and i8 %2452, 1
  %2454 = xor i8 %2453, 1
  %2455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2454, i8* %2455, align 1
  %2456 = xor i32 %2445, 2
  %2457 = xor i32 %2456, %2446
  %2458 = lshr i32 %2457, 4
  %2459 = trunc i32 %2458 to i8
  %2460 = and i8 %2459, 1
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2460, i8* %2461, align 1
  %2462 = icmp eq i32 %2446, 0
  %2463 = zext i1 %2462 to i8
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2463, i8* %2464, align 1
  %2465 = lshr i32 %2446, 31
  %2466 = trunc i32 %2465 to i8
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2466, i8* %2467, align 1
  %2468 = lshr i32 %2445, 31
  %2469 = xor i32 %2465, %2468
  %2470 = add i32 %2469, %2468
  %2471 = icmp eq i32 %2470, 2
  %2472 = zext i1 %2471 to i8
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2472, i8* %2473, align 1
  store %struct.Memory* %loadMem_406449, %struct.Memory** %MEMORY
  %loadMem_40644d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2475 = getelementptr inbounds %struct.GPR, %struct.GPR* %2474, i32 0, i32 33
  %2476 = getelementptr inbounds %struct.Reg, %struct.Reg* %2475, i32 0, i32 0
  %PC.i2506 = bitcast %union.anon* %2476 to i64*
  %2477 = load i64, i64* %PC.i2506
  %2478 = add i64 %2477, 179
  %2479 = load i64, i64* %PC.i2506
  %2480 = add i64 %2479, 6
  %2481 = load i64, i64* %PC.i2506
  %2482 = add i64 %2481, 6
  store i64 %2482, i64* %PC.i2506
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2484 = load i8, i8* %2483, align 1
  %2485 = icmp ne i8 %2484, 0
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2487 = load i8, i8* %2486, align 1
  %2488 = icmp ne i8 %2487, 0
  %2489 = xor i1 %2485, %2488
  %2490 = xor i1 %2489, true
  %2491 = zext i1 %2490 to i8
  store i8 %2491, i8* %BRANCH_TAKEN, align 1
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2493 = select i1 %2489, i64 %2480, i64 %2478
  store i64 %2493, i64* %2492, align 8
  store %struct.Memory* %loadMem_40644d, %struct.Memory** %MEMORY
  %loadBr_40644d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40644d = icmp eq i8 %loadBr_40644d, 1
  br i1 %cmpBr_40644d, label %block_.L_406500, label %block_406453

block_406453:                                     ; preds = %block_.L_406449
  %loadMem_406453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2495 = getelementptr inbounds %struct.GPR, %struct.GPR* %2494, i32 0, i32 33
  %2496 = getelementptr inbounds %struct.Reg, %struct.Reg* %2495, i32 0, i32 0
  %PC.i2504 = bitcast %union.anon* %2496 to i64*
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2498 = getelementptr inbounds %struct.GPR, %struct.GPR* %2497, i32 0, i32 1
  %2499 = getelementptr inbounds %struct.Reg, %struct.Reg* %2498, i32 0, i32 0
  %RAX.i2505 = bitcast %union.anon* %2499 to i64*
  %2500 = load i64, i64* %PC.i2504
  %2501 = add i64 %2500, 5
  store i64 %2501, i64* %PC.i2504
  store i64 3, i64* %RAX.i2505, align 8
  store %struct.Memory* %loadMem_406453, %struct.Memory** %MEMORY
  %loadMem_406458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2503 = getelementptr inbounds %struct.GPR, %struct.GPR* %2502, i32 0, i32 33
  %2504 = getelementptr inbounds %struct.Reg, %struct.Reg* %2503, i32 0, i32 0
  %PC.i2501 = bitcast %union.anon* %2504 to i64*
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2506 = getelementptr inbounds %struct.GPR, %struct.GPR* %2505, i32 0, i32 1
  %2507 = getelementptr inbounds %struct.Reg, %struct.Reg* %2506, i32 0, i32 0
  %RAX.i2502 = bitcast %union.anon* %2507 to i64*
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2509 = getelementptr inbounds %struct.GPR, %struct.GPR* %2508, i32 0, i32 15
  %2510 = getelementptr inbounds %struct.Reg, %struct.Reg* %2509, i32 0, i32 0
  %RBP.i2503 = bitcast %union.anon* %2510 to i64*
  %2511 = load i64, i64* %RAX.i2502
  %2512 = load i64, i64* %RBP.i2503
  %2513 = sub i64 %2512, 24
  %2514 = load i64, i64* %PC.i2501
  %2515 = add i64 %2514, 3
  store i64 %2515, i64* %PC.i2501
  %2516 = trunc i64 %2511 to i32
  %2517 = inttoptr i64 %2513 to i32*
  %2518 = load i32, i32* %2517
  %2519 = sub i32 %2516, %2518
  %2520 = zext i32 %2519 to i64
  store i64 %2520, i64* %RAX.i2502, align 8
  %2521 = icmp ult i32 %2516, %2518
  %2522 = zext i1 %2521 to i8
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2522, i8* %2523, align 1
  %2524 = and i32 %2519, 255
  %2525 = call i32 @llvm.ctpop.i32(i32 %2524)
  %2526 = trunc i32 %2525 to i8
  %2527 = and i8 %2526, 1
  %2528 = xor i8 %2527, 1
  %2529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2528, i8* %2529, align 1
  %2530 = xor i32 %2518, %2516
  %2531 = xor i32 %2530, %2519
  %2532 = lshr i32 %2531, 4
  %2533 = trunc i32 %2532 to i8
  %2534 = and i8 %2533, 1
  %2535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2534, i8* %2535, align 1
  %2536 = icmp eq i32 %2519, 0
  %2537 = zext i1 %2536 to i8
  %2538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2537, i8* %2538, align 1
  %2539 = lshr i32 %2519, 31
  %2540 = trunc i32 %2539 to i8
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2540, i8* %2541, align 1
  %2542 = lshr i32 %2516, 31
  %2543 = lshr i32 %2518, 31
  %2544 = xor i32 %2543, %2542
  %2545 = xor i32 %2539, %2542
  %2546 = add i32 %2545, %2544
  %2547 = icmp eq i32 %2546, 2
  %2548 = zext i1 %2547 to i8
  %2549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2548, i8* %2549, align 1
  store %struct.Memory* %loadMem_406458, %struct.Memory** %MEMORY
  %loadMem_40645b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2551 = getelementptr inbounds %struct.GPR, %struct.GPR* %2550, i32 0, i32 33
  %2552 = getelementptr inbounds %struct.Reg, %struct.Reg* %2551, i32 0, i32 0
  %PC.i2498 = bitcast %union.anon* %2552 to i64*
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2554 = getelementptr inbounds %struct.GPR, %struct.GPR* %2553, i32 0, i32 1
  %2555 = getelementptr inbounds %struct.Reg, %struct.Reg* %2554, i32 0, i32 0
  %EAX.i2499 = bitcast %union.anon* %2555 to i32*
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2557 = getelementptr inbounds %struct.GPR, %struct.GPR* %2556, i32 0, i32 15
  %2558 = getelementptr inbounds %struct.Reg, %struct.Reg* %2557, i32 0, i32 0
  %RBP.i2500 = bitcast %union.anon* %2558 to i64*
  %2559 = load i64, i64* %RBP.i2500
  %2560 = sub i64 %2559, 32
  %2561 = load i32, i32* %EAX.i2499
  %2562 = zext i32 %2561 to i64
  %2563 = load i64, i64* %PC.i2498
  %2564 = add i64 %2563, 3
  store i64 %2564, i64* %PC.i2498
  %2565 = inttoptr i64 %2560 to i32*
  store i32 %2561, i32* %2565
  store %struct.Memory* %loadMem_40645b, %struct.Memory** %MEMORY
  %loadMem_40645e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2567 = getelementptr inbounds %struct.GPR, %struct.GPR* %2566, i32 0, i32 33
  %2568 = getelementptr inbounds %struct.Reg, %struct.Reg* %2567, i32 0, i32 0
  %PC.i2496 = bitcast %union.anon* %2568 to i64*
  %2569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2570 = getelementptr inbounds %struct.GPR, %struct.GPR* %2569, i32 0, i32 5
  %2571 = getelementptr inbounds %struct.Reg, %struct.Reg* %2570, i32 0, i32 0
  %RCX.i2497 = bitcast %union.anon* %2571 to i64*
  %2572 = load i64, i64* %PC.i2496
  %2573 = add i64 %2572, 8
  store i64 %2573, i64* %PC.i2496
  %2574 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2574, i64* %RCX.i2497, align 8
  store %struct.Memory* %loadMem_40645e, %struct.Memory** %MEMORY
  %loadMem_406466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2576 = getelementptr inbounds %struct.GPR, %struct.GPR* %2575, i32 0, i32 33
  %2577 = getelementptr inbounds %struct.Reg, %struct.Reg* %2576, i32 0, i32 0
  %PC.i2494 = bitcast %union.anon* %2577 to i64*
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2579 = getelementptr inbounds %struct.GPR, %struct.GPR* %2578, i32 0, i32 5
  %2580 = getelementptr inbounds %struct.Reg, %struct.Reg* %2579, i32 0, i32 0
  %RCX.i2495 = bitcast %union.anon* %2580 to i64*
  %2581 = load i64, i64* %RCX.i2495
  %2582 = load i64, i64* %PC.i2494
  %2583 = add i64 %2582, 7
  store i64 %2583, i64* %PC.i2494
  %2584 = add i64 13112, %2581
  store i64 %2584, i64* %RCX.i2495, align 8
  %2585 = icmp ult i64 %2584, %2581
  %2586 = icmp ult i64 %2584, 13112
  %2587 = or i1 %2585, %2586
  %2588 = zext i1 %2587 to i8
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2588, i8* %2589, align 1
  %2590 = trunc i64 %2584 to i32
  %2591 = and i32 %2590, 255
  %2592 = call i32 @llvm.ctpop.i32(i32 %2591)
  %2593 = trunc i32 %2592 to i8
  %2594 = and i8 %2593, 1
  %2595 = xor i8 %2594, 1
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2595, i8* %2596, align 1
  %2597 = xor i64 13112, %2581
  %2598 = xor i64 %2597, %2584
  %2599 = lshr i64 %2598, 4
  %2600 = trunc i64 %2599 to i8
  %2601 = and i8 %2600, 1
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2601, i8* %2602, align 1
  %2603 = icmp eq i64 %2584, 0
  %2604 = zext i1 %2603 to i8
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2604, i8* %2605, align 1
  %2606 = lshr i64 %2584, 63
  %2607 = trunc i64 %2606 to i8
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2607, i8* %2608, align 1
  %2609 = lshr i64 %2581, 63
  %2610 = xor i64 %2606, %2609
  %2611 = add i64 %2610, %2606
  %2612 = icmp eq i64 %2611, 2
  %2613 = zext i1 %2612 to i8
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2613, i8* %2614, align 1
  store %struct.Memory* %loadMem_406466, %struct.Memory** %MEMORY
  %loadMem_40646d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2616 = getelementptr inbounds %struct.GPR, %struct.GPR* %2615, i32 0, i32 33
  %2617 = getelementptr inbounds %struct.Reg, %struct.Reg* %2616, i32 0, i32 0
  %PC.i2491 = bitcast %union.anon* %2617 to i64*
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2619 = getelementptr inbounds %struct.GPR, %struct.GPR* %2618, i32 0, i32 7
  %2620 = getelementptr inbounds %struct.Reg, %struct.Reg* %2619, i32 0, i32 0
  %RDX.i2492 = bitcast %union.anon* %2620 to i64*
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2622 = getelementptr inbounds %struct.GPR, %struct.GPR* %2621, i32 0, i32 15
  %2623 = getelementptr inbounds %struct.Reg, %struct.Reg* %2622, i32 0, i32 0
  %RBP.i2493 = bitcast %union.anon* %2623 to i64*
  %2624 = load i64, i64* %RBP.i2493
  %2625 = sub i64 %2624, 24
  %2626 = load i64, i64* %PC.i2491
  %2627 = add i64 %2626, 4
  store i64 %2627, i64* %PC.i2491
  %2628 = inttoptr i64 %2625 to i32*
  %2629 = load i32, i32* %2628
  %2630 = sext i32 %2629 to i64
  store i64 %2630, i64* %RDX.i2492, align 8
  store %struct.Memory* %loadMem_40646d, %struct.Memory** %MEMORY
  %loadMem_406471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2632 = getelementptr inbounds %struct.GPR, %struct.GPR* %2631, i32 0, i32 33
  %2633 = getelementptr inbounds %struct.Reg, %struct.Reg* %2632, i32 0, i32 0
  %PC.i2489 = bitcast %union.anon* %2633 to i64*
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2635 = getelementptr inbounds %struct.GPR, %struct.GPR* %2634, i32 0, i32 7
  %2636 = getelementptr inbounds %struct.Reg, %struct.Reg* %2635, i32 0, i32 0
  %RDX.i2490 = bitcast %union.anon* %2636 to i64*
  %2637 = load i64, i64* %RDX.i2490
  %2638 = load i64, i64* %PC.i2489
  %2639 = add i64 %2638, 4
  store i64 %2639, i64* %PC.i2489
  %2640 = shl i64 %2637, 5
  %2641 = icmp slt i64 %2640, 0
  %2642 = shl i64 %2640, 1
  store i64 %2642, i64* %RDX.i2490, align 8
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2644 = zext i1 %2641 to i8
  store i8 %2644, i8* %2643, align 1
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2646 = trunc i64 %2642 to i32
  %2647 = and i32 %2646, 254
  %2648 = call i32 @llvm.ctpop.i32(i32 %2647)
  %2649 = trunc i32 %2648 to i8
  %2650 = and i8 %2649, 1
  %2651 = xor i8 %2650, 1
  store i8 %2651, i8* %2645, align 1
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2652, align 1
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2654 = icmp eq i64 %2642, 0
  %2655 = zext i1 %2654 to i8
  store i8 %2655, i8* %2653, align 1
  %2656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2657 = lshr i64 %2642, 63
  %2658 = trunc i64 %2657 to i8
  store i8 %2658, i8* %2656, align 1
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2659, align 1
  store %struct.Memory* %loadMem_406471, %struct.Memory** %MEMORY
  %loadMem_406475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2661 = getelementptr inbounds %struct.GPR, %struct.GPR* %2660, i32 0, i32 33
  %2662 = getelementptr inbounds %struct.Reg, %struct.Reg* %2661, i32 0, i32 0
  %PC.i2486 = bitcast %union.anon* %2662 to i64*
  %2663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2664 = getelementptr inbounds %struct.GPR, %struct.GPR* %2663, i32 0, i32 5
  %2665 = getelementptr inbounds %struct.Reg, %struct.Reg* %2664, i32 0, i32 0
  %RCX.i2487 = bitcast %union.anon* %2665 to i64*
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2667 = getelementptr inbounds %struct.GPR, %struct.GPR* %2666, i32 0, i32 7
  %2668 = getelementptr inbounds %struct.Reg, %struct.Reg* %2667, i32 0, i32 0
  %RDX.i2488 = bitcast %union.anon* %2668 to i64*
  %2669 = load i64, i64* %RCX.i2487
  %2670 = load i64, i64* %RDX.i2488
  %2671 = load i64, i64* %PC.i2486
  %2672 = add i64 %2671, 3
  store i64 %2672, i64* %PC.i2486
  %2673 = add i64 %2670, %2669
  store i64 %2673, i64* %RCX.i2487, align 8
  %2674 = icmp ult i64 %2673, %2669
  %2675 = icmp ult i64 %2673, %2670
  %2676 = or i1 %2674, %2675
  %2677 = zext i1 %2676 to i8
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2677, i8* %2678, align 1
  %2679 = trunc i64 %2673 to i32
  %2680 = and i32 %2679, 255
  %2681 = call i32 @llvm.ctpop.i32(i32 %2680)
  %2682 = trunc i32 %2681 to i8
  %2683 = and i8 %2682, 1
  %2684 = xor i8 %2683, 1
  %2685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2684, i8* %2685, align 1
  %2686 = xor i64 %2670, %2669
  %2687 = xor i64 %2686, %2673
  %2688 = lshr i64 %2687, 4
  %2689 = trunc i64 %2688 to i8
  %2690 = and i8 %2689, 1
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2690, i8* %2691, align 1
  %2692 = icmp eq i64 %2673, 0
  %2693 = zext i1 %2692 to i8
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2693, i8* %2694, align 1
  %2695 = lshr i64 %2673, 63
  %2696 = trunc i64 %2695 to i8
  %2697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2696, i8* %2697, align 1
  %2698 = lshr i64 %2669, 63
  %2699 = lshr i64 %2670, 63
  %2700 = xor i64 %2695, %2698
  %2701 = xor i64 %2695, %2699
  %2702 = add i64 %2700, %2701
  %2703 = icmp eq i64 %2702, 2
  %2704 = zext i1 %2703 to i8
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2704, i8* %2705, align 1
  store %struct.Memory* %loadMem_406475, %struct.Memory** %MEMORY
  %loadMem_406478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2707 = getelementptr inbounds %struct.GPR, %struct.GPR* %2706, i32 0, i32 33
  %2708 = getelementptr inbounds %struct.Reg, %struct.Reg* %2707, i32 0, i32 0
  %PC.i2483 = bitcast %union.anon* %2708 to i64*
  %2709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2710 = getelementptr inbounds %struct.GPR, %struct.GPR* %2709, i32 0, i32 7
  %2711 = getelementptr inbounds %struct.Reg, %struct.Reg* %2710, i32 0, i32 0
  %RDX.i2484 = bitcast %union.anon* %2711 to i64*
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2713 = getelementptr inbounds %struct.GPR, %struct.GPR* %2712, i32 0, i32 15
  %2714 = getelementptr inbounds %struct.Reg, %struct.Reg* %2713, i32 0, i32 0
  %RBP.i2485 = bitcast %union.anon* %2714 to i64*
  %2715 = load i64, i64* %RBP.i2485
  %2716 = sub i64 %2715, 28
  %2717 = load i64, i64* %PC.i2483
  %2718 = add i64 %2717, 4
  store i64 %2718, i64* %PC.i2483
  %2719 = inttoptr i64 %2716 to i32*
  %2720 = load i32, i32* %2719
  %2721 = sext i32 %2720 to i64
  store i64 %2721, i64* %RDX.i2484, align 8
  store %struct.Memory* %loadMem_406478, %struct.Memory** %MEMORY
  %loadMem_40647c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2723 = getelementptr inbounds %struct.GPR, %struct.GPR* %2722, i32 0, i32 33
  %2724 = getelementptr inbounds %struct.Reg, %struct.Reg* %2723, i32 0, i32 0
  %PC.i2479 = bitcast %union.anon* %2724 to i64*
  %2725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2726 = getelementptr inbounds %struct.GPR, %struct.GPR* %2725, i32 0, i32 1
  %2727 = getelementptr inbounds %struct.Reg, %struct.Reg* %2726, i32 0, i32 0
  %RAX.i2480 = bitcast %union.anon* %2727 to i64*
  %2728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2729 = getelementptr inbounds %struct.GPR, %struct.GPR* %2728, i32 0, i32 5
  %2730 = getelementptr inbounds %struct.Reg, %struct.Reg* %2729, i32 0, i32 0
  %RCX.i2481 = bitcast %union.anon* %2730 to i64*
  %2731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2732 = getelementptr inbounds %struct.GPR, %struct.GPR* %2731, i32 0, i32 7
  %2733 = getelementptr inbounds %struct.Reg, %struct.Reg* %2732, i32 0, i32 0
  %RDX.i2482 = bitcast %union.anon* %2733 to i64*
  %2734 = load i64, i64* %RCX.i2481
  %2735 = load i64, i64* %RDX.i2482
  %2736 = mul i64 %2735, 4
  %2737 = add i64 %2736, %2734
  %2738 = load i64, i64* %PC.i2479
  %2739 = add i64 %2738, 3
  store i64 %2739, i64* %PC.i2479
  %2740 = inttoptr i64 %2737 to i32*
  %2741 = load i32, i32* %2740
  %2742 = zext i32 %2741 to i64
  store i64 %2742, i64* %RAX.i2480, align 8
  store %struct.Memory* %loadMem_40647c, %struct.Memory** %MEMORY
  %loadMem_40647f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2744 = getelementptr inbounds %struct.GPR, %struct.GPR* %2743, i32 0, i32 33
  %2745 = getelementptr inbounds %struct.Reg, %struct.Reg* %2744, i32 0, i32 0
  %PC.i2477 = bitcast %union.anon* %2745 to i64*
  %2746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2747 = getelementptr inbounds %struct.GPR, %struct.GPR* %2746, i32 0, i32 5
  %2748 = getelementptr inbounds %struct.Reg, %struct.Reg* %2747, i32 0, i32 0
  %RCX.i2478 = bitcast %union.anon* %2748 to i64*
  %2749 = load i64, i64* %PC.i2477
  %2750 = add i64 %2749, 8
  store i64 %2750, i64* %PC.i2477
  %2751 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2751, i64* %RCX.i2478, align 8
  store %struct.Memory* %loadMem_40647f, %struct.Memory** %MEMORY
  %loadMem_406487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2753 = getelementptr inbounds %struct.GPR, %struct.GPR* %2752, i32 0, i32 33
  %2754 = getelementptr inbounds %struct.Reg, %struct.Reg* %2753, i32 0, i32 0
  %PC.i2475 = bitcast %union.anon* %2754 to i64*
  %2755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2756 = getelementptr inbounds %struct.GPR, %struct.GPR* %2755, i32 0, i32 5
  %2757 = getelementptr inbounds %struct.Reg, %struct.Reg* %2756, i32 0, i32 0
  %RCX.i2476 = bitcast %union.anon* %2757 to i64*
  %2758 = load i64, i64* %RCX.i2476
  %2759 = load i64, i64* %PC.i2475
  %2760 = add i64 %2759, 7
  store i64 %2760, i64* %PC.i2475
  %2761 = add i64 13112, %2758
  store i64 %2761, i64* %RCX.i2476, align 8
  %2762 = icmp ult i64 %2761, %2758
  %2763 = icmp ult i64 %2761, 13112
  %2764 = or i1 %2762, %2763
  %2765 = zext i1 %2764 to i8
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2765, i8* %2766, align 1
  %2767 = trunc i64 %2761 to i32
  %2768 = and i32 %2767, 255
  %2769 = call i32 @llvm.ctpop.i32(i32 %2768)
  %2770 = trunc i32 %2769 to i8
  %2771 = and i8 %2770, 1
  %2772 = xor i8 %2771, 1
  %2773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2772, i8* %2773, align 1
  %2774 = xor i64 13112, %2758
  %2775 = xor i64 %2774, %2761
  %2776 = lshr i64 %2775, 4
  %2777 = trunc i64 %2776 to i8
  %2778 = and i8 %2777, 1
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2778, i8* %2779, align 1
  %2780 = icmp eq i64 %2761, 0
  %2781 = zext i1 %2780 to i8
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2781, i8* %2782, align 1
  %2783 = lshr i64 %2761, 63
  %2784 = trunc i64 %2783 to i8
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2784, i8* %2785, align 1
  %2786 = lshr i64 %2758, 63
  %2787 = xor i64 %2783, %2786
  %2788 = add i64 %2787, %2783
  %2789 = icmp eq i64 %2788, 2
  %2790 = zext i1 %2789 to i8
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2790, i8* %2791, align 1
  store %struct.Memory* %loadMem_406487, %struct.Memory** %MEMORY
  %loadMem_40648e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2793 = getelementptr inbounds %struct.GPR, %struct.GPR* %2792, i32 0, i32 33
  %2794 = getelementptr inbounds %struct.Reg, %struct.Reg* %2793, i32 0, i32 0
  %PC.i2472 = bitcast %union.anon* %2794 to i64*
  %2795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2796 = getelementptr inbounds %struct.GPR, %struct.GPR* %2795, i32 0, i32 7
  %2797 = getelementptr inbounds %struct.Reg, %struct.Reg* %2796, i32 0, i32 0
  %RDX.i2473 = bitcast %union.anon* %2797 to i64*
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2799 = getelementptr inbounds %struct.GPR, %struct.GPR* %2798, i32 0, i32 15
  %2800 = getelementptr inbounds %struct.Reg, %struct.Reg* %2799, i32 0, i32 0
  %RBP.i2474 = bitcast %union.anon* %2800 to i64*
  %2801 = load i64, i64* %RBP.i2474
  %2802 = sub i64 %2801, 32
  %2803 = load i64, i64* %PC.i2472
  %2804 = add i64 %2803, 4
  store i64 %2804, i64* %PC.i2472
  %2805 = inttoptr i64 %2802 to i32*
  %2806 = load i32, i32* %2805
  %2807 = sext i32 %2806 to i64
  store i64 %2807, i64* %RDX.i2473, align 8
  store %struct.Memory* %loadMem_40648e, %struct.Memory** %MEMORY
  %loadMem_406492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2809 = getelementptr inbounds %struct.GPR, %struct.GPR* %2808, i32 0, i32 33
  %2810 = getelementptr inbounds %struct.Reg, %struct.Reg* %2809, i32 0, i32 0
  %PC.i2470 = bitcast %union.anon* %2810 to i64*
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2812 = getelementptr inbounds %struct.GPR, %struct.GPR* %2811, i32 0, i32 7
  %2813 = getelementptr inbounds %struct.Reg, %struct.Reg* %2812, i32 0, i32 0
  %RDX.i2471 = bitcast %union.anon* %2813 to i64*
  %2814 = load i64, i64* %RDX.i2471
  %2815 = load i64, i64* %PC.i2470
  %2816 = add i64 %2815, 4
  store i64 %2816, i64* %PC.i2470
  %2817 = shl i64 %2814, 5
  %2818 = icmp slt i64 %2817, 0
  %2819 = shl i64 %2817, 1
  store i64 %2819, i64* %RDX.i2471, align 8
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2821 = zext i1 %2818 to i8
  store i8 %2821, i8* %2820, align 1
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2823 = trunc i64 %2819 to i32
  %2824 = and i32 %2823, 254
  %2825 = call i32 @llvm.ctpop.i32(i32 %2824)
  %2826 = trunc i32 %2825 to i8
  %2827 = and i8 %2826, 1
  %2828 = xor i8 %2827, 1
  store i8 %2828, i8* %2822, align 1
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2829, align 1
  %2830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2831 = icmp eq i64 %2819, 0
  %2832 = zext i1 %2831 to i8
  store i8 %2832, i8* %2830, align 1
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2834 = lshr i64 %2819, 63
  %2835 = trunc i64 %2834 to i8
  store i8 %2835, i8* %2833, align 1
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2836, align 1
  store %struct.Memory* %loadMem_406492, %struct.Memory** %MEMORY
  %loadMem_406496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2838 = getelementptr inbounds %struct.GPR, %struct.GPR* %2837, i32 0, i32 33
  %2839 = getelementptr inbounds %struct.Reg, %struct.Reg* %2838, i32 0, i32 0
  %PC.i2467 = bitcast %union.anon* %2839 to i64*
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2841 = getelementptr inbounds %struct.GPR, %struct.GPR* %2840, i32 0, i32 5
  %2842 = getelementptr inbounds %struct.Reg, %struct.Reg* %2841, i32 0, i32 0
  %RCX.i2468 = bitcast %union.anon* %2842 to i64*
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2844 = getelementptr inbounds %struct.GPR, %struct.GPR* %2843, i32 0, i32 7
  %2845 = getelementptr inbounds %struct.Reg, %struct.Reg* %2844, i32 0, i32 0
  %RDX.i2469 = bitcast %union.anon* %2845 to i64*
  %2846 = load i64, i64* %RCX.i2468
  %2847 = load i64, i64* %RDX.i2469
  %2848 = load i64, i64* %PC.i2467
  %2849 = add i64 %2848, 3
  store i64 %2849, i64* %PC.i2467
  %2850 = add i64 %2847, %2846
  store i64 %2850, i64* %RCX.i2468, align 8
  %2851 = icmp ult i64 %2850, %2846
  %2852 = icmp ult i64 %2850, %2847
  %2853 = or i1 %2851, %2852
  %2854 = zext i1 %2853 to i8
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2854, i8* %2855, align 1
  %2856 = trunc i64 %2850 to i32
  %2857 = and i32 %2856, 255
  %2858 = call i32 @llvm.ctpop.i32(i32 %2857)
  %2859 = trunc i32 %2858 to i8
  %2860 = and i8 %2859, 1
  %2861 = xor i8 %2860, 1
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2861, i8* %2862, align 1
  %2863 = xor i64 %2847, %2846
  %2864 = xor i64 %2863, %2850
  %2865 = lshr i64 %2864, 4
  %2866 = trunc i64 %2865 to i8
  %2867 = and i8 %2866, 1
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2867, i8* %2868, align 1
  %2869 = icmp eq i64 %2850, 0
  %2870 = zext i1 %2869 to i8
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2870, i8* %2871, align 1
  %2872 = lshr i64 %2850, 63
  %2873 = trunc i64 %2872 to i8
  %2874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2873, i8* %2874, align 1
  %2875 = lshr i64 %2846, 63
  %2876 = lshr i64 %2847, 63
  %2877 = xor i64 %2872, %2875
  %2878 = xor i64 %2872, %2876
  %2879 = add i64 %2877, %2878
  %2880 = icmp eq i64 %2879, 2
  %2881 = zext i1 %2880 to i8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2881, i8* %2882, align 1
  store %struct.Memory* %loadMem_406496, %struct.Memory** %MEMORY
  %loadMem_406499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2884 = getelementptr inbounds %struct.GPR, %struct.GPR* %2883, i32 0, i32 33
  %2885 = getelementptr inbounds %struct.Reg, %struct.Reg* %2884, i32 0, i32 0
  %PC.i2464 = bitcast %union.anon* %2885 to i64*
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2887 = getelementptr inbounds %struct.GPR, %struct.GPR* %2886, i32 0, i32 7
  %2888 = getelementptr inbounds %struct.Reg, %struct.Reg* %2887, i32 0, i32 0
  %RDX.i2465 = bitcast %union.anon* %2888 to i64*
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2890 = getelementptr inbounds %struct.GPR, %struct.GPR* %2889, i32 0, i32 15
  %2891 = getelementptr inbounds %struct.Reg, %struct.Reg* %2890, i32 0, i32 0
  %RBP.i2466 = bitcast %union.anon* %2891 to i64*
  %2892 = load i64, i64* %RBP.i2466
  %2893 = sub i64 %2892, 28
  %2894 = load i64, i64* %PC.i2464
  %2895 = add i64 %2894, 4
  store i64 %2895, i64* %PC.i2464
  %2896 = inttoptr i64 %2893 to i32*
  %2897 = load i32, i32* %2896
  %2898 = sext i32 %2897 to i64
  store i64 %2898, i64* %RDX.i2465, align 8
  store %struct.Memory* %loadMem_406499, %struct.Memory** %MEMORY
  %loadMem_40649d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2900 = getelementptr inbounds %struct.GPR, %struct.GPR* %2899, i32 0, i32 33
  %2901 = getelementptr inbounds %struct.Reg, %struct.Reg* %2900, i32 0, i32 0
  %PC.i2460 = bitcast %union.anon* %2901 to i64*
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2903 = getelementptr inbounds %struct.GPR, %struct.GPR* %2902, i32 0, i32 1
  %2904 = getelementptr inbounds %struct.Reg, %struct.Reg* %2903, i32 0, i32 0
  %RAX.i2461 = bitcast %union.anon* %2904 to i64*
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 5
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %RCX.i2462 = bitcast %union.anon* %2907 to i64*
  %2908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2909 = getelementptr inbounds %struct.GPR, %struct.GPR* %2908, i32 0, i32 7
  %2910 = getelementptr inbounds %struct.Reg, %struct.Reg* %2909, i32 0, i32 0
  %RDX.i2463 = bitcast %union.anon* %2910 to i64*
  %2911 = load i64, i64* %RAX.i2461
  %2912 = load i64, i64* %RCX.i2462
  %2913 = load i64, i64* %RDX.i2463
  %2914 = mul i64 %2913, 4
  %2915 = add i64 %2914, %2912
  %2916 = load i64, i64* %PC.i2460
  %2917 = add i64 %2916, 3
  store i64 %2917, i64* %PC.i2460
  %2918 = trunc i64 %2911 to i32
  %2919 = inttoptr i64 %2915 to i32*
  %2920 = load i32, i32* %2919
  %2921 = add i32 %2920, %2918
  %2922 = zext i32 %2921 to i64
  store i64 %2922, i64* %RAX.i2461, align 8
  %2923 = icmp ult i32 %2921, %2918
  %2924 = icmp ult i32 %2921, %2920
  %2925 = or i1 %2923, %2924
  %2926 = zext i1 %2925 to i8
  %2927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2926, i8* %2927, align 1
  %2928 = and i32 %2921, 255
  %2929 = call i32 @llvm.ctpop.i32(i32 %2928)
  %2930 = trunc i32 %2929 to i8
  %2931 = and i8 %2930, 1
  %2932 = xor i8 %2931, 1
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2932, i8* %2933, align 1
  %2934 = xor i32 %2920, %2918
  %2935 = xor i32 %2934, %2921
  %2936 = lshr i32 %2935, 4
  %2937 = trunc i32 %2936 to i8
  %2938 = and i8 %2937, 1
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2938, i8* %2939, align 1
  %2940 = icmp eq i32 %2921, 0
  %2941 = zext i1 %2940 to i8
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2941, i8* %2942, align 1
  %2943 = lshr i32 %2921, 31
  %2944 = trunc i32 %2943 to i8
  %2945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2944, i8* %2945, align 1
  %2946 = lshr i32 %2918, 31
  %2947 = lshr i32 %2920, 31
  %2948 = xor i32 %2943, %2946
  %2949 = xor i32 %2943, %2947
  %2950 = add i32 %2948, %2949
  %2951 = icmp eq i32 %2950, 2
  %2952 = zext i1 %2951 to i8
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2952, i8* %2953, align 1
  store %struct.Memory* %loadMem_40649d, %struct.Memory** %MEMORY
  %loadMem_4064a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 33
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %PC.i2457 = bitcast %union.anon* %2956 to i64*
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 5
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %RCX.i2458 = bitcast %union.anon* %2959 to i64*
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2961 = getelementptr inbounds %struct.GPR, %struct.GPR* %2960, i32 0, i32 15
  %2962 = getelementptr inbounds %struct.Reg, %struct.Reg* %2961, i32 0, i32 0
  %RBP.i2459 = bitcast %union.anon* %2962 to i64*
  %2963 = load i64, i64* %RBP.i2459
  %2964 = sub i64 %2963, 24
  %2965 = load i64, i64* %PC.i2457
  %2966 = add i64 %2965, 4
  store i64 %2966, i64* %PC.i2457
  %2967 = inttoptr i64 %2964 to i32*
  %2968 = load i32, i32* %2967
  %2969 = sext i32 %2968 to i64
  store i64 %2969, i64* %RCX.i2458, align 8
  store %struct.Memory* %loadMem_4064a0, %struct.Memory** %MEMORY
  %loadMem_4064a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2971 = getelementptr inbounds %struct.GPR, %struct.GPR* %2970, i32 0, i32 33
  %2972 = getelementptr inbounds %struct.Reg, %struct.Reg* %2971, i32 0, i32 0
  %PC.i2453 = bitcast %union.anon* %2972 to i64*
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 1
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %EAX.i2454 = bitcast %union.anon* %2975 to i32*
  %2976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2977 = getelementptr inbounds %struct.GPR, %struct.GPR* %2976, i32 0, i32 5
  %2978 = getelementptr inbounds %struct.Reg, %struct.Reg* %2977, i32 0, i32 0
  %RCX.i2455 = bitcast %union.anon* %2978 to i64*
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2980 = getelementptr inbounds %struct.GPR, %struct.GPR* %2979, i32 0, i32 15
  %2981 = getelementptr inbounds %struct.Reg, %struct.Reg* %2980, i32 0, i32 0
  %RBP.i2456 = bitcast %union.anon* %2981 to i64*
  %2982 = load i64, i64* %RBP.i2456
  %2983 = load i64, i64* %RCX.i2455
  %2984 = mul i64 %2983, 4
  %2985 = add i64 %2982, -64
  %2986 = add i64 %2985, %2984
  %2987 = load i32, i32* %EAX.i2454
  %2988 = zext i32 %2987 to i64
  %2989 = load i64, i64* %PC.i2453
  %2990 = add i64 %2989, 4
  store i64 %2990, i64* %PC.i2453
  %2991 = inttoptr i64 %2986 to i32*
  store i32 %2987, i32* %2991
  store %struct.Memory* %loadMem_4064a4, %struct.Memory** %MEMORY
  %loadMem_4064a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2993 = getelementptr inbounds %struct.GPR, %struct.GPR* %2992, i32 0, i32 33
  %2994 = getelementptr inbounds %struct.Reg, %struct.Reg* %2993, i32 0, i32 0
  %PC.i2451 = bitcast %union.anon* %2994 to i64*
  %2995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2996 = getelementptr inbounds %struct.GPR, %struct.GPR* %2995, i32 0, i32 5
  %2997 = getelementptr inbounds %struct.Reg, %struct.Reg* %2996, i32 0, i32 0
  %RCX.i2452 = bitcast %union.anon* %2997 to i64*
  %2998 = load i64, i64* %PC.i2451
  %2999 = add i64 %2998, 8
  store i64 %2999, i64* %PC.i2451
  %3000 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3000, i64* %RCX.i2452, align 8
  store %struct.Memory* %loadMem_4064a8, %struct.Memory** %MEMORY
  %loadMem_4064b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3002 = getelementptr inbounds %struct.GPR, %struct.GPR* %3001, i32 0, i32 33
  %3003 = getelementptr inbounds %struct.Reg, %struct.Reg* %3002, i32 0, i32 0
  %PC.i2449 = bitcast %union.anon* %3003 to i64*
  %3004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3005 = getelementptr inbounds %struct.GPR, %struct.GPR* %3004, i32 0, i32 5
  %3006 = getelementptr inbounds %struct.Reg, %struct.Reg* %3005, i32 0, i32 0
  %RCX.i2450 = bitcast %union.anon* %3006 to i64*
  %3007 = load i64, i64* %RCX.i2450
  %3008 = load i64, i64* %PC.i2449
  %3009 = add i64 %3008, 7
  store i64 %3009, i64* %PC.i2449
  %3010 = add i64 13112, %3007
  store i64 %3010, i64* %RCX.i2450, align 8
  %3011 = icmp ult i64 %3010, %3007
  %3012 = icmp ult i64 %3010, 13112
  %3013 = or i1 %3011, %3012
  %3014 = zext i1 %3013 to i8
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3014, i8* %3015, align 1
  %3016 = trunc i64 %3010 to i32
  %3017 = and i32 %3016, 255
  %3018 = call i32 @llvm.ctpop.i32(i32 %3017)
  %3019 = trunc i32 %3018 to i8
  %3020 = and i8 %3019, 1
  %3021 = xor i8 %3020, 1
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3021, i8* %3022, align 1
  %3023 = xor i64 13112, %3007
  %3024 = xor i64 %3023, %3010
  %3025 = lshr i64 %3024, 4
  %3026 = trunc i64 %3025 to i8
  %3027 = and i8 %3026, 1
  %3028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3027, i8* %3028, align 1
  %3029 = icmp eq i64 %3010, 0
  %3030 = zext i1 %3029 to i8
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3030, i8* %3031, align 1
  %3032 = lshr i64 %3010, 63
  %3033 = trunc i64 %3032 to i8
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3033, i8* %3034, align 1
  %3035 = lshr i64 %3007, 63
  %3036 = xor i64 %3032, %3035
  %3037 = add i64 %3036, %3032
  %3038 = icmp eq i64 %3037, 2
  %3039 = zext i1 %3038 to i8
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3039, i8* %3040, align 1
  store %struct.Memory* %loadMem_4064b0, %struct.Memory** %MEMORY
  %loadMem_4064b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3042 = getelementptr inbounds %struct.GPR, %struct.GPR* %3041, i32 0, i32 33
  %3043 = getelementptr inbounds %struct.Reg, %struct.Reg* %3042, i32 0, i32 0
  %PC.i2446 = bitcast %union.anon* %3043 to i64*
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3045 = getelementptr inbounds %struct.GPR, %struct.GPR* %3044, i32 0, i32 7
  %3046 = getelementptr inbounds %struct.Reg, %struct.Reg* %3045, i32 0, i32 0
  %RDX.i2447 = bitcast %union.anon* %3046 to i64*
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3048 = getelementptr inbounds %struct.GPR, %struct.GPR* %3047, i32 0, i32 15
  %3049 = getelementptr inbounds %struct.Reg, %struct.Reg* %3048, i32 0, i32 0
  %RBP.i2448 = bitcast %union.anon* %3049 to i64*
  %3050 = load i64, i64* %RBP.i2448
  %3051 = sub i64 %3050, 24
  %3052 = load i64, i64* %PC.i2446
  %3053 = add i64 %3052, 4
  store i64 %3053, i64* %PC.i2446
  %3054 = inttoptr i64 %3051 to i32*
  %3055 = load i32, i32* %3054
  %3056 = sext i32 %3055 to i64
  store i64 %3056, i64* %RDX.i2447, align 8
  store %struct.Memory* %loadMem_4064b7, %struct.Memory** %MEMORY
  %loadMem_4064bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3058 = getelementptr inbounds %struct.GPR, %struct.GPR* %3057, i32 0, i32 33
  %3059 = getelementptr inbounds %struct.Reg, %struct.Reg* %3058, i32 0, i32 0
  %PC.i2444 = bitcast %union.anon* %3059 to i64*
  %3060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3061 = getelementptr inbounds %struct.GPR, %struct.GPR* %3060, i32 0, i32 7
  %3062 = getelementptr inbounds %struct.Reg, %struct.Reg* %3061, i32 0, i32 0
  %RDX.i2445 = bitcast %union.anon* %3062 to i64*
  %3063 = load i64, i64* %RDX.i2445
  %3064 = load i64, i64* %PC.i2444
  %3065 = add i64 %3064, 4
  store i64 %3065, i64* %PC.i2444
  %3066 = shl i64 %3063, 5
  %3067 = icmp slt i64 %3066, 0
  %3068 = shl i64 %3066, 1
  store i64 %3068, i64* %RDX.i2445, align 8
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3070 = zext i1 %3067 to i8
  store i8 %3070, i8* %3069, align 1
  %3071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3072 = trunc i64 %3068 to i32
  %3073 = and i32 %3072, 254
  %3074 = call i32 @llvm.ctpop.i32(i32 %3073)
  %3075 = trunc i32 %3074 to i8
  %3076 = and i8 %3075, 1
  %3077 = xor i8 %3076, 1
  store i8 %3077, i8* %3071, align 1
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3078, align 1
  %3079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3080 = icmp eq i64 %3068, 0
  %3081 = zext i1 %3080 to i8
  store i8 %3081, i8* %3079, align 1
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3083 = lshr i64 %3068, 63
  %3084 = trunc i64 %3083 to i8
  store i8 %3084, i8* %3082, align 1
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3085, align 1
  store %struct.Memory* %loadMem_4064bb, %struct.Memory** %MEMORY
  %loadMem_4064bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3087 = getelementptr inbounds %struct.GPR, %struct.GPR* %3086, i32 0, i32 33
  %3088 = getelementptr inbounds %struct.Reg, %struct.Reg* %3087, i32 0, i32 0
  %PC.i2441 = bitcast %union.anon* %3088 to i64*
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3090 = getelementptr inbounds %struct.GPR, %struct.GPR* %3089, i32 0, i32 5
  %3091 = getelementptr inbounds %struct.Reg, %struct.Reg* %3090, i32 0, i32 0
  %RCX.i2442 = bitcast %union.anon* %3091 to i64*
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3093 = getelementptr inbounds %struct.GPR, %struct.GPR* %3092, i32 0, i32 7
  %3094 = getelementptr inbounds %struct.Reg, %struct.Reg* %3093, i32 0, i32 0
  %RDX.i2443 = bitcast %union.anon* %3094 to i64*
  %3095 = load i64, i64* %RCX.i2442
  %3096 = load i64, i64* %RDX.i2443
  %3097 = load i64, i64* %PC.i2441
  %3098 = add i64 %3097, 3
  store i64 %3098, i64* %PC.i2441
  %3099 = add i64 %3096, %3095
  store i64 %3099, i64* %RCX.i2442, align 8
  %3100 = icmp ult i64 %3099, %3095
  %3101 = icmp ult i64 %3099, %3096
  %3102 = or i1 %3100, %3101
  %3103 = zext i1 %3102 to i8
  %3104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3103, i8* %3104, align 1
  %3105 = trunc i64 %3099 to i32
  %3106 = and i32 %3105, 255
  %3107 = call i32 @llvm.ctpop.i32(i32 %3106)
  %3108 = trunc i32 %3107 to i8
  %3109 = and i8 %3108, 1
  %3110 = xor i8 %3109, 1
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3110, i8* %3111, align 1
  %3112 = xor i64 %3096, %3095
  %3113 = xor i64 %3112, %3099
  %3114 = lshr i64 %3113, 4
  %3115 = trunc i64 %3114 to i8
  %3116 = and i8 %3115, 1
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3116, i8* %3117, align 1
  %3118 = icmp eq i64 %3099, 0
  %3119 = zext i1 %3118 to i8
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3119, i8* %3120, align 1
  %3121 = lshr i64 %3099, 63
  %3122 = trunc i64 %3121 to i8
  %3123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3122, i8* %3123, align 1
  %3124 = lshr i64 %3095, 63
  %3125 = lshr i64 %3096, 63
  %3126 = xor i64 %3121, %3124
  %3127 = xor i64 %3121, %3125
  %3128 = add i64 %3126, %3127
  %3129 = icmp eq i64 %3128, 2
  %3130 = zext i1 %3129 to i8
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3130, i8* %3131, align 1
  store %struct.Memory* %loadMem_4064bf, %struct.Memory** %MEMORY
  %loadMem_4064c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3133 = getelementptr inbounds %struct.GPR, %struct.GPR* %3132, i32 0, i32 33
  %3134 = getelementptr inbounds %struct.Reg, %struct.Reg* %3133, i32 0, i32 0
  %PC.i2438 = bitcast %union.anon* %3134 to i64*
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3136 = getelementptr inbounds %struct.GPR, %struct.GPR* %3135, i32 0, i32 7
  %3137 = getelementptr inbounds %struct.Reg, %struct.Reg* %3136, i32 0, i32 0
  %RDX.i2439 = bitcast %union.anon* %3137 to i64*
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3139 = getelementptr inbounds %struct.GPR, %struct.GPR* %3138, i32 0, i32 15
  %3140 = getelementptr inbounds %struct.Reg, %struct.Reg* %3139, i32 0, i32 0
  %RBP.i2440 = bitcast %union.anon* %3140 to i64*
  %3141 = load i64, i64* %RBP.i2440
  %3142 = sub i64 %3141, 28
  %3143 = load i64, i64* %PC.i2438
  %3144 = add i64 %3143, 4
  store i64 %3144, i64* %PC.i2438
  %3145 = inttoptr i64 %3142 to i32*
  %3146 = load i32, i32* %3145
  %3147 = sext i32 %3146 to i64
  store i64 %3147, i64* %RDX.i2439, align 8
  store %struct.Memory* %loadMem_4064c2, %struct.Memory** %MEMORY
  %loadMem_4064c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3149 = getelementptr inbounds %struct.GPR, %struct.GPR* %3148, i32 0, i32 33
  %3150 = getelementptr inbounds %struct.Reg, %struct.Reg* %3149, i32 0, i32 0
  %PC.i2434 = bitcast %union.anon* %3150 to i64*
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 1
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %RAX.i2435 = bitcast %union.anon* %3153 to i64*
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3155 = getelementptr inbounds %struct.GPR, %struct.GPR* %3154, i32 0, i32 5
  %3156 = getelementptr inbounds %struct.Reg, %struct.Reg* %3155, i32 0, i32 0
  %RCX.i2436 = bitcast %union.anon* %3156 to i64*
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3158 = getelementptr inbounds %struct.GPR, %struct.GPR* %3157, i32 0, i32 7
  %3159 = getelementptr inbounds %struct.Reg, %struct.Reg* %3158, i32 0, i32 0
  %RDX.i2437 = bitcast %union.anon* %3159 to i64*
  %3160 = load i64, i64* %RCX.i2436
  %3161 = load i64, i64* %RDX.i2437
  %3162 = mul i64 %3161, 4
  %3163 = add i64 %3162, %3160
  %3164 = load i64, i64* %PC.i2434
  %3165 = add i64 %3164, 3
  store i64 %3165, i64* %PC.i2434
  %3166 = inttoptr i64 %3163 to i32*
  %3167 = load i32, i32* %3166
  %3168 = zext i32 %3167 to i64
  store i64 %3168, i64* %RAX.i2435, align 8
  store %struct.Memory* %loadMem_4064c6, %struct.Memory** %MEMORY
  %loadMem_4064c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 33
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %PC.i2432 = bitcast %union.anon* %3171 to i64*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3173 = getelementptr inbounds %struct.GPR, %struct.GPR* %3172, i32 0, i32 5
  %3174 = getelementptr inbounds %struct.Reg, %struct.Reg* %3173, i32 0, i32 0
  %RCX.i2433 = bitcast %union.anon* %3174 to i64*
  %3175 = load i64, i64* %PC.i2432
  %3176 = add i64 %3175, 8
  store i64 %3176, i64* %PC.i2432
  %3177 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3177, i64* %RCX.i2433, align 8
  store %struct.Memory* %loadMem_4064c9, %struct.Memory** %MEMORY
  %loadMem_4064d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3179 = getelementptr inbounds %struct.GPR, %struct.GPR* %3178, i32 0, i32 33
  %3180 = getelementptr inbounds %struct.Reg, %struct.Reg* %3179, i32 0, i32 0
  %PC.i2430 = bitcast %union.anon* %3180 to i64*
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3182 = getelementptr inbounds %struct.GPR, %struct.GPR* %3181, i32 0, i32 5
  %3183 = getelementptr inbounds %struct.Reg, %struct.Reg* %3182, i32 0, i32 0
  %RCX.i2431 = bitcast %union.anon* %3183 to i64*
  %3184 = load i64, i64* %RCX.i2431
  %3185 = load i64, i64* %PC.i2430
  %3186 = add i64 %3185, 7
  store i64 %3186, i64* %PC.i2430
  %3187 = add i64 13112, %3184
  store i64 %3187, i64* %RCX.i2431, align 8
  %3188 = icmp ult i64 %3187, %3184
  %3189 = icmp ult i64 %3187, 13112
  %3190 = or i1 %3188, %3189
  %3191 = zext i1 %3190 to i8
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3191, i8* %3192, align 1
  %3193 = trunc i64 %3187 to i32
  %3194 = and i32 %3193, 255
  %3195 = call i32 @llvm.ctpop.i32(i32 %3194)
  %3196 = trunc i32 %3195 to i8
  %3197 = and i8 %3196, 1
  %3198 = xor i8 %3197, 1
  %3199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3198, i8* %3199, align 1
  %3200 = xor i64 13112, %3184
  %3201 = xor i64 %3200, %3187
  %3202 = lshr i64 %3201, 4
  %3203 = trunc i64 %3202 to i8
  %3204 = and i8 %3203, 1
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3204, i8* %3205, align 1
  %3206 = icmp eq i64 %3187, 0
  %3207 = zext i1 %3206 to i8
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3207, i8* %3208, align 1
  %3209 = lshr i64 %3187, 63
  %3210 = trunc i64 %3209 to i8
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3210, i8* %3211, align 1
  %3212 = lshr i64 %3184, 63
  %3213 = xor i64 %3209, %3212
  %3214 = add i64 %3213, %3209
  %3215 = icmp eq i64 %3214, 2
  %3216 = zext i1 %3215 to i8
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3216, i8* %3217, align 1
  store %struct.Memory* %loadMem_4064d1, %struct.Memory** %MEMORY
  %loadMem_4064d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3219 = getelementptr inbounds %struct.GPR, %struct.GPR* %3218, i32 0, i32 33
  %3220 = getelementptr inbounds %struct.Reg, %struct.Reg* %3219, i32 0, i32 0
  %PC.i2427 = bitcast %union.anon* %3220 to i64*
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3222 = getelementptr inbounds %struct.GPR, %struct.GPR* %3221, i32 0, i32 7
  %3223 = getelementptr inbounds %struct.Reg, %struct.Reg* %3222, i32 0, i32 0
  %RDX.i2428 = bitcast %union.anon* %3223 to i64*
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3225 = getelementptr inbounds %struct.GPR, %struct.GPR* %3224, i32 0, i32 15
  %3226 = getelementptr inbounds %struct.Reg, %struct.Reg* %3225, i32 0, i32 0
  %RBP.i2429 = bitcast %union.anon* %3226 to i64*
  %3227 = load i64, i64* %RBP.i2429
  %3228 = sub i64 %3227, 32
  %3229 = load i64, i64* %PC.i2427
  %3230 = add i64 %3229, 4
  store i64 %3230, i64* %PC.i2427
  %3231 = inttoptr i64 %3228 to i32*
  %3232 = load i32, i32* %3231
  %3233 = sext i32 %3232 to i64
  store i64 %3233, i64* %RDX.i2428, align 8
  store %struct.Memory* %loadMem_4064d8, %struct.Memory** %MEMORY
  %loadMem_4064dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3235 = getelementptr inbounds %struct.GPR, %struct.GPR* %3234, i32 0, i32 33
  %3236 = getelementptr inbounds %struct.Reg, %struct.Reg* %3235, i32 0, i32 0
  %PC.i2425 = bitcast %union.anon* %3236 to i64*
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3238 = getelementptr inbounds %struct.GPR, %struct.GPR* %3237, i32 0, i32 7
  %3239 = getelementptr inbounds %struct.Reg, %struct.Reg* %3238, i32 0, i32 0
  %RDX.i2426 = bitcast %union.anon* %3239 to i64*
  %3240 = load i64, i64* %RDX.i2426
  %3241 = load i64, i64* %PC.i2425
  %3242 = add i64 %3241, 4
  store i64 %3242, i64* %PC.i2425
  %3243 = shl i64 %3240, 5
  %3244 = icmp slt i64 %3243, 0
  %3245 = shl i64 %3243, 1
  store i64 %3245, i64* %RDX.i2426, align 8
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3247 = zext i1 %3244 to i8
  store i8 %3247, i8* %3246, align 1
  %3248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3249 = trunc i64 %3245 to i32
  %3250 = and i32 %3249, 254
  %3251 = call i32 @llvm.ctpop.i32(i32 %3250)
  %3252 = trunc i32 %3251 to i8
  %3253 = and i8 %3252, 1
  %3254 = xor i8 %3253, 1
  store i8 %3254, i8* %3248, align 1
  %3255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3255, align 1
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3257 = icmp eq i64 %3245, 0
  %3258 = zext i1 %3257 to i8
  store i8 %3258, i8* %3256, align 1
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3260 = lshr i64 %3245, 63
  %3261 = trunc i64 %3260 to i8
  store i8 %3261, i8* %3259, align 1
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3262, align 1
  store %struct.Memory* %loadMem_4064dc, %struct.Memory** %MEMORY
  %loadMem_4064e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3264 = getelementptr inbounds %struct.GPR, %struct.GPR* %3263, i32 0, i32 33
  %3265 = getelementptr inbounds %struct.Reg, %struct.Reg* %3264, i32 0, i32 0
  %PC.i2422 = bitcast %union.anon* %3265 to i64*
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3267 = getelementptr inbounds %struct.GPR, %struct.GPR* %3266, i32 0, i32 5
  %3268 = getelementptr inbounds %struct.Reg, %struct.Reg* %3267, i32 0, i32 0
  %RCX.i2423 = bitcast %union.anon* %3268 to i64*
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3270 = getelementptr inbounds %struct.GPR, %struct.GPR* %3269, i32 0, i32 7
  %3271 = getelementptr inbounds %struct.Reg, %struct.Reg* %3270, i32 0, i32 0
  %RDX.i2424 = bitcast %union.anon* %3271 to i64*
  %3272 = load i64, i64* %RCX.i2423
  %3273 = load i64, i64* %RDX.i2424
  %3274 = load i64, i64* %PC.i2422
  %3275 = add i64 %3274, 3
  store i64 %3275, i64* %PC.i2422
  %3276 = add i64 %3273, %3272
  store i64 %3276, i64* %RCX.i2423, align 8
  %3277 = icmp ult i64 %3276, %3272
  %3278 = icmp ult i64 %3276, %3273
  %3279 = or i1 %3277, %3278
  %3280 = zext i1 %3279 to i8
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3280, i8* %3281, align 1
  %3282 = trunc i64 %3276 to i32
  %3283 = and i32 %3282, 255
  %3284 = call i32 @llvm.ctpop.i32(i32 %3283)
  %3285 = trunc i32 %3284 to i8
  %3286 = and i8 %3285, 1
  %3287 = xor i8 %3286, 1
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3287, i8* %3288, align 1
  %3289 = xor i64 %3273, %3272
  %3290 = xor i64 %3289, %3276
  %3291 = lshr i64 %3290, 4
  %3292 = trunc i64 %3291 to i8
  %3293 = and i8 %3292, 1
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3293, i8* %3294, align 1
  %3295 = icmp eq i64 %3276, 0
  %3296 = zext i1 %3295 to i8
  %3297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3296, i8* %3297, align 1
  %3298 = lshr i64 %3276, 63
  %3299 = trunc i64 %3298 to i8
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3299, i8* %3300, align 1
  %3301 = lshr i64 %3272, 63
  %3302 = lshr i64 %3273, 63
  %3303 = xor i64 %3298, %3301
  %3304 = xor i64 %3298, %3302
  %3305 = add i64 %3303, %3304
  %3306 = icmp eq i64 %3305, 2
  %3307 = zext i1 %3306 to i8
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3307, i8* %3308, align 1
  store %struct.Memory* %loadMem_4064e0, %struct.Memory** %MEMORY
  %loadMem_4064e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3310 = getelementptr inbounds %struct.GPR, %struct.GPR* %3309, i32 0, i32 33
  %3311 = getelementptr inbounds %struct.Reg, %struct.Reg* %3310, i32 0, i32 0
  %PC.i2419 = bitcast %union.anon* %3311 to i64*
  %3312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3313 = getelementptr inbounds %struct.GPR, %struct.GPR* %3312, i32 0, i32 7
  %3314 = getelementptr inbounds %struct.Reg, %struct.Reg* %3313, i32 0, i32 0
  %RDX.i2420 = bitcast %union.anon* %3314 to i64*
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3316 = getelementptr inbounds %struct.GPR, %struct.GPR* %3315, i32 0, i32 15
  %3317 = getelementptr inbounds %struct.Reg, %struct.Reg* %3316, i32 0, i32 0
  %RBP.i2421 = bitcast %union.anon* %3317 to i64*
  %3318 = load i64, i64* %RBP.i2421
  %3319 = sub i64 %3318, 28
  %3320 = load i64, i64* %PC.i2419
  %3321 = add i64 %3320, 4
  store i64 %3321, i64* %PC.i2419
  %3322 = inttoptr i64 %3319 to i32*
  %3323 = load i32, i32* %3322
  %3324 = sext i32 %3323 to i64
  store i64 %3324, i64* %RDX.i2420, align 8
  store %struct.Memory* %loadMem_4064e3, %struct.Memory** %MEMORY
  %loadMem_4064e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3326 = getelementptr inbounds %struct.GPR, %struct.GPR* %3325, i32 0, i32 33
  %3327 = getelementptr inbounds %struct.Reg, %struct.Reg* %3326, i32 0, i32 0
  %PC.i2415 = bitcast %union.anon* %3327 to i64*
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3329 = getelementptr inbounds %struct.GPR, %struct.GPR* %3328, i32 0, i32 1
  %3330 = getelementptr inbounds %struct.Reg, %struct.Reg* %3329, i32 0, i32 0
  %RAX.i2416 = bitcast %union.anon* %3330 to i64*
  %3331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3332 = getelementptr inbounds %struct.GPR, %struct.GPR* %3331, i32 0, i32 5
  %3333 = getelementptr inbounds %struct.Reg, %struct.Reg* %3332, i32 0, i32 0
  %RCX.i2417 = bitcast %union.anon* %3333 to i64*
  %3334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3335 = getelementptr inbounds %struct.GPR, %struct.GPR* %3334, i32 0, i32 7
  %3336 = getelementptr inbounds %struct.Reg, %struct.Reg* %3335, i32 0, i32 0
  %RDX.i2418 = bitcast %union.anon* %3336 to i64*
  %3337 = load i64, i64* %RAX.i2416
  %3338 = load i64, i64* %RCX.i2417
  %3339 = load i64, i64* %RDX.i2418
  %3340 = mul i64 %3339, 4
  %3341 = add i64 %3340, %3338
  %3342 = load i64, i64* %PC.i2415
  %3343 = add i64 %3342, 3
  store i64 %3343, i64* %PC.i2415
  %3344 = trunc i64 %3337 to i32
  %3345 = inttoptr i64 %3341 to i32*
  %3346 = load i32, i32* %3345
  %3347 = sub i32 %3344, %3346
  %3348 = zext i32 %3347 to i64
  store i64 %3348, i64* %RAX.i2416, align 8
  %3349 = icmp ult i32 %3344, %3346
  %3350 = zext i1 %3349 to i8
  %3351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3350, i8* %3351, align 1
  %3352 = and i32 %3347, 255
  %3353 = call i32 @llvm.ctpop.i32(i32 %3352)
  %3354 = trunc i32 %3353 to i8
  %3355 = and i8 %3354, 1
  %3356 = xor i8 %3355, 1
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3356, i8* %3357, align 1
  %3358 = xor i32 %3346, %3344
  %3359 = xor i32 %3358, %3347
  %3360 = lshr i32 %3359, 4
  %3361 = trunc i32 %3360 to i8
  %3362 = and i8 %3361, 1
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3362, i8* %3363, align 1
  %3364 = icmp eq i32 %3347, 0
  %3365 = zext i1 %3364 to i8
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3365, i8* %3366, align 1
  %3367 = lshr i32 %3347, 31
  %3368 = trunc i32 %3367 to i8
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3368, i8* %3369, align 1
  %3370 = lshr i32 %3344, 31
  %3371 = lshr i32 %3346, 31
  %3372 = xor i32 %3371, %3370
  %3373 = xor i32 %3367, %3370
  %3374 = add i32 %3373, %3372
  %3375 = icmp eq i32 %3374, 2
  %3376 = zext i1 %3375 to i8
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3376, i8* %3377, align 1
  store %struct.Memory* %loadMem_4064e7, %struct.Memory** %MEMORY
  %loadMem_4064ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3379 = getelementptr inbounds %struct.GPR, %struct.GPR* %3378, i32 0, i32 33
  %3380 = getelementptr inbounds %struct.Reg, %struct.Reg* %3379, i32 0, i32 0
  %PC.i2412 = bitcast %union.anon* %3380 to i64*
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3382 = getelementptr inbounds %struct.GPR, %struct.GPR* %3381, i32 0, i32 5
  %3383 = getelementptr inbounds %struct.Reg, %struct.Reg* %3382, i32 0, i32 0
  %RCX.i2413 = bitcast %union.anon* %3383 to i64*
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3385 = getelementptr inbounds %struct.GPR, %struct.GPR* %3384, i32 0, i32 15
  %3386 = getelementptr inbounds %struct.Reg, %struct.Reg* %3385, i32 0, i32 0
  %RBP.i2414 = bitcast %union.anon* %3386 to i64*
  %3387 = load i64, i64* %RBP.i2414
  %3388 = sub i64 %3387, 32
  %3389 = load i64, i64* %PC.i2412
  %3390 = add i64 %3389, 4
  store i64 %3390, i64* %PC.i2412
  %3391 = inttoptr i64 %3388 to i32*
  %3392 = load i32, i32* %3391
  %3393 = sext i32 %3392 to i64
  store i64 %3393, i64* %RCX.i2413, align 8
  store %struct.Memory* %loadMem_4064ea, %struct.Memory** %MEMORY
  %loadMem_4064ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3395 = getelementptr inbounds %struct.GPR, %struct.GPR* %3394, i32 0, i32 33
  %3396 = getelementptr inbounds %struct.Reg, %struct.Reg* %3395, i32 0, i32 0
  %PC.i2408 = bitcast %union.anon* %3396 to i64*
  %3397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3398 = getelementptr inbounds %struct.GPR, %struct.GPR* %3397, i32 0, i32 1
  %3399 = getelementptr inbounds %struct.Reg, %struct.Reg* %3398, i32 0, i32 0
  %EAX.i2409 = bitcast %union.anon* %3399 to i32*
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3401 = getelementptr inbounds %struct.GPR, %struct.GPR* %3400, i32 0, i32 5
  %3402 = getelementptr inbounds %struct.Reg, %struct.Reg* %3401, i32 0, i32 0
  %RCX.i2410 = bitcast %union.anon* %3402 to i64*
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3404 = getelementptr inbounds %struct.GPR, %struct.GPR* %3403, i32 0, i32 15
  %3405 = getelementptr inbounds %struct.Reg, %struct.Reg* %3404, i32 0, i32 0
  %RBP.i2411 = bitcast %union.anon* %3405 to i64*
  %3406 = load i64, i64* %RBP.i2411
  %3407 = load i64, i64* %RCX.i2410
  %3408 = mul i64 %3407, 4
  %3409 = add i64 %3406, -64
  %3410 = add i64 %3409, %3408
  %3411 = load i32, i32* %EAX.i2409
  %3412 = zext i32 %3411 to i64
  %3413 = load i64, i64* %PC.i2408
  %3414 = add i64 %3413, 4
  store i64 %3414, i64* %PC.i2408
  %3415 = inttoptr i64 %3410 to i32*
  store i32 %3411, i32* %3415
  store %struct.Memory* %loadMem_4064ee, %struct.Memory** %MEMORY
  %loadMem_4064f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3417 = getelementptr inbounds %struct.GPR, %struct.GPR* %3416, i32 0, i32 33
  %3418 = getelementptr inbounds %struct.Reg, %struct.Reg* %3417, i32 0, i32 0
  %PC.i2405 = bitcast %union.anon* %3418 to i64*
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3420 = getelementptr inbounds %struct.GPR, %struct.GPR* %3419, i32 0, i32 1
  %3421 = getelementptr inbounds %struct.Reg, %struct.Reg* %3420, i32 0, i32 0
  %RAX.i2406 = bitcast %union.anon* %3421 to i64*
  %3422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3423 = getelementptr inbounds %struct.GPR, %struct.GPR* %3422, i32 0, i32 15
  %3424 = getelementptr inbounds %struct.Reg, %struct.Reg* %3423, i32 0, i32 0
  %RBP.i2407 = bitcast %union.anon* %3424 to i64*
  %3425 = load i64, i64* %RBP.i2407
  %3426 = sub i64 %3425, 24
  %3427 = load i64, i64* %PC.i2405
  %3428 = add i64 %3427, 3
  store i64 %3428, i64* %PC.i2405
  %3429 = inttoptr i64 %3426 to i32*
  %3430 = load i32, i32* %3429
  %3431 = zext i32 %3430 to i64
  store i64 %3431, i64* %RAX.i2406, align 8
  store %struct.Memory* %loadMem_4064f2, %struct.Memory** %MEMORY
  %loadMem_4064f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3433 = getelementptr inbounds %struct.GPR, %struct.GPR* %3432, i32 0, i32 33
  %3434 = getelementptr inbounds %struct.Reg, %struct.Reg* %3433, i32 0, i32 0
  %PC.i2403 = bitcast %union.anon* %3434 to i64*
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 1
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %RAX.i2404 = bitcast %union.anon* %3437 to i64*
  %3438 = load i64, i64* %RAX.i2404
  %3439 = load i64, i64* %PC.i2403
  %3440 = add i64 %3439, 3
  store i64 %3440, i64* %PC.i2403
  %3441 = trunc i64 %3438 to i32
  %3442 = add i32 1, %3441
  %3443 = zext i32 %3442 to i64
  store i64 %3443, i64* %RAX.i2404, align 8
  %3444 = icmp ult i32 %3442, %3441
  %3445 = icmp ult i32 %3442, 1
  %3446 = or i1 %3444, %3445
  %3447 = zext i1 %3446 to i8
  %3448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3447, i8* %3448, align 1
  %3449 = and i32 %3442, 255
  %3450 = call i32 @llvm.ctpop.i32(i32 %3449)
  %3451 = trunc i32 %3450 to i8
  %3452 = and i8 %3451, 1
  %3453 = xor i8 %3452, 1
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3453, i8* %3454, align 1
  %3455 = xor i64 1, %3438
  %3456 = trunc i64 %3455 to i32
  %3457 = xor i32 %3456, %3442
  %3458 = lshr i32 %3457, 4
  %3459 = trunc i32 %3458 to i8
  %3460 = and i8 %3459, 1
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3460, i8* %3461, align 1
  %3462 = icmp eq i32 %3442, 0
  %3463 = zext i1 %3462 to i8
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3463, i8* %3464, align 1
  %3465 = lshr i32 %3442, 31
  %3466 = trunc i32 %3465 to i8
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3466, i8* %3467, align 1
  %3468 = lshr i32 %3441, 31
  %3469 = xor i32 %3465, %3468
  %3470 = add i32 %3469, %3465
  %3471 = icmp eq i32 %3470, 2
  %3472 = zext i1 %3471 to i8
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3472, i8* %3473, align 1
  store %struct.Memory* %loadMem_4064f5, %struct.Memory** %MEMORY
  %loadMem_4064f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3475 = getelementptr inbounds %struct.GPR, %struct.GPR* %3474, i32 0, i32 33
  %3476 = getelementptr inbounds %struct.Reg, %struct.Reg* %3475, i32 0, i32 0
  %PC.i2400 = bitcast %union.anon* %3476 to i64*
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3478 = getelementptr inbounds %struct.GPR, %struct.GPR* %3477, i32 0, i32 1
  %3479 = getelementptr inbounds %struct.Reg, %struct.Reg* %3478, i32 0, i32 0
  %EAX.i2401 = bitcast %union.anon* %3479 to i32*
  %3480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3481 = getelementptr inbounds %struct.GPR, %struct.GPR* %3480, i32 0, i32 15
  %3482 = getelementptr inbounds %struct.Reg, %struct.Reg* %3481, i32 0, i32 0
  %RBP.i2402 = bitcast %union.anon* %3482 to i64*
  %3483 = load i64, i64* %RBP.i2402
  %3484 = sub i64 %3483, 24
  %3485 = load i32, i32* %EAX.i2401
  %3486 = zext i32 %3485 to i64
  %3487 = load i64, i64* %PC.i2400
  %3488 = add i64 %3487, 3
  store i64 %3488, i64* %PC.i2400
  %3489 = inttoptr i64 %3484 to i32*
  store i32 %3485, i32* %3489
  store %struct.Memory* %loadMem_4064f8, %struct.Memory** %MEMORY
  %loadMem_4064fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3491 = getelementptr inbounds %struct.GPR, %struct.GPR* %3490, i32 0, i32 33
  %3492 = getelementptr inbounds %struct.Reg, %struct.Reg* %3491, i32 0, i32 0
  %PC.i2399 = bitcast %union.anon* %3492 to i64*
  %3493 = load i64, i64* %PC.i2399
  %3494 = add i64 %3493, -178
  %3495 = load i64, i64* %PC.i2399
  %3496 = add i64 %3495, 5
  store i64 %3496, i64* %PC.i2399
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3494, i64* %3497, align 8
  store %struct.Memory* %loadMem_4064fb, %struct.Memory** %MEMORY
  br label %block_.L_406449

block_.L_406500:                                  ; preds = %block_.L_406449
  %loadMem_406500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 33
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %PC.i2396 = bitcast %union.anon* %3500 to i64*
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3502 = getelementptr inbounds %struct.GPR, %struct.GPR* %3501, i32 0, i32 1
  %3503 = getelementptr inbounds %struct.Reg, %struct.Reg* %3502, i32 0, i32 0
  %RAX.i2397 = bitcast %union.anon* %3503 to i64*
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3505 = getelementptr inbounds %struct.GPR, %struct.GPR* %3504, i32 0, i32 15
  %3506 = getelementptr inbounds %struct.Reg, %struct.Reg* %3505, i32 0, i32 0
  %RBP.i2398 = bitcast %union.anon* %3506 to i64*
  %3507 = load i64, i64* %RBP.i2398
  %3508 = sub i64 %3507, 64
  %3509 = load i64, i64* %PC.i2396
  %3510 = add i64 %3509, 3
  store i64 %3510, i64* %PC.i2396
  %3511 = inttoptr i64 %3508 to i32*
  %3512 = load i32, i32* %3511
  %3513 = zext i32 %3512 to i64
  store i64 %3513, i64* %RAX.i2397, align 8
  store %struct.Memory* %loadMem_406500, %struct.Memory** %MEMORY
  %loadMem_406503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3515 = getelementptr inbounds %struct.GPR, %struct.GPR* %3514, i32 0, i32 33
  %3516 = getelementptr inbounds %struct.Reg, %struct.Reg* %3515, i32 0, i32 0
  %PC.i2393 = bitcast %union.anon* %3516 to i64*
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3518 = getelementptr inbounds %struct.GPR, %struct.GPR* %3517, i32 0, i32 1
  %3519 = getelementptr inbounds %struct.Reg, %struct.Reg* %3518, i32 0, i32 0
  %RAX.i2394 = bitcast %union.anon* %3519 to i64*
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3521 = getelementptr inbounds %struct.GPR, %struct.GPR* %3520, i32 0, i32 15
  %3522 = getelementptr inbounds %struct.Reg, %struct.Reg* %3521, i32 0, i32 0
  %RBP.i2395 = bitcast %union.anon* %3522 to i64*
  %3523 = load i64, i64* %RAX.i2394
  %3524 = load i64, i64* %RBP.i2395
  %3525 = sub i64 %3524, 60
  %3526 = load i64, i64* %PC.i2393
  %3527 = add i64 %3526, 3
  store i64 %3527, i64* %PC.i2393
  %3528 = trunc i64 %3523 to i32
  %3529 = inttoptr i64 %3525 to i32*
  %3530 = load i32, i32* %3529
  %3531 = add i32 %3530, %3528
  %3532 = zext i32 %3531 to i64
  store i64 %3532, i64* %RAX.i2394, align 8
  %3533 = icmp ult i32 %3531, %3528
  %3534 = icmp ult i32 %3531, %3530
  %3535 = or i1 %3533, %3534
  %3536 = zext i1 %3535 to i8
  %3537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3536, i8* %3537, align 1
  %3538 = and i32 %3531, 255
  %3539 = call i32 @llvm.ctpop.i32(i32 %3538)
  %3540 = trunc i32 %3539 to i8
  %3541 = and i8 %3540, 1
  %3542 = xor i8 %3541, 1
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3542, i8* %3543, align 1
  %3544 = xor i32 %3530, %3528
  %3545 = xor i32 %3544, %3531
  %3546 = lshr i32 %3545, 4
  %3547 = trunc i32 %3546 to i8
  %3548 = and i8 %3547, 1
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3548, i8* %3549, align 1
  %3550 = icmp eq i32 %3531, 0
  %3551 = zext i1 %3550 to i8
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3551, i8* %3552, align 1
  %3553 = lshr i32 %3531, 31
  %3554 = trunc i32 %3553 to i8
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3554, i8* %3555, align 1
  %3556 = lshr i32 %3528, 31
  %3557 = lshr i32 %3530, 31
  %3558 = xor i32 %3553, %3556
  %3559 = xor i32 %3553, %3557
  %3560 = add i32 %3558, %3559
  %3561 = icmp eq i32 %3560, 2
  %3562 = zext i1 %3561 to i8
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3562, i8* %3563, align 1
  store %struct.Memory* %loadMem_406503, %struct.Memory** %MEMORY
  %loadMem_406506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3565 = getelementptr inbounds %struct.GPR, %struct.GPR* %3564, i32 0, i32 33
  %3566 = getelementptr inbounds %struct.Reg, %struct.Reg* %3565, i32 0, i32 0
  %PC.i2391 = bitcast %union.anon* %3566 to i64*
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3568 = getelementptr inbounds %struct.GPR, %struct.GPR* %3567, i32 0, i32 5
  %3569 = getelementptr inbounds %struct.Reg, %struct.Reg* %3568, i32 0, i32 0
  %RCX.i2392 = bitcast %union.anon* %3569 to i64*
  %3570 = load i64, i64* %PC.i2391
  %3571 = add i64 %3570, 8
  store i64 %3571, i64* %PC.i2391
  %3572 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3572, i64* %RCX.i2392, align 8
  store %struct.Memory* %loadMem_406506, %struct.Memory** %MEMORY
  %loadMem_40650e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3574 = getelementptr inbounds %struct.GPR, %struct.GPR* %3573, i32 0, i32 33
  %3575 = getelementptr inbounds %struct.Reg, %struct.Reg* %3574, i32 0, i32 0
  %PC.i2388 = bitcast %union.anon* %3575 to i64*
  %3576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3577 = getelementptr inbounds %struct.GPR, %struct.GPR* %3576, i32 0, i32 7
  %3578 = getelementptr inbounds %struct.Reg, %struct.Reg* %3577, i32 0, i32 0
  %RDX.i2389 = bitcast %union.anon* %3578 to i64*
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3580 = getelementptr inbounds %struct.GPR, %struct.GPR* %3579, i32 0, i32 15
  %3581 = getelementptr inbounds %struct.Reg, %struct.Reg* %3580, i32 0, i32 0
  %RBP.i2390 = bitcast %union.anon* %3581 to i64*
  %3582 = load i64, i64* %RBP.i2390
  %3583 = sub i64 %3582, 28
  %3584 = load i64, i64* %PC.i2388
  %3585 = add i64 %3584, 4
  store i64 %3585, i64* %PC.i2388
  %3586 = inttoptr i64 %3583 to i32*
  %3587 = load i32, i32* %3586
  %3588 = sext i32 %3587 to i64
  store i64 %3588, i64* %RDX.i2389, align 8
  store %struct.Memory* %loadMem_40650e, %struct.Memory** %MEMORY
  %loadMem_406512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3590 = getelementptr inbounds %struct.GPR, %struct.GPR* %3589, i32 0, i32 33
  %3591 = getelementptr inbounds %struct.Reg, %struct.Reg* %3590, i32 0, i32 0
  %PC.i2384 = bitcast %union.anon* %3591 to i64*
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3593 = getelementptr inbounds %struct.GPR, %struct.GPR* %3592, i32 0, i32 1
  %3594 = getelementptr inbounds %struct.Reg, %struct.Reg* %3593, i32 0, i32 0
  %EAX.i2385 = bitcast %union.anon* %3594 to i32*
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3596 = getelementptr inbounds %struct.GPR, %struct.GPR* %3595, i32 0, i32 5
  %3597 = getelementptr inbounds %struct.Reg, %struct.Reg* %3596, i32 0, i32 0
  %RCX.i2386 = bitcast %union.anon* %3597 to i64*
  %3598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3599 = getelementptr inbounds %struct.GPR, %struct.GPR* %3598, i32 0, i32 7
  %3600 = getelementptr inbounds %struct.Reg, %struct.Reg* %3599, i32 0, i32 0
  %RDX.i2387 = bitcast %union.anon* %3600 to i64*
  %3601 = load i64, i64* %RCX.i2386
  %3602 = load i64, i64* %RDX.i2387
  %3603 = mul i64 %3602, 4
  %3604 = add i64 %3601, 13112
  %3605 = add i64 %3604, %3603
  %3606 = load i32, i32* %EAX.i2385
  %3607 = zext i32 %3606 to i64
  %3608 = load i64, i64* %PC.i2384
  %3609 = add i64 %3608, 7
  store i64 %3609, i64* %PC.i2384
  %3610 = inttoptr i64 %3605 to i32*
  store i32 %3606, i32* %3610
  store %struct.Memory* %loadMem_406512, %struct.Memory** %MEMORY
  %loadMem_406519 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3612 = getelementptr inbounds %struct.GPR, %struct.GPR* %3611, i32 0, i32 33
  %3613 = getelementptr inbounds %struct.Reg, %struct.Reg* %3612, i32 0, i32 0
  %PC.i2381 = bitcast %union.anon* %3613 to i64*
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3615 = getelementptr inbounds %struct.GPR, %struct.GPR* %3614, i32 0, i32 1
  %3616 = getelementptr inbounds %struct.Reg, %struct.Reg* %3615, i32 0, i32 0
  %RAX.i2382 = bitcast %union.anon* %3616 to i64*
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3618 = getelementptr inbounds %struct.GPR, %struct.GPR* %3617, i32 0, i32 15
  %3619 = getelementptr inbounds %struct.Reg, %struct.Reg* %3618, i32 0, i32 0
  %RBP.i2383 = bitcast %union.anon* %3619 to i64*
  %3620 = load i64, i64* %RBP.i2383
  %3621 = sub i64 %3620, 64
  %3622 = load i64, i64* %PC.i2381
  %3623 = add i64 %3622, 3
  store i64 %3623, i64* %PC.i2381
  %3624 = inttoptr i64 %3621 to i32*
  %3625 = load i32, i32* %3624
  %3626 = zext i32 %3625 to i64
  store i64 %3626, i64* %RAX.i2382, align 8
  store %struct.Memory* %loadMem_406519, %struct.Memory** %MEMORY
  %loadMem_40651c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3628 = getelementptr inbounds %struct.GPR, %struct.GPR* %3627, i32 0, i32 33
  %3629 = getelementptr inbounds %struct.Reg, %struct.Reg* %3628, i32 0, i32 0
  %PC.i2378 = bitcast %union.anon* %3629 to i64*
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3631 = getelementptr inbounds %struct.GPR, %struct.GPR* %3630, i32 0, i32 1
  %3632 = getelementptr inbounds %struct.Reg, %struct.Reg* %3631, i32 0, i32 0
  %RAX.i2379 = bitcast %union.anon* %3632 to i64*
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3634 = getelementptr inbounds %struct.GPR, %struct.GPR* %3633, i32 0, i32 15
  %3635 = getelementptr inbounds %struct.Reg, %struct.Reg* %3634, i32 0, i32 0
  %RBP.i2380 = bitcast %union.anon* %3635 to i64*
  %3636 = load i64, i64* %RAX.i2379
  %3637 = load i64, i64* %RBP.i2380
  %3638 = sub i64 %3637, 60
  %3639 = load i64, i64* %PC.i2378
  %3640 = add i64 %3639, 3
  store i64 %3640, i64* %PC.i2378
  %3641 = trunc i64 %3636 to i32
  %3642 = inttoptr i64 %3638 to i32*
  %3643 = load i32, i32* %3642
  %3644 = sub i32 %3641, %3643
  %3645 = zext i32 %3644 to i64
  store i64 %3645, i64* %RAX.i2379, align 8
  %3646 = icmp ult i32 %3641, %3643
  %3647 = zext i1 %3646 to i8
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3647, i8* %3648, align 1
  %3649 = and i32 %3644, 255
  %3650 = call i32 @llvm.ctpop.i32(i32 %3649)
  %3651 = trunc i32 %3650 to i8
  %3652 = and i8 %3651, 1
  %3653 = xor i8 %3652, 1
  %3654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3653, i8* %3654, align 1
  %3655 = xor i32 %3643, %3641
  %3656 = xor i32 %3655, %3644
  %3657 = lshr i32 %3656, 4
  %3658 = trunc i32 %3657 to i8
  %3659 = and i8 %3658, 1
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3659, i8* %3660, align 1
  %3661 = icmp eq i32 %3644, 0
  %3662 = zext i1 %3661 to i8
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3662, i8* %3663, align 1
  %3664 = lshr i32 %3644, 31
  %3665 = trunc i32 %3664 to i8
  %3666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3665, i8* %3666, align 1
  %3667 = lshr i32 %3641, 31
  %3668 = lshr i32 %3643, 31
  %3669 = xor i32 %3668, %3667
  %3670 = xor i32 %3664, %3667
  %3671 = add i32 %3670, %3669
  %3672 = icmp eq i32 %3671, 2
  %3673 = zext i1 %3672 to i8
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3673, i8* %3674, align 1
  store %struct.Memory* %loadMem_40651c, %struct.Memory** %MEMORY
  %loadMem_40651f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3676 = getelementptr inbounds %struct.GPR, %struct.GPR* %3675, i32 0, i32 33
  %3677 = getelementptr inbounds %struct.Reg, %struct.Reg* %3676, i32 0, i32 0
  %PC.i2376 = bitcast %union.anon* %3677 to i64*
  %3678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3679 = getelementptr inbounds %struct.GPR, %struct.GPR* %3678, i32 0, i32 5
  %3680 = getelementptr inbounds %struct.Reg, %struct.Reg* %3679, i32 0, i32 0
  %RCX.i2377 = bitcast %union.anon* %3680 to i64*
  %3681 = load i64, i64* %PC.i2376
  %3682 = add i64 %3681, 8
  store i64 %3682, i64* %PC.i2376
  %3683 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3683, i64* %RCX.i2377, align 8
  store %struct.Memory* %loadMem_40651f, %struct.Memory** %MEMORY
  %loadMem_406527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3685 = getelementptr inbounds %struct.GPR, %struct.GPR* %3684, i32 0, i32 33
  %3686 = getelementptr inbounds %struct.Reg, %struct.Reg* %3685, i32 0, i32 0
  %PC.i2373 = bitcast %union.anon* %3686 to i64*
  %3687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3688 = getelementptr inbounds %struct.GPR, %struct.GPR* %3687, i32 0, i32 7
  %3689 = getelementptr inbounds %struct.Reg, %struct.Reg* %3688, i32 0, i32 0
  %RDX.i2374 = bitcast %union.anon* %3689 to i64*
  %3690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3691 = getelementptr inbounds %struct.GPR, %struct.GPR* %3690, i32 0, i32 15
  %3692 = getelementptr inbounds %struct.Reg, %struct.Reg* %3691, i32 0, i32 0
  %RBP.i2375 = bitcast %union.anon* %3692 to i64*
  %3693 = load i64, i64* %RBP.i2375
  %3694 = sub i64 %3693, 28
  %3695 = load i64, i64* %PC.i2373
  %3696 = add i64 %3695, 4
  store i64 %3696, i64* %PC.i2373
  %3697 = inttoptr i64 %3694 to i32*
  %3698 = load i32, i32* %3697
  %3699 = sext i32 %3698 to i64
  store i64 %3699, i64* %RDX.i2374, align 8
  store %struct.Memory* %loadMem_406527, %struct.Memory** %MEMORY
  %loadMem_40652b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3701 = getelementptr inbounds %struct.GPR, %struct.GPR* %3700, i32 0, i32 33
  %3702 = getelementptr inbounds %struct.Reg, %struct.Reg* %3701, i32 0, i32 0
  %PC.i2369 = bitcast %union.anon* %3702 to i64*
  %3703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3704 = getelementptr inbounds %struct.GPR, %struct.GPR* %3703, i32 0, i32 1
  %3705 = getelementptr inbounds %struct.Reg, %struct.Reg* %3704, i32 0, i32 0
  %EAX.i2370 = bitcast %union.anon* %3705 to i32*
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3707 = getelementptr inbounds %struct.GPR, %struct.GPR* %3706, i32 0, i32 5
  %3708 = getelementptr inbounds %struct.Reg, %struct.Reg* %3707, i32 0, i32 0
  %RCX.i2371 = bitcast %union.anon* %3708 to i64*
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3710 = getelementptr inbounds %struct.GPR, %struct.GPR* %3709, i32 0, i32 7
  %3711 = getelementptr inbounds %struct.Reg, %struct.Reg* %3710, i32 0, i32 0
  %RDX.i2372 = bitcast %union.anon* %3711 to i64*
  %3712 = load i64, i64* %RCX.i2371
  %3713 = load i64, i64* %RDX.i2372
  %3714 = mul i64 %3713, 4
  %3715 = add i64 %3712, 13240
  %3716 = add i64 %3715, %3714
  %3717 = load i32, i32* %EAX.i2370
  %3718 = zext i32 %3717 to i64
  %3719 = load i64, i64* %PC.i2369
  %3720 = add i64 %3719, 7
  store i64 %3720, i64* %PC.i2369
  %3721 = inttoptr i64 %3716 to i32*
  store i32 %3717, i32* %3721
  store %struct.Memory* %loadMem_40652b, %struct.Memory** %MEMORY
  %loadMem_406532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3723 = getelementptr inbounds %struct.GPR, %struct.GPR* %3722, i32 0, i32 33
  %3724 = getelementptr inbounds %struct.Reg, %struct.Reg* %3723, i32 0, i32 0
  %PC.i2366 = bitcast %union.anon* %3724 to i64*
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3726 = getelementptr inbounds %struct.GPR, %struct.GPR* %3725, i32 0, i32 1
  %3727 = getelementptr inbounds %struct.Reg, %struct.Reg* %3726, i32 0, i32 0
  %RAX.i2367 = bitcast %union.anon* %3727 to i64*
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3729 = getelementptr inbounds %struct.GPR, %struct.GPR* %3728, i32 0, i32 15
  %3730 = getelementptr inbounds %struct.Reg, %struct.Reg* %3729, i32 0, i32 0
  %RBP.i2368 = bitcast %union.anon* %3730 to i64*
  %3731 = load i64, i64* %RBP.i2368
  %3732 = sub i64 %3731, 52
  %3733 = load i64, i64* %PC.i2366
  %3734 = add i64 %3733, 3
  store i64 %3734, i64* %PC.i2366
  %3735 = inttoptr i64 %3732 to i32*
  %3736 = load i32, i32* %3735
  %3737 = zext i32 %3736 to i64
  store i64 %3737, i64* %RAX.i2367, align 8
  store %struct.Memory* %loadMem_406532, %struct.Memory** %MEMORY
  %loadMem_406535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3739 = getelementptr inbounds %struct.GPR, %struct.GPR* %3738, i32 0, i32 33
  %3740 = getelementptr inbounds %struct.Reg, %struct.Reg* %3739, i32 0, i32 0
  %PC.i2364 = bitcast %union.anon* %3740 to i64*
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3742 = getelementptr inbounds %struct.GPR, %struct.GPR* %3741, i32 0, i32 1
  %3743 = getelementptr inbounds %struct.Reg, %struct.Reg* %3742, i32 0, i32 0
  %RAX.i2365 = bitcast %union.anon* %3743 to i64*
  %3744 = load i64, i64* %RAX.i2365
  %3745 = load i64, i64* %PC.i2364
  %3746 = add i64 %3745, 2
  store i64 %3746, i64* %PC.i2364
  %3747 = trunc i64 %3744 to i32
  %3748 = shl i32 %3747, 1
  %3749 = icmp slt i32 %3747, 0
  %3750 = icmp slt i32 %3748, 0
  %3751 = xor i1 %3749, %3750
  %3752 = zext i32 %3748 to i64
  store i64 %3752, i64* %RAX.i2365, align 8
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3754 = zext i1 %3749 to i8
  store i8 %3754, i8* %3753, align 1
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3756 = and i32 %3748, 254
  %3757 = call i32 @llvm.ctpop.i32(i32 %3756)
  %3758 = trunc i32 %3757 to i8
  %3759 = and i8 %3758, 1
  %3760 = xor i8 %3759, 1
  store i8 %3760, i8* %3755, align 1
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3761, align 1
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3763 = icmp eq i32 %3748, 0
  %3764 = zext i1 %3763 to i8
  store i8 %3764, i8* %3762, align 1
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3766 = lshr i32 %3748, 31
  %3767 = trunc i32 %3766 to i8
  store i8 %3767, i8* %3765, align 1
  %3768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3769 = zext i1 %3751 to i8
  store i8 %3769, i8* %3768, align 1
  store %struct.Memory* %loadMem_406535, %struct.Memory** %MEMORY
  %loadMem_406538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3771 = getelementptr inbounds %struct.GPR, %struct.GPR* %3770, i32 0, i32 33
  %3772 = getelementptr inbounds %struct.Reg, %struct.Reg* %3771, i32 0, i32 0
  %PC.i2361 = bitcast %union.anon* %3772 to i64*
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3774 = getelementptr inbounds %struct.GPR, %struct.GPR* %3773, i32 0, i32 1
  %3775 = getelementptr inbounds %struct.Reg, %struct.Reg* %3774, i32 0, i32 0
  %RAX.i2362 = bitcast %union.anon* %3775 to i64*
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3777 = getelementptr inbounds %struct.GPR, %struct.GPR* %3776, i32 0, i32 15
  %3778 = getelementptr inbounds %struct.Reg, %struct.Reg* %3777, i32 0, i32 0
  %RBP.i2363 = bitcast %union.anon* %3778 to i64*
  %3779 = load i64, i64* %RAX.i2362
  %3780 = load i64, i64* %RBP.i2363
  %3781 = sub i64 %3780, 56
  %3782 = load i64, i64* %PC.i2361
  %3783 = add i64 %3782, 3
  store i64 %3783, i64* %PC.i2361
  %3784 = trunc i64 %3779 to i32
  %3785 = inttoptr i64 %3781 to i32*
  %3786 = load i32, i32* %3785
  %3787 = add i32 %3786, %3784
  %3788 = zext i32 %3787 to i64
  store i64 %3788, i64* %RAX.i2362, align 8
  %3789 = icmp ult i32 %3787, %3784
  %3790 = icmp ult i32 %3787, %3786
  %3791 = or i1 %3789, %3790
  %3792 = zext i1 %3791 to i8
  %3793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3792, i8* %3793, align 1
  %3794 = and i32 %3787, 255
  %3795 = call i32 @llvm.ctpop.i32(i32 %3794)
  %3796 = trunc i32 %3795 to i8
  %3797 = and i8 %3796, 1
  %3798 = xor i8 %3797, 1
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3798, i8* %3799, align 1
  %3800 = xor i32 %3786, %3784
  %3801 = xor i32 %3800, %3787
  %3802 = lshr i32 %3801, 4
  %3803 = trunc i32 %3802 to i8
  %3804 = and i8 %3803, 1
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3804, i8* %3805, align 1
  %3806 = icmp eq i32 %3787, 0
  %3807 = zext i1 %3806 to i8
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3807, i8* %3808, align 1
  %3809 = lshr i32 %3787, 31
  %3810 = trunc i32 %3809 to i8
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3810, i8* %3811, align 1
  %3812 = lshr i32 %3784, 31
  %3813 = lshr i32 %3786, 31
  %3814 = xor i32 %3809, %3812
  %3815 = xor i32 %3809, %3813
  %3816 = add i32 %3814, %3815
  %3817 = icmp eq i32 %3816, 2
  %3818 = zext i1 %3817 to i8
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3818, i8* %3819, align 1
  store %struct.Memory* %loadMem_406538, %struct.Memory** %MEMORY
  %loadMem_40653b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3821 = getelementptr inbounds %struct.GPR, %struct.GPR* %3820, i32 0, i32 33
  %3822 = getelementptr inbounds %struct.Reg, %struct.Reg* %3821, i32 0, i32 0
  %PC.i2359 = bitcast %union.anon* %3822 to i64*
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3824 = getelementptr inbounds %struct.GPR, %struct.GPR* %3823, i32 0, i32 5
  %3825 = getelementptr inbounds %struct.Reg, %struct.Reg* %3824, i32 0, i32 0
  %RCX.i2360 = bitcast %union.anon* %3825 to i64*
  %3826 = load i64, i64* %PC.i2359
  %3827 = add i64 %3826, 8
  store i64 %3827, i64* %PC.i2359
  %3828 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3828, i64* %RCX.i2360, align 8
  store %struct.Memory* %loadMem_40653b, %struct.Memory** %MEMORY
  %loadMem_406543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3830 = getelementptr inbounds %struct.GPR, %struct.GPR* %3829, i32 0, i32 33
  %3831 = getelementptr inbounds %struct.Reg, %struct.Reg* %3830, i32 0, i32 0
  %PC.i2356 = bitcast %union.anon* %3831 to i64*
  %3832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3833 = getelementptr inbounds %struct.GPR, %struct.GPR* %3832, i32 0, i32 7
  %3834 = getelementptr inbounds %struct.Reg, %struct.Reg* %3833, i32 0, i32 0
  %RDX.i2357 = bitcast %union.anon* %3834 to i64*
  %3835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3836 = getelementptr inbounds %struct.GPR, %struct.GPR* %3835, i32 0, i32 15
  %3837 = getelementptr inbounds %struct.Reg, %struct.Reg* %3836, i32 0, i32 0
  %RBP.i2358 = bitcast %union.anon* %3837 to i64*
  %3838 = load i64, i64* %RBP.i2358
  %3839 = sub i64 %3838, 28
  %3840 = load i64, i64* %PC.i2356
  %3841 = add i64 %3840, 4
  store i64 %3841, i64* %PC.i2356
  %3842 = inttoptr i64 %3839 to i32*
  %3843 = load i32, i32* %3842
  %3844 = sext i32 %3843 to i64
  store i64 %3844, i64* %RDX.i2357, align 8
  store %struct.Memory* %loadMem_406543, %struct.Memory** %MEMORY
  %loadMem_406547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3846 = getelementptr inbounds %struct.GPR, %struct.GPR* %3845, i32 0, i32 33
  %3847 = getelementptr inbounds %struct.Reg, %struct.Reg* %3846, i32 0, i32 0
  %PC.i2352 = bitcast %union.anon* %3847 to i64*
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3849 = getelementptr inbounds %struct.GPR, %struct.GPR* %3848, i32 0, i32 1
  %3850 = getelementptr inbounds %struct.Reg, %struct.Reg* %3849, i32 0, i32 0
  %EAX.i2353 = bitcast %union.anon* %3850 to i32*
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3852 = getelementptr inbounds %struct.GPR, %struct.GPR* %3851, i32 0, i32 5
  %3853 = getelementptr inbounds %struct.Reg, %struct.Reg* %3852, i32 0, i32 0
  %RCX.i2354 = bitcast %union.anon* %3853 to i64*
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3855 = getelementptr inbounds %struct.GPR, %struct.GPR* %3854, i32 0, i32 7
  %3856 = getelementptr inbounds %struct.Reg, %struct.Reg* %3855, i32 0, i32 0
  %RDX.i2355 = bitcast %union.anon* %3856 to i64*
  %3857 = load i64, i64* %RCX.i2354
  %3858 = load i64, i64* %RDX.i2355
  %3859 = mul i64 %3858, 4
  %3860 = add i64 %3857, 13176
  %3861 = add i64 %3860, %3859
  %3862 = load i32, i32* %EAX.i2353
  %3863 = zext i32 %3862 to i64
  %3864 = load i64, i64* %PC.i2352
  %3865 = add i64 %3864, 7
  store i64 %3865, i64* %PC.i2352
  %3866 = inttoptr i64 %3861 to i32*
  store i32 %3862, i32* %3866
  store %struct.Memory* %loadMem_406547, %struct.Memory** %MEMORY
  %loadMem_40654e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3868 = getelementptr inbounds %struct.GPR, %struct.GPR* %3867, i32 0, i32 33
  %3869 = getelementptr inbounds %struct.Reg, %struct.Reg* %3868, i32 0, i32 0
  %PC.i2349 = bitcast %union.anon* %3869 to i64*
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3871 = getelementptr inbounds %struct.GPR, %struct.GPR* %3870, i32 0, i32 1
  %3872 = getelementptr inbounds %struct.Reg, %struct.Reg* %3871, i32 0, i32 0
  %RAX.i2350 = bitcast %union.anon* %3872 to i64*
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3874 = getelementptr inbounds %struct.GPR, %struct.GPR* %3873, i32 0, i32 15
  %3875 = getelementptr inbounds %struct.Reg, %struct.Reg* %3874, i32 0, i32 0
  %RBP.i2351 = bitcast %union.anon* %3875 to i64*
  %3876 = load i64, i64* %RBP.i2351
  %3877 = sub i64 %3876, 52
  %3878 = load i64, i64* %PC.i2349
  %3879 = add i64 %3878, 3
  store i64 %3879, i64* %PC.i2349
  %3880 = inttoptr i64 %3877 to i32*
  %3881 = load i32, i32* %3880
  %3882 = zext i32 %3881 to i64
  store i64 %3882, i64* %RAX.i2350, align 8
  store %struct.Memory* %loadMem_40654e, %struct.Memory** %MEMORY
  %loadMem_406551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3884 = getelementptr inbounds %struct.GPR, %struct.GPR* %3883, i32 0, i32 33
  %3885 = getelementptr inbounds %struct.Reg, %struct.Reg* %3884, i32 0, i32 0
  %PC.i2346 = bitcast %union.anon* %3885 to i64*
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3887 = getelementptr inbounds %struct.GPR, %struct.GPR* %3886, i32 0, i32 9
  %3888 = getelementptr inbounds %struct.Reg, %struct.Reg* %3887, i32 0, i32 0
  %RSI.i2347 = bitcast %union.anon* %3888 to i64*
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3890 = getelementptr inbounds %struct.GPR, %struct.GPR* %3889, i32 0, i32 15
  %3891 = getelementptr inbounds %struct.Reg, %struct.Reg* %3890, i32 0, i32 0
  %RBP.i2348 = bitcast %union.anon* %3891 to i64*
  %3892 = load i64, i64* %RBP.i2348
  %3893 = sub i64 %3892, 56
  %3894 = load i64, i64* %PC.i2346
  %3895 = add i64 %3894, 3
  store i64 %3895, i64* %PC.i2346
  %3896 = inttoptr i64 %3893 to i32*
  %3897 = load i32, i32* %3896
  %3898 = zext i32 %3897 to i64
  store i64 %3898, i64* %RSI.i2347, align 8
  store %struct.Memory* %loadMem_406551, %struct.Memory** %MEMORY
  %loadMem_406554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3900 = getelementptr inbounds %struct.GPR, %struct.GPR* %3899, i32 0, i32 33
  %3901 = getelementptr inbounds %struct.Reg, %struct.Reg* %3900, i32 0, i32 0
  %PC.i2344 = bitcast %union.anon* %3901 to i64*
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3903 = getelementptr inbounds %struct.GPR, %struct.GPR* %3902, i32 0, i32 9
  %3904 = getelementptr inbounds %struct.Reg, %struct.Reg* %3903, i32 0, i32 0
  %RSI.i2345 = bitcast %union.anon* %3904 to i64*
  %3905 = load i64, i64* %RSI.i2345
  %3906 = load i64, i64* %PC.i2344
  %3907 = add i64 %3906, 2
  store i64 %3907, i64* %PC.i2344
  %3908 = trunc i64 %3905 to i32
  %3909 = shl i32 %3908, 1
  %3910 = icmp slt i32 %3908, 0
  %3911 = icmp slt i32 %3909, 0
  %3912 = xor i1 %3910, %3911
  %3913 = zext i32 %3909 to i64
  store i64 %3913, i64* %RSI.i2345, align 8
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3915 = zext i1 %3910 to i8
  store i8 %3915, i8* %3914, align 1
  %3916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3917 = and i32 %3909, 254
  %3918 = call i32 @llvm.ctpop.i32(i32 %3917)
  %3919 = trunc i32 %3918 to i8
  %3920 = and i8 %3919, 1
  %3921 = xor i8 %3920, 1
  store i8 %3921, i8* %3916, align 1
  %3922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3922, align 1
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3924 = icmp eq i32 %3909, 0
  %3925 = zext i1 %3924 to i8
  store i8 %3925, i8* %3923, align 1
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3927 = lshr i32 %3909, 31
  %3928 = trunc i32 %3927 to i8
  store i8 %3928, i8* %3926, align 1
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3930 = zext i1 %3912 to i8
  store i8 %3930, i8* %3929, align 1
  store %struct.Memory* %loadMem_406554, %struct.Memory** %MEMORY
  %loadMem_406557 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3932 = getelementptr inbounds %struct.GPR, %struct.GPR* %3931, i32 0, i32 33
  %3933 = getelementptr inbounds %struct.Reg, %struct.Reg* %3932, i32 0, i32 0
  %PC.i2341 = bitcast %union.anon* %3933 to i64*
  %3934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3935 = getelementptr inbounds %struct.GPR, %struct.GPR* %3934, i32 0, i32 9
  %3936 = getelementptr inbounds %struct.Reg, %struct.Reg* %3935, i32 0, i32 0
  %ESI.i2342 = bitcast %union.anon* %3936 to i32*
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3938 = getelementptr inbounds %struct.GPR, %struct.GPR* %3937, i32 0, i32 1
  %3939 = getelementptr inbounds %struct.Reg, %struct.Reg* %3938, i32 0, i32 0
  %RAX.i2343 = bitcast %union.anon* %3939 to i64*
  %3940 = load i64, i64* %RAX.i2343
  %3941 = load i32, i32* %ESI.i2342
  %3942 = zext i32 %3941 to i64
  %3943 = load i64, i64* %PC.i2341
  %3944 = add i64 %3943, 2
  store i64 %3944, i64* %PC.i2341
  %3945 = trunc i64 %3940 to i32
  %3946 = sub i32 %3945, %3941
  %3947 = zext i32 %3946 to i64
  store i64 %3947, i64* %RAX.i2343, align 8
  %3948 = icmp ult i32 %3945, %3941
  %3949 = zext i1 %3948 to i8
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3949, i8* %3950, align 1
  %3951 = and i32 %3946, 255
  %3952 = call i32 @llvm.ctpop.i32(i32 %3951)
  %3953 = trunc i32 %3952 to i8
  %3954 = and i8 %3953, 1
  %3955 = xor i8 %3954, 1
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3955, i8* %3956, align 1
  %3957 = xor i64 %3942, %3940
  %3958 = trunc i64 %3957 to i32
  %3959 = xor i32 %3958, %3946
  %3960 = lshr i32 %3959, 4
  %3961 = trunc i32 %3960 to i8
  %3962 = and i8 %3961, 1
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3962, i8* %3963, align 1
  %3964 = icmp eq i32 %3946, 0
  %3965 = zext i1 %3964 to i8
  %3966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3965, i8* %3966, align 1
  %3967 = lshr i32 %3946, 31
  %3968 = trunc i32 %3967 to i8
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3968, i8* %3969, align 1
  %3970 = lshr i32 %3945, 31
  %3971 = lshr i32 %3941, 31
  %3972 = xor i32 %3971, %3970
  %3973 = xor i32 %3967, %3970
  %3974 = add i32 %3973, %3972
  %3975 = icmp eq i32 %3974, 2
  %3976 = zext i1 %3975 to i8
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3976, i8* %3977, align 1
  store %struct.Memory* %loadMem_406557, %struct.Memory** %MEMORY
  %loadMem_406559 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3979 = getelementptr inbounds %struct.GPR, %struct.GPR* %3978, i32 0, i32 33
  %3980 = getelementptr inbounds %struct.Reg, %struct.Reg* %3979, i32 0, i32 0
  %PC.i2339 = bitcast %union.anon* %3980 to i64*
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3982 = getelementptr inbounds %struct.GPR, %struct.GPR* %3981, i32 0, i32 5
  %3983 = getelementptr inbounds %struct.Reg, %struct.Reg* %3982, i32 0, i32 0
  %RCX.i2340 = bitcast %union.anon* %3983 to i64*
  %3984 = load i64, i64* %PC.i2339
  %3985 = add i64 %3984, 8
  store i64 %3985, i64* %PC.i2339
  %3986 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3986, i64* %RCX.i2340, align 8
  store %struct.Memory* %loadMem_406559, %struct.Memory** %MEMORY
  %loadMem_406561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3988 = getelementptr inbounds %struct.GPR, %struct.GPR* %3987, i32 0, i32 33
  %3989 = getelementptr inbounds %struct.Reg, %struct.Reg* %3988, i32 0, i32 0
  %PC.i2336 = bitcast %union.anon* %3989 to i64*
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3991 = getelementptr inbounds %struct.GPR, %struct.GPR* %3990, i32 0, i32 7
  %3992 = getelementptr inbounds %struct.Reg, %struct.Reg* %3991, i32 0, i32 0
  %RDX.i2337 = bitcast %union.anon* %3992 to i64*
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3994 = getelementptr inbounds %struct.GPR, %struct.GPR* %3993, i32 0, i32 15
  %3995 = getelementptr inbounds %struct.Reg, %struct.Reg* %3994, i32 0, i32 0
  %RBP.i2338 = bitcast %union.anon* %3995 to i64*
  %3996 = load i64, i64* %RBP.i2338
  %3997 = sub i64 %3996, 28
  %3998 = load i64, i64* %PC.i2336
  %3999 = add i64 %3998, 4
  store i64 %3999, i64* %PC.i2336
  %4000 = inttoptr i64 %3997 to i32*
  %4001 = load i32, i32* %4000
  %4002 = sext i32 %4001 to i64
  store i64 %4002, i64* %RDX.i2337, align 8
  store %struct.Memory* %loadMem_406561, %struct.Memory** %MEMORY
  %loadMem_406565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4004 = getelementptr inbounds %struct.GPR, %struct.GPR* %4003, i32 0, i32 33
  %4005 = getelementptr inbounds %struct.Reg, %struct.Reg* %4004, i32 0, i32 0
  %PC.i2332 = bitcast %union.anon* %4005 to i64*
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4007 = getelementptr inbounds %struct.GPR, %struct.GPR* %4006, i32 0, i32 1
  %4008 = getelementptr inbounds %struct.Reg, %struct.Reg* %4007, i32 0, i32 0
  %EAX.i2333 = bitcast %union.anon* %4008 to i32*
  %4009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4010 = getelementptr inbounds %struct.GPR, %struct.GPR* %4009, i32 0, i32 5
  %4011 = getelementptr inbounds %struct.Reg, %struct.Reg* %4010, i32 0, i32 0
  %RCX.i2334 = bitcast %union.anon* %4011 to i64*
  %4012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4013 = getelementptr inbounds %struct.GPR, %struct.GPR* %4012, i32 0, i32 7
  %4014 = getelementptr inbounds %struct.Reg, %struct.Reg* %4013, i32 0, i32 0
  %RDX.i2335 = bitcast %union.anon* %4014 to i64*
  %4015 = load i64, i64* %RCX.i2334
  %4016 = load i64, i64* %RDX.i2335
  %4017 = mul i64 %4016, 4
  %4018 = add i64 %4015, 13304
  %4019 = add i64 %4018, %4017
  %4020 = load i32, i32* %EAX.i2333
  %4021 = zext i32 %4020 to i64
  %4022 = load i64, i64* %PC.i2332
  %4023 = add i64 %4022, 7
  store i64 %4023, i64* %PC.i2332
  %4024 = inttoptr i64 %4019 to i32*
  store i32 %4020, i32* %4024
  store %struct.Memory* %loadMem_406565, %struct.Memory** %MEMORY
  %loadMem_40656c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4026 = getelementptr inbounds %struct.GPR, %struct.GPR* %4025, i32 0, i32 33
  %4027 = getelementptr inbounds %struct.Reg, %struct.Reg* %4026, i32 0, i32 0
  %PC.i2329 = bitcast %union.anon* %4027 to i64*
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4029 = getelementptr inbounds %struct.GPR, %struct.GPR* %4028, i32 0, i32 1
  %4030 = getelementptr inbounds %struct.Reg, %struct.Reg* %4029, i32 0, i32 0
  %RAX.i2330 = bitcast %union.anon* %4030 to i64*
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4032 = getelementptr inbounds %struct.GPR, %struct.GPR* %4031, i32 0, i32 15
  %4033 = getelementptr inbounds %struct.Reg, %struct.Reg* %4032, i32 0, i32 0
  %RBP.i2331 = bitcast %union.anon* %4033 to i64*
  %4034 = load i64, i64* %RBP.i2331
  %4035 = sub i64 %4034, 28
  %4036 = load i64, i64* %PC.i2329
  %4037 = add i64 %4036, 3
  store i64 %4037, i64* %PC.i2329
  %4038 = inttoptr i64 %4035 to i32*
  %4039 = load i32, i32* %4038
  %4040 = zext i32 %4039 to i64
  store i64 %4040, i64* %RAX.i2330, align 8
  store %struct.Memory* %loadMem_40656c, %struct.Memory** %MEMORY
  %loadMem_40656f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4042 = getelementptr inbounds %struct.GPR, %struct.GPR* %4041, i32 0, i32 33
  %4043 = getelementptr inbounds %struct.Reg, %struct.Reg* %4042, i32 0, i32 0
  %PC.i2327 = bitcast %union.anon* %4043 to i64*
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4045 = getelementptr inbounds %struct.GPR, %struct.GPR* %4044, i32 0, i32 1
  %4046 = getelementptr inbounds %struct.Reg, %struct.Reg* %4045, i32 0, i32 0
  %RAX.i2328 = bitcast %union.anon* %4046 to i64*
  %4047 = load i64, i64* %RAX.i2328
  %4048 = load i64, i64* %PC.i2327
  %4049 = add i64 %4048, 3
  store i64 %4049, i64* %PC.i2327
  %4050 = trunc i64 %4047 to i32
  %4051 = add i32 1, %4050
  %4052 = zext i32 %4051 to i64
  store i64 %4052, i64* %RAX.i2328, align 8
  %4053 = icmp ult i32 %4051, %4050
  %4054 = icmp ult i32 %4051, 1
  %4055 = or i1 %4053, %4054
  %4056 = zext i1 %4055 to i8
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4056, i8* %4057, align 1
  %4058 = and i32 %4051, 255
  %4059 = call i32 @llvm.ctpop.i32(i32 %4058)
  %4060 = trunc i32 %4059 to i8
  %4061 = and i8 %4060, 1
  %4062 = xor i8 %4061, 1
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4062, i8* %4063, align 1
  %4064 = xor i64 1, %4047
  %4065 = trunc i64 %4064 to i32
  %4066 = xor i32 %4065, %4051
  %4067 = lshr i32 %4066, 4
  %4068 = trunc i32 %4067 to i8
  %4069 = and i8 %4068, 1
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4069, i8* %4070, align 1
  %4071 = icmp eq i32 %4051, 0
  %4072 = zext i1 %4071 to i8
  %4073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4072, i8* %4073, align 1
  %4074 = lshr i32 %4051, 31
  %4075 = trunc i32 %4074 to i8
  %4076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4075, i8* %4076, align 1
  %4077 = lshr i32 %4050, 31
  %4078 = xor i32 %4074, %4077
  %4079 = add i32 %4078, %4074
  %4080 = icmp eq i32 %4079, 2
  %4081 = zext i1 %4080 to i8
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4081, i8* %4082, align 1
  store %struct.Memory* %loadMem_40656f, %struct.Memory** %MEMORY
  %loadMem_406572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4084 = getelementptr inbounds %struct.GPR, %struct.GPR* %4083, i32 0, i32 33
  %4085 = getelementptr inbounds %struct.Reg, %struct.Reg* %4084, i32 0, i32 0
  %PC.i2324 = bitcast %union.anon* %4085 to i64*
  %4086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4087 = getelementptr inbounds %struct.GPR, %struct.GPR* %4086, i32 0, i32 1
  %4088 = getelementptr inbounds %struct.Reg, %struct.Reg* %4087, i32 0, i32 0
  %EAX.i2325 = bitcast %union.anon* %4088 to i32*
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4090 = getelementptr inbounds %struct.GPR, %struct.GPR* %4089, i32 0, i32 15
  %4091 = getelementptr inbounds %struct.Reg, %struct.Reg* %4090, i32 0, i32 0
  %RBP.i2326 = bitcast %union.anon* %4091 to i64*
  %4092 = load i64, i64* %RBP.i2326
  %4093 = sub i64 %4092, 28
  %4094 = load i32, i32* %EAX.i2325
  %4095 = zext i32 %4094 to i64
  %4096 = load i64, i64* %PC.i2324
  %4097 = add i64 %4096, 3
  store i64 %4097, i64* %PC.i2324
  %4098 = inttoptr i64 %4093 to i32*
  store i32 %4094, i32* %4098
  store %struct.Memory* %loadMem_406572, %struct.Memory** %MEMORY
  %loadMem_406575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4100 = getelementptr inbounds %struct.GPR, %struct.GPR* %4099, i32 0, i32 33
  %4101 = getelementptr inbounds %struct.Reg, %struct.Reg* %4100, i32 0, i32 0
  %PC.i2323 = bitcast %union.anon* %4101 to i64*
  %4102 = load i64, i64* %PC.i2323
  %4103 = add i64 %4102, -364
  %4104 = load i64, i64* %PC.i2323
  %4105 = add i64 %4104, 5
  store i64 %4105, i64* %PC.i2323
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4103, i64* %4106, align 8
  store %struct.Memory* %loadMem_406575, %struct.Memory** %MEMORY
  br label %block_.L_406409

block_.L_40657a:                                  ; preds = %block_40643d
  %loadMem_40657a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4108 = getelementptr inbounds %struct.GPR, %struct.GPR* %4107, i32 0, i32 33
  %4109 = getelementptr inbounds %struct.Reg, %struct.Reg* %4108, i32 0, i32 0
  %PC.i2321 = bitcast %union.anon* %4109 to i64*
  %4110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4111 = getelementptr inbounds %struct.GPR, %struct.GPR* %4110, i32 0, i32 15
  %4112 = getelementptr inbounds %struct.Reg, %struct.Reg* %4111, i32 0, i32 0
  %RBP.i2322 = bitcast %union.anon* %4112 to i64*
  %4113 = load i64, i64* %RBP.i2322
  %4114 = sub i64 %4113, 24
  %4115 = load i64, i64* %PC.i2321
  %4116 = add i64 %4115, 7
  store i64 %4116, i64* %PC.i2321
  %4117 = inttoptr i64 %4114 to i32*
  store i32 0, i32* %4117
  store %struct.Memory* %loadMem_40657a, %struct.Memory** %MEMORY
  br label %block_.L_406581

block_.L_406581:                                  ; preds = %block_.L_406678, %block_.L_40657a
  %loadMem_406581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 33
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %PC.i2318 = bitcast %union.anon* %4120 to i64*
  %4121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4122 = getelementptr inbounds %struct.GPR, %struct.GPR* %4121, i32 0, i32 1
  %4123 = getelementptr inbounds %struct.Reg, %struct.Reg* %4122, i32 0, i32 0
  %EAX.i2319 = bitcast %union.anon* %4123 to i32*
  %4124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4125 = getelementptr inbounds %struct.GPR, %struct.GPR* %4124, i32 0, i32 1
  %4126 = getelementptr inbounds %struct.Reg, %struct.Reg* %4125, i32 0, i32 0
  %RAX.i2320 = bitcast %union.anon* %4126 to i64*
  %4127 = load i64, i64* %RAX.i2320
  %4128 = load i32, i32* %EAX.i2319
  %4129 = zext i32 %4128 to i64
  %4130 = load i64, i64* %PC.i2318
  %4131 = add i64 %4130, 2
  store i64 %4131, i64* %PC.i2318
  %4132 = xor i64 %4129, %4127
  %4133 = trunc i64 %4132 to i32
  %4134 = and i64 %4132, 4294967295
  store i64 %4134, i64* %RAX.i2320, align 8
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4135, align 1
  %4136 = and i32 %4133, 255
  %4137 = call i32 @llvm.ctpop.i32(i32 %4136)
  %4138 = trunc i32 %4137 to i8
  %4139 = and i8 %4138, 1
  %4140 = xor i8 %4139, 1
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4140, i8* %4141, align 1
  %4142 = icmp eq i32 %4133, 0
  %4143 = zext i1 %4142 to i8
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4143, i8* %4144, align 1
  %4145 = lshr i32 %4133, 31
  %4146 = trunc i32 %4145 to i8
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4146, i8* %4147, align 1
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4148, align 1
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4149, align 1
  store %struct.Memory* %loadMem_406581, %struct.Memory** %MEMORY
  %loadMem_406583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4151 = getelementptr inbounds %struct.GPR, %struct.GPR* %4150, i32 0, i32 33
  %4152 = getelementptr inbounds %struct.Reg, %struct.Reg* %4151, i32 0, i32 0
  %PC.i2315 = bitcast %union.anon* %4152 to i64*
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4154 = getelementptr inbounds %struct.GPR, %struct.GPR* %4153, i32 0, i32 1
  %4155 = getelementptr inbounds %struct.Reg, %struct.Reg* %4154, i32 0, i32 0
  %4156 = bitcast %union.anon* %4155 to %struct.anon.2*
  %AL.i2316 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4156, i32 0, i32 0
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4158 = getelementptr inbounds %struct.GPR, %struct.GPR* %4157, i32 0, i32 5
  %4159 = getelementptr inbounds %struct.Reg, %struct.Reg* %4158, i32 0, i32 0
  %4160 = bitcast %union.anon* %4159 to %struct.anon.2*
  %CL.i2317 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4160, i32 0, i32 0
  %4161 = load i8, i8* %AL.i2316
  %4162 = zext i8 %4161 to i64
  %4163 = load i64, i64* %PC.i2315
  %4164 = add i64 %4163, 2
  store i64 %4164, i64* %PC.i2315
  store i8 %4161, i8* %CL.i2317, align 1
  store %struct.Memory* %loadMem_406583, %struct.Memory** %MEMORY
  %loadMem_406585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4166 = getelementptr inbounds %struct.GPR, %struct.GPR* %4165, i32 0, i32 33
  %4167 = getelementptr inbounds %struct.Reg, %struct.Reg* %4166, i32 0, i32 0
  %PC.i2313 = bitcast %union.anon* %4167 to i64*
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4169 = getelementptr inbounds %struct.GPR, %struct.GPR* %4168, i32 0, i32 15
  %4170 = getelementptr inbounds %struct.Reg, %struct.Reg* %4169, i32 0, i32 0
  %RBP.i2314 = bitcast %union.anon* %4170 to i64*
  %4171 = load i64, i64* %RBP.i2314
  %4172 = sub i64 %4171, 24
  %4173 = load i64, i64* %PC.i2313
  %4174 = add i64 %4173, 4
  store i64 %4174, i64* %PC.i2313
  %4175 = inttoptr i64 %4172 to i32*
  %4176 = load i32, i32* %4175
  %4177 = sub i32 %4176, 4
  %4178 = icmp ult i32 %4176, 4
  %4179 = zext i1 %4178 to i8
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4179, i8* %4180, align 1
  %4181 = and i32 %4177, 255
  %4182 = call i32 @llvm.ctpop.i32(i32 %4181)
  %4183 = trunc i32 %4182 to i8
  %4184 = and i8 %4183, 1
  %4185 = xor i8 %4184, 1
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4185, i8* %4186, align 1
  %4187 = xor i32 %4176, 4
  %4188 = xor i32 %4187, %4177
  %4189 = lshr i32 %4188, 4
  %4190 = trunc i32 %4189 to i8
  %4191 = and i8 %4190, 1
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4191, i8* %4192, align 1
  %4193 = icmp eq i32 %4177, 0
  %4194 = zext i1 %4193 to i8
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4194, i8* %4195, align 1
  %4196 = lshr i32 %4177, 31
  %4197 = trunc i32 %4196 to i8
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4197, i8* %4198, align 1
  %4199 = lshr i32 %4176, 31
  %4200 = xor i32 %4196, %4199
  %4201 = add i32 %4200, %4199
  %4202 = icmp eq i32 %4201, 2
  %4203 = zext i1 %4202 to i8
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4203, i8* %4204, align 1
  store %struct.Memory* %loadMem_406585, %struct.Memory** %MEMORY
  %loadMem_406589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4206 = getelementptr inbounds %struct.GPR, %struct.GPR* %4205, i32 0, i32 33
  %4207 = getelementptr inbounds %struct.Reg, %struct.Reg* %4206, i32 0, i32 0
  %PC.i2310 = bitcast %union.anon* %4207 to i64*
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4209 = getelementptr inbounds %struct.GPR, %struct.GPR* %4208, i32 0, i32 5
  %4210 = getelementptr inbounds %struct.Reg, %struct.Reg* %4209, i32 0, i32 0
  %4211 = bitcast %union.anon* %4210 to %struct.anon.2*
  %CL.i2311 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4211, i32 0, i32 0
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 15
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %RBP.i2312 = bitcast %union.anon* %4214 to i64*
  %4215 = load i64, i64* %RBP.i2312
  %4216 = sub i64 %4215, 171
  %4217 = load i8, i8* %CL.i2311
  %4218 = zext i8 %4217 to i64
  %4219 = load i64, i64* %PC.i2310
  %4220 = add i64 %4219, 6
  store i64 %4220, i64* %PC.i2310
  %4221 = inttoptr i64 %4216 to i8*
  store i8 %4217, i8* %4221
  store %struct.Memory* %loadMem_406589, %struct.Memory** %MEMORY
  %loadMem_40658f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4223 = getelementptr inbounds %struct.GPR, %struct.GPR* %4222, i32 0, i32 33
  %4224 = getelementptr inbounds %struct.Reg, %struct.Reg* %4223, i32 0, i32 0
  %PC.i2309 = bitcast %union.anon* %4224 to i64*
  %4225 = load i64, i64* %PC.i2309
  %4226 = add i64 %4225, 24
  %4227 = load i64, i64* %PC.i2309
  %4228 = add i64 %4227, 6
  %4229 = load i64, i64* %PC.i2309
  %4230 = add i64 %4229, 6
  store i64 %4230, i64* %PC.i2309
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4232 = load i8, i8* %4231, align 1
  %4233 = icmp ne i8 %4232, 0
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4235 = load i8, i8* %4234, align 1
  %4236 = icmp ne i8 %4235, 0
  %4237 = xor i1 %4233, %4236
  %4238 = xor i1 %4237, true
  %4239 = zext i1 %4238 to i8
  store i8 %4239, i8* %BRANCH_TAKEN, align 1
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4241 = select i1 %4237, i64 %4228, i64 %4226
  store i64 %4241, i64* %4240, align 8
  store %struct.Memory* %loadMem_40658f, %struct.Memory** %MEMORY
  %loadBr_40658f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40658f = icmp eq i8 %loadBr_40658f, 1
  br i1 %cmpBr_40658f, label %block_.L_4065a7, label %block_406595

block_406595:                                     ; preds = %block_.L_406581
  %loadMem_406595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4243 = getelementptr inbounds %struct.GPR, %struct.GPR* %4242, i32 0, i32 33
  %4244 = getelementptr inbounds %struct.Reg, %struct.Reg* %4243, i32 0, i32 0
  %PC.i2307 = bitcast %union.anon* %4244 to i64*
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4246 = getelementptr inbounds %struct.GPR, %struct.GPR* %4245, i32 0, i32 15
  %4247 = getelementptr inbounds %struct.Reg, %struct.Reg* %4246, i32 0, i32 0
  %RBP.i2308 = bitcast %union.anon* %4247 to i64*
  %4248 = load i64, i64* %RBP.i2308
  %4249 = sub i64 %4248, 156
  %4250 = load i64, i64* %PC.i2307
  %4251 = add i64 %4250, 7
  store i64 %4251, i64* %PC.i2307
  %4252 = inttoptr i64 %4249 to i32*
  %4253 = load i32, i32* %4252
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4254, align 1
  %4255 = and i32 %4253, 255
  %4256 = call i32 @llvm.ctpop.i32(i32 %4255)
  %4257 = trunc i32 %4256 to i8
  %4258 = and i8 %4257, 1
  %4259 = xor i8 %4258, 1
  %4260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4259, i8* %4260, align 1
  %4261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4261, align 1
  %4262 = icmp eq i32 %4253, 0
  %4263 = zext i1 %4262 to i8
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4263, i8* %4264, align 1
  %4265 = lshr i32 %4253, 31
  %4266 = trunc i32 %4265 to i8
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4266, i8* %4267, align 1
  %4268 = lshr i32 %4253, 31
  %4269 = xor i32 %4265, %4268
  %4270 = add i32 %4269, %4268
  %4271 = icmp eq i32 %4270, 2
  %4272 = zext i1 %4271 to i8
  %4273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4272, i8* %4273, align 1
  store %struct.Memory* %loadMem_406595, %struct.Memory** %MEMORY
  %loadMem_40659c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4275 = getelementptr inbounds %struct.GPR, %struct.GPR* %4274, i32 0, i32 33
  %4276 = getelementptr inbounds %struct.Reg, %struct.Reg* %4275, i32 0, i32 0
  %PC.i2305 = bitcast %union.anon* %4276 to i64*
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4278 = getelementptr inbounds %struct.GPR, %struct.GPR* %4277, i32 0, i32 1
  %4279 = getelementptr inbounds %struct.Reg, %struct.Reg* %4278, i32 0, i32 0
  %4280 = bitcast %union.anon* %4279 to %struct.anon.2*
  %AL.i2306 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4280, i32 0, i32 0
  %4281 = load i64, i64* %PC.i2305
  %4282 = add i64 %4281, 3
  store i64 %4282, i64* %PC.i2305
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4284 = load i8, i8* %4283, align 1
  %4285 = icmp eq i8 %4284, 0
  %4286 = zext i1 %4285 to i8
  store i8 %4286, i8* %AL.i2306, align 1
  store %struct.Memory* %loadMem_40659c, %struct.Memory** %MEMORY
  %loadMem_40659f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4288 = getelementptr inbounds %struct.GPR, %struct.GPR* %4287, i32 0, i32 33
  %4289 = getelementptr inbounds %struct.Reg, %struct.Reg* %4288, i32 0, i32 0
  %PC.i2303 = bitcast %union.anon* %4289 to i64*
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4291 = getelementptr inbounds %struct.GPR, %struct.GPR* %4290, i32 0, i32 1
  %4292 = getelementptr inbounds %struct.Reg, %struct.Reg* %4291, i32 0, i32 0
  %4293 = bitcast %union.anon* %4292 to %struct.anon.2*
  %AL.i2304 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4293, i32 0, i32 0
  %4294 = load i8, i8* %AL.i2304
  %4295 = zext i8 %4294 to i64
  %4296 = load i64, i64* %PC.i2303
  %4297 = add i64 %4296, 2
  store i64 %4297, i64* %PC.i2303
  %4298 = xor i64 255, %4295
  %4299 = trunc i64 %4298 to i8
  store i8 %4299, i8* %AL.i2304, align 1
  %4300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4300, align 1
  %4301 = trunc i64 %4298 to i32
  %4302 = and i32 %4301, 255
  %4303 = call i32 @llvm.ctpop.i32(i32 %4302)
  %4304 = trunc i32 %4303 to i8
  %4305 = and i8 %4304, 1
  %4306 = xor i8 %4305, 1
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4306, i8* %4307, align 1
  %4308 = icmp eq i8 %4299, 0
  %4309 = zext i1 %4308 to i8
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4309, i8* %4310, align 1
  %4311 = lshr i8 %4299, 7
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4311, i8* %4312, align 1
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4313, align 1
  %4314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4314, align 1
  store %struct.Memory* %loadMem_40659f, %struct.Memory** %MEMORY
  %loadMem_4065a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4316 = getelementptr inbounds %struct.GPR, %struct.GPR* %4315, i32 0, i32 33
  %4317 = getelementptr inbounds %struct.Reg, %struct.Reg* %4316, i32 0, i32 0
  %PC.i2300 = bitcast %union.anon* %4317 to i64*
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4319 = getelementptr inbounds %struct.GPR, %struct.GPR* %4318, i32 0, i32 1
  %4320 = getelementptr inbounds %struct.Reg, %struct.Reg* %4319, i32 0, i32 0
  %4321 = bitcast %union.anon* %4320 to %struct.anon.2*
  %AL.i2301 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4321, i32 0, i32 0
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 15
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %RBP.i2302 = bitcast %union.anon* %4324 to i64*
  %4325 = load i64, i64* %RBP.i2302
  %4326 = sub i64 %4325, 171
  %4327 = load i8, i8* %AL.i2301
  %4328 = zext i8 %4327 to i64
  %4329 = load i64, i64* %PC.i2300
  %4330 = add i64 %4329, 6
  store i64 %4330, i64* %PC.i2300
  %4331 = inttoptr i64 %4326 to i8*
  store i8 %4327, i8* %4331
  store %struct.Memory* %loadMem_4065a1, %struct.Memory** %MEMORY
  br label %block_.L_4065a7

block_.L_4065a7:                                  ; preds = %block_406595, %block_.L_406581
  %loadMem_4065a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4333 = getelementptr inbounds %struct.GPR, %struct.GPR* %4332, i32 0, i32 33
  %4334 = getelementptr inbounds %struct.Reg, %struct.Reg* %4333, i32 0, i32 0
  %PC.i2297 = bitcast %union.anon* %4334 to i64*
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4336 = getelementptr inbounds %struct.GPR, %struct.GPR* %4335, i32 0, i32 1
  %4337 = getelementptr inbounds %struct.Reg, %struct.Reg* %4336, i32 0, i32 0
  %4338 = bitcast %union.anon* %4337 to %struct.anon.2*
  %AL.i2298 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4338, i32 0, i32 0
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4340 = getelementptr inbounds %struct.GPR, %struct.GPR* %4339, i32 0, i32 15
  %4341 = getelementptr inbounds %struct.Reg, %struct.Reg* %4340, i32 0, i32 0
  %RBP.i2299 = bitcast %union.anon* %4341 to i64*
  %4342 = load i64, i64* %RBP.i2299
  %4343 = sub i64 %4342, 171
  %4344 = load i64, i64* %PC.i2297
  %4345 = add i64 %4344, 6
  store i64 %4345, i64* %PC.i2297
  %4346 = inttoptr i64 %4343 to i8*
  %4347 = load i8, i8* %4346
  store i8 %4347, i8* %AL.i2298, align 1
  store %struct.Memory* %loadMem_4065a7, %struct.Memory** %MEMORY
  %loadMem_4065ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %4348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4349 = getelementptr inbounds %struct.GPR, %struct.GPR* %4348, i32 0, i32 33
  %4350 = getelementptr inbounds %struct.Reg, %struct.Reg* %4349, i32 0, i32 0
  %PC.i2295 = bitcast %union.anon* %4350 to i64*
  %4351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4352 = getelementptr inbounds %struct.GPR, %struct.GPR* %4351, i32 0, i32 1
  %4353 = getelementptr inbounds %struct.Reg, %struct.Reg* %4352, i32 0, i32 0
  %4354 = bitcast %union.anon* %4353 to %struct.anon.2*
  %AL.i2296 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4354, i32 0, i32 0
  %4355 = load i8, i8* %AL.i2296
  %4356 = zext i8 %4355 to i64
  %4357 = load i64, i64* %PC.i2295
  %4358 = add i64 %4357, 2
  store i64 %4358, i64* %PC.i2295
  %4359 = and i64 1, %4356
  %4360 = trunc i64 %4359 to i8
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4361, align 1
  %4362 = trunc i64 %4359 to i32
  %4363 = and i32 %4362, 255
  %4364 = call i32 @llvm.ctpop.i32(i32 %4363)
  %4365 = trunc i32 %4364 to i8
  %4366 = and i8 %4365, 1
  %4367 = xor i8 %4366, 1
  %4368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4367, i8* %4368, align 1
  %4369 = icmp eq i8 %4360, 0
  %4370 = zext i1 %4369 to i8
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4370, i8* %4371, align 1
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4372, align 1
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4373, align 1
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4374, align 1
  store %struct.Memory* %loadMem_4065ad, %struct.Memory** %MEMORY
  %loadMem_4065af = load %struct.Memory*, %struct.Memory** %MEMORY
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4376 = getelementptr inbounds %struct.GPR, %struct.GPR* %4375, i32 0, i32 33
  %4377 = getelementptr inbounds %struct.Reg, %struct.Reg* %4376, i32 0, i32 0
  %PC.i2294 = bitcast %union.anon* %4377 to i64*
  %4378 = load i64, i64* %PC.i2294
  %4379 = add i64 %4378, 11
  %4380 = load i64, i64* %PC.i2294
  %4381 = add i64 %4380, 6
  %4382 = load i64, i64* %PC.i2294
  %4383 = add i64 %4382, 6
  store i64 %4383, i64* %PC.i2294
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4385 = load i8, i8* %4384, align 1
  %4386 = icmp eq i8 %4385, 0
  %4387 = zext i1 %4386 to i8
  store i8 %4387, i8* %BRANCH_TAKEN, align 1
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4389 = select i1 %4386, i64 %4379, i64 %4381
  store i64 %4389, i64* %4388, align 8
  store %struct.Memory* %loadMem_4065af, %struct.Memory** %MEMORY
  %loadBr_4065af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4065af = icmp eq i8 %loadBr_4065af, 1
  br i1 %cmpBr_4065af, label %block_.L_4065ba, label %block_4065b5

block_4065b5:                                     ; preds = %block_.L_4065a7
  %loadMem_4065b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 33
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %PC.i2293 = bitcast %union.anon* %4392 to i64*
  %4393 = load i64, i64* %PC.i2293
  %4394 = add i64 %4393, 356
  %4395 = load i64, i64* %PC.i2293
  %4396 = add i64 %4395, 5
  store i64 %4396, i64* %PC.i2293
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4394, i64* %4397, align 8
  store %struct.Memory* %loadMem_4065b5, %struct.Memory** %MEMORY
  br label %block_.L_406719

block_.L_4065ba:                                  ; preds = %block_.L_4065a7
  %loadMem_4065ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4399 = getelementptr inbounds %struct.GPR, %struct.GPR* %4398, i32 0, i32 33
  %4400 = getelementptr inbounds %struct.Reg, %struct.Reg* %4399, i32 0, i32 0
  %PC.i2291 = bitcast %union.anon* %4400 to i64*
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4402 = getelementptr inbounds %struct.GPR, %struct.GPR* %4401, i32 0, i32 15
  %4403 = getelementptr inbounds %struct.Reg, %struct.Reg* %4402, i32 0, i32 0
  %RBP.i2292 = bitcast %union.anon* %4403 to i64*
  %4404 = load i64, i64* %RBP.i2292
  %4405 = sub i64 %4404, 28
  %4406 = load i64, i64* %PC.i2291
  %4407 = add i64 %4406, 7
  store i64 %4407, i64* %PC.i2291
  %4408 = inttoptr i64 %4405 to i32*
  store i32 0, i32* %4408
  store %struct.Memory* %loadMem_4065ba, %struct.Memory** %MEMORY
  br label %block_.L_4065c1

block_.L_4065c1:                                  ; preds = %block_4065cb, %block_.L_4065ba
  %loadMem_4065c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4410 = getelementptr inbounds %struct.GPR, %struct.GPR* %4409, i32 0, i32 33
  %4411 = getelementptr inbounds %struct.Reg, %struct.Reg* %4410, i32 0, i32 0
  %PC.i2289 = bitcast %union.anon* %4411 to i64*
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4413 = getelementptr inbounds %struct.GPR, %struct.GPR* %4412, i32 0, i32 15
  %4414 = getelementptr inbounds %struct.Reg, %struct.Reg* %4413, i32 0, i32 0
  %RBP.i2290 = bitcast %union.anon* %4414 to i64*
  %4415 = load i64, i64* %RBP.i2290
  %4416 = sub i64 %4415, 28
  %4417 = load i64, i64* %PC.i2289
  %4418 = add i64 %4417, 4
  store i64 %4418, i64* %PC.i2289
  %4419 = inttoptr i64 %4416 to i32*
  %4420 = load i32, i32* %4419
  %4421 = sub i32 %4420, 2
  %4422 = icmp ult i32 %4420, 2
  %4423 = zext i1 %4422 to i8
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4423, i8* %4424, align 1
  %4425 = and i32 %4421, 255
  %4426 = call i32 @llvm.ctpop.i32(i32 %4425)
  %4427 = trunc i32 %4426 to i8
  %4428 = and i8 %4427, 1
  %4429 = xor i8 %4428, 1
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4429, i8* %4430, align 1
  %4431 = xor i32 %4420, 2
  %4432 = xor i32 %4431, %4421
  %4433 = lshr i32 %4432, 4
  %4434 = trunc i32 %4433 to i8
  %4435 = and i8 %4434, 1
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4435, i8* %4436, align 1
  %4437 = icmp eq i32 %4421, 0
  %4438 = zext i1 %4437 to i8
  %4439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4438, i8* %4439, align 1
  %4440 = lshr i32 %4421, 31
  %4441 = trunc i32 %4440 to i8
  %4442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4441, i8* %4442, align 1
  %4443 = lshr i32 %4420, 31
  %4444 = xor i32 %4440, %4443
  %4445 = add i32 %4444, %4443
  %4446 = icmp eq i32 %4445, 2
  %4447 = zext i1 %4446 to i8
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4447, i8* %4448, align 1
  store %struct.Memory* %loadMem_4065c1, %struct.Memory** %MEMORY
  %loadMem_4065c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4450 = getelementptr inbounds %struct.GPR, %struct.GPR* %4449, i32 0, i32 33
  %4451 = getelementptr inbounds %struct.Reg, %struct.Reg* %4450, i32 0, i32 0
  %PC.i2288 = bitcast %union.anon* %4451 to i64*
  %4452 = load i64, i64* %PC.i2288
  %4453 = add i64 %4452, 179
  %4454 = load i64, i64* %PC.i2288
  %4455 = add i64 %4454, 6
  %4456 = load i64, i64* %PC.i2288
  %4457 = add i64 %4456, 6
  store i64 %4457, i64* %PC.i2288
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4459 = load i8, i8* %4458, align 1
  %4460 = icmp ne i8 %4459, 0
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4462 = load i8, i8* %4461, align 1
  %4463 = icmp ne i8 %4462, 0
  %4464 = xor i1 %4460, %4463
  %4465 = xor i1 %4464, true
  %4466 = zext i1 %4465 to i8
  store i8 %4466, i8* %BRANCH_TAKEN, align 1
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4468 = select i1 %4464, i64 %4455, i64 %4453
  store i64 %4468, i64* %4467, align 8
  store %struct.Memory* %loadMem_4065c5, %struct.Memory** %MEMORY
  %loadBr_4065c5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4065c5 = icmp eq i8 %loadBr_4065c5, 1
  br i1 %cmpBr_4065c5, label %block_.L_406678, label %block_4065cb

block_4065cb:                                     ; preds = %block_.L_4065c1
  %loadMem_4065cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4470 = getelementptr inbounds %struct.GPR, %struct.GPR* %4469, i32 0, i32 33
  %4471 = getelementptr inbounds %struct.Reg, %struct.Reg* %4470, i32 0, i32 0
  %PC.i2286 = bitcast %union.anon* %4471 to i64*
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4473 = getelementptr inbounds %struct.GPR, %struct.GPR* %4472, i32 0, i32 1
  %4474 = getelementptr inbounds %struct.Reg, %struct.Reg* %4473, i32 0, i32 0
  %RAX.i2287 = bitcast %union.anon* %4474 to i64*
  %4475 = load i64, i64* %PC.i2286
  %4476 = add i64 %4475, 5
  store i64 %4476, i64* %PC.i2286
  store i64 3, i64* %RAX.i2287, align 8
  store %struct.Memory* %loadMem_4065cb, %struct.Memory** %MEMORY
  %loadMem_4065d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4478 = getelementptr inbounds %struct.GPR, %struct.GPR* %4477, i32 0, i32 33
  %4479 = getelementptr inbounds %struct.Reg, %struct.Reg* %4478, i32 0, i32 0
  %PC.i2283 = bitcast %union.anon* %4479 to i64*
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4481 = getelementptr inbounds %struct.GPR, %struct.GPR* %4480, i32 0, i32 1
  %4482 = getelementptr inbounds %struct.Reg, %struct.Reg* %4481, i32 0, i32 0
  %RAX.i2284 = bitcast %union.anon* %4482 to i64*
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4484 = getelementptr inbounds %struct.GPR, %struct.GPR* %4483, i32 0, i32 15
  %4485 = getelementptr inbounds %struct.Reg, %struct.Reg* %4484, i32 0, i32 0
  %RBP.i2285 = bitcast %union.anon* %4485 to i64*
  %4486 = load i64, i64* %RAX.i2284
  %4487 = load i64, i64* %RBP.i2285
  %4488 = sub i64 %4487, 28
  %4489 = load i64, i64* %PC.i2283
  %4490 = add i64 %4489, 3
  store i64 %4490, i64* %PC.i2283
  %4491 = trunc i64 %4486 to i32
  %4492 = inttoptr i64 %4488 to i32*
  %4493 = load i32, i32* %4492
  %4494 = sub i32 %4491, %4493
  %4495 = zext i32 %4494 to i64
  store i64 %4495, i64* %RAX.i2284, align 8
  %4496 = icmp ult i32 %4491, %4493
  %4497 = zext i1 %4496 to i8
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4497, i8* %4498, align 1
  %4499 = and i32 %4494, 255
  %4500 = call i32 @llvm.ctpop.i32(i32 %4499)
  %4501 = trunc i32 %4500 to i8
  %4502 = and i8 %4501, 1
  %4503 = xor i8 %4502, 1
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4503, i8* %4504, align 1
  %4505 = xor i32 %4493, %4491
  %4506 = xor i32 %4505, %4494
  %4507 = lshr i32 %4506, 4
  %4508 = trunc i32 %4507 to i8
  %4509 = and i8 %4508, 1
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4509, i8* %4510, align 1
  %4511 = icmp eq i32 %4494, 0
  %4512 = zext i1 %4511 to i8
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4512, i8* %4513, align 1
  %4514 = lshr i32 %4494, 31
  %4515 = trunc i32 %4514 to i8
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4515, i8* %4516, align 1
  %4517 = lshr i32 %4491, 31
  %4518 = lshr i32 %4493, 31
  %4519 = xor i32 %4518, %4517
  %4520 = xor i32 %4514, %4517
  %4521 = add i32 %4520, %4519
  %4522 = icmp eq i32 %4521, 2
  %4523 = zext i1 %4522 to i8
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4523, i8* %4524, align 1
  store %struct.Memory* %loadMem_4065d0, %struct.Memory** %MEMORY
  %loadMem_4065d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4526 = getelementptr inbounds %struct.GPR, %struct.GPR* %4525, i32 0, i32 33
  %4527 = getelementptr inbounds %struct.Reg, %struct.Reg* %4526, i32 0, i32 0
  %PC.i2280 = bitcast %union.anon* %4527 to i64*
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4529 = getelementptr inbounds %struct.GPR, %struct.GPR* %4528, i32 0, i32 1
  %4530 = getelementptr inbounds %struct.Reg, %struct.Reg* %4529, i32 0, i32 0
  %EAX.i2281 = bitcast %union.anon* %4530 to i32*
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4532 = getelementptr inbounds %struct.GPR, %struct.GPR* %4531, i32 0, i32 15
  %4533 = getelementptr inbounds %struct.Reg, %struct.Reg* %4532, i32 0, i32 0
  %RBP.i2282 = bitcast %union.anon* %4533 to i64*
  %4534 = load i64, i64* %RBP.i2282
  %4535 = sub i64 %4534, 36
  %4536 = load i32, i32* %EAX.i2281
  %4537 = zext i32 %4536 to i64
  %4538 = load i64, i64* %PC.i2280
  %4539 = add i64 %4538, 3
  store i64 %4539, i64* %PC.i2280
  %4540 = inttoptr i64 %4535 to i32*
  store i32 %4536, i32* %4540
  store %struct.Memory* %loadMem_4065d3, %struct.Memory** %MEMORY
  %loadMem_4065d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4542 = getelementptr inbounds %struct.GPR, %struct.GPR* %4541, i32 0, i32 33
  %4543 = getelementptr inbounds %struct.Reg, %struct.Reg* %4542, i32 0, i32 0
  %PC.i2278 = bitcast %union.anon* %4543 to i64*
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4545 = getelementptr inbounds %struct.GPR, %struct.GPR* %4544, i32 0, i32 5
  %4546 = getelementptr inbounds %struct.Reg, %struct.Reg* %4545, i32 0, i32 0
  %RCX.i2279 = bitcast %union.anon* %4546 to i64*
  %4547 = load i64, i64* %PC.i2278
  %4548 = add i64 %4547, 8
  store i64 %4548, i64* %PC.i2278
  %4549 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4549, i64* %RCX.i2279, align 8
  store %struct.Memory* %loadMem_4065d6, %struct.Memory** %MEMORY
  %loadMem_4065de = load %struct.Memory*, %struct.Memory** %MEMORY
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4551 = getelementptr inbounds %struct.GPR, %struct.GPR* %4550, i32 0, i32 33
  %4552 = getelementptr inbounds %struct.Reg, %struct.Reg* %4551, i32 0, i32 0
  %PC.i2276 = bitcast %union.anon* %4552 to i64*
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4554 = getelementptr inbounds %struct.GPR, %struct.GPR* %4553, i32 0, i32 5
  %4555 = getelementptr inbounds %struct.Reg, %struct.Reg* %4554, i32 0, i32 0
  %RCX.i2277 = bitcast %union.anon* %4555 to i64*
  %4556 = load i64, i64* %RCX.i2277
  %4557 = load i64, i64* %PC.i2276
  %4558 = add i64 %4557, 7
  store i64 %4558, i64* %PC.i2276
  %4559 = add i64 13112, %4556
  store i64 %4559, i64* %RCX.i2277, align 8
  %4560 = icmp ult i64 %4559, %4556
  %4561 = icmp ult i64 %4559, 13112
  %4562 = or i1 %4560, %4561
  %4563 = zext i1 %4562 to i8
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4563, i8* %4564, align 1
  %4565 = trunc i64 %4559 to i32
  %4566 = and i32 %4565, 255
  %4567 = call i32 @llvm.ctpop.i32(i32 %4566)
  %4568 = trunc i32 %4567 to i8
  %4569 = and i8 %4568, 1
  %4570 = xor i8 %4569, 1
  %4571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4570, i8* %4571, align 1
  %4572 = xor i64 13112, %4556
  %4573 = xor i64 %4572, %4559
  %4574 = lshr i64 %4573, 4
  %4575 = trunc i64 %4574 to i8
  %4576 = and i8 %4575, 1
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4576, i8* %4577, align 1
  %4578 = icmp eq i64 %4559, 0
  %4579 = zext i1 %4578 to i8
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4579, i8* %4580, align 1
  %4581 = lshr i64 %4559, 63
  %4582 = trunc i64 %4581 to i8
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4582, i8* %4583, align 1
  %4584 = lshr i64 %4556, 63
  %4585 = xor i64 %4581, %4584
  %4586 = add i64 %4585, %4581
  %4587 = icmp eq i64 %4586, 2
  %4588 = zext i1 %4587 to i8
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4588, i8* %4589, align 1
  store %struct.Memory* %loadMem_4065de, %struct.Memory** %MEMORY
  %loadMem_4065e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4591 = getelementptr inbounds %struct.GPR, %struct.GPR* %4590, i32 0, i32 33
  %4592 = getelementptr inbounds %struct.Reg, %struct.Reg* %4591, i32 0, i32 0
  %PC.i2273 = bitcast %union.anon* %4592 to i64*
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4594 = getelementptr inbounds %struct.GPR, %struct.GPR* %4593, i32 0, i32 7
  %4595 = getelementptr inbounds %struct.Reg, %struct.Reg* %4594, i32 0, i32 0
  %RDX.i2274 = bitcast %union.anon* %4595 to i64*
  %4596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4597 = getelementptr inbounds %struct.GPR, %struct.GPR* %4596, i32 0, i32 15
  %4598 = getelementptr inbounds %struct.Reg, %struct.Reg* %4597, i32 0, i32 0
  %RBP.i2275 = bitcast %union.anon* %4598 to i64*
  %4599 = load i64, i64* %RBP.i2275
  %4600 = sub i64 %4599, 24
  %4601 = load i64, i64* %PC.i2273
  %4602 = add i64 %4601, 4
  store i64 %4602, i64* %PC.i2273
  %4603 = inttoptr i64 %4600 to i32*
  %4604 = load i32, i32* %4603
  %4605 = sext i32 %4604 to i64
  store i64 %4605, i64* %RDX.i2274, align 8
  store %struct.Memory* %loadMem_4065e5, %struct.Memory** %MEMORY
  %loadMem_4065e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4607 = getelementptr inbounds %struct.GPR, %struct.GPR* %4606, i32 0, i32 33
  %4608 = getelementptr inbounds %struct.Reg, %struct.Reg* %4607, i32 0, i32 0
  %PC.i2271 = bitcast %union.anon* %4608 to i64*
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4610 = getelementptr inbounds %struct.GPR, %struct.GPR* %4609, i32 0, i32 7
  %4611 = getelementptr inbounds %struct.Reg, %struct.Reg* %4610, i32 0, i32 0
  %RDX.i2272 = bitcast %union.anon* %4611 to i64*
  %4612 = load i64, i64* %RDX.i2272
  %4613 = load i64, i64* %PC.i2271
  %4614 = add i64 %4613, 4
  store i64 %4614, i64* %PC.i2271
  %4615 = shl i64 %4612, 5
  %4616 = icmp slt i64 %4615, 0
  %4617 = shl i64 %4615, 1
  store i64 %4617, i64* %RDX.i2272, align 8
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4619 = zext i1 %4616 to i8
  store i8 %4619, i8* %4618, align 1
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4621 = trunc i64 %4617 to i32
  %4622 = and i32 %4621, 254
  %4623 = call i32 @llvm.ctpop.i32(i32 %4622)
  %4624 = trunc i32 %4623 to i8
  %4625 = and i8 %4624, 1
  %4626 = xor i8 %4625, 1
  store i8 %4626, i8* %4620, align 1
  %4627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4627, align 1
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4629 = icmp eq i64 %4617, 0
  %4630 = zext i1 %4629 to i8
  store i8 %4630, i8* %4628, align 1
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4632 = lshr i64 %4617, 63
  %4633 = trunc i64 %4632 to i8
  store i8 %4633, i8* %4631, align 1
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4634, align 1
  store %struct.Memory* %loadMem_4065e9, %struct.Memory** %MEMORY
  %loadMem_4065ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4636 = getelementptr inbounds %struct.GPR, %struct.GPR* %4635, i32 0, i32 33
  %4637 = getelementptr inbounds %struct.Reg, %struct.Reg* %4636, i32 0, i32 0
  %PC.i2268 = bitcast %union.anon* %4637 to i64*
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4639 = getelementptr inbounds %struct.GPR, %struct.GPR* %4638, i32 0, i32 5
  %4640 = getelementptr inbounds %struct.Reg, %struct.Reg* %4639, i32 0, i32 0
  %RCX.i2269 = bitcast %union.anon* %4640 to i64*
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4642 = getelementptr inbounds %struct.GPR, %struct.GPR* %4641, i32 0, i32 7
  %4643 = getelementptr inbounds %struct.Reg, %struct.Reg* %4642, i32 0, i32 0
  %RDX.i2270 = bitcast %union.anon* %4643 to i64*
  %4644 = load i64, i64* %RCX.i2269
  %4645 = load i64, i64* %RDX.i2270
  %4646 = load i64, i64* %PC.i2268
  %4647 = add i64 %4646, 3
  store i64 %4647, i64* %PC.i2268
  %4648 = add i64 %4645, %4644
  store i64 %4648, i64* %RCX.i2269, align 8
  %4649 = icmp ult i64 %4648, %4644
  %4650 = icmp ult i64 %4648, %4645
  %4651 = or i1 %4649, %4650
  %4652 = zext i1 %4651 to i8
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4652, i8* %4653, align 1
  %4654 = trunc i64 %4648 to i32
  %4655 = and i32 %4654, 255
  %4656 = call i32 @llvm.ctpop.i32(i32 %4655)
  %4657 = trunc i32 %4656 to i8
  %4658 = and i8 %4657, 1
  %4659 = xor i8 %4658, 1
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4659, i8* %4660, align 1
  %4661 = xor i64 %4645, %4644
  %4662 = xor i64 %4661, %4648
  %4663 = lshr i64 %4662, 4
  %4664 = trunc i64 %4663 to i8
  %4665 = and i8 %4664, 1
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4665, i8* %4666, align 1
  %4667 = icmp eq i64 %4648, 0
  %4668 = zext i1 %4667 to i8
  %4669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4668, i8* %4669, align 1
  %4670 = lshr i64 %4648, 63
  %4671 = trunc i64 %4670 to i8
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4671, i8* %4672, align 1
  %4673 = lshr i64 %4644, 63
  %4674 = lshr i64 %4645, 63
  %4675 = xor i64 %4670, %4673
  %4676 = xor i64 %4670, %4674
  %4677 = add i64 %4675, %4676
  %4678 = icmp eq i64 %4677, 2
  %4679 = zext i1 %4678 to i8
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4679, i8* %4680, align 1
  store %struct.Memory* %loadMem_4065ed, %struct.Memory** %MEMORY
  %loadMem_4065f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4682 = getelementptr inbounds %struct.GPR, %struct.GPR* %4681, i32 0, i32 33
  %4683 = getelementptr inbounds %struct.Reg, %struct.Reg* %4682, i32 0, i32 0
  %PC.i2265 = bitcast %union.anon* %4683 to i64*
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4685 = getelementptr inbounds %struct.GPR, %struct.GPR* %4684, i32 0, i32 7
  %4686 = getelementptr inbounds %struct.Reg, %struct.Reg* %4685, i32 0, i32 0
  %RDX.i2266 = bitcast %union.anon* %4686 to i64*
  %4687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4688 = getelementptr inbounds %struct.GPR, %struct.GPR* %4687, i32 0, i32 15
  %4689 = getelementptr inbounds %struct.Reg, %struct.Reg* %4688, i32 0, i32 0
  %RBP.i2267 = bitcast %union.anon* %4689 to i64*
  %4690 = load i64, i64* %RBP.i2267
  %4691 = sub i64 %4690, 28
  %4692 = load i64, i64* %PC.i2265
  %4693 = add i64 %4692, 4
  store i64 %4693, i64* %PC.i2265
  %4694 = inttoptr i64 %4691 to i32*
  %4695 = load i32, i32* %4694
  %4696 = sext i32 %4695 to i64
  store i64 %4696, i64* %RDX.i2266, align 8
  store %struct.Memory* %loadMem_4065f0, %struct.Memory** %MEMORY
  %loadMem_4065f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4698 = getelementptr inbounds %struct.GPR, %struct.GPR* %4697, i32 0, i32 33
  %4699 = getelementptr inbounds %struct.Reg, %struct.Reg* %4698, i32 0, i32 0
  %PC.i2261 = bitcast %union.anon* %4699 to i64*
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4701 = getelementptr inbounds %struct.GPR, %struct.GPR* %4700, i32 0, i32 1
  %4702 = getelementptr inbounds %struct.Reg, %struct.Reg* %4701, i32 0, i32 0
  %RAX.i2262 = bitcast %union.anon* %4702 to i64*
  %4703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4704 = getelementptr inbounds %struct.GPR, %struct.GPR* %4703, i32 0, i32 5
  %4705 = getelementptr inbounds %struct.Reg, %struct.Reg* %4704, i32 0, i32 0
  %RCX.i2263 = bitcast %union.anon* %4705 to i64*
  %4706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4707 = getelementptr inbounds %struct.GPR, %struct.GPR* %4706, i32 0, i32 7
  %4708 = getelementptr inbounds %struct.Reg, %struct.Reg* %4707, i32 0, i32 0
  %RDX.i2264 = bitcast %union.anon* %4708 to i64*
  %4709 = load i64, i64* %RCX.i2263
  %4710 = load i64, i64* %RDX.i2264
  %4711 = mul i64 %4710, 4
  %4712 = add i64 %4711, %4709
  %4713 = load i64, i64* %PC.i2261
  %4714 = add i64 %4713, 3
  store i64 %4714, i64* %PC.i2261
  %4715 = inttoptr i64 %4712 to i32*
  %4716 = load i32, i32* %4715
  %4717 = zext i32 %4716 to i64
  store i64 %4717, i64* %RAX.i2262, align 8
  store %struct.Memory* %loadMem_4065f4, %struct.Memory** %MEMORY
  %loadMem_4065f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4719 = getelementptr inbounds %struct.GPR, %struct.GPR* %4718, i32 0, i32 33
  %4720 = getelementptr inbounds %struct.Reg, %struct.Reg* %4719, i32 0, i32 0
  %PC.i2259 = bitcast %union.anon* %4720 to i64*
  %4721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4722 = getelementptr inbounds %struct.GPR, %struct.GPR* %4721, i32 0, i32 5
  %4723 = getelementptr inbounds %struct.Reg, %struct.Reg* %4722, i32 0, i32 0
  %RCX.i2260 = bitcast %union.anon* %4723 to i64*
  %4724 = load i64, i64* %PC.i2259
  %4725 = add i64 %4724, 8
  store i64 %4725, i64* %PC.i2259
  %4726 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4726, i64* %RCX.i2260, align 8
  store %struct.Memory* %loadMem_4065f7, %struct.Memory** %MEMORY
  %loadMem_4065ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4728 = getelementptr inbounds %struct.GPR, %struct.GPR* %4727, i32 0, i32 33
  %4729 = getelementptr inbounds %struct.Reg, %struct.Reg* %4728, i32 0, i32 0
  %PC.i2257 = bitcast %union.anon* %4729 to i64*
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4731 = getelementptr inbounds %struct.GPR, %struct.GPR* %4730, i32 0, i32 5
  %4732 = getelementptr inbounds %struct.Reg, %struct.Reg* %4731, i32 0, i32 0
  %RCX.i2258 = bitcast %union.anon* %4732 to i64*
  %4733 = load i64, i64* %RCX.i2258
  %4734 = load i64, i64* %PC.i2257
  %4735 = add i64 %4734, 7
  store i64 %4735, i64* %PC.i2257
  %4736 = add i64 13112, %4733
  store i64 %4736, i64* %RCX.i2258, align 8
  %4737 = icmp ult i64 %4736, %4733
  %4738 = icmp ult i64 %4736, 13112
  %4739 = or i1 %4737, %4738
  %4740 = zext i1 %4739 to i8
  %4741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4740, i8* %4741, align 1
  %4742 = trunc i64 %4736 to i32
  %4743 = and i32 %4742, 255
  %4744 = call i32 @llvm.ctpop.i32(i32 %4743)
  %4745 = trunc i32 %4744 to i8
  %4746 = and i8 %4745, 1
  %4747 = xor i8 %4746, 1
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4747, i8* %4748, align 1
  %4749 = xor i64 13112, %4733
  %4750 = xor i64 %4749, %4736
  %4751 = lshr i64 %4750, 4
  %4752 = trunc i64 %4751 to i8
  %4753 = and i8 %4752, 1
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4753, i8* %4754, align 1
  %4755 = icmp eq i64 %4736, 0
  %4756 = zext i1 %4755 to i8
  %4757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4756, i8* %4757, align 1
  %4758 = lshr i64 %4736, 63
  %4759 = trunc i64 %4758 to i8
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4759, i8* %4760, align 1
  %4761 = lshr i64 %4733, 63
  %4762 = xor i64 %4758, %4761
  %4763 = add i64 %4762, %4758
  %4764 = icmp eq i64 %4763, 2
  %4765 = zext i1 %4764 to i8
  %4766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4765, i8* %4766, align 1
  store %struct.Memory* %loadMem_4065ff, %struct.Memory** %MEMORY
  %loadMem_406606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4768 = getelementptr inbounds %struct.GPR, %struct.GPR* %4767, i32 0, i32 33
  %4769 = getelementptr inbounds %struct.Reg, %struct.Reg* %4768, i32 0, i32 0
  %PC.i2254 = bitcast %union.anon* %4769 to i64*
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4771 = getelementptr inbounds %struct.GPR, %struct.GPR* %4770, i32 0, i32 7
  %4772 = getelementptr inbounds %struct.Reg, %struct.Reg* %4771, i32 0, i32 0
  %RDX.i2255 = bitcast %union.anon* %4772 to i64*
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4774 = getelementptr inbounds %struct.GPR, %struct.GPR* %4773, i32 0, i32 15
  %4775 = getelementptr inbounds %struct.Reg, %struct.Reg* %4774, i32 0, i32 0
  %RBP.i2256 = bitcast %union.anon* %4775 to i64*
  %4776 = load i64, i64* %RBP.i2256
  %4777 = sub i64 %4776, 24
  %4778 = load i64, i64* %PC.i2254
  %4779 = add i64 %4778, 4
  store i64 %4779, i64* %PC.i2254
  %4780 = inttoptr i64 %4777 to i32*
  %4781 = load i32, i32* %4780
  %4782 = sext i32 %4781 to i64
  store i64 %4782, i64* %RDX.i2255, align 8
  store %struct.Memory* %loadMem_406606, %struct.Memory** %MEMORY
  %loadMem_40660a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4784 = getelementptr inbounds %struct.GPR, %struct.GPR* %4783, i32 0, i32 33
  %4785 = getelementptr inbounds %struct.Reg, %struct.Reg* %4784, i32 0, i32 0
  %PC.i2252 = bitcast %union.anon* %4785 to i64*
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4787 = getelementptr inbounds %struct.GPR, %struct.GPR* %4786, i32 0, i32 7
  %4788 = getelementptr inbounds %struct.Reg, %struct.Reg* %4787, i32 0, i32 0
  %RDX.i2253 = bitcast %union.anon* %4788 to i64*
  %4789 = load i64, i64* %RDX.i2253
  %4790 = load i64, i64* %PC.i2252
  %4791 = add i64 %4790, 4
  store i64 %4791, i64* %PC.i2252
  %4792 = shl i64 %4789, 5
  %4793 = icmp slt i64 %4792, 0
  %4794 = shl i64 %4792, 1
  store i64 %4794, i64* %RDX.i2253, align 8
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4796 = zext i1 %4793 to i8
  store i8 %4796, i8* %4795, align 1
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4798 = trunc i64 %4794 to i32
  %4799 = and i32 %4798, 254
  %4800 = call i32 @llvm.ctpop.i32(i32 %4799)
  %4801 = trunc i32 %4800 to i8
  %4802 = and i8 %4801, 1
  %4803 = xor i8 %4802, 1
  store i8 %4803, i8* %4797, align 1
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4804, align 1
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4806 = icmp eq i64 %4794, 0
  %4807 = zext i1 %4806 to i8
  store i8 %4807, i8* %4805, align 1
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4809 = lshr i64 %4794, 63
  %4810 = trunc i64 %4809 to i8
  store i8 %4810, i8* %4808, align 1
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4811, align 1
  store %struct.Memory* %loadMem_40660a, %struct.Memory** %MEMORY
  %loadMem_40660e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 33
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %PC.i2249 = bitcast %union.anon* %4814 to i64*
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4816 = getelementptr inbounds %struct.GPR, %struct.GPR* %4815, i32 0, i32 5
  %4817 = getelementptr inbounds %struct.Reg, %struct.Reg* %4816, i32 0, i32 0
  %RCX.i2250 = bitcast %union.anon* %4817 to i64*
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4819 = getelementptr inbounds %struct.GPR, %struct.GPR* %4818, i32 0, i32 7
  %4820 = getelementptr inbounds %struct.Reg, %struct.Reg* %4819, i32 0, i32 0
  %RDX.i2251 = bitcast %union.anon* %4820 to i64*
  %4821 = load i64, i64* %RCX.i2250
  %4822 = load i64, i64* %RDX.i2251
  %4823 = load i64, i64* %PC.i2249
  %4824 = add i64 %4823, 3
  store i64 %4824, i64* %PC.i2249
  %4825 = add i64 %4822, %4821
  store i64 %4825, i64* %RCX.i2250, align 8
  %4826 = icmp ult i64 %4825, %4821
  %4827 = icmp ult i64 %4825, %4822
  %4828 = or i1 %4826, %4827
  %4829 = zext i1 %4828 to i8
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4829, i8* %4830, align 1
  %4831 = trunc i64 %4825 to i32
  %4832 = and i32 %4831, 255
  %4833 = call i32 @llvm.ctpop.i32(i32 %4832)
  %4834 = trunc i32 %4833 to i8
  %4835 = and i8 %4834, 1
  %4836 = xor i8 %4835, 1
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4836, i8* %4837, align 1
  %4838 = xor i64 %4822, %4821
  %4839 = xor i64 %4838, %4825
  %4840 = lshr i64 %4839, 4
  %4841 = trunc i64 %4840 to i8
  %4842 = and i8 %4841, 1
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4842, i8* %4843, align 1
  %4844 = icmp eq i64 %4825, 0
  %4845 = zext i1 %4844 to i8
  %4846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4845, i8* %4846, align 1
  %4847 = lshr i64 %4825, 63
  %4848 = trunc i64 %4847 to i8
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4848, i8* %4849, align 1
  %4850 = lshr i64 %4821, 63
  %4851 = lshr i64 %4822, 63
  %4852 = xor i64 %4847, %4850
  %4853 = xor i64 %4847, %4851
  %4854 = add i64 %4852, %4853
  %4855 = icmp eq i64 %4854, 2
  %4856 = zext i1 %4855 to i8
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4856, i8* %4857, align 1
  store %struct.Memory* %loadMem_40660e, %struct.Memory** %MEMORY
  %loadMem_406611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4859 = getelementptr inbounds %struct.GPR, %struct.GPR* %4858, i32 0, i32 33
  %4860 = getelementptr inbounds %struct.Reg, %struct.Reg* %4859, i32 0, i32 0
  %PC.i2246 = bitcast %union.anon* %4860 to i64*
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4862 = getelementptr inbounds %struct.GPR, %struct.GPR* %4861, i32 0, i32 7
  %4863 = getelementptr inbounds %struct.Reg, %struct.Reg* %4862, i32 0, i32 0
  %RDX.i2247 = bitcast %union.anon* %4863 to i64*
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4865 = getelementptr inbounds %struct.GPR, %struct.GPR* %4864, i32 0, i32 15
  %4866 = getelementptr inbounds %struct.Reg, %struct.Reg* %4865, i32 0, i32 0
  %RBP.i2248 = bitcast %union.anon* %4866 to i64*
  %4867 = load i64, i64* %RBP.i2248
  %4868 = sub i64 %4867, 36
  %4869 = load i64, i64* %PC.i2246
  %4870 = add i64 %4869, 4
  store i64 %4870, i64* %PC.i2246
  %4871 = inttoptr i64 %4868 to i32*
  %4872 = load i32, i32* %4871
  %4873 = sext i32 %4872 to i64
  store i64 %4873, i64* %RDX.i2247, align 8
  store %struct.Memory* %loadMem_406611, %struct.Memory** %MEMORY
  %loadMem_406615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4875 = getelementptr inbounds %struct.GPR, %struct.GPR* %4874, i32 0, i32 33
  %4876 = getelementptr inbounds %struct.Reg, %struct.Reg* %4875, i32 0, i32 0
  %PC.i2242 = bitcast %union.anon* %4876 to i64*
  %4877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4878 = getelementptr inbounds %struct.GPR, %struct.GPR* %4877, i32 0, i32 1
  %4879 = getelementptr inbounds %struct.Reg, %struct.Reg* %4878, i32 0, i32 0
  %RAX.i2243 = bitcast %union.anon* %4879 to i64*
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4881 = getelementptr inbounds %struct.GPR, %struct.GPR* %4880, i32 0, i32 5
  %4882 = getelementptr inbounds %struct.Reg, %struct.Reg* %4881, i32 0, i32 0
  %RCX.i2244 = bitcast %union.anon* %4882 to i64*
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4884 = getelementptr inbounds %struct.GPR, %struct.GPR* %4883, i32 0, i32 7
  %4885 = getelementptr inbounds %struct.Reg, %struct.Reg* %4884, i32 0, i32 0
  %RDX.i2245 = bitcast %union.anon* %4885 to i64*
  %4886 = load i64, i64* %RAX.i2243
  %4887 = load i64, i64* %RCX.i2244
  %4888 = load i64, i64* %RDX.i2245
  %4889 = mul i64 %4888, 4
  %4890 = add i64 %4889, %4887
  %4891 = load i64, i64* %PC.i2242
  %4892 = add i64 %4891, 3
  store i64 %4892, i64* %PC.i2242
  %4893 = trunc i64 %4886 to i32
  %4894 = inttoptr i64 %4890 to i32*
  %4895 = load i32, i32* %4894
  %4896 = add i32 %4895, %4893
  %4897 = zext i32 %4896 to i64
  store i64 %4897, i64* %RAX.i2243, align 8
  %4898 = icmp ult i32 %4896, %4893
  %4899 = icmp ult i32 %4896, %4895
  %4900 = or i1 %4898, %4899
  %4901 = zext i1 %4900 to i8
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4901, i8* %4902, align 1
  %4903 = and i32 %4896, 255
  %4904 = call i32 @llvm.ctpop.i32(i32 %4903)
  %4905 = trunc i32 %4904 to i8
  %4906 = and i8 %4905, 1
  %4907 = xor i8 %4906, 1
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4907, i8* %4908, align 1
  %4909 = xor i32 %4895, %4893
  %4910 = xor i32 %4909, %4896
  %4911 = lshr i32 %4910, 4
  %4912 = trunc i32 %4911 to i8
  %4913 = and i8 %4912, 1
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4913, i8* %4914, align 1
  %4915 = icmp eq i32 %4896, 0
  %4916 = zext i1 %4915 to i8
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4916, i8* %4917, align 1
  %4918 = lshr i32 %4896, 31
  %4919 = trunc i32 %4918 to i8
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4919, i8* %4920, align 1
  %4921 = lshr i32 %4893, 31
  %4922 = lshr i32 %4895, 31
  %4923 = xor i32 %4918, %4921
  %4924 = xor i32 %4918, %4922
  %4925 = add i32 %4923, %4924
  %4926 = icmp eq i32 %4925, 2
  %4927 = zext i1 %4926 to i8
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4927, i8* %4928, align 1
  store %struct.Memory* %loadMem_406615, %struct.Memory** %MEMORY
  %loadMem_406618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4930 = getelementptr inbounds %struct.GPR, %struct.GPR* %4929, i32 0, i32 33
  %4931 = getelementptr inbounds %struct.Reg, %struct.Reg* %4930, i32 0, i32 0
  %PC.i2239 = bitcast %union.anon* %4931 to i64*
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4933 = getelementptr inbounds %struct.GPR, %struct.GPR* %4932, i32 0, i32 5
  %4934 = getelementptr inbounds %struct.Reg, %struct.Reg* %4933, i32 0, i32 0
  %RCX.i2240 = bitcast %union.anon* %4934 to i64*
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4936 = getelementptr inbounds %struct.GPR, %struct.GPR* %4935, i32 0, i32 15
  %4937 = getelementptr inbounds %struct.Reg, %struct.Reg* %4936, i32 0, i32 0
  %RBP.i2241 = bitcast %union.anon* %4937 to i64*
  %4938 = load i64, i64* %RBP.i2241
  %4939 = sub i64 %4938, 28
  %4940 = load i64, i64* %PC.i2239
  %4941 = add i64 %4940, 4
  store i64 %4941, i64* %PC.i2239
  %4942 = inttoptr i64 %4939 to i32*
  %4943 = load i32, i32* %4942
  %4944 = sext i32 %4943 to i64
  store i64 %4944, i64* %RCX.i2240, align 8
  store %struct.Memory* %loadMem_406618, %struct.Memory** %MEMORY
  %loadMem_40661c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4946 = getelementptr inbounds %struct.GPR, %struct.GPR* %4945, i32 0, i32 33
  %4947 = getelementptr inbounds %struct.Reg, %struct.Reg* %4946, i32 0, i32 0
  %PC.i2235 = bitcast %union.anon* %4947 to i64*
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4949 = getelementptr inbounds %struct.GPR, %struct.GPR* %4948, i32 0, i32 1
  %4950 = getelementptr inbounds %struct.Reg, %struct.Reg* %4949, i32 0, i32 0
  %EAX.i2236 = bitcast %union.anon* %4950 to i32*
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4952 = getelementptr inbounds %struct.GPR, %struct.GPR* %4951, i32 0, i32 5
  %4953 = getelementptr inbounds %struct.Reg, %struct.Reg* %4952, i32 0, i32 0
  %RCX.i2237 = bitcast %union.anon* %4953 to i64*
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4955 = getelementptr inbounds %struct.GPR, %struct.GPR* %4954, i32 0, i32 15
  %4956 = getelementptr inbounds %struct.Reg, %struct.Reg* %4955, i32 0, i32 0
  %RBP.i2238 = bitcast %union.anon* %4956 to i64*
  %4957 = load i64, i64* %RBP.i2238
  %4958 = load i64, i64* %RCX.i2237
  %4959 = mul i64 %4958, 4
  %4960 = add i64 %4957, -64
  %4961 = add i64 %4960, %4959
  %4962 = load i32, i32* %EAX.i2236
  %4963 = zext i32 %4962 to i64
  %4964 = load i64, i64* %PC.i2235
  %4965 = add i64 %4964, 4
  store i64 %4965, i64* %PC.i2235
  %4966 = inttoptr i64 %4961 to i32*
  store i32 %4962, i32* %4966
  store %struct.Memory* %loadMem_40661c, %struct.Memory** %MEMORY
  %loadMem_406620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4968 = getelementptr inbounds %struct.GPR, %struct.GPR* %4967, i32 0, i32 33
  %4969 = getelementptr inbounds %struct.Reg, %struct.Reg* %4968, i32 0, i32 0
  %PC.i2233 = bitcast %union.anon* %4969 to i64*
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4971 = getelementptr inbounds %struct.GPR, %struct.GPR* %4970, i32 0, i32 5
  %4972 = getelementptr inbounds %struct.Reg, %struct.Reg* %4971, i32 0, i32 0
  %RCX.i2234 = bitcast %union.anon* %4972 to i64*
  %4973 = load i64, i64* %PC.i2233
  %4974 = add i64 %4973, 8
  store i64 %4974, i64* %PC.i2233
  %4975 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4975, i64* %RCX.i2234, align 8
  store %struct.Memory* %loadMem_406620, %struct.Memory** %MEMORY
  %loadMem_406628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4977 = getelementptr inbounds %struct.GPR, %struct.GPR* %4976, i32 0, i32 33
  %4978 = getelementptr inbounds %struct.Reg, %struct.Reg* %4977, i32 0, i32 0
  %PC.i2231 = bitcast %union.anon* %4978 to i64*
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4980 = getelementptr inbounds %struct.GPR, %struct.GPR* %4979, i32 0, i32 5
  %4981 = getelementptr inbounds %struct.Reg, %struct.Reg* %4980, i32 0, i32 0
  %RCX.i2232 = bitcast %union.anon* %4981 to i64*
  %4982 = load i64, i64* %RCX.i2232
  %4983 = load i64, i64* %PC.i2231
  %4984 = add i64 %4983, 7
  store i64 %4984, i64* %PC.i2231
  %4985 = add i64 13112, %4982
  store i64 %4985, i64* %RCX.i2232, align 8
  %4986 = icmp ult i64 %4985, %4982
  %4987 = icmp ult i64 %4985, 13112
  %4988 = or i1 %4986, %4987
  %4989 = zext i1 %4988 to i8
  %4990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4989, i8* %4990, align 1
  %4991 = trunc i64 %4985 to i32
  %4992 = and i32 %4991, 255
  %4993 = call i32 @llvm.ctpop.i32(i32 %4992)
  %4994 = trunc i32 %4993 to i8
  %4995 = and i8 %4994, 1
  %4996 = xor i8 %4995, 1
  %4997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4996, i8* %4997, align 1
  %4998 = xor i64 13112, %4982
  %4999 = xor i64 %4998, %4985
  %5000 = lshr i64 %4999, 4
  %5001 = trunc i64 %5000 to i8
  %5002 = and i8 %5001, 1
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5002, i8* %5003, align 1
  %5004 = icmp eq i64 %4985, 0
  %5005 = zext i1 %5004 to i8
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5005, i8* %5006, align 1
  %5007 = lshr i64 %4985, 63
  %5008 = trunc i64 %5007 to i8
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5008, i8* %5009, align 1
  %5010 = lshr i64 %4982, 63
  %5011 = xor i64 %5007, %5010
  %5012 = add i64 %5011, %5007
  %5013 = icmp eq i64 %5012, 2
  %5014 = zext i1 %5013 to i8
  %5015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5014, i8* %5015, align 1
  store %struct.Memory* %loadMem_406628, %struct.Memory** %MEMORY
  %loadMem_40662f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5017 = getelementptr inbounds %struct.GPR, %struct.GPR* %5016, i32 0, i32 33
  %5018 = getelementptr inbounds %struct.Reg, %struct.Reg* %5017, i32 0, i32 0
  %PC.i2228 = bitcast %union.anon* %5018 to i64*
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5020 = getelementptr inbounds %struct.GPR, %struct.GPR* %5019, i32 0, i32 7
  %5021 = getelementptr inbounds %struct.Reg, %struct.Reg* %5020, i32 0, i32 0
  %RDX.i2229 = bitcast %union.anon* %5021 to i64*
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 15
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %RBP.i2230 = bitcast %union.anon* %5024 to i64*
  %5025 = load i64, i64* %RBP.i2230
  %5026 = sub i64 %5025, 24
  %5027 = load i64, i64* %PC.i2228
  %5028 = add i64 %5027, 4
  store i64 %5028, i64* %PC.i2228
  %5029 = inttoptr i64 %5026 to i32*
  %5030 = load i32, i32* %5029
  %5031 = sext i32 %5030 to i64
  store i64 %5031, i64* %RDX.i2229, align 8
  store %struct.Memory* %loadMem_40662f, %struct.Memory** %MEMORY
  %loadMem_406633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5033 = getelementptr inbounds %struct.GPR, %struct.GPR* %5032, i32 0, i32 33
  %5034 = getelementptr inbounds %struct.Reg, %struct.Reg* %5033, i32 0, i32 0
  %PC.i2226 = bitcast %union.anon* %5034 to i64*
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5036 = getelementptr inbounds %struct.GPR, %struct.GPR* %5035, i32 0, i32 7
  %5037 = getelementptr inbounds %struct.Reg, %struct.Reg* %5036, i32 0, i32 0
  %RDX.i2227 = bitcast %union.anon* %5037 to i64*
  %5038 = load i64, i64* %RDX.i2227
  %5039 = load i64, i64* %PC.i2226
  %5040 = add i64 %5039, 4
  store i64 %5040, i64* %PC.i2226
  %5041 = shl i64 %5038, 5
  %5042 = icmp slt i64 %5041, 0
  %5043 = shl i64 %5041, 1
  store i64 %5043, i64* %RDX.i2227, align 8
  %5044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5045 = zext i1 %5042 to i8
  store i8 %5045, i8* %5044, align 1
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5047 = trunc i64 %5043 to i32
  %5048 = and i32 %5047, 254
  %5049 = call i32 @llvm.ctpop.i32(i32 %5048)
  %5050 = trunc i32 %5049 to i8
  %5051 = and i8 %5050, 1
  %5052 = xor i8 %5051, 1
  store i8 %5052, i8* %5046, align 1
  %5053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5053, align 1
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5055 = icmp eq i64 %5043, 0
  %5056 = zext i1 %5055 to i8
  store i8 %5056, i8* %5054, align 1
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5058 = lshr i64 %5043, 63
  %5059 = trunc i64 %5058 to i8
  store i8 %5059, i8* %5057, align 1
  %5060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5060, align 1
  store %struct.Memory* %loadMem_406633, %struct.Memory** %MEMORY
  %loadMem_406637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 33
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %PC.i2223 = bitcast %union.anon* %5063 to i64*
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5065 = getelementptr inbounds %struct.GPR, %struct.GPR* %5064, i32 0, i32 5
  %5066 = getelementptr inbounds %struct.Reg, %struct.Reg* %5065, i32 0, i32 0
  %RCX.i2224 = bitcast %union.anon* %5066 to i64*
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5068 = getelementptr inbounds %struct.GPR, %struct.GPR* %5067, i32 0, i32 7
  %5069 = getelementptr inbounds %struct.Reg, %struct.Reg* %5068, i32 0, i32 0
  %RDX.i2225 = bitcast %union.anon* %5069 to i64*
  %5070 = load i64, i64* %RCX.i2224
  %5071 = load i64, i64* %RDX.i2225
  %5072 = load i64, i64* %PC.i2223
  %5073 = add i64 %5072, 3
  store i64 %5073, i64* %PC.i2223
  %5074 = add i64 %5071, %5070
  store i64 %5074, i64* %RCX.i2224, align 8
  %5075 = icmp ult i64 %5074, %5070
  %5076 = icmp ult i64 %5074, %5071
  %5077 = or i1 %5075, %5076
  %5078 = zext i1 %5077 to i8
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5078, i8* %5079, align 1
  %5080 = trunc i64 %5074 to i32
  %5081 = and i32 %5080, 255
  %5082 = call i32 @llvm.ctpop.i32(i32 %5081)
  %5083 = trunc i32 %5082 to i8
  %5084 = and i8 %5083, 1
  %5085 = xor i8 %5084, 1
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5085, i8* %5086, align 1
  %5087 = xor i64 %5071, %5070
  %5088 = xor i64 %5087, %5074
  %5089 = lshr i64 %5088, 4
  %5090 = trunc i64 %5089 to i8
  %5091 = and i8 %5090, 1
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5091, i8* %5092, align 1
  %5093 = icmp eq i64 %5074, 0
  %5094 = zext i1 %5093 to i8
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5094, i8* %5095, align 1
  %5096 = lshr i64 %5074, 63
  %5097 = trunc i64 %5096 to i8
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5097, i8* %5098, align 1
  %5099 = lshr i64 %5070, 63
  %5100 = lshr i64 %5071, 63
  %5101 = xor i64 %5096, %5099
  %5102 = xor i64 %5096, %5100
  %5103 = add i64 %5101, %5102
  %5104 = icmp eq i64 %5103, 2
  %5105 = zext i1 %5104 to i8
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5105, i8* %5106, align 1
  store %struct.Memory* %loadMem_406637, %struct.Memory** %MEMORY
  %loadMem_40663a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5108 = getelementptr inbounds %struct.GPR, %struct.GPR* %5107, i32 0, i32 33
  %5109 = getelementptr inbounds %struct.Reg, %struct.Reg* %5108, i32 0, i32 0
  %PC.i2220 = bitcast %union.anon* %5109 to i64*
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5111 = getelementptr inbounds %struct.GPR, %struct.GPR* %5110, i32 0, i32 7
  %5112 = getelementptr inbounds %struct.Reg, %struct.Reg* %5111, i32 0, i32 0
  %RDX.i2221 = bitcast %union.anon* %5112 to i64*
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5114 = getelementptr inbounds %struct.GPR, %struct.GPR* %5113, i32 0, i32 15
  %5115 = getelementptr inbounds %struct.Reg, %struct.Reg* %5114, i32 0, i32 0
  %RBP.i2222 = bitcast %union.anon* %5115 to i64*
  %5116 = load i64, i64* %RBP.i2222
  %5117 = sub i64 %5116, 28
  %5118 = load i64, i64* %PC.i2220
  %5119 = add i64 %5118, 4
  store i64 %5119, i64* %PC.i2220
  %5120 = inttoptr i64 %5117 to i32*
  %5121 = load i32, i32* %5120
  %5122 = sext i32 %5121 to i64
  store i64 %5122, i64* %RDX.i2221, align 8
  store %struct.Memory* %loadMem_40663a, %struct.Memory** %MEMORY
  %loadMem_40663e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5124 = getelementptr inbounds %struct.GPR, %struct.GPR* %5123, i32 0, i32 33
  %5125 = getelementptr inbounds %struct.Reg, %struct.Reg* %5124, i32 0, i32 0
  %PC.i2216 = bitcast %union.anon* %5125 to i64*
  %5126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5127 = getelementptr inbounds %struct.GPR, %struct.GPR* %5126, i32 0, i32 1
  %5128 = getelementptr inbounds %struct.Reg, %struct.Reg* %5127, i32 0, i32 0
  %RAX.i2217 = bitcast %union.anon* %5128 to i64*
  %5129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5130 = getelementptr inbounds %struct.GPR, %struct.GPR* %5129, i32 0, i32 5
  %5131 = getelementptr inbounds %struct.Reg, %struct.Reg* %5130, i32 0, i32 0
  %RCX.i2218 = bitcast %union.anon* %5131 to i64*
  %5132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5133 = getelementptr inbounds %struct.GPR, %struct.GPR* %5132, i32 0, i32 7
  %5134 = getelementptr inbounds %struct.Reg, %struct.Reg* %5133, i32 0, i32 0
  %RDX.i2219 = bitcast %union.anon* %5134 to i64*
  %5135 = load i64, i64* %RCX.i2218
  %5136 = load i64, i64* %RDX.i2219
  %5137 = mul i64 %5136, 4
  %5138 = add i64 %5137, %5135
  %5139 = load i64, i64* %PC.i2216
  %5140 = add i64 %5139, 3
  store i64 %5140, i64* %PC.i2216
  %5141 = inttoptr i64 %5138 to i32*
  %5142 = load i32, i32* %5141
  %5143 = zext i32 %5142 to i64
  store i64 %5143, i64* %RAX.i2217, align 8
  store %struct.Memory* %loadMem_40663e, %struct.Memory** %MEMORY
  %loadMem_406641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5145 = getelementptr inbounds %struct.GPR, %struct.GPR* %5144, i32 0, i32 33
  %5146 = getelementptr inbounds %struct.Reg, %struct.Reg* %5145, i32 0, i32 0
  %PC.i2214 = bitcast %union.anon* %5146 to i64*
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5148 = getelementptr inbounds %struct.GPR, %struct.GPR* %5147, i32 0, i32 5
  %5149 = getelementptr inbounds %struct.Reg, %struct.Reg* %5148, i32 0, i32 0
  %RCX.i2215 = bitcast %union.anon* %5149 to i64*
  %5150 = load i64, i64* %PC.i2214
  %5151 = add i64 %5150, 8
  store i64 %5151, i64* %PC.i2214
  %5152 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5152, i64* %RCX.i2215, align 8
  store %struct.Memory* %loadMem_406641, %struct.Memory** %MEMORY
  %loadMem_406649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 33
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %PC.i2212 = bitcast %union.anon* %5155 to i64*
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5157 = getelementptr inbounds %struct.GPR, %struct.GPR* %5156, i32 0, i32 5
  %5158 = getelementptr inbounds %struct.Reg, %struct.Reg* %5157, i32 0, i32 0
  %RCX.i2213 = bitcast %union.anon* %5158 to i64*
  %5159 = load i64, i64* %RCX.i2213
  %5160 = load i64, i64* %PC.i2212
  %5161 = add i64 %5160, 7
  store i64 %5161, i64* %PC.i2212
  %5162 = add i64 13112, %5159
  store i64 %5162, i64* %RCX.i2213, align 8
  %5163 = icmp ult i64 %5162, %5159
  %5164 = icmp ult i64 %5162, 13112
  %5165 = or i1 %5163, %5164
  %5166 = zext i1 %5165 to i8
  %5167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5166, i8* %5167, align 1
  %5168 = trunc i64 %5162 to i32
  %5169 = and i32 %5168, 255
  %5170 = call i32 @llvm.ctpop.i32(i32 %5169)
  %5171 = trunc i32 %5170 to i8
  %5172 = and i8 %5171, 1
  %5173 = xor i8 %5172, 1
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5173, i8* %5174, align 1
  %5175 = xor i64 13112, %5159
  %5176 = xor i64 %5175, %5162
  %5177 = lshr i64 %5176, 4
  %5178 = trunc i64 %5177 to i8
  %5179 = and i8 %5178, 1
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5179, i8* %5180, align 1
  %5181 = icmp eq i64 %5162, 0
  %5182 = zext i1 %5181 to i8
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5182, i8* %5183, align 1
  %5184 = lshr i64 %5162, 63
  %5185 = trunc i64 %5184 to i8
  %5186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5185, i8* %5186, align 1
  %5187 = lshr i64 %5159, 63
  %5188 = xor i64 %5184, %5187
  %5189 = add i64 %5188, %5184
  %5190 = icmp eq i64 %5189, 2
  %5191 = zext i1 %5190 to i8
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5191, i8* %5192, align 1
  store %struct.Memory* %loadMem_406649, %struct.Memory** %MEMORY
  %loadMem_406650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5194 = getelementptr inbounds %struct.GPR, %struct.GPR* %5193, i32 0, i32 33
  %5195 = getelementptr inbounds %struct.Reg, %struct.Reg* %5194, i32 0, i32 0
  %PC.i2209 = bitcast %union.anon* %5195 to i64*
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5197 = getelementptr inbounds %struct.GPR, %struct.GPR* %5196, i32 0, i32 7
  %5198 = getelementptr inbounds %struct.Reg, %struct.Reg* %5197, i32 0, i32 0
  %RDX.i2210 = bitcast %union.anon* %5198 to i64*
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5200 = getelementptr inbounds %struct.GPR, %struct.GPR* %5199, i32 0, i32 15
  %5201 = getelementptr inbounds %struct.Reg, %struct.Reg* %5200, i32 0, i32 0
  %RBP.i2211 = bitcast %union.anon* %5201 to i64*
  %5202 = load i64, i64* %RBP.i2211
  %5203 = sub i64 %5202, 24
  %5204 = load i64, i64* %PC.i2209
  %5205 = add i64 %5204, 4
  store i64 %5205, i64* %PC.i2209
  %5206 = inttoptr i64 %5203 to i32*
  %5207 = load i32, i32* %5206
  %5208 = sext i32 %5207 to i64
  store i64 %5208, i64* %RDX.i2210, align 8
  store %struct.Memory* %loadMem_406650, %struct.Memory** %MEMORY
  %loadMem_406654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5210 = getelementptr inbounds %struct.GPR, %struct.GPR* %5209, i32 0, i32 33
  %5211 = getelementptr inbounds %struct.Reg, %struct.Reg* %5210, i32 0, i32 0
  %PC.i2207 = bitcast %union.anon* %5211 to i64*
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5213 = getelementptr inbounds %struct.GPR, %struct.GPR* %5212, i32 0, i32 7
  %5214 = getelementptr inbounds %struct.Reg, %struct.Reg* %5213, i32 0, i32 0
  %RDX.i2208 = bitcast %union.anon* %5214 to i64*
  %5215 = load i64, i64* %RDX.i2208
  %5216 = load i64, i64* %PC.i2207
  %5217 = add i64 %5216, 4
  store i64 %5217, i64* %PC.i2207
  %5218 = shl i64 %5215, 5
  %5219 = icmp slt i64 %5218, 0
  %5220 = shl i64 %5218, 1
  store i64 %5220, i64* %RDX.i2208, align 8
  %5221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5222 = zext i1 %5219 to i8
  store i8 %5222, i8* %5221, align 1
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5224 = trunc i64 %5220 to i32
  %5225 = and i32 %5224, 254
  %5226 = call i32 @llvm.ctpop.i32(i32 %5225)
  %5227 = trunc i32 %5226 to i8
  %5228 = and i8 %5227, 1
  %5229 = xor i8 %5228, 1
  store i8 %5229, i8* %5223, align 1
  %5230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5230, align 1
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5232 = icmp eq i64 %5220, 0
  %5233 = zext i1 %5232 to i8
  store i8 %5233, i8* %5231, align 1
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5235 = lshr i64 %5220, 63
  %5236 = trunc i64 %5235 to i8
  store i8 %5236, i8* %5234, align 1
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5237, align 1
  store %struct.Memory* %loadMem_406654, %struct.Memory** %MEMORY
  %loadMem_406658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5239 = getelementptr inbounds %struct.GPR, %struct.GPR* %5238, i32 0, i32 33
  %5240 = getelementptr inbounds %struct.Reg, %struct.Reg* %5239, i32 0, i32 0
  %PC.i2204 = bitcast %union.anon* %5240 to i64*
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5242 = getelementptr inbounds %struct.GPR, %struct.GPR* %5241, i32 0, i32 5
  %5243 = getelementptr inbounds %struct.Reg, %struct.Reg* %5242, i32 0, i32 0
  %RCX.i2205 = bitcast %union.anon* %5243 to i64*
  %5244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5245 = getelementptr inbounds %struct.GPR, %struct.GPR* %5244, i32 0, i32 7
  %5246 = getelementptr inbounds %struct.Reg, %struct.Reg* %5245, i32 0, i32 0
  %RDX.i2206 = bitcast %union.anon* %5246 to i64*
  %5247 = load i64, i64* %RCX.i2205
  %5248 = load i64, i64* %RDX.i2206
  %5249 = load i64, i64* %PC.i2204
  %5250 = add i64 %5249, 3
  store i64 %5250, i64* %PC.i2204
  %5251 = add i64 %5248, %5247
  store i64 %5251, i64* %RCX.i2205, align 8
  %5252 = icmp ult i64 %5251, %5247
  %5253 = icmp ult i64 %5251, %5248
  %5254 = or i1 %5252, %5253
  %5255 = zext i1 %5254 to i8
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5255, i8* %5256, align 1
  %5257 = trunc i64 %5251 to i32
  %5258 = and i32 %5257, 255
  %5259 = call i32 @llvm.ctpop.i32(i32 %5258)
  %5260 = trunc i32 %5259 to i8
  %5261 = and i8 %5260, 1
  %5262 = xor i8 %5261, 1
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5262, i8* %5263, align 1
  %5264 = xor i64 %5248, %5247
  %5265 = xor i64 %5264, %5251
  %5266 = lshr i64 %5265, 4
  %5267 = trunc i64 %5266 to i8
  %5268 = and i8 %5267, 1
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5268, i8* %5269, align 1
  %5270 = icmp eq i64 %5251, 0
  %5271 = zext i1 %5270 to i8
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5271, i8* %5272, align 1
  %5273 = lshr i64 %5251, 63
  %5274 = trunc i64 %5273 to i8
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5274, i8* %5275, align 1
  %5276 = lshr i64 %5247, 63
  %5277 = lshr i64 %5248, 63
  %5278 = xor i64 %5273, %5276
  %5279 = xor i64 %5273, %5277
  %5280 = add i64 %5278, %5279
  %5281 = icmp eq i64 %5280, 2
  %5282 = zext i1 %5281 to i8
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5282, i8* %5283, align 1
  store %struct.Memory* %loadMem_406658, %struct.Memory** %MEMORY
  %loadMem_40665b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5285 = getelementptr inbounds %struct.GPR, %struct.GPR* %5284, i32 0, i32 33
  %5286 = getelementptr inbounds %struct.Reg, %struct.Reg* %5285, i32 0, i32 0
  %PC.i2201 = bitcast %union.anon* %5286 to i64*
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5288 = getelementptr inbounds %struct.GPR, %struct.GPR* %5287, i32 0, i32 7
  %5289 = getelementptr inbounds %struct.Reg, %struct.Reg* %5288, i32 0, i32 0
  %RDX.i2202 = bitcast %union.anon* %5289 to i64*
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5291 = getelementptr inbounds %struct.GPR, %struct.GPR* %5290, i32 0, i32 15
  %5292 = getelementptr inbounds %struct.Reg, %struct.Reg* %5291, i32 0, i32 0
  %RBP.i2203 = bitcast %union.anon* %5292 to i64*
  %5293 = load i64, i64* %RBP.i2203
  %5294 = sub i64 %5293, 36
  %5295 = load i64, i64* %PC.i2201
  %5296 = add i64 %5295, 4
  store i64 %5296, i64* %PC.i2201
  %5297 = inttoptr i64 %5294 to i32*
  %5298 = load i32, i32* %5297
  %5299 = sext i32 %5298 to i64
  store i64 %5299, i64* %RDX.i2202, align 8
  store %struct.Memory* %loadMem_40665b, %struct.Memory** %MEMORY
  %loadMem_40665f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5301 = getelementptr inbounds %struct.GPR, %struct.GPR* %5300, i32 0, i32 33
  %5302 = getelementptr inbounds %struct.Reg, %struct.Reg* %5301, i32 0, i32 0
  %PC.i2197 = bitcast %union.anon* %5302 to i64*
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5304 = getelementptr inbounds %struct.GPR, %struct.GPR* %5303, i32 0, i32 1
  %5305 = getelementptr inbounds %struct.Reg, %struct.Reg* %5304, i32 0, i32 0
  %RAX.i2198 = bitcast %union.anon* %5305 to i64*
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5307 = getelementptr inbounds %struct.GPR, %struct.GPR* %5306, i32 0, i32 5
  %5308 = getelementptr inbounds %struct.Reg, %struct.Reg* %5307, i32 0, i32 0
  %RCX.i2199 = bitcast %union.anon* %5308 to i64*
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5310 = getelementptr inbounds %struct.GPR, %struct.GPR* %5309, i32 0, i32 7
  %5311 = getelementptr inbounds %struct.Reg, %struct.Reg* %5310, i32 0, i32 0
  %RDX.i2200 = bitcast %union.anon* %5311 to i64*
  %5312 = load i64, i64* %RAX.i2198
  %5313 = load i64, i64* %RCX.i2199
  %5314 = load i64, i64* %RDX.i2200
  %5315 = mul i64 %5314, 4
  %5316 = add i64 %5315, %5313
  %5317 = load i64, i64* %PC.i2197
  %5318 = add i64 %5317, 3
  store i64 %5318, i64* %PC.i2197
  %5319 = trunc i64 %5312 to i32
  %5320 = inttoptr i64 %5316 to i32*
  %5321 = load i32, i32* %5320
  %5322 = sub i32 %5319, %5321
  %5323 = zext i32 %5322 to i64
  store i64 %5323, i64* %RAX.i2198, align 8
  %5324 = icmp ult i32 %5319, %5321
  %5325 = zext i1 %5324 to i8
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5325, i8* %5326, align 1
  %5327 = and i32 %5322, 255
  %5328 = call i32 @llvm.ctpop.i32(i32 %5327)
  %5329 = trunc i32 %5328 to i8
  %5330 = and i8 %5329, 1
  %5331 = xor i8 %5330, 1
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5331, i8* %5332, align 1
  %5333 = xor i32 %5321, %5319
  %5334 = xor i32 %5333, %5322
  %5335 = lshr i32 %5334, 4
  %5336 = trunc i32 %5335 to i8
  %5337 = and i8 %5336, 1
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5337, i8* %5338, align 1
  %5339 = icmp eq i32 %5322, 0
  %5340 = zext i1 %5339 to i8
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5340, i8* %5341, align 1
  %5342 = lshr i32 %5322, 31
  %5343 = trunc i32 %5342 to i8
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5343, i8* %5344, align 1
  %5345 = lshr i32 %5319, 31
  %5346 = lshr i32 %5321, 31
  %5347 = xor i32 %5346, %5345
  %5348 = xor i32 %5342, %5345
  %5349 = add i32 %5348, %5347
  %5350 = icmp eq i32 %5349, 2
  %5351 = zext i1 %5350 to i8
  %5352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5351, i8* %5352, align 1
  store %struct.Memory* %loadMem_40665f, %struct.Memory** %MEMORY
  %loadMem_406662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5354 = getelementptr inbounds %struct.GPR, %struct.GPR* %5353, i32 0, i32 33
  %5355 = getelementptr inbounds %struct.Reg, %struct.Reg* %5354, i32 0, i32 0
  %PC.i2194 = bitcast %union.anon* %5355 to i64*
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5357 = getelementptr inbounds %struct.GPR, %struct.GPR* %5356, i32 0, i32 5
  %5358 = getelementptr inbounds %struct.Reg, %struct.Reg* %5357, i32 0, i32 0
  %RCX.i2195 = bitcast %union.anon* %5358 to i64*
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5360 = getelementptr inbounds %struct.GPR, %struct.GPR* %5359, i32 0, i32 15
  %5361 = getelementptr inbounds %struct.Reg, %struct.Reg* %5360, i32 0, i32 0
  %RBP.i2196 = bitcast %union.anon* %5361 to i64*
  %5362 = load i64, i64* %RBP.i2196
  %5363 = sub i64 %5362, 36
  %5364 = load i64, i64* %PC.i2194
  %5365 = add i64 %5364, 4
  store i64 %5365, i64* %PC.i2194
  %5366 = inttoptr i64 %5363 to i32*
  %5367 = load i32, i32* %5366
  %5368 = sext i32 %5367 to i64
  store i64 %5368, i64* %RCX.i2195, align 8
  store %struct.Memory* %loadMem_406662, %struct.Memory** %MEMORY
  %loadMem_406666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5370 = getelementptr inbounds %struct.GPR, %struct.GPR* %5369, i32 0, i32 33
  %5371 = getelementptr inbounds %struct.Reg, %struct.Reg* %5370, i32 0, i32 0
  %PC.i2190 = bitcast %union.anon* %5371 to i64*
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5373 = getelementptr inbounds %struct.GPR, %struct.GPR* %5372, i32 0, i32 1
  %5374 = getelementptr inbounds %struct.Reg, %struct.Reg* %5373, i32 0, i32 0
  %EAX.i2191 = bitcast %union.anon* %5374 to i32*
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5376 = getelementptr inbounds %struct.GPR, %struct.GPR* %5375, i32 0, i32 5
  %5377 = getelementptr inbounds %struct.Reg, %struct.Reg* %5376, i32 0, i32 0
  %RCX.i2192 = bitcast %union.anon* %5377 to i64*
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5379 = getelementptr inbounds %struct.GPR, %struct.GPR* %5378, i32 0, i32 15
  %5380 = getelementptr inbounds %struct.Reg, %struct.Reg* %5379, i32 0, i32 0
  %RBP.i2193 = bitcast %union.anon* %5380 to i64*
  %5381 = load i64, i64* %RBP.i2193
  %5382 = load i64, i64* %RCX.i2192
  %5383 = mul i64 %5382, 4
  %5384 = add i64 %5381, -64
  %5385 = add i64 %5384, %5383
  %5386 = load i32, i32* %EAX.i2191
  %5387 = zext i32 %5386 to i64
  %5388 = load i64, i64* %PC.i2190
  %5389 = add i64 %5388, 4
  store i64 %5389, i64* %PC.i2190
  %5390 = inttoptr i64 %5385 to i32*
  store i32 %5386, i32* %5390
  store %struct.Memory* %loadMem_406666, %struct.Memory** %MEMORY
  %loadMem_40666a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5392 = getelementptr inbounds %struct.GPR, %struct.GPR* %5391, i32 0, i32 33
  %5393 = getelementptr inbounds %struct.Reg, %struct.Reg* %5392, i32 0, i32 0
  %PC.i2187 = bitcast %union.anon* %5393 to i64*
  %5394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5395 = getelementptr inbounds %struct.GPR, %struct.GPR* %5394, i32 0, i32 1
  %5396 = getelementptr inbounds %struct.Reg, %struct.Reg* %5395, i32 0, i32 0
  %RAX.i2188 = bitcast %union.anon* %5396 to i64*
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5398 = getelementptr inbounds %struct.GPR, %struct.GPR* %5397, i32 0, i32 15
  %5399 = getelementptr inbounds %struct.Reg, %struct.Reg* %5398, i32 0, i32 0
  %RBP.i2189 = bitcast %union.anon* %5399 to i64*
  %5400 = load i64, i64* %RBP.i2189
  %5401 = sub i64 %5400, 28
  %5402 = load i64, i64* %PC.i2187
  %5403 = add i64 %5402, 3
  store i64 %5403, i64* %PC.i2187
  %5404 = inttoptr i64 %5401 to i32*
  %5405 = load i32, i32* %5404
  %5406 = zext i32 %5405 to i64
  store i64 %5406, i64* %RAX.i2188, align 8
  store %struct.Memory* %loadMem_40666a, %struct.Memory** %MEMORY
  %loadMem_40666d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5408 = getelementptr inbounds %struct.GPR, %struct.GPR* %5407, i32 0, i32 33
  %5409 = getelementptr inbounds %struct.Reg, %struct.Reg* %5408, i32 0, i32 0
  %PC.i2185 = bitcast %union.anon* %5409 to i64*
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5411 = getelementptr inbounds %struct.GPR, %struct.GPR* %5410, i32 0, i32 1
  %5412 = getelementptr inbounds %struct.Reg, %struct.Reg* %5411, i32 0, i32 0
  %RAX.i2186 = bitcast %union.anon* %5412 to i64*
  %5413 = load i64, i64* %RAX.i2186
  %5414 = load i64, i64* %PC.i2185
  %5415 = add i64 %5414, 3
  store i64 %5415, i64* %PC.i2185
  %5416 = trunc i64 %5413 to i32
  %5417 = add i32 1, %5416
  %5418 = zext i32 %5417 to i64
  store i64 %5418, i64* %RAX.i2186, align 8
  %5419 = icmp ult i32 %5417, %5416
  %5420 = icmp ult i32 %5417, 1
  %5421 = or i1 %5419, %5420
  %5422 = zext i1 %5421 to i8
  %5423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5422, i8* %5423, align 1
  %5424 = and i32 %5417, 255
  %5425 = call i32 @llvm.ctpop.i32(i32 %5424)
  %5426 = trunc i32 %5425 to i8
  %5427 = and i8 %5426, 1
  %5428 = xor i8 %5427, 1
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5428, i8* %5429, align 1
  %5430 = xor i64 1, %5413
  %5431 = trunc i64 %5430 to i32
  %5432 = xor i32 %5431, %5417
  %5433 = lshr i32 %5432, 4
  %5434 = trunc i32 %5433 to i8
  %5435 = and i8 %5434, 1
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5435, i8* %5436, align 1
  %5437 = icmp eq i32 %5417, 0
  %5438 = zext i1 %5437 to i8
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5438, i8* %5439, align 1
  %5440 = lshr i32 %5417, 31
  %5441 = trunc i32 %5440 to i8
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5441, i8* %5442, align 1
  %5443 = lshr i32 %5416, 31
  %5444 = xor i32 %5440, %5443
  %5445 = add i32 %5444, %5440
  %5446 = icmp eq i32 %5445, 2
  %5447 = zext i1 %5446 to i8
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5447, i8* %5448, align 1
  store %struct.Memory* %loadMem_40666d, %struct.Memory** %MEMORY
  %loadMem_406670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5450 = getelementptr inbounds %struct.GPR, %struct.GPR* %5449, i32 0, i32 33
  %5451 = getelementptr inbounds %struct.Reg, %struct.Reg* %5450, i32 0, i32 0
  %PC.i2182 = bitcast %union.anon* %5451 to i64*
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5453 = getelementptr inbounds %struct.GPR, %struct.GPR* %5452, i32 0, i32 1
  %5454 = getelementptr inbounds %struct.Reg, %struct.Reg* %5453, i32 0, i32 0
  %EAX.i2183 = bitcast %union.anon* %5454 to i32*
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5456 = getelementptr inbounds %struct.GPR, %struct.GPR* %5455, i32 0, i32 15
  %5457 = getelementptr inbounds %struct.Reg, %struct.Reg* %5456, i32 0, i32 0
  %RBP.i2184 = bitcast %union.anon* %5457 to i64*
  %5458 = load i64, i64* %RBP.i2184
  %5459 = sub i64 %5458, 28
  %5460 = load i32, i32* %EAX.i2183
  %5461 = zext i32 %5460 to i64
  %5462 = load i64, i64* %PC.i2182
  %5463 = add i64 %5462, 3
  store i64 %5463, i64* %PC.i2182
  %5464 = inttoptr i64 %5459 to i32*
  store i32 %5460, i32* %5464
  store %struct.Memory* %loadMem_406670, %struct.Memory** %MEMORY
  %loadMem_406673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5466 = getelementptr inbounds %struct.GPR, %struct.GPR* %5465, i32 0, i32 33
  %5467 = getelementptr inbounds %struct.Reg, %struct.Reg* %5466, i32 0, i32 0
  %PC.i2181 = bitcast %union.anon* %5467 to i64*
  %5468 = load i64, i64* %PC.i2181
  %5469 = add i64 %5468, -178
  %5470 = load i64, i64* %PC.i2181
  %5471 = add i64 %5470, 5
  store i64 %5471, i64* %PC.i2181
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5469, i64* %5472, align 8
  store %struct.Memory* %loadMem_406673, %struct.Memory** %MEMORY
  br label %block_.L_4065c1

block_.L_406678:                                  ; preds = %block_.L_4065c1
  %loadMem_406678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5474 = getelementptr inbounds %struct.GPR, %struct.GPR* %5473, i32 0, i32 33
  %5475 = getelementptr inbounds %struct.Reg, %struct.Reg* %5474, i32 0, i32 0
  %PC.i2178 = bitcast %union.anon* %5475 to i64*
  %5476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5477 = getelementptr inbounds %struct.GPR, %struct.GPR* %5476, i32 0, i32 1
  %5478 = getelementptr inbounds %struct.Reg, %struct.Reg* %5477, i32 0, i32 0
  %RAX.i2179 = bitcast %union.anon* %5478 to i64*
  %5479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5480 = getelementptr inbounds %struct.GPR, %struct.GPR* %5479, i32 0, i32 15
  %5481 = getelementptr inbounds %struct.Reg, %struct.Reg* %5480, i32 0, i32 0
  %RBP.i2180 = bitcast %union.anon* %5481 to i64*
  %5482 = load i64, i64* %RBP.i2180
  %5483 = sub i64 %5482, 64
  %5484 = load i64, i64* %PC.i2178
  %5485 = add i64 %5484, 3
  store i64 %5485, i64* %PC.i2178
  %5486 = inttoptr i64 %5483 to i32*
  %5487 = load i32, i32* %5486
  %5488 = zext i32 %5487 to i64
  store i64 %5488, i64* %RAX.i2179, align 8
  store %struct.Memory* %loadMem_406678, %struct.Memory** %MEMORY
  %loadMem_40667b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5490 = getelementptr inbounds %struct.GPR, %struct.GPR* %5489, i32 0, i32 33
  %5491 = getelementptr inbounds %struct.Reg, %struct.Reg* %5490, i32 0, i32 0
  %PC.i2175 = bitcast %union.anon* %5491 to i64*
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5493 = getelementptr inbounds %struct.GPR, %struct.GPR* %5492, i32 0, i32 1
  %5494 = getelementptr inbounds %struct.Reg, %struct.Reg* %5493, i32 0, i32 0
  %RAX.i2176 = bitcast %union.anon* %5494 to i64*
  %5495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5496 = getelementptr inbounds %struct.GPR, %struct.GPR* %5495, i32 0, i32 15
  %5497 = getelementptr inbounds %struct.Reg, %struct.Reg* %5496, i32 0, i32 0
  %RBP.i2177 = bitcast %union.anon* %5497 to i64*
  %5498 = load i64, i64* %RAX.i2176
  %5499 = load i64, i64* %RBP.i2177
  %5500 = sub i64 %5499, 60
  %5501 = load i64, i64* %PC.i2175
  %5502 = add i64 %5501, 3
  store i64 %5502, i64* %PC.i2175
  %5503 = trunc i64 %5498 to i32
  %5504 = inttoptr i64 %5500 to i32*
  %5505 = load i32, i32* %5504
  %5506 = add i32 %5505, %5503
  %5507 = zext i32 %5506 to i64
  store i64 %5507, i64* %RAX.i2176, align 8
  %5508 = icmp ult i32 %5506, %5503
  %5509 = icmp ult i32 %5506, %5505
  %5510 = or i1 %5508, %5509
  %5511 = zext i1 %5510 to i8
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5511, i8* %5512, align 1
  %5513 = and i32 %5506, 255
  %5514 = call i32 @llvm.ctpop.i32(i32 %5513)
  %5515 = trunc i32 %5514 to i8
  %5516 = and i8 %5515, 1
  %5517 = xor i8 %5516, 1
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5517, i8* %5518, align 1
  %5519 = xor i32 %5505, %5503
  %5520 = xor i32 %5519, %5506
  %5521 = lshr i32 %5520, 4
  %5522 = trunc i32 %5521 to i8
  %5523 = and i8 %5522, 1
  %5524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5523, i8* %5524, align 1
  %5525 = icmp eq i32 %5506, 0
  %5526 = zext i1 %5525 to i8
  %5527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5526, i8* %5527, align 1
  %5528 = lshr i32 %5506, 31
  %5529 = trunc i32 %5528 to i8
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5529, i8* %5530, align 1
  %5531 = lshr i32 %5503, 31
  %5532 = lshr i32 %5505, 31
  %5533 = xor i32 %5528, %5531
  %5534 = xor i32 %5528, %5532
  %5535 = add i32 %5533, %5534
  %5536 = icmp eq i32 %5535, 2
  %5537 = zext i1 %5536 to i8
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5537, i8* %5538, align 1
  store %struct.Memory* %loadMem_40667b, %struct.Memory** %MEMORY
  %loadMem_40667e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5540 = getelementptr inbounds %struct.GPR, %struct.GPR* %5539, i32 0, i32 33
  %5541 = getelementptr inbounds %struct.Reg, %struct.Reg* %5540, i32 0, i32 0
  %PC.i2173 = bitcast %union.anon* %5541 to i64*
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5543 = getelementptr inbounds %struct.GPR, %struct.GPR* %5542, i32 0, i32 5
  %5544 = getelementptr inbounds %struct.Reg, %struct.Reg* %5543, i32 0, i32 0
  %RCX.i2174 = bitcast %union.anon* %5544 to i64*
  %5545 = load i64, i64* %PC.i2173
  %5546 = add i64 %5545, 8
  store i64 %5546, i64* %PC.i2173
  %5547 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5547, i64* %RCX.i2174, align 8
  store %struct.Memory* %loadMem_40667e, %struct.Memory** %MEMORY
  %loadMem_406686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5549 = getelementptr inbounds %struct.GPR, %struct.GPR* %5548, i32 0, i32 33
  %5550 = getelementptr inbounds %struct.Reg, %struct.Reg* %5549, i32 0, i32 0
  %PC.i2171 = bitcast %union.anon* %5550 to i64*
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5552 = getelementptr inbounds %struct.GPR, %struct.GPR* %5551, i32 0, i32 5
  %5553 = getelementptr inbounds %struct.Reg, %struct.Reg* %5552, i32 0, i32 0
  %RCX.i2172 = bitcast %union.anon* %5553 to i64*
  %5554 = load i64, i64* %RCX.i2172
  %5555 = load i64, i64* %PC.i2171
  %5556 = add i64 %5555, 7
  store i64 %5556, i64* %PC.i2171
  %5557 = add i64 13112, %5554
  store i64 %5557, i64* %RCX.i2172, align 8
  %5558 = icmp ult i64 %5557, %5554
  %5559 = icmp ult i64 %5557, 13112
  %5560 = or i1 %5558, %5559
  %5561 = zext i1 %5560 to i8
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5561, i8* %5562, align 1
  %5563 = trunc i64 %5557 to i32
  %5564 = and i32 %5563, 255
  %5565 = call i32 @llvm.ctpop.i32(i32 %5564)
  %5566 = trunc i32 %5565 to i8
  %5567 = and i8 %5566, 1
  %5568 = xor i8 %5567, 1
  %5569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5568, i8* %5569, align 1
  %5570 = xor i64 13112, %5554
  %5571 = xor i64 %5570, %5557
  %5572 = lshr i64 %5571, 4
  %5573 = trunc i64 %5572 to i8
  %5574 = and i8 %5573, 1
  %5575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5574, i8* %5575, align 1
  %5576 = icmp eq i64 %5557, 0
  %5577 = zext i1 %5576 to i8
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5577, i8* %5578, align 1
  %5579 = lshr i64 %5557, 63
  %5580 = trunc i64 %5579 to i8
  %5581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5580, i8* %5581, align 1
  %5582 = lshr i64 %5554, 63
  %5583 = xor i64 %5579, %5582
  %5584 = add i64 %5583, %5579
  %5585 = icmp eq i64 %5584, 2
  %5586 = zext i1 %5585 to i8
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5586, i8* %5587, align 1
  store %struct.Memory* %loadMem_406686, %struct.Memory** %MEMORY
  %loadMem_40668d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5589 = getelementptr inbounds %struct.GPR, %struct.GPR* %5588, i32 0, i32 33
  %5590 = getelementptr inbounds %struct.Reg, %struct.Reg* %5589, i32 0, i32 0
  %PC.i2168 = bitcast %union.anon* %5590 to i64*
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5592 = getelementptr inbounds %struct.GPR, %struct.GPR* %5591, i32 0, i32 7
  %5593 = getelementptr inbounds %struct.Reg, %struct.Reg* %5592, i32 0, i32 0
  %RDX.i2169 = bitcast %union.anon* %5593 to i64*
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5595 = getelementptr inbounds %struct.GPR, %struct.GPR* %5594, i32 0, i32 15
  %5596 = getelementptr inbounds %struct.Reg, %struct.Reg* %5595, i32 0, i32 0
  %RBP.i2170 = bitcast %union.anon* %5596 to i64*
  %5597 = load i64, i64* %RBP.i2170
  %5598 = sub i64 %5597, 24
  %5599 = load i64, i64* %PC.i2168
  %5600 = add i64 %5599, 4
  store i64 %5600, i64* %PC.i2168
  %5601 = inttoptr i64 %5598 to i32*
  %5602 = load i32, i32* %5601
  %5603 = sext i32 %5602 to i64
  store i64 %5603, i64* %RDX.i2169, align 8
  store %struct.Memory* %loadMem_40668d, %struct.Memory** %MEMORY
  %loadMem_406691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5605 = getelementptr inbounds %struct.GPR, %struct.GPR* %5604, i32 0, i32 33
  %5606 = getelementptr inbounds %struct.Reg, %struct.Reg* %5605, i32 0, i32 0
  %PC.i2166 = bitcast %union.anon* %5606 to i64*
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5608 = getelementptr inbounds %struct.GPR, %struct.GPR* %5607, i32 0, i32 7
  %5609 = getelementptr inbounds %struct.Reg, %struct.Reg* %5608, i32 0, i32 0
  %RDX.i2167 = bitcast %union.anon* %5609 to i64*
  %5610 = load i64, i64* %RDX.i2167
  %5611 = load i64, i64* %PC.i2166
  %5612 = add i64 %5611, 4
  store i64 %5612, i64* %PC.i2166
  %5613 = shl i64 %5610, 5
  %5614 = icmp slt i64 %5613, 0
  %5615 = shl i64 %5613, 1
  store i64 %5615, i64* %RDX.i2167, align 8
  %5616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5617 = zext i1 %5614 to i8
  store i8 %5617, i8* %5616, align 1
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5619 = trunc i64 %5615 to i32
  %5620 = and i32 %5619, 254
  %5621 = call i32 @llvm.ctpop.i32(i32 %5620)
  %5622 = trunc i32 %5621 to i8
  %5623 = and i8 %5622, 1
  %5624 = xor i8 %5623, 1
  store i8 %5624, i8* %5618, align 1
  %5625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5625, align 1
  %5626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5627 = icmp eq i64 %5615, 0
  %5628 = zext i1 %5627 to i8
  store i8 %5628, i8* %5626, align 1
  %5629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5630 = lshr i64 %5615, 63
  %5631 = trunc i64 %5630 to i8
  store i8 %5631, i8* %5629, align 1
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5632, align 1
  store %struct.Memory* %loadMem_406691, %struct.Memory** %MEMORY
  %loadMem_406695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5634 = getelementptr inbounds %struct.GPR, %struct.GPR* %5633, i32 0, i32 33
  %5635 = getelementptr inbounds %struct.Reg, %struct.Reg* %5634, i32 0, i32 0
  %PC.i2163 = bitcast %union.anon* %5635 to i64*
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5637 = getelementptr inbounds %struct.GPR, %struct.GPR* %5636, i32 0, i32 5
  %5638 = getelementptr inbounds %struct.Reg, %struct.Reg* %5637, i32 0, i32 0
  %RCX.i2164 = bitcast %union.anon* %5638 to i64*
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5640 = getelementptr inbounds %struct.GPR, %struct.GPR* %5639, i32 0, i32 7
  %5641 = getelementptr inbounds %struct.Reg, %struct.Reg* %5640, i32 0, i32 0
  %RDX.i2165 = bitcast %union.anon* %5641 to i64*
  %5642 = load i64, i64* %RCX.i2164
  %5643 = load i64, i64* %RDX.i2165
  %5644 = load i64, i64* %PC.i2163
  %5645 = add i64 %5644, 3
  store i64 %5645, i64* %PC.i2163
  %5646 = add i64 %5643, %5642
  store i64 %5646, i64* %RCX.i2164, align 8
  %5647 = icmp ult i64 %5646, %5642
  %5648 = icmp ult i64 %5646, %5643
  %5649 = or i1 %5647, %5648
  %5650 = zext i1 %5649 to i8
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5650, i8* %5651, align 1
  %5652 = trunc i64 %5646 to i32
  %5653 = and i32 %5652, 255
  %5654 = call i32 @llvm.ctpop.i32(i32 %5653)
  %5655 = trunc i32 %5654 to i8
  %5656 = and i8 %5655, 1
  %5657 = xor i8 %5656, 1
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5657, i8* %5658, align 1
  %5659 = xor i64 %5643, %5642
  %5660 = xor i64 %5659, %5646
  %5661 = lshr i64 %5660, 4
  %5662 = trunc i64 %5661 to i8
  %5663 = and i8 %5662, 1
  %5664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5663, i8* %5664, align 1
  %5665 = icmp eq i64 %5646, 0
  %5666 = zext i1 %5665 to i8
  %5667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5666, i8* %5667, align 1
  %5668 = lshr i64 %5646, 63
  %5669 = trunc i64 %5668 to i8
  %5670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5669, i8* %5670, align 1
  %5671 = lshr i64 %5642, 63
  %5672 = lshr i64 %5643, 63
  %5673 = xor i64 %5668, %5671
  %5674 = xor i64 %5668, %5672
  %5675 = add i64 %5673, %5674
  %5676 = icmp eq i64 %5675, 2
  %5677 = zext i1 %5676 to i8
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5677, i8* %5678, align 1
  store %struct.Memory* %loadMem_406695, %struct.Memory** %MEMORY
  %loadMem_406698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5680 = getelementptr inbounds %struct.GPR, %struct.GPR* %5679, i32 0, i32 33
  %5681 = getelementptr inbounds %struct.Reg, %struct.Reg* %5680, i32 0, i32 0
  %PC.i2160 = bitcast %union.anon* %5681 to i64*
  %5682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5683 = getelementptr inbounds %struct.GPR, %struct.GPR* %5682, i32 0, i32 1
  %5684 = getelementptr inbounds %struct.Reg, %struct.Reg* %5683, i32 0, i32 0
  %EAX.i2161 = bitcast %union.anon* %5684 to i32*
  %5685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5686 = getelementptr inbounds %struct.GPR, %struct.GPR* %5685, i32 0, i32 5
  %5687 = getelementptr inbounds %struct.Reg, %struct.Reg* %5686, i32 0, i32 0
  %RCX.i2162 = bitcast %union.anon* %5687 to i64*
  %5688 = load i64, i64* %RCX.i2162
  %5689 = load i32, i32* %EAX.i2161
  %5690 = zext i32 %5689 to i64
  %5691 = load i64, i64* %PC.i2160
  %5692 = add i64 %5691, 2
  store i64 %5692, i64* %PC.i2160
  %5693 = inttoptr i64 %5688 to i32*
  store i32 %5689, i32* %5693
  store %struct.Memory* %loadMem_406698, %struct.Memory** %MEMORY
  %loadMem_40669a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5695 = getelementptr inbounds %struct.GPR, %struct.GPR* %5694, i32 0, i32 33
  %5696 = getelementptr inbounds %struct.Reg, %struct.Reg* %5695, i32 0, i32 0
  %PC.i2157 = bitcast %union.anon* %5696 to i64*
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5698 = getelementptr inbounds %struct.GPR, %struct.GPR* %5697, i32 0, i32 1
  %5699 = getelementptr inbounds %struct.Reg, %struct.Reg* %5698, i32 0, i32 0
  %RAX.i2158 = bitcast %union.anon* %5699 to i64*
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5701 = getelementptr inbounds %struct.GPR, %struct.GPR* %5700, i32 0, i32 15
  %5702 = getelementptr inbounds %struct.Reg, %struct.Reg* %5701, i32 0, i32 0
  %RBP.i2159 = bitcast %union.anon* %5702 to i64*
  %5703 = load i64, i64* %RBP.i2159
  %5704 = sub i64 %5703, 64
  %5705 = load i64, i64* %PC.i2157
  %5706 = add i64 %5705, 3
  store i64 %5706, i64* %PC.i2157
  %5707 = inttoptr i64 %5704 to i32*
  %5708 = load i32, i32* %5707
  %5709 = zext i32 %5708 to i64
  store i64 %5709, i64* %RAX.i2158, align 8
  store %struct.Memory* %loadMem_40669a, %struct.Memory** %MEMORY
  %loadMem_40669d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5711 = getelementptr inbounds %struct.GPR, %struct.GPR* %5710, i32 0, i32 33
  %5712 = getelementptr inbounds %struct.Reg, %struct.Reg* %5711, i32 0, i32 0
  %PC.i2154 = bitcast %union.anon* %5712 to i64*
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5714 = getelementptr inbounds %struct.GPR, %struct.GPR* %5713, i32 0, i32 1
  %5715 = getelementptr inbounds %struct.Reg, %struct.Reg* %5714, i32 0, i32 0
  %RAX.i2155 = bitcast %union.anon* %5715 to i64*
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5717 = getelementptr inbounds %struct.GPR, %struct.GPR* %5716, i32 0, i32 15
  %5718 = getelementptr inbounds %struct.Reg, %struct.Reg* %5717, i32 0, i32 0
  %RBP.i2156 = bitcast %union.anon* %5718 to i64*
  %5719 = load i64, i64* %RAX.i2155
  %5720 = load i64, i64* %RBP.i2156
  %5721 = sub i64 %5720, 60
  %5722 = load i64, i64* %PC.i2154
  %5723 = add i64 %5722, 3
  store i64 %5723, i64* %PC.i2154
  %5724 = trunc i64 %5719 to i32
  %5725 = inttoptr i64 %5721 to i32*
  %5726 = load i32, i32* %5725
  %5727 = sub i32 %5724, %5726
  %5728 = zext i32 %5727 to i64
  store i64 %5728, i64* %RAX.i2155, align 8
  %5729 = icmp ult i32 %5724, %5726
  %5730 = zext i1 %5729 to i8
  %5731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5730, i8* %5731, align 1
  %5732 = and i32 %5727, 255
  %5733 = call i32 @llvm.ctpop.i32(i32 %5732)
  %5734 = trunc i32 %5733 to i8
  %5735 = and i8 %5734, 1
  %5736 = xor i8 %5735, 1
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5736, i8* %5737, align 1
  %5738 = xor i32 %5726, %5724
  %5739 = xor i32 %5738, %5727
  %5740 = lshr i32 %5739, 4
  %5741 = trunc i32 %5740 to i8
  %5742 = and i8 %5741, 1
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5742, i8* %5743, align 1
  %5744 = icmp eq i32 %5727, 0
  %5745 = zext i1 %5744 to i8
  %5746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5745, i8* %5746, align 1
  %5747 = lshr i32 %5727, 31
  %5748 = trunc i32 %5747 to i8
  %5749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5748, i8* %5749, align 1
  %5750 = lshr i32 %5724, 31
  %5751 = lshr i32 %5726, 31
  %5752 = xor i32 %5751, %5750
  %5753 = xor i32 %5747, %5750
  %5754 = add i32 %5753, %5752
  %5755 = icmp eq i32 %5754, 2
  %5756 = zext i1 %5755 to i8
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5756, i8* %5757, align 1
  store %struct.Memory* %loadMem_40669d, %struct.Memory** %MEMORY
  %loadMem_4066a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5759 = getelementptr inbounds %struct.GPR, %struct.GPR* %5758, i32 0, i32 33
  %5760 = getelementptr inbounds %struct.Reg, %struct.Reg* %5759, i32 0, i32 0
  %PC.i2152 = bitcast %union.anon* %5760 to i64*
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5762 = getelementptr inbounds %struct.GPR, %struct.GPR* %5761, i32 0, i32 5
  %5763 = getelementptr inbounds %struct.Reg, %struct.Reg* %5762, i32 0, i32 0
  %RCX.i2153 = bitcast %union.anon* %5763 to i64*
  %5764 = load i64, i64* %PC.i2152
  %5765 = add i64 %5764, 8
  store i64 %5765, i64* %PC.i2152
  %5766 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5766, i64* %RCX.i2153, align 8
  store %struct.Memory* %loadMem_4066a0, %struct.Memory** %MEMORY
  %loadMem_4066a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5768 = getelementptr inbounds %struct.GPR, %struct.GPR* %5767, i32 0, i32 33
  %5769 = getelementptr inbounds %struct.Reg, %struct.Reg* %5768, i32 0, i32 0
  %PC.i2150 = bitcast %union.anon* %5769 to i64*
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5771 = getelementptr inbounds %struct.GPR, %struct.GPR* %5770, i32 0, i32 5
  %5772 = getelementptr inbounds %struct.Reg, %struct.Reg* %5771, i32 0, i32 0
  %RCX.i2151 = bitcast %union.anon* %5772 to i64*
  %5773 = load i64, i64* %RCX.i2151
  %5774 = load i64, i64* %PC.i2150
  %5775 = add i64 %5774, 7
  store i64 %5775, i64* %PC.i2150
  %5776 = add i64 13112, %5773
  store i64 %5776, i64* %RCX.i2151, align 8
  %5777 = icmp ult i64 %5776, %5773
  %5778 = icmp ult i64 %5776, 13112
  %5779 = or i1 %5777, %5778
  %5780 = zext i1 %5779 to i8
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5780, i8* %5781, align 1
  %5782 = trunc i64 %5776 to i32
  %5783 = and i32 %5782, 255
  %5784 = call i32 @llvm.ctpop.i32(i32 %5783)
  %5785 = trunc i32 %5784 to i8
  %5786 = and i8 %5785, 1
  %5787 = xor i8 %5786, 1
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5787, i8* %5788, align 1
  %5789 = xor i64 13112, %5773
  %5790 = xor i64 %5789, %5776
  %5791 = lshr i64 %5790, 4
  %5792 = trunc i64 %5791 to i8
  %5793 = and i8 %5792, 1
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5793, i8* %5794, align 1
  %5795 = icmp eq i64 %5776, 0
  %5796 = zext i1 %5795 to i8
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5796, i8* %5797, align 1
  %5798 = lshr i64 %5776, 63
  %5799 = trunc i64 %5798 to i8
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5799, i8* %5800, align 1
  %5801 = lshr i64 %5773, 63
  %5802 = xor i64 %5798, %5801
  %5803 = add i64 %5802, %5798
  %5804 = icmp eq i64 %5803, 2
  %5805 = zext i1 %5804 to i8
  %5806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5805, i8* %5806, align 1
  store %struct.Memory* %loadMem_4066a8, %struct.Memory** %MEMORY
  %loadMem_4066af = load %struct.Memory*, %struct.Memory** %MEMORY
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5808 = getelementptr inbounds %struct.GPR, %struct.GPR* %5807, i32 0, i32 33
  %5809 = getelementptr inbounds %struct.Reg, %struct.Reg* %5808, i32 0, i32 0
  %PC.i2147 = bitcast %union.anon* %5809 to i64*
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5811 = getelementptr inbounds %struct.GPR, %struct.GPR* %5810, i32 0, i32 7
  %5812 = getelementptr inbounds %struct.Reg, %struct.Reg* %5811, i32 0, i32 0
  %RDX.i2148 = bitcast %union.anon* %5812 to i64*
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5814 = getelementptr inbounds %struct.GPR, %struct.GPR* %5813, i32 0, i32 15
  %5815 = getelementptr inbounds %struct.Reg, %struct.Reg* %5814, i32 0, i32 0
  %RBP.i2149 = bitcast %union.anon* %5815 to i64*
  %5816 = load i64, i64* %RBP.i2149
  %5817 = sub i64 %5816, 24
  %5818 = load i64, i64* %PC.i2147
  %5819 = add i64 %5818, 4
  store i64 %5819, i64* %PC.i2147
  %5820 = inttoptr i64 %5817 to i32*
  %5821 = load i32, i32* %5820
  %5822 = sext i32 %5821 to i64
  store i64 %5822, i64* %RDX.i2148, align 8
  store %struct.Memory* %loadMem_4066af, %struct.Memory** %MEMORY
  %loadMem_4066b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5824 = getelementptr inbounds %struct.GPR, %struct.GPR* %5823, i32 0, i32 33
  %5825 = getelementptr inbounds %struct.Reg, %struct.Reg* %5824, i32 0, i32 0
  %PC.i2145 = bitcast %union.anon* %5825 to i64*
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5827 = getelementptr inbounds %struct.GPR, %struct.GPR* %5826, i32 0, i32 7
  %5828 = getelementptr inbounds %struct.Reg, %struct.Reg* %5827, i32 0, i32 0
  %RDX.i2146 = bitcast %union.anon* %5828 to i64*
  %5829 = load i64, i64* %RDX.i2146
  %5830 = load i64, i64* %PC.i2145
  %5831 = add i64 %5830, 4
  store i64 %5831, i64* %PC.i2145
  %5832 = shl i64 %5829, 5
  %5833 = icmp slt i64 %5832, 0
  %5834 = shl i64 %5832, 1
  store i64 %5834, i64* %RDX.i2146, align 8
  %5835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5836 = zext i1 %5833 to i8
  store i8 %5836, i8* %5835, align 1
  %5837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5838 = trunc i64 %5834 to i32
  %5839 = and i32 %5838, 254
  %5840 = call i32 @llvm.ctpop.i32(i32 %5839)
  %5841 = trunc i32 %5840 to i8
  %5842 = and i8 %5841, 1
  %5843 = xor i8 %5842, 1
  store i8 %5843, i8* %5837, align 1
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5844, align 1
  %5845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5846 = icmp eq i64 %5834, 0
  %5847 = zext i1 %5846 to i8
  store i8 %5847, i8* %5845, align 1
  %5848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5849 = lshr i64 %5834, 63
  %5850 = trunc i64 %5849 to i8
  store i8 %5850, i8* %5848, align 1
  %5851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5851, align 1
  store %struct.Memory* %loadMem_4066b3, %struct.Memory** %MEMORY
  %loadMem_4066b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5853 = getelementptr inbounds %struct.GPR, %struct.GPR* %5852, i32 0, i32 33
  %5854 = getelementptr inbounds %struct.Reg, %struct.Reg* %5853, i32 0, i32 0
  %PC.i2142 = bitcast %union.anon* %5854 to i64*
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5856 = getelementptr inbounds %struct.GPR, %struct.GPR* %5855, i32 0, i32 5
  %5857 = getelementptr inbounds %struct.Reg, %struct.Reg* %5856, i32 0, i32 0
  %RCX.i2143 = bitcast %union.anon* %5857 to i64*
  %5858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5859 = getelementptr inbounds %struct.GPR, %struct.GPR* %5858, i32 0, i32 7
  %5860 = getelementptr inbounds %struct.Reg, %struct.Reg* %5859, i32 0, i32 0
  %RDX.i2144 = bitcast %union.anon* %5860 to i64*
  %5861 = load i64, i64* %RCX.i2143
  %5862 = load i64, i64* %RDX.i2144
  %5863 = load i64, i64* %PC.i2142
  %5864 = add i64 %5863, 3
  store i64 %5864, i64* %PC.i2142
  %5865 = add i64 %5862, %5861
  store i64 %5865, i64* %RCX.i2143, align 8
  %5866 = icmp ult i64 %5865, %5861
  %5867 = icmp ult i64 %5865, %5862
  %5868 = or i1 %5866, %5867
  %5869 = zext i1 %5868 to i8
  %5870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5869, i8* %5870, align 1
  %5871 = trunc i64 %5865 to i32
  %5872 = and i32 %5871, 255
  %5873 = call i32 @llvm.ctpop.i32(i32 %5872)
  %5874 = trunc i32 %5873 to i8
  %5875 = and i8 %5874, 1
  %5876 = xor i8 %5875, 1
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5876, i8* %5877, align 1
  %5878 = xor i64 %5862, %5861
  %5879 = xor i64 %5878, %5865
  %5880 = lshr i64 %5879, 4
  %5881 = trunc i64 %5880 to i8
  %5882 = and i8 %5881, 1
  %5883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5882, i8* %5883, align 1
  %5884 = icmp eq i64 %5865, 0
  %5885 = zext i1 %5884 to i8
  %5886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5885, i8* %5886, align 1
  %5887 = lshr i64 %5865, 63
  %5888 = trunc i64 %5887 to i8
  %5889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5888, i8* %5889, align 1
  %5890 = lshr i64 %5861, 63
  %5891 = lshr i64 %5862, 63
  %5892 = xor i64 %5887, %5890
  %5893 = xor i64 %5887, %5891
  %5894 = add i64 %5892, %5893
  %5895 = icmp eq i64 %5894, 2
  %5896 = zext i1 %5895 to i8
  %5897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5896, i8* %5897, align 1
  store %struct.Memory* %loadMem_4066b7, %struct.Memory** %MEMORY
  %loadMem_4066ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %5898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5899 = getelementptr inbounds %struct.GPR, %struct.GPR* %5898, i32 0, i32 33
  %5900 = getelementptr inbounds %struct.Reg, %struct.Reg* %5899, i32 0, i32 0
  %PC.i2139 = bitcast %union.anon* %5900 to i64*
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5902 = getelementptr inbounds %struct.GPR, %struct.GPR* %5901, i32 0, i32 1
  %5903 = getelementptr inbounds %struct.Reg, %struct.Reg* %5902, i32 0, i32 0
  %EAX.i2140 = bitcast %union.anon* %5903 to i32*
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5905 = getelementptr inbounds %struct.GPR, %struct.GPR* %5904, i32 0, i32 5
  %5906 = getelementptr inbounds %struct.Reg, %struct.Reg* %5905, i32 0, i32 0
  %RCX.i2141 = bitcast %union.anon* %5906 to i64*
  %5907 = load i64, i64* %RCX.i2141
  %5908 = add i64 %5907, 8
  %5909 = load i32, i32* %EAX.i2140
  %5910 = zext i32 %5909 to i64
  %5911 = load i64, i64* %PC.i2139
  %5912 = add i64 %5911, 3
  store i64 %5912, i64* %PC.i2139
  %5913 = inttoptr i64 %5908 to i32*
  store i32 %5909, i32* %5913
  store %struct.Memory* %loadMem_4066ba, %struct.Memory** %MEMORY
  %loadMem_4066bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5915 = getelementptr inbounds %struct.GPR, %struct.GPR* %5914, i32 0, i32 33
  %5916 = getelementptr inbounds %struct.Reg, %struct.Reg* %5915, i32 0, i32 0
  %PC.i2136 = bitcast %union.anon* %5916 to i64*
  %5917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5918 = getelementptr inbounds %struct.GPR, %struct.GPR* %5917, i32 0, i32 1
  %5919 = getelementptr inbounds %struct.Reg, %struct.Reg* %5918, i32 0, i32 0
  %RAX.i2137 = bitcast %union.anon* %5919 to i64*
  %5920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5921 = getelementptr inbounds %struct.GPR, %struct.GPR* %5920, i32 0, i32 15
  %5922 = getelementptr inbounds %struct.Reg, %struct.Reg* %5921, i32 0, i32 0
  %RBP.i2138 = bitcast %union.anon* %5922 to i64*
  %5923 = load i64, i64* %RBP.i2138
  %5924 = sub i64 %5923, 52
  %5925 = load i64, i64* %PC.i2136
  %5926 = add i64 %5925, 3
  store i64 %5926, i64* %PC.i2136
  %5927 = inttoptr i64 %5924 to i32*
  %5928 = load i32, i32* %5927
  %5929 = zext i32 %5928 to i64
  store i64 %5929, i64* %RAX.i2137, align 8
  store %struct.Memory* %loadMem_4066bd, %struct.Memory** %MEMORY
  %loadMem_4066c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5931 = getelementptr inbounds %struct.GPR, %struct.GPR* %5930, i32 0, i32 33
  %5932 = getelementptr inbounds %struct.Reg, %struct.Reg* %5931, i32 0, i32 0
  %PC.i2134 = bitcast %union.anon* %5932 to i64*
  %5933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5934 = getelementptr inbounds %struct.GPR, %struct.GPR* %5933, i32 0, i32 1
  %5935 = getelementptr inbounds %struct.Reg, %struct.Reg* %5934, i32 0, i32 0
  %RAX.i2135 = bitcast %union.anon* %5935 to i64*
  %5936 = load i64, i64* %RAX.i2135
  %5937 = load i64, i64* %PC.i2134
  %5938 = add i64 %5937, 2
  store i64 %5938, i64* %PC.i2134
  %5939 = trunc i64 %5936 to i32
  %5940 = shl i32 %5939, 1
  %5941 = icmp slt i32 %5939, 0
  %5942 = icmp slt i32 %5940, 0
  %5943 = xor i1 %5941, %5942
  %5944 = zext i32 %5940 to i64
  store i64 %5944, i64* %RAX.i2135, align 8
  %5945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5946 = zext i1 %5941 to i8
  store i8 %5946, i8* %5945, align 1
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5948 = and i32 %5940, 254
  %5949 = call i32 @llvm.ctpop.i32(i32 %5948)
  %5950 = trunc i32 %5949 to i8
  %5951 = and i8 %5950, 1
  %5952 = xor i8 %5951, 1
  store i8 %5952, i8* %5947, align 1
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5953, align 1
  %5954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5955 = icmp eq i32 %5940, 0
  %5956 = zext i1 %5955 to i8
  store i8 %5956, i8* %5954, align 1
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5958 = lshr i32 %5940, 31
  %5959 = trunc i32 %5958 to i8
  store i8 %5959, i8* %5957, align 1
  %5960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5961 = zext i1 %5943 to i8
  store i8 %5961, i8* %5960, align 1
  store %struct.Memory* %loadMem_4066c0, %struct.Memory** %MEMORY
  %loadMem_4066c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5963 = getelementptr inbounds %struct.GPR, %struct.GPR* %5962, i32 0, i32 33
  %5964 = getelementptr inbounds %struct.Reg, %struct.Reg* %5963, i32 0, i32 0
  %PC.i2131 = bitcast %union.anon* %5964 to i64*
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5966 = getelementptr inbounds %struct.GPR, %struct.GPR* %5965, i32 0, i32 1
  %5967 = getelementptr inbounds %struct.Reg, %struct.Reg* %5966, i32 0, i32 0
  %RAX.i2132 = bitcast %union.anon* %5967 to i64*
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5969 = getelementptr inbounds %struct.GPR, %struct.GPR* %5968, i32 0, i32 15
  %5970 = getelementptr inbounds %struct.Reg, %struct.Reg* %5969, i32 0, i32 0
  %RBP.i2133 = bitcast %union.anon* %5970 to i64*
  %5971 = load i64, i64* %RAX.i2132
  %5972 = load i64, i64* %RBP.i2133
  %5973 = sub i64 %5972, 56
  %5974 = load i64, i64* %PC.i2131
  %5975 = add i64 %5974, 3
  store i64 %5975, i64* %PC.i2131
  %5976 = trunc i64 %5971 to i32
  %5977 = inttoptr i64 %5973 to i32*
  %5978 = load i32, i32* %5977
  %5979 = add i32 %5978, %5976
  %5980 = zext i32 %5979 to i64
  store i64 %5980, i64* %RAX.i2132, align 8
  %5981 = icmp ult i32 %5979, %5976
  %5982 = icmp ult i32 %5979, %5978
  %5983 = or i1 %5981, %5982
  %5984 = zext i1 %5983 to i8
  %5985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5984, i8* %5985, align 1
  %5986 = and i32 %5979, 255
  %5987 = call i32 @llvm.ctpop.i32(i32 %5986)
  %5988 = trunc i32 %5987 to i8
  %5989 = and i8 %5988, 1
  %5990 = xor i8 %5989, 1
  %5991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5990, i8* %5991, align 1
  %5992 = xor i32 %5978, %5976
  %5993 = xor i32 %5992, %5979
  %5994 = lshr i32 %5993, 4
  %5995 = trunc i32 %5994 to i8
  %5996 = and i8 %5995, 1
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5996, i8* %5997, align 1
  %5998 = icmp eq i32 %5979, 0
  %5999 = zext i1 %5998 to i8
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5999, i8* %6000, align 1
  %6001 = lshr i32 %5979, 31
  %6002 = trunc i32 %6001 to i8
  %6003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6002, i8* %6003, align 1
  %6004 = lshr i32 %5976, 31
  %6005 = lshr i32 %5978, 31
  %6006 = xor i32 %6001, %6004
  %6007 = xor i32 %6001, %6005
  %6008 = add i32 %6006, %6007
  %6009 = icmp eq i32 %6008, 2
  %6010 = zext i1 %6009 to i8
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6010, i8* %6011, align 1
  store %struct.Memory* %loadMem_4066c3, %struct.Memory** %MEMORY
  %loadMem_4066c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6013 = getelementptr inbounds %struct.GPR, %struct.GPR* %6012, i32 0, i32 33
  %6014 = getelementptr inbounds %struct.Reg, %struct.Reg* %6013, i32 0, i32 0
  %PC.i2129 = bitcast %union.anon* %6014 to i64*
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6016 = getelementptr inbounds %struct.GPR, %struct.GPR* %6015, i32 0, i32 5
  %6017 = getelementptr inbounds %struct.Reg, %struct.Reg* %6016, i32 0, i32 0
  %RCX.i2130 = bitcast %union.anon* %6017 to i64*
  %6018 = load i64, i64* %PC.i2129
  %6019 = add i64 %6018, 8
  store i64 %6019, i64* %PC.i2129
  %6020 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6020, i64* %RCX.i2130, align 8
  store %struct.Memory* %loadMem_4066c6, %struct.Memory** %MEMORY
  %loadMem_4066ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6022 = getelementptr inbounds %struct.GPR, %struct.GPR* %6021, i32 0, i32 33
  %6023 = getelementptr inbounds %struct.Reg, %struct.Reg* %6022, i32 0, i32 0
  %PC.i2127 = bitcast %union.anon* %6023 to i64*
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6025 = getelementptr inbounds %struct.GPR, %struct.GPR* %6024, i32 0, i32 5
  %6026 = getelementptr inbounds %struct.Reg, %struct.Reg* %6025, i32 0, i32 0
  %RCX.i2128 = bitcast %union.anon* %6026 to i64*
  %6027 = load i64, i64* %RCX.i2128
  %6028 = load i64, i64* %PC.i2127
  %6029 = add i64 %6028, 7
  store i64 %6029, i64* %PC.i2127
  %6030 = add i64 13112, %6027
  store i64 %6030, i64* %RCX.i2128, align 8
  %6031 = icmp ult i64 %6030, %6027
  %6032 = icmp ult i64 %6030, 13112
  %6033 = or i1 %6031, %6032
  %6034 = zext i1 %6033 to i8
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6034, i8* %6035, align 1
  %6036 = trunc i64 %6030 to i32
  %6037 = and i32 %6036, 255
  %6038 = call i32 @llvm.ctpop.i32(i32 %6037)
  %6039 = trunc i32 %6038 to i8
  %6040 = and i8 %6039, 1
  %6041 = xor i8 %6040, 1
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6041, i8* %6042, align 1
  %6043 = xor i64 13112, %6027
  %6044 = xor i64 %6043, %6030
  %6045 = lshr i64 %6044, 4
  %6046 = trunc i64 %6045 to i8
  %6047 = and i8 %6046, 1
  %6048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6047, i8* %6048, align 1
  %6049 = icmp eq i64 %6030, 0
  %6050 = zext i1 %6049 to i8
  %6051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6050, i8* %6051, align 1
  %6052 = lshr i64 %6030, 63
  %6053 = trunc i64 %6052 to i8
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6053, i8* %6054, align 1
  %6055 = lshr i64 %6027, 63
  %6056 = xor i64 %6052, %6055
  %6057 = add i64 %6056, %6052
  %6058 = icmp eq i64 %6057, 2
  %6059 = zext i1 %6058 to i8
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6059, i8* %6060, align 1
  store %struct.Memory* %loadMem_4066ce, %struct.Memory** %MEMORY
  %loadMem_4066d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6062 = getelementptr inbounds %struct.GPR, %struct.GPR* %6061, i32 0, i32 33
  %6063 = getelementptr inbounds %struct.Reg, %struct.Reg* %6062, i32 0, i32 0
  %PC.i2124 = bitcast %union.anon* %6063 to i64*
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6065 = getelementptr inbounds %struct.GPR, %struct.GPR* %6064, i32 0, i32 7
  %6066 = getelementptr inbounds %struct.Reg, %struct.Reg* %6065, i32 0, i32 0
  %RDX.i2125 = bitcast %union.anon* %6066 to i64*
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6068 = getelementptr inbounds %struct.GPR, %struct.GPR* %6067, i32 0, i32 15
  %6069 = getelementptr inbounds %struct.Reg, %struct.Reg* %6068, i32 0, i32 0
  %RBP.i2126 = bitcast %union.anon* %6069 to i64*
  %6070 = load i64, i64* %RBP.i2126
  %6071 = sub i64 %6070, 24
  %6072 = load i64, i64* %PC.i2124
  %6073 = add i64 %6072, 4
  store i64 %6073, i64* %PC.i2124
  %6074 = inttoptr i64 %6071 to i32*
  %6075 = load i32, i32* %6074
  %6076 = sext i32 %6075 to i64
  store i64 %6076, i64* %RDX.i2125, align 8
  store %struct.Memory* %loadMem_4066d5, %struct.Memory** %MEMORY
  %loadMem_4066d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6078 = getelementptr inbounds %struct.GPR, %struct.GPR* %6077, i32 0, i32 33
  %6079 = getelementptr inbounds %struct.Reg, %struct.Reg* %6078, i32 0, i32 0
  %PC.i2122 = bitcast %union.anon* %6079 to i64*
  %6080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6081 = getelementptr inbounds %struct.GPR, %struct.GPR* %6080, i32 0, i32 7
  %6082 = getelementptr inbounds %struct.Reg, %struct.Reg* %6081, i32 0, i32 0
  %RDX.i2123 = bitcast %union.anon* %6082 to i64*
  %6083 = load i64, i64* %RDX.i2123
  %6084 = load i64, i64* %PC.i2122
  %6085 = add i64 %6084, 4
  store i64 %6085, i64* %PC.i2122
  %6086 = shl i64 %6083, 5
  %6087 = icmp slt i64 %6086, 0
  %6088 = shl i64 %6086, 1
  store i64 %6088, i64* %RDX.i2123, align 8
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6090 = zext i1 %6087 to i8
  store i8 %6090, i8* %6089, align 1
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6092 = trunc i64 %6088 to i32
  %6093 = and i32 %6092, 254
  %6094 = call i32 @llvm.ctpop.i32(i32 %6093)
  %6095 = trunc i32 %6094 to i8
  %6096 = and i8 %6095, 1
  %6097 = xor i8 %6096, 1
  store i8 %6097, i8* %6091, align 1
  %6098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6098, align 1
  %6099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6100 = icmp eq i64 %6088, 0
  %6101 = zext i1 %6100 to i8
  store i8 %6101, i8* %6099, align 1
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6103 = lshr i64 %6088, 63
  %6104 = trunc i64 %6103 to i8
  store i8 %6104, i8* %6102, align 1
  %6105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6105, align 1
  store %struct.Memory* %loadMem_4066d9, %struct.Memory** %MEMORY
  %loadMem_4066dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6107 = getelementptr inbounds %struct.GPR, %struct.GPR* %6106, i32 0, i32 33
  %6108 = getelementptr inbounds %struct.Reg, %struct.Reg* %6107, i32 0, i32 0
  %PC.i2119 = bitcast %union.anon* %6108 to i64*
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6110 = getelementptr inbounds %struct.GPR, %struct.GPR* %6109, i32 0, i32 5
  %6111 = getelementptr inbounds %struct.Reg, %struct.Reg* %6110, i32 0, i32 0
  %RCX.i2120 = bitcast %union.anon* %6111 to i64*
  %6112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6113 = getelementptr inbounds %struct.GPR, %struct.GPR* %6112, i32 0, i32 7
  %6114 = getelementptr inbounds %struct.Reg, %struct.Reg* %6113, i32 0, i32 0
  %RDX.i2121 = bitcast %union.anon* %6114 to i64*
  %6115 = load i64, i64* %RCX.i2120
  %6116 = load i64, i64* %RDX.i2121
  %6117 = load i64, i64* %PC.i2119
  %6118 = add i64 %6117, 3
  store i64 %6118, i64* %PC.i2119
  %6119 = add i64 %6116, %6115
  store i64 %6119, i64* %RCX.i2120, align 8
  %6120 = icmp ult i64 %6119, %6115
  %6121 = icmp ult i64 %6119, %6116
  %6122 = or i1 %6120, %6121
  %6123 = zext i1 %6122 to i8
  %6124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6123, i8* %6124, align 1
  %6125 = trunc i64 %6119 to i32
  %6126 = and i32 %6125, 255
  %6127 = call i32 @llvm.ctpop.i32(i32 %6126)
  %6128 = trunc i32 %6127 to i8
  %6129 = and i8 %6128, 1
  %6130 = xor i8 %6129, 1
  %6131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6130, i8* %6131, align 1
  %6132 = xor i64 %6116, %6115
  %6133 = xor i64 %6132, %6119
  %6134 = lshr i64 %6133, 4
  %6135 = trunc i64 %6134 to i8
  %6136 = and i8 %6135, 1
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6136, i8* %6137, align 1
  %6138 = icmp eq i64 %6119, 0
  %6139 = zext i1 %6138 to i8
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6139, i8* %6140, align 1
  %6141 = lshr i64 %6119, 63
  %6142 = trunc i64 %6141 to i8
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6142, i8* %6143, align 1
  %6144 = lshr i64 %6115, 63
  %6145 = lshr i64 %6116, 63
  %6146 = xor i64 %6141, %6144
  %6147 = xor i64 %6141, %6145
  %6148 = add i64 %6146, %6147
  %6149 = icmp eq i64 %6148, 2
  %6150 = zext i1 %6149 to i8
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6150, i8* %6151, align 1
  store %struct.Memory* %loadMem_4066dd, %struct.Memory** %MEMORY
  %loadMem_4066e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6153 = getelementptr inbounds %struct.GPR, %struct.GPR* %6152, i32 0, i32 33
  %6154 = getelementptr inbounds %struct.Reg, %struct.Reg* %6153, i32 0, i32 0
  %PC.i2116 = bitcast %union.anon* %6154 to i64*
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6156 = getelementptr inbounds %struct.GPR, %struct.GPR* %6155, i32 0, i32 1
  %6157 = getelementptr inbounds %struct.Reg, %struct.Reg* %6156, i32 0, i32 0
  %EAX.i2117 = bitcast %union.anon* %6157 to i32*
  %6158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6159 = getelementptr inbounds %struct.GPR, %struct.GPR* %6158, i32 0, i32 5
  %6160 = getelementptr inbounds %struct.Reg, %struct.Reg* %6159, i32 0, i32 0
  %RCX.i2118 = bitcast %union.anon* %6160 to i64*
  %6161 = load i64, i64* %RCX.i2118
  %6162 = add i64 %6161, 4
  %6163 = load i32, i32* %EAX.i2117
  %6164 = zext i32 %6163 to i64
  %6165 = load i64, i64* %PC.i2116
  %6166 = add i64 %6165, 3
  store i64 %6166, i64* %PC.i2116
  %6167 = inttoptr i64 %6162 to i32*
  store i32 %6163, i32* %6167
  store %struct.Memory* %loadMem_4066e0, %struct.Memory** %MEMORY
  %loadMem_4066e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6169 = getelementptr inbounds %struct.GPR, %struct.GPR* %6168, i32 0, i32 33
  %6170 = getelementptr inbounds %struct.Reg, %struct.Reg* %6169, i32 0, i32 0
  %PC.i2113 = bitcast %union.anon* %6170 to i64*
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 1
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %RAX.i2114 = bitcast %union.anon* %6173 to i64*
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6175 = getelementptr inbounds %struct.GPR, %struct.GPR* %6174, i32 0, i32 15
  %6176 = getelementptr inbounds %struct.Reg, %struct.Reg* %6175, i32 0, i32 0
  %RBP.i2115 = bitcast %union.anon* %6176 to i64*
  %6177 = load i64, i64* %RBP.i2115
  %6178 = sub i64 %6177, 52
  %6179 = load i64, i64* %PC.i2113
  %6180 = add i64 %6179, 3
  store i64 %6180, i64* %PC.i2113
  %6181 = inttoptr i64 %6178 to i32*
  %6182 = load i32, i32* %6181
  %6183 = zext i32 %6182 to i64
  store i64 %6183, i64* %RAX.i2114, align 8
  store %struct.Memory* %loadMem_4066e3, %struct.Memory** %MEMORY
  %loadMem_4066e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6185 = getelementptr inbounds %struct.GPR, %struct.GPR* %6184, i32 0, i32 33
  %6186 = getelementptr inbounds %struct.Reg, %struct.Reg* %6185, i32 0, i32 0
  %PC.i2110 = bitcast %union.anon* %6186 to i64*
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 9
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %RSI.i2111 = bitcast %union.anon* %6189 to i64*
  %6190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6191 = getelementptr inbounds %struct.GPR, %struct.GPR* %6190, i32 0, i32 15
  %6192 = getelementptr inbounds %struct.Reg, %struct.Reg* %6191, i32 0, i32 0
  %RBP.i2112 = bitcast %union.anon* %6192 to i64*
  %6193 = load i64, i64* %RBP.i2112
  %6194 = sub i64 %6193, 56
  %6195 = load i64, i64* %PC.i2110
  %6196 = add i64 %6195, 3
  store i64 %6196, i64* %PC.i2110
  %6197 = inttoptr i64 %6194 to i32*
  %6198 = load i32, i32* %6197
  %6199 = zext i32 %6198 to i64
  store i64 %6199, i64* %RSI.i2111, align 8
  store %struct.Memory* %loadMem_4066e6, %struct.Memory** %MEMORY
  %loadMem_4066e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6201 = getelementptr inbounds %struct.GPR, %struct.GPR* %6200, i32 0, i32 33
  %6202 = getelementptr inbounds %struct.Reg, %struct.Reg* %6201, i32 0, i32 0
  %PC.i2108 = bitcast %union.anon* %6202 to i64*
  %6203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6204 = getelementptr inbounds %struct.GPR, %struct.GPR* %6203, i32 0, i32 9
  %6205 = getelementptr inbounds %struct.Reg, %struct.Reg* %6204, i32 0, i32 0
  %RSI.i2109 = bitcast %union.anon* %6205 to i64*
  %6206 = load i64, i64* %RSI.i2109
  %6207 = load i64, i64* %PC.i2108
  %6208 = add i64 %6207, 2
  store i64 %6208, i64* %PC.i2108
  %6209 = trunc i64 %6206 to i32
  %6210 = shl i32 %6209, 1
  %6211 = icmp slt i32 %6209, 0
  %6212 = icmp slt i32 %6210, 0
  %6213 = xor i1 %6211, %6212
  %6214 = zext i32 %6210 to i64
  store i64 %6214, i64* %RSI.i2109, align 8
  %6215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6216 = zext i1 %6211 to i8
  store i8 %6216, i8* %6215, align 1
  %6217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6218 = and i32 %6210, 254
  %6219 = call i32 @llvm.ctpop.i32(i32 %6218)
  %6220 = trunc i32 %6219 to i8
  %6221 = and i8 %6220, 1
  %6222 = xor i8 %6221, 1
  store i8 %6222, i8* %6217, align 1
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6223, align 1
  %6224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6225 = icmp eq i32 %6210, 0
  %6226 = zext i1 %6225 to i8
  store i8 %6226, i8* %6224, align 1
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6228 = lshr i32 %6210, 31
  %6229 = trunc i32 %6228 to i8
  store i8 %6229, i8* %6227, align 1
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6231 = zext i1 %6213 to i8
  store i8 %6231, i8* %6230, align 1
  store %struct.Memory* %loadMem_4066e9, %struct.Memory** %MEMORY
  %loadMem_4066ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %6232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6233 = getelementptr inbounds %struct.GPR, %struct.GPR* %6232, i32 0, i32 33
  %6234 = getelementptr inbounds %struct.Reg, %struct.Reg* %6233, i32 0, i32 0
  %PC.i2105 = bitcast %union.anon* %6234 to i64*
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6236 = getelementptr inbounds %struct.GPR, %struct.GPR* %6235, i32 0, i32 9
  %6237 = getelementptr inbounds %struct.Reg, %struct.Reg* %6236, i32 0, i32 0
  %ESI.i2106 = bitcast %union.anon* %6237 to i32*
  %6238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6239 = getelementptr inbounds %struct.GPR, %struct.GPR* %6238, i32 0, i32 1
  %6240 = getelementptr inbounds %struct.Reg, %struct.Reg* %6239, i32 0, i32 0
  %RAX.i2107 = bitcast %union.anon* %6240 to i64*
  %6241 = load i64, i64* %RAX.i2107
  %6242 = load i32, i32* %ESI.i2106
  %6243 = zext i32 %6242 to i64
  %6244 = load i64, i64* %PC.i2105
  %6245 = add i64 %6244, 2
  store i64 %6245, i64* %PC.i2105
  %6246 = trunc i64 %6241 to i32
  %6247 = sub i32 %6246, %6242
  %6248 = zext i32 %6247 to i64
  store i64 %6248, i64* %RAX.i2107, align 8
  %6249 = icmp ult i32 %6246, %6242
  %6250 = zext i1 %6249 to i8
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6250, i8* %6251, align 1
  %6252 = and i32 %6247, 255
  %6253 = call i32 @llvm.ctpop.i32(i32 %6252)
  %6254 = trunc i32 %6253 to i8
  %6255 = and i8 %6254, 1
  %6256 = xor i8 %6255, 1
  %6257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6256, i8* %6257, align 1
  %6258 = xor i64 %6243, %6241
  %6259 = trunc i64 %6258 to i32
  %6260 = xor i32 %6259, %6247
  %6261 = lshr i32 %6260, 4
  %6262 = trunc i32 %6261 to i8
  %6263 = and i8 %6262, 1
  %6264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6263, i8* %6264, align 1
  %6265 = icmp eq i32 %6247, 0
  %6266 = zext i1 %6265 to i8
  %6267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6266, i8* %6267, align 1
  %6268 = lshr i32 %6247, 31
  %6269 = trunc i32 %6268 to i8
  %6270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6269, i8* %6270, align 1
  %6271 = lshr i32 %6246, 31
  %6272 = lshr i32 %6242, 31
  %6273 = xor i32 %6272, %6271
  %6274 = xor i32 %6268, %6271
  %6275 = add i32 %6274, %6273
  %6276 = icmp eq i32 %6275, 2
  %6277 = zext i1 %6276 to i8
  %6278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6277, i8* %6278, align 1
  store %struct.Memory* %loadMem_4066ec, %struct.Memory** %MEMORY
  %loadMem_4066ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6280 = getelementptr inbounds %struct.GPR, %struct.GPR* %6279, i32 0, i32 33
  %6281 = getelementptr inbounds %struct.Reg, %struct.Reg* %6280, i32 0, i32 0
  %PC.i2103 = bitcast %union.anon* %6281 to i64*
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6283 = getelementptr inbounds %struct.GPR, %struct.GPR* %6282, i32 0, i32 5
  %6284 = getelementptr inbounds %struct.Reg, %struct.Reg* %6283, i32 0, i32 0
  %RCX.i2104 = bitcast %union.anon* %6284 to i64*
  %6285 = load i64, i64* %PC.i2103
  %6286 = add i64 %6285, 8
  store i64 %6286, i64* %PC.i2103
  %6287 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6287, i64* %RCX.i2104, align 8
  store %struct.Memory* %loadMem_4066ee, %struct.Memory** %MEMORY
  %loadMem_4066f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 33
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %PC.i2101 = bitcast %union.anon* %6290 to i64*
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6292 = getelementptr inbounds %struct.GPR, %struct.GPR* %6291, i32 0, i32 5
  %6293 = getelementptr inbounds %struct.Reg, %struct.Reg* %6292, i32 0, i32 0
  %RCX.i2102 = bitcast %union.anon* %6293 to i64*
  %6294 = load i64, i64* %RCX.i2102
  %6295 = load i64, i64* %PC.i2101
  %6296 = add i64 %6295, 7
  store i64 %6296, i64* %PC.i2101
  %6297 = add i64 13112, %6294
  store i64 %6297, i64* %RCX.i2102, align 8
  %6298 = icmp ult i64 %6297, %6294
  %6299 = icmp ult i64 %6297, 13112
  %6300 = or i1 %6298, %6299
  %6301 = zext i1 %6300 to i8
  %6302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6301, i8* %6302, align 1
  %6303 = trunc i64 %6297 to i32
  %6304 = and i32 %6303, 255
  %6305 = call i32 @llvm.ctpop.i32(i32 %6304)
  %6306 = trunc i32 %6305 to i8
  %6307 = and i8 %6306, 1
  %6308 = xor i8 %6307, 1
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6308, i8* %6309, align 1
  %6310 = xor i64 13112, %6294
  %6311 = xor i64 %6310, %6297
  %6312 = lshr i64 %6311, 4
  %6313 = trunc i64 %6312 to i8
  %6314 = and i8 %6313, 1
  %6315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6314, i8* %6315, align 1
  %6316 = icmp eq i64 %6297, 0
  %6317 = zext i1 %6316 to i8
  %6318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6317, i8* %6318, align 1
  %6319 = lshr i64 %6297, 63
  %6320 = trunc i64 %6319 to i8
  %6321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6320, i8* %6321, align 1
  %6322 = lshr i64 %6294, 63
  %6323 = xor i64 %6319, %6322
  %6324 = add i64 %6323, %6319
  %6325 = icmp eq i64 %6324, 2
  %6326 = zext i1 %6325 to i8
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6326, i8* %6327, align 1
  store %struct.Memory* %loadMem_4066f6, %struct.Memory** %MEMORY
  %loadMem_4066fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6329 = getelementptr inbounds %struct.GPR, %struct.GPR* %6328, i32 0, i32 33
  %6330 = getelementptr inbounds %struct.Reg, %struct.Reg* %6329, i32 0, i32 0
  %PC.i2098 = bitcast %union.anon* %6330 to i64*
  %6331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6332 = getelementptr inbounds %struct.GPR, %struct.GPR* %6331, i32 0, i32 7
  %6333 = getelementptr inbounds %struct.Reg, %struct.Reg* %6332, i32 0, i32 0
  %RDX.i2099 = bitcast %union.anon* %6333 to i64*
  %6334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6335 = getelementptr inbounds %struct.GPR, %struct.GPR* %6334, i32 0, i32 15
  %6336 = getelementptr inbounds %struct.Reg, %struct.Reg* %6335, i32 0, i32 0
  %RBP.i2100 = bitcast %union.anon* %6336 to i64*
  %6337 = load i64, i64* %RBP.i2100
  %6338 = sub i64 %6337, 24
  %6339 = load i64, i64* %PC.i2098
  %6340 = add i64 %6339, 4
  store i64 %6340, i64* %PC.i2098
  %6341 = inttoptr i64 %6338 to i32*
  %6342 = load i32, i32* %6341
  %6343 = sext i32 %6342 to i64
  store i64 %6343, i64* %RDX.i2099, align 8
  store %struct.Memory* %loadMem_4066fd, %struct.Memory** %MEMORY
  %loadMem_406701 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6345 = getelementptr inbounds %struct.GPR, %struct.GPR* %6344, i32 0, i32 33
  %6346 = getelementptr inbounds %struct.Reg, %struct.Reg* %6345, i32 0, i32 0
  %PC.i2096 = bitcast %union.anon* %6346 to i64*
  %6347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6348 = getelementptr inbounds %struct.GPR, %struct.GPR* %6347, i32 0, i32 7
  %6349 = getelementptr inbounds %struct.Reg, %struct.Reg* %6348, i32 0, i32 0
  %RDX.i2097 = bitcast %union.anon* %6349 to i64*
  %6350 = load i64, i64* %RDX.i2097
  %6351 = load i64, i64* %PC.i2096
  %6352 = add i64 %6351, 4
  store i64 %6352, i64* %PC.i2096
  %6353 = shl i64 %6350, 5
  %6354 = icmp slt i64 %6353, 0
  %6355 = shl i64 %6353, 1
  store i64 %6355, i64* %RDX.i2097, align 8
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6357 = zext i1 %6354 to i8
  store i8 %6357, i8* %6356, align 1
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6359 = trunc i64 %6355 to i32
  %6360 = and i32 %6359, 254
  %6361 = call i32 @llvm.ctpop.i32(i32 %6360)
  %6362 = trunc i32 %6361 to i8
  %6363 = and i8 %6362, 1
  %6364 = xor i8 %6363, 1
  store i8 %6364, i8* %6358, align 1
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6365, align 1
  %6366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6367 = icmp eq i64 %6355, 0
  %6368 = zext i1 %6367 to i8
  store i8 %6368, i8* %6366, align 1
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6370 = lshr i64 %6355, 63
  %6371 = trunc i64 %6370 to i8
  store i8 %6371, i8* %6369, align 1
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6372, align 1
  store %struct.Memory* %loadMem_406701, %struct.Memory** %MEMORY
  %loadMem_406705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6374 = getelementptr inbounds %struct.GPR, %struct.GPR* %6373, i32 0, i32 33
  %6375 = getelementptr inbounds %struct.Reg, %struct.Reg* %6374, i32 0, i32 0
  %PC.i2093 = bitcast %union.anon* %6375 to i64*
  %6376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6377 = getelementptr inbounds %struct.GPR, %struct.GPR* %6376, i32 0, i32 5
  %6378 = getelementptr inbounds %struct.Reg, %struct.Reg* %6377, i32 0, i32 0
  %RCX.i2094 = bitcast %union.anon* %6378 to i64*
  %6379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6380 = getelementptr inbounds %struct.GPR, %struct.GPR* %6379, i32 0, i32 7
  %6381 = getelementptr inbounds %struct.Reg, %struct.Reg* %6380, i32 0, i32 0
  %RDX.i2095 = bitcast %union.anon* %6381 to i64*
  %6382 = load i64, i64* %RCX.i2094
  %6383 = load i64, i64* %RDX.i2095
  %6384 = load i64, i64* %PC.i2093
  %6385 = add i64 %6384, 3
  store i64 %6385, i64* %PC.i2093
  %6386 = add i64 %6383, %6382
  store i64 %6386, i64* %RCX.i2094, align 8
  %6387 = icmp ult i64 %6386, %6382
  %6388 = icmp ult i64 %6386, %6383
  %6389 = or i1 %6387, %6388
  %6390 = zext i1 %6389 to i8
  %6391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6390, i8* %6391, align 1
  %6392 = trunc i64 %6386 to i32
  %6393 = and i32 %6392, 255
  %6394 = call i32 @llvm.ctpop.i32(i32 %6393)
  %6395 = trunc i32 %6394 to i8
  %6396 = and i8 %6395, 1
  %6397 = xor i8 %6396, 1
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6397, i8* %6398, align 1
  %6399 = xor i64 %6383, %6382
  %6400 = xor i64 %6399, %6386
  %6401 = lshr i64 %6400, 4
  %6402 = trunc i64 %6401 to i8
  %6403 = and i8 %6402, 1
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6403, i8* %6404, align 1
  %6405 = icmp eq i64 %6386, 0
  %6406 = zext i1 %6405 to i8
  %6407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6406, i8* %6407, align 1
  %6408 = lshr i64 %6386, 63
  %6409 = trunc i64 %6408 to i8
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6409, i8* %6410, align 1
  %6411 = lshr i64 %6382, 63
  %6412 = lshr i64 %6383, 63
  %6413 = xor i64 %6408, %6411
  %6414 = xor i64 %6408, %6412
  %6415 = add i64 %6413, %6414
  %6416 = icmp eq i64 %6415, 2
  %6417 = zext i1 %6416 to i8
  %6418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6417, i8* %6418, align 1
  store %struct.Memory* %loadMem_406705, %struct.Memory** %MEMORY
  %loadMem_406708 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6420 = getelementptr inbounds %struct.GPR, %struct.GPR* %6419, i32 0, i32 33
  %6421 = getelementptr inbounds %struct.Reg, %struct.Reg* %6420, i32 0, i32 0
  %PC.i2090 = bitcast %union.anon* %6421 to i64*
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6423 = getelementptr inbounds %struct.GPR, %struct.GPR* %6422, i32 0, i32 1
  %6424 = getelementptr inbounds %struct.Reg, %struct.Reg* %6423, i32 0, i32 0
  %EAX.i2091 = bitcast %union.anon* %6424 to i32*
  %6425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6426 = getelementptr inbounds %struct.GPR, %struct.GPR* %6425, i32 0, i32 5
  %6427 = getelementptr inbounds %struct.Reg, %struct.Reg* %6426, i32 0, i32 0
  %RCX.i2092 = bitcast %union.anon* %6427 to i64*
  %6428 = load i64, i64* %RCX.i2092
  %6429 = add i64 %6428, 12
  %6430 = load i32, i32* %EAX.i2091
  %6431 = zext i32 %6430 to i64
  %6432 = load i64, i64* %PC.i2090
  %6433 = add i64 %6432, 3
  store i64 %6433, i64* %PC.i2090
  %6434 = inttoptr i64 %6429 to i32*
  store i32 %6430, i32* %6434
  store %struct.Memory* %loadMem_406708, %struct.Memory** %MEMORY
  %loadMem_40670b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6436 = getelementptr inbounds %struct.GPR, %struct.GPR* %6435, i32 0, i32 33
  %6437 = getelementptr inbounds %struct.Reg, %struct.Reg* %6436, i32 0, i32 0
  %PC.i2087 = bitcast %union.anon* %6437 to i64*
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6439 = getelementptr inbounds %struct.GPR, %struct.GPR* %6438, i32 0, i32 1
  %6440 = getelementptr inbounds %struct.Reg, %struct.Reg* %6439, i32 0, i32 0
  %RAX.i2088 = bitcast %union.anon* %6440 to i64*
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 15
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %RBP.i2089 = bitcast %union.anon* %6443 to i64*
  %6444 = load i64, i64* %RBP.i2089
  %6445 = sub i64 %6444, 24
  %6446 = load i64, i64* %PC.i2087
  %6447 = add i64 %6446, 3
  store i64 %6447, i64* %PC.i2087
  %6448 = inttoptr i64 %6445 to i32*
  %6449 = load i32, i32* %6448
  %6450 = zext i32 %6449 to i64
  store i64 %6450, i64* %RAX.i2088, align 8
  store %struct.Memory* %loadMem_40670b, %struct.Memory** %MEMORY
  %loadMem_40670e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6452 = getelementptr inbounds %struct.GPR, %struct.GPR* %6451, i32 0, i32 33
  %6453 = getelementptr inbounds %struct.Reg, %struct.Reg* %6452, i32 0, i32 0
  %PC.i2085 = bitcast %union.anon* %6453 to i64*
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6455 = getelementptr inbounds %struct.GPR, %struct.GPR* %6454, i32 0, i32 1
  %6456 = getelementptr inbounds %struct.Reg, %struct.Reg* %6455, i32 0, i32 0
  %RAX.i2086 = bitcast %union.anon* %6456 to i64*
  %6457 = load i64, i64* %RAX.i2086
  %6458 = load i64, i64* %PC.i2085
  %6459 = add i64 %6458, 3
  store i64 %6459, i64* %PC.i2085
  %6460 = trunc i64 %6457 to i32
  %6461 = add i32 1, %6460
  %6462 = zext i32 %6461 to i64
  store i64 %6462, i64* %RAX.i2086, align 8
  %6463 = icmp ult i32 %6461, %6460
  %6464 = icmp ult i32 %6461, 1
  %6465 = or i1 %6463, %6464
  %6466 = zext i1 %6465 to i8
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6466, i8* %6467, align 1
  %6468 = and i32 %6461, 255
  %6469 = call i32 @llvm.ctpop.i32(i32 %6468)
  %6470 = trunc i32 %6469 to i8
  %6471 = and i8 %6470, 1
  %6472 = xor i8 %6471, 1
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6472, i8* %6473, align 1
  %6474 = xor i64 1, %6457
  %6475 = trunc i64 %6474 to i32
  %6476 = xor i32 %6475, %6461
  %6477 = lshr i32 %6476, 4
  %6478 = trunc i32 %6477 to i8
  %6479 = and i8 %6478, 1
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6479, i8* %6480, align 1
  %6481 = icmp eq i32 %6461, 0
  %6482 = zext i1 %6481 to i8
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6482, i8* %6483, align 1
  %6484 = lshr i32 %6461, 31
  %6485 = trunc i32 %6484 to i8
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6485, i8* %6486, align 1
  %6487 = lshr i32 %6460, 31
  %6488 = xor i32 %6484, %6487
  %6489 = add i32 %6488, %6484
  %6490 = icmp eq i32 %6489, 2
  %6491 = zext i1 %6490 to i8
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6491, i8* %6492, align 1
  store %struct.Memory* %loadMem_40670e, %struct.Memory** %MEMORY
  %loadMem_406711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6494 = getelementptr inbounds %struct.GPR, %struct.GPR* %6493, i32 0, i32 33
  %6495 = getelementptr inbounds %struct.Reg, %struct.Reg* %6494, i32 0, i32 0
  %PC.i2082 = bitcast %union.anon* %6495 to i64*
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6497 = getelementptr inbounds %struct.GPR, %struct.GPR* %6496, i32 0, i32 1
  %6498 = getelementptr inbounds %struct.Reg, %struct.Reg* %6497, i32 0, i32 0
  %EAX.i2083 = bitcast %union.anon* %6498 to i32*
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6500 = getelementptr inbounds %struct.GPR, %struct.GPR* %6499, i32 0, i32 15
  %6501 = getelementptr inbounds %struct.Reg, %struct.Reg* %6500, i32 0, i32 0
  %RBP.i2084 = bitcast %union.anon* %6501 to i64*
  %6502 = load i64, i64* %RBP.i2084
  %6503 = sub i64 %6502, 24
  %6504 = load i32, i32* %EAX.i2083
  %6505 = zext i32 %6504 to i64
  %6506 = load i64, i64* %PC.i2082
  %6507 = add i64 %6506, 3
  store i64 %6507, i64* %PC.i2082
  %6508 = inttoptr i64 %6503 to i32*
  store i32 %6504, i32* %6508
  store %struct.Memory* %loadMem_406711, %struct.Memory** %MEMORY
  %loadMem_406714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6510 = getelementptr inbounds %struct.GPR, %struct.GPR* %6509, i32 0, i32 33
  %6511 = getelementptr inbounds %struct.Reg, %struct.Reg* %6510, i32 0, i32 0
  %PC.i2081 = bitcast %union.anon* %6511 to i64*
  %6512 = load i64, i64* %PC.i2081
  %6513 = add i64 %6512, -403
  %6514 = load i64, i64* %PC.i2081
  %6515 = add i64 %6514, 5
  store i64 %6515, i64* %PC.i2081
  %6516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6513, i64* %6516, align 8
  store %struct.Memory* %loadMem_406714, %struct.Memory** %MEMORY
  br label %block_.L_406581

block_.L_406719:                                  ; preds = %block_4065b5
  %loadMem_406719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6518 = getelementptr inbounds %struct.GPR, %struct.GPR* %6517, i32 0, i32 33
  %6519 = getelementptr inbounds %struct.Reg, %struct.Reg* %6518, i32 0, i32 0
  %PC.i2079 = bitcast %union.anon* %6519 to i64*
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 15
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %RBP.i2080 = bitcast %union.anon* %6522 to i64*
  %6523 = load i64, i64* %RBP.i2080
  %6524 = sub i64 %6523, 100
  %6525 = load i64, i64* %PC.i2079
  %6526 = add i64 %6525, 7
  store i64 %6526, i64* %PC.i2079
  %6527 = inttoptr i64 %6524 to i32*
  store i32 0, i32* %6527
  store %struct.Memory* %loadMem_406719, %struct.Memory** %MEMORY
  %loadMem_406720 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6529 = getelementptr inbounds %struct.GPR, %struct.GPR* %6528, i32 0, i32 33
  %6530 = getelementptr inbounds %struct.Reg, %struct.Reg* %6529, i32 0, i32 0
  %PC.i2077 = bitcast %union.anon* %6530 to i64*
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6532 = getelementptr inbounds %struct.GPR, %struct.GPR* %6531, i32 0, i32 15
  %6533 = getelementptr inbounds %struct.Reg, %struct.Reg* %6532, i32 0, i32 0
  %RBP.i2078 = bitcast %union.anon* %6533 to i64*
  %6534 = load i64, i64* %RBP.i2078
  %6535 = sub i64 %6534, 96
  %6536 = load i64, i64* %PC.i2077
  %6537 = add i64 %6536, 7
  store i64 %6537, i64* %PC.i2077
  %6538 = inttoptr i64 %6535 to i32*
  store i32 -1, i32* %6538
  store %struct.Memory* %loadMem_406720, %struct.Memory** %MEMORY
  %loadMem_406727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6540 = getelementptr inbounds %struct.GPR, %struct.GPR* %6539, i32 0, i32 33
  %6541 = getelementptr inbounds %struct.Reg, %struct.Reg* %6540, i32 0, i32 0
  %PC.i2075 = bitcast %union.anon* %6541 to i64*
  %6542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6543 = getelementptr inbounds %struct.GPR, %struct.GPR* %6542, i32 0, i32 15
  %6544 = getelementptr inbounds %struct.Reg, %struct.Reg* %6543, i32 0, i32 0
  %RBP.i2076 = bitcast %union.anon* %6544 to i64*
  %6545 = load i64, i64* %RBP.i2076
  %6546 = sub i64 %6545, 92
  %6547 = load i64, i64* %PC.i2075
  %6548 = add i64 %6547, 7
  store i64 %6548, i64* %PC.i2075
  %6549 = inttoptr i64 %6546 to i32*
  store i32 0, i32* %6549
  store %struct.Memory* %loadMem_406727, %struct.Memory** %MEMORY
  %loadMem_40672e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6551 = getelementptr inbounds %struct.GPR, %struct.GPR* %6550, i32 0, i32 33
  %6552 = getelementptr inbounds %struct.Reg, %struct.Reg* %6551, i32 0, i32 0
  %PC.i2073 = bitcast %union.anon* %6552 to i64*
  %6553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6554 = getelementptr inbounds %struct.GPR, %struct.GPR* %6553, i32 0, i32 15
  %6555 = getelementptr inbounds %struct.Reg, %struct.Reg* %6554, i32 0, i32 0
  %RBP.i2074 = bitcast %union.anon* %6555 to i64*
  %6556 = load i64, i64* %RBP.i2074
  %6557 = sub i64 %6556, 84
  %6558 = load i64, i64* %PC.i2073
  %6559 = add i64 %6558, 7
  store i64 %6559, i64* %PC.i2073
  %6560 = inttoptr i64 %6557 to i32*
  store i32 0, i32* %6560
  store %struct.Memory* %loadMem_40672e, %struct.Memory** %MEMORY
  br label %block_.L_406735

block_.L_406735:                                  ; preds = %block_.L_406bc8, %block_.L_406719
  %loadMem_406735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6562 = getelementptr inbounds %struct.GPR, %struct.GPR* %6561, i32 0, i32 33
  %6563 = getelementptr inbounds %struct.Reg, %struct.Reg* %6562, i32 0, i32 0
  %PC.i2071 = bitcast %union.anon* %6563 to i64*
  %6564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6565 = getelementptr inbounds %struct.GPR, %struct.GPR* %6564, i32 0, i32 15
  %6566 = getelementptr inbounds %struct.Reg, %struct.Reg* %6565, i32 0, i32 0
  %RBP.i2072 = bitcast %union.anon* %6566 to i64*
  %6567 = load i64, i64* %RBP.i2072
  %6568 = sub i64 %6567, 84
  %6569 = load i64, i64* %PC.i2071
  %6570 = add i64 %6569, 4
  store i64 %6570, i64* %PC.i2071
  %6571 = inttoptr i64 %6568 to i32*
  %6572 = load i32, i32* %6571
  %6573 = sub i32 %6572, 16
  %6574 = icmp ult i32 %6572, 16
  %6575 = zext i1 %6574 to i8
  %6576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6575, i8* %6576, align 1
  %6577 = and i32 %6573, 255
  %6578 = call i32 @llvm.ctpop.i32(i32 %6577)
  %6579 = trunc i32 %6578 to i8
  %6580 = and i8 %6579, 1
  %6581 = xor i8 %6580, 1
  %6582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6581, i8* %6582, align 1
  %6583 = xor i32 %6572, 16
  %6584 = xor i32 %6583, %6573
  %6585 = lshr i32 %6584, 4
  %6586 = trunc i32 %6585 to i8
  %6587 = and i8 %6586, 1
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6587, i8* %6588, align 1
  %6589 = icmp eq i32 %6573, 0
  %6590 = zext i1 %6589 to i8
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6590, i8* %6591, align 1
  %6592 = lshr i32 %6573, 31
  %6593 = trunc i32 %6592 to i8
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6593, i8* %6594, align 1
  %6595 = lshr i32 %6572, 31
  %6596 = xor i32 %6592, %6595
  %6597 = add i32 %6596, %6595
  %6598 = icmp eq i32 %6597, 2
  %6599 = zext i1 %6598 to i8
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6599, i8* %6600, align 1
  store %struct.Memory* %loadMem_406735, %struct.Memory** %MEMORY
  %loadMem_406739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6602 = getelementptr inbounds %struct.GPR, %struct.GPR* %6601, i32 0, i32 33
  %6603 = getelementptr inbounds %struct.Reg, %struct.Reg* %6602, i32 0, i32 0
  %PC.i2070 = bitcast %union.anon* %6603 to i64*
  %6604 = load i64, i64* %PC.i2070
  %6605 = add i64 %6604, 1181
  %6606 = load i64, i64* %PC.i2070
  %6607 = add i64 %6606, 6
  %6608 = load i64, i64* %PC.i2070
  %6609 = add i64 %6608, 6
  store i64 %6609, i64* %PC.i2070
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6611 = load i8, i8* %6610, align 1
  %6612 = icmp ne i8 %6611, 0
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6614 = load i8, i8* %6613, align 1
  %6615 = icmp ne i8 %6614, 0
  %6616 = xor i1 %6612, %6615
  %6617 = xor i1 %6616, true
  %6618 = zext i1 %6617 to i8
  store i8 %6618, i8* %BRANCH_TAKEN, align 1
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6620 = select i1 %6616, i64 %6607, i64 %6605
  store i64 %6620, i64* %6619, align 8
  store %struct.Memory* %loadMem_406739, %struct.Memory** %MEMORY
  %loadBr_406739 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406739 = icmp eq i8 %loadBr_406739, 1
  br i1 %cmpBr_406739, label %block_.L_406bd6, label %block_40673f

block_40673f:                                     ; preds = %block_.L_406735
  %loadMem_40673f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6622 = getelementptr inbounds %struct.GPR, %struct.GPR* %6621, i32 0, i32 33
  %6623 = getelementptr inbounds %struct.Reg, %struct.Reg* %6622, i32 0, i32 0
  %PC.i2068 = bitcast %union.anon* %6623 to i64*
  %6624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6625 = getelementptr inbounds %struct.GPR, %struct.GPR* %6624, i32 0, i32 1
  %6626 = getelementptr inbounds %struct.Reg, %struct.Reg* %6625, i32 0, i32 0
  %RAX.i2069 = bitcast %union.anon* %6626 to i64*
  %6627 = load i64, i64* %PC.i2068
  %6628 = add i64 %6627, 8
  store i64 %6628, i64* %PC.i2068
  %6629 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6629, i64* %RAX.i2069, align 8
  store %struct.Memory* %loadMem_40673f, %struct.Memory** %MEMORY
  %loadMem_406747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6631 = getelementptr inbounds %struct.GPR, %struct.GPR* %6630, i32 0, i32 33
  %6632 = getelementptr inbounds %struct.Reg, %struct.Reg* %6631, i32 0, i32 0
  %PC.i2066 = bitcast %union.anon* %6632 to i64*
  %6633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6634 = getelementptr inbounds %struct.GPR, %struct.GPR* %6633, i32 0, i32 1
  %6635 = getelementptr inbounds %struct.Reg, %struct.Reg* %6634, i32 0, i32 0
  %RAX.i2067 = bitcast %union.anon* %6635 to i64*
  %6636 = load i64, i64* %RAX.i2067
  %6637 = add i64 %6636, 72444
  %6638 = load i64, i64* %PC.i2066
  %6639 = add i64 %6638, 7
  store i64 %6639, i64* %PC.i2066
  %6640 = inttoptr i64 %6637 to i32*
  %6641 = load i32, i32* %6640
  %6642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6642, align 1
  %6643 = and i32 %6641, 255
  %6644 = call i32 @llvm.ctpop.i32(i32 %6643)
  %6645 = trunc i32 %6644 to i8
  %6646 = and i8 %6645, 1
  %6647 = xor i8 %6646, 1
  %6648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6647, i8* %6648, align 1
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6649, align 1
  %6650 = icmp eq i32 %6641, 0
  %6651 = zext i1 %6650 to i8
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6651, i8* %6652, align 1
  %6653 = lshr i32 %6641, 31
  %6654 = trunc i32 %6653 to i8
  %6655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6654, i8* %6655, align 1
  %6656 = lshr i32 %6641, 31
  %6657 = xor i32 %6653, %6656
  %6658 = add i32 %6657, %6656
  %6659 = icmp eq i32 %6658, 2
  %6660 = zext i1 %6659 to i8
  %6661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6660, i8* %6661, align 1
  store %struct.Memory* %loadMem_406747, %struct.Memory** %MEMORY
  %loadMem_40674e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6663 = getelementptr inbounds %struct.GPR, %struct.GPR* %6662, i32 0, i32 33
  %6664 = getelementptr inbounds %struct.Reg, %struct.Reg* %6663, i32 0, i32 0
  %PC.i2065 = bitcast %union.anon* %6664 to i64*
  %6665 = load i64, i64* %PC.i2065
  %6666 = add i64 %6665, 47
  %6667 = load i64, i64* %PC.i2065
  %6668 = add i64 %6667, 6
  %6669 = load i64, i64* %PC.i2065
  %6670 = add i64 %6669, 6
  store i64 %6670, i64* %PC.i2065
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6672 = load i8, i8* %6671, align 1
  %6673 = icmp eq i8 %6672, 0
  %6674 = zext i1 %6673 to i8
  store i8 %6674, i8* %BRANCH_TAKEN, align 1
  %6675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6676 = select i1 %6673, i64 %6666, i64 %6668
  store i64 %6676, i64* %6675, align 8
  store %struct.Memory* %loadMem_40674e, %struct.Memory** %MEMORY
  %loadBr_40674e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40674e = icmp eq i8 %loadBr_40674e, 1
  br i1 %cmpBr_40674e, label %block_.L_40677d, label %block_406754

block_406754:                                     ; preds = %block_40673f
  %loadMem_406754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6678 = getelementptr inbounds %struct.GPR, %struct.GPR* %6677, i32 0, i32 33
  %6679 = getelementptr inbounds %struct.Reg, %struct.Reg* %6678, i32 0, i32 0
  %PC.i2063 = bitcast %union.anon* %6679 to i64*
  %6680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6681 = getelementptr inbounds %struct.GPR, %struct.GPR* %6680, i32 0, i32 1
  %6682 = getelementptr inbounds %struct.Reg, %struct.Reg* %6681, i32 0, i32 0
  %RAX.i2064 = bitcast %union.anon* %6682 to i64*
  %6683 = load i64, i64* %PC.i2063
  %6684 = add i64 %6683, 8
  store i64 %6684, i64* %PC.i2063
  %6685 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6685, i64* %RAX.i2064, align 8
  store %struct.Memory* %loadMem_406754, %struct.Memory** %MEMORY
  %loadMem_40675c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6687 = getelementptr inbounds %struct.GPR, %struct.GPR* %6686, i32 0, i32 33
  %6688 = getelementptr inbounds %struct.Reg, %struct.Reg* %6687, i32 0, i32 0
  %PC.i2061 = bitcast %union.anon* %6688 to i64*
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6690 = getelementptr inbounds %struct.GPR, %struct.GPR* %6689, i32 0, i32 1
  %6691 = getelementptr inbounds %struct.Reg, %struct.Reg* %6690, i32 0, i32 0
  %RAX.i2062 = bitcast %union.anon* %6691 to i64*
  %6692 = load i64, i64* %RAX.i2062
  %6693 = add i64 %6692, 72400
  %6694 = load i64, i64* %PC.i2061
  %6695 = add i64 %6694, 7
  store i64 %6695, i64* %PC.i2061
  %6696 = inttoptr i64 %6693 to i32*
  %6697 = load i32, i32* %6696
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6698, align 1
  %6699 = and i32 %6697, 255
  %6700 = call i32 @llvm.ctpop.i32(i32 %6699)
  %6701 = trunc i32 %6700 to i8
  %6702 = and i8 %6701, 1
  %6703 = xor i8 %6702, 1
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6703, i8* %6704, align 1
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6705, align 1
  %6706 = icmp eq i32 %6697, 0
  %6707 = zext i1 %6706 to i8
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6707, i8* %6708, align 1
  %6709 = lshr i32 %6697, 31
  %6710 = trunc i32 %6709 to i8
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6710, i8* %6711, align 1
  %6712 = lshr i32 %6697, 31
  %6713 = xor i32 %6709, %6712
  %6714 = add i32 %6713, %6712
  %6715 = icmp eq i32 %6714, 2
  %6716 = zext i1 %6715 to i8
  %6717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6716, i8* %6717, align 1
  store %struct.Memory* %loadMem_40675c, %struct.Memory** %MEMORY
  %loadMem_406763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6719 = getelementptr inbounds %struct.GPR, %struct.GPR* %6718, i32 0, i32 33
  %6720 = getelementptr inbounds %struct.Reg, %struct.Reg* %6719, i32 0, i32 0
  %PC.i2060 = bitcast %union.anon* %6720 to i64*
  %6721 = load i64, i64* %PC.i2060
  %6722 = add i64 %6721, 61
  %6723 = load i64, i64* %PC.i2060
  %6724 = add i64 %6723, 6
  %6725 = load i64, i64* %PC.i2060
  %6726 = add i64 %6725, 6
  store i64 %6726, i64* %PC.i2060
  %6727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6728 = load i8, i8* %6727, align 1
  store i8 %6728, i8* %BRANCH_TAKEN, align 1
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6730 = icmp ne i8 %6728, 0
  %6731 = select i1 %6730, i64 %6722, i64 %6724
  store i64 %6731, i64* %6729, align 8
  store %struct.Memory* %loadMem_406763, %struct.Memory** %MEMORY
  %loadBr_406763 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406763 = icmp eq i8 %loadBr_406763, 1
  br i1 %cmpBr_406763, label %block_.L_4067a0, label %block_406769

block_406769:                                     ; preds = %block_406754
  %loadMem_406769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 33
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %PC.i2057 = bitcast %union.anon* %6734 to i64*
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6736 = getelementptr inbounds %struct.GPR, %struct.GPR* %6735, i32 0, i32 1
  %6737 = getelementptr inbounds %struct.Reg, %struct.Reg* %6736, i32 0, i32 0
  %RAX.i2058 = bitcast %union.anon* %6737 to i64*
  %6738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6739 = getelementptr inbounds %struct.GPR, %struct.GPR* %6738, i32 0, i32 15
  %6740 = getelementptr inbounds %struct.Reg, %struct.Reg* %6739, i32 0, i32 0
  %RBP.i2059 = bitcast %union.anon* %6740 to i64*
  %6741 = load i64, i64* %RBP.i2059
  %6742 = sub i64 %6741, 152
  %6743 = load i64, i64* %PC.i2057
  %6744 = add i64 %6743, 7
  store i64 %6744, i64* %PC.i2057
  %6745 = inttoptr i64 %6742 to i64*
  %6746 = load i64, i64* %6745
  store i64 %6746, i64* %RAX.i2058, align 8
  store %struct.Memory* %loadMem_406769, %struct.Memory** %MEMORY
  %loadMem_406770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6748 = getelementptr inbounds %struct.GPR, %struct.GPR* %6747, i32 0, i32 33
  %6749 = getelementptr inbounds %struct.Reg, %struct.Reg* %6748, i32 0, i32 0
  %PC.i2055 = bitcast %union.anon* %6749 to i64*
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6751 = getelementptr inbounds %struct.GPR, %struct.GPR* %6750, i32 0, i32 1
  %6752 = getelementptr inbounds %struct.Reg, %struct.Reg* %6751, i32 0, i32 0
  %RAX.i2056 = bitcast %union.anon* %6752 to i64*
  %6753 = load i64, i64* %RAX.i2056
  %6754 = add i64 %6753, 532
  %6755 = load i64, i64* %PC.i2055
  %6756 = add i64 %6755, 7
  store i64 %6756, i64* %PC.i2055
  %6757 = inttoptr i64 %6754 to i32*
  %6758 = load i32, i32* %6757
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6759, align 1
  %6760 = and i32 %6758, 255
  %6761 = call i32 @llvm.ctpop.i32(i32 %6760)
  %6762 = trunc i32 %6761 to i8
  %6763 = and i8 %6762, 1
  %6764 = xor i8 %6763, 1
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6764, i8* %6765, align 1
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6766, align 1
  %6767 = icmp eq i32 %6758, 0
  %6768 = zext i1 %6767 to i8
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6768, i8* %6769, align 1
  %6770 = lshr i32 %6758, 31
  %6771 = trunc i32 %6770 to i8
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6771, i8* %6772, align 1
  %6773 = lshr i32 %6758, 31
  %6774 = xor i32 %6770, %6773
  %6775 = add i32 %6774, %6773
  %6776 = icmp eq i32 %6775, 2
  %6777 = zext i1 %6776 to i8
  %6778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6777, i8* %6778, align 1
  store %struct.Memory* %loadMem_406770, %struct.Memory** %MEMORY
  %loadMem_406777 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6780 = getelementptr inbounds %struct.GPR, %struct.GPR* %6779, i32 0, i32 33
  %6781 = getelementptr inbounds %struct.Reg, %struct.Reg* %6780, i32 0, i32 0
  %PC.i2054 = bitcast %union.anon* %6781 to i64*
  %6782 = load i64, i64* %PC.i2054
  %6783 = add i64 %6782, 41
  %6784 = load i64, i64* %PC.i2054
  %6785 = add i64 %6784, 6
  %6786 = load i64, i64* %PC.i2054
  %6787 = add i64 %6786, 6
  store i64 %6787, i64* %PC.i2054
  %6788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6789 = load i8, i8* %6788, align 1
  store i8 %6789, i8* %BRANCH_TAKEN, align 1
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6791 = icmp ne i8 %6789, 0
  %6792 = select i1 %6791, i64 %6783, i64 %6785
  store i64 %6792, i64* %6790, align 8
  store %struct.Memory* %loadMem_406777, %struct.Memory** %MEMORY
  %loadBr_406777 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406777 = icmp eq i8 %loadBr_406777, 1
  br i1 %cmpBr_406777, label %block_.L_4067a0, label %block_.L_40677d

block_.L_40677d:                                  ; preds = %block_406769, %block_40673f
  %loadMem_40677d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6794 = getelementptr inbounds %struct.GPR, %struct.GPR* %6793, i32 0, i32 33
  %6795 = getelementptr inbounds %struct.Reg, %struct.Reg* %6794, i32 0, i32 0
  %PC.i2051 = bitcast %union.anon* %6795 to i64*
  %6796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6797 = getelementptr inbounds %struct.GPR, %struct.GPR* %6796, i32 0, i32 1
  %6798 = getelementptr inbounds %struct.Reg, %struct.Reg* %6797, i32 0, i32 0
  %RAX.i2052 = bitcast %union.anon* %6798 to i64*
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6800 = getelementptr inbounds %struct.GPR, %struct.GPR* %6799, i32 0, i32 15
  %6801 = getelementptr inbounds %struct.Reg, %struct.Reg* %6800, i32 0, i32 0
  %RBP.i2053 = bitcast %union.anon* %6801 to i64*
  %6802 = load i64, i64* %RBP.i2053
  %6803 = sub i64 %6802, 84
  %6804 = load i64, i64* %PC.i2051
  %6805 = add i64 %6804, 4
  store i64 %6805, i64* %PC.i2051
  %6806 = inttoptr i64 %6803 to i32*
  %6807 = load i32, i32* %6806
  %6808 = sext i32 %6807 to i64
  store i64 %6808, i64* %RAX.i2052, align 8
  store %struct.Memory* %loadMem_40677d, %struct.Memory** %MEMORY
  %loadMem_406781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6810 = getelementptr inbounds %struct.GPR, %struct.GPR* %6809, i32 0, i32 33
  %6811 = getelementptr inbounds %struct.Reg, %struct.Reg* %6810, i32 0, i32 0
  %PC.i2048 = bitcast %union.anon* %6811 to i64*
  %6812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6813 = getelementptr inbounds %struct.GPR, %struct.GPR* %6812, i32 0, i32 1
  %6814 = getelementptr inbounds %struct.Reg, %struct.Reg* %6813, i32 0, i32 0
  %RAX.i2049 = bitcast %union.anon* %6814 to i64*
  %6815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6816 = getelementptr inbounds %struct.GPR, %struct.GPR* %6815, i32 0, i32 5
  %6817 = getelementptr inbounds %struct.Reg, %struct.Reg* %6816, i32 0, i32 0
  %RCX.i2050 = bitcast %union.anon* %6817 to i64*
  %6818 = load i64, i64* %RAX.i2049
  %6819 = mul i64 %6818, 2
  %6820 = add i64 %6819, 4924288
  %6821 = load i64, i64* %PC.i2048
  %6822 = add i64 %6821, 8
  store i64 %6822, i64* %PC.i2048
  %6823 = inttoptr i64 %6820 to i8*
  %6824 = load i8, i8* %6823
  %6825 = zext i8 %6824 to i64
  store i64 %6825, i64* %RCX.i2050, align 8
  store %struct.Memory* %loadMem_406781, %struct.Memory** %MEMORY
  %loadMem_406789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 33
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %PC.i2045 = bitcast %union.anon* %6828 to i64*
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 5
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %ECX.i2046 = bitcast %union.anon* %6831 to i32*
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6833 = getelementptr inbounds %struct.GPR, %struct.GPR* %6832, i32 0, i32 15
  %6834 = getelementptr inbounds %struct.Reg, %struct.Reg* %6833, i32 0, i32 0
  %RBP.i2047 = bitcast %union.anon* %6834 to i64*
  %6835 = load i64, i64* %RBP.i2047
  %6836 = sub i64 %6835, 24
  %6837 = load i32, i32* %ECX.i2046
  %6838 = zext i32 %6837 to i64
  %6839 = load i64, i64* %PC.i2045
  %6840 = add i64 %6839, 3
  store i64 %6840, i64* %PC.i2045
  %6841 = inttoptr i64 %6836 to i32*
  store i32 %6837, i32* %6841
  store %struct.Memory* %loadMem_406789, %struct.Memory** %MEMORY
  %loadMem_40678c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6843 = getelementptr inbounds %struct.GPR, %struct.GPR* %6842, i32 0, i32 33
  %6844 = getelementptr inbounds %struct.Reg, %struct.Reg* %6843, i32 0, i32 0
  %PC.i2042 = bitcast %union.anon* %6844 to i64*
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 1
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %RAX.i2043 = bitcast %union.anon* %6847 to i64*
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 15
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %RBP.i2044 = bitcast %union.anon* %6850 to i64*
  %6851 = load i64, i64* %RBP.i2044
  %6852 = sub i64 %6851, 84
  %6853 = load i64, i64* %PC.i2042
  %6854 = add i64 %6853, 4
  store i64 %6854, i64* %PC.i2042
  %6855 = inttoptr i64 %6852 to i32*
  %6856 = load i32, i32* %6855
  %6857 = sext i32 %6856 to i64
  store i64 %6857, i64* %RAX.i2043, align 8
  store %struct.Memory* %loadMem_40678c, %struct.Memory** %MEMORY
  %loadMem_406790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6859 = getelementptr inbounds %struct.GPR, %struct.GPR* %6858, i32 0, i32 33
  %6860 = getelementptr inbounds %struct.Reg, %struct.Reg* %6859, i32 0, i32 0
  %PC.i2039 = bitcast %union.anon* %6860 to i64*
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6862 = getelementptr inbounds %struct.GPR, %struct.GPR* %6861, i32 0, i32 1
  %6863 = getelementptr inbounds %struct.Reg, %struct.Reg* %6862, i32 0, i32 0
  %RAX.i2040 = bitcast %union.anon* %6863 to i64*
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6865 = getelementptr inbounds %struct.GPR, %struct.GPR* %6864, i32 0, i32 5
  %6866 = getelementptr inbounds %struct.Reg, %struct.Reg* %6865, i32 0, i32 0
  %RCX.i2041 = bitcast %union.anon* %6866 to i64*
  %6867 = load i64, i64* %RAX.i2040
  %6868 = mul i64 %6867, 2
  %6869 = add i64 %6868, 4924289
  %6870 = load i64, i64* %PC.i2039
  %6871 = add i64 %6870, 8
  store i64 %6871, i64* %PC.i2039
  %6872 = inttoptr i64 %6869 to i8*
  %6873 = load i8, i8* %6872
  %6874 = zext i8 %6873 to i64
  store i64 %6874, i64* %RCX.i2041, align 8
  store %struct.Memory* %loadMem_406790, %struct.Memory** %MEMORY
  %loadMem_406798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6876 = getelementptr inbounds %struct.GPR, %struct.GPR* %6875, i32 0, i32 33
  %6877 = getelementptr inbounds %struct.Reg, %struct.Reg* %6876, i32 0, i32 0
  %PC.i2036 = bitcast %union.anon* %6877 to i64*
  %6878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6879 = getelementptr inbounds %struct.GPR, %struct.GPR* %6878, i32 0, i32 5
  %6880 = getelementptr inbounds %struct.Reg, %struct.Reg* %6879, i32 0, i32 0
  %ECX.i2037 = bitcast %union.anon* %6880 to i32*
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6882 = getelementptr inbounds %struct.GPR, %struct.GPR* %6881, i32 0, i32 15
  %6883 = getelementptr inbounds %struct.Reg, %struct.Reg* %6882, i32 0, i32 0
  %RBP.i2038 = bitcast %union.anon* %6883 to i64*
  %6884 = load i64, i64* %RBP.i2038
  %6885 = sub i64 %6884, 28
  %6886 = load i32, i32* %ECX.i2037
  %6887 = zext i32 %6886 to i64
  %6888 = load i64, i64* %PC.i2036
  %6889 = add i64 %6888, 3
  store i64 %6889, i64* %PC.i2036
  %6890 = inttoptr i64 %6885 to i32*
  store i32 %6886, i32* %6890
  store %struct.Memory* %loadMem_406798, %struct.Memory** %MEMORY
  %loadMem_40679b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6892 = getelementptr inbounds %struct.GPR, %struct.GPR* %6891, i32 0, i32 33
  %6893 = getelementptr inbounds %struct.Reg, %struct.Reg* %6892, i32 0, i32 0
  %PC.i2035 = bitcast %union.anon* %6893 to i64*
  %6894 = load i64, i64* %PC.i2035
  %6895 = add i64 %6894, 35
  %6896 = load i64, i64* %PC.i2035
  %6897 = add i64 %6896, 5
  store i64 %6897, i64* %PC.i2035
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6895, i64* %6898, align 8
  store %struct.Memory* %loadMem_40679b, %struct.Memory** %MEMORY
  br label %block_.L_4067be

block_.L_4067a0:                                  ; preds = %block_406769, %block_406754
  %loadMem_4067a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6900 = getelementptr inbounds %struct.GPR, %struct.GPR* %6899, i32 0, i32 33
  %6901 = getelementptr inbounds %struct.Reg, %struct.Reg* %6900, i32 0, i32 0
  %PC.i2032 = bitcast %union.anon* %6901 to i64*
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6903 = getelementptr inbounds %struct.GPR, %struct.GPR* %6902, i32 0, i32 1
  %6904 = getelementptr inbounds %struct.Reg, %struct.Reg* %6903, i32 0, i32 0
  %RAX.i2033 = bitcast %union.anon* %6904 to i64*
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6906 = getelementptr inbounds %struct.GPR, %struct.GPR* %6905, i32 0, i32 15
  %6907 = getelementptr inbounds %struct.Reg, %struct.Reg* %6906, i32 0, i32 0
  %RBP.i2034 = bitcast %union.anon* %6907 to i64*
  %6908 = load i64, i64* %RBP.i2034
  %6909 = sub i64 %6908, 84
  %6910 = load i64, i64* %PC.i2032
  %6911 = add i64 %6910, 4
  store i64 %6911, i64* %PC.i2032
  %6912 = inttoptr i64 %6909 to i32*
  %6913 = load i32, i32* %6912
  %6914 = sext i32 %6913 to i64
  store i64 %6914, i64* %RAX.i2033, align 8
  store %struct.Memory* %loadMem_4067a0, %struct.Memory** %MEMORY
  %loadMem_4067a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6916 = getelementptr inbounds %struct.GPR, %struct.GPR* %6915, i32 0, i32 33
  %6917 = getelementptr inbounds %struct.Reg, %struct.Reg* %6916, i32 0, i32 0
  %PC.i2029 = bitcast %union.anon* %6917 to i64*
  %6918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6919 = getelementptr inbounds %struct.GPR, %struct.GPR* %6918, i32 0, i32 1
  %6920 = getelementptr inbounds %struct.Reg, %struct.Reg* %6919, i32 0, i32 0
  %RAX.i2030 = bitcast %union.anon* %6920 to i64*
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6922 = getelementptr inbounds %struct.GPR, %struct.GPR* %6921, i32 0, i32 5
  %6923 = getelementptr inbounds %struct.Reg, %struct.Reg* %6922, i32 0, i32 0
  %RCX.i2031 = bitcast %union.anon* %6923 to i64*
  %6924 = load i64, i64* %RAX.i2030
  %6925 = mul i64 %6924, 2
  %6926 = add i64 %6925, 4924256
  %6927 = load i64, i64* %PC.i2029
  %6928 = add i64 %6927, 8
  store i64 %6928, i64* %PC.i2029
  %6929 = inttoptr i64 %6926 to i8*
  %6930 = load i8, i8* %6929
  %6931 = zext i8 %6930 to i64
  store i64 %6931, i64* %RCX.i2031, align 8
  store %struct.Memory* %loadMem_4067a4, %struct.Memory** %MEMORY
  %loadMem_4067ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6933 = getelementptr inbounds %struct.GPR, %struct.GPR* %6932, i32 0, i32 33
  %6934 = getelementptr inbounds %struct.Reg, %struct.Reg* %6933, i32 0, i32 0
  %PC.i2026 = bitcast %union.anon* %6934 to i64*
  %6935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6936 = getelementptr inbounds %struct.GPR, %struct.GPR* %6935, i32 0, i32 5
  %6937 = getelementptr inbounds %struct.Reg, %struct.Reg* %6936, i32 0, i32 0
  %ECX.i2027 = bitcast %union.anon* %6937 to i32*
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6939 = getelementptr inbounds %struct.GPR, %struct.GPR* %6938, i32 0, i32 15
  %6940 = getelementptr inbounds %struct.Reg, %struct.Reg* %6939, i32 0, i32 0
  %RBP.i2028 = bitcast %union.anon* %6940 to i64*
  %6941 = load i64, i64* %RBP.i2028
  %6942 = sub i64 %6941, 24
  %6943 = load i32, i32* %ECX.i2027
  %6944 = zext i32 %6943 to i64
  %6945 = load i64, i64* %PC.i2026
  %6946 = add i64 %6945, 3
  store i64 %6946, i64* %PC.i2026
  %6947 = inttoptr i64 %6942 to i32*
  store i32 %6943, i32* %6947
  store %struct.Memory* %loadMem_4067ac, %struct.Memory** %MEMORY
  %loadMem_4067af = load %struct.Memory*, %struct.Memory** %MEMORY
  %6948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6949 = getelementptr inbounds %struct.GPR, %struct.GPR* %6948, i32 0, i32 33
  %6950 = getelementptr inbounds %struct.Reg, %struct.Reg* %6949, i32 0, i32 0
  %PC.i2023 = bitcast %union.anon* %6950 to i64*
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6952 = getelementptr inbounds %struct.GPR, %struct.GPR* %6951, i32 0, i32 1
  %6953 = getelementptr inbounds %struct.Reg, %struct.Reg* %6952, i32 0, i32 0
  %RAX.i2024 = bitcast %union.anon* %6953 to i64*
  %6954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6955 = getelementptr inbounds %struct.GPR, %struct.GPR* %6954, i32 0, i32 15
  %6956 = getelementptr inbounds %struct.Reg, %struct.Reg* %6955, i32 0, i32 0
  %RBP.i2025 = bitcast %union.anon* %6956 to i64*
  %6957 = load i64, i64* %RBP.i2025
  %6958 = sub i64 %6957, 84
  %6959 = load i64, i64* %PC.i2023
  %6960 = add i64 %6959, 4
  store i64 %6960, i64* %PC.i2023
  %6961 = inttoptr i64 %6958 to i32*
  %6962 = load i32, i32* %6961
  %6963 = sext i32 %6962 to i64
  store i64 %6963, i64* %RAX.i2024, align 8
  store %struct.Memory* %loadMem_4067af, %struct.Memory** %MEMORY
  %loadMem_4067b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6965 = getelementptr inbounds %struct.GPR, %struct.GPR* %6964, i32 0, i32 33
  %6966 = getelementptr inbounds %struct.Reg, %struct.Reg* %6965, i32 0, i32 0
  %PC.i2020 = bitcast %union.anon* %6966 to i64*
  %6967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6968 = getelementptr inbounds %struct.GPR, %struct.GPR* %6967, i32 0, i32 1
  %6969 = getelementptr inbounds %struct.Reg, %struct.Reg* %6968, i32 0, i32 0
  %RAX.i2021 = bitcast %union.anon* %6969 to i64*
  %6970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6971 = getelementptr inbounds %struct.GPR, %struct.GPR* %6970, i32 0, i32 5
  %6972 = getelementptr inbounds %struct.Reg, %struct.Reg* %6971, i32 0, i32 0
  %RCX.i2022 = bitcast %union.anon* %6972 to i64*
  %6973 = load i64, i64* %RAX.i2021
  %6974 = mul i64 %6973, 2
  %6975 = add i64 %6974, 4924257
  %6976 = load i64, i64* %PC.i2020
  %6977 = add i64 %6976, 8
  store i64 %6977, i64* %PC.i2020
  %6978 = inttoptr i64 %6975 to i8*
  %6979 = load i8, i8* %6978
  %6980 = zext i8 %6979 to i64
  store i64 %6980, i64* %RCX.i2022, align 8
  store %struct.Memory* %loadMem_4067b3, %struct.Memory** %MEMORY
  %loadMem_4067bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6982 = getelementptr inbounds %struct.GPR, %struct.GPR* %6981, i32 0, i32 33
  %6983 = getelementptr inbounds %struct.Reg, %struct.Reg* %6982, i32 0, i32 0
  %PC.i2017 = bitcast %union.anon* %6983 to i64*
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6985 = getelementptr inbounds %struct.GPR, %struct.GPR* %6984, i32 0, i32 5
  %6986 = getelementptr inbounds %struct.Reg, %struct.Reg* %6985, i32 0, i32 0
  %ECX.i2018 = bitcast %union.anon* %6986 to i32*
  %6987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6988 = getelementptr inbounds %struct.GPR, %struct.GPR* %6987, i32 0, i32 15
  %6989 = getelementptr inbounds %struct.Reg, %struct.Reg* %6988, i32 0, i32 0
  %RBP.i2019 = bitcast %union.anon* %6989 to i64*
  %6990 = load i64, i64* %RBP.i2019
  %6991 = sub i64 %6990, 28
  %6992 = load i32, i32* %ECX.i2018
  %6993 = zext i32 %6992 to i64
  %6994 = load i64, i64* %PC.i2017
  %6995 = add i64 %6994, 3
  store i64 %6995, i64* %PC.i2017
  %6996 = inttoptr i64 %6991 to i32*
  store i32 %6992, i32* %6996
  store %struct.Memory* %loadMem_4067bb, %struct.Memory** %MEMORY
  br label %block_.L_4067be

block_.L_4067be:                                  ; preds = %block_.L_4067a0, %block_.L_40677d
  %loadMem_4067be = load %struct.Memory*, %struct.Memory** %MEMORY
  %6997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6998 = getelementptr inbounds %struct.GPR, %struct.GPR* %6997, i32 0, i32 33
  %6999 = getelementptr inbounds %struct.Reg, %struct.Reg* %6998, i32 0, i32 0
  %PC.i2014 = bitcast %union.anon* %6999 to i64*
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7001 = getelementptr inbounds %struct.GPR, %struct.GPR* %7000, i32 0, i32 1
  %7002 = getelementptr inbounds %struct.Reg, %struct.Reg* %7001, i32 0, i32 0
  %RAX.i2015 = bitcast %union.anon* %7002 to i64*
  %7003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7004 = getelementptr inbounds %struct.GPR, %struct.GPR* %7003, i32 0, i32 15
  %7005 = getelementptr inbounds %struct.Reg, %struct.Reg* %7004, i32 0, i32 0
  %RBP.i2016 = bitcast %union.anon* %7005 to i64*
  %7006 = load i64, i64* %RBP.i2016
  %7007 = sub i64 %7006, 96
  %7008 = load i64, i64* %PC.i2014
  %7009 = add i64 %7008, 3
  store i64 %7009, i64* %PC.i2014
  %7010 = inttoptr i64 %7007 to i32*
  %7011 = load i32, i32* %7010
  %7012 = zext i32 %7011 to i64
  store i64 %7012, i64* %RAX.i2015, align 8
  store %struct.Memory* %loadMem_4067be, %struct.Memory** %MEMORY
  %loadMem_4067c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7014 = getelementptr inbounds %struct.GPR, %struct.GPR* %7013, i32 0, i32 33
  %7015 = getelementptr inbounds %struct.Reg, %struct.Reg* %7014, i32 0, i32 0
  %PC.i2012 = bitcast %union.anon* %7015 to i64*
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7017 = getelementptr inbounds %struct.GPR, %struct.GPR* %7016, i32 0, i32 1
  %7018 = getelementptr inbounds %struct.Reg, %struct.Reg* %7017, i32 0, i32 0
  %RAX.i2013 = bitcast %union.anon* %7018 to i64*
  %7019 = load i64, i64* %RAX.i2013
  %7020 = load i64, i64* %PC.i2012
  %7021 = add i64 %7020, 3
  store i64 %7021, i64* %PC.i2012
  %7022 = trunc i64 %7019 to i32
  %7023 = add i32 1, %7022
  %7024 = zext i32 %7023 to i64
  store i64 %7024, i64* %RAX.i2013, align 8
  %7025 = icmp ult i32 %7023, %7022
  %7026 = icmp ult i32 %7023, 1
  %7027 = or i1 %7025, %7026
  %7028 = zext i1 %7027 to i8
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7028, i8* %7029, align 1
  %7030 = and i32 %7023, 255
  %7031 = call i32 @llvm.ctpop.i32(i32 %7030)
  %7032 = trunc i32 %7031 to i8
  %7033 = and i8 %7032, 1
  %7034 = xor i8 %7033, 1
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7034, i8* %7035, align 1
  %7036 = xor i64 1, %7019
  %7037 = trunc i64 %7036 to i32
  %7038 = xor i32 %7037, %7023
  %7039 = lshr i32 %7038, 4
  %7040 = trunc i32 %7039 to i8
  %7041 = and i8 %7040, 1
  %7042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7041, i8* %7042, align 1
  %7043 = icmp eq i32 %7023, 0
  %7044 = zext i1 %7043 to i8
  %7045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7044, i8* %7045, align 1
  %7046 = lshr i32 %7023, 31
  %7047 = trunc i32 %7046 to i8
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7047, i8* %7048, align 1
  %7049 = lshr i32 %7022, 31
  %7050 = xor i32 %7046, %7049
  %7051 = add i32 %7050, %7046
  %7052 = icmp eq i32 %7051, 2
  %7053 = zext i1 %7052 to i8
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7053, i8* %7054, align 1
  store %struct.Memory* %loadMem_4067c1, %struct.Memory** %MEMORY
  %loadMem_4067c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7056 = getelementptr inbounds %struct.GPR, %struct.GPR* %7055, i32 0, i32 33
  %7057 = getelementptr inbounds %struct.Reg, %struct.Reg* %7056, i32 0, i32 0
  %PC.i2009 = bitcast %union.anon* %7057 to i64*
  %7058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7059 = getelementptr inbounds %struct.GPR, %struct.GPR* %7058, i32 0, i32 1
  %7060 = getelementptr inbounds %struct.Reg, %struct.Reg* %7059, i32 0, i32 0
  %EAX.i2010 = bitcast %union.anon* %7060 to i32*
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7062 = getelementptr inbounds %struct.GPR, %struct.GPR* %7061, i32 0, i32 15
  %7063 = getelementptr inbounds %struct.Reg, %struct.Reg* %7062, i32 0, i32 0
  %RBP.i2011 = bitcast %union.anon* %7063 to i64*
  %7064 = load i64, i64* %RBP.i2011
  %7065 = sub i64 %7064, 96
  %7066 = load i32, i32* %EAX.i2010
  %7067 = zext i32 %7066 to i64
  %7068 = load i64, i64* %PC.i2009
  %7069 = add i64 %7068, 3
  store i64 %7069, i64* %PC.i2009
  %7070 = inttoptr i64 %7065 to i32*
  store i32 %7066, i32* %7070
  store %struct.Memory* %loadMem_4067c4, %struct.Memory** %MEMORY
  %loadMem_4067c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7072 = getelementptr inbounds %struct.GPR, %struct.GPR* %7071, i32 0, i32 33
  %7073 = getelementptr inbounds %struct.Reg, %struct.Reg* %7072, i32 0, i32 0
  %PC.i2007 = bitcast %union.anon* %7073 to i64*
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7075 = getelementptr inbounds %struct.GPR, %struct.GPR* %7074, i32 0, i32 15
  %7076 = getelementptr inbounds %struct.Reg, %struct.Reg* %7075, i32 0, i32 0
  %RBP.i2008 = bitcast %union.anon* %7076 to i64*
  %7077 = load i64, i64* %RBP.i2008
  %7078 = sub i64 %7077, 40
  %7079 = load i64, i64* %PC.i2007
  %7080 = add i64 %7079, 7
  store i64 %7080, i64* %PC.i2007
  %7081 = inttoptr i64 %7078 to i32*
  store i32 0, i32* %7081
  store %struct.Memory* %loadMem_4067c7, %struct.Memory** %MEMORY
  %loadMem_4067ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7083 = getelementptr inbounds %struct.GPR, %struct.GPR* %7082, i32 0, i32 33
  %7084 = getelementptr inbounds %struct.Reg, %struct.Reg* %7083, i32 0, i32 0
  %PC.i2005 = bitcast %union.anon* %7084 to i64*
  %7085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7086 = getelementptr inbounds %struct.GPR, %struct.GPR* %7085, i32 0, i32 15
  %7087 = getelementptr inbounds %struct.Reg, %struct.Reg* %7086, i32 0, i32 0
  %RBP.i2006 = bitcast %union.anon* %7087 to i64*
  %7088 = load i64, i64* %RBP.i2006
  %7089 = sub i64 %7088, 156
  %7090 = load i64, i64* %PC.i2005
  %7091 = add i64 %7090, 7
  store i64 %7091, i64* %PC.i2005
  %7092 = inttoptr i64 %7089 to i32*
  %7093 = load i32, i32* %7092
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7094, align 1
  %7095 = and i32 %7093, 255
  %7096 = call i32 @llvm.ctpop.i32(i32 %7095)
  %7097 = trunc i32 %7096 to i8
  %7098 = and i8 %7097, 1
  %7099 = xor i8 %7098, 1
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7099, i8* %7100, align 1
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7101, align 1
  %7102 = icmp eq i32 %7093, 0
  %7103 = zext i1 %7102 to i8
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7103, i8* %7104, align 1
  %7105 = lshr i32 %7093, 31
  %7106 = trunc i32 %7105 to i8
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7106, i8* %7107, align 1
  %7108 = lshr i32 %7093, 31
  %7109 = xor i32 %7105, %7108
  %7110 = add i32 %7109, %7108
  %7111 = icmp eq i32 %7110, 2
  %7112 = zext i1 %7111 to i8
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7112, i8* %7113, align 1
  store %struct.Memory* %loadMem_4067ce, %struct.Memory** %MEMORY
  %loadMem_4067d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7115 = getelementptr inbounds %struct.GPR, %struct.GPR* %7114, i32 0, i32 33
  %7116 = getelementptr inbounds %struct.Reg, %struct.Reg* %7115, i32 0, i32 0
  %PC.i2004 = bitcast %union.anon* %7116 to i64*
  %7117 = load i64, i64* %PC.i2004
  %7118 = add i64 %7117, 51
  %7119 = load i64, i64* %PC.i2004
  %7120 = add i64 %7119, 6
  %7121 = load i64, i64* %PC.i2004
  %7122 = add i64 %7121, 6
  store i64 %7122, i64* %PC.i2004
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7124 = load i8, i8* %7123, align 1
  store i8 %7124, i8* %BRANCH_TAKEN, align 1
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7126 = icmp ne i8 %7124, 0
  %7127 = select i1 %7126, i64 %7118, i64 %7120
  store i64 %7127, i64* %7125, align 8
  store %struct.Memory* %loadMem_4067d5, %struct.Memory** %MEMORY
  %loadBr_4067d5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4067d5 = icmp eq i8 %loadBr_4067d5, 1
  br i1 %cmpBr_4067d5, label %block_.L_406808, label %block_4067db

block_4067db:                                     ; preds = %block_.L_4067be
  %loadMem_4067db = load %struct.Memory*, %struct.Memory** %MEMORY
  %7128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7129 = getelementptr inbounds %struct.GPR, %struct.GPR* %7128, i32 0, i32 33
  %7130 = getelementptr inbounds %struct.Reg, %struct.Reg* %7129, i32 0, i32 0
  %PC.i2002 = bitcast %union.anon* %7130 to i64*
  %7131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7132 = getelementptr inbounds %struct.GPR, %struct.GPR* %7131, i32 0, i32 1
  %7133 = getelementptr inbounds %struct.Reg, %struct.Reg* %7132, i32 0, i32 0
  %RAX.i2003 = bitcast %union.anon* %7133 to i64*
  %7134 = load i64, i64* %PC.i2002
  %7135 = add i64 %7134, 8
  store i64 %7135, i64* %PC.i2002
  %7136 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7136, i64* %RAX.i2003, align 8
  store %struct.Memory* %loadMem_4067db, %struct.Memory** %MEMORY
  %loadMem_4067e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7138 = getelementptr inbounds %struct.GPR, %struct.GPR* %7137, i32 0, i32 33
  %7139 = getelementptr inbounds %struct.Reg, %struct.Reg* %7138, i32 0, i32 0
  %PC.i2000 = bitcast %union.anon* %7139 to i64*
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7141 = getelementptr inbounds %struct.GPR, %struct.GPR* %7140, i32 0, i32 1
  %7142 = getelementptr inbounds %struct.Reg, %struct.Reg* %7141, i32 0, i32 0
  %RAX.i2001 = bitcast %union.anon* %7142 to i64*
  %7143 = load i64, i64* %RAX.i2001
  %7144 = load i64, i64* %PC.i2000
  %7145 = add i64 %7144, 6
  store i64 %7145, i64* %PC.i2000
  %7146 = add i64 13112, %7143
  store i64 %7146, i64* %RAX.i2001, align 8
  %7147 = icmp ult i64 %7146, %7143
  %7148 = icmp ult i64 %7146, 13112
  %7149 = or i1 %7147, %7148
  %7150 = zext i1 %7149 to i8
  %7151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7150, i8* %7151, align 1
  %7152 = trunc i64 %7146 to i32
  %7153 = and i32 %7152, 255
  %7154 = call i32 @llvm.ctpop.i32(i32 %7153)
  %7155 = trunc i32 %7154 to i8
  %7156 = and i8 %7155, 1
  %7157 = xor i8 %7156, 1
  %7158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7157, i8* %7158, align 1
  %7159 = xor i64 13112, %7143
  %7160 = xor i64 %7159, %7146
  %7161 = lshr i64 %7160, 4
  %7162 = trunc i64 %7161 to i8
  %7163 = and i8 %7162, 1
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7163, i8* %7164, align 1
  %7165 = icmp eq i64 %7146, 0
  %7166 = zext i1 %7165 to i8
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7166, i8* %7167, align 1
  %7168 = lshr i64 %7146, 63
  %7169 = trunc i64 %7168 to i8
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7169, i8* %7170, align 1
  %7171 = lshr i64 %7143, 63
  %7172 = xor i64 %7168, %7171
  %7173 = add i64 %7172, %7168
  %7174 = icmp eq i64 %7173, 2
  %7175 = zext i1 %7174 to i8
  %7176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7175, i8* %7176, align 1
  store %struct.Memory* %loadMem_4067e3, %struct.Memory** %MEMORY
  %loadMem_4067e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7178 = getelementptr inbounds %struct.GPR, %struct.GPR* %7177, i32 0, i32 33
  %7179 = getelementptr inbounds %struct.Reg, %struct.Reg* %7178, i32 0, i32 0
  %PC.i1997 = bitcast %union.anon* %7179 to i64*
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 5
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %RCX.i1998 = bitcast %union.anon* %7182 to i64*
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7184 = getelementptr inbounds %struct.GPR, %struct.GPR* %7183, i32 0, i32 15
  %7185 = getelementptr inbounds %struct.Reg, %struct.Reg* %7184, i32 0, i32 0
  %RBP.i1999 = bitcast %union.anon* %7185 to i64*
  %7186 = load i64, i64* %RBP.i1999
  %7187 = sub i64 %7186, 24
  %7188 = load i64, i64* %PC.i1997
  %7189 = add i64 %7188, 4
  store i64 %7189, i64* %PC.i1997
  %7190 = inttoptr i64 %7187 to i32*
  %7191 = load i32, i32* %7190
  %7192 = sext i32 %7191 to i64
  store i64 %7192, i64* %RCX.i1998, align 8
  store %struct.Memory* %loadMem_4067e9, %struct.Memory** %MEMORY
  %loadMem_4067ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %7193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7194 = getelementptr inbounds %struct.GPR, %struct.GPR* %7193, i32 0, i32 33
  %7195 = getelementptr inbounds %struct.Reg, %struct.Reg* %7194, i32 0, i32 0
  %PC.i1995 = bitcast %union.anon* %7195 to i64*
  %7196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7197 = getelementptr inbounds %struct.GPR, %struct.GPR* %7196, i32 0, i32 5
  %7198 = getelementptr inbounds %struct.Reg, %struct.Reg* %7197, i32 0, i32 0
  %RCX.i1996 = bitcast %union.anon* %7198 to i64*
  %7199 = load i64, i64* %RCX.i1996
  %7200 = load i64, i64* %PC.i1995
  %7201 = add i64 %7200, 4
  store i64 %7201, i64* %PC.i1995
  %7202 = shl i64 %7199, 5
  %7203 = icmp slt i64 %7202, 0
  %7204 = shl i64 %7202, 1
  store i64 %7204, i64* %RCX.i1996, align 8
  %7205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7206 = zext i1 %7203 to i8
  store i8 %7206, i8* %7205, align 1
  %7207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7208 = trunc i64 %7204 to i32
  %7209 = and i32 %7208, 254
  %7210 = call i32 @llvm.ctpop.i32(i32 %7209)
  %7211 = trunc i32 %7210 to i8
  %7212 = and i8 %7211, 1
  %7213 = xor i8 %7212, 1
  store i8 %7213, i8* %7207, align 1
  %7214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7214, align 1
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7216 = icmp eq i64 %7204, 0
  %7217 = zext i1 %7216 to i8
  store i8 %7217, i8* %7215, align 1
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7219 = lshr i64 %7204, 63
  %7220 = trunc i64 %7219 to i8
  store i8 %7220, i8* %7218, align 1
  %7221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7221, align 1
  store %struct.Memory* %loadMem_4067ed, %struct.Memory** %MEMORY
  %loadMem_4067f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7223 = getelementptr inbounds %struct.GPR, %struct.GPR* %7222, i32 0, i32 33
  %7224 = getelementptr inbounds %struct.Reg, %struct.Reg* %7223, i32 0, i32 0
  %PC.i1992 = bitcast %union.anon* %7224 to i64*
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 1
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %RAX.i1993 = bitcast %union.anon* %7227 to i64*
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7229 = getelementptr inbounds %struct.GPR, %struct.GPR* %7228, i32 0, i32 5
  %7230 = getelementptr inbounds %struct.Reg, %struct.Reg* %7229, i32 0, i32 0
  %RCX.i1994 = bitcast %union.anon* %7230 to i64*
  %7231 = load i64, i64* %RAX.i1993
  %7232 = load i64, i64* %RCX.i1994
  %7233 = load i64, i64* %PC.i1992
  %7234 = add i64 %7233, 3
  store i64 %7234, i64* %PC.i1992
  %7235 = add i64 %7232, %7231
  store i64 %7235, i64* %RAX.i1993, align 8
  %7236 = icmp ult i64 %7235, %7231
  %7237 = icmp ult i64 %7235, %7232
  %7238 = or i1 %7236, %7237
  %7239 = zext i1 %7238 to i8
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7239, i8* %7240, align 1
  %7241 = trunc i64 %7235 to i32
  %7242 = and i32 %7241, 255
  %7243 = call i32 @llvm.ctpop.i32(i32 %7242)
  %7244 = trunc i32 %7243 to i8
  %7245 = and i8 %7244, 1
  %7246 = xor i8 %7245, 1
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7246, i8* %7247, align 1
  %7248 = xor i64 %7232, %7231
  %7249 = xor i64 %7248, %7235
  %7250 = lshr i64 %7249, 4
  %7251 = trunc i64 %7250 to i8
  %7252 = and i8 %7251, 1
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7252, i8* %7253, align 1
  %7254 = icmp eq i64 %7235, 0
  %7255 = zext i1 %7254 to i8
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7255, i8* %7256, align 1
  %7257 = lshr i64 %7235, 63
  %7258 = trunc i64 %7257 to i8
  %7259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7258, i8* %7259, align 1
  %7260 = lshr i64 %7231, 63
  %7261 = lshr i64 %7232, 63
  %7262 = xor i64 %7257, %7260
  %7263 = xor i64 %7257, %7261
  %7264 = add i64 %7262, %7263
  %7265 = icmp eq i64 %7264, 2
  %7266 = zext i1 %7265 to i8
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7266, i8* %7267, align 1
  store %struct.Memory* %loadMem_4067f1, %struct.Memory** %MEMORY
  %loadMem_4067f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 33
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %PC.i1989 = bitcast %union.anon* %7270 to i64*
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 5
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %RCX.i1990 = bitcast %union.anon* %7273 to i64*
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7275 = getelementptr inbounds %struct.GPR, %struct.GPR* %7274, i32 0, i32 15
  %7276 = getelementptr inbounds %struct.Reg, %struct.Reg* %7275, i32 0, i32 0
  %RBP.i1991 = bitcast %union.anon* %7276 to i64*
  %7277 = load i64, i64* %RBP.i1991
  %7278 = sub i64 %7277, 28
  %7279 = load i64, i64* %PC.i1989
  %7280 = add i64 %7279, 4
  store i64 %7280, i64* %PC.i1989
  %7281 = inttoptr i64 %7278 to i32*
  %7282 = load i32, i32* %7281
  %7283 = sext i32 %7282 to i64
  store i64 %7283, i64* %RCX.i1990, align 8
  store %struct.Memory* %loadMem_4067f4, %struct.Memory** %MEMORY
  %loadMem_4067f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 33
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %PC.i1985 = bitcast %union.anon* %7286 to i64*
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 1
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %RAX.i1986 = bitcast %union.anon* %7289 to i64*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7291 = getelementptr inbounds %struct.GPR, %struct.GPR* %7290, i32 0, i32 5
  %7292 = getelementptr inbounds %struct.Reg, %struct.Reg* %7291, i32 0, i32 0
  %RCX.i1987 = bitcast %union.anon* %7292 to i64*
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7294 = getelementptr inbounds %struct.GPR, %struct.GPR* %7293, i32 0, i32 11
  %7295 = getelementptr inbounds %struct.Reg, %struct.Reg* %7294, i32 0, i32 0
  %RDI.i1988 = bitcast %union.anon* %7295 to i64*
  %7296 = load i64, i64* %RAX.i1986
  %7297 = load i64, i64* %RCX.i1987
  %7298 = mul i64 %7297, 4
  %7299 = add i64 %7298, %7296
  %7300 = load i64, i64* %PC.i1985
  %7301 = add i64 %7300, 3
  store i64 %7301, i64* %PC.i1985
  %7302 = inttoptr i64 %7299 to i32*
  %7303 = load i32, i32* %7302
  %7304 = zext i32 %7303 to i64
  store i64 %7304, i64* %RDI.i1988, align 8
  store %struct.Memory* %loadMem_4067f8, %struct.Memory** %MEMORY
  %loadMem1_4067fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7306 = getelementptr inbounds %struct.GPR, %struct.GPR* %7305, i32 0, i32 33
  %7307 = getelementptr inbounds %struct.Reg, %struct.Reg* %7306, i32 0, i32 0
  %PC.i1984 = bitcast %union.anon* %7307 to i64*
  %7308 = load i64, i64* %PC.i1984
  %7309 = add i64 %7308, -22523
  %7310 = load i64, i64* %PC.i1984
  %7311 = add i64 %7310, 5
  %7312 = load i64, i64* %PC.i1984
  %7313 = add i64 %7312, 5
  store i64 %7313, i64* %PC.i1984
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7315 = load i64, i64* %7314, align 8
  %7316 = add i64 %7315, -8
  %7317 = inttoptr i64 %7316 to i64*
  store i64 %7311, i64* %7317
  store i64 %7316, i64* %7314, align 8
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7309, i64* %7318, align 8
  store %struct.Memory* %loadMem1_4067fb, %struct.Memory** %MEMORY
  %loadMem2_4067fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4067fb = load i64, i64* %3
  %7319 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_4067fb)
  store %struct.Memory* %7319, %struct.Memory** %MEMORY
  %loadMem_406800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7321 = getelementptr inbounds %struct.GPR, %struct.GPR* %7320, i32 0, i32 33
  %7322 = getelementptr inbounds %struct.Reg, %struct.Reg* %7321, i32 0, i32 0
  %PC.i1978 = bitcast %union.anon* %7322 to i64*
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7324 = getelementptr inbounds %struct.GPR, %struct.GPR* %7323, i32 0, i32 1
  %7325 = getelementptr inbounds %struct.Reg, %struct.Reg* %7324, i32 0, i32 0
  %EAX.i1979 = bitcast %union.anon* %7325 to i32*
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7327 = getelementptr inbounds %struct.GPR, %struct.GPR* %7326, i32 0, i32 15
  %7328 = getelementptr inbounds %struct.Reg, %struct.Reg* %7327, i32 0, i32 0
  %RBP.i1980 = bitcast %union.anon* %7328 to i64*
  %7329 = load i64, i64* %RBP.i1980
  %7330 = sub i64 %7329, 88
  %7331 = load i32, i32* %EAX.i1979
  %7332 = zext i32 %7331 to i64
  %7333 = load i64, i64* %PC.i1978
  %7334 = add i64 %7333, 3
  store i64 %7334, i64* %PC.i1978
  %7335 = inttoptr i64 %7330 to i32*
  store i32 %7331, i32* %7335
  store %struct.Memory* %loadMem_406800, %struct.Memory** %MEMORY
  %loadMem_406803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7337 = getelementptr inbounds %struct.GPR, %struct.GPR* %7336, i32 0, i32 33
  %7338 = getelementptr inbounds %struct.Reg, %struct.Reg* %7337, i32 0, i32 0
  %PC.i1977 = bitcast %union.anon* %7338 to i64*
  %7339 = load i64, i64* %PC.i1977
  %7340 = add i64 %7339, 273
  %7341 = load i64, i64* %PC.i1977
  %7342 = add i64 %7341, 5
  store i64 %7342, i64* %PC.i1977
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7340, i64* %7343, align 8
  store %struct.Memory* %loadMem_406803, %struct.Memory** %MEMORY
  br label %block_.L_406914

block_.L_406808:                                  ; preds = %block_.L_4067be
  %loadMem_406808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 33
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %PC.i1975 = bitcast %union.anon* %7346 to i64*
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 15
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %RBP.i1976 = bitcast %union.anon* %7349 to i64*
  %7350 = load i64, i64* %RBP.i1976
  %7351 = sub i64 %7350, 20
  %7352 = load i64, i64* %PC.i1975
  %7353 = add i64 %7352, 4
  store i64 %7353, i64* %PC.i1975
  %7354 = inttoptr i64 %7351 to i32*
  %7355 = load i32, i32* %7354
  %7356 = sub i32 %7355, 1
  %7357 = icmp ult i32 %7355, 1
  %7358 = zext i1 %7357 to i8
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7358, i8* %7359, align 1
  %7360 = and i32 %7356, 255
  %7361 = call i32 @llvm.ctpop.i32(i32 %7360)
  %7362 = trunc i32 %7361 to i8
  %7363 = and i8 %7362, 1
  %7364 = xor i8 %7363, 1
  %7365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7364, i8* %7365, align 1
  %7366 = xor i32 %7355, 1
  %7367 = xor i32 %7366, %7356
  %7368 = lshr i32 %7367, 4
  %7369 = trunc i32 %7368 to i8
  %7370 = and i8 %7369, 1
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7370, i8* %7371, align 1
  %7372 = icmp eq i32 %7356, 0
  %7373 = zext i1 %7372 to i8
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7373, i8* %7374, align 1
  %7375 = lshr i32 %7356, 31
  %7376 = trunc i32 %7375 to i8
  %7377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7376, i8* %7377, align 1
  %7378 = lshr i32 %7355, 31
  %7379 = xor i32 %7375, %7378
  %7380 = add i32 %7379, %7378
  %7381 = icmp eq i32 %7380, 2
  %7382 = zext i1 %7381 to i8
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7382, i8* %7383, align 1
  store %struct.Memory* %loadMem_406808, %struct.Memory** %MEMORY
  %loadMem_40680c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7385 = getelementptr inbounds %struct.GPR, %struct.GPR* %7384, i32 0, i32 33
  %7386 = getelementptr inbounds %struct.Reg, %struct.Reg* %7385, i32 0, i32 0
  %PC.i1974 = bitcast %union.anon* %7386 to i64*
  %7387 = load i64, i64* %PC.i1974
  %7388 = add i64 %7387, 135
  %7389 = load i64, i64* %PC.i1974
  %7390 = add i64 %7389, 6
  %7391 = load i64, i64* %PC.i1974
  %7392 = add i64 %7391, 6
  store i64 %7392, i64* %PC.i1974
  %7393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7394 = load i8, i8* %7393, align 1
  %7395 = icmp eq i8 %7394, 0
  %7396 = zext i1 %7395 to i8
  store i8 %7396, i8* %BRANCH_TAKEN, align 1
  %7397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7398 = select i1 %7395, i64 %7388, i64 %7390
  store i64 %7398, i64* %7397, align 8
  store %struct.Memory* %loadMem_40680c, %struct.Memory** %MEMORY
  %loadBr_40680c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40680c = icmp eq i8 %loadBr_40680c, 1
  br i1 %cmpBr_40680c, label %block_.L_406893, label %block_406812

block_406812:                                     ; preds = %block_.L_406808
  %loadMem_406812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7400 = getelementptr inbounds %struct.GPR, %struct.GPR* %7399, i32 0, i32 33
  %7401 = getelementptr inbounds %struct.Reg, %struct.Reg* %7400, i32 0, i32 0
  %PC.i1972 = bitcast %union.anon* %7401 to i64*
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7403 = getelementptr inbounds %struct.GPR, %struct.GPR* %7402, i32 0, i32 1
  %7404 = getelementptr inbounds %struct.Reg, %struct.Reg* %7403, i32 0, i32 0
  %RAX.i1973 = bitcast %union.anon* %7404 to i64*
  %7405 = load i64, i64* %PC.i1972
  %7406 = add i64 %7405, 8
  store i64 %7406, i64* %PC.i1972
  %7407 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7407, i64* %RAX.i1973, align 8
  store %struct.Memory* %loadMem_406812, %struct.Memory** %MEMORY
  %loadMem_40681a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7409 = getelementptr inbounds %struct.GPR, %struct.GPR* %7408, i32 0, i32 33
  %7410 = getelementptr inbounds %struct.Reg, %struct.Reg* %7409, i32 0, i32 0
  %PC.i1970 = bitcast %union.anon* %7410 to i64*
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7412 = getelementptr inbounds %struct.GPR, %struct.GPR* %7411, i32 0, i32 1
  %7413 = getelementptr inbounds %struct.Reg, %struct.Reg* %7412, i32 0, i32 0
  %RAX.i1971 = bitcast %union.anon* %7413 to i64*
  %7414 = load i64, i64* %RAX.i1971
  %7415 = load i64, i64* %PC.i1970
  %7416 = add i64 %7415, 6
  store i64 %7416, i64* %PC.i1970
  %7417 = add i64 13112, %7414
  store i64 %7417, i64* %RAX.i1971, align 8
  %7418 = icmp ult i64 %7417, %7414
  %7419 = icmp ult i64 %7417, 13112
  %7420 = or i1 %7418, %7419
  %7421 = zext i1 %7420 to i8
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7421, i8* %7422, align 1
  %7423 = trunc i64 %7417 to i32
  %7424 = and i32 %7423, 255
  %7425 = call i32 @llvm.ctpop.i32(i32 %7424)
  %7426 = trunc i32 %7425 to i8
  %7427 = and i8 %7426, 1
  %7428 = xor i8 %7427, 1
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7428, i8* %7429, align 1
  %7430 = xor i64 13112, %7414
  %7431 = xor i64 %7430, %7417
  %7432 = lshr i64 %7431, 4
  %7433 = trunc i64 %7432 to i8
  %7434 = and i8 %7433, 1
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7434, i8* %7435, align 1
  %7436 = icmp eq i64 %7417, 0
  %7437 = zext i1 %7436 to i8
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7437, i8* %7438, align 1
  %7439 = lshr i64 %7417, 63
  %7440 = trunc i64 %7439 to i8
  %7441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7440, i8* %7441, align 1
  %7442 = lshr i64 %7414, 63
  %7443 = xor i64 %7439, %7442
  %7444 = add i64 %7443, %7439
  %7445 = icmp eq i64 %7444, 2
  %7446 = zext i1 %7445 to i8
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7446, i8* %7447, align 1
  store %struct.Memory* %loadMem_40681a, %struct.Memory** %MEMORY
  %loadMem_406820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7449 = getelementptr inbounds %struct.GPR, %struct.GPR* %7448, i32 0, i32 33
  %7450 = getelementptr inbounds %struct.Reg, %struct.Reg* %7449, i32 0, i32 0
  %PC.i1967 = bitcast %union.anon* %7450 to i64*
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7452 = getelementptr inbounds %struct.GPR, %struct.GPR* %7451, i32 0, i32 5
  %7453 = getelementptr inbounds %struct.Reg, %struct.Reg* %7452, i32 0, i32 0
  %RCX.i1968 = bitcast %union.anon* %7453 to i64*
  %7454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7455 = getelementptr inbounds %struct.GPR, %struct.GPR* %7454, i32 0, i32 15
  %7456 = getelementptr inbounds %struct.Reg, %struct.Reg* %7455, i32 0, i32 0
  %RBP.i1969 = bitcast %union.anon* %7456 to i64*
  %7457 = load i64, i64* %RBP.i1969
  %7458 = sub i64 %7457, 24
  %7459 = load i64, i64* %PC.i1967
  %7460 = add i64 %7459, 4
  store i64 %7460, i64* %PC.i1967
  %7461 = inttoptr i64 %7458 to i32*
  %7462 = load i32, i32* %7461
  %7463 = sext i32 %7462 to i64
  store i64 %7463, i64* %RCX.i1968, align 8
  store %struct.Memory* %loadMem_406820, %struct.Memory** %MEMORY
  %loadMem_406824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7465 = getelementptr inbounds %struct.GPR, %struct.GPR* %7464, i32 0, i32 33
  %7466 = getelementptr inbounds %struct.Reg, %struct.Reg* %7465, i32 0, i32 0
  %PC.i1965 = bitcast %union.anon* %7466 to i64*
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7468 = getelementptr inbounds %struct.GPR, %struct.GPR* %7467, i32 0, i32 5
  %7469 = getelementptr inbounds %struct.Reg, %struct.Reg* %7468, i32 0, i32 0
  %RCX.i1966 = bitcast %union.anon* %7469 to i64*
  %7470 = load i64, i64* %RCX.i1966
  %7471 = load i64, i64* %PC.i1965
  %7472 = add i64 %7471, 4
  store i64 %7472, i64* %PC.i1965
  %7473 = shl i64 %7470, 5
  %7474 = icmp slt i64 %7473, 0
  %7475 = shl i64 %7473, 1
  store i64 %7475, i64* %RCX.i1966, align 8
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7477 = zext i1 %7474 to i8
  store i8 %7477, i8* %7476, align 1
  %7478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7479 = trunc i64 %7475 to i32
  %7480 = and i32 %7479, 254
  %7481 = call i32 @llvm.ctpop.i32(i32 %7480)
  %7482 = trunc i32 %7481 to i8
  %7483 = and i8 %7482, 1
  %7484 = xor i8 %7483, 1
  store i8 %7484, i8* %7478, align 1
  %7485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7485, align 1
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7487 = icmp eq i64 %7475, 0
  %7488 = zext i1 %7487 to i8
  store i8 %7488, i8* %7486, align 1
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7490 = lshr i64 %7475, 63
  %7491 = trunc i64 %7490 to i8
  store i8 %7491, i8* %7489, align 1
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7492, align 1
  store %struct.Memory* %loadMem_406824, %struct.Memory** %MEMORY
  %loadMem_406828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7494 = getelementptr inbounds %struct.GPR, %struct.GPR* %7493, i32 0, i32 33
  %7495 = getelementptr inbounds %struct.Reg, %struct.Reg* %7494, i32 0, i32 0
  %PC.i1962 = bitcast %union.anon* %7495 to i64*
  %7496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7497 = getelementptr inbounds %struct.GPR, %struct.GPR* %7496, i32 0, i32 1
  %7498 = getelementptr inbounds %struct.Reg, %struct.Reg* %7497, i32 0, i32 0
  %RAX.i1963 = bitcast %union.anon* %7498 to i64*
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7500 = getelementptr inbounds %struct.GPR, %struct.GPR* %7499, i32 0, i32 5
  %7501 = getelementptr inbounds %struct.Reg, %struct.Reg* %7500, i32 0, i32 0
  %RCX.i1964 = bitcast %union.anon* %7501 to i64*
  %7502 = load i64, i64* %RAX.i1963
  %7503 = load i64, i64* %RCX.i1964
  %7504 = load i64, i64* %PC.i1962
  %7505 = add i64 %7504, 3
  store i64 %7505, i64* %PC.i1962
  %7506 = add i64 %7503, %7502
  store i64 %7506, i64* %RAX.i1963, align 8
  %7507 = icmp ult i64 %7506, %7502
  %7508 = icmp ult i64 %7506, %7503
  %7509 = or i1 %7507, %7508
  %7510 = zext i1 %7509 to i8
  %7511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7510, i8* %7511, align 1
  %7512 = trunc i64 %7506 to i32
  %7513 = and i32 %7512, 255
  %7514 = call i32 @llvm.ctpop.i32(i32 %7513)
  %7515 = trunc i32 %7514 to i8
  %7516 = and i8 %7515, 1
  %7517 = xor i8 %7516, 1
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7517, i8* %7518, align 1
  %7519 = xor i64 %7503, %7502
  %7520 = xor i64 %7519, %7506
  %7521 = lshr i64 %7520, 4
  %7522 = trunc i64 %7521 to i8
  %7523 = and i8 %7522, 1
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7523, i8* %7524, align 1
  %7525 = icmp eq i64 %7506, 0
  %7526 = zext i1 %7525 to i8
  %7527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7526, i8* %7527, align 1
  %7528 = lshr i64 %7506, 63
  %7529 = trunc i64 %7528 to i8
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7529, i8* %7530, align 1
  %7531 = lshr i64 %7502, 63
  %7532 = lshr i64 %7503, 63
  %7533 = xor i64 %7528, %7531
  %7534 = xor i64 %7528, %7532
  %7535 = add i64 %7533, %7534
  %7536 = icmp eq i64 %7535, 2
  %7537 = zext i1 %7536 to i8
  %7538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7537, i8* %7538, align 1
  store %struct.Memory* %loadMem_406828, %struct.Memory** %MEMORY
  %loadMem_40682b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7540 = getelementptr inbounds %struct.GPR, %struct.GPR* %7539, i32 0, i32 33
  %7541 = getelementptr inbounds %struct.Reg, %struct.Reg* %7540, i32 0, i32 0
  %PC.i1959 = bitcast %union.anon* %7541 to i64*
  %7542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7543 = getelementptr inbounds %struct.GPR, %struct.GPR* %7542, i32 0, i32 5
  %7544 = getelementptr inbounds %struct.Reg, %struct.Reg* %7543, i32 0, i32 0
  %RCX.i1960 = bitcast %union.anon* %7544 to i64*
  %7545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7546 = getelementptr inbounds %struct.GPR, %struct.GPR* %7545, i32 0, i32 15
  %7547 = getelementptr inbounds %struct.Reg, %struct.Reg* %7546, i32 0, i32 0
  %RBP.i1961 = bitcast %union.anon* %7547 to i64*
  %7548 = load i64, i64* %RBP.i1961
  %7549 = sub i64 %7548, 28
  %7550 = load i64, i64* %PC.i1959
  %7551 = add i64 %7550, 4
  store i64 %7551, i64* %PC.i1959
  %7552 = inttoptr i64 %7549 to i32*
  %7553 = load i32, i32* %7552
  %7554 = sext i32 %7553 to i64
  store i64 %7554, i64* %RCX.i1960, align 8
  store %struct.Memory* %loadMem_40682b, %struct.Memory** %MEMORY
  %loadMem_40682f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7556 = getelementptr inbounds %struct.GPR, %struct.GPR* %7555, i32 0, i32 33
  %7557 = getelementptr inbounds %struct.Reg, %struct.Reg* %7556, i32 0, i32 0
  %PC.i1955 = bitcast %union.anon* %7557 to i64*
  %7558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7559 = getelementptr inbounds %struct.GPR, %struct.GPR* %7558, i32 0, i32 1
  %7560 = getelementptr inbounds %struct.Reg, %struct.Reg* %7559, i32 0, i32 0
  %RAX.i1956 = bitcast %union.anon* %7560 to i64*
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7562 = getelementptr inbounds %struct.GPR, %struct.GPR* %7561, i32 0, i32 5
  %7563 = getelementptr inbounds %struct.Reg, %struct.Reg* %7562, i32 0, i32 0
  %RCX.i1957 = bitcast %union.anon* %7563 to i64*
  %7564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7565 = getelementptr inbounds %struct.GPR, %struct.GPR* %7564, i32 0, i32 11
  %7566 = getelementptr inbounds %struct.Reg, %struct.Reg* %7565, i32 0, i32 0
  %RDI.i1958 = bitcast %union.anon* %7566 to i64*
  %7567 = load i64, i64* %RAX.i1956
  %7568 = load i64, i64* %RCX.i1957
  %7569 = mul i64 %7568, 4
  %7570 = add i64 %7569, %7567
  %7571 = load i64, i64* %PC.i1955
  %7572 = add i64 %7571, 3
  store i64 %7572, i64* %PC.i1955
  %7573 = inttoptr i64 %7570 to i32*
  %7574 = load i32, i32* %7573
  %7575 = zext i32 %7574 to i64
  store i64 %7575, i64* %RDI.i1958, align 8
  store %struct.Memory* %loadMem_40682f, %struct.Memory** %MEMORY
  %loadMem1_406832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7577 = getelementptr inbounds %struct.GPR, %struct.GPR* %7576, i32 0, i32 33
  %7578 = getelementptr inbounds %struct.Reg, %struct.Reg* %7577, i32 0, i32 0
  %PC.i1954 = bitcast %union.anon* %7578 to i64*
  %7579 = load i64, i64* %PC.i1954
  %7580 = add i64 %7579, -22578
  %7581 = load i64, i64* %PC.i1954
  %7582 = add i64 %7581, 5
  %7583 = load i64, i64* %PC.i1954
  %7584 = add i64 %7583, 5
  store i64 %7584, i64* %PC.i1954
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7586 = load i64, i64* %7585, align 8
  %7587 = add i64 %7586, -8
  %7588 = inttoptr i64 %7587 to i64*
  store i64 %7582, i64* %7588
  store i64 %7587, i64* %7585, align 8
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7580, i64* %7589, align 8
  store %struct.Memory* %loadMem1_406832, %struct.Memory** %MEMORY
  %loadMem2_406832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406832 = load i64, i64* %3
  %7590 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_406832)
  store %struct.Memory* %7590, %struct.Memory** %MEMORY
  %loadMem_406837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7592 = getelementptr inbounds %struct.GPR, %struct.GPR* %7591, i32 0, i32 33
  %7593 = getelementptr inbounds %struct.Reg, %struct.Reg* %7592, i32 0, i32 0
  %PC.i1950 = bitcast %union.anon* %7593 to i64*
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7595 = getelementptr inbounds %struct.GPR, %struct.GPR* %7594, i32 0, i32 5
  %7596 = getelementptr inbounds %struct.Reg, %struct.Reg* %7595, i32 0, i32 0
  %RCX.i1951 = bitcast %union.anon* %7596 to i64*
  %7597 = load i64, i64* %PC.i1950
  %7598 = add i64 %7597, 10
  store i64 %7598, i64* %PC.i1950
  store i64 7405600, i64* %RCX.i1951, align 8
  store %struct.Memory* %loadMem_406837, %struct.Memory** %MEMORY
  %loadMem_406841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7600 = getelementptr inbounds %struct.GPR, %struct.GPR* %7599, i32 0, i32 33
  %7601 = getelementptr inbounds %struct.Reg, %struct.Reg* %7600, i32 0, i32 0
  %PC.i1948 = bitcast %union.anon* %7601 to i64*
  %7602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7603 = getelementptr inbounds %struct.GPR, %struct.GPR* %7602, i32 0, i32 7
  %7604 = getelementptr inbounds %struct.Reg, %struct.Reg* %7603, i32 0, i32 0
  %RDX.i1949 = bitcast %union.anon* %7604 to i64*
  %7605 = load i64, i64* %PC.i1948
  %7606 = add i64 %7605, 10
  store i64 %7606, i64* %PC.i1948
  store i64 ptrtoint (%G__0x70e8f0_type* @G__0x70e8f0 to i64), i64* %RDX.i1949, align 8
  store %struct.Memory* %loadMem_406841, %struct.Memory** %MEMORY
  %loadMem_40684b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7608 = getelementptr inbounds %struct.GPR, %struct.GPR* %7607, i32 0, i32 33
  %7609 = getelementptr inbounds %struct.Reg, %struct.Reg* %7608, i32 0, i32 0
  %PC.i1945 = bitcast %union.anon* %7609 to i64*
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7611 = getelementptr inbounds %struct.GPR, %struct.GPR* %7610, i32 0, i32 9
  %7612 = getelementptr inbounds %struct.Reg, %struct.Reg* %7611, i32 0, i32 0
  %RSI.i1946 = bitcast %union.anon* %7612 to i64*
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7614 = getelementptr inbounds %struct.GPR, %struct.GPR* %7613, i32 0, i32 15
  %7615 = getelementptr inbounds %struct.Reg, %struct.Reg* %7614, i32 0, i32 0
  %RBP.i1947 = bitcast %union.anon* %7615 to i64*
  %7616 = load i64, i64* %RBP.i1947
  %7617 = sub i64 %7616, 108
  %7618 = load i64, i64* %PC.i1945
  %7619 = add i64 %7618, 4
  store i64 %7619, i64* %PC.i1945
  %7620 = inttoptr i64 %7617 to i32*
  %7621 = load i32, i32* %7620
  %7622 = sext i32 %7621 to i64
  store i64 %7622, i64* %RSI.i1946, align 8
  store %struct.Memory* %loadMem_40684b, %struct.Memory** %MEMORY
  %loadMem_40684f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7624 = getelementptr inbounds %struct.GPR, %struct.GPR* %7623, i32 0, i32 33
  %7625 = getelementptr inbounds %struct.Reg, %struct.Reg* %7624, i32 0, i32 0
  %PC.i1943 = bitcast %union.anon* %7625 to i64*
  %7626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7627 = getelementptr inbounds %struct.GPR, %struct.GPR* %7626, i32 0, i32 9
  %7628 = getelementptr inbounds %struct.Reg, %struct.Reg* %7627, i32 0, i32 0
  %RSI.i1944 = bitcast %union.anon* %7628 to i64*
  %7629 = load i64, i64* %RSI.i1944
  %7630 = load i64, i64* %PC.i1943
  %7631 = add i64 %7630, 4
  store i64 %7631, i64* %PC.i1943
  %7632 = shl i64 %7629, 5
  %7633 = icmp slt i64 %7632, 0
  %7634 = shl i64 %7632, 1
  store i64 %7634, i64* %RSI.i1944, align 8
  %7635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7636 = zext i1 %7633 to i8
  store i8 %7636, i8* %7635, align 1
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7638 = trunc i64 %7634 to i32
  %7639 = and i32 %7638, 254
  %7640 = call i32 @llvm.ctpop.i32(i32 %7639)
  %7641 = trunc i32 %7640 to i8
  %7642 = and i8 %7641, 1
  %7643 = xor i8 %7642, 1
  store i8 %7643, i8* %7637, align 1
  %7644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7644, align 1
  %7645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7646 = icmp eq i64 %7634, 0
  %7647 = zext i1 %7646 to i8
  store i8 %7647, i8* %7645, align 1
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7649 = lshr i64 %7634, 63
  %7650 = trunc i64 %7649 to i8
  store i8 %7650, i8* %7648, align 1
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7651, align 1
  store %struct.Memory* %loadMem_40684f, %struct.Memory** %MEMORY
  %loadMem_406853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7653 = getelementptr inbounds %struct.GPR, %struct.GPR* %7652, i32 0, i32 33
  %7654 = getelementptr inbounds %struct.Reg, %struct.Reg* %7653, i32 0, i32 0
  %PC.i1940 = bitcast %union.anon* %7654 to i64*
  %7655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7656 = getelementptr inbounds %struct.GPR, %struct.GPR* %7655, i32 0, i32 7
  %7657 = getelementptr inbounds %struct.Reg, %struct.Reg* %7656, i32 0, i32 0
  %RDX.i1941 = bitcast %union.anon* %7657 to i64*
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7659 = getelementptr inbounds %struct.GPR, %struct.GPR* %7658, i32 0, i32 9
  %7660 = getelementptr inbounds %struct.Reg, %struct.Reg* %7659, i32 0, i32 0
  %RSI.i1942 = bitcast %union.anon* %7660 to i64*
  %7661 = load i64, i64* %RDX.i1941
  %7662 = load i64, i64* %RSI.i1942
  %7663 = load i64, i64* %PC.i1940
  %7664 = add i64 %7663, 3
  store i64 %7664, i64* %PC.i1940
  %7665 = add i64 %7662, %7661
  store i64 %7665, i64* %RDX.i1941, align 8
  %7666 = icmp ult i64 %7665, %7661
  %7667 = icmp ult i64 %7665, %7662
  %7668 = or i1 %7666, %7667
  %7669 = zext i1 %7668 to i8
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7669, i8* %7670, align 1
  %7671 = trunc i64 %7665 to i32
  %7672 = and i32 %7671, 255
  %7673 = call i32 @llvm.ctpop.i32(i32 %7672)
  %7674 = trunc i32 %7673 to i8
  %7675 = and i8 %7674, 1
  %7676 = xor i8 %7675, 1
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7676, i8* %7677, align 1
  %7678 = xor i64 %7662, %7661
  %7679 = xor i64 %7678, %7665
  %7680 = lshr i64 %7679, 4
  %7681 = trunc i64 %7680 to i8
  %7682 = and i8 %7681, 1
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7682, i8* %7683, align 1
  %7684 = icmp eq i64 %7665, 0
  %7685 = zext i1 %7684 to i8
  %7686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7685, i8* %7686, align 1
  %7687 = lshr i64 %7665, 63
  %7688 = trunc i64 %7687 to i8
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7688, i8* %7689, align 1
  %7690 = lshr i64 %7661, 63
  %7691 = lshr i64 %7662, 63
  %7692 = xor i64 %7687, %7690
  %7693 = xor i64 %7687, %7691
  %7694 = add i64 %7692, %7693
  %7695 = icmp eq i64 %7694, 2
  %7696 = zext i1 %7695 to i8
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7696, i8* %7697, align 1
  store %struct.Memory* %loadMem_406853, %struct.Memory** %MEMORY
  %loadMem_406856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7699 = getelementptr inbounds %struct.GPR, %struct.GPR* %7698, i32 0, i32 33
  %7700 = getelementptr inbounds %struct.Reg, %struct.Reg* %7699, i32 0, i32 0
  %PC.i1937 = bitcast %union.anon* %7700 to i64*
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 9
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %RSI.i1938 = bitcast %union.anon* %7703 to i64*
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7705 = getelementptr inbounds %struct.GPR, %struct.GPR* %7704, i32 0, i32 15
  %7706 = getelementptr inbounds %struct.Reg, %struct.Reg* %7705, i32 0, i32 0
  %RBP.i1939 = bitcast %union.anon* %7706 to i64*
  %7707 = load i64, i64* %RBP.i1939
  %7708 = sub i64 %7707, 24
  %7709 = load i64, i64* %PC.i1937
  %7710 = add i64 %7709, 4
  store i64 %7710, i64* %PC.i1937
  %7711 = inttoptr i64 %7708 to i32*
  %7712 = load i32, i32* %7711
  %7713 = sext i32 %7712 to i64
  store i64 %7713, i64* %RSI.i1938, align 8
  store %struct.Memory* %loadMem_406856, %struct.Memory** %MEMORY
  %loadMem_40685a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7715 = getelementptr inbounds %struct.GPR, %struct.GPR* %7714, i32 0, i32 33
  %7716 = getelementptr inbounds %struct.Reg, %struct.Reg* %7715, i32 0, i32 0
  %PC.i1935 = bitcast %union.anon* %7716 to i64*
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7718 = getelementptr inbounds %struct.GPR, %struct.GPR* %7717, i32 0, i32 9
  %7719 = getelementptr inbounds %struct.Reg, %struct.Reg* %7718, i32 0, i32 0
  %RSI.i1936 = bitcast %union.anon* %7719 to i64*
  %7720 = load i64, i64* %RSI.i1936
  %7721 = load i64, i64* %PC.i1935
  %7722 = add i64 %7721, 4
  store i64 %7722, i64* %PC.i1935
  %7723 = shl i64 %7720, 3
  %7724 = icmp slt i64 %7723, 0
  %7725 = shl i64 %7723, 1
  store i64 %7725, i64* %RSI.i1936, align 8
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7727 = zext i1 %7724 to i8
  store i8 %7727, i8* %7726, align 1
  %7728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7729 = trunc i64 %7725 to i32
  %7730 = and i32 %7729, 254
  %7731 = call i32 @llvm.ctpop.i32(i32 %7730)
  %7732 = trunc i32 %7731 to i8
  %7733 = and i8 %7732, 1
  %7734 = xor i8 %7733, 1
  store i8 %7734, i8* %7728, align 1
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7735, align 1
  %7736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7737 = icmp eq i64 %7725, 0
  %7738 = zext i1 %7737 to i8
  store i8 %7738, i8* %7736, align 1
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7740 = lshr i64 %7725, 63
  %7741 = trunc i64 %7740 to i8
  store i8 %7741, i8* %7739, align 1
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7742, align 1
  store %struct.Memory* %loadMem_40685a, %struct.Memory** %MEMORY
  %loadMem_40685e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7744 = getelementptr inbounds %struct.GPR, %struct.GPR* %7743, i32 0, i32 33
  %7745 = getelementptr inbounds %struct.Reg, %struct.Reg* %7744, i32 0, i32 0
  %PC.i1932 = bitcast %union.anon* %7745 to i64*
  %7746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7747 = getelementptr inbounds %struct.GPR, %struct.GPR* %7746, i32 0, i32 7
  %7748 = getelementptr inbounds %struct.Reg, %struct.Reg* %7747, i32 0, i32 0
  %RDX.i1933 = bitcast %union.anon* %7748 to i64*
  %7749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7750 = getelementptr inbounds %struct.GPR, %struct.GPR* %7749, i32 0, i32 9
  %7751 = getelementptr inbounds %struct.Reg, %struct.Reg* %7750, i32 0, i32 0
  %RSI.i1934 = bitcast %union.anon* %7751 to i64*
  %7752 = load i64, i64* %RDX.i1933
  %7753 = load i64, i64* %RSI.i1934
  %7754 = load i64, i64* %PC.i1932
  %7755 = add i64 %7754, 3
  store i64 %7755, i64* %PC.i1932
  %7756 = add i64 %7753, %7752
  store i64 %7756, i64* %RDX.i1933, align 8
  %7757 = icmp ult i64 %7756, %7752
  %7758 = icmp ult i64 %7756, %7753
  %7759 = or i1 %7757, %7758
  %7760 = zext i1 %7759 to i8
  %7761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7760, i8* %7761, align 1
  %7762 = trunc i64 %7756 to i32
  %7763 = and i32 %7762, 255
  %7764 = call i32 @llvm.ctpop.i32(i32 %7763)
  %7765 = trunc i32 %7764 to i8
  %7766 = and i8 %7765, 1
  %7767 = xor i8 %7766, 1
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7767, i8* %7768, align 1
  %7769 = xor i64 %7753, %7752
  %7770 = xor i64 %7769, %7756
  %7771 = lshr i64 %7770, 4
  %7772 = trunc i64 %7771 to i8
  %7773 = and i8 %7772, 1
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7773, i8* %7774, align 1
  %7775 = icmp eq i64 %7756, 0
  %7776 = zext i1 %7775 to i8
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7776, i8* %7777, align 1
  %7778 = lshr i64 %7756, 63
  %7779 = trunc i64 %7778 to i8
  %7780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7779, i8* %7780, align 1
  %7781 = lshr i64 %7752, 63
  %7782 = lshr i64 %7753, 63
  %7783 = xor i64 %7778, %7781
  %7784 = xor i64 %7778, %7782
  %7785 = add i64 %7783, %7784
  %7786 = icmp eq i64 %7785, 2
  %7787 = zext i1 %7786 to i8
  %7788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7787, i8* %7788, align 1
  store %struct.Memory* %loadMem_40685e, %struct.Memory** %MEMORY
  %loadMem_406861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7790 = getelementptr inbounds %struct.GPR, %struct.GPR* %7789, i32 0, i32 33
  %7791 = getelementptr inbounds %struct.Reg, %struct.Reg* %7790, i32 0, i32 0
  %PC.i1929 = bitcast %union.anon* %7791 to i64*
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7793 = getelementptr inbounds %struct.GPR, %struct.GPR* %7792, i32 0, i32 9
  %7794 = getelementptr inbounds %struct.Reg, %struct.Reg* %7793, i32 0, i32 0
  %RSI.i1930 = bitcast %union.anon* %7794 to i64*
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7796 = getelementptr inbounds %struct.GPR, %struct.GPR* %7795, i32 0, i32 15
  %7797 = getelementptr inbounds %struct.Reg, %struct.Reg* %7796, i32 0, i32 0
  %RBP.i1931 = bitcast %union.anon* %7797 to i64*
  %7798 = load i64, i64* %RBP.i1931
  %7799 = sub i64 %7798, 28
  %7800 = load i64, i64* %PC.i1929
  %7801 = add i64 %7800, 4
  store i64 %7801, i64* %PC.i1929
  %7802 = inttoptr i64 %7799 to i32*
  %7803 = load i32, i32* %7802
  %7804 = sext i32 %7803 to i64
  store i64 %7804, i64* %RSI.i1930, align 8
  store %struct.Memory* %loadMem_406861, %struct.Memory** %MEMORY
  %loadMem_406865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7806 = getelementptr inbounds %struct.GPR, %struct.GPR* %7805, i32 0, i32 33
  %7807 = getelementptr inbounds %struct.Reg, %struct.Reg* %7806, i32 0, i32 0
  %PC.i1925 = bitcast %union.anon* %7807 to i64*
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7809 = getelementptr inbounds %struct.GPR, %struct.GPR* %7808, i32 0, i32 1
  %7810 = getelementptr inbounds %struct.Reg, %struct.Reg* %7809, i32 0, i32 0
  %RAX.i1926 = bitcast %union.anon* %7810 to i64*
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7812 = getelementptr inbounds %struct.GPR, %struct.GPR* %7811, i32 0, i32 7
  %7813 = getelementptr inbounds %struct.Reg, %struct.Reg* %7812, i32 0, i32 0
  %RDX.i1927 = bitcast %union.anon* %7813 to i64*
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7815 = getelementptr inbounds %struct.GPR, %struct.GPR* %7814, i32 0, i32 9
  %7816 = getelementptr inbounds %struct.Reg, %struct.Reg* %7815, i32 0, i32 0
  %RSI.i1928 = bitcast %union.anon* %7816 to i64*
  %7817 = load i64, i64* %RAX.i1926
  %7818 = load i64, i64* %RDX.i1927
  %7819 = load i64, i64* %RSI.i1928
  %7820 = mul i64 %7819, 4
  %7821 = add i64 %7820, %7818
  %7822 = load i64, i64* %PC.i1925
  %7823 = add i64 %7822, 4
  store i64 %7823, i64* %PC.i1925
  %7824 = inttoptr i64 %7821 to i32*
  %7825 = load i32, i32* %7824
  %7826 = shl i64 %7817, 32
  %7827 = ashr exact i64 %7826, 32
  %7828 = sext i32 %7825 to i64
  %7829 = mul i64 %7828, %7827
  %7830 = trunc i64 %7829 to i32
  %7831 = and i64 %7829, 4294967295
  store i64 %7831, i64* %RAX.i1926, align 8
  %7832 = shl i64 %7829, 32
  %7833 = ashr exact i64 %7832, 32
  %7834 = icmp ne i64 %7833, %7829
  %7835 = zext i1 %7834 to i8
  %7836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7835, i8* %7836, align 1
  %7837 = and i32 %7830, 255
  %7838 = call i32 @llvm.ctpop.i32(i32 %7837)
  %7839 = trunc i32 %7838 to i8
  %7840 = and i8 %7839, 1
  %7841 = xor i8 %7840, 1
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7841, i8* %7842, align 1
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7843, align 1
  %7844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7844, align 1
  %7845 = lshr i32 %7830, 31
  %7846 = trunc i32 %7845 to i8
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7846, i8* %7847, align 1
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7835, i8* %7848, align 1
  store %struct.Memory* %loadMem_406865, %struct.Memory** %MEMORY
  %loadMem_406869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7850 = getelementptr inbounds %struct.GPR, %struct.GPR* %7849, i32 0, i32 33
  %7851 = getelementptr inbounds %struct.Reg, %struct.Reg* %7850, i32 0, i32 0
  %PC.i1922 = bitcast %union.anon* %7851 to i64*
  %7852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7853 = getelementptr inbounds %struct.GPR, %struct.GPR* %7852, i32 0, i32 7
  %7854 = getelementptr inbounds %struct.Reg, %struct.Reg* %7853, i32 0, i32 0
  %RDX.i1923 = bitcast %union.anon* %7854 to i64*
  %7855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7856 = getelementptr inbounds %struct.GPR, %struct.GPR* %7855, i32 0, i32 15
  %7857 = getelementptr inbounds %struct.Reg, %struct.Reg* %7856, i32 0, i32 0
  %RBP.i1924 = bitcast %union.anon* %7857 to i64*
  %7858 = load i64, i64* %RBP.i1924
  %7859 = sub i64 %7858, 104
  %7860 = load i64, i64* %PC.i1922
  %7861 = add i64 %7860, 4
  store i64 %7861, i64* %PC.i1922
  %7862 = inttoptr i64 %7859 to i32*
  %7863 = load i32, i32* %7862
  %7864 = sext i32 %7863 to i64
  store i64 %7864, i64* %RDX.i1923, align 8
  store %struct.Memory* %loadMem_406869, %struct.Memory** %MEMORY
  %loadMem_40686d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7866 = getelementptr inbounds %struct.GPR, %struct.GPR* %7865, i32 0, i32 33
  %7867 = getelementptr inbounds %struct.Reg, %struct.Reg* %7866, i32 0, i32 0
  %PC.i1920 = bitcast %union.anon* %7867 to i64*
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7869 = getelementptr inbounds %struct.GPR, %struct.GPR* %7868, i32 0, i32 7
  %7870 = getelementptr inbounds %struct.Reg, %struct.Reg* %7869, i32 0, i32 0
  %RDX.i1921 = bitcast %union.anon* %7870 to i64*
  %7871 = load i64, i64* %RDX.i1921
  %7872 = load i64, i64* %PC.i1920
  %7873 = add i64 %7872, 4
  store i64 %7873, i64* %PC.i1920
  %7874 = shl i64 %7871, 5
  %7875 = icmp slt i64 %7874, 0
  %7876 = shl i64 %7874, 1
  store i64 %7876, i64* %RDX.i1921, align 8
  %7877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7878 = zext i1 %7875 to i8
  store i8 %7878, i8* %7877, align 1
  %7879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7880 = trunc i64 %7876 to i32
  %7881 = and i32 %7880, 254
  %7882 = call i32 @llvm.ctpop.i32(i32 %7881)
  %7883 = trunc i32 %7882 to i8
  %7884 = and i8 %7883, 1
  %7885 = xor i8 %7884, 1
  store i8 %7885, i8* %7879, align 1
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7886, align 1
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7888 = icmp eq i64 %7876, 0
  %7889 = zext i1 %7888 to i8
  store i8 %7889, i8* %7887, align 1
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7891 = lshr i64 %7876, 63
  %7892 = trunc i64 %7891 to i8
  store i8 %7892, i8* %7890, align 1
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7893, align 1
  store %struct.Memory* %loadMem_40686d, %struct.Memory** %MEMORY
  %loadMem_406871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7895 = getelementptr inbounds %struct.GPR, %struct.GPR* %7894, i32 0, i32 33
  %7896 = getelementptr inbounds %struct.Reg, %struct.Reg* %7895, i32 0, i32 0
  %PC.i1917 = bitcast %union.anon* %7896 to i64*
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7898 = getelementptr inbounds %struct.GPR, %struct.GPR* %7897, i32 0, i32 5
  %7899 = getelementptr inbounds %struct.Reg, %struct.Reg* %7898, i32 0, i32 0
  %RCX.i1918 = bitcast %union.anon* %7899 to i64*
  %7900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7901 = getelementptr inbounds %struct.GPR, %struct.GPR* %7900, i32 0, i32 7
  %7902 = getelementptr inbounds %struct.Reg, %struct.Reg* %7901, i32 0, i32 0
  %RDX.i1919 = bitcast %union.anon* %7902 to i64*
  %7903 = load i64, i64* %RCX.i1918
  %7904 = load i64, i64* %RDX.i1919
  %7905 = load i64, i64* %PC.i1917
  %7906 = add i64 %7905, 3
  store i64 %7906, i64* %PC.i1917
  %7907 = add i64 %7904, %7903
  store i64 %7907, i64* %RCX.i1918, align 8
  %7908 = icmp ult i64 %7907, %7903
  %7909 = icmp ult i64 %7907, %7904
  %7910 = or i1 %7908, %7909
  %7911 = zext i1 %7910 to i8
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7911, i8* %7912, align 1
  %7913 = trunc i64 %7907 to i32
  %7914 = and i32 %7913, 255
  %7915 = call i32 @llvm.ctpop.i32(i32 %7914)
  %7916 = trunc i32 %7915 to i8
  %7917 = and i8 %7916, 1
  %7918 = xor i8 %7917, 1
  %7919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7918, i8* %7919, align 1
  %7920 = xor i64 %7904, %7903
  %7921 = xor i64 %7920, %7907
  %7922 = lshr i64 %7921, 4
  %7923 = trunc i64 %7922 to i8
  %7924 = and i8 %7923, 1
  %7925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7924, i8* %7925, align 1
  %7926 = icmp eq i64 %7907, 0
  %7927 = zext i1 %7926 to i8
  %7928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7927, i8* %7928, align 1
  %7929 = lshr i64 %7907, 63
  %7930 = trunc i64 %7929 to i8
  %7931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7930, i8* %7931, align 1
  %7932 = lshr i64 %7903, 63
  %7933 = lshr i64 %7904, 63
  %7934 = xor i64 %7929, %7932
  %7935 = xor i64 %7929, %7933
  %7936 = add i64 %7934, %7935
  %7937 = icmp eq i64 %7936, 2
  %7938 = zext i1 %7937 to i8
  %7939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7938, i8* %7939, align 1
  store %struct.Memory* %loadMem_406871, %struct.Memory** %MEMORY
  %loadMem_406874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7941 = getelementptr inbounds %struct.GPR, %struct.GPR* %7940, i32 0, i32 33
  %7942 = getelementptr inbounds %struct.Reg, %struct.Reg* %7941, i32 0, i32 0
  %PC.i1914 = bitcast %union.anon* %7942 to i64*
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7944 = getelementptr inbounds %struct.GPR, %struct.GPR* %7943, i32 0, i32 7
  %7945 = getelementptr inbounds %struct.Reg, %struct.Reg* %7944, i32 0, i32 0
  %RDX.i1915 = bitcast %union.anon* %7945 to i64*
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7947 = getelementptr inbounds %struct.GPR, %struct.GPR* %7946, i32 0, i32 15
  %7948 = getelementptr inbounds %struct.Reg, %struct.Reg* %7947, i32 0, i32 0
  %RBP.i1916 = bitcast %union.anon* %7948 to i64*
  %7949 = load i64, i64* %RBP.i1916
  %7950 = sub i64 %7949, 24
  %7951 = load i64, i64* %PC.i1914
  %7952 = add i64 %7951, 4
  store i64 %7952, i64* %PC.i1914
  %7953 = inttoptr i64 %7950 to i32*
  %7954 = load i32, i32* %7953
  %7955 = sext i32 %7954 to i64
  store i64 %7955, i64* %RDX.i1915, align 8
  store %struct.Memory* %loadMem_406874, %struct.Memory** %MEMORY
  %loadMem_406878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7957 = getelementptr inbounds %struct.GPR, %struct.GPR* %7956, i32 0, i32 33
  %7958 = getelementptr inbounds %struct.Reg, %struct.Reg* %7957, i32 0, i32 0
  %PC.i1912 = bitcast %union.anon* %7958 to i64*
  %7959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7960 = getelementptr inbounds %struct.GPR, %struct.GPR* %7959, i32 0, i32 7
  %7961 = getelementptr inbounds %struct.Reg, %struct.Reg* %7960, i32 0, i32 0
  %RDX.i1913 = bitcast %union.anon* %7961 to i64*
  %7962 = load i64, i64* %RDX.i1913
  %7963 = load i64, i64* %PC.i1912
  %7964 = add i64 %7963, 4
  store i64 %7964, i64* %PC.i1912
  %7965 = shl i64 %7962, 3
  %7966 = icmp slt i64 %7965, 0
  %7967 = shl i64 %7965, 1
  store i64 %7967, i64* %RDX.i1913, align 8
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7969 = zext i1 %7966 to i8
  store i8 %7969, i8* %7968, align 1
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7971 = trunc i64 %7967 to i32
  %7972 = and i32 %7971, 254
  %7973 = call i32 @llvm.ctpop.i32(i32 %7972)
  %7974 = trunc i32 %7973 to i8
  %7975 = and i8 %7974, 1
  %7976 = xor i8 %7975, 1
  store i8 %7976, i8* %7970, align 1
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7977, align 1
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7979 = icmp eq i64 %7967, 0
  %7980 = zext i1 %7979 to i8
  store i8 %7980, i8* %7978, align 1
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7982 = lshr i64 %7967, 63
  %7983 = trunc i64 %7982 to i8
  store i8 %7983, i8* %7981, align 1
  %7984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7984, align 1
  store %struct.Memory* %loadMem_406878, %struct.Memory** %MEMORY
  %loadMem_40687c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7986 = getelementptr inbounds %struct.GPR, %struct.GPR* %7985, i32 0, i32 33
  %7987 = getelementptr inbounds %struct.Reg, %struct.Reg* %7986, i32 0, i32 0
  %PC.i1909 = bitcast %union.anon* %7987 to i64*
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7989 = getelementptr inbounds %struct.GPR, %struct.GPR* %7988, i32 0, i32 5
  %7990 = getelementptr inbounds %struct.Reg, %struct.Reg* %7989, i32 0, i32 0
  %RCX.i1910 = bitcast %union.anon* %7990 to i64*
  %7991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7992 = getelementptr inbounds %struct.GPR, %struct.GPR* %7991, i32 0, i32 7
  %7993 = getelementptr inbounds %struct.Reg, %struct.Reg* %7992, i32 0, i32 0
  %RDX.i1911 = bitcast %union.anon* %7993 to i64*
  %7994 = load i64, i64* %RCX.i1910
  %7995 = load i64, i64* %RDX.i1911
  %7996 = load i64, i64* %PC.i1909
  %7997 = add i64 %7996, 3
  store i64 %7997, i64* %PC.i1909
  %7998 = add i64 %7995, %7994
  store i64 %7998, i64* %RCX.i1910, align 8
  %7999 = icmp ult i64 %7998, %7994
  %8000 = icmp ult i64 %7998, %7995
  %8001 = or i1 %7999, %8000
  %8002 = zext i1 %8001 to i8
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8002, i8* %8003, align 1
  %8004 = trunc i64 %7998 to i32
  %8005 = and i32 %8004, 255
  %8006 = call i32 @llvm.ctpop.i32(i32 %8005)
  %8007 = trunc i32 %8006 to i8
  %8008 = and i8 %8007, 1
  %8009 = xor i8 %8008, 1
  %8010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8009, i8* %8010, align 1
  %8011 = xor i64 %7995, %7994
  %8012 = xor i64 %8011, %7998
  %8013 = lshr i64 %8012, 4
  %8014 = trunc i64 %8013 to i8
  %8015 = and i8 %8014, 1
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8015, i8* %8016, align 1
  %8017 = icmp eq i64 %7998, 0
  %8018 = zext i1 %8017 to i8
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8018, i8* %8019, align 1
  %8020 = lshr i64 %7998, 63
  %8021 = trunc i64 %8020 to i8
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8021, i8* %8022, align 1
  %8023 = lshr i64 %7994, 63
  %8024 = lshr i64 %7995, 63
  %8025 = xor i64 %8020, %8023
  %8026 = xor i64 %8020, %8024
  %8027 = add i64 %8025, %8026
  %8028 = icmp eq i64 %8027, 2
  %8029 = zext i1 %8028 to i8
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8029, i8* %8030, align 1
  store %struct.Memory* %loadMem_40687c, %struct.Memory** %MEMORY
  %loadMem_40687f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8032 = getelementptr inbounds %struct.GPR, %struct.GPR* %8031, i32 0, i32 33
  %8033 = getelementptr inbounds %struct.Reg, %struct.Reg* %8032, i32 0, i32 0
  %PC.i1906 = bitcast %union.anon* %8033 to i64*
  %8034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8035 = getelementptr inbounds %struct.GPR, %struct.GPR* %8034, i32 0, i32 7
  %8036 = getelementptr inbounds %struct.Reg, %struct.Reg* %8035, i32 0, i32 0
  %RDX.i1907 = bitcast %union.anon* %8036 to i64*
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8038 = getelementptr inbounds %struct.GPR, %struct.GPR* %8037, i32 0, i32 15
  %8039 = getelementptr inbounds %struct.Reg, %struct.Reg* %8038, i32 0, i32 0
  %RBP.i1908 = bitcast %union.anon* %8039 to i64*
  %8040 = load i64, i64* %RBP.i1908
  %8041 = sub i64 %8040, 28
  %8042 = load i64, i64* %PC.i1906
  %8043 = add i64 %8042, 4
  store i64 %8043, i64* %PC.i1906
  %8044 = inttoptr i64 %8041 to i32*
  %8045 = load i32, i32* %8044
  %8046 = sext i32 %8045 to i64
  store i64 %8046, i64* %RDX.i1907, align 8
  store %struct.Memory* %loadMem_40687f, %struct.Memory** %MEMORY
  %loadMem_406883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8048 = getelementptr inbounds %struct.GPR, %struct.GPR* %8047, i32 0, i32 33
  %8049 = getelementptr inbounds %struct.Reg, %struct.Reg* %8048, i32 0, i32 0
  %PC.i1902 = bitcast %union.anon* %8049 to i64*
  %8050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8051 = getelementptr inbounds %struct.GPR, %struct.GPR* %8050, i32 0, i32 1
  %8052 = getelementptr inbounds %struct.Reg, %struct.Reg* %8051, i32 0, i32 0
  %RAX.i1903 = bitcast %union.anon* %8052 to i64*
  %8053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8054 = getelementptr inbounds %struct.GPR, %struct.GPR* %8053, i32 0, i32 5
  %8055 = getelementptr inbounds %struct.Reg, %struct.Reg* %8054, i32 0, i32 0
  %RCX.i1904 = bitcast %union.anon* %8055 to i64*
  %8056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8057 = getelementptr inbounds %struct.GPR, %struct.GPR* %8056, i32 0, i32 7
  %8058 = getelementptr inbounds %struct.Reg, %struct.Reg* %8057, i32 0, i32 0
  %RDX.i1905 = bitcast %union.anon* %8058 to i64*
  %8059 = load i64, i64* %RAX.i1903
  %8060 = load i64, i64* %RCX.i1904
  %8061 = load i64, i64* %RDX.i1905
  %8062 = mul i64 %8061, 4
  %8063 = add i64 %8062, %8060
  %8064 = load i64, i64* %PC.i1902
  %8065 = add i64 %8064, 3
  store i64 %8065, i64* %PC.i1902
  %8066 = trunc i64 %8059 to i32
  %8067 = inttoptr i64 %8063 to i32*
  %8068 = load i32, i32* %8067
  %8069 = add i32 %8068, %8066
  %8070 = zext i32 %8069 to i64
  store i64 %8070, i64* %RAX.i1903, align 8
  %8071 = icmp ult i32 %8069, %8066
  %8072 = icmp ult i32 %8069, %8068
  %8073 = or i1 %8071, %8072
  %8074 = zext i1 %8073 to i8
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8074, i8* %8075, align 1
  %8076 = and i32 %8069, 255
  %8077 = call i32 @llvm.ctpop.i32(i32 %8076)
  %8078 = trunc i32 %8077 to i8
  %8079 = and i8 %8078, 1
  %8080 = xor i8 %8079, 1
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8080, i8* %8081, align 1
  %8082 = xor i32 %8068, %8066
  %8083 = xor i32 %8082, %8069
  %8084 = lshr i32 %8083, 4
  %8085 = trunc i32 %8084 to i8
  %8086 = and i8 %8085, 1
  %8087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8086, i8* %8087, align 1
  %8088 = icmp eq i32 %8069, 0
  %8089 = zext i1 %8088 to i8
  %8090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8089, i8* %8090, align 1
  %8091 = lshr i32 %8069, 31
  %8092 = trunc i32 %8091 to i8
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8092, i8* %8093, align 1
  %8094 = lshr i32 %8066, 31
  %8095 = lshr i32 %8068, 31
  %8096 = xor i32 %8091, %8094
  %8097 = xor i32 %8091, %8095
  %8098 = add i32 %8096, %8097
  %8099 = icmp eq i32 %8098, 2
  %8100 = zext i1 %8099 to i8
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8100, i8* %8101, align 1
  store %struct.Memory* %loadMem_406883, %struct.Memory** %MEMORY
  %loadMem_406886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8103 = getelementptr inbounds %struct.GPR, %struct.GPR* %8102, i32 0, i32 33
  %8104 = getelementptr inbounds %struct.Reg, %struct.Reg* %8103, i32 0, i32 0
  %PC.i1899 = bitcast %union.anon* %8104 to i64*
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8106 = getelementptr inbounds %struct.GPR, %struct.GPR* %8105, i32 0, i32 5
  %8107 = getelementptr inbounds %struct.Reg, %struct.Reg* %8106, i32 0, i32 0
  %RCX.i1900 = bitcast %union.anon* %8107 to i64*
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8109 = getelementptr inbounds %struct.GPR, %struct.GPR* %8108, i32 0, i32 15
  %8110 = getelementptr inbounds %struct.Reg, %struct.Reg* %8109, i32 0, i32 0
  %RBP.i1901 = bitcast %union.anon* %8110 to i64*
  %8111 = load i64, i64* %RBP.i1901
  %8112 = sub i64 %8111, 112
  %8113 = load i64, i64* %PC.i1899
  %8114 = add i64 %8113, 3
  store i64 %8114, i64* %PC.i1899
  %8115 = inttoptr i64 %8112 to i32*
  %8116 = load i32, i32* %8115
  %8117 = zext i32 %8116 to i64
  store i64 %8117, i64* %RCX.i1900, align 8
  store %struct.Memory* %loadMem_406886, %struct.Memory** %MEMORY
  %loadMem_406889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8119 = getelementptr inbounds %struct.GPR, %struct.GPR* %8118, i32 0, i32 33
  %8120 = getelementptr inbounds %struct.Reg, %struct.Reg* %8119, i32 0, i32 0
  %PC.i1895 = bitcast %union.anon* %8120 to i64*
  %8121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8122 = getelementptr inbounds %struct.GPR, %struct.GPR* %8121, i32 0, i32 5
  %8123 = getelementptr inbounds %struct.Reg, %struct.Reg* %8122, i32 0, i32 0
  %8124 = bitcast %union.anon* %8123 to %struct.anon.2*
  %CL.i1896 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8124, i32 0, i32 0
  %8125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8126 = getelementptr inbounds %struct.GPR, %struct.GPR* %8125, i32 0, i32 1
  %8127 = getelementptr inbounds %struct.Reg, %struct.Reg* %8126, i32 0, i32 0
  %RAX.i1897 = bitcast %union.anon* %8127 to i64*
  %8128 = load i64, i64* %RAX.i1897
  %8129 = load i8, i8* %CL.i1896
  %8130 = zext i8 %8129 to i64
  %8131 = load i64, i64* %PC.i1895
  %8132 = add i64 %8131, 2
  store i64 %8132, i64* %PC.i1895
  %8133 = trunc i64 %8130 to i5
  switch i5 %8133, label %8137 [
    i5 0, label %routine_sarl__cl___eax.exit1898
    i5 1, label %8134
  ]

; <label>:8134:                                   ; preds = %block_406812
  %8135 = shl i64 %8128, 32
  %8136 = ashr i64 %8135, 33
  br label %8144

; <label>:8137:                                   ; preds = %block_406812
  %8138 = and i64 %8130, 31
  %8139 = add i64 %8138, -1
  %8140 = shl i64 %8128, 32
  %8141 = ashr exact i64 %8140, 32
  %8142 = ashr i64 %8141, %8139
  %8143 = lshr i64 %8142, 1
  br label %8144

; <label>:8144:                                   ; preds = %8137, %8134
  %8145 = phi i64 [ %8143, %8137 ], [ %8136, %8134 ]
  %8146 = phi i64 [ %8142, %8137 ], [ %8128, %8134 ]
  %8147 = trunc i64 %8146 to i8
  %8148 = and i8 %8147, 1
  %8149 = trunc i64 %8145 to i32
  %8150 = and i64 %8145, 4294967295
  store i64 %8150, i64* %RAX.i1897, align 8
  %8151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8148, i8* %8151, align 1
  %8152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8153 = and i32 %8149, 255
  %8154 = call i32 @llvm.ctpop.i32(i32 %8153)
  %8155 = trunc i32 %8154 to i8
  %8156 = and i8 %8155, 1
  %8157 = xor i8 %8156, 1
  store i8 %8157, i8* %8152, align 1
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8158, align 1
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8160 = icmp eq i32 %8149, 0
  %8161 = zext i1 %8160 to i8
  store i8 %8161, i8* %8159, align 1
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8163 = lshr i32 %8149, 31
  %8164 = trunc i32 %8163 to i8
  store i8 %8164, i8* %8162, align 1
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8165, align 1
  br label %routine_sarl__cl___eax.exit1898

routine_sarl__cl___eax.exit1898:                  ; preds = %block_406812, %8144
  store %struct.Memory* %loadMem_406889, %struct.Memory** %MEMORY
  %loadMem_40688b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8167 = getelementptr inbounds %struct.GPR, %struct.GPR* %8166, i32 0, i32 33
  %8168 = getelementptr inbounds %struct.Reg, %struct.Reg* %8167, i32 0, i32 0
  %PC.i1892 = bitcast %union.anon* %8168 to i64*
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8170 = getelementptr inbounds %struct.GPR, %struct.GPR* %8169, i32 0, i32 1
  %8171 = getelementptr inbounds %struct.Reg, %struct.Reg* %8170, i32 0, i32 0
  %EAX.i1893 = bitcast %union.anon* %8171 to i32*
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8173 = getelementptr inbounds %struct.GPR, %struct.GPR* %8172, i32 0, i32 15
  %8174 = getelementptr inbounds %struct.Reg, %struct.Reg* %8173, i32 0, i32 0
  %RBP.i1894 = bitcast %union.anon* %8174 to i64*
  %8175 = load i64, i64* %RBP.i1894
  %8176 = sub i64 %8175, 88
  %8177 = load i32, i32* %EAX.i1893
  %8178 = zext i32 %8177 to i64
  %8179 = load i64, i64* %PC.i1892
  %8180 = add i64 %8179, 3
  store i64 %8180, i64* %PC.i1892
  %8181 = inttoptr i64 %8176 to i32*
  store i32 %8177, i32* %8181
  store %struct.Memory* %loadMem_40688b, %struct.Memory** %MEMORY
  %loadMem_40688e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8183 = getelementptr inbounds %struct.GPR, %struct.GPR* %8182, i32 0, i32 33
  %8184 = getelementptr inbounds %struct.Reg, %struct.Reg* %8183, i32 0, i32 0
  %PC.i1891 = bitcast %union.anon* %8184 to i64*
  %8185 = load i64, i64* %PC.i1891
  %8186 = add i64 %8185, 129
  %8187 = load i64, i64* %PC.i1891
  %8188 = add i64 %8187, 5
  store i64 %8188, i64* %PC.i1891
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8186, i64* %8189, align 8
  store %struct.Memory* %loadMem_40688e, %struct.Memory** %MEMORY
  br label %block_.L_40690f

block_.L_406893:                                  ; preds = %block_.L_406808
  %loadMem_406893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8191 = getelementptr inbounds %struct.GPR, %struct.GPR* %8190, i32 0, i32 33
  %8192 = getelementptr inbounds %struct.Reg, %struct.Reg* %8191, i32 0, i32 0
  %PC.i1889 = bitcast %union.anon* %8192 to i64*
  %8193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8194 = getelementptr inbounds %struct.GPR, %struct.GPR* %8193, i32 0, i32 1
  %8195 = getelementptr inbounds %struct.Reg, %struct.Reg* %8194, i32 0, i32 0
  %RAX.i1890 = bitcast %union.anon* %8195 to i64*
  %8196 = load i64, i64* %PC.i1889
  %8197 = add i64 %8196, 8
  store i64 %8197, i64* %PC.i1889
  %8198 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8198, i64* %RAX.i1890, align 8
  store %struct.Memory* %loadMem_406893, %struct.Memory** %MEMORY
  %loadMem_40689b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8200 = getelementptr inbounds %struct.GPR, %struct.GPR* %8199, i32 0, i32 33
  %8201 = getelementptr inbounds %struct.Reg, %struct.Reg* %8200, i32 0, i32 0
  %PC.i1887 = bitcast %union.anon* %8201 to i64*
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8203 = getelementptr inbounds %struct.GPR, %struct.GPR* %8202, i32 0, i32 1
  %8204 = getelementptr inbounds %struct.Reg, %struct.Reg* %8203, i32 0, i32 0
  %RAX.i1888 = bitcast %union.anon* %8204 to i64*
  %8205 = load i64, i64* %RAX.i1888
  %8206 = load i64, i64* %PC.i1887
  %8207 = add i64 %8206, 6
  store i64 %8207, i64* %PC.i1887
  %8208 = add i64 13112, %8205
  store i64 %8208, i64* %RAX.i1888, align 8
  %8209 = icmp ult i64 %8208, %8205
  %8210 = icmp ult i64 %8208, 13112
  %8211 = or i1 %8209, %8210
  %8212 = zext i1 %8211 to i8
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8212, i8* %8213, align 1
  %8214 = trunc i64 %8208 to i32
  %8215 = and i32 %8214, 255
  %8216 = call i32 @llvm.ctpop.i32(i32 %8215)
  %8217 = trunc i32 %8216 to i8
  %8218 = and i8 %8217, 1
  %8219 = xor i8 %8218, 1
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8219, i8* %8220, align 1
  %8221 = xor i64 13112, %8205
  %8222 = xor i64 %8221, %8208
  %8223 = lshr i64 %8222, 4
  %8224 = trunc i64 %8223 to i8
  %8225 = and i8 %8224, 1
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8225, i8* %8226, align 1
  %8227 = icmp eq i64 %8208, 0
  %8228 = zext i1 %8227 to i8
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8228, i8* %8229, align 1
  %8230 = lshr i64 %8208, 63
  %8231 = trunc i64 %8230 to i8
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8231, i8* %8232, align 1
  %8233 = lshr i64 %8205, 63
  %8234 = xor i64 %8230, %8233
  %8235 = add i64 %8234, %8230
  %8236 = icmp eq i64 %8235, 2
  %8237 = zext i1 %8236 to i8
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8237, i8* %8238, align 1
  store %struct.Memory* %loadMem_40689b, %struct.Memory** %MEMORY
  %loadMem_4068a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8240 = getelementptr inbounds %struct.GPR, %struct.GPR* %8239, i32 0, i32 33
  %8241 = getelementptr inbounds %struct.Reg, %struct.Reg* %8240, i32 0, i32 0
  %PC.i1884 = bitcast %union.anon* %8241 to i64*
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8243 = getelementptr inbounds %struct.GPR, %struct.GPR* %8242, i32 0, i32 5
  %8244 = getelementptr inbounds %struct.Reg, %struct.Reg* %8243, i32 0, i32 0
  %RCX.i1885 = bitcast %union.anon* %8244 to i64*
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8246 = getelementptr inbounds %struct.GPR, %struct.GPR* %8245, i32 0, i32 15
  %8247 = getelementptr inbounds %struct.Reg, %struct.Reg* %8246, i32 0, i32 0
  %RBP.i1886 = bitcast %union.anon* %8247 to i64*
  %8248 = load i64, i64* %RBP.i1886
  %8249 = sub i64 %8248, 24
  %8250 = load i64, i64* %PC.i1884
  %8251 = add i64 %8250, 4
  store i64 %8251, i64* %PC.i1884
  %8252 = inttoptr i64 %8249 to i32*
  %8253 = load i32, i32* %8252
  %8254 = sext i32 %8253 to i64
  store i64 %8254, i64* %RCX.i1885, align 8
  store %struct.Memory* %loadMem_4068a1, %struct.Memory** %MEMORY
  %loadMem_4068a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8256 = getelementptr inbounds %struct.GPR, %struct.GPR* %8255, i32 0, i32 33
  %8257 = getelementptr inbounds %struct.Reg, %struct.Reg* %8256, i32 0, i32 0
  %PC.i1882 = bitcast %union.anon* %8257 to i64*
  %8258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8259 = getelementptr inbounds %struct.GPR, %struct.GPR* %8258, i32 0, i32 5
  %8260 = getelementptr inbounds %struct.Reg, %struct.Reg* %8259, i32 0, i32 0
  %RCX.i1883 = bitcast %union.anon* %8260 to i64*
  %8261 = load i64, i64* %RCX.i1883
  %8262 = load i64, i64* %PC.i1882
  %8263 = add i64 %8262, 4
  store i64 %8263, i64* %PC.i1882
  %8264 = shl i64 %8261, 5
  %8265 = icmp slt i64 %8264, 0
  %8266 = shl i64 %8264, 1
  store i64 %8266, i64* %RCX.i1883, align 8
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8268 = zext i1 %8265 to i8
  store i8 %8268, i8* %8267, align 1
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8270 = trunc i64 %8266 to i32
  %8271 = and i32 %8270, 254
  %8272 = call i32 @llvm.ctpop.i32(i32 %8271)
  %8273 = trunc i32 %8272 to i8
  %8274 = and i8 %8273, 1
  %8275 = xor i8 %8274, 1
  store i8 %8275, i8* %8269, align 1
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8276, align 1
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8278 = icmp eq i64 %8266, 0
  %8279 = zext i1 %8278 to i8
  store i8 %8279, i8* %8277, align 1
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8281 = lshr i64 %8266, 63
  %8282 = trunc i64 %8281 to i8
  store i8 %8282, i8* %8280, align 1
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8283, align 1
  store %struct.Memory* %loadMem_4068a5, %struct.Memory** %MEMORY
  %loadMem_4068a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8285 = getelementptr inbounds %struct.GPR, %struct.GPR* %8284, i32 0, i32 33
  %8286 = getelementptr inbounds %struct.Reg, %struct.Reg* %8285, i32 0, i32 0
  %PC.i1879 = bitcast %union.anon* %8286 to i64*
  %8287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8288 = getelementptr inbounds %struct.GPR, %struct.GPR* %8287, i32 0, i32 1
  %8289 = getelementptr inbounds %struct.Reg, %struct.Reg* %8288, i32 0, i32 0
  %RAX.i1880 = bitcast %union.anon* %8289 to i64*
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8291 = getelementptr inbounds %struct.GPR, %struct.GPR* %8290, i32 0, i32 5
  %8292 = getelementptr inbounds %struct.Reg, %struct.Reg* %8291, i32 0, i32 0
  %RCX.i1881 = bitcast %union.anon* %8292 to i64*
  %8293 = load i64, i64* %RAX.i1880
  %8294 = load i64, i64* %RCX.i1881
  %8295 = load i64, i64* %PC.i1879
  %8296 = add i64 %8295, 3
  store i64 %8296, i64* %PC.i1879
  %8297 = add i64 %8294, %8293
  store i64 %8297, i64* %RAX.i1880, align 8
  %8298 = icmp ult i64 %8297, %8293
  %8299 = icmp ult i64 %8297, %8294
  %8300 = or i1 %8298, %8299
  %8301 = zext i1 %8300 to i8
  %8302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8301, i8* %8302, align 1
  %8303 = trunc i64 %8297 to i32
  %8304 = and i32 %8303, 255
  %8305 = call i32 @llvm.ctpop.i32(i32 %8304)
  %8306 = trunc i32 %8305 to i8
  %8307 = and i8 %8306, 1
  %8308 = xor i8 %8307, 1
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8308, i8* %8309, align 1
  %8310 = xor i64 %8294, %8293
  %8311 = xor i64 %8310, %8297
  %8312 = lshr i64 %8311, 4
  %8313 = trunc i64 %8312 to i8
  %8314 = and i8 %8313, 1
  %8315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8314, i8* %8315, align 1
  %8316 = icmp eq i64 %8297, 0
  %8317 = zext i1 %8316 to i8
  %8318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8317, i8* %8318, align 1
  %8319 = lshr i64 %8297, 63
  %8320 = trunc i64 %8319 to i8
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8320, i8* %8321, align 1
  %8322 = lshr i64 %8293, 63
  %8323 = lshr i64 %8294, 63
  %8324 = xor i64 %8319, %8322
  %8325 = xor i64 %8319, %8323
  %8326 = add i64 %8324, %8325
  %8327 = icmp eq i64 %8326, 2
  %8328 = zext i1 %8327 to i8
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8328, i8* %8329, align 1
  store %struct.Memory* %loadMem_4068a9, %struct.Memory** %MEMORY
  %loadMem_4068ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8331 = getelementptr inbounds %struct.GPR, %struct.GPR* %8330, i32 0, i32 33
  %8332 = getelementptr inbounds %struct.Reg, %struct.Reg* %8331, i32 0, i32 0
  %PC.i1876 = bitcast %union.anon* %8332 to i64*
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8334 = getelementptr inbounds %struct.GPR, %struct.GPR* %8333, i32 0, i32 5
  %8335 = getelementptr inbounds %struct.Reg, %struct.Reg* %8334, i32 0, i32 0
  %RCX.i1877 = bitcast %union.anon* %8335 to i64*
  %8336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8337 = getelementptr inbounds %struct.GPR, %struct.GPR* %8336, i32 0, i32 15
  %8338 = getelementptr inbounds %struct.Reg, %struct.Reg* %8337, i32 0, i32 0
  %RBP.i1878 = bitcast %union.anon* %8338 to i64*
  %8339 = load i64, i64* %RBP.i1878
  %8340 = sub i64 %8339, 28
  %8341 = load i64, i64* %PC.i1876
  %8342 = add i64 %8341, 4
  store i64 %8342, i64* %PC.i1876
  %8343 = inttoptr i64 %8340 to i32*
  %8344 = load i32, i32* %8343
  %8345 = sext i32 %8344 to i64
  store i64 %8345, i64* %RCX.i1877, align 8
  store %struct.Memory* %loadMem_4068ac, %struct.Memory** %MEMORY
  %loadMem_4068b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8347 = getelementptr inbounds %struct.GPR, %struct.GPR* %8346, i32 0, i32 33
  %8348 = getelementptr inbounds %struct.Reg, %struct.Reg* %8347, i32 0, i32 0
  %PC.i1872 = bitcast %union.anon* %8348 to i64*
  %8349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8350 = getelementptr inbounds %struct.GPR, %struct.GPR* %8349, i32 0, i32 1
  %8351 = getelementptr inbounds %struct.Reg, %struct.Reg* %8350, i32 0, i32 0
  %RAX.i1873 = bitcast %union.anon* %8351 to i64*
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8353 = getelementptr inbounds %struct.GPR, %struct.GPR* %8352, i32 0, i32 5
  %8354 = getelementptr inbounds %struct.Reg, %struct.Reg* %8353, i32 0, i32 0
  %RCX.i1874 = bitcast %union.anon* %8354 to i64*
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8356 = getelementptr inbounds %struct.GPR, %struct.GPR* %8355, i32 0, i32 11
  %8357 = getelementptr inbounds %struct.Reg, %struct.Reg* %8356, i32 0, i32 0
  %RDI.i1875 = bitcast %union.anon* %8357 to i64*
  %8358 = load i64, i64* %RAX.i1873
  %8359 = load i64, i64* %RCX.i1874
  %8360 = mul i64 %8359, 4
  %8361 = add i64 %8360, %8358
  %8362 = load i64, i64* %PC.i1872
  %8363 = add i64 %8362, 3
  store i64 %8363, i64* %PC.i1872
  %8364 = inttoptr i64 %8361 to i32*
  %8365 = load i32, i32* %8364
  %8366 = zext i32 %8365 to i64
  store i64 %8366, i64* %RDI.i1875, align 8
  store %struct.Memory* %loadMem_4068b0, %struct.Memory** %MEMORY
  %loadMem1_4068b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8368 = getelementptr inbounds %struct.GPR, %struct.GPR* %8367, i32 0, i32 33
  %8369 = getelementptr inbounds %struct.Reg, %struct.Reg* %8368, i32 0, i32 0
  %PC.i1871 = bitcast %union.anon* %8369 to i64*
  %8370 = load i64, i64* %PC.i1871
  %8371 = add i64 %8370, -22707
  %8372 = load i64, i64* %PC.i1871
  %8373 = add i64 %8372, 5
  %8374 = load i64, i64* %PC.i1871
  %8375 = add i64 %8374, 5
  store i64 %8375, i64* %PC.i1871
  %8376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8377 = load i64, i64* %8376, align 8
  %8378 = add i64 %8377, -8
  %8379 = inttoptr i64 %8378 to i64*
  store i64 %8373, i64* %8379
  store i64 %8378, i64* %8376, align 8
  %8380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8371, i64* %8380, align 8
  store %struct.Memory* %loadMem1_4068b3, %struct.Memory** %MEMORY
  %loadMem2_4068b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4068b3 = load i64, i64* %3
  %8381 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_4068b3)
  store %struct.Memory* %8381, %struct.Memory** %MEMORY
  %loadMem_4068b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8383 = getelementptr inbounds %struct.GPR, %struct.GPR* %8382, i32 0, i32 33
  %8384 = getelementptr inbounds %struct.Reg, %struct.Reg* %8383, i32 0, i32 0
  %PC.i1866 = bitcast %union.anon* %8384 to i64*
  %8385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8386 = getelementptr inbounds %struct.GPR, %struct.GPR* %8385, i32 0, i32 5
  %8387 = getelementptr inbounds %struct.Reg, %struct.Reg* %8386, i32 0, i32 0
  %RCX.i1867 = bitcast %union.anon* %8387 to i64*
  %8388 = load i64, i64* %PC.i1866
  %8389 = add i64 %8388, 10
  store i64 %8389, i64* %PC.i1866
  store i64 7131024, i64* %RCX.i1867, align 8
  store %struct.Memory* %loadMem_4068b8, %struct.Memory** %MEMORY
  %loadMem_4068c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8391 = getelementptr inbounds %struct.GPR, %struct.GPR* %8390, i32 0, i32 33
  %8392 = getelementptr inbounds %struct.Reg, %struct.Reg* %8391, i32 0, i32 0
  %PC.i1864 = bitcast %union.anon* %8392 to i64*
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8394 = getelementptr inbounds %struct.GPR, %struct.GPR* %8393, i32 0, i32 7
  %8395 = getelementptr inbounds %struct.Reg, %struct.Reg* %8394, i32 0, i32 0
  %RDX.i1865 = bitcast %union.anon* %8395 to i64*
  %8396 = load i64, i64* %PC.i1864
  %8397 = add i64 %8396, 10
  store i64 %8397, i64* %PC.i1864
  store i64 ptrtoint (%G__0x70fe80_type* @G__0x70fe80 to i64), i64* %RDX.i1865, align 8
  store %struct.Memory* %loadMem_4068c2, %struct.Memory** %MEMORY
  %loadMem_4068cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8399 = getelementptr inbounds %struct.GPR, %struct.GPR* %8398, i32 0, i32 33
  %8400 = getelementptr inbounds %struct.Reg, %struct.Reg* %8399, i32 0, i32 0
  %PC.i1861 = bitcast %union.anon* %8400 to i64*
  %8401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8402 = getelementptr inbounds %struct.GPR, %struct.GPR* %8401, i32 0, i32 9
  %8403 = getelementptr inbounds %struct.Reg, %struct.Reg* %8402, i32 0, i32 0
  %RSI.i1862 = bitcast %union.anon* %8403 to i64*
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8405 = getelementptr inbounds %struct.GPR, %struct.GPR* %8404, i32 0, i32 15
  %8406 = getelementptr inbounds %struct.Reg, %struct.Reg* %8405, i32 0, i32 0
  %RBP.i1863 = bitcast %union.anon* %8406 to i64*
  %8407 = load i64, i64* %RBP.i1863
  %8408 = sub i64 %8407, 108
  %8409 = load i64, i64* %PC.i1861
  %8410 = add i64 %8409, 4
  store i64 %8410, i64* %PC.i1861
  %8411 = inttoptr i64 %8408 to i32*
  %8412 = load i32, i32* %8411
  %8413 = sext i32 %8412 to i64
  store i64 %8413, i64* %RSI.i1862, align 8
  store %struct.Memory* %loadMem_4068cc, %struct.Memory** %MEMORY
  %loadMem_4068d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8415 = getelementptr inbounds %struct.GPR, %struct.GPR* %8414, i32 0, i32 33
  %8416 = getelementptr inbounds %struct.Reg, %struct.Reg* %8415, i32 0, i32 0
  %PC.i1859 = bitcast %union.anon* %8416 to i64*
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8418 = getelementptr inbounds %struct.GPR, %struct.GPR* %8417, i32 0, i32 9
  %8419 = getelementptr inbounds %struct.Reg, %struct.Reg* %8418, i32 0, i32 0
  %RSI.i1860 = bitcast %union.anon* %8419 to i64*
  %8420 = load i64, i64* %RSI.i1860
  %8421 = load i64, i64* %PC.i1859
  %8422 = add i64 %8421, 4
  store i64 %8422, i64* %PC.i1859
  %8423 = shl i64 %8420, 5
  %8424 = icmp slt i64 %8423, 0
  %8425 = shl i64 %8423, 1
  store i64 %8425, i64* %RSI.i1860, align 8
  %8426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8427 = zext i1 %8424 to i8
  store i8 %8427, i8* %8426, align 1
  %8428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8429 = trunc i64 %8425 to i32
  %8430 = and i32 %8429, 254
  %8431 = call i32 @llvm.ctpop.i32(i32 %8430)
  %8432 = trunc i32 %8431 to i8
  %8433 = and i8 %8432, 1
  %8434 = xor i8 %8433, 1
  store i8 %8434, i8* %8428, align 1
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8435, align 1
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8437 = icmp eq i64 %8425, 0
  %8438 = zext i1 %8437 to i8
  store i8 %8438, i8* %8436, align 1
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8440 = lshr i64 %8425, 63
  %8441 = trunc i64 %8440 to i8
  store i8 %8441, i8* %8439, align 1
  %8442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8442, align 1
  store %struct.Memory* %loadMem_4068d0, %struct.Memory** %MEMORY
  %loadMem_4068d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8444 = getelementptr inbounds %struct.GPR, %struct.GPR* %8443, i32 0, i32 33
  %8445 = getelementptr inbounds %struct.Reg, %struct.Reg* %8444, i32 0, i32 0
  %PC.i1856 = bitcast %union.anon* %8445 to i64*
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8447 = getelementptr inbounds %struct.GPR, %struct.GPR* %8446, i32 0, i32 7
  %8448 = getelementptr inbounds %struct.Reg, %struct.Reg* %8447, i32 0, i32 0
  %RDX.i1857 = bitcast %union.anon* %8448 to i64*
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8450 = getelementptr inbounds %struct.GPR, %struct.GPR* %8449, i32 0, i32 9
  %8451 = getelementptr inbounds %struct.Reg, %struct.Reg* %8450, i32 0, i32 0
  %RSI.i1858 = bitcast %union.anon* %8451 to i64*
  %8452 = load i64, i64* %RDX.i1857
  %8453 = load i64, i64* %RSI.i1858
  %8454 = load i64, i64* %PC.i1856
  %8455 = add i64 %8454, 3
  store i64 %8455, i64* %PC.i1856
  %8456 = add i64 %8453, %8452
  store i64 %8456, i64* %RDX.i1857, align 8
  %8457 = icmp ult i64 %8456, %8452
  %8458 = icmp ult i64 %8456, %8453
  %8459 = or i1 %8457, %8458
  %8460 = zext i1 %8459 to i8
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8460, i8* %8461, align 1
  %8462 = trunc i64 %8456 to i32
  %8463 = and i32 %8462, 255
  %8464 = call i32 @llvm.ctpop.i32(i32 %8463)
  %8465 = trunc i32 %8464 to i8
  %8466 = and i8 %8465, 1
  %8467 = xor i8 %8466, 1
  %8468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8467, i8* %8468, align 1
  %8469 = xor i64 %8453, %8452
  %8470 = xor i64 %8469, %8456
  %8471 = lshr i64 %8470, 4
  %8472 = trunc i64 %8471 to i8
  %8473 = and i8 %8472, 1
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8473, i8* %8474, align 1
  %8475 = icmp eq i64 %8456, 0
  %8476 = zext i1 %8475 to i8
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8476, i8* %8477, align 1
  %8478 = lshr i64 %8456, 63
  %8479 = trunc i64 %8478 to i8
  %8480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8479, i8* %8480, align 1
  %8481 = lshr i64 %8452, 63
  %8482 = lshr i64 %8453, 63
  %8483 = xor i64 %8478, %8481
  %8484 = xor i64 %8478, %8482
  %8485 = add i64 %8483, %8484
  %8486 = icmp eq i64 %8485, 2
  %8487 = zext i1 %8486 to i8
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8487, i8* %8488, align 1
  store %struct.Memory* %loadMem_4068d4, %struct.Memory** %MEMORY
  %loadMem_4068d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8490 = getelementptr inbounds %struct.GPR, %struct.GPR* %8489, i32 0, i32 33
  %8491 = getelementptr inbounds %struct.Reg, %struct.Reg* %8490, i32 0, i32 0
  %PC.i1853 = bitcast %union.anon* %8491 to i64*
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8493 = getelementptr inbounds %struct.GPR, %struct.GPR* %8492, i32 0, i32 9
  %8494 = getelementptr inbounds %struct.Reg, %struct.Reg* %8493, i32 0, i32 0
  %RSI.i1854 = bitcast %union.anon* %8494 to i64*
  %8495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8496 = getelementptr inbounds %struct.GPR, %struct.GPR* %8495, i32 0, i32 15
  %8497 = getelementptr inbounds %struct.Reg, %struct.Reg* %8496, i32 0, i32 0
  %RBP.i1855 = bitcast %union.anon* %8497 to i64*
  %8498 = load i64, i64* %RBP.i1855
  %8499 = sub i64 %8498, 24
  %8500 = load i64, i64* %PC.i1853
  %8501 = add i64 %8500, 4
  store i64 %8501, i64* %PC.i1853
  %8502 = inttoptr i64 %8499 to i32*
  %8503 = load i32, i32* %8502
  %8504 = sext i32 %8503 to i64
  store i64 %8504, i64* %RSI.i1854, align 8
  store %struct.Memory* %loadMem_4068d7, %struct.Memory** %MEMORY
  %loadMem_4068db = load %struct.Memory*, %struct.Memory** %MEMORY
  %8505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8506 = getelementptr inbounds %struct.GPR, %struct.GPR* %8505, i32 0, i32 33
  %8507 = getelementptr inbounds %struct.Reg, %struct.Reg* %8506, i32 0, i32 0
  %PC.i1851 = bitcast %union.anon* %8507 to i64*
  %8508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8509 = getelementptr inbounds %struct.GPR, %struct.GPR* %8508, i32 0, i32 9
  %8510 = getelementptr inbounds %struct.Reg, %struct.Reg* %8509, i32 0, i32 0
  %RSI.i1852 = bitcast %union.anon* %8510 to i64*
  %8511 = load i64, i64* %RSI.i1852
  %8512 = load i64, i64* %PC.i1851
  %8513 = add i64 %8512, 4
  store i64 %8513, i64* %PC.i1851
  %8514 = shl i64 %8511, 3
  %8515 = icmp slt i64 %8514, 0
  %8516 = shl i64 %8514, 1
  store i64 %8516, i64* %RSI.i1852, align 8
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8518 = zext i1 %8515 to i8
  store i8 %8518, i8* %8517, align 1
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8520 = trunc i64 %8516 to i32
  %8521 = and i32 %8520, 254
  %8522 = call i32 @llvm.ctpop.i32(i32 %8521)
  %8523 = trunc i32 %8522 to i8
  %8524 = and i8 %8523, 1
  %8525 = xor i8 %8524, 1
  store i8 %8525, i8* %8519, align 1
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8526, align 1
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8528 = icmp eq i64 %8516, 0
  %8529 = zext i1 %8528 to i8
  store i8 %8529, i8* %8527, align 1
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8531 = lshr i64 %8516, 63
  %8532 = trunc i64 %8531 to i8
  store i8 %8532, i8* %8530, align 1
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8533, align 1
  store %struct.Memory* %loadMem_4068db, %struct.Memory** %MEMORY
  %loadMem_4068df = load %struct.Memory*, %struct.Memory** %MEMORY
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8535 = getelementptr inbounds %struct.GPR, %struct.GPR* %8534, i32 0, i32 33
  %8536 = getelementptr inbounds %struct.Reg, %struct.Reg* %8535, i32 0, i32 0
  %PC.i1848 = bitcast %union.anon* %8536 to i64*
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8538 = getelementptr inbounds %struct.GPR, %struct.GPR* %8537, i32 0, i32 7
  %8539 = getelementptr inbounds %struct.Reg, %struct.Reg* %8538, i32 0, i32 0
  %RDX.i1849 = bitcast %union.anon* %8539 to i64*
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8541 = getelementptr inbounds %struct.GPR, %struct.GPR* %8540, i32 0, i32 9
  %8542 = getelementptr inbounds %struct.Reg, %struct.Reg* %8541, i32 0, i32 0
  %RSI.i1850 = bitcast %union.anon* %8542 to i64*
  %8543 = load i64, i64* %RDX.i1849
  %8544 = load i64, i64* %RSI.i1850
  %8545 = load i64, i64* %PC.i1848
  %8546 = add i64 %8545, 3
  store i64 %8546, i64* %PC.i1848
  %8547 = add i64 %8544, %8543
  store i64 %8547, i64* %RDX.i1849, align 8
  %8548 = icmp ult i64 %8547, %8543
  %8549 = icmp ult i64 %8547, %8544
  %8550 = or i1 %8548, %8549
  %8551 = zext i1 %8550 to i8
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8551, i8* %8552, align 1
  %8553 = trunc i64 %8547 to i32
  %8554 = and i32 %8553, 255
  %8555 = call i32 @llvm.ctpop.i32(i32 %8554)
  %8556 = trunc i32 %8555 to i8
  %8557 = and i8 %8556, 1
  %8558 = xor i8 %8557, 1
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8558, i8* %8559, align 1
  %8560 = xor i64 %8544, %8543
  %8561 = xor i64 %8560, %8547
  %8562 = lshr i64 %8561, 4
  %8563 = trunc i64 %8562 to i8
  %8564 = and i8 %8563, 1
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8564, i8* %8565, align 1
  %8566 = icmp eq i64 %8547, 0
  %8567 = zext i1 %8566 to i8
  %8568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8567, i8* %8568, align 1
  %8569 = lshr i64 %8547, 63
  %8570 = trunc i64 %8569 to i8
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8570, i8* %8571, align 1
  %8572 = lshr i64 %8543, 63
  %8573 = lshr i64 %8544, 63
  %8574 = xor i64 %8569, %8572
  %8575 = xor i64 %8569, %8573
  %8576 = add i64 %8574, %8575
  %8577 = icmp eq i64 %8576, 2
  %8578 = zext i1 %8577 to i8
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8578, i8* %8579, align 1
  store %struct.Memory* %loadMem_4068df, %struct.Memory** %MEMORY
  %loadMem_4068e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8581 = getelementptr inbounds %struct.GPR, %struct.GPR* %8580, i32 0, i32 33
  %8582 = getelementptr inbounds %struct.Reg, %struct.Reg* %8581, i32 0, i32 0
  %PC.i1845 = bitcast %union.anon* %8582 to i64*
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 9
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %RSI.i1846 = bitcast %union.anon* %8585 to i64*
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8587 = getelementptr inbounds %struct.GPR, %struct.GPR* %8586, i32 0, i32 15
  %8588 = getelementptr inbounds %struct.Reg, %struct.Reg* %8587, i32 0, i32 0
  %RBP.i1847 = bitcast %union.anon* %8588 to i64*
  %8589 = load i64, i64* %RBP.i1847
  %8590 = sub i64 %8589, 28
  %8591 = load i64, i64* %PC.i1845
  %8592 = add i64 %8591, 4
  store i64 %8592, i64* %PC.i1845
  %8593 = inttoptr i64 %8590 to i32*
  %8594 = load i32, i32* %8593
  %8595 = sext i32 %8594 to i64
  store i64 %8595, i64* %RSI.i1846, align 8
  store %struct.Memory* %loadMem_4068e2, %struct.Memory** %MEMORY
  %loadMem_4068e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8597 = getelementptr inbounds %struct.GPR, %struct.GPR* %8596, i32 0, i32 33
  %8598 = getelementptr inbounds %struct.Reg, %struct.Reg* %8597, i32 0, i32 0
  %PC.i1841 = bitcast %union.anon* %8598 to i64*
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8600 = getelementptr inbounds %struct.GPR, %struct.GPR* %8599, i32 0, i32 1
  %8601 = getelementptr inbounds %struct.Reg, %struct.Reg* %8600, i32 0, i32 0
  %RAX.i1842 = bitcast %union.anon* %8601 to i64*
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8603 = getelementptr inbounds %struct.GPR, %struct.GPR* %8602, i32 0, i32 7
  %8604 = getelementptr inbounds %struct.Reg, %struct.Reg* %8603, i32 0, i32 0
  %RDX.i1843 = bitcast %union.anon* %8604 to i64*
  %8605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8606 = getelementptr inbounds %struct.GPR, %struct.GPR* %8605, i32 0, i32 9
  %8607 = getelementptr inbounds %struct.Reg, %struct.Reg* %8606, i32 0, i32 0
  %RSI.i1844 = bitcast %union.anon* %8607 to i64*
  %8608 = load i64, i64* %RAX.i1842
  %8609 = load i64, i64* %RDX.i1843
  %8610 = load i64, i64* %RSI.i1844
  %8611 = mul i64 %8610, 4
  %8612 = add i64 %8611, %8609
  %8613 = load i64, i64* %PC.i1841
  %8614 = add i64 %8613, 4
  store i64 %8614, i64* %PC.i1841
  %8615 = inttoptr i64 %8612 to i32*
  %8616 = load i32, i32* %8615
  %8617 = shl i64 %8608, 32
  %8618 = ashr exact i64 %8617, 32
  %8619 = sext i32 %8616 to i64
  %8620 = mul i64 %8619, %8618
  %8621 = trunc i64 %8620 to i32
  %8622 = and i64 %8620, 4294967295
  store i64 %8622, i64* %RAX.i1842, align 8
  %8623 = shl i64 %8620, 32
  %8624 = ashr exact i64 %8623, 32
  %8625 = icmp ne i64 %8624, %8620
  %8626 = zext i1 %8625 to i8
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8626, i8* %8627, align 1
  %8628 = and i32 %8621, 255
  %8629 = call i32 @llvm.ctpop.i32(i32 %8628)
  %8630 = trunc i32 %8629 to i8
  %8631 = and i8 %8630, 1
  %8632 = xor i8 %8631, 1
  %8633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8632, i8* %8633, align 1
  %8634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8634, align 1
  %8635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8635, align 1
  %8636 = lshr i32 %8621, 31
  %8637 = trunc i32 %8636 to i8
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8637, i8* %8638, align 1
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8626, i8* %8639, align 1
  store %struct.Memory* %loadMem_4068e6, %struct.Memory** %MEMORY
  %loadMem_4068ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %8640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8641 = getelementptr inbounds %struct.GPR, %struct.GPR* %8640, i32 0, i32 33
  %8642 = getelementptr inbounds %struct.Reg, %struct.Reg* %8641, i32 0, i32 0
  %PC.i1838 = bitcast %union.anon* %8642 to i64*
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8644 = getelementptr inbounds %struct.GPR, %struct.GPR* %8643, i32 0, i32 7
  %8645 = getelementptr inbounds %struct.Reg, %struct.Reg* %8644, i32 0, i32 0
  %RDX.i1839 = bitcast %union.anon* %8645 to i64*
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8647 = getelementptr inbounds %struct.GPR, %struct.GPR* %8646, i32 0, i32 15
  %8648 = getelementptr inbounds %struct.Reg, %struct.Reg* %8647, i32 0, i32 0
  %RBP.i1840 = bitcast %union.anon* %8648 to i64*
  %8649 = load i64, i64* %RBP.i1840
  %8650 = sub i64 %8649, 104
  %8651 = load i64, i64* %PC.i1838
  %8652 = add i64 %8651, 4
  store i64 %8652, i64* %PC.i1838
  %8653 = inttoptr i64 %8650 to i32*
  %8654 = load i32, i32* %8653
  %8655 = sext i32 %8654 to i64
  store i64 %8655, i64* %RDX.i1839, align 8
  store %struct.Memory* %loadMem_4068ea, %struct.Memory** %MEMORY
  %loadMem_4068ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8657 = getelementptr inbounds %struct.GPR, %struct.GPR* %8656, i32 0, i32 33
  %8658 = getelementptr inbounds %struct.Reg, %struct.Reg* %8657, i32 0, i32 0
  %PC.i1836 = bitcast %union.anon* %8658 to i64*
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8660 = getelementptr inbounds %struct.GPR, %struct.GPR* %8659, i32 0, i32 7
  %8661 = getelementptr inbounds %struct.Reg, %struct.Reg* %8660, i32 0, i32 0
  %RDX.i1837 = bitcast %union.anon* %8661 to i64*
  %8662 = load i64, i64* %RDX.i1837
  %8663 = load i64, i64* %PC.i1836
  %8664 = add i64 %8663, 4
  store i64 %8664, i64* %PC.i1836
  %8665 = shl i64 %8662, 5
  %8666 = icmp slt i64 %8665, 0
  %8667 = shl i64 %8665, 1
  store i64 %8667, i64* %RDX.i1837, align 8
  %8668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8669 = zext i1 %8666 to i8
  store i8 %8669, i8* %8668, align 1
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8671 = trunc i64 %8667 to i32
  %8672 = and i32 %8671, 254
  %8673 = call i32 @llvm.ctpop.i32(i32 %8672)
  %8674 = trunc i32 %8673 to i8
  %8675 = and i8 %8674, 1
  %8676 = xor i8 %8675, 1
  store i8 %8676, i8* %8670, align 1
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8677, align 1
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8679 = icmp eq i64 %8667, 0
  %8680 = zext i1 %8679 to i8
  store i8 %8680, i8* %8678, align 1
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8682 = lshr i64 %8667, 63
  %8683 = trunc i64 %8682 to i8
  store i8 %8683, i8* %8681, align 1
  %8684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8684, align 1
  store %struct.Memory* %loadMem_4068ee, %struct.Memory** %MEMORY
  %loadMem_4068f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8686 = getelementptr inbounds %struct.GPR, %struct.GPR* %8685, i32 0, i32 33
  %8687 = getelementptr inbounds %struct.Reg, %struct.Reg* %8686, i32 0, i32 0
  %PC.i1833 = bitcast %union.anon* %8687 to i64*
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8689 = getelementptr inbounds %struct.GPR, %struct.GPR* %8688, i32 0, i32 5
  %8690 = getelementptr inbounds %struct.Reg, %struct.Reg* %8689, i32 0, i32 0
  %RCX.i1834 = bitcast %union.anon* %8690 to i64*
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8692 = getelementptr inbounds %struct.GPR, %struct.GPR* %8691, i32 0, i32 7
  %8693 = getelementptr inbounds %struct.Reg, %struct.Reg* %8692, i32 0, i32 0
  %RDX.i1835 = bitcast %union.anon* %8693 to i64*
  %8694 = load i64, i64* %RCX.i1834
  %8695 = load i64, i64* %RDX.i1835
  %8696 = load i64, i64* %PC.i1833
  %8697 = add i64 %8696, 3
  store i64 %8697, i64* %PC.i1833
  %8698 = add i64 %8695, %8694
  store i64 %8698, i64* %RCX.i1834, align 8
  %8699 = icmp ult i64 %8698, %8694
  %8700 = icmp ult i64 %8698, %8695
  %8701 = or i1 %8699, %8700
  %8702 = zext i1 %8701 to i8
  %8703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8702, i8* %8703, align 1
  %8704 = trunc i64 %8698 to i32
  %8705 = and i32 %8704, 255
  %8706 = call i32 @llvm.ctpop.i32(i32 %8705)
  %8707 = trunc i32 %8706 to i8
  %8708 = and i8 %8707, 1
  %8709 = xor i8 %8708, 1
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8709, i8* %8710, align 1
  %8711 = xor i64 %8695, %8694
  %8712 = xor i64 %8711, %8698
  %8713 = lshr i64 %8712, 4
  %8714 = trunc i64 %8713 to i8
  %8715 = and i8 %8714, 1
  %8716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8715, i8* %8716, align 1
  %8717 = icmp eq i64 %8698, 0
  %8718 = zext i1 %8717 to i8
  %8719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8718, i8* %8719, align 1
  %8720 = lshr i64 %8698, 63
  %8721 = trunc i64 %8720 to i8
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8721, i8* %8722, align 1
  %8723 = lshr i64 %8694, 63
  %8724 = lshr i64 %8695, 63
  %8725 = xor i64 %8720, %8723
  %8726 = xor i64 %8720, %8724
  %8727 = add i64 %8725, %8726
  %8728 = icmp eq i64 %8727, 2
  %8729 = zext i1 %8728 to i8
  %8730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8729, i8* %8730, align 1
  store %struct.Memory* %loadMem_4068f2, %struct.Memory** %MEMORY
  %loadMem_4068f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8732 = getelementptr inbounds %struct.GPR, %struct.GPR* %8731, i32 0, i32 33
  %8733 = getelementptr inbounds %struct.Reg, %struct.Reg* %8732, i32 0, i32 0
  %PC.i1830 = bitcast %union.anon* %8733 to i64*
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8735 = getelementptr inbounds %struct.GPR, %struct.GPR* %8734, i32 0, i32 7
  %8736 = getelementptr inbounds %struct.Reg, %struct.Reg* %8735, i32 0, i32 0
  %RDX.i1831 = bitcast %union.anon* %8736 to i64*
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8738 = getelementptr inbounds %struct.GPR, %struct.GPR* %8737, i32 0, i32 15
  %8739 = getelementptr inbounds %struct.Reg, %struct.Reg* %8738, i32 0, i32 0
  %RBP.i1832 = bitcast %union.anon* %8739 to i64*
  %8740 = load i64, i64* %RBP.i1832
  %8741 = sub i64 %8740, 24
  %8742 = load i64, i64* %PC.i1830
  %8743 = add i64 %8742, 4
  store i64 %8743, i64* %PC.i1830
  %8744 = inttoptr i64 %8741 to i32*
  %8745 = load i32, i32* %8744
  %8746 = sext i32 %8745 to i64
  store i64 %8746, i64* %RDX.i1831, align 8
  store %struct.Memory* %loadMem_4068f5, %struct.Memory** %MEMORY
  %loadMem_4068f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8748 = getelementptr inbounds %struct.GPR, %struct.GPR* %8747, i32 0, i32 33
  %8749 = getelementptr inbounds %struct.Reg, %struct.Reg* %8748, i32 0, i32 0
  %PC.i1828 = bitcast %union.anon* %8749 to i64*
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8751 = getelementptr inbounds %struct.GPR, %struct.GPR* %8750, i32 0, i32 7
  %8752 = getelementptr inbounds %struct.Reg, %struct.Reg* %8751, i32 0, i32 0
  %RDX.i1829 = bitcast %union.anon* %8752 to i64*
  %8753 = load i64, i64* %RDX.i1829
  %8754 = load i64, i64* %PC.i1828
  %8755 = add i64 %8754, 4
  store i64 %8755, i64* %PC.i1828
  %8756 = shl i64 %8753, 3
  %8757 = icmp slt i64 %8756, 0
  %8758 = shl i64 %8756, 1
  store i64 %8758, i64* %RDX.i1829, align 8
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8760 = zext i1 %8757 to i8
  store i8 %8760, i8* %8759, align 1
  %8761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8762 = trunc i64 %8758 to i32
  %8763 = and i32 %8762, 254
  %8764 = call i32 @llvm.ctpop.i32(i32 %8763)
  %8765 = trunc i32 %8764 to i8
  %8766 = and i8 %8765, 1
  %8767 = xor i8 %8766, 1
  store i8 %8767, i8* %8761, align 1
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8768, align 1
  %8769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8770 = icmp eq i64 %8758, 0
  %8771 = zext i1 %8770 to i8
  store i8 %8771, i8* %8769, align 1
  %8772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8773 = lshr i64 %8758, 63
  %8774 = trunc i64 %8773 to i8
  store i8 %8774, i8* %8772, align 1
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8775, align 1
  store %struct.Memory* %loadMem_4068f9, %struct.Memory** %MEMORY
  %loadMem_4068fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8777 = getelementptr inbounds %struct.GPR, %struct.GPR* %8776, i32 0, i32 33
  %8778 = getelementptr inbounds %struct.Reg, %struct.Reg* %8777, i32 0, i32 0
  %PC.i1825 = bitcast %union.anon* %8778 to i64*
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8780 = getelementptr inbounds %struct.GPR, %struct.GPR* %8779, i32 0, i32 5
  %8781 = getelementptr inbounds %struct.Reg, %struct.Reg* %8780, i32 0, i32 0
  %RCX.i1826 = bitcast %union.anon* %8781 to i64*
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8783 = getelementptr inbounds %struct.GPR, %struct.GPR* %8782, i32 0, i32 7
  %8784 = getelementptr inbounds %struct.Reg, %struct.Reg* %8783, i32 0, i32 0
  %RDX.i1827 = bitcast %union.anon* %8784 to i64*
  %8785 = load i64, i64* %RCX.i1826
  %8786 = load i64, i64* %RDX.i1827
  %8787 = load i64, i64* %PC.i1825
  %8788 = add i64 %8787, 3
  store i64 %8788, i64* %PC.i1825
  %8789 = add i64 %8786, %8785
  store i64 %8789, i64* %RCX.i1826, align 8
  %8790 = icmp ult i64 %8789, %8785
  %8791 = icmp ult i64 %8789, %8786
  %8792 = or i1 %8790, %8791
  %8793 = zext i1 %8792 to i8
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8793, i8* %8794, align 1
  %8795 = trunc i64 %8789 to i32
  %8796 = and i32 %8795, 255
  %8797 = call i32 @llvm.ctpop.i32(i32 %8796)
  %8798 = trunc i32 %8797 to i8
  %8799 = and i8 %8798, 1
  %8800 = xor i8 %8799, 1
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8800, i8* %8801, align 1
  %8802 = xor i64 %8786, %8785
  %8803 = xor i64 %8802, %8789
  %8804 = lshr i64 %8803, 4
  %8805 = trunc i64 %8804 to i8
  %8806 = and i8 %8805, 1
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8806, i8* %8807, align 1
  %8808 = icmp eq i64 %8789, 0
  %8809 = zext i1 %8808 to i8
  %8810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8809, i8* %8810, align 1
  %8811 = lshr i64 %8789, 63
  %8812 = trunc i64 %8811 to i8
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8812, i8* %8813, align 1
  %8814 = lshr i64 %8785, 63
  %8815 = lshr i64 %8786, 63
  %8816 = xor i64 %8811, %8814
  %8817 = xor i64 %8811, %8815
  %8818 = add i64 %8816, %8817
  %8819 = icmp eq i64 %8818, 2
  %8820 = zext i1 %8819 to i8
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8820, i8* %8821, align 1
  store %struct.Memory* %loadMem_4068fd, %struct.Memory** %MEMORY
  %loadMem_406900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8823 = getelementptr inbounds %struct.GPR, %struct.GPR* %8822, i32 0, i32 33
  %8824 = getelementptr inbounds %struct.Reg, %struct.Reg* %8823, i32 0, i32 0
  %PC.i1822 = bitcast %union.anon* %8824 to i64*
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8826 = getelementptr inbounds %struct.GPR, %struct.GPR* %8825, i32 0, i32 7
  %8827 = getelementptr inbounds %struct.Reg, %struct.Reg* %8826, i32 0, i32 0
  %RDX.i1823 = bitcast %union.anon* %8827 to i64*
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 15
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %RBP.i1824 = bitcast %union.anon* %8830 to i64*
  %8831 = load i64, i64* %RBP.i1824
  %8832 = sub i64 %8831, 28
  %8833 = load i64, i64* %PC.i1822
  %8834 = add i64 %8833, 4
  store i64 %8834, i64* %PC.i1822
  %8835 = inttoptr i64 %8832 to i32*
  %8836 = load i32, i32* %8835
  %8837 = sext i32 %8836 to i64
  store i64 %8837, i64* %RDX.i1823, align 8
  store %struct.Memory* %loadMem_406900, %struct.Memory** %MEMORY
  %loadMem_406904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8839 = getelementptr inbounds %struct.GPR, %struct.GPR* %8838, i32 0, i32 33
  %8840 = getelementptr inbounds %struct.Reg, %struct.Reg* %8839, i32 0, i32 0
  %PC.i1818 = bitcast %union.anon* %8840 to i64*
  %8841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8842 = getelementptr inbounds %struct.GPR, %struct.GPR* %8841, i32 0, i32 1
  %8843 = getelementptr inbounds %struct.Reg, %struct.Reg* %8842, i32 0, i32 0
  %RAX.i1819 = bitcast %union.anon* %8843 to i64*
  %8844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8845 = getelementptr inbounds %struct.GPR, %struct.GPR* %8844, i32 0, i32 5
  %8846 = getelementptr inbounds %struct.Reg, %struct.Reg* %8845, i32 0, i32 0
  %RCX.i1820 = bitcast %union.anon* %8846 to i64*
  %8847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8848 = getelementptr inbounds %struct.GPR, %struct.GPR* %8847, i32 0, i32 7
  %8849 = getelementptr inbounds %struct.Reg, %struct.Reg* %8848, i32 0, i32 0
  %RDX.i1821 = bitcast %union.anon* %8849 to i64*
  %8850 = load i64, i64* %RAX.i1819
  %8851 = load i64, i64* %RCX.i1820
  %8852 = load i64, i64* %RDX.i1821
  %8853 = mul i64 %8852, 4
  %8854 = add i64 %8853, %8851
  %8855 = load i64, i64* %PC.i1818
  %8856 = add i64 %8855, 3
  store i64 %8856, i64* %PC.i1818
  %8857 = trunc i64 %8850 to i32
  %8858 = inttoptr i64 %8854 to i32*
  %8859 = load i32, i32* %8858
  %8860 = add i32 %8859, %8857
  %8861 = zext i32 %8860 to i64
  store i64 %8861, i64* %RAX.i1819, align 8
  %8862 = icmp ult i32 %8860, %8857
  %8863 = icmp ult i32 %8860, %8859
  %8864 = or i1 %8862, %8863
  %8865 = zext i1 %8864 to i8
  %8866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8865, i8* %8866, align 1
  %8867 = and i32 %8860, 255
  %8868 = call i32 @llvm.ctpop.i32(i32 %8867)
  %8869 = trunc i32 %8868 to i8
  %8870 = and i8 %8869, 1
  %8871 = xor i8 %8870, 1
  %8872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8871, i8* %8872, align 1
  %8873 = xor i32 %8859, %8857
  %8874 = xor i32 %8873, %8860
  %8875 = lshr i32 %8874, 4
  %8876 = trunc i32 %8875 to i8
  %8877 = and i8 %8876, 1
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8877, i8* %8878, align 1
  %8879 = icmp eq i32 %8860, 0
  %8880 = zext i1 %8879 to i8
  %8881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8880, i8* %8881, align 1
  %8882 = lshr i32 %8860, 31
  %8883 = trunc i32 %8882 to i8
  %8884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8883, i8* %8884, align 1
  %8885 = lshr i32 %8857, 31
  %8886 = lshr i32 %8859, 31
  %8887 = xor i32 %8882, %8885
  %8888 = xor i32 %8882, %8886
  %8889 = add i32 %8887, %8888
  %8890 = icmp eq i32 %8889, 2
  %8891 = zext i1 %8890 to i8
  %8892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8891, i8* %8892, align 1
  store %struct.Memory* %loadMem_406904, %struct.Memory** %MEMORY
  %loadMem_406907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8894 = getelementptr inbounds %struct.GPR, %struct.GPR* %8893, i32 0, i32 33
  %8895 = getelementptr inbounds %struct.Reg, %struct.Reg* %8894, i32 0, i32 0
  %PC.i1815 = bitcast %union.anon* %8895 to i64*
  %8896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8897 = getelementptr inbounds %struct.GPR, %struct.GPR* %8896, i32 0, i32 5
  %8898 = getelementptr inbounds %struct.Reg, %struct.Reg* %8897, i32 0, i32 0
  %RCX.i1816 = bitcast %union.anon* %8898 to i64*
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8900 = getelementptr inbounds %struct.GPR, %struct.GPR* %8899, i32 0, i32 15
  %8901 = getelementptr inbounds %struct.Reg, %struct.Reg* %8900, i32 0, i32 0
  %RBP.i1817 = bitcast %union.anon* %8901 to i64*
  %8902 = load i64, i64* %RBP.i1817
  %8903 = sub i64 %8902, 112
  %8904 = load i64, i64* %PC.i1815
  %8905 = add i64 %8904, 3
  store i64 %8905, i64* %PC.i1815
  %8906 = inttoptr i64 %8903 to i32*
  %8907 = load i32, i32* %8906
  %8908 = zext i32 %8907 to i64
  store i64 %8908, i64* %RCX.i1816, align 8
  store %struct.Memory* %loadMem_406907, %struct.Memory** %MEMORY
  %loadMem_40690a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8910 = getelementptr inbounds %struct.GPR, %struct.GPR* %8909, i32 0, i32 33
  %8911 = getelementptr inbounds %struct.Reg, %struct.Reg* %8910, i32 0, i32 0
  %PC.i1812 = bitcast %union.anon* %8911 to i64*
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8913 = getelementptr inbounds %struct.GPR, %struct.GPR* %8912, i32 0, i32 5
  %8914 = getelementptr inbounds %struct.Reg, %struct.Reg* %8913, i32 0, i32 0
  %8915 = bitcast %union.anon* %8914 to %struct.anon.2*
  %CL.i1813 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8915, i32 0, i32 0
  %8916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8917 = getelementptr inbounds %struct.GPR, %struct.GPR* %8916, i32 0, i32 1
  %8918 = getelementptr inbounds %struct.Reg, %struct.Reg* %8917, i32 0, i32 0
  %RAX.i1814 = bitcast %union.anon* %8918 to i64*
  %8919 = load i64, i64* %RAX.i1814
  %8920 = load i8, i8* %CL.i1813
  %8921 = zext i8 %8920 to i64
  %8922 = load i64, i64* %PC.i1812
  %8923 = add i64 %8922, 2
  store i64 %8923, i64* %PC.i1812
  %8924 = trunc i64 %8921 to i5
  switch i5 %8924, label %8928 [
    i5 0, label %routine_sarl__cl___eax.exit
    i5 1, label %8925
  ]

; <label>:8925:                                   ; preds = %block_.L_406893
  %8926 = shl i64 %8919, 32
  %8927 = ashr i64 %8926, 33
  br label %8935

; <label>:8928:                                   ; preds = %block_.L_406893
  %8929 = and i64 %8921, 31
  %8930 = add i64 %8929, -1
  %8931 = shl i64 %8919, 32
  %8932 = ashr exact i64 %8931, 32
  %8933 = ashr i64 %8932, %8930
  %8934 = lshr i64 %8933, 1
  br label %8935

; <label>:8935:                                   ; preds = %8928, %8925
  %8936 = phi i64 [ %8934, %8928 ], [ %8927, %8925 ]
  %8937 = phi i64 [ %8933, %8928 ], [ %8919, %8925 ]
  %8938 = trunc i64 %8937 to i8
  %8939 = and i8 %8938, 1
  %8940 = trunc i64 %8936 to i32
  %8941 = and i64 %8936, 4294967295
  store i64 %8941, i64* %RAX.i1814, align 8
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8939, i8* %8942, align 1
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8944 = and i32 %8940, 255
  %8945 = call i32 @llvm.ctpop.i32(i32 %8944)
  %8946 = trunc i32 %8945 to i8
  %8947 = and i8 %8946, 1
  %8948 = xor i8 %8947, 1
  store i8 %8948, i8* %8943, align 1
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8949, align 1
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8951 = icmp eq i32 %8940, 0
  %8952 = zext i1 %8951 to i8
  store i8 %8952, i8* %8950, align 1
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8954 = lshr i32 %8940, 31
  %8955 = trunc i32 %8954 to i8
  store i8 %8955, i8* %8953, align 1
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8956, align 1
  br label %routine_sarl__cl___eax.exit

routine_sarl__cl___eax.exit:                      ; preds = %block_.L_406893, %8935
  store %struct.Memory* %loadMem_40690a, %struct.Memory** %MEMORY
  %loadMem_40690c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8958 = getelementptr inbounds %struct.GPR, %struct.GPR* %8957, i32 0, i32 33
  %8959 = getelementptr inbounds %struct.Reg, %struct.Reg* %8958, i32 0, i32 0
  %PC.i1809 = bitcast %union.anon* %8959 to i64*
  %8960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8961 = getelementptr inbounds %struct.GPR, %struct.GPR* %8960, i32 0, i32 1
  %8962 = getelementptr inbounds %struct.Reg, %struct.Reg* %8961, i32 0, i32 0
  %EAX.i1810 = bitcast %union.anon* %8962 to i32*
  %8963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8964 = getelementptr inbounds %struct.GPR, %struct.GPR* %8963, i32 0, i32 15
  %8965 = getelementptr inbounds %struct.Reg, %struct.Reg* %8964, i32 0, i32 0
  %RBP.i1811 = bitcast %union.anon* %8965 to i64*
  %8966 = load i64, i64* %RBP.i1811
  %8967 = sub i64 %8966, 88
  %8968 = load i32, i32* %EAX.i1810
  %8969 = zext i32 %8968 to i64
  %8970 = load i64, i64* %PC.i1809
  %8971 = add i64 %8970, 3
  store i64 %8971, i64* %PC.i1809
  %8972 = inttoptr i64 %8967 to i32*
  store i32 %8968, i32* %8972
  store %struct.Memory* %loadMem_40690c, %struct.Memory** %MEMORY
  br label %block_.L_40690f

block_.L_40690f:                                  ; preds = %routine_sarl__cl___eax.exit, %routine_sarl__cl___eax.exit1898
  %loadMem_40690f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8974 = getelementptr inbounds %struct.GPR, %struct.GPR* %8973, i32 0, i32 33
  %8975 = getelementptr inbounds %struct.Reg, %struct.Reg* %8974, i32 0, i32 0
  %PC.i1808 = bitcast %union.anon* %8975 to i64*
  %8976 = load i64, i64* %PC.i1808
  %8977 = add i64 %8976, 5
  %8978 = load i64, i64* %PC.i1808
  %8979 = add i64 %8978, 5
  store i64 %8979, i64* %PC.i1808
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8977, i64* %8980, align 8
  store %struct.Memory* %loadMem_40690f, %struct.Memory** %MEMORY
  br label %block_.L_406914

block_.L_406914:                                  ; preds = %block_.L_40690f, %block_4067db
  %loadMem_406914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8982 = getelementptr inbounds %struct.GPR, %struct.GPR* %8981, i32 0, i32 33
  %8983 = getelementptr inbounds %struct.Reg, %struct.Reg* %8982, i32 0, i32 0
  %PC.i1806 = bitcast %union.anon* %8983 to i64*
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8985 = getelementptr inbounds %struct.GPR, %struct.GPR* %8984, i32 0, i32 15
  %8986 = getelementptr inbounds %struct.Reg, %struct.Reg* %8985, i32 0, i32 0
  %RBP.i1807 = bitcast %union.anon* %8986 to i64*
  %8987 = load i64, i64* %RBP.i1807
  %8988 = sub i64 %8987, 88
  %8989 = load i64, i64* %PC.i1806
  %8990 = add i64 %8989, 4
  store i64 %8990, i64* %PC.i1806
  %8991 = inttoptr i64 %8988 to i32*
  %8992 = load i32, i32* %8991
  %8993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8993, align 1
  %8994 = and i32 %8992, 255
  %8995 = call i32 @llvm.ctpop.i32(i32 %8994)
  %8996 = trunc i32 %8995 to i8
  %8997 = and i8 %8996, 1
  %8998 = xor i8 %8997, 1
  %8999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8998, i8* %8999, align 1
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9000, align 1
  %9001 = icmp eq i32 %8992, 0
  %9002 = zext i1 %9001 to i8
  %9003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9002, i8* %9003, align 1
  %9004 = lshr i32 %8992, 31
  %9005 = trunc i32 %9004 to i8
  %9006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9005, i8* %9006, align 1
  %9007 = lshr i32 %8992, 31
  %9008 = xor i32 %9004, %9007
  %9009 = add i32 %9008, %9007
  %9010 = icmp eq i32 %9009, 2
  %9011 = zext i1 %9010 to i8
  %9012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9011, i8* %9012, align 1
  store %struct.Memory* %loadMem_406914, %struct.Memory** %MEMORY
  %loadMem_406918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9014 = getelementptr inbounds %struct.GPR, %struct.GPR* %9013, i32 0, i32 33
  %9015 = getelementptr inbounds %struct.Reg, %struct.Reg* %9014, i32 0, i32 0
  %PC.i1805 = bitcast %union.anon* %9015 to i64*
  %9016 = load i64, i64* %PC.i1805
  %9017 = add i64 %9016, 634
  %9018 = load i64, i64* %PC.i1805
  %9019 = add i64 %9018, 6
  %9020 = load i64, i64* %PC.i1805
  %9021 = add i64 %9020, 6
  store i64 %9021, i64* %PC.i1805
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9023 = load i8, i8* %9022, align 1
  store i8 %9023, i8* %BRANCH_TAKEN, align 1
  %9024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9025 = icmp ne i8 %9023, 0
  %9026 = select i1 %9025, i64 %9017, i64 %9019
  store i64 %9026, i64* %9024, align 8
  store %struct.Memory* %loadMem_406918, %struct.Memory** %MEMORY
  %loadBr_406918 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406918 = icmp eq i8 %loadBr_406918, 1
  br i1 %cmpBr_406918, label %block_.L_406b92, label %block_40691e

block_40691e:                                     ; preds = %block_.L_406914
  %loadMem_40691e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9028 = getelementptr inbounds %struct.GPR, %struct.GPR* %9027, i32 0, i32 33
  %9029 = getelementptr inbounds %struct.Reg, %struct.Reg* %9028, i32 0, i32 0
  %PC.i1803 = bitcast %union.anon* %9029 to i64*
  %9030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9031 = getelementptr inbounds %struct.GPR, %struct.GPR* %9030, i32 0, i32 15
  %9032 = getelementptr inbounds %struct.Reg, %struct.Reg* %9031, i32 0, i32 0
  %RBP.i1804 = bitcast %union.anon* %9032 to i64*
  %9033 = load i64, i64* %RBP.i1804
  %9034 = sub i64 %9033, 100
  %9035 = load i64, i64* %PC.i1803
  %9036 = add i64 %9035, 7
  store i64 %9036, i64* %PC.i1803
  %9037 = inttoptr i64 %9034 to i32*
  store i32 1, i32* %9037
  store %struct.Memory* %loadMem_40691e, %struct.Memory** %MEMORY
  %loadMem_406925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9039 = getelementptr inbounds %struct.GPR, %struct.GPR* %9038, i32 0, i32 33
  %9040 = getelementptr inbounds %struct.Reg, %struct.Reg* %9039, i32 0, i32 0
  %PC.i1801 = bitcast %union.anon* %9040 to i64*
  %9041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9042 = getelementptr inbounds %struct.GPR, %struct.GPR* %9041, i32 0, i32 15
  %9043 = getelementptr inbounds %struct.Reg, %struct.Reg* %9042, i32 0, i32 0
  %RBP.i1802 = bitcast %union.anon* %9043 to i64*
  %9044 = load i64, i64* %RBP.i1802
  %9045 = sub i64 %9044, 88
  %9046 = load i64, i64* %PC.i1801
  %9047 = add i64 %9046, 4
  store i64 %9047, i64* %PC.i1801
  %9048 = inttoptr i64 %9045 to i32*
  %9049 = load i32, i32* %9048
  %9050 = sub i32 %9049, 1
  %9051 = icmp ult i32 %9049, 1
  %9052 = zext i1 %9051 to i8
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9052, i8* %9053, align 1
  %9054 = and i32 %9050, 255
  %9055 = call i32 @llvm.ctpop.i32(i32 %9054)
  %9056 = trunc i32 %9055 to i8
  %9057 = and i8 %9056, 1
  %9058 = xor i8 %9057, 1
  %9059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9058, i8* %9059, align 1
  %9060 = xor i32 %9049, 1
  %9061 = xor i32 %9060, %9050
  %9062 = lshr i32 %9061, 4
  %9063 = trunc i32 %9062 to i8
  %9064 = and i8 %9063, 1
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9064, i8* %9065, align 1
  %9066 = icmp eq i32 %9050, 0
  %9067 = zext i1 %9066 to i8
  %9068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9067, i8* %9068, align 1
  %9069 = lshr i32 %9050, 31
  %9070 = trunc i32 %9069 to i8
  %9071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9070, i8* %9071, align 1
  %9072 = lshr i32 %9049, 31
  %9073 = xor i32 %9069, %9072
  %9074 = add i32 %9073, %9072
  %9075 = icmp eq i32 %9074, 2
  %9076 = zext i1 %9075 to i8
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9076, i8* %9077, align 1
  store %struct.Memory* %loadMem_406925, %struct.Memory** %MEMORY
  %loadMem_406929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9079 = getelementptr inbounds %struct.GPR, %struct.GPR* %9078, i32 0, i32 33
  %9080 = getelementptr inbounds %struct.Reg, %struct.Reg* %9079, i32 0, i32 0
  %PC.i1800 = bitcast %union.anon* %9080 to i64*
  %9081 = load i64, i64* %PC.i1800
  %9082 = add i64 %9081, 19
  %9083 = load i64, i64* %PC.i1800
  %9084 = add i64 %9083, 6
  %9085 = load i64, i64* %PC.i1800
  %9086 = add i64 %9085, 6
  store i64 %9086, i64* %PC.i1800
  %9087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9088 = load i8, i8* %9087, align 1
  %9089 = icmp eq i8 %9088, 0
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9091 = load i8, i8* %9090, align 1
  %9092 = icmp ne i8 %9091, 0
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9094 = load i8, i8* %9093, align 1
  %9095 = icmp ne i8 %9094, 0
  %9096 = xor i1 %9092, %9095
  %9097 = xor i1 %9096, true
  %9098 = and i1 %9089, %9097
  %9099 = zext i1 %9098 to i8
  store i8 %9099, i8* %BRANCH_TAKEN, align 1
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9101 = select i1 %9098, i64 %9082, i64 %9084
  store i64 %9101, i64* %9100, align 8
  store %struct.Memory* %loadMem_406929, %struct.Memory** %MEMORY
  %loadBr_406929 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406929 = icmp eq i8 %loadBr_406929, 1
  br i1 %cmpBr_406929, label %block_.L_40693c, label %block_40692f

block_40692f:                                     ; preds = %block_40691e
  %loadMem_40692f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9103 = getelementptr inbounds %struct.GPR, %struct.GPR* %9102, i32 0, i32 33
  %9104 = getelementptr inbounds %struct.Reg, %struct.Reg* %9103, i32 0, i32 0
  %PC.i1798 = bitcast %union.anon* %9104 to i64*
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9106 = getelementptr inbounds %struct.GPR, %struct.GPR* %9105, i32 0, i32 15
  %9107 = getelementptr inbounds %struct.Reg, %struct.Reg* %9106, i32 0, i32 0
  %RBP.i1799 = bitcast %union.anon* %9107 to i64*
  %9108 = load i64, i64* %RBP.i1799
  %9109 = sub i64 %9108, 156
  %9110 = load i64, i64* %PC.i1798
  %9111 = add i64 %9110, 7
  store i64 %9111, i64* %PC.i1798
  %9112 = inttoptr i64 %9109 to i32*
  %9113 = load i32, i32* %9112
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9114, align 1
  %9115 = and i32 %9113, 255
  %9116 = call i32 @llvm.ctpop.i32(i32 %9115)
  %9117 = trunc i32 %9116 to i8
  %9118 = and i8 %9117, 1
  %9119 = xor i8 %9118, 1
  %9120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9119, i8* %9120, align 1
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9121, align 1
  %9122 = icmp eq i32 %9113, 0
  %9123 = zext i1 %9122 to i8
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9123, i8* %9124, align 1
  %9125 = lshr i32 %9113, 31
  %9126 = trunc i32 %9125 to i8
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9126, i8* %9127, align 1
  %9128 = lshr i32 %9113, 31
  %9129 = xor i32 %9125, %9128
  %9130 = add i32 %9129, %9128
  %9131 = icmp eq i32 %9130, 2
  %9132 = zext i1 %9131 to i8
  %9133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9132, i8* %9133, align 1
  store %struct.Memory* %loadMem_40692f, %struct.Memory** %MEMORY
  %loadMem_406936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 33
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %PC.i1797 = bitcast %union.anon* %9136 to i64*
  %9137 = load i64, i64* %PC.i1797
  %9138 = add i64 %9137, 25
  %9139 = load i64, i64* %PC.i1797
  %9140 = add i64 %9139, 6
  %9141 = load i64, i64* %PC.i1797
  %9142 = add i64 %9141, 6
  store i64 %9142, i64* %PC.i1797
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9144 = load i8, i8* %9143, align 1
  store i8 %9144, i8* %BRANCH_TAKEN, align 1
  %9145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9146 = icmp ne i8 %9144, 0
  %9147 = select i1 %9146, i64 %9138, i64 %9140
  store i64 %9147, i64* %9145, align 8
  store %struct.Memory* %loadMem_406936, %struct.Memory** %MEMORY
  %loadBr_406936 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406936 = icmp eq i8 %loadBr_406936, 1
  br i1 %cmpBr_406936, label %block_.L_40694f, label %block_.L_40693c

block_.L_40693c:                                  ; preds = %block_40692f, %block_40691e
  %loadMem_40693c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9149 = getelementptr inbounds %struct.GPR, %struct.GPR* %9148, i32 0, i32 33
  %9150 = getelementptr inbounds %struct.Reg, %struct.Reg* %9149, i32 0, i32 0
  %PC.i1794 = bitcast %union.anon* %9150 to i64*
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9152 = getelementptr inbounds %struct.GPR, %struct.GPR* %9151, i32 0, i32 1
  %9153 = getelementptr inbounds %struct.Reg, %struct.Reg* %9152, i32 0, i32 0
  %RAX.i1795 = bitcast %union.anon* %9153 to i64*
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9155 = getelementptr inbounds %struct.GPR, %struct.GPR* %9154, i32 0, i32 15
  %9156 = getelementptr inbounds %struct.Reg, %struct.Reg* %9155, i32 0, i32 0
  %RBP.i1796 = bitcast %union.anon* %9156 to i64*
  %9157 = load i64, i64* %RBP.i1796
  %9158 = sub i64 %9157, 16
  %9159 = load i64, i64* %PC.i1794
  %9160 = add i64 %9159, 4
  store i64 %9160, i64* %PC.i1794
  %9161 = inttoptr i64 %9158 to i64*
  %9162 = load i64, i64* %9161
  store i64 %9162, i64* %RAX.i1795, align 8
  store %struct.Memory* %loadMem_40693c, %struct.Memory** %MEMORY
  %loadMem_406940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9164 = getelementptr inbounds %struct.GPR, %struct.GPR* %9163, i32 0, i32 33
  %9165 = getelementptr inbounds %struct.Reg, %struct.Reg* %9164, i32 0, i32 0
  %PC.i1791 = bitcast %union.anon* %9165 to i64*
  %9166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9167 = getelementptr inbounds %struct.GPR, %struct.GPR* %9166, i32 0, i32 1
  %9168 = getelementptr inbounds %struct.Reg, %struct.Reg* %9167, i32 0, i32 0
  %RAX.i1792 = bitcast %union.anon* %9168 to i64*
  %9169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9170 = getelementptr inbounds %struct.GPR, %struct.GPR* %9169, i32 0, i32 5
  %9171 = getelementptr inbounds %struct.Reg, %struct.Reg* %9170, i32 0, i32 0
  %RCX.i1793 = bitcast %union.anon* %9171 to i64*
  %9172 = load i64, i64* %RAX.i1792
  %9173 = load i64, i64* %PC.i1791
  %9174 = add i64 %9173, 2
  store i64 %9174, i64* %PC.i1791
  %9175 = inttoptr i64 %9172 to i32*
  %9176 = load i32, i32* %9175
  %9177 = zext i32 %9176 to i64
  store i64 %9177, i64* %RCX.i1793, align 8
  store %struct.Memory* %loadMem_406940, %struct.Memory** %MEMORY
  %loadMem_406942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9179 = getelementptr inbounds %struct.GPR, %struct.GPR* %9178, i32 0, i32 33
  %9180 = getelementptr inbounds %struct.Reg, %struct.Reg* %9179, i32 0, i32 0
  %PC.i1789 = bitcast %union.anon* %9180 to i64*
  %9181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9182 = getelementptr inbounds %struct.GPR, %struct.GPR* %9181, i32 0, i32 5
  %9183 = getelementptr inbounds %struct.Reg, %struct.Reg* %9182, i32 0, i32 0
  %RCX.i1790 = bitcast %union.anon* %9183 to i64*
  %9184 = load i64, i64* %RCX.i1790
  %9185 = load i64, i64* %PC.i1789
  %9186 = add i64 %9185, 6
  store i64 %9186, i64* %PC.i1789
  %9187 = trunc i64 %9184 to i32
  %9188 = add i32 999999, %9187
  %9189 = zext i32 %9188 to i64
  store i64 %9189, i64* %RCX.i1790, align 8
  %9190 = icmp ult i32 %9188, %9187
  %9191 = icmp ult i32 %9188, 999999
  %9192 = or i1 %9190, %9191
  %9193 = zext i1 %9192 to i8
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9193, i8* %9194, align 1
  %9195 = and i32 %9188, 255
  %9196 = call i32 @llvm.ctpop.i32(i32 %9195)
  %9197 = trunc i32 %9196 to i8
  %9198 = and i8 %9197, 1
  %9199 = xor i8 %9198, 1
  %9200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9199, i8* %9200, align 1
  %9201 = xor i64 999999, %9184
  %9202 = trunc i64 %9201 to i32
  %9203 = xor i32 %9202, %9188
  %9204 = lshr i32 %9203, 4
  %9205 = trunc i32 %9204 to i8
  %9206 = and i8 %9205, 1
  %9207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9206, i8* %9207, align 1
  %9208 = icmp eq i32 %9188, 0
  %9209 = zext i1 %9208 to i8
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9209, i8* %9210, align 1
  %9211 = lshr i32 %9188, 31
  %9212 = trunc i32 %9211 to i8
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9212, i8* %9213, align 1
  %9214 = lshr i32 %9187, 31
  %9215 = xor i32 %9211, %9214
  %9216 = add i32 %9215, %9211
  %9217 = icmp eq i32 %9216, 2
  %9218 = zext i1 %9217 to i8
  %9219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9218, i8* %9219, align 1
  store %struct.Memory* %loadMem_406942, %struct.Memory** %MEMORY
  %loadMem_406948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9221 = getelementptr inbounds %struct.GPR, %struct.GPR* %9220, i32 0, i32 33
  %9222 = getelementptr inbounds %struct.Reg, %struct.Reg* %9221, i32 0, i32 0
  %PC.i1786 = bitcast %union.anon* %9222 to i64*
  %9223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9224 = getelementptr inbounds %struct.GPR, %struct.GPR* %9223, i32 0, i32 5
  %9225 = getelementptr inbounds %struct.Reg, %struct.Reg* %9224, i32 0, i32 0
  %ECX.i1787 = bitcast %union.anon* %9225 to i32*
  %9226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9227 = getelementptr inbounds %struct.GPR, %struct.GPR* %9226, i32 0, i32 1
  %9228 = getelementptr inbounds %struct.Reg, %struct.Reg* %9227, i32 0, i32 0
  %RAX.i1788 = bitcast %union.anon* %9228 to i64*
  %9229 = load i64, i64* %RAX.i1788
  %9230 = load i32, i32* %ECX.i1787
  %9231 = zext i32 %9230 to i64
  %9232 = load i64, i64* %PC.i1786
  %9233 = add i64 %9232, 2
  store i64 %9233, i64* %PC.i1786
  %9234 = inttoptr i64 %9229 to i32*
  store i32 %9230, i32* %9234
  store %struct.Memory* %loadMem_406948, %struct.Memory** %MEMORY
  %loadMem_40694a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9236 = getelementptr inbounds %struct.GPR, %struct.GPR* %9235, i32 0, i32 33
  %9237 = getelementptr inbounds %struct.Reg, %struct.Reg* %9236, i32 0, i32 0
  %PC.i1785 = bitcast %union.anon* %9237 to i64*
  %9238 = load i64, i64* %PC.i1785
  %9239 = add i64 %9238, 53
  %9240 = load i64, i64* %PC.i1785
  %9241 = add i64 %9240, 5
  store i64 %9241, i64* %PC.i1785
  %9242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9239, i64* %9242, align 8
  store %struct.Memory* %loadMem_40694a, %struct.Memory** %MEMORY
  br label %block_.L_40697f

block_.L_40694f:                                  ; preds = %block_40692f
  %loadMem_40694f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9244 = getelementptr inbounds %struct.GPR, %struct.GPR* %9243, i32 0, i32 33
  %9245 = getelementptr inbounds %struct.Reg, %struct.Reg* %9244, i32 0, i32 0
  %PC.i1783 = bitcast %union.anon* %9245 to i64*
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9247 = getelementptr inbounds %struct.GPR, %struct.GPR* %9246, i32 0, i32 1
  %9248 = getelementptr inbounds %struct.Reg, %struct.Reg* %9247, i32 0, i32 0
  %RAX.i1784 = bitcast %union.anon* %9248 to i64*
  %9249 = load i64, i64* %PC.i1783
  %9250 = add i64 %9249, 10
  store i64 %9250, i64* %PC.i1783
  store i64 ptrtoint (%G__0x4b23a0_type* @G__0x4b23a0 to i64), i64* %RAX.i1784, align 8
  store %struct.Memory* %loadMem_40694f, %struct.Memory** %MEMORY
  %loadMem_406959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9252 = getelementptr inbounds %struct.GPR, %struct.GPR* %9251, i32 0, i32 33
  %9253 = getelementptr inbounds %struct.Reg, %struct.Reg* %9252, i32 0, i32 0
  %PC.i1781 = bitcast %union.anon* %9253 to i64*
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9255 = getelementptr inbounds %struct.GPR, %struct.GPR* %9254, i32 0, i32 5
  %9256 = getelementptr inbounds %struct.Reg, %struct.Reg* %9255, i32 0, i32 0
  %RCX.i1782 = bitcast %union.anon* %9256 to i64*
  %9257 = load i64, i64* %PC.i1781
  %9258 = add i64 %9257, 8
  store i64 %9258, i64* %PC.i1781
  %9259 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %9259, i64* %RCX.i1782, align 8
  store %struct.Memory* %loadMem_406959, %struct.Memory** %MEMORY
  %loadMem_406961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9261 = getelementptr inbounds %struct.GPR, %struct.GPR* %9260, i32 0, i32 33
  %9262 = getelementptr inbounds %struct.Reg, %struct.Reg* %9261, i32 0, i32 0
  %PC.i1779 = bitcast %union.anon* %9262 to i64*
  %9263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9264 = getelementptr inbounds %struct.GPR, %struct.GPR* %9263, i32 0, i32 5
  %9265 = getelementptr inbounds %struct.Reg, %struct.Reg* %9264, i32 0, i32 0
  %RCX.i1780 = bitcast %union.anon* %9265 to i64*
  %9266 = load i64, i64* %RCX.i1780
  %9267 = add i64 %9266, 2468
  %9268 = load i64, i64* %PC.i1779
  %9269 = add i64 %9268, 7
  store i64 %9269, i64* %PC.i1779
  %9270 = inttoptr i64 %9267 to i32*
  %9271 = load i32, i32* %9270
  %9272 = sext i32 %9271 to i64
  store i64 %9272, i64* %RCX.i1780, align 8
  store %struct.Memory* %loadMem_406961, %struct.Memory** %MEMORY
  %loadMem_406968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9274 = getelementptr inbounds %struct.GPR, %struct.GPR* %9273, i32 0, i32 33
  %9275 = getelementptr inbounds %struct.Reg, %struct.Reg* %9274, i32 0, i32 0
  %PC.i1777 = bitcast %union.anon* %9275 to i64*
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9277 = getelementptr inbounds %struct.GPR, %struct.GPR* %9276, i32 0, i32 5
  %9278 = getelementptr inbounds %struct.Reg, %struct.Reg* %9277, i32 0, i32 0
  %RCX.i1778 = bitcast %union.anon* %9278 to i64*
  %9279 = load i64, i64* %RCX.i1778
  %9280 = load i64, i64* %PC.i1777
  %9281 = add i64 %9280, 4
  store i64 %9281, i64* %PC.i1777
  %9282 = shl i64 %9279, 3
  %9283 = icmp slt i64 %9282, 0
  %9284 = shl i64 %9282, 1
  store i64 %9284, i64* %RCX.i1778, align 8
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9286 = zext i1 %9283 to i8
  store i8 %9286, i8* %9285, align 1
  %9287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9288 = trunc i64 %9284 to i32
  %9289 = and i32 %9288, 254
  %9290 = call i32 @llvm.ctpop.i32(i32 %9289)
  %9291 = trunc i32 %9290 to i8
  %9292 = and i8 %9291, 1
  %9293 = xor i8 %9292, 1
  store i8 %9293, i8* %9287, align 1
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9294, align 1
  %9295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9296 = icmp eq i64 %9284, 0
  %9297 = zext i1 %9296 to i8
  store i8 %9297, i8* %9295, align 1
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9299 = lshr i64 %9284, 63
  %9300 = trunc i64 %9299 to i8
  store i8 %9300, i8* %9298, align 1
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9301, align 1
  store %struct.Memory* %loadMem_406968, %struct.Memory** %MEMORY
  %loadMem_40696c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9303 = getelementptr inbounds %struct.GPR, %struct.GPR* %9302, i32 0, i32 33
  %9304 = getelementptr inbounds %struct.Reg, %struct.Reg* %9303, i32 0, i32 0
  %PC.i1774 = bitcast %union.anon* %9304 to i64*
  %9305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9306 = getelementptr inbounds %struct.GPR, %struct.GPR* %9305, i32 0, i32 1
  %9307 = getelementptr inbounds %struct.Reg, %struct.Reg* %9306, i32 0, i32 0
  %RAX.i1775 = bitcast %union.anon* %9307 to i64*
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9309 = getelementptr inbounds %struct.GPR, %struct.GPR* %9308, i32 0, i32 5
  %9310 = getelementptr inbounds %struct.Reg, %struct.Reg* %9309, i32 0, i32 0
  %RCX.i1776 = bitcast %union.anon* %9310 to i64*
  %9311 = load i64, i64* %RAX.i1775
  %9312 = load i64, i64* %RCX.i1776
  %9313 = load i64, i64* %PC.i1774
  %9314 = add i64 %9313, 3
  store i64 %9314, i64* %PC.i1774
  %9315 = add i64 %9312, %9311
  store i64 %9315, i64* %RAX.i1775, align 8
  %9316 = icmp ult i64 %9315, %9311
  %9317 = icmp ult i64 %9315, %9312
  %9318 = or i1 %9316, %9317
  %9319 = zext i1 %9318 to i8
  %9320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9319, i8* %9320, align 1
  %9321 = trunc i64 %9315 to i32
  %9322 = and i32 %9321, 255
  %9323 = call i32 @llvm.ctpop.i32(i32 %9322)
  %9324 = trunc i32 %9323 to i8
  %9325 = and i8 %9324, 1
  %9326 = xor i8 %9325, 1
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9326, i8* %9327, align 1
  %9328 = xor i64 %9312, %9311
  %9329 = xor i64 %9328, %9315
  %9330 = lshr i64 %9329, 4
  %9331 = trunc i64 %9330 to i8
  %9332 = and i8 %9331, 1
  %9333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9332, i8* %9333, align 1
  %9334 = icmp eq i64 %9315, 0
  %9335 = zext i1 %9334 to i8
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9335, i8* %9336, align 1
  %9337 = lshr i64 %9315, 63
  %9338 = trunc i64 %9337 to i8
  %9339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9338, i8* %9339, align 1
  %9340 = lshr i64 %9311, 63
  %9341 = lshr i64 %9312, 63
  %9342 = xor i64 %9337, %9340
  %9343 = xor i64 %9337, %9341
  %9344 = add i64 %9342, %9343
  %9345 = icmp eq i64 %9344, 2
  %9346 = zext i1 %9345 to i8
  %9347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9346, i8* %9347, align 1
  store %struct.Memory* %loadMem_40696c, %struct.Memory** %MEMORY
  %loadMem_40696f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9349 = getelementptr inbounds %struct.GPR, %struct.GPR* %9348, i32 0, i32 33
  %9350 = getelementptr inbounds %struct.Reg, %struct.Reg* %9349, i32 0, i32 0
  %PC.i1771 = bitcast %union.anon* %9350 to i64*
  %9351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9352 = getelementptr inbounds %struct.GPR, %struct.GPR* %9351, i32 0, i32 5
  %9353 = getelementptr inbounds %struct.Reg, %struct.Reg* %9352, i32 0, i32 0
  %RCX.i1772 = bitcast %union.anon* %9353 to i64*
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9355 = getelementptr inbounds %struct.GPR, %struct.GPR* %9354, i32 0, i32 15
  %9356 = getelementptr inbounds %struct.Reg, %struct.Reg* %9355, i32 0, i32 0
  %RBP.i1773 = bitcast %union.anon* %9356 to i64*
  %9357 = load i64, i64* %RBP.i1773
  %9358 = sub i64 %9357, 96
  %9359 = load i64, i64* %PC.i1771
  %9360 = add i64 %9359, 4
  store i64 %9360, i64* %PC.i1771
  %9361 = inttoptr i64 %9358 to i32*
  %9362 = load i32, i32* %9361
  %9363 = sext i32 %9362 to i64
  store i64 %9363, i64* %RCX.i1772, align 8
  store %struct.Memory* %loadMem_40696f, %struct.Memory** %MEMORY
  %loadMem_406973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9365 = getelementptr inbounds %struct.GPR, %struct.GPR* %9364, i32 0, i32 33
  %9366 = getelementptr inbounds %struct.Reg, %struct.Reg* %9365, i32 0, i32 0
  %PC.i1767 = bitcast %union.anon* %9366 to i64*
  %9367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9368 = getelementptr inbounds %struct.GPR, %struct.GPR* %9367, i32 0, i32 1
  %9369 = getelementptr inbounds %struct.Reg, %struct.Reg* %9368, i32 0, i32 0
  %RAX.i1768 = bitcast %union.anon* %9369 to i64*
  %9370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9371 = getelementptr inbounds %struct.GPR, %struct.GPR* %9370, i32 0, i32 5
  %9372 = getelementptr inbounds %struct.Reg, %struct.Reg* %9371, i32 0, i32 0
  %RCX.i1769 = bitcast %union.anon* %9372 to i64*
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9374 = getelementptr inbounds %struct.GPR, %struct.GPR* %9373, i32 0, i32 7
  %9375 = getelementptr inbounds %struct.Reg, %struct.Reg* %9374, i32 0, i32 0
  %RDX.i1770 = bitcast %union.anon* %9375 to i64*
  %9376 = load i64, i64* %RAX.i1768
  %9377 = load i64, i64* %RCX.i1769
  %9378 = add i64 %9377, %9376
  %9379 = load i64, i64* %PC.i1767
  %9380 = add i64 %9379, 4
  store i64 %9380, i64* %PC.i1767
  %9381 = inttoptr i64 %9378 to i8*
  %9382 = load i8, i8* %9381
  %9383 = zext i8 %9382 to i64
  store i64 %9383, i64* %RDX.i1770, align 8
  store %struct.Memory* %loadMem_406973, %struct.Memory** %MEMORY
  %loadMem_406977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9385 = getelementptr inbounds %struct.GPR, %struct.GPR* %9384, i32 0, i32 33
  %9386 = getelementptr inbounds %struct.Reg, %struct.Reg* %9385, i32 0, i32 0
  %PC.i1764 = bitcast %union.anon* %9386 to i64*
  %9387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9388 = getelementptr inbounds %struct.GPR, %struct.GPR* %9387, i32 0, i32 1
  %9389 = getelementptr inbounds %struct.Reg, %struct.Reg* %9388, i32 0, i32 0
  %RAX.i1765 = bitcast %union.anon* %9389 to i64*
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9391 = getelementptr inbounds %struct.GPR, %struct.GPR* %9390, i32 0, i32 15
  %9392 = getelementptr inbounds %struct.Reg, %struct.Reg* %9391, i32 0, i32 0
  %RBP.i1766 = bitcast %union.anon* %9392 to i64*
  %9393 = load i64, i64* %RBP.i1766
  %9394 = sub i64 %9393, 16
  %9395 = load i64, i64* %PC.i1764
  %9396 = add i64 %9395, 4
  store i64 %9396, i64* %PC.i1764
  %9397 = inttoptr i64 %9394 to i64*
  %9398 = load i64, i64* %9397
  store i64 %9398, i64* %RAX.i1765, align 8
  store %struct.Memory* %loadMem_406977, %struct.Memory** %MEMORY
  %loadMem_40697b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9400 = getelementptr inbounds %struct.GPR, %struct.GPR* %9399, i32 0, i32 33
  %9401 = getelementptr inbounds %struct.Reg, %struct.Reg* %9400, i32 0, i32 0
  %PC.i1761 = bitcast %union.anon* %9401 to i64*
  %9402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9403 = getelementptr inbounds %struct.GPR, %struct.GPR* %9402, i32 0, i32 1
  %9404 = getelementptr inbounds %struct.Reg, %struct.Reg* %9403, i32 0, i32 0
  %RAX.i1762 = bitcast %union.anon* %9404 to i64*
  %9405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9406 = getelementptr inbounds %struct.GPR, %struct.GPR* %9405, i32 0, i32 7
  %9407 = getelementptr inbounds %struct.Reg, %struct.Reg* %9406, i32 0, i32 0
  %RDX.i1763 = bitcast %union.anon* %9407 to i64*
  %9408 = load i64, i64* %RDX.i1763
  %9409 = load i64, i64* %RAX.i1762
  %9410 = load i64, i64* %PC.i1761
  %9411 = add i64 %9410, 2
  store i64 %9411, i64* %PC.i1761
  %9412 = trunc i64 %9408 to i32
  %9413 = inttoptr i64 %9409 to i32*
  %9414 = load i32, i32* %9413
  %9415 = add i32 %9414, %9412
  %9416 = zext i32 %9415 to i64
  store i64 %9416, i64* %RDX.i1763, align 8
  %9417 = icmp ult i32 %9415, %9412
  %9418 = icmp ult i32 %9415, %9414
  %9419 = or i1 %9417, %9418
  %9420 = zext i1 %9419 to i8
  %9421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9420, i8* %9421, align 1
  %9422 = and i32 %9415, 255
  %9423 = call i32 @llvm.ctpop.i32(i32 %9422)
  %9424 = trunc i32 %9423 to i8
  %9425 = and i8 %9424, 1
  %9426 = xor i8 %9425, 1
  %9427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9426, i8* %9427, align 1
  %9428 = xor i32 %9414, %9412
  %9429 = xor i32 %9428, %9415
  %9430 = lshr i32 %9429, 4
  %9431 = trunc i32 %9430 to i8
  %9432 = and i8 %9431, 1
  %9433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9432, i8* %9433, align 1
  %9434 = icmp eq i32 %9415, 0
  %9435 = zext i1 %9434 to i8
  %9436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9435, i8* %9436, align 1
  %9437 = lshr i32 %9415, 31
  %9438 = trunc i32 %9437 to i8
  %9439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9438, i8* %9439, align 1
  %9440 = lshr i32 %9412, 31
  %9441 = lshr i32 %9414, 31
  %9442 = xor i32 %9437, %9440
  %9443 = xor i32 %9437, %9441
  %9444 = add i32 %9442, %9443
  %9445 = icmp eq i32 %9444, 2
  %9446 = zext i1 %9445 to i8
  %9447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9446, i8* %9447, align 1
  store %struct.Memory* %loadMem_40697b, %struct.Memory** %MEMORY
  %loadMem_40697d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9449 = getelementptr inbounds %struct.GPR, %struct.GPR* %9448, i32 0, i32 33
  %9450 = getelementptr inbounds %struct.Reg, %struct.Reg* %9449, i32 0, i32 0
  %PC.i1758 = bitcast %union.anon* %9450 to i64*
  %9451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9452 = getelementptr inbounds %struct.GPR, %struct.GPR* %9451, i32 0, i32 7
  %9453 = getelementptr inbounds %struct.Reg, %struct.Reg* %9452, i32 0, i32 0
  %EDX.i1759 = bitcast %union.anon* %9453 to i32*
  %9454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9455 = getelementptr inbounds %struct.GPR, %struct.GPR* %9454, i32 0, i32 1
  %9456 = getelementptr inbounds %struct.Reg, %struct.Reg* %9455, i32 0, i32 0
  %RAX.i1760 = bitcast %union.anon* %9456 to i64*
  %9457 = load i64, i64* %RAX.i1760
  %9458 = load i32, i32* %EDX.i1759
  %9459 = zext i32 %9458 to i64
  %9460 = load i64, i64* %PC.i1758
  %9461 = add i64 %9460, 2
  store i64 %9461, i64* %PC.i1758
  %9462 = inttoptr i64 %9457 to i32*
  store i32 %9458, i32* %9462
  store %struct.Memory* %loadMem_40697d, %struct.Memory** %MEMORY
  br label %block_.L_40697f

block_.L_40697f:                                  ; preds = %block_.L_40694f, %block_.L_40693c
  %loadMem_40697f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9464 = getelementptr inbounds %struct.GPR, %struct.GPR* %9463, i32 0, i32 33
  %9465 = getelementptr inbounds %struct.Reg, %struct.Reg* %9464, i32 0, i32 0
  %PC.i1755 = bitcast %union.anon* %9465 to i64*
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9467 = getelementptr inbounds %struct.GPR, %struct.GPR* %9466, i32 0, i32 11
  %9468 = getelementptr inbounds %struct.Reg, %struct.Reg* %9467, i32 0, i32 0
  %RDI.i1756 = bitcast %union.anon* %9468 to i64*
  %9469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9470 = getelementptr inbounds %struct.GPR, %struct.GPR* %9469, i32 0, i32 15
  %9471 = getelementptr inbounds %struct.Reg, %struct.Reg* %9470, i32 0, i32 0
  %RBP.i1757 = bitcast %union.anon* %9471 to i64*
  %9472 = load i64, i64* %RBP.i1757
  %9473 = sub i64 %9472, 88
  %9474 = load i64, i64* %PC.i1755
  %9475 = add i64 %9474, 3
  store i64 %9475, i64* %PC.i1755
  %9476 = inttoptr i64 %9473 to i32*
  %9477 = load i32, i32* %9476
  %9478 = zext i32 %9477 to i64
  store i64 %9478, i64* %RDI.i1756, align 8
  store %struct.Memory* %loadMem_40697f, %struct.Memory** %MEMORY
  %loadMem_406982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9480 = getelementptr inbounds %struct.GPR, %struct.GPR* %9479, i32 0, i32 33
  %9481 = getelementptr inbounds %struct.Reg, %struct.Reg* %9480, i32 0, i32 0
  %PC.i1753 = bitcast %union.anon* %9481 to i64*
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9483 = getelementptr inbounds %struct.GPR, %struct.GPR* %9482, i32 0, i32 1
  %9484 = getelementptr inbounds %struct.Reg, %struct.Reg* %9483, i32 0, i32 0
  %RAX.i1754 = bitcast %union.anon* %9484 to i64*
  %9485 = load i64, i64* %PC.i1753
  %9486 = add i64 %9485, 8
  store i64 %9486, i64* %PC.i1753
  %9487 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9487, i64* %RAX.i1754, align 8
  store %struct.Memory* %loadMem_406982, %struct.Memory** %MEMORY
  %loadMem_40698a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9489 = getelementptr inbounds %struct.GPR, %struct.GPR* %9488, i32 0, i32 33
  %9490 = getelementptr inbounds %struct.Reg, %struct.Reg* %9489, i32 0, i32 0
  %PC.i1751 = bitcast %union.anon* %9490 to i64*
  %9491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9492 = getelementptr inbounds %struct.GPR, %struct.GPR* %9491, i32 0, i32 1
  %9493 = getelementptr inbounds %struct.Reg, %struct.Reg* %9492, i32 0, i32 0
  %RAX.i1752 = bitcast %union.anon* %9493 to i64*
  %9494 = load i64, i64* %RAX.i1752
  %9495 = load i64, i64* %PC.i1751
  %9496 = add i64 %9495, 6
  store i64 %9496, i64* %PC.i1751
  %9497 = add i64 13112, %9494
  store i64 %9497, i64* %RAX.i1752, align 8
  %9498 = icmp ult i64 %9497, %9494
  %9499 = icmp ult i64 %9497, 13112
  %9500 = or i1 %9498, %9499
  %9501 = zext i1 %9500 to i8
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9501, i8* %9502, align 1
  %9503 = trunc i64 %9497 to i32
  %9504 = and i32 %9503, 255
  %9505 = call i32 @llvm.ctpop.i32(i32 %9504)
  %9506 = trunc i32 %9505 to i8
  %9507 = and i8 %9506, 1
  %9508 = xor i8 %9507, 1
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9508, i8* %9509, align 1
  %9510 = xor i64 13112, %9494
  %9511 = xor i64 %9510, %9497
  %9512 = lshr i64 %9511, 4
  %9513 = trunc i64 %9512 to i8
  %9514 = and i8 %9513, 1
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9514, i8* %9515, align 1
  %9516 = icmp eq i64 %9497, 0
  %9517 = zext i1 %9516 to i8
  %9518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9517, i8* %9518, align 1
  %9519 = lshr i64 %9497, 63
  %9520 = trunc i64 %9519 to i8
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9520, i8* %9521, align 1
  %9522 = lshr i64 %9494, 63
  %9523 = xor i64 %9519, %9522
  %9524 = add i64 %9523, %9519
  %9525 = icmp eq i64 %9524, 2
  %9526 = zext i1 %9525 to i8
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9526, i8* %9527, align 1
  store %struct.Memory* %loadMem_40698a, %struct.Memory** %MEMORY
  %loadMem_406990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9529 = getelementptr inbounds %struct.GPR, %struct.GPR* %9528, i32 0, i32 33
  %9530 = getelementptr inbounds %struct.Reg, %struct.Reg* %9529, i32 0, i32 0
  %PC.i1748 = bitcast %union.anon* %9530 to i64*
  %9531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9532 = getelementptr inbounds %struct.GPR, %struct.GPR* %9531, i32 0, i32 5
  %9533 = getelementptr inbounds %struct.Reg, %struct.Reg* %9532, i32 0, i32 0
  %RCX.i1749 = bitcast %union.anon* %9533 to i64*
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9535 = getelementptr inbounds %struct.GPR, %struct.GPR* %9534, i32 0, i32 15
  %9536 = getelementptr inbounds %struct.Reg, %struct.Reg* %9535, i32 0, i32 0
  %RBP.i1750 = bitcast %union.anon* %9536 to i64*
  %9537 = load i64, i64* %RBP.i1750
  %9538 = sub i64 %9537, 24
  %9539 = load i64, i64* %PC.i1748
  %9540 = add i64 %9539, 4
  store i64 %9540, i64* %PC.i1748
  %9541 = inttoptr i64 %9538 to i32*
  %9542 = load i32, i32* %9541
  %9543 = sext i32 %9542 to i64
  store i64 %9543, i64* %RCX.i1749, align 8
  store %struct.Memory* %loadMem_406990, %struct.Memory** %MEMORY
  %loadMem_406994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9545 = getelementptr inbounds %struct.GPR, %struct.GPR* %9544, i32 0, i32 33
  %9546 = getelementptr inbounds %struct.Reg, %struct.Reg* %9545, i32 0, i32 0
  %PC.i1746 = bitcast %union.anon* %9546 to i64*
  %9547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9548 = getelementptr inbounds %struct.GPR, %struct.GPR* %9547, i32 0, i32 5
  %9549 = getelementptr inbounds %struct.Reg, %struct.Reg* %9548, i32 0, i32 0
  %RCX.i1747 = bitcast %union.anon* %9549 to i64*
  %9550 = load i64, i64* %RCX.i1747
  %9551 = load i64, i64* %PC.i1746
  %9552 = add i64 %9551, 4
  store i64 %9552, i64* %PC.i1746
  %9553 = shl i64 %9550, 5
  %9554 = icmp slt i64 %9553, 0
  %9555 = shl i64 %9553, 1
  store i64 %9555, i64* %RCX.i1747, align 8
  %9556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9557 = zext i1 %9554 to i8
  store i8 %9557, i8* %9556, align 1
  %9558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9559 = trunc i64 %9555 to i32
  %9560 = and i32 %9559, 254
  %9561 = call i32 @llvm.ctpop.i32(i32 %9560)
  %9562 = trunc i32 %9561 to i8
  %9563 = and i8 %9562, 1
  %9564 = xor i8 %9563, 1
  store i8 %9564, i8* %9558, align 1
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9565, align 1
  %9566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9567 = icmp eq i64 %9555, 0
  %9568 = zext i1 %9567 to i8
  store i8 %9568, i8* %9566, align 1
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9570 = lshr i64 %9555, 63
  %9571 = trunc i64 %9570 to i8
  store i8 %9571, i8* %9569, align 1
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9572, align 1
  store %struct.Memory* %loadMem_406994, %struct.Memory** %MEMORY
  %loadMem_406998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9574 = getelementptr inbounds %struct.GPR, %struct.GPR* %9573, i32 0, i32 33
  %9575 = getelementptr inbounds %struct.Reg, %struct.Reg* %9574, i32 0, i32 0
  %PC.i1743 = bitcast %union.anon* %9575 to i64*
  %9576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9577 = getelementptr inbounds %struct.GPR, %struct.GPR* %9576, i32 0, i32 1
  %9578 = getelementptr inbounds %struct.Reg, %struct.Reg* %9577, i32 0, i32 0
  %RAX.i1744 = bitcast %union.anon* %9578 to i64*
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9580 = getelementptr inbounds %struct.GPR, %struct.GPR* %9579, i32 0, i32 5
  %9581 = getelementptr inbounds %struct.Reg, %struct.Reg* %9580, i32 0, i32 0
  %RCX.i1745 = bitcast %union.anon* %9581 to i64*
  %9582 = load i64, i64* %RAX.i1744
  %9583 = load i64, i64* %RCX.i1745
  %9584 = load i64, i64* %PC.i1743
  %9585 = add i64 %9584, 3
  store i64 %9585, i64* %PC.i1743
  %9586 = add i64 %9583, %9582
  store i64 %9586, i64* %RAX.i1744, align 8
  %9587 = icmp ult i64 %9586, %9582
  %9588 = icmp ult i64 %9586, %9583
  %9589 = or i1 %9587, %9588
  %9590 = zext i1 %9589 to i8
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9590, i8* %9591, align 1
  %9592 = trunc i64 %9586 to i32
  %9593 = and i32 %9592, 255
  %9594 = call i32 @llvm.ctpop.i32(i32 %9593)
  %9595 = trunc i32 %9594 to i8
  %9596 = and i8 %9595, 1
  %9597 = xor i8 %9596, 1
  %9598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9597, i8* %9598, align 1
  %9599 = xor i64 %9583, %9582
  %9600 = xor i64 %9599, %9586
  %9601 = lshr i64 %9600, 4
  %9602 = trunc i64 %9601 to i8
  %9603 = and i8 %9602, 1
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9603, i8* %9604, align 1
  %9605 = icmp eq i64 %9586, 0
  %9606 = zext i1 %9605 to i8
  %9607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9606, i8* %9607, align 1
  %9608 = lshr i64 %9586, 63
  %9609 = trunc i64 %9608 to i8
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9609, i8* %9610, align 1
  %9611 = lshr i64 %9582, 63
  %9612 = lshr i64 %9583, 63
  %9613 = xor i64 %9608, %9611
  %9614 = xor i64 %9608, %9612
  %9615 = add i64 %9613, %9614
  %9616 = icmp eq i64 %9615, 2
  %9617 = zext i1 %9616 to i8
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9617, i8* %9618, align 1
  store %struct.Memory* %loadMem_406998, %struct.Memory** %MEMORY
  %loadMem_40699b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9620 = getelementptr inbounds %struct.GPR, %struct.GPR* %9619, i32 0, i32 33
  %9621 = getelementptr inbounds %struct.Reg, %struct.Reg* %9620, i32 0, i32 0
  %PC.i1740 = bitcast %union.anon* %9621 to i64*
  %9622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9623 = getelementptr inbounds %struct.GPR, %struct.GPR* %9622, i32 0, i32 5
  %9624 = getelementptr inbounds %struct.Reg, %struct.Reg* %9623, i32 0, i32 0
  %RCX.i1741 = bitcast %union.anon* %9624 to i64*
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9626 = getelementptr inbounds %struct.GPR, %struct.GPR* %9625, i32 0, i32 15
  %9627 = getelementptr inbounds %struct.Reg, %struct.Reg* %9626, i32 0, i32 0
  %RBP.i1742 = bitcast %union.anon* %9627 to i64*
  %9628 = load i64, i64* %RBP.i1742
  %9629 = sub i64 %9628, 28
  %9630 = load i64, i64* %PC.i1740
  %9631 = add i64 %9630, 4
  store i64 %9631, i64* %PC.i1740
  %9632 = inttoptr i64 %9629 to i32*
  %9633 = load i32, i32* %9632
  %9634 = sext i32 %9633 to i64
  store i64 %9634, i64* %RCX.i1741, align 8
  store %struct.Memory* %loadMem_40699b, %struct.Memory** %MEMORY
  %loadMem_40699f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9636 = getelementptr inbounds %struct.GPR, %struct.GPR* %9635, i32 0, i32 33
  %9637 = getelementptr inbounds %struct.Reg, %struct.Reg* %9636, i32 0, i32 0
  %PC.i1736 = bitcast %union.anon* %9637 to i64*
  %9638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9639 = getelementptr inbounds %struct.GPR, %struct.GPR* %9638, i32 0, i32 1
  %9640 = getelementptr inbounds %struct.Reg, %struct.Reg* %9639, i32 0, i32 0
  %RAX.i1737 = bitcast %union.anon* %9640 to i64*
  %9641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9642 = getelementptr inbounds %struct.GPR, %struct.GPR* %9641, i32 0, i32 5
  %9643 = getelementptr inbounds %struct.Reg, %struct.Reg* %9642, i32 0, i32 0
  %RCX.i1738 = bitcast %union.anon* %9643 to i64*
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9645 = getelementptr inbounds %struct.GPR, %struct.GPR* %9644, i32 0, i32 9
  %9646 = getelementptr inbounds %struct.Reg, %struct.Reg* %9645, i32 0, i32 0
  %RSI.i1739 = bitcast %union.anon* %9646 to i64*
  %9647 = load i64, i64* %RAX.i1737
  %9648 = load i64, i64* %RCX.i1738
  %9649 = mul i64 %9648, 4
  %9650 = add i64 %9649, %9647
  %9651 = load i64, i64* %PC.i1736
  %9652 = add i64 %9651, 3
  store i64 %9652, i64* %PC.i1736
  %9653 = inttoptr i64 %9650 to i32*
  %9654 = load i32, i32* %9653
  %9655 = zext i32 %9654 to i64
  store i64 %9655, i64* %RSI.i1739, align 8
  store %struct.Memory* %loadMem_40699f, %struct.Memory** %MEMORY
  %loadMem1_4069a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9657 = getelementptr inbounds %struct.GPR, %struct.GPR* %9656, i32 0, i32 33
  %9658 = getelementptr inbounds %struct.Reg, %struct.Reg* %9657, i32 0, i32 0
  %PC.i1735 = bitcast %union.anon* %9658 to i64*
  %9659 = load i64, i64* %PC.i1735
  %9660 = add i64 %9659, 452526
  %9661 = load i64, i64* %PC.i1735
  %9662 = add i64 %9661, 5
  %9663 = load i64, i64* %PC.i1735
  %9664 = add i64 %9663, 5
  store i64 %9664, i64* %PC.i1735
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9666 = load i64, i64* %9665, align 8
  %9667 = add i64 %9666, -8
  %9668 = inttoptr i64 %9667 to i64*
  store i64 %9662, i64* %9668
  store i64 %9667, i64* %9665, align 8
  %9669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9660, i64* %9669, align 8
  store %struct.Memory* %loadMem1_4069a2, %struct.Memory** %MEMORY
  %loadMem2_4069a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4069a2 = load i64, i64* %3
  %call2_4069a2 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_4069a2, %struct.Memory* %loadMem2_4069a2)
  store %struct.Memory* %call2_4069a2, %struct.Memory** %MEMORY
  %loadMem_4069a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9671 = getelementptr inbounds %struct.GPR, %struct.GPR* %9670, i32 0, i32 33
  %9672 = getelementptr inbounds %struct.Reg, %struct.Reg* %9671, i32 0, i32 0
  %PC.i1732 = bitcast %union.anon* %9672 to i64*
  %9673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9674 = getelementptr inbounds %struct.GPR, %struct.GPR* %9673, i32 0, i32 5
  %9675 = getelementptr inbounds %struct.Reg, %struct.Reg* %9674, i32 0, i32 0
  %RCX.i1733 = bitcast %union.anon* %9675 to i64*
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9677 = getelementptr inbounds %struct.GPR, %struct.GPR* %9676, i32 0, i32 15
  %9678 = getelementptr inbounds %struct.Reg, %struct.Reg* %9677, i32 0, i32 0
  %RBP.i1734 = bitcast %union.anon* %9678 to i64*
  %9679 = load i64, i64* %RBP.i1734
  %9680 = sub i64 %9679, 136
  %9681 = load i64, i64* %PC.i1732
  %9682 = add i64 %9681, 7
  store i64 %9682, i64* %PC.i1732
  %9683 = inttoptr i64 %9680 to i64*
  %9684 = load i64, i64* %9683
  store i64 %9684, i64* %RCX.i1733, align 8
  store %struct.Memory* %loadMem_4069a7, %struct.Memory** %MEMORY
  %loadMem_4069ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %9685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9686 = getelementptr inbounds %struct.GPR, %struct.GPR* %9685, i32 0, i32 33
  %9687 = getelementptr inbounds %struct.Reg, %struct.Reg* %9686, i32 0, i32 0
  %PC.i1729 = bitcast %union.anon* %9687 to i64*
  %9688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9689 = getelementptr inbounds %struct.GPR, %struct.GPR* %9688, i32 0, i32 7
  %9690 = getelementptr inbounds %struct.Reg, %struct.Reg* %9689, i32 0, i32 0
  %RDX.i1730 = bitcast %union.anon* %9690 to i64*
  %9691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9692 = getelementptr inbounds %struct.GPR, %struct.GPR* %9691, i32 0, i32 15
  %9693 = getelementptr inbounds %struct.Reg, %struct.Reg* %9692, i32 0, i32 0
  %RBP.i1731 = bitcast %union.anon* %9693 to i64*
  %9694 = load i64, i64* %RBP.i1731
  %9695 = sub i64 %9694, 92
  %9696 = load i64, i64* %PC.i1729
  %9697 = add i64 %9696, 4
  store i64 %9697, i64* %PC.i1729
  %9698 = inttoptr i64 %9695 to i32*
  %9699 = load i32, i32* %9698
  %9700 = sext i32 %9699 to i64
  store i64 %9700, i64* %RDX.i1730, align 8
  store %struct.Memory* %loadMem_4069ae, %struct.Memory** %MEMORY
  %loadMem_4069b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9702 = getelementptr inbounds %struct.GPR, %struct.GPR* %9701, i32 0, i32 33
  %9703 = getelementptr inbounds %struct.Reg, %struct.Reg* %9702, i32 0, i32 0
  %PC.i1725 = bitcast %union.anon* %9703 to i64*
  %9704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9705 = getelementptr inbounds %struct.GPR, %struct.GPR* %9704, i32 0, i32 1
  %9706 = getelementptr inbounds %struct.Reg, %struct.Reg* %9705, i32 0, i32 0
  %EAX.i1726 = bitcast %union.anon* %9706 to i32*
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9708 = getelementptr inbounds %struct.GPR, %struct.GPR* %9707, i32 0, i32 5
  %9709 = getelementptr inbounds %struct.Reg, %struct.Reg* %9708, i32 0, i32 0
  %RCX.i1727 = bitcast %union.anon* %9709 to i64*
  %9710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9711 = getelementptr inbounds %struct.GPR, %struct.GPR* %9710, i32 0, i32 7
  %9712 = getelementptr inbounds %struct.Reg, %struct.Reg* %9711, i32 0, i32 0
  %RDX.i1728 = bitcast %union.anon* %9712 to i64*
  %9713 = load i64, i64* %RCX.i1727
  %9714 = load i64, i64* %RDX.i1728
  %9715 = mul i64 %9714, 4
  %9716 = add i64 %9715, %9713
  %9717 = load i32, i32* %EAX.i1726
  %9718 = zext i32 %9717 to i64
  %9719 = load i64, i64* %PC.i1725
  %9720 = add i64 %9719, 3
  store i64 %9720, i64* %PC.i1725
  %9721 = inttoptr i64 %9716 to i32*
  store i32 %9717, i32* %9721
  store %struct.Memory* %loadMem_4069b2, %struct.Memory** %MEMORY
  %loadMem_4069b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9723 = getelementptr inbounds %struct.GPR, %struct.GPR* %9722, i32 0, i32 33
  %9724 = getelementptr inbounds %struct.Reg, %struct.Reg* %9723, i32 0, i32 0
  %PC.i1722 = bitcast %union.anon* %9724 to i64*
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9726 = getelementptr inbounds %struct.GPR, %struct.GPR* %9725, i32 0, i32 1
  %9727 = getelementptr inbounds %struct.Reg, %struct.Reg* %9726, i32 0, i32 0
  %RAX.i1723 = bitcast %union.anon* %9727 to i64*
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9729 = getelementptr inbounds %struct.GPR, %struct.GPR* %9728, i32 0, i32 15
  %9730 = getelementptr inbounds %struct.Reg, %struct.Reg* %9729, i32 0, i32 0
  %RBP.i1724 = bitcast %union.anon* %9730 to i64*
  %9731 = load i64, i64* %RBP.i1724
  %9732 = sub i64 %9731, 96
  %9733 = load i64, i64* %PC.i1722
  %9734 = add i64 %9733, 3
  store i64 %9734, i64* %PC.i1722
  %9735 = inttoptr i64 %9732 to i32*
  %9736 = load i32, i32* %9735
  %9737 = zext i32 %9736 to i64
  store i64 %9737, i64* %RAX.i1723, align 8
  store %struct.Memory* %loadMem_4069b5, %struct.Memory** %MEMORY
  %loadMem_4069b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9739 = getelementptr inbounds %struct.GPR, %struct.GPR* %9738, i32 0, i32 33
  %9740 = getelementptr inbounds %struct.Reg, %struct.Reg* %9739, i32 0, i32 0
  %PC.i1719 = bitcast %union.anon* %9740 to i64*
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9742 = getelementptr inbounds %struct.GPR, %struct.GPR* %9741, i32 0, i32 5
  %9743 = getelementptr inbounds %struct.Reg, %struct.Reg* %9742, i32 0, i32 0
  %RCX.i1720 = bitcast %union.anon* %9743 to i64*
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9745 = getelementptr inbounds %struct.GPR, %struct.GPR* %9744, i32 0, i32 15
  %9746 = getelementptr inbounds %struct.Reg, %struct.Reg* %9745, i32 0, i32 0
  %RBP.i1721 = bitcast %union.anon* %9746 to i64*
  %9747 = load i64, i64* %RBP.i1721
  %9748 = sub i64 %9747, 144
  %9749 = load i64, i64* %PC.i1719
  %9750 = add i64 %9749, 7
  store i64 %9750, i64* %PC.i1719
  %9751 = inttoptr i64 %9748 to i64*
  %9752 = load i64, i64* %9751
  store i64 %9752, i64* %RCX.i1720, align 8
  store %struct.Memory* %loadMem_4069b8, %struct.Memory** %MEMORY
  %loadMem_4069bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9754 = getelementptr inbounds %struct.GPR, %struct.GPR* %9753, i32 0, i32 33
  %9755 = getelementptr inbounds %struct.Reg, %struct.Reg* %9754, i32 0, i32 0
  %PC.i1716 = bitcast %union.anon* %9755 to i64*
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9757 = getelementptr inbounds %struct.GPR, %struct.GPR* %9756, i32 0, i32 7
  %9758 = getelementptr inbounds %struct.Reg, %struct.Reg* %9757, i32 0, i32 0
  %RDX.i1717 = bitcast %union.anon* %9758 to i64*
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9760 = getelementptr inbounds %struct.GPR, %struct.GPR* %9759, i32 0, i32 15
  %9761 = getelementptr inbounds %struct.Reg, %struct.Reg* %9760, i32 0, i32 0
  %RBP.i1718 = bitcast %union.anon* %9761 to i64*
  %9762 = load i64, i64* %RBP.i1718
  %9763 = sub i64 %9762, 92
  %9764 = load i64, i64* %PC.i1716
  %9765 = add i64 %9764, 4
  store i64 %9765, i64* %PC.i1716
  %9766 = inttoptr i64 %9763 to i32*
  %9767 = load i32, i32* %9766
  %9768 = sext i32 %9767 to i64
  store i64 %9768, i64* %RDX.i1717, align 8
  store %struct.Memory* %loadMem_4069bf, %struct.Memory** %MEMORY
  %loadMem_4069c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9770 = getelementptr inbounds %struct.GPR, %struct.GPR* %9769, i32 0, i32 33
  %9771 = getelementptr inbounds %struct.Reg, %struct.Reg* %9770, i32 0, i32 0
  %PC.i1712 = bitcast %union.anon* %9771 to i64*
  %9772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9773 = getelementptr inbounds %struct.GPR, %struct.GPR* %9772, i32 0, i32 1
  %9774 = getelementptr inbounds %struct.Reg, %struct.Reg* %9773, i32 0, i32 0
  %EAX.i1713 = bitcast %union.anon* %9774 to i32*
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9776 = getelementptr inbounds %struct.GPR, %struct.GPR* %9775, i32 0, i32 5
  %9777 = getelementptr inbounds %struct.Reg, %struct.Reg* %9776, i32 0, i32 0
  %RCX.i1714 = bitcast %union.anon* %9777 to i64*
  %9778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9779 = getelementptr inbounds %struct.GPR, %struct.GPR* %9778, i32 0, i32 7
  %9780 = getelementptr inbounds %struct.Reg, %struct.Reg* %9779, i32 0, i32 0
  %RDX.i1715 = bitcast %union.anon* %9780 to i64*
  %9781 = load i64, i64* %RCX.i1714
  %9782 = load i64, i64* %RDX.i1715
  %9783 = mul i64 %9782, 4
  %9784 = add i64 %9783, %9781
  %9785 = load i32, i32* %EAX.i1713
  %9786 = zext i32 %9785 to i64
  %9787 = load i64, i64* %PC.i1712
  %9788 = add i64 %9787, 3
  store i64 %9788, i64* %PC.i1712
  %9789 = inttoptr i64 %9784 to i32*
  store i32 %9785, i32* %9789
  store %struct.Memory* %loadMem_4069c3, %struct.Memory** %MEMORY
  %loadMem_4069c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9791 = getelementptr inbounds %struct.GPR, %struct.GPR* %9790, i32 0, i32 33
  %9792 = getelementptr inbounds %struct.Reg, %struct.Reg* %9791, i32 0, i32 0
  %PC.i1709 = bitcast %union.anon* %9792 to i64*
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9794 = getelementptr inbounds %struct.GPR, %struct.GPR* %9793, i32 0, i32 1
  %9795 = getelementptr inbounds %struct.Reg, %struct.Reg* %9794, i32 0, i32 0
  %RAX.i1710 = bitcast %union.anon* %9795 to i64*
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9797 = getelementptr inbounds %struct.GPR, %struct.GPR* %9796, i32 0, i32 15
  %9798 = getelementptr inbounds %struct.Reg, %struct.Reg* %9797, i32 0, i32 0
  %RBP.i1711 = bitcast %union.anon* %9798 to i64*
  %9799 = load i64, i64* %RBP.i1711
  %9800 = sub i64 %9799, 92
  %9801 = load i64, i64* %PC.i1709
  %9802 = add i64 %9801, 3
  store i64 %9802, i64* %PC.i1709
  %9803 = inttoptr i64 %9800 to i32*
  %9804 = load i32, i32* %9803
  %9805 = zext i32 %9804 to i64
  store i64 %9805, i64* %RAX.i1710, align 8
  store %struct.Memory* %loadMem_4069c6, %struct.Memory** %MEMORY
  %loadMem_4069c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9807 = getelementptr inbounds %struct.GPR, %struct.GPR* %9806, i32 0, i32 33
  %9808 = getelementptr inbounds %struct.Reg, %struct.Reg* %9807, i32 0, i32 0
  %PC.i1707 = bitcast %union.anon* %9808 to i64*
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9810 = getelementptr inbounds %struct.GPR, %struct.GPR* %9809, i32 0, i32 1
  %9811 = getelementptr inbounds %struct.Reg, %struct.Reg* %9810, i32 0, i32 0
  %RAX.i1708 = bitcast %union.anon* %9811 to i64*
  %9812 = load i64, i64* %RAX.i1708
  %9813 = load i64, i64* %PC.i1707
  %9814 = add i64 %9813, 3
  store i64 %9814, i64* %PC.i1707
  %9815 = trunc i64 %9812 to i32
  %9816 = add i32 1, %9815
  %9817 = zext i32 %9816 to i64
  store i64 %9817, i64* %RAX.i1708, align 8
  %9818 = icmp ult i32 %9816, %9815
  %9819 = icmp ult i32 %9816, 1
  %9820 = or i1 %9818, %9819
  %9821 = zext i1 %9820 to i8
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9821, i8* %9822, align 1
  %9823 = and i32 %9816, 255
  %9824 = call i32 @llvm.ctpop.i32(i32 %9823)
  %9825 = trunc i32 %9824 to i8
  %9826 = and i8 %9825, 1
  %9827 = xor i8 %9826, 1
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9827, i8* %9828, align 1
  %9829 = xor i64 1, %9812
  %9830 = trunc i64 %9829 to i32
  %9831 = xor i32 %9830, %9816
  %9832 = lshr i32 %9831, 4
  %9833 = trunc i32 %9832 to i8
  %9834 = and i8 %9833, 1
  %9835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9834, i8* %9835, align 1
  %9836 = icmp eq i32 %9816, 0
  %9837 = zext i1 %9836 to i8
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9837, i8* %9838, align 1
  %9839 = lshr i32 %9816, 31
  %9840 = trunc i32 %9839 to i8
  %9841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9840, i8* %9841, align 1
  %9842 = lshr i32 %9815, 31
  %9843 = xor i32 %9839, %9842
  %9844 = add i32 %9843, %9839
  %9845 = icmp eq i32 %9844, 2
  %9846 = zext i1 %9845 to i8
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9846, i8* %9847, align 1
  store %struct.Memory* %loadMem_4069c9, %struct.Memory** %MEMORY
  %loadMem_4069cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9849 = getelementptr inbounds %struct.GPR, %struct.GPR* %9848, i32 0, i32 33
  %9850 = getelementptr inbounds %struct.Reg, %struct.Reg* %9849, i32 0, i32 0
  %PC.i1704 = bitcast %union.anon* %9850 to i64*
  %9851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9852 = getelementptr inbounds %struct.GPR, %struct.GPR* %9851, i32 0, i32 1
  %9853 = getelementptr inbounds %struct.Reg, %struct.Reg* %9852, i32 0, i32 0
  %EAX.i1705 = bitcast %union.anon* %9853 to i32*
  %9854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9855 = getelementptr inbounds %struct.GPR, %struct.GPR* %9854, i32 0, i32 15
  %9856 = getelementptr inbounds %struct.Reg, %struct.Reg* %9855, i32 0, i32 0
  %RBP.i1706 = bitcast %union.anon* %9856 to i64*
  %9857 = load i64, i64* %RBP.i1706
  %9858 = sub i64 %9857, 92
  %9859 = load i32, i32* %EAX.i1705
  %9860 = zext i32 %9859 to i64
  %9861 = load i64, i64* %PC.i1704
  %9862 = add i64 %9861, 3
  store i64 %9862, i64* %PC.i1704
  %9863 = inttoptr i64 %9858 to i32*
  store i32 %9859, i32* %9863
  store %struct.Memory* %loadMem_4069cc, %struct.Memory** %MEMORY
  %loadMem_4069cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9865 = getelementptr inbounds %struct.GPR, %struct.GPR* %9864, i32 0, i32 33
  %9866 = getelementptr inbounds %struct.Reg, %struct.Reg* %9865, i32 0, i32 0
  %PC.i1702 = bitcast %union.anon* %9866 to i64*
  %9867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9868 = getelementptr inbounds %struct.GPR, %struct.GPR* %9867, i32 0, i32 15
  %9869 = getelementptr inbounds %struct.Reg, %struct.Reg* %9868, i32 0, i32 0
  %RBP.i1703 = bitcast %union.anon* %9869 to i64*
  %9870 = load i64, i64* %RBP.i1703
  %9871 = sub i64 %9870, 96
  %9872 = load i64, i64* %PC.i1702
  %9873 = add i64 %9872, 7
  store i64 %9873, i64* %PC.i1702
  %9874 = inttoptr i64 %9871 to i32*
  store i32 -1, i32* %9874
  store %struct.Memory* %loadMem_4069cf, %struct.Memory** %MEMORY
  %loadMem_4069d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9876 = getelementptr inbounds %struct.GPR, %struct.GPR* %9875, i32 0, i32 33
  %9877 = getelementptr inbounds %struct.Reg, %struct.Reg* %9876, i32 0, i32 0
  %PC.i1699 = bitcast %union.anon* %9877 to i64*
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9879 = getelementptr inbounds %struct.GPR, %struct.GPR* %9878, i32 0, i32 11
  %9880 = getelementptr inbounds %struct.Reg, %struct.Reg* %9879, i32 0, i32 0
  %RDI.i1700 = bitcast %union.anon* %9880 to i64*
  %9881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9882 = getelementptr inbounds %struct.GPR, %struct.GPR* %9881, i32 0, i32 15
  %9883 = getelementptr inbounds %struct.Reg, %struct.Reg* %9882, i32 0, i32 0
  %RBP.i1701 = bitcast %union.anon* %9883 to i64*
  %9884 = load i64, i64* %RBP.i1701
  %9885 = sub i64 %9884, 88
  %9886 = load i64, i64* %PC.i1699
  %9887 = add i64 %9886, 3
  store i64 %9887, i64* %PC.i1699
  %9888 = inttoptr i64 %9885 to i32*
  %9889 = load i32, i32* %9888
  %9890 = zext i32 %9889 to i64
  store i64 %9890, i64* %RDI.i1700, align 8
  store %struct.Memory* %loadMem_4069d6, %struct.Memory** %MEMORY
  %loadMem_4069d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9892 = getelementptr inbounds %struct.GPR, %struct.GPR* %9891, i32 0, i32 33
  %9893 = getelementptr inbounds %struct.Reg, %struct.Reg* %9892, i32 0, i32 0
  %PC.i1697 = bitcast %union.anon* %9893 to i64*
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9895 = getelementptr inbounds %struct.GPR, %struct.GPR* %9894, i32 0, i32 5
  %9896 = getelementptr inbounds %struct.Reg, %struct.Reg* %9895, i32 0, i32 0
  %RCX.i1698 = bitcast %union.anon* %9896 to i64*
  %9897 = load i64, i64* %PC.i1697
  %9898 = add i64 %9897, 8
  store i64 %9898, i64* %PC.i1697
  %9899 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9899, i64* %RCX.i1698, align 8
  store %struct.Memory* %loadMem_4069d9, %struct.Memory** %MEMORY
  %loadMem_4069e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9901 = getelementptr inbounds %struct.GPR, %struct.GPR* %9900, i32 0, i32 33
  %9902 = getelementptr inbounds %struct.Reg, %struct.Reg* %9901, i32 0, i32 0
  %PC.i1695 = bitcast %union.anon* %9902 to i64*
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9904 = getelementptr inbounds %struct.GPR, %struct.GPR* %9903, i32 0, i32 5
  %9905 = getelementptr inbounds %struct.Reg, %struct.Reg* %9904, i32 0, i32 0
  %RCX.i1696 = bitcast %union.anon* %9905 to i64*
  %9906 = load i64, i64* %RCX.i1696
  %9907 = load i64, i64* %PC.i1695
  %9908 = add i64 %9907, 7
  store i64 %9908, i64* %PC.i1695
  %9909 = add i64 13112, %9906
  store i64 %9909, i64* %RCX.i1696, align 8
  %9910 = icmp ult i64 %9909, %9906
  %9911 = icmp ult i64 %9909, 13112
  %9912 = or i1 %9910, %9911
  %9913 = zext i1 %9912 to i8
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9913, i8* %9914, align 1
  %9915 = trunc i64 %9909 to i32
  %9916 = and i32 %9915, 255
  %9917 = call i32 @llvm.ctpop.i32(i32 %9916)
  %9918 = trunc i32 %9917 to i8
  %9919 = and i8 %9918, 1
  %9920 = xor i8 %9919, 1
  %9921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9920, i8* %9921, align 1
  %9922 = xor i64 13112, %9906
  %9923 = xor i64 %9922, %9909
  %9924 = lshr i64 %9923, 4
  %9925 = trunc i64 %9924 to i8
  %9926 = and i8 %9925, 1
  %9927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9926, i8* %9927, align 1
  %9928 = icmp eq i64 %9909, 0
  %9929 = zext i1 %9928 to i8
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9929, i8* %9930, align 1
  %9931 = lshr i64 %9909, 63
  %9932 = trunc i64 %9931 to i8
  %9933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9932, i8* %9933, align 1
  %9934 = lshr i64 %9906, 63
  %9935 = xor i64 %9931, %9934
  %9936 = add i64 %9935, %9931
  %9937 = icmp eq i64 %9936, 2
  %9938 = zext i1 %9937 to i8
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9938, i8* %9939, align 1
  store %struct.Memory* %loadMem_4069e1, %struct.Memory** %MEMORY
  %loadMem_4069e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9941 = getelementptr inbounds %struct.GPR, %struct.GPR* %9940, i32 0, i32 33
  %9942 = getelementptr inbounds %struct.Reg, %struct.Reg* %9941, i32 0, i32 0
  %PC.i1692 = bitcast %union.anon* %9942 to i64*
  %9943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9944 = getelementptr inbounds %struct.GPR, %struct.GPR* %9943, i32 0, i32 7
  %9945 = getelementptr inbounds %struct.Reg, %struct.Reg* %9944, i32 0, i32 0
  %RDX.i1693 = bitcast %union.anon* %9945 to i64*
  %9946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9947 = getelementptr inbounds %struct.GPR, %struct.GPR* %9946, i32 0, i32 15
  %9948 = getelementptr inbounds %struct.Reg, %struct.Reg* %9947, i32 0, i32 0
  %RBP.i1694 = bitcast %union.anon* %9948 to i64*
  %9949 = load i64, i64* %RBP.i1694
  %9950 = sub i64 %9949, 24
  %9951 = load i64, i64* %PC.i1692
  %9952 = add i64 %9951, 4
  store i64 %9952, i64* %PC.i1692
  %9953 = inttoptr i64 %9950 to i32*
  %9954 = load i32, i32* %9953
  %9955 = sext i32 %9954 to i64
  store i64 %9955, i64* %RDX.i1693, align 8
  store %struct.Memory* %loadMem_4069e8, %struct.Memory** %MEMORY
  %loadMem_4069ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9957 = getelementptr inbounds %struct.GPR, %struct.GPR* %9956, i32 0, i32 33
  %9958 = getelementptr inbounds %struct.Reg, %struct.Reg* %9957, i32 0, i32 0
  %PC.i1690 = bitcast %union.anon* %9958 to i64*
  %9959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9960 = getelementptr inbounds %struct.GPR, %struct.GPR* %9959, i32 0, i32 7
  %9961 = getelementptr inbounds %struct.Reg, %struct.Reg* %9960, i32 0, i32 0
  %RDX.i1691 = bitcast %union.anon* %9961 to i64*
  %9962 = load i64, i64* %RDX.i1691
  %9963 = load i64, i64* %PC.i1690
  %9964 = add i64 %9963, 4
  store i64 %9964, i64* %PC.i1690
  %9965 = shl i64 %9962, 5
  %9966 = icmp slt i64 %9965, 0
  %9967 = shl i64 %9965, 1
  store i64 %9967, i64* %RDX.i1691, align 8
  %9968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9969 = zext i1 %9966 to i8
  store i8 %9969, i8* %9968, align 1
  %9970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9971 = trunc i64 %9967 to i32
  %9972 = and i32 %9971, 254
  %9973 = call i32 @llvm.ctpop.i32(i32 %9972)
  %9974 = trunc i32 %9973 to i8
  %9975 = and i8 %9974, 1
  %9976 = xor i8 %9975, 1
  store i8 %9976, i8* %9970, align 1
  %9977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9977, align 1
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9979 = icmp eq i64 %9967, 0
  %9980 = zext i1 %9979 to i8
  store i8 %9980, i8* %9978, align 1
  %9981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9982 = lshr i64 %9967, 63
  %9983 = trunc i64 %9982 to i8
  store i8 %9983, i8* %9981, align 1
  %9984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9984, align 1
  store %struct.Memory* %loadMem_4069ec, %struct.Memory** %MEMORY
  %loadMem_4069f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9986 = getelementptr inbounds %struct.GPR, %struct.GPR* %9985, i32 0, i32 33
  %9987 = getelementptr inbounds %struct.Reg, %struct.Reg* %9986, i32 0, i32 0
  %PC.i1687 = bitcast %union.anon* %9987 to i64*
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9989 = getelementptr inbounds %struct.GPR, %struct.GPR* %9988, i32 0, i32 5
  %9990 = getelementptr inbounds %struct.Reg, %struct.Reg* %9989, i32 0, i32 0
  %RCX.i1688 = bitcast %union.anon* %9990 to i64*
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9992 = getelementptr inbounds %struct.GPR, %struct.GPR* %9991, i32 0, i32 7
  %9993 = getelementptr inbounds %struct.Reg, %struct.Reg* %9992, i32 0, i32 0
  %RDX.i1689 = bitcast %union.anon* %9993 to i64*
  %9994 = load i64, i64* %RCX.i1688
  %9995 = load i64, i64* %RDX.i1689
  %9996 = load i64, i64* %PC.i1687
  %9997 = add i64 %9996, 3
  store i64 %9997, i64* %PC.i1687
  %9998 = add i64 %9995, %9994
  store i64 %9998, i64* %RCX.i1688, align 8
  %9999 = icmp ult i64 %9998, %9994
  %10000 = icmp ult i64 %9998, %9995
  %10001 = or i1 %9999, %10000
  %10002 = zext i1 %10001 to i8
  %10003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10002, i8* %10003, align 1
  %10004 = trunc i64 %9998 to i32
  %10005 = and i32 %10004, 255
  %10006 = call i32 @llvm.ctpop.i32(i32 %10005)
  %10007 = trunc i32 %10006 to i8
  %10008 = and i8 %10007, 1
  %10009 = xor i8 %10008, 1
  %10010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10009, i8* %10010, align 1
  %10011 = xor i64 %9995, %9994
  %10012 = xor i64 %10011, %9998
  %10013 = lshr i64 %10012, 4
  %10014 = trunc i64 %10013 to i8
  %10015 = and i8 %10014, 1
  %10016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10015, i8* %10016, align 1
  %10017 = icmp eq i64 %9998, 0
  %10018 = zext i1 %10017 to i8
  %10019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10018, i8* %10019, align 1
  %10020 = lshr i64 %9998, 63
  %10021 = trunc i64 %10020 to i8
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10021, i8* %10022, align 1
  %10023 = lshr i64 %9994, 63
  %10024 = lshr i64 %9995, 63
  %10025 = xor i64 %10020, %10023
  %10026 = xor i64 %10020, %10024
  %10027 = add i64 %10025, %10026
  %10028 = icmp eq i64 %10027, 2
  %10029 = zext i1 %10028 to i8
  %10030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10029, i8* %10030, align 1
  store %struct.Memory* %loadMem_4069f0, %struct.Memory** %MEMORY
  %loadMem_4069f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 33
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %PC.i1684 = bitcast %union.anon* %10033 to i64*
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10035 = getelementptr inbounds %struct.GPR, %struct.GPR* %10034, i32 0, i32 7
  %10036 = getelementptr inbounds %struct.Reg, %struct.Reg* %10035, i32 0, i32 0
  %RDX.i1685 = bitcast %union.anon* %10036 to i64*
  %10037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10038 = getelementptr inbounds %struct.GPR, %struct.GPR* %10037, i32 0, i32 15
  %10039 = getelementptr inbounds %struct.Reg, %struct.Reg* %10038, i32 0, i32 0
  %RBP.i1686 = bitcast %union.anon* %10039 to i64*
  %10040 = load i64, i64* %RBP.i1686
  %10041 = sub i64 %10040, 28
  %10042 = load i64, i64* %PC.i1684
  %10043 = add i64 %10042, 4
  store i64 %10043, i64* %PC.i1684
  %10044 = inttoptr i64 %10041 to i32*
  %10045 = load i32, i32* %10044
  %10046 = sext i32 %10045 to i64
  store i64 %10046, i64* %RDX.i1685, align 8
  store %struct.Memory* %loadMem_4069f3, %struct.Memory** %MEMORY
  %loadMem_4069f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10048 = getelementptr inbounds %struct.GPR, %struct.GPR* %10047, i32 0, i32 33
  %10049 = getelementptr inbounds %struct.Reg, %struct.Reg* %10048, i32 0, i32 0
  %PC.i1680 = bitcast %union.anon* %10049 to i64*
  %10050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10051 = getelementptr inbounds %struct.GPR, %struct.GPR* %10050, i32 0, i32 5
  %10052 = getelementptr inbounds %struct.Reg, %struct.Reg* %10051, i32 0, i32 0
  %RCX.i1681 = bitcast %union.anon* %10052 to i64*
  %10053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10054 = getelementptr inbounds %struct.GPR, %struct.GPR* %10053, i32 0, i32 7
  %10055 = getelementptr inbounds %struct.Reg, %struct.Reg* %10054, i32 0, i32 0
  %RDX.i1682 = bitcast %union.anon* %10055 to i64*
  %10056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10057 = getelementptr inbounds %struct.GPR, %struct.GPR* %10056, i32 0, i32 9
  %10058 = getelementptr inbounds %struct.Reg, %struct.Reg* %10057, i32 0, i32 0
  %RSI.i1683 = bitcast %union.anon* %10058 to i64*
  %10059 = load i64, i64* %RCX.i1681
  %10060 = load i64, i64* %RDX.i1682
  %10061 = mul i64 %10060, 4
  %10062 = add i64 %10061, %10059
  %10063 = load i64, i64* %PC.i1680
  %10064 = add i64 %10063, 3
  store i64 %10064, i64* %PC.i1680
  %10065 = inttoptr i64 %10062 to i32*
  %10066 = load i32, i32* %10065
  %10067 = zext i32 %10066 to i64
  store i64 %10067, i64* %RSI.i1683, align 8
  store %struct.Memory* %loadMem_4069f7, %struct.Memory** %MEMORY
  %loadMem1_4069fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10069 = getelementptr inbounds %struct.GPR, %struct.GPR* %10068, i32 0, i32 33
  %10070 = getelementptr inbounds %struct.Reg, %struct.Reg* %10069, i32 0, i32 0
  %PC.i1679 = bitcast %union.anon* %10070 to i64*
  %10071 = load i64, i64* %PC.i1679
  %10072 = add i64 %10071, 452438
  %10073 = load i64, i64* %PC.i1679
  %10074 = add i64 %10073, 5
  %10075 = load i64, i64* %PC.i1679
  %10076 = add i64 %10075, 5
  store i64 %10076, i64* %PC.i1679
  %10077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10078 = load i64, i64* %10077, align 8
  %10079 = add i64 %10078, -8
  %10080 = inttoptr i64 %10079 to i64*
  store i64 %10074, i64* %10080
  store i64 %10079, i64* %10077, align 8
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10072, i64* %10081, align 8
  store %struct.Memory* %loadMem1_4069fa, %struct.Memory** %MEMORY
  %loadMem2_4069fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4069fa = load i64, i64* %3
  %call2_4069fa = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_4069fa, %struct.Memory* %loadMem2_4069fa)
  store %struct.Memory* %call2_4069fa, %struct.Memory** %MEMORY
  %loadMem_4069ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10083 = getelementptr inbounds %struct.GPR, %struct.GPR* %10082, i32 0, i32 33
  %10084 = getelementptr inbounds %struct.Reg, %struct.Reg* %10083, i32 0, i32 0
  %PC.i1676 = bitcast %union.anon* %10084 to i64*
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10086 = getelementptr inbounds %struct.GPR, %struct.GPR* %10085, i32 0, i32 1
  %10087 = getelementptr inbounds %struct.Reg, %struct.Reg* %10086, i32 0, i32 0
  %EAX.i1677 = bitcast %union.anon* %10087 to i32*
  %10088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10089 = getelementptr inbounds %struct.GPR, %struct.GPR* %10088, i32 0, i32 15
  %10090 = getelementptr inbounds %struct.Reg, %struct.Reg* %10089, i32 0, i32 0
  %RBP.i1678 = bitcast %union.anon* %10090 to i64*
  %10091 = load i64, i64* %RBP.i1678
  %10092 = sub i64 %10091, 88
  %10093 = load i32, i32* %EAX.i1677
  %10094 = zext i32 %10093 to i64
  %10095 = load i64, i64* %PC.i1676
  %10096 = add i64 %10095, 3
  store i64 %10096, i64* %PC.i1676
  %10097 = inttoptr i64 %10092 to i32*
  store i32 %10093, i32* %10097
  store %struct.Memory* %loadMem_4069ff, %struct.Memory** %MEMORY
  %loadMem_406a02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10099 = getelementptr inbounds %struct.GPR, %struct.GPR* %10098, i32 0, i32 33
  %10100 = getelementptr inbounds %struct.Reg, %struct.Reg* %10099, i32 0, i32 0
  %PC.i1674 = bitcast %union.anon* %10100 to i64*
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10102 = getelementptr inbounds %struct.GPR, %struct.GPR* %10101, i32 0, i32 15
  %10103 = getelementptr inbounds %struct.Reg, %struct.Reg* %10102, i32 0, i32 0
  %RBP.i1675 = bitcast %union.anon* %10103 to i64*
  %10104 = load i64, i64* %RBP.i1675
  %10105 = sub i64 %10104, 156
  %10106 = load i64, i64* %PC.i1674
  %10107 = add i64 %10106, 7
  store i64 %10107, i64* %PC.i1674
  %10108 = inttoptr i64 %10105 to i32*
  %10109 = load i32, i32* %10108
  %10110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10110, align 1
  %10111 = and i32 %10109, 255
  %10112 = call i32 @llvm.ctpop.i32(i32 %10111)
  %10113 = trunc i32 %10112 to i8
  %10114 = and i8 %10113, 1
  %10115 = xor i8 %10114, 1
  %10116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10115, i8* %10116, align 1
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10117, align 1
  %10118 = icmp eq i32 %10109, 0
  %10119 = zext i1 %10118 to i8
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10119, i8* %10120, align 1
  %10121 = lshr i32 %10109, 31
  %10122 = trunc i32 %10121 to i8
  %10123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10122, i8* %10123, align 1
  %10124 = lshr i32 %10109, 31
  %10125 = xor i32 %10121, %10124
  %10126 = add i32 %10125, %10124
  %10127 = icmp eq i32 %10126, 2
  %10128 = zext i1 %10127 to i8
  %10129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10128, i8* %10129, align 1
  store %struct.Memory* %loadMem_406a02, %struct.Memory** %MEMORY
  %loadMem_406a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10131 = getelementptr inbounds %struct.GPR, %struct.GPR* %10130, i32 0, i32 33
  %10132 = getelementptr inbounds %struct.Reg, %struct.Reg* %10131, i32 0, i32 0
  %PC.i1673 = bitcast %union.anon* %10132 to i64*
  %10133 = load i64, i64* %PC.i1673
  %10134 = add i64 %10133, 17
  %10135 = load i64, i64* %PC.i1673
  %10136 = add i64 %10135, 6
  %10137 = load i64, i64* %PC.i1673
  %10138 = add i64 %10137, 6
  store i64 %10138, i64* %PC.i1673
  %10139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10140 = load i8, i8* %10139, align 1
  store i8 %10140, i8* %BRANCH_TAKEN, align 1
  %10141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10142 = icmp ne i8 %10140, 0
  %10143 = select i1 %10142, i64 %10134, i64 %10136
  store i64 %10143, i64* %10141, align 8
  store %struct.Memory* %loadMem_406a09, %struct.Memory** %MEMORY
  %loadBr_406a09 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406a09 = icmp eq i8 %loadBr_406a09, 1
  br i1 %cmpBr_406a09, label %block_.L_406a1a, label %block_406a0f

block_406a0f:                                     ; preds = %block_.L_40697f
  %loadMem_406a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10145 = getelementptr inbounds %struct.GPR, %struct.GPR* %10144, i32 0, i32 33
  %10146 = getelementptr inbounds %struct.Reg, %struct.Reg* %10145, i32 0, i32 0
  %PC.i1670 = bitcast %union.anon* %10146 to i64*
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10148 = getelementptr inbounds %struct.GPR, %struct.GPR* %10147, i32 0, i32 1
  %10149 = getelementptr inbounds %struct.Reg, %struct.Reg* %10148, i32 0, i32 0
  %RAX.i1671 = bitcast %union.anon* %10149 to i64*
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 15
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %RBP.i1672 = bitcast %union.anon* %10152 to i64*
  %10153 = load i64, i64* %RBP.i1672
  %10154 = sub i64 %10153, 88
  %10155 = load i64, i64* %PC.i1670
  %10156 = add i64 %10155, 3
  store i64 %10156, i64* %PC.i1670
  %10157 = inttoptr i64 %10154 to i32*
  %10158 = load i32, i32* %10157
  %10159 = zext i32 %10158 to i64
  store i64 %10159, i64* %RAX.i1671, align 8
  store %struct.Memory* %loadMem_406a0f, %struct.Memory** %MEMORY
  %loadMem_406a12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10161 = getelementptr inbounds %struct.GPR, %struct.GPR* %10160, i32 0, i32 33
  %10162 = getelementptr inbounds %struct.Reg, %struct.Reg* %10161, i32 0, i32 0
  %PC.i1667 = bitcast %union.anon* %10162 to i64*
  %10163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10164 = getelementptr inbounds %struct.GPR, %struct.GPR* %10163, i32 0, i32 1
  %10165 = getelementptr inbounds %struct.Reg, %struct.Reg* %10164, i32 0, i32 0
  %EAX.i1668 = bitcast %union.anon* %10165 to i32*
  %10166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10167 = getelementptr inbounds %struct.GPR, %struct.GPR* %10166, i32 0, i32 15
  %10168 = getelementptr inbounds %struct.Reg, %struct.Reg* %10167, i32 0, i32 0
  %RBP.i1669 = bitcast %union.anon* %10168 to i64*
  %10169 = load i64, i64* %RBP.i1669
  %10170 = sub i64 %10169, 40
  %10171 = load i32, i32* %EAX.i1668
  %10172 = zext i32 %10171 to i64
  %10173 = load i64, i64* %PC.i1667
  %10174 = add i64 %10173, 3
  store i64 %10174, i64* %PC.i1667
  %10175 = inttoptr i64 %10170 to i32*
  store i32 %10171, i32* %10175
  store %struct.Memory* %loadMem_406a12, %struct.Memory** %MEMORY
  %loadMem_406a15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10177 = getelementptr inbounds %struct.GPR, %struct.GPR* %10176, i32 0, i32 33
  %10178 = getelementptr inbounds %struct.Reg, %struct.Reg* %10177, i32 0, i32 0
  %PC.i1666 = bitcast %union.anon* %10178 to i64*
  %10179 = load i64, i64* %PC.i1666
  %10180 = add i64 %10179, 376
  %10181 = load i64, i64* %PC.i1666
  %10182 = add i64 %10181, 5
  store i64 %10182, i64* %PC.i1666
  %10183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10180, i64* %10183, align 8
  store %struct.Memory* %loadMem_406a15, %struct.Memory** %MEMORY
  br label %block_.L_406b8d

block_.L_406a1a:                                  ; preds = %block_.L_40697f
  %loadMem_406a1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10185 = getelementptr inbounds %struct.GPR, %struct.GPR* %10184, i32 0, i32 33
  %10186 = getelementptr inbounds %struct.Reg, %struct.Reg* %10185, i32 0, i32 0
  %PC.i1664 = bitcast %union.anon* %10186 to i64*
  %10187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10188 = getelementptr inbounds %struct.GPR, %struct.GPR* %10187, i32 0, i32 15
  %10189 = getelementptr inbounds %struct.Reg, %struct.Reg* %10188, i32 0, i32 0
  %RBP.i1665 = bitcast %union.anon* %10189 to i64*
  %10190 = load i64, i64* %RBP.i1665
  %10191 = sub i64 %10190, 104
  %10192 = load i64, i64* %PC.i1664
  %10193 = add i64 %10192, 4
  store i64 %10193, i64* %PC.i1664
  %10194 = inttoptr i64 %10191 to i32*
  %10195 = load i32, i32* %10194
  %10196 = sub i32 %10195, 4
  %10197 = icmp ult i32 %10195, 4
  %10198 = zext i1 %10197 to i8
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10198, i8* %10199, align 1
  %10200 = and i32 %10196, 255
  %10201 = call i32 @llvm.ctpop.i32(i32 %10200)
  %10202 = trunc i32 %10201 to i8
  %10203 = and i8 %10202, 1
  %10204 = xor i8 %10203, 1
  %10205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10204, i8* %10205, align 1
  %10206 = xor i32 %10195, 4
  %10207 = xor i32 %10206, %10196
  %10208 = lshr i32 %10207, 4
  %10209 = trunc i32 %10208 to i8
  %10210 = and i8 %10209, 1
  %10211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10210, i8* %10211, align 1
  %10212 = icmp eq i32 %10196, 0
  %10213 = zext i1 %10212 to i8
  %10214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10213, i8* %10214, align 1
  %10215 = lshr i32 %10196, 31
  %10216 = trunc i32 %10215 to i8
  %10217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10216, i8* %10217, align 1
  %10218 = lshr i32 %10195, 31
  %10219 = xor i32 %10215, %10218
  %10220 = add i32 %10219, %10218
  %10221 = icmp eq i32 %10220, 2
  %10222 = zext i1 %10221 to i8
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10222, i8* %10223, align 1
  store %struct.Memory* %loadMem_406a1a, %struct.Memory** %MEMORY
  %loadMem_406a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10225 = getelementptr inbounds %struct.GPR, %struct.GPR* %10224, i32 0, i32 33
  %10226 = getelementptr inbounds %struct.Reg, %struct.Reg* %10225, i32 0, i32 0
  %PC.i1663 = bitcast %union.anon* %10226 to i64*
  %10227 = load i64, i64* %PC.i1663
  %10228 = add i64 %10227, 206
  %10229 = load i64, i64* %PC.i1663
  %10230 = add i64 %10229, 6
  %10231 = load i64, i64* %PC.i1663
  %10232 = add i64 %10231, 6
  store i64 %10232, i64* %PC.i1663
  %10233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10234 = load i8, i8* %10233, align 1
  %10235 = icmp ne i8 %10234, 0
  %10236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10237 = load i8, i8* %10236, align 1
  %10238 = icmp ne i8 %10237, 0
  %10239 = xor i1 %10235, %10238
  %10240 = xor i1 %10239, true
  %10241 = zext i1 %10240 to i8
  store i8 %10241, i8* %BRANCH_TAKEN, align 1
  %10242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10243 = select i1 %10239, i64 %10230, i64 %10228
  store i64 %10243, i64* %10242, align 8
  store %struct.Memory* %loadMem_406a1e, %struct.Memory** %MEMORY
  %loadBr_406a1e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406a1e = icmp eq i8 %loadBr_406a1e, 1
  br i1 %cmpBr_406a1e, label %block_.L_406aec, label %block_406a24

block_406a24:                                     ; preds = %block_.L_406a1a
  %loadMem_406a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10245 = getelementptr inbounds %struct.GPR, %struct.GPR* %10244, i32 0, i32 33
  %10246 = getelementptr inbounds %struct.Reg, %struct.Reg* %10245, i32 0, i32 0
  %PC.i1661 = bitcast %union.anon* %10246 to i64*
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10248 = getelementptr inbounds %struct.GPR, %struct.GPR* %10247, i32 0, i32 15
  %10249 = getelementptr inbounds %struct.Reg, %struct.Reg* %10248, i32 0, i32 0
  %RBP.i1662 = bitcast %union.anon* %10249 to i64*
  %10250 = load i64, i64* %RBP.i1662
  %10251 = sub i64 %10250, 20
  %10252 = load i64, i64* %PC.i1661
  %10253 = add i64 %10252, 4
  store i64 %10253, i64* %PC.i1661
  %10254 = inttoptr i64 %10251 to i32*
  %10255 = load i32, i32* %10254
  %10256 = sub i32 %10255, 1
  %10257 = icmp ult i32 %10255, 1
  %10258 = zext i1 %10257 to i8
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10258, i8* %10259, align 1
  %10260 = and i32 %10256, 255
  %10261 = call i32 @llvm.ctpop.i32(i32 %10260)
  %10262 = trunc i32 %10261 to i8
  %10263 = and i8 %10262, 1
  %10264 = xor i8 %10263, 1
  %10265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10264, i8* %10265, align 1
  %10266 = xor i32 %10255, 1
  %10267 = xor i32 %10266, %10256
  %10268 = lshr i32 %10267, 4
  %10269 = trunc i32 %10268 to i8
  %10270 = and i8 %10269, 1
  %10271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10270, i8* %10271, align 1
  %10272 = icmp eq i32 %10256, 0
  %10273 = zext i1 %10272 to i8
  %10274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10273, i8* %10274, align 1
  %10275 = lshr i32 %10256, 31
  %10276 = trunc i32 %10275 to i8
  %10277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10276, i8* %10277, align 1
  %10278 = lshr i32 %10255, 31
  %10279 = xor i32 %10275, %10278
  %10280 = add i32 %10279, %10278
  %10281 = icmp eq i32 %10280, 2
  %10282 = zext i1 %10281 to i8
  %10283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10282, i8* %10283, align 1
  store %struct.Memory* %loadMem_406a24, %struct.Memory** %MEMORY
  %loadMem_406a28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10285 = getelementptr inbounds %struct.GPR, %struct.GPR* %10284, i32 0, i32 33
  %10286 = getelementptr inbounds %struct.Reg, %struct.Reg* %10285, i32 0, i32 0
  %PC.i1660 = bitcast %union.anon* %10286 to i64*
  %10287 = load i64, i64* %PC.i1660
  %10288 = add i64 %10287, 101
  %10289 = load i64, i64* %PC.i1660
  %10290 = add i64 %10289, 6
  %10291 = load i64, i64* %PC.i1660
  %10292 = add i64 %10291, 6
  store i64 %10292, i64* %PC.i1660
  %10293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10294 = load i8, i8* %10293, align 1
  %10295 = icmp eq i8 %10294, 0
  %10296 = zext i1 %10295 to i8
  store i8 %10296, i8* %BRANCH_TAKEN, align 1
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10298 = select i1 %10295, i64 %10288, i64 %10290
  store i64 %10298, i64* %10297, align 8
  store %struct.Memory* %loadMem_406a28, %struct.Memory** %MEMORY
  %loadBr_406a28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406a28 = icmp eq i8 %loadBr_406a28, 1
  br i1 %cmpBr_406a28, label %block_.L_406a8d, label %block_406a2e

block_406a2e:                                     ; preds = %block_406a24
  %loadMem_406a2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10300 = getelementptr inbounds %struct.GPR, %struct.GPR* %10299, i32 0, i32 33
  %10301 = getelementptr inbounds %struct.Reg, %struct.Reg* %10300, i32 0, i32 0
  %PC.i1658 = bitcast %union.anon* %10301 to i64*
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10303 = getelementptr inbounds %struct.GPR, %struct.GPR* %10302, i32 0, i32 1
  %10304 = getelementptr inbounds %struct.Reg, %struct.Reg* %10303, i32 0, i32 0
  %RAX.i1659 = bitcast %union.anon* %10304 to i64*
  %10305 = load i64, i64* %PC.i1658
  %10306 = add i64 %10305, 5
  store i64 %10306, i64* %PC.i1658
  store i64 4, i64* %RAX.i1659, align 8
  store %struct.Memory* %loadMem_406a2e, %struct.Memory** %MEMORY
  %loadMem_406a33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10308 = getelementptr inbounds %struct.GPR, %struct.GPR* %10307, i32 0, i32 33
  %10309 = getelementptr inbounds %struct.Reg, %struct.Reg* %10308, i32 0, i32 0
  %PC.i1656 = bitcast %union.anon* %10309 to i64*
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10311 = getelementptr inbounds %struct.GPR, %struct.GPR* %10310, i32 0, i32 5
  %10312 = getelementptr inbounds %struct.Reg, %struct.Reg* %10311, i32 0, i32 0
  %RCX.i1657 = bitcast %union.anon* %10312 to i64*
  %10313 = load i64, i64* %PC.i1656
  %10314 = add i64 %10313, 5
  store i64 %10314, i64* %PC.i1656
  store i64 1, i64* %RCX.i1657, align 8
  store %struct.Memory* %loadMem_406a33, %struct.Memory** %MEMORY
  %loadMem_406a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10316 = getelementptr inbounds %struct.GPR, %struct.GPR* %10315, i32 0, i32 33
  %10317 = getelementptr inbounds %struct.Reg, %struct.Reg* %10316, i32 0, i32 0
  %PC.i1654 = bitcast %union.anon* %10317 to i64*
  %10318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10319 = getelementptr inbounds %struct.GPR, %struct.GPR* %10318, i32 0, i32 7
  %10320 = getelementptr inbounds %struct.Reg, %struct.Reg* %10319, i32 0, i32 0
  %RDX.i1655 = bitcast %union.anon* %10320 to i64*
  %10321 = load i64, i64* %PC.i1654
  %10322 = add i64 %10321, 5
  store i64 %10322, i64* %PC.i1654
  store i64 3, i64* %RDX.i1655, align 8
  store %struct.Memory* %loadMem_406a38, %struct.Memory** %MEMORY
  %loadMem_406a3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10324 = getelementptr inbounds %struct.GPR, %struct.GPR* %10323, i32 0, i32 33
  %10325 = getelementptr inbounds %struct.Reg, %struct.Reg* %10324, i32 0, i32 0
  %PC.i1652 = bitcast %union.anon* %10325 to i64*
  %10326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10327 = getelementptr inbounds %struct.GPR, %struct.GPR* %10326, i32 0, i32 9
  %10328 = getelementptr inbounds %struct.Reg, %struct.Reg* %10327, i32 0, i32 0
  %RSI.i1653 = bitcast %union.anon* %10328 to i64*
  %10329 = load i64, i64* %PC.i1652
  %10330 = add i64 %10329, 10
  store i64 %10330, i64* %PC.i1652
  store i64 ptrtoint (%G__0x70d010_type* @G__0x70d010 to i64), i64* %RSI.i1653, align 8
  store %struct.Memory* %loadMem_406a3d, %struct.Memory** %MEMORY
  %loadMem_406a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10332 = getelementptr inbounds %struct.GPR, %struct.GPR* %10331, i32 0, i32 33
  %10333 = getelementptr inbounds %struct.Reg, %struct.Reg* %10332, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %10333 to i64*
  %10334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10335 = getelementptr inbounds %struct.GPR, %struct.GPR* %10334, i32 0, i32 11
  %10336 = getelementptr inbounds %struct.Reg, %struct.Reg* %10335, i32 0, i32 0
  %RDI.i1650 = bitcast %union.anon* %10336 to i64*
  %10337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10338 = getelementptr inbounds %struct.GPR, %struct.GPR* %10337, i32 0, i32 15
  %10339 = getelementptr inbounds %struct.Reg, %struct.Reg* %10338, i32 0, i32 0
  %RBP.i1651 = bitcast %union.anon* %10339 to i64*
  %10340 = load i64, i64* %RBP.i1651
  %10341 = sub i64 %10340, 88
  %10342 = load i64, i64* %PC.i1649
  %10343 = add i64 %10342, 3
  store i64 %10343, i64* %PC.i1649
  %10344 = inttoptr i64 %10341 to i32*
  %10345 = load i32, i32* %10344
  %10346 = zext i32 %10345 to i64
  store i64 %10346, i64* %RDI.i1650, align 8
  store %struct.Memory* %loadMem_406a47, %struct.Memory** %MEMORY
  %loadMem_406a4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10348 = getelementptr inbounds %struct.GPR, %struct.GPR* %10347, i32 0, i32 33
  %10349 = getelementptr inbounds %struct.Reg, %struct.Reg* %10348, i32 0, i32 0
  %PC.i1646 = bitcast %union.anon* %10349 to i64*
  %10350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10351 = getelementptr inbounds %struct.GPR, %struct.GPR* %10350, i32 0, i32 15
  %10352 = getelementptr inbounds %struct.Reg, %struct.Reg* %10351, i32 0, i32 0
  %RBP.i1647 = bitcast %union.anon* %10352 to i64*
  %10353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10354 = getelementptr inbounds %struct.GPR, %struct.GPR* %10353, i32 0, i32 17
  %10355 = getelementptr inbounds %struct.Reg, %struct.Reg* %10354, i32 0, i32 0
  %R8.i1648 = bitcast %union.anon* %10355 to i64*
  %10356 = load i64, i64* %RBP.i1647
  %10357 = sub i64 %10356, 108
  %10358 = load i64, i64* %PC.i1646
  %10359 = add i64 %10358, 4
  store i64 %10359, i64* %PC.i1646
  %10360 = inttoptr i64 %10357 to i32*
  %10361 = load i32, i32* %10360
  %10362 = sext i32 %10361 to i64
  store i64 %10362, i64* %R8.i1648, align 8
  store %struct.Memory* %loadMem_406a4a, %struct.Memory** %MEMORY
  %loadMem_406a4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10364 = getelementptr inbounds %struct.GPR, %struct.GPR* %10363, i32 0, i32 33
  %10365 = getelementptr inbounds %struct.Reg, %struct.Reg* %10364, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %10365 to i64*
  %10366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10367 = getelementptr inbounds %struct.GPR, %struct.GPR* %10366, i32 0, i32 17
  %10368 = getelementptr inbounds %struct.Reg, %struct.Reg* %10367, i32 0, i32 0
  %R8.i1645 = bitcast %union.anon* %10368 to i64*
  %10369 = load i64, i64* %R8.i1645
  %10370 = load i64, i64* %PC.i1644
  %10371 = add i64 %10370, 4
  store i64 %10371, i64* %PC.i1644
  %10372 = shl i64 %10369, 5
  %10373 = icmp slt i64 %10372, 0
  %10374 = shl i64 %10372, 1
  store i64 %10374, i64* %R8.i1645, align 8
  %10375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10376 = zext i1 %10373 to i8
  store i8 %10376, i8* %10375, align 1
  %10377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10378 = trunc i64 %10374 to i32
  %10379 = and i32 %10378, 254
  %10380 = call i32 @llvm.ctpop.i32(i32 %10379)
  %10381 = trunc i32 %10380 to i8
  %10382 = and i8 %10381, 1
  %10383 = xor i8 %10382, 1
  store i8 %10383, i8* %10377, align 1
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10384, align 1
  %10385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10386 = icmp eq i64 %10374, 0
  %10387 = zext i1 %10386 to i8
  store i8 %10387, i8* %10385, align 1
  %10388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10389 = lshr i64 %10374, 63
  %10390 = trunc i64 %10389 to i8
  store i8 %10390, i8* %10388, align 1
  %10391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10391, align 1
  store %struct.Memory* %loadMem_406a4e, %struct.Memory** %MEMORY
  %loadMem_406a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10393 = getelementptr inbounds %struct.GPR, %struct.GPR* %10392, i32 0, i32 33
  %10394 = getelementptr inbounds %struct.Reg, %struct.Reg* %10393, i32 0, i32 0
  %PC.i1641 = bitcast %union.anon* %10394 to i64*
  %10395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10396 = getelementptr inbounds %struct.GPR, %struct.GPR* %10395, i32 0, i32 9
  %10397 = getelementptr inbounds %struct.Reg, %struct.Reg* %10396, i32 0, i32 0
  %RSI.i1642 = bitcast %union.anon* %10397 to i64*
  %10398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10399 = getelementptr inbounds %struct.GPR, %struct.GPR* %10398, i32 0, i32 17
  %10400 = getelementptr inbounds %struct.Reg, %struct.Reg* %10399, i32 0, i32 0
  %R8.i1643 = bitcast %union.anon* %10400 to i64*
  %10401 = load i64, i64* %RSI.i1642
  %10402 = load i64, i64* %R8.i1643
  %10403 = load i64, i64* %PC.i1641
  %10404 = add i64 %10403, 3
  store i64 %10404, i64* %PC.i1641
  %10405 = add i64 %10402, %10401
  store i64 %10405, i64* %RSI.i1642, align 8
  %10406 = icmp ult i64 %10405, %10401
  %10407 = icmp ult i64 %10405, %10402
  %10408 = or i1 %10406, %10407
  %10409 = zext i1 %10408 to i8
  %10410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10409, i8* %10410, align 1
  %10411 = trunc i64 %10405 to i32
  %10412 = and i32 %10411, 255
  %10413 = call i32 @llvm.ctpop.i32(i32 %10412)
  %10414 = trunc i32 %10413 to i8
  %10415 = and i8 %10414, 1
  %10416 = xor i8 %10415, 1
  %10417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10416, i8* %10417, align 1
  %10418 = xor i64 %10402, %10401
  %10419 = xor i64 %10418, %10405
  %10420 = lshr i64 %10419, 4
  %10421 = trunc i64 %10420 to i8
  %10422 = and i8 %10421, 1
  %10423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10422, i8* %10423, align 1
  %10424 = icmp eq i64 %10405, 0
  %10425 = zext i1 %10424 to i8
  %10426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10425, i8* %10426, align 1
  %10427 = lshr i64 %10405, 63
  %10428 = trunc i64 %10427 to i8
  %10429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10428, i8* %10429, align 1
  %10430 = lshr i64 %10401, 63
  %10431 = lshr i64 %10402, 63
  %10432 = xor i64 %10427, %10430
  %10433 = xor i64 %10427, %10431
  %10434 = add i64 %10432, %10433
  %10435 = icmp eq i64 %10434, 2
  %10436 = zext i1 %10435 to i8
  %10437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10436, i8* %10437, align 1
  store %struct.Memory* %loadMem_406a52, %struct.Memory** %MEMORY
  %loadMem_406a55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10439 = getelementptr inbounds %struct.GPR, %struct.GPR* %10438, i32 0, i32 33
  %10440 = getelementptr inbounds %struct.Reg, %struct.Reg* %10439, i32 0, i32 0
  %PC.i1638 = bitcast %union.anon* %10440 to i64*
  %10441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10442 = getelementptr inbounds %struct.GPR, %struct.GPR* %10441, i32 0, i32 15
  %10443 = getelementptr inbounds %struct.Reg, %struct.Reg* %10442, i32 0, i32 0
  %RBP.i1639 = bitcast %union.anon* %10443 to i64*
  %10444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10445 = getelementptr inbounds %struct.GPR, %struct.GPR* %10444, i32 0, i32 17
  %10446 = getelementptr inbounds %struct.Reg, %struct.Reg* %10445, i32 0, i32 0
  %R8.i1640 = bitcast %union.anon* %10446 to i64*
  %10447 = load i64, i64* %RBP.i1639
  %10448 = sub i64 %10447, 24
  %10449 = load i64, i64* %PC.i1638
  %10450 = add i64 %10449, 4
  store i64 %10450, i64* %PC.i1638
  %10451 = inttoptr i64 %10448 to i32*
  %10452 = load i32, i32* %10451
  %10453 = sext i32 %10452 to i64
  store i64 %10453, i64* %R8.i1640, align 8
  store %struct.Memory* %loadMem_406a55, %struct.Memory** %MEMORY
  %loadMem_406a59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10455 = getelementptr inbounds %struct.GPR, %struct.GPR* %10454, i32 0, i32 33
  %10456 = getelementptr inbounds %struct.Reg, %struct.Reg* %10455, i32 0, i32 0
  %PC.i1636 = bitcast %union.anon* %10456 to i64*
  %10457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10458 = getelementptr inbounds %struct.GPR, %struct.GPR* %10457, i32 0, i32 17
  %10459 = getelementptr inbounds %struct.Reg, %struct.Reg* %10458, i32 0, i32 0
  %R8.i1637 = bitcast %union.anon* %10459 to i64*
  %10460 = load i64, i64* %R8.i1637
  %10461 = load i64, i64* %PC.i1636
  %10462 = add i64 %10461, 4
  store i64 %10462, i64* %PC.i1636
  %10463 = shl i64 %10460, 3
  %10464 = icmp slt i64 %10463, 0
  %10465 = shl i64 %10463, 1
  store i64 %10465, i64* %R8.i1637, align 8
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10467 = zext i1 %10464 to i8
  store i8 %10467, i8* %10466, align 1
  %10468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10469 = trunc i64 %10465 to i32
  %10470 = and i32 %10469, 254
  %10471 = call i32 @llvm.ctpop.i32(i32 %10470)
  %10472 = trunc i32 %10471 to i8
  %10473 = and i8 %10472, 1
  %10474 = xor i8 %10473, 1
  store i8 %10474, i8* %10468, align 1
  %10475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10475, align 1
  %10476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10477 = icmp eq i64 %10465, 0
  %10478 = zext i1 %10477 to i8
  store i8 %10478, i8* %10476, align 1
  %10479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10480 = lshr i64 %10465, 63
  %10481 = trunc i64 %10480 to i8
  store i8 %10481, i8* %10479, align 1
  %10482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10482, align 1
  store %struct.Memory* %loadMem_406a59, %struct.Memory** %MEMORY
  %loadMem_406a5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10484 = getelementptr inbounds %struct.GPR, %struct.GPR* %10483, i32 0, i32 33
  %10485 = getelementptr inbounds %struct.Reg, %struct.Reg* %10484, i32 0, i32 0
  %PC.i1633 = bitcast %union.anon* %10485 to i64*
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10487 = getelementptr inbounds %struct.GPR, %struct.GPR* %10486, i32 0, i32 9
  %10488 = getelementptr inbounds %struct.Reg, %struct.Reg* %10487, i32 0, i32 0
  %RSI.i1634 = bitcast %union.anon* %10488 to i64*
  %10489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10490 = getelementptr inbounds %struct.GPR, %struct.GPR* %10489, i32 0, i32 17
  %10491 = getelementptr inbounds %struct.Reg, %struct.Reg* %10490, i32 0, i32 0
  %R8.i1635 = bitcast %union.anon* %10491 to i64*
  %10492 = load i64, i64* %RSI.i1634
  %10493 = load i64, i64* %R8.i1635
  %10494 = load i64, i64* %PC.i1633
  %10495 = add i64 %10494, 3
  store i64 %10495, i64* %PC.i1633
  %10496 = add i64 %10493, %10492
  store i64 %10496, i64* %RSI.i1634, align 8
  %10497 = icmp ult i64 %10496, %10492
  %10498 = icmp ult i64 %10496, %10493
  %10499 = or i1 %10497, %10498
  %10500 = zext i1 %10499 to i8
  %10501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10500, i8* %10501, align 1
  %10502 = trunc i64 %10496 to i32
  %10503 = and i32 %10502, 255
  %10504 = call i32 @llvm.ctpop.i32(i32 %10503)
  %10505 = trunc i32 %10504 to i8
  %10506 = and i8 %10505, 1
  %10507 = xor i8 %10506, 1
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10507, i8* %10508, align 1
  %10509 = xor i64 %10493, %10492
  %10510 = xor i64 %10509, %10496
  %10511 = lshr i64 %10510, 4
  %10512 = trunc i64 %10511 to i8
  %10513 = and i8 %10512, 1
  %10514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10513, i8* %10514, align 1
  %10515 = icmp eq i64 %10496, 0
  %10516 = zext i1 %10515 to i8
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10516, i8* %10517, align 1
  %10518 = lshr i64 %10496, 63
  %10519 = trunc i64 %10518 to i8
  %10520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10519, i8* %10520, align 1
  %10521 = lshr i64 %10492, 63
  %10522 = lshr i64 %10493, 63
  %10523 = xor i64 %10518, %10521
  %10524 = xor i64 %10518, %10522
  %10525 = add i64 %10523, %10524
  %10526 = icmp eq i64 %10525, 2
  %10527 = zext i1 %10526 to i8
  %10528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10527, i8* %10528, align 1
  store %struct.Memory* %loadMem_406a5d, %struct.Memory** %MEMORY
  %loadMem_406a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10530 = getelementptr inbounds %struct.GPR, %struct.GPR* %10529, i32 0, i32 33
  %10531 = getelementptr inbounds %struct.Reg, %struct.Reg* %10530, i32 0, i32 0
  %PC.i1630 = bitcast %union.anon* %10531 to i64*
  %10532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10533 = getelementptr inbounds %struct.GPR, %struct.GPR* %10532, i32 0, i32 15
  %10534 = getelementptr inbounds %struct.Reg, %struct.Reg* %10533, i32 0, i32 0
  %RBP.i1631 = bitcast %union.anon* %10534 to i64*
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10536 = getelementptr inbounds %struct.GPR, %struct.GPR* %10535, i32 0, i32 17
  %10537 = getelementptr inbounds %struct.Reg, %struct.Reg* %10536, i32 0, i32 0
  %R8.i1632 = bitcast %union.anon* %10537 to i64*
  %10538 = load i64, i64* %RBP.i1631
  %10539 = sub i64 %10538, 28
  %10540 = load i64, i64* %PC.i1630
  %10541 = add i64 %10540, 4
  store i64 %10541, i64* %PC.i1630
  %10542 = inttoptr i64 %10539 to i32*
  %10543 = load i32, i32* %10542
  %10544 = sext i32 %10543 to i64
  store i64 %10544, i64* %R8.i1632, align 8
  store %struct.Memory* %loadMem_406a60, %struct.Memory** %MEMORY
  %loadMem_406a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10546 = getelementptr inbounds %struct.GPR, %struct.GPR* %10545, i32 0, i32 33
  %10547 = getelementptr inbounds %struct.Reg, %struct.Reg* %10546, i32 0, i32 0
  %PC.i1626 = bitcast %union.anon* %10547 to i64*
  %10548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10549 = getelementptr inbounds %struct.GPR, %struct.GPR* %10548, i32 0, i32 9
  %10550 = getelementptr inbounds %struct.Reg, %struct.Reg* %10549, i32 0, i32 0
  %RSI.i1627 = bitcast %union.anon* %10550 to i64*
  %10551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10552 = getelementptr inbounds %struct.GPR, %struct.GPR* %10551, i32 0, i32 11
  %10553 = getelementptr inbounds %struct.Reg, %struct.Reg* %10552, i32 0, i32 0
  %RDI.i1628 = bitcast %union.anon* %10553 to i64*
  %10554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10555 = getelementptr inbounds %struct.GPR, %struct.GPR* %10554, i32 0, i32 17
  %10556 = getelementptr inbounds %struct.Reg, %struct.Reg* %10555, i32 0, i32 0
  %R8.i1629 = bitcast %union.anon* %10556 to i64*
  %10557 = load i64, i64* %RDI.i1628
  %10558 = load i64, i64* %RSI.i1627
  %10559 = load i64, i64* %R8.i1629
  %10560 = mul i64 %10559, 4
  %10561 = add i64 %10560, %10558
  %10562 = load i64, i64* %PC.i1626
  %10563 = add i64 %10562, 5
  store i64 %10563, i64* %PC.i1626
  %10564 = inttoptr i64 %10561 to i32*
  %10565 = load i32, i32* %10564
  %10566 = shl i64 %10557, 32
  %10567 = ashr exact i64 %10566, 32
  %10568 = sext i32 %10565 to i64
  %10569 = mul i64 %10568, %10567
  %10570 = trunc i64 %10569 to i32
  %10571 = and i64 %10569, 4294967295
  store i64 %10571, i64* %RDI.i1628, align 8
  %10572 = shl i64 %10569, 32
  %10573 = ashr exact i64 %10572, 32
  %10574 = icmp ne i64 %10573, %10569
  %10575 = zext i1 %10574 to i8
  %10576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10575, i8* %10576, align 1
  %10577 = and i32 %10570, 255
  %10578 = call i32 @llvm.ctpop.i32(i32 %10577)
  %10579 = trunc i32 %10578 to i8
  %10580 = and i8 %10579, 1
  %10581 = xor i8 %10580, 1
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10581, i8* %10582, align 1
  %10583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10583, align 1
  %10584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10584, align 1
  %10585 = lshr i32 %10570, 31
  %10586 = trunc i32 %10585 to i8
  %10587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10586, i8* %10587, align 1
  %10588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10575, i8* %10588, align 1
  store %struct.Memory* %loadMem_406a64, %struct.Memory** %MEMORY
  %loadMem_406a69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10590 = getelementptr inbounds %struct.GPR, %struct.GPR* %10589, i32 0, i32 33
  %10591 = getelementptr inbounds %struct.Reg, %struct.Reg* %10590, i32 0, i32 0
  %PC.i1623 = bitcast %union.anon* %10591 to i64*
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10593 = getelementptr inbounds %struct.GPR, %struct.GPR* %10592, i32 0, i32 7
  %10594 = getelementptr inbounds %struct.Reg, %struct.Reg* %10593, i32 0, i32 0
  %RDX.i1624 = bitcast %union.anon* %10594 to i64*
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10596 = getelementptr inbounds %struct.GPR, %struct.GPR* %10595, i32 0, i32 15
  %10597 = getelementptr inbounds %struct.Reg, %struct.Reg* %10596, i32 0, i32 0
  %RBP.i1625 = bitcast %union.anon* %10597 to i64*
  %10598 = load i64, i64* %RDX.i1624
  %10599 = load i64, i64* %RBP.i1625
  %10600 = sub i64 %10599, 104
  %10601 = load i64, i64* %PC.i1623
  %10602 = add i64 %10601, 3
  store i64 %10602, i64* %PC.i1623
  %10603 = trunc i64 %10598 to i32
  %10604 = inttoptr i64 %10600 to i32*
  %10605 = load i32, i32* %10604
  %10606 = sub i32 %10603, %10605
  %10607 = zext i32 %10606 to i64
  store i64 %10607, i64* %RDX.i1624, align 8
  %10608 = icmp ult i32 %10603, %10605
  %10609 = zext i1 %10608 to i8
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10609, i8* %10610, align 1
  %10611 = and i32 %10606, 255
  %10612 = call i32 @llvm.ctpop.i32(i32 %10611)
  %10613 = trunc i32 %10612 to i8
  %10614 = and i8 %10613, 1
  %10615 = xor i8 %10614, 1
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10615, i8* %10616, align 1
  %10617 = xor i32 %10605, %10603
  %10618 = xor i32 %10617, %10606
  %10619 = lshr i32 %10618, 4
  %10620 = trunc i32 %10619 to i8
  %10621 = and i8 %10620, 1
  %10622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10621, i8* %10622, align 1
  %10623 = icmp eq i32 %10606, 0
  %10624 = zext i1 %10623 to i8
  %10625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10624, i8* %10625, align 1
  %10626 = lshr i32 %10606, 31
  %10627 = trunc i32 %10626 to i8
  %10628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10627, i8* %10628, align 1
  %10629 = lshr i32 %10603, 31
  %10630 = lshr i32 %10605, 31
  %10631 = xor i32 %10630, %10629
  %10632 = xor i32 %10626, %10629
  %10633 = add i32 %10632, %10631
  %10634 = icmp eq i32 %10633, 2
  %10635 = zext i1 %10634 to i8
  %10636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10635, i8* %10636, align 1
  store %struct.Memory* %loadMem_406a69, %struct.Memory** %MEMORY
  %loadMem_406a6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10638 = getelementptr inbounds %struct.GPR, %struct.GPR* %10637, i32 0, i32 33
  %10639 = getelementptr inbounds %struct.Reg, %struct.Reg* %10638, i32 0, i32 0
  %PC.i1620 = bitcast %union.anon* %10639 to i64*
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10641 = getelementptr inbounds %struct.GPR, %struct.GPR* %10640, i32 0, i32 5
  %10642 = getelementptr inbounds %struct.Reg, %struct.Reg* %10641, i32 0, i32 0
  %ECX.i1621 = bitcast %union.anon* %10642 to i32*
  %10643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10644 = getelementptr inbounds %struct.GPR, %struct.GPR* %10643, i32 0, i32 15
  %10645 = getelementptr inbounds %struct.Reg, %struct.Reg* %10644, i32 0, i32 0
  %RBP.i1622 = bitcast %union.anon* %10645 to i64*
  %10646 = load i64, i64* %RBP.i1622
  %10647 = sub i64 %10646, 176
  %10648 = load i32, i32* %ECX.i1621
  %10649 = zext i32 %10648 to i64
  %10650 = load i64, i64* %PC.i1620
  %10651 = add i64 %10650, 6
  store i64 %10651, i64* %PC.i1620
  %10652 = inttoptr i64 %10647 to i32*
  store i32 %10648, i32* %10652
  store %struct.Memory* %loadMem_406a6c, %struct.Memory** %MEMORY
  %loadMem_406a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10654 = getelementptr inbounds %struct.GPR, %struct.GPR* %10653, i32 0, i32 33
  %10655 = getelementptr inbounds %struct.Reg, %struct.Reg* %10654, i32 0, i32 0
  %PC.i1617 = bitcast %union.anon* %10655 to i64*
  %10656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10657 = getelementptr inbounds %struct.GPR, %struct.GPR* %10656, i32 0, i32 7
  %10658 = getelementptr inbounds %struct.Reg, %struct.Reg* %10657, i32 0, i32 0
  %EDX.i1618 = bitcast %union.anon* %10658 to i32*
  %10659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10660 = getelementptr inbounds %struct.GPR, %struct.GPR* %10659, i32 0, i32 5
  %10661 = getelementptr inbounds %struct.Reg, %struct.Reg* %10660, i32 0, i32 0
  %RCX.i1619 = bitcast %union.anon* %10661 to i64*
  %10662 = load i32, i32* %EDX.i1618
  %10663 = zext i32 %10662 to i64
  %10664 = load i64, i64* %PC.i1617
  %10665 = add i64 %10664, 2
  store i64 %10665, i64* %PC.i1617
  %10666 = and i64 %10663, 4294967295
  store i64 %10666, i64* %RCX.i1619, align 8
  store %struct.Memory* %loadMem_406a72, %struct.Memory** %MEMORY
  %loadMem_406a74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10668 = getelementptr inbounds %struct.GPR, %struct.GPR* %10667, i32 0, i32 33
  %10669 = getelementptr inbounds %struct.Reg, %struct.Reg* %10668, i32 0, i32 0
  %PC.i1614 = bitcast %union.anon* %10669 to i64*
  %10670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10671 = getelementptr inbounds %struct.GPR, %struct.GPR* %10670, i32 0, i32 7
  %10672 = getelementptr inbounds %struct.Reg, %struct.Reg* %10671, i32 0, i32 0
  %RDX.i1615 = bitcast %union.anon* %10672 to i64*
  %10673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10674 = getelementptr inbounds %struct.GPR, %struct.GPR* %10673, i32 0, i32 15
  %10675 = getelementptr inbounds %struct.Reg, %struct.Reg* %10674, i32 0, i32 0
  %RBP.i1616 = bitcast %union.anon* %10675 to i64*
  %10676 = load i64, i64* %RBP.i1616
  %10677 = sub i64 %10676, 176
  %10678 = load i64, i64* %PC.i1614
  %10679 = add i64 %10678, 6
  store i64 %10679, i64* %PC.i1614
  %10680 = inttoptr i64 %10677 to i32*
  %10681 = load i32, i32* %10680
  %10682 = zext i32 %10681 to i64
  store i64 %10682, i64* %RDX.i1615, align 8
  store %struct.Memory* %loadMem_406a74, %struct.Memory** %MEMORY
  %loadMem_406a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10684 = getelementptr inbounds %struct.GPR, %struct.GPR* %10683, i32 0, i32 33
  %10685 = getelementptr inbounds %struct.Reg, %struct.Reg* %10684, i32 0, i32 0
  %PC.i1610 = bitcast %union.anon* %10685 to i64*
  %10686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10687 = getelementptr inbounds %struct.GPR, %struct.GPR* %10686, i32 0, i32 5
  %10688 = getelementptr inbounds %struct.Reg, %struct.Reg* %10687, i32 0, i32 0
  %10689 = bitcast %union.anon* %10688 to %struct.anon.2*
  %CL.i1611 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10689, i32 0, i32 0
  %10690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10691 = getelementptr inbounds %struct.GPR, %struct.GPR* %10690, i32 0, i32 7
  %10692 = getelementptr inbounds %struct.Reg, %struct.Reg* %10691, i32 0, i32 0
  %RDX.i1612 = bitcast %union.anon* %10692 to i64*
  %10693 = load i64, i64* %RDX.i1612
  %10694 = load i8, i8* %CL.i1611
  %10695 = zext i8 %10694 to i64
  %10696 = load i64, i64* %PC.i1610
  %10697 = add i64 %10696, 2
  store i64 %10697, i64* %PC.i1610
  %10698 = trunc i64 %10695 to i5
  switch i5 %10698, label %10705 [
    i5 0, label %routine_shll__cl___edx.exit1613
    i5 1, label %10699
  ]

; <label>:10699:                                  ; preds = %block_406a2e
  %10700 = trunc i64 %10693 to i32
  %10701 = shl i32 %10700, 1
  %10702 = icmp slt i32 %10700, 0
  %10703 = icmp slt i32 %10701, 0
  %10704 = xor i1 %10702, %10703
  br label %10714

; <label>:10705:                                  ; preds = %block_406a2e
  %10706 = and i64 %10695, 31
  %10707 = add i64 %10706, 4294967295
  %10708 = and i64 %10693, 4294967295
  %10709 = and i64 %10707, 4294967295
  %10710 = shl i64 %10708, %10709
  %10711 = trunc i64 %10710 to i32
  %10712 = icmp slt i32 %10711, 0
  %10713 = shl i32 %10711, 1
  br label %10714

; <label>:10714:                                  ; preds = %10705, %10699
  %10715 = phi i1 [ %10702, %10699 ], [ %10712, %10705 ]
  %10716 = phi i1 [ %10704, %10699 ], [ false, %10705 ]
  %10717 = phi i32 [ %10701, %10699 ], [ %10713, %10705 ]
  %10718 = zext i32 %10717 to i64
  store i64 %10718, i64* %RDX.i1612, align 8
  %10719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10720 = zext i1 %10715 to i8
  store i8 %10720, i8* %10719, align 1
  %10721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10722 = and i32 %10717, 254
  %10723 = call i32 @llvm.ctpop.i32(i32 %10722)
  %10724 = trunc i32 %10723 to i8
  %10725 = and i8 %10724, 1
  %10726 = xor i8 %10725, 1
  store i8 %10726, i8* %10721, align 1
  %10727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10727, align 1
  %10728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10729 = icmp eq i32 %10717, 0
  %10730 = zext i1 %10729 to i8
  store i8 %10730, i8* %10728, align 1
  %10731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10732 = lshr i32 %10717, 31
  %10733 = trunc i32 %10732 to i8
  store i8 %10733, i8* %10731, align 1
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10735 = zext i1 %10716 to i8
  store i8 %10735, i8* %10734, align 1
  br label %routine_shll__cl___edx.exit1613

routine_shll__cl___edx.exit1613:                  ; preds = %block_406a2e, %10714
  store %struct.Memory* %loadMem_406a7a, %struct.Memory** %MEMORY
  %loadMem_406a7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10737 = getelementptr inbounds %struct.GPR, %struct.GPR* %10736, i32 0, i32 33
  %10738 = getelementptr inbounds %struct.Reg, %struct.Reg* %10737, i32 0, i32 0
  %PC.i1607 = bitcast %union.anon* %10738 to i64*
  %10739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10740 = getelementptr inbounds %struct.GPR, %struct.GPR* %10739, i32 0, i32 7
  %10741 = getelementptr inbounds %struct.Reg, %struct.Reg* %10740, i32 0, i32 0
  %EDX.i1608 = bitcast %union.anon* %10741 to i32*
  %10742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10743 = getelementptr inbounds %struct.GPR, %struct.GPR* %10742, i32 0, i32 11
  %10744 = getelementptr inbounds %struct.Reg, %struct.Reg* %10743, i32 0, i32 0
  %RDI.i1609 = bitcast %union.anon* %10744 to i64*
  %10745 = load i64, i64* %RDI.i1609
  %10746 = load i32, i32* %EDX.i1608
  %10747 = zext i32 %10746 to i64
  %10748 = load i64, i64* %PC.i1607
  %10749 = add i64 %10748, 2
  store i64 %10749, i64* %PC.i1607
  %10750 = trunc i64 %10745 to i32
  %10751 = add i32 %10746, %10750
  %10752 = zext i32 %10751 to i64
  store i64 %10752, i64* %RDI.i1609, align 8
  %10753 = icmp ult i32 %10751, %10750
  %10754 = icmp ult i32 %10751, %10746
  %10755 = or i1 %10753, %10754
  %10756 = zext i1 %10755 to i8
  %10757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10756, i8* %10757, align 1
  %10758 = and i32 %10751, 255
  %10759 = call i32 @llvm.ctpop.i32(i32 %10758)
  %10760 = trunc i32 %10759 to i8
  %10761 = and i8 %10760, 1
  %10762 = xor i8 %10761, 1
  %10763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10762, i8* %10763, align 1
  %10764 = xor i64 %10747, %10745
  %10765 = trunc i64 %10764 to i32
  %10766 = xor i32 %10765, %10751
  %10767 = lshr i32 %10766, 4
  %10768 = trunc i32 %10767 to i8
  %10769 = and i8 %10768, 1
  %10770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10769, i8* %10770, align 1
  %10771 = icmp eq i32 %10751, 0
  %10772 = zext i1 %10771 to i8
  %10773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10772, i8* %10773, align 1
  %10774 = lshr i32 %10751, 31
  %10775 = trunc i32 %10774 to i8
  %10776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10775, i8* %10776, align 1
  %10777 = lshr i32 %10750, 31
  %10778 = lshr i32 %10746, 31
  %10779 = xor i32 %10774, %10777
  %10780 = xor i32 %10774, %10778
  %10781 = add i32 %10779, %10780
  %10782 = icmp eq i32 %10781, 2
  %10783 = zext i1 %10782 to i8
  %10784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10783, i8* %10784, align 1
  store %struct.Memory* %loadMem_406a7c, %struct.Memory** %MEMORY
  %loadMem_406a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10786 = getelementptr inbounds %struct.GPR, %struct.GPR* %10785, i32 0, i32 33
  %10787 = getelementptr inbounds %struct.Reg, %struct.Reg* %10786, i32 0, i32 0
  %PC.i1604 = bitcast %union.anon* %10787 to i64*
  %10788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10789 = getelementptr inbounds %struct.GPR, %struct.GPR* %10788, i32 0, i32 1
  %10790 = getelementptr inbounds %struct.Reg, %struct.Reg* %10789, i32 0, i32 0
  %RAX.i1605 = bitcast %union.anon* %10790 to i64*
  %10791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10792 = getelementptr inbounds %struct.GPR, %struct.GPR* %10791, i32 0, i32 15
  %10793 = getelementptr inbounds %struct.Reg, %struct.Reg* %10792, i32 0, i32 0
  %RBP.i1606 = bitcast %union.anon* %10793 to i64*
  %10794 = load i64, i64* %RAX.i1605
  %10795 = load i64, i64* %RBP.i1606
  %10796 = sub i64 %10795, 104
  %10797 = load i64, i64* %PC.i1604
  %10798 = add i64 %10797, 3
  store i64 %10798, i64* %PC.i1604
  %10799 = trunc i64 %10794 to i32
  %10800 = inttoptr i64 %10796 to i32*
  %10801 = load i32, i32* %10800
  %10802 = sub i32 %10799, %10801
  %10803 = zext i32 %10802 to i64
  store i64 %10803, i64* %RAX.i1605, align 8
  %10804 = icmp ult i32 %10799, %10801
  %10805 = zext i1 %10804 to i8
  %10806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10805, i8* %10806, align 1
  %10807 = and i32 %10802, 255
  %10808 = call i32 @llvm.ctpop.i32(i32 %10807)
  %10809 = trunc i32 %10808 to i8
  %10810 = and i8 %10809, 1
  %10811 = xor i8 %10810, 1
  %10812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10811, i8* %10812, align 1
  %10813 = xor i32 %10801, %10799
  %10814 = xor i32 %10813, %10802
  %10815 = lshr i32 %10814, 4
  %10816 = trunc i32 %10815 to i8
  %10817 = and i8 %10816, 1
  %10818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10817, i8* %10818, align 1
  %10819 = icmp eq i32 %10802, 0
  %10820 = zext i1 %10819 to i8
  %10821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10820, i8* %10821, align 1
  %10822 = lshr i32 %10802, 31
  %10823 = trunc i32 %10822 to i8
  %10824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10823, i8* %10824, align 1
  %10825 = lshr i32 %10799, 31
  %10826 = lshr i32 %10801, 31
  %10827 = xor i32 %10826, %10825
  %10828 = xor i32 %10822, %10825
  %10829 = add i32 %10828, %10827
  %10830 = icmp eq i32 %10829, 2
  %10831 = zext i1 %10830 to i8
  %10832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10831, i8* %10832, align 1
  store %struct.Memory* %loadMem_406a7e, %struct.Memory** %MEMORY
  %loadMem_406a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10834 = getelementptr inbounds %struct.GPR, %struct.GPR* %10833, i32 0, i32 33
  %10835 = getelementptr inbounds %struct.Reg, %struct.Reg* %10834, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %10835 to i64*
  %10836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10837 = getelementptr inbounds %struct.GPR, %struct.GPR* %10836, i32 0, i32 1
  %10838 = getelementptr inbounds %struct.Reg, %struct.Reg* %10837, i32 0, i32 0
  %EAX.i1602 = bitcast %union.anon* %10838 to i32*
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10840 = getelementptr inbounds %struct.GPR, %struct.GPR* %10839, i32 0, i32 5
  %10841 = getelementptr inbounds %struct.Reg, %struct.Reg* %10840, i32 0, i32 0
  %RCX.i1603 = bitcast %union.anon* %10841 to i64*
  %10842 = load i32, i32* %EAX.i1602
  %10843 = zext i32 %10842 to i64
  %10844 = load i64, i64* %PC.i1601
  %10845 = add i64 %10844, 2
  store i64 %10845, i64* %PC.i1601
  %10846 = and i64 %10843, 4294967295
  store i64 %10846, i64* %RCX.i1603, align 8
  store %struct.Memory* %loadMem_406a81, %struct.Memory** %MEMORY
  %loadMem_406a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10848 = getelementptr inbounds %struct.GPR, %struct.GPR* %10847, i32 0, i32 33
  %10849 = getelementptr inbounds %struct.Reg, %struct.Reg* %10848, i32 0, i32 0
  %PC.i1597 = bitcast %union.anon* %10849 to i64*
  %10850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10851 = getelementptr inbounds %struct.GPR, %struct.GPR* %10850, i32 0, i32 5
  %10852 = getelementptr inbounds %struct.Reg, %struct.Reg* %10851, i32 0, i32 0
  %10853 = bitcast %union.anon* %10852 to %struct.anon.2*
  %CL.i1598 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10853, i32 0, i32 0
  %10854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10855 = getelementptr inbounds %struct.GPR, %struct.GPR* %10854, i32 0, i32 11
  %10856 = getelementptr inbounds %struct.Reg, %struct.Reg* %10855, i32 0, i32 0
  %RDI.i1599 = bitcast %union.anon* %10856 to i64*
  %10857 = load i64, i64* %RDI.i1599
  %10858 = load i8, i8* %CL.i1598
  %10859 = zext i8 %10858 to i64
  %10860 = load i64, i64* %PC.i1597
  %10861 = add i64 %10860, 2
  store i64 %10861, i64* %PC.i1597
  %10862 = trunc i64 %10859 to i5
  switch i5 %10862, label %10866 [
    i5 0, label %routine_sarl__cl___edi.exit1600
    i5 1, label %10863
  ]

; <label>:10863:                                  ; preds = %routine_shll__cl___edx.exit1613
  %10864 = shl i64 %10857, 32
  %10865 = ashr i64 %10864, 33
  br label %10873

; <label>:10866:                                  ; preds = %routine_shll__cl___edx.exit1613
  %10867 = and i64 %10859, 31
  %10868 = add i64 %10867, -1
  %10869 = shl i64 %10857, 32
  %10870 = ashr exact i64 %10869, 32
  %10871 = ashr i64 %10870, %10868
  %10872 = lshr i64 %10871, 1
  br label %10873

; <label>:10873:                                  ; preds = %10866, %10863
  %10874 = phi i64 [ %10872, %10866 ], [ %10865, %10863 ]
  %10875 = phi i64 [ %10871, %10866 ], [ %10857, %10863 ]
  %10876 = trunc i64 %10875 to i8
  %10877 = and i8 %10876, 1
  %10878 = trunc i64 %10874 to i32
  %10879 = and i64 %10874, 4294967295
  store i64 %10879, i64* %RDI.i1599, align 8
  %10880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10877, i8* %10880, align 1
  %10881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10882 = and i32 %10878, 255
  %10883 = call i32 @llvm.ctpop.i32(i32 %10882)
  %10884 = trunc i32 %10883 to i8
  %10885 = and i8 %10884, 1
  %10886 = xor i8 %10885, 1
  store i8 %10886, i8* %10881, align 1
  %10887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10887, align 1
  %10888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10889 = icmp eq i32 %10878, 0
  %10890 = zext i1 %10889 to i8
  store i8 %10890, i8* %10888, align 1
  %10891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10892 = lshr i32 %10878, 31
  %10893 = trunc i32 %10892 to i8
  store i8 %10893, i8* %10891, align 1
  %10894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10894, align 1
  br label %routine_sarl__cl___edi.exit1600

routine_sarl__cl___edi.exit1600:                  ; preds = %routine_shll__cl___edx.exit1613, %10873
  store %struct.Memory* %loadMem_406a83, %struct.Memory** %MEMORY
  %loadMem_406a85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10896 = getelementptr inbounds %struct.GPR, %struct.GPR* %10895, i32 0, i32 33
  %10897 = getelementptr inbounds %struct.Reg, %struct.Reg* %10896, i32 0, i32 0
  %PC.i1594 = bitcast %union.anon* %10897 to i64*
  %10898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10899 = getelementptr inbounds %struct.GPR, %struct.GPR* %10898, i32 0, i32 11
  %10900 = getelementptr inbounds %struct.Reg, %struct.Reg* %10899, i32 0, i32 0
  %EDI.i1595 = bitcast %union.anon* %10900 to i32*
  %10901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10902 = getelementptr inbounds %struct.GPR, %struct.GPR* %10901, i32 0, i32 15
  %10903 = getelementptr inbounds %struct.Reg, %struct.Reg* %10902, i32 0, i32 0
  %RBP.i1596 = bitcast %union.anon* %10903 to i64*
  %10904 = load i64, i64* %RBP.i1596
  %10905 = sub i64 %10904, 40
  %10906 = load i32, i32* %EDI.i1595
  %10907 = zext i32 %10906 to i64
  %10908 = load i64, i64* %PC.i1594
  %10909 = add i64 %10908, 3
  store i64 %10909, i64* %PC.i1594
  %10910 = inttoptr i64 %10905 to i32*
  store i32 %10906, i32* %10910
  store %struct.Memory* %loadMem_406a85, %struct.Memory** %MEMORY
  %loadMem_406a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10912 = getelementptr inbounds %struct.GPR, %struct.GPR* %10911, i32 0, i32 33
  %10913 = getelementptr inbounds %struct.Reg, %struct.Reg* %10912, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %10913 to i64*
  %10914 = load i64, i64* %PC.i1593
  %10915 = add i64 %10914, 95
  %10916 = load i64, i64* %PC.i1593
  %10917 = add i64 %10916, 5
  store i64 %10917, i64* %PC.i1593
  %10918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10915, i64* %10918, align 8
  store %struct.Memory* %loadMem_406a88, %struct.Memory** %MEMORY
  br label %block_.L_406ae7

block_.L_406a8d:                                  ; preds = %block_406a24
  %loadMem_406a8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10920 = getelementptr inbounds %struct.GPR, %struct.GPR* %10919, i32 0, i32 33
  %10921 = getelementptr inbounds %struct.Reg, %struct.Reg* %10920, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %10921 to i64*
  %10922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10923 = getelementptr inbounds %struct.GPR, %struct.GPR* %10922, i32 0, i32 1
  %10924 = getelementptr inbounds %struct.Reg, %struct.Reg* %10923, i32 0, i32 0
  %RAX.i1592 = bitcast %union.anon* %10924 to i64*
  %10925 = load i64, i64* %PC.i1591
  %10926 = add i64 %10925, 5
  store i64 %10926, i64* %PC.i1591
  store i64 4, i64* %RAX.i1592, align 8
  store %struct.Memory* %loadMem_406a8d, %struct.Memory** %MEMORY
  %loadMem_406a92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10928 = getelementptr inbounds %struct.GPR, %struct.GPR* %10927, i32 0, i32 33
  %10929 = getelementptr inbounds %struct.Reg, %struct.Reg* %10928, i32 0, i32 0
  %PC.i1589 = bitcast %union.anon* %10929 to i64*
  %10930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10931 = getelementptr inbounds %struct.GPR, %struct.GPR* %10930, i32 0, i32 5
  %10932 = getelementptr inbounds %struct.Reg, %struct.Reg* %10931, i32 0, i32 0
  %RCX.i1590 = bitcast %union.anon* %10932 to i64*
  %10933 = load i64, i64* %PC.i1589
  %10934 = add i64 %10933, 5
  store i64 %10934, i64* %PC.i1589
  store i64 1, i64* %RCX.i1590, align 8
  store %struct.Memory* %loadMem_406a92, %struct.Memory** %MEMORY
  %loadMem_406a97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10936 = getelementptr inbounds %struct.GPR, %struct.GPR* %10935, i32 0, i32 33
  %10937 = getelementptr inbounds %struct.Reg, %struct.Reg* %10936, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %10937 to i64*
  %10938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10939 = getelementptr inbounds %struct.GPR, %struct.GPR* %10938, i32 0, i32 7
  %10940 = getelementptr inbounds %struct.Reg, %struct.Reg* %10939, i32 0, i32 0
  %RDX.i1588 = bitcast %union.anon* %10940 to i64*
  %10941 = load i64, i64* %PC.i1587
  %10942 = add i64 %10941, 5
  store i64 %10942, i64* %PC.i1587
  store i64 3, i64* %RDX.i1588, align 8
  store %struct.Memory* %loadMem_406a97, %struct.Memory** %MEMORY
  %loadMem_406a9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10944 = getelementptr inbounds %struct.GPR, %struct.GPR* %10943, i32 0, i32 33
  %10945 = getelementptr inbounds %struct.Reg, %struct.Reg* %10944, i32 0, i32 0
  %PC.i1585 = bitcast %union.anon* %10945 to i64*
  %10946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10947 = getelementptr inbounds %struct.GPR, %struct.GPR* %10946, i32 0, i32 9
  %10948 = getelementptr inbounds %struct.Reg, %struct.Reg* %10947, i32 0, i32 0
  %RSI.i1586 = bitcast %union.anon* %10948 to i64*
  %10949 = load i64, i64* %PC.i1585
  %10950 = add i64 %10949, 10
  store i64 %10950, i64* %PC.i1585
  store i64 ptrtoint (%G__0x6d09f0_type* @G__0x6d09f0 to i64), i64* %RSI.i1586, align 8
  store %struct.Memory* %loadMem_406a9c, %struct.Memory** %MEMORY
  %loadMem_406aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10952 = getelementptr inbounds %struct.GPR, %struct.GPR* %10951, i32 0, i32 33
  %10953 = getelementptr inbounds %struct.Reg, %struct.Reg* %10952, i32 0, i32 0
  %PC.i1582 = bitcast %union.anon* %10953 to i64*
  %10954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10955 = getelementptr inbounds %struct.GPR, %struct.GPR* %10954, i32 0, i32 11
  %10956 = getelementptr inbounds %struct.Reg, %struct.Reg* %10955, i32 0, i32 0
  %RDI.i1583 = bitcast %union.anon* %10956 to i64*
  %10957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10958 = getelementptr inbounds %struct.GPR, %struct.GPR* %10957, i32 0, i32 15
  %10959 = getelementptr inbounds %struct.Reg, %struct.Reg* %10958, i32 0, i32 0
  %RBP.i1584 = bitcast %union.anon* %10959 to i64*
  %10960 = load i64, i64* %RBP.i1584
  %10961 = sub i64 %10960, 88
  %10962 = load i64, i64* %PC.i1582
  %10963 = add i64 %10962, 3
  store i64 %10963, i64* %PC.i1582
  %10964 = inttoptr i64 %10961 to i32*
  %10965 = load i32, i32* %10964
  %10966 = zext i32 %10965 to i64
  store i64 %10966, i64* %RDI.i1583, align 8
  store %struct.Memory* %loadMem_406aa6, %struct.Memory** %MEMORY
  %loadMem_406aa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10968 = getelementptr inbounds %struct.GPR, %struct.GPR* %10967, i32 0, i32 33
  %10969 = getelementptr inbounds %struct.Reg, %struct.Reg* %10968, i32 0, i32 0
  %PC.i1579 = bitcast %union.anon* %10969 to i64*
  %10970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10971 = getelementptr inbounds %struct.GPR, %struct.GPR* %10970, i32 0, i32 15
  %10972 = getelementptr inbounds %struct.Reg, %struct.Reg* %10971, i32 0, i32 0
  %RBP.i1580 = bitcast %union.anon* %10972 to i64*
  %10973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10974 = getelementptr inbounds %struct.GPR, %struct.GPR* %10973, i32 0, i32 17
  %10975 = getelementptr inbounds %struct.Reg, %struct.Reg* %10974, i32 0, i32 0
  %R8.i1581 = bitcast %union.anon* %10975 to i64*
  %10976 = load i64, i64* %RBP.i1580
  %10977 = sub i64 %10976, 108
  %10978 = load i64, i64* %PC.i1579
  %10979 = add i64 %10978, 4
  store i64 %10979, i64* %PC.i1579
  %10980 = inttoptr i64 %10977 to i32*
  %10981 = load i32, i32* %10980
  %10982 = sext i32 %10981 to i64
  store i64 %10982, i64* %R8.i1581, align 8
  store %struct.Memory* %loadMem_406aa9, %struct.Memory** %MEMORY
  %loadMem_406aad = load %struct.Memory*, %struct.Memory** %MEMORY
  %10983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10984 = getelementptr inbounds %struct.GPR, %struct.GPR* %10983, i32 0, i32 33
  %10985 = getelementptr inbounds %struct.Reg, %struct.Reg* %10984, i32 0, i32 0
  %PC.i1577 = bitcast %union.anon* %10985 to i64*
  %10986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10987 = getelementptr inbounds %struct.GPR, %struct.GPR* %10986, i32 0, i32 17
  %10988 = getelementptr inbounds %struct.Reg, %struct.Reg* %10987, i32 0, i32 0
  %R8.i1578 = bitcast %union.anon* %10988 to i64*
  %10989 = load i64, i64* %R8.i1578
  %10990 = load i64, i64* %PC.i1577
  %10991 = add i64 %10990, 4
  store i64 %10991, i64* %PC.i1577
  %10992 = shl i64 %10989, 5
  %10993 = icmp slt i64 %10992, 0
  %10994 = shl i64 %10992, 1
  store i64 %10994, i64* %R8.i1578, align 8
  %10995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10996 = zext i1 %10993 to i8
  store i8 %10996, i8* %10995, align 1
  %10997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10998 = trunc i64 %10994 to i32
  %10999 = and i32 %10998, 254
  %11000 = call i32 @llvm.ctpop.i32(i32 %10999)
  %11001 = trunc i32 %11000 to i8
  %11002 = and i8 %11001, 1
  %11003 = xor i8 %11002, 1
  store i8 %11003, i8* %10997, align 1
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11004, align 1
  %11005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11006 = icmp eq i64 %10994, 0
  %11007 = zext i1 %11006 to i8
  store i8 %11007, i8* %11005, align 1
  %11008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11009 = lshr i64 %10994, 63
  %11010 = trunc i64 %11009 to i8
  store i8 %11010, i8* %11008, align 1
  %11011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11011, align 1
  store %struct.Memory* %loadMem_406aad, %struct.Memory** %MEMORY
  %loadMem_406ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11013 = getelementptr inbounds %struct.GPR, %struct.GPR* %11012, i32 0, i32 33
  %11014 = getelementptr inbounds %struct.Reg, %struct.Reg* %11013, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %11014 to i64*
  %11015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11016 = getelementptr inbounds %struct.GPR, %struct.GPR* %11015, i32 0, i32 9
  %11017 = getelementptr inbounds %struct.Reg, %struct.Reg* %11016, i32 0, i32 0
  %RSI.i1575 = bitcast %union.anon* %11017 to i64*
  %11018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11019 = getelementptr inbounds %struct.GPR, %struct.GPR* %11018, i32 0, i32 17
  %11020 = getelementptr inbounds %struct.Reg, %struct.Reg* %11019, i32 0, i32 0
  %R8.i1576 = bitcast %union.anon* %11020 to i64*
  %11021 = load i64, i64* %RSI.i1575
  %11022 = load i64, i64* %R8.i1576
  %11023 = load i64, i64* %PC.i1574
  %11024 = add i64 %11023, 3
  store i64 %11024, i64* %PC.i1574
  %11025 = add i64 %11022, %11021
  store i64 %11025, i64* %RSI.i1575, align 8
  %11026 = icmp ult i64 %11025, %11021
  %11027 = icmp ult i64 %11025, %11022
  %11028 = or i1 %11026, %11027
  %11029 = zext i1 %11028 to i8
  %11030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11029, i8* %11030, align 1
  %11031 = trunc i64 %11025 to i32
  %11032 = and i32 %11031, 255
  %11033 = call i32 @llvm.ctpop.i32(i32 %11032)
  %11034 = trunc i32 %11033 to i8
  %11035 = and i8 %11034, 1
  %11036 = xor i8 %11035, 1
  %11037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11036, i8* %11037, align 1
  %11038 = xor i64 %11022, %11021
  %11039 = xor i64 %11038, %11025
  %11040 = lshr i64 %11039, 4
  %11041 = trunc i64 %11040 to i8
  %11042 = and i8 %11041, 1
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11042, i8* %11043, align 1
  %11044 = icmp eq i64 %11025, 0
  %11045 = zext i1 %11044 to i8
  %11046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11045, i8* %11046, align 1
  %11047 = lshr i64 %11025, 63
  %11048 = trunc i64 %11047 to i8
  %11049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11048, i8* %11049, align 1
  %11050 = lshr i64 %11021, 63
  %11051 = lshr i64 %11022, 63
  %11052 = xor i64 %11047, %11050
  %11053 = xor i64 %11047, %11051
  %11054 = add i64 %11052, %11053
  %11055 = icmp eq i64 %11054, 2
  %11056 = zext i1 %11055 to i8
  %11057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11056, i8* %11057, align 1
  store %struct.Memory* %loadMem_406ab1, %struct.Memory** %MEMORY
  %loadMem_406ab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11059 = getelementptr inbounds %struct.GPR, %struct.GPR* %11058, i32 0, i32 33
  %11060 = getelementptr inbounds %struct.Reg, %struct.Reg* %11059, i32 0, i32 0
  %PC.i1571 = bitcast %union.anon* %11060 to i64*
  %11061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11062 = getelementptr inbounds %struct.GPR, %struct.GPR* %11061, i32 0, i32 15
  %11063 = getelementptr inbounds %struct.Reg, %struct.Reg* %11062, i32 0, i32 0
  %RBP.i1572 = bitcast %union.anon* %11063 to i64*
  %11064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11065 = getelementptr inbounds %struct.GPR, %struct.GPR* %11064, i32 0, i32 17
  %11066 = getelementptr inbounds %struct.Reg, %struct.Reg* %11065, i32 0, i32 0
  %R8.i1573 = bitcast %union.anon* %11066 to i64*
  %11067 = load i64, i64* %RBP.i1572
  %11068 = sub i64 %11067, 24
  %11069 = load i64, i64* %PC.i1571
  %11070 = add i64 %11069, 4
  store i64 %11070, i64* %PC.i1571
  %11071 = inttoptr i64 %11068 to i32*
  %11072 = load i32, i32* %11071
  %11073 = sext i32 %11072 to i64
  store i64 %11073, i64* %R8.i1573, align 8
  store %struct.Memory* %loadMem_406ab4, %struct.Memory** %MEMORY
  %loadMem_406ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11075 = getelementptr inbounds %struct.GPR, %struct.GPR* %11074, i32 0, i32 33
  %11076 = getelementptr inbounds %struct.Reg, %struct.Reg* %11075, i32 0, i32 0
  %PC.i1569 = bitcast %union.anon* %11076 to i64*
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11078 = getelementptr inbounds %struct.GPR, %struct.GPR* %11077, i32 0, i32 17
  %11079 = getelementptr inbounds %struct.Reg, %struct.Reg* %11078, i32 0, i32 0
  %R8.i1570 = bitcast %union.anon* %11079 to i64*
  %11080 = load i64, i64* %R8.i1570
  %11081 = load i64, i64* %PC.i1569
  %11082 = add i64 %11081, 4
  store i64 %11082, i64* %PC.i1569
  %11083 = shl i64 %11080, 3
  %11084 = icmp slt i64 %11083, 0
  %11085 = shl i64 %11083, 1
  store i64 %11085, i64* %R8.i1570, align 8
  %11086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11087 = zext i1 %11084 to i8
  store i8 %11087, i8* %11086, align 1
  %11088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11089 = trunc i64 %11085 to i32
  %11090 = and i32 %11089, 254
  %11091 = call i32 @llvm.ctpop.i32(i32 %11090)
  %11092 = trunc i32 %11091 to i8
  %11093 = and i8 %11092, 1
  %11094 = xor i8 %11093, 1
  store i8 %11094, i8* %11088, align 1
  %11095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11095, align 1
  %11096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11097 = icmp eq i64 %11085, 0
  %11098 = zext i1 %11097 to i8
  store i8 %11098, i8* %11096, align 1
  %11099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11100 = lshr i64 %11085, 63
  %11101 = trunc i64 %11100 to i8
  store i8 %11101, i8* %11099, align 1
  %11102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11102, align 1
  store %struct.Memory* %loadMem_406ab8, %struct.Memory** %MEMORY
  %loadMem_406abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11104 = getelementptr inbounds %struct.GPR, %struct.GPR* %11103, i32 0, i32 33
  %11105 = getelementptr inbounds %struct.Reg, %struct.Reg* %11104, i32 0, i32 0
  %PC.i1566 = bitcast %union.anon* %11105 to i64*
  %11106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11107 = getelementptr inbounds %struct.GPR, %struct.GPR* %11106, i32 0, i32 9
  %11108 = getelementptr inbounds %struct.Reg, %struct.Reg* %11107, i32 0, i32 0
  %RSI.i1567 = bitcast %union.anon* %11108 to i64*
  %11109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11110 = getelementptr inbounds %struct.GPR, %struct.GPR* %11109, i32 0, i32 17
  %11111 = getelementptr inbounds %struct.Reg, %struct.Reg* %11110, i32 0, i32 0
  %R8.i1568 = bitcast %union.anon* %11111 to i64*
  %11112 = load i64, i64* %RSI.i1567
  %11113 = load i64, i64* %R8.i1568
  %11114 = load i64, i64* %PC.i1566
  %11115 = add i64 %11114, 3
  store i64 %11115, i64* %PC.i1566
  %11116 = add i64 %11113, %11112
  store i64 %11116, i64* %RSI.i1567, align 8
  %11117 = icmp ult i64 %11116, %11112
  %11118 = icmp ult i64 %11116, %11113
  %11119 = or i1 %11117, %11118
  %11120 = zext i1 %11119 to i8
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11120, i8* %11121, align 1
  %11122 = trunc i64 %11116 to i32
  %11123 = and i32 %11122, 255
  %11124 = call i32 @llvm.ctpop.i32(i32 %11123)
  %11125 = trunc i32 %11124 to i8
  %11126 = and i8 %11125, 1
  %11127 = xor i8 %11126, 1
  %11128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11127, i8* %11128, align 1
  %11129 = xor i64 %11113, %11112
  %11130 = xor i64 %11129, %11116
  %11131 = lshr i64 %11130, 4
  %11132 = trunc i64 %11131 to i8
  %11133 = and i8 %11132, 1
  %11134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11133, i8* %11134, align 1
  %11135 = icmp eq i64 %11116, 0
  %11136 = zext i1 %11135 to i8
  %11137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11136, i8* %11137, align 1
  %11138 = lshr i64 %11116, 63
  %11139 = trunc i64 %11138 to i8
  %11140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11139, i8* %11140, align 1
  %11141 = lshr i64 %11112, 63
  %11142 = lshr i64 %11113, 63
  %11143 = xor i64 %11138, %11141
  %11144 = xor i64 %11138, %11142
  %11145 = add i64 %11143, %11144
  %11146 = icmp eq i64 %11145, 2
  %11147 = zext i1 %11146 to i8
  %11148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11147, i8* %11148, align 1
  store %struct.Memory* %loadMem_406abc, %struct.Memory** %MEMORY
  %loadMem_406abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11150 = getelementptr inbounds %struct.GPR, %struct.GPR* %11149, i32 0, i32 33
  %11151 = getelementptr inbounds %struct.Reg, %struct.Reg* %11150, i32 0, i32 0
  %PC.i1563 = bitcast %union.anon* %11151 to i64*
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11153 = getelementptr inbounds %struct.GPR, %struct.GPR* %11152, i32 0, i32 15
  %11154 = getelementptr inbounds %struct.Reg, %struct.Reg* %11153, i32 0, i32 0
  %RBP.i1564 = bitcast %union.anon* %11154 to i64*
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11156 = getelementptr inbounds %struct.GPR, %struct.GPR* %11155, i32 0, i32 17
  %11157 = getelementptr inbounds %struct.Reg, %struct.Reg* %11156, i32 0, i32 0
  %R8.i1565 = bitcast %union.anon* %11157 to i64*
  %11158 = load i64, i64* %RBP.i1564
  %11159 = sub i64 %11158, 28
  %11160 = load i64, i64* %PC.i1563
  %11161 = add i64 %11160, 4
  store i64 %11161, i64* %PC.i1563
  %11162 = inttoptr i64 %11159 to i32*
  %11163 = load i32, i32* %11162
  %11164 = sext i32 %11163 to i64
  store i64 %11164, i64* %R8.i1565, align 8
  store %struct.Memory* %loadMem_406abf, %struct.Memory** %MEMORY
  %loadMem_406ac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11166 = getelementptr inbounds %struct.GPR, %struct.GPR* %11165, i32 0, i32 33
  %11167 = getelementptr inbounds %struct.Reg, %struct.Reg* %11166, i32 0, i32 0
  %PC.i1559 = bitcast %union.anon* %11167 to i64*
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11169 = getelementptr inbounds %struct.GPR, %struct.GPR* %11168, i32 0, i32 9
  %11170 = getelementptr inbounds %struct.Reg, %struct.Reg* %11169, i32 0, i32 0
  %RSI.i1560 = bitcast %union.anon* %11170 to i64*
  %11171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11172 = getelementptr inbounds %struct.GPR, %struct.GPR* %11171, i32 0, i32 11
  %11173 = getelementptr inbounds %struct.Reg, %struct.Reg* %11172, i32 0, i32 0
  %RDI.i1561 = bitcast %union.anon* %11173 to i64*
  %11174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11175 = getelementptr inbounds %struct.GPR, %struct.GPR* %11174, i32 0, i32 17
  %11176 = getelementptr inbounds %struct.Reg, %struct.Reg* %11175, i32 0, i32 0
  %R8.i1562 = bitcast %union.anon* %11176 to i64*
  %11177 = load i64, i64* %RDI.i1561
  %11178 = load i64, i64* %RSI.i1560
  %11179 = load i64, i64* %R8.i1562
  %11180 = mul i64 %11179, 4
  %11181 = add i64 %11180, %11178
  %11182 = load i64, i64* %PC.i1559
  %11183 = add i64 %11182, 5
  store i64 %11183, i64* %PC.i1559
  %11184 = inttoptr i64 %11181 to i32*
  %11185 = load i32, i32* %11184
  %11186 = shl i64 %11177, 32
  %11187 = ashr exact i64 %11186, 32
  %11188 = sext i32 %11185 to i64
  %11189 = mul i64 %11188, %11187
  %11190 = trunc i64 %11189 to i32
  %11191 = and i64 %11189, 4294967295
  store i64 %11191, i64* %RDI.i1561, align 8
  %11192 = shl i64 %11189, 32
  %11193 = ashr exact i64 %11192, 32
  %11194 = icmp ne i64 %11193, %11189
  %11195 = zext i1 %11194 to i8
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11195, i8* %11196, align 1
  %11197 = and i32 %11190, 255
  %11198 = call i32 @llvm.ctpop.i32(i32 %11197)
  %11199 = trunc i32 %11198 to i8
  %11200 = and i8 %11199, 1
  %11201 = xor i8 %11200, 1
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11201, i8* %11202, align 1
  %11203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11203, align 1
  %11204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11204, align 1
  %11205 = lshr i32 %11190, 31
  %11206 = trunc i32 %11205 to i8
  %11207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11206, i8* %11207, align 1
  %11208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11195, i8* %11208, align 1
  store %struct.Memory* %loadMem_406ac3, %struct.Memory** %MEMORY
  %loadMem_406ac8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11210 = getelementptr inbounds %struct.GPR, %struct.GPR* %11209, i32 0, i32 33
  %11211 = getelementptr inbounds %struct.Reg, %struct.Reg* %11210, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %11211 to i64*
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11213 = getelementptr inbounds %struct.GPR, %struct.GPR* %11212, i32 0, i32 7
  %11214 = getelementptr inbounds %struct.Reg, %struct.Reg* %11213, i32 0, i32 0
  %RDX.i1557 = bitcast %union.anon* %11214 to i64*
  %11215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11216 = getelementptr inbounds %struct.GPR, %struct.GPR* %11215, i32 0, i32 15
  %11217 = getelementptr inbounds %struct.Reg, %struct.Reg* %11216, i32 0, i32 0
  %RBP.i1558 = bitcast %union.anon* %11217 to i64*
  %11218 = load i64, i64* %RDX.i1557
  %11219 = load i64, i64* %RBP.i1558
  %11220 = sub i64 %11219, 104
  %11221 = load i64, i64* %PC.i1556
  %11222 = add i64 %11221, 3
  store i64 %11222, i64* %PC.i1556
  %11223 = trunc i64 %11218 to i32
  %11224 = inttoptr i64 %11220 to i32*
  %11225 = load i32, i32* %11224
  %11226 = sub i32 %11223, %11225
  %11227 = zext i32 %11226 to i64
  store i64 %11227, i64* %RDX.i1557, align 8
  %11228 = icmp ult i32 %11223, %11225
  %11229 = zext i1 %11228 to i8
  %11230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11229, i8* %11230, align 1
  %11231 = and i32 %11226, 255
  %11232 = call i32 @llvm.ctpop.i32(i32 %11231)
  %11233 = trunc i32 %11232 to i8
  %11234 = and i8 %11233, 1
  %11235 = xor i8 %11234, 1
  %11236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11235, i8* %11236, align 1
  %11237 = xor i32 %11225, %11223
  %11238 = xor i32 %11237, %11226
  %11239 = lshr i32 %11238, 4
  %11240 = trunc i32 %11239 to i8
  %11241 = and i8 %11240, 1
  %11242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11241, i8* %11242, align 1
  %11243 = icmp eq i32 %11226, 0
  %11244 = zext i1 %11243 to i8
  %11245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11244, i8* %11245, align 1
  %11246 = lshr i32 %11226, 31
  %11247 = trunc i32 %11246 to i8
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11247, i8* %11248, align 1
  %11249 = lshr i32 %11223, 31
  %11250 = lshr i32 %11225, 31
  %11251 = xor i32 %11250, %11249
  %11252 = xor i32 %11246, %11249
  %11253 = add i32 %11252, %11251
  %11254 = icmp eq i32 %11253, 2
  %11255 = zext i1 %11254 to i8
  %11256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11255, i8* %11256, align 1
  store %struct.Memory* %loadMem_406ac8, %struct.Memory** %MEMORY
  %loadMem_406acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11258 = getelementptr inbounds %struct.GPR, %struct.GPR* %11257, i32 0, i32 33
  %11259 = getelementptr inbounds %struct.Reg, %struct.Reg* %11258, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %11259 to i64*
  %11260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11261 = getelementptr inbounds %struct.GPR, %struct.GPR* %11260, i32 0, i32 5
  %11262 = getelementptr inbounds %struct.Reg, %struct.Reg* %11261, i32 0, i32 0
  %ECX.i1554 = bitcast %union.anon* %11262 to i32*
  %11263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11264 = getelementptr inbounds %struct.GPR, %struct.GPR* %11263, i32 0, i32 15
  %11265 = getelementptr inbounds %struct.Reg, %struct.Reg* %11264, i32 0, i32 0
  %RBP.i1555 = bitcast %union.anon* %11265 to i64*
  %11266 = load i64, i64* %RBP.i1555
  %11267 = sub i64 %11266, 180
  %11268 = load i32, i32* %ECX.i1554
  %11269 = zext i32 %11268 to i64
  %11270 = load i64, i64* %PC.i1553
  %11271 = add i64 %11270, 6
  store i64 %11271, i64* %PC.i1553
  %11272 = inttoptr i64 %11267 to i32*
  store i32 %11268, i32* %11272
  store %struct.Memory* %loadMem_406acb, %struct.Memory** %MEMORY
  %loadMem_406ad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11274 = getelementptr inbounds %struct.GPR, %struct.GPR* %11273, i32 0, i32 33
  %11275 = getelementptr inbounds %struct.Reg, %struct.Reg* %11274, i32 0, i32 0
  %PC.i1550 = bitcast %union.anon* %11275 to i64*
  %11276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11277 = getelementptr inbounds %struct.GPR, %struct.GPR* %11276, i32 0, i32 7
  %11278 = getelementptr inbounds %struct.Reg, %struct.Reg* %11277, i32 0, i32 0
  %EDX.i1551 = bitcast %union.anon* %11278 to i32*
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11280 = getelementptr inbounds %struct.GPR, %struct.GPR* %11279, i32 0, i32 5
  %11281 = getelementptr inbounds %struct.Reg, %struct.Reg* %11280, i32 0, i32 0
  %RCX.i1552 = bitcast %union.anon* %11281 to i64*
  %11282 = load i32, i32* %EDX.i1551
  %11283 = zext i32 %11282 to i64
  %11284 = load i64, i64* %PC.i1550
  %11285 = add i64 %11284, 2
  store i64 %11285, i64* %PC.i1550
  %11286 = and i64 %11283, 4294967295
  store i64 %11286, i64* %RCX.i1552, align 8
  store %struct.Memory* %loadMem_406ad1, %struct.Memory** %MEMORY
  %loadMem_406ad3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11288 = getelementptr inbounds %struct.GPR, %struct.GPR* %11287, i32 0, i32 33
  %11289 = getelementptr inbounds %struct.Reg, %struct.Reg* %11288, i32 0, i32 0
  %PC.i1547 = bitcast %union.anon* %11289 to i64*
  %11290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11291 = getelementptr inbounds %struct.GPR, %struct.GPR* %11290, i32 0, i32 7
  %11292 = getelementptr inbounds %struct.Reg, %struct.Reg* %11291, i32 0, i32 0
  %RDX.i1548 = bitcast %union.anon* %11292 to i64*
  %11293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11294 = getelementptr inbounds %struct.GPR, %struct.GPR* %11293, i32 0, i32 15
  %11295 = getelementptr inbounds %struct.Reg, %struct.Reg* %11294, i32 0, i32 0
  %RBP.i1549 = bitcast %union.anon* %11295 to i64*
  %11296 = load i64, i64* %RBP.i1549
  %11297 = sub i64 %11296, 180
  %11298 = load i64, i64* %PC.i1547
  %11299 = add i64 %11298, 6
  store i64 %11299, i64* %PC.i1547
  %11300 = inttoptr i64 %11297 to i32*
  %11301 = load i32, i32* %11300
  %11302 = zext i32 %11301 to i64
  store i64 %11302, i64* %RDX.i1548, align 8
  store %struct.Memory* %loadMem_406ad3, %struct.Memory** %MEMORY
  %loadMem_406ad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11304 = getelementptr inbounds %struct.GPR, %struct.GPR* %11303, i32 0, i32 33
  %11305 = getelementptr inbounds %struct.Reg, %struct.Reg* %11304, i32 0, i32 0
  %PC.i1544 = bitcast %union.anon* %11305 to i64*
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11307 = getelementptr inbounds %struct.GPR, %struct.GPR* %11306, i32 0, i32 5
  %11308 = getelementptr inbounds %struct.Reg, %struct.Reg* %11307, i32 0, i32 0
  %11309 = bitcast %union.anon* %11308 to %struct.anon.2*
  %CL.i1545 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11309, i32 0, i32 0
  %11310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11311 = getelementptr inbounds %struct.GPR, %struct.GPR* %11310, i32 0, i32 7
  %11312 = getelementptr inbounds %struct.Reg, %struct.Reg* %11311, i32 0, i32 0
  %RDX.i1546 = bitcast %union.anon* %11312 to i64*
  %11313 = load i64, i64* %RDX.i1546
  %11314 = load i8, i8* %CL.i1545
  %11315 = zext i8 %11314 to i64
  %11316 = load i64, i64* %PC.i1544
  %11317 = add i64 %11316, 2
  store i64 %11317, i64* %PC.i1544
  %11318 = trunc i64 %11315 to i5
  switch i5 %11318, label %11325 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %11319
  ]

; <label>:11319:                                  ; preds = %block_.L_406a8d
  %11320 = trunc i64 %11313 to i32
  %11321 = shl i32 %11320, 1
  %11322 = icmp slt i32 %11320, 0
  %11323 = icmp slt i32 %11321, 0
  %11324 = xor i1 %11322, %11323
  br label %11334

; <label>:11325:                                  ; preds = %block_.L_406a8d
  %11326 = and i64 %11315, 31
  %11327 = add i64 %11326, 4294967295
  %11328 = and i64 %11313, 4294967295
  %11329 = and i64 %11327, 4294967295
  %11330 = shl i64 %11328, %11329
  %11331 = trunc i64 %11330 to i32
  %11332 = icmp slt i32 %11331, 0
  %11333 = shl i32 %11331, 1
  br label %11334

; <label>:11334:                                  ; preds = %11325, %11319
  %11335 = phi i1 [ %11322, %11319 ], [ %11332, %11325 ]
  %11336 = phi i1 [ %11324, %11319 ], [ false, %11325 ]
  %11337 = phi i32 [ %11321, %11319 ], [ %11333, %11325 ]
  %11338 = zext i32 %11337 to i64
  store i64 %11338, i64* %RDX.i1546, align 8
  %11339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11340 = zext i1 %11335 to i8
  store i8 %11340, i8* %11339, align 1
  %11341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11342 = and i32 %11337, 254
  %11343 = call i32 @llvm.ctpop.i32(i32 %11342)
  %11344 = trunc i32 %11343 to i8
  %11345 = and i8 %11344, 1
  %11346 = xor i8 %11345, 1
  store i8 %11346, i8* %11341, align 1
  %11347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11347, align 1
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11349 = icmp eq i32 %11337, 0
  %11350 = zext i1 %11349 to i8
  store i8 %11350, i8* %11348, align 1
  %11351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11352 = lshr i32 %11337, 31
  %11353 = trunc i32 %11352 to i8
  store i8 %11353, i8* %11351, align 1
  %11354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11355 = zext i1 %11336 to i8
  store i8 %11355, i8* %11354, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %block_.L_406a8d, %11334
  store %struct.Memory* %loadMem_406ad9, %struct.Memory** %MEMORY
  %loadMem_406adb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11357 = getelementptr inbounds %struct.GPR, %struct.GPR* %11356, i32 0, i32 33
  %11358 = getelementptr inbounds %struct.Reg, %struct.Reg* %11357, i32 0, i32 0
  %PC.i1541 = bitcast %union.anon* %11358 to i64*
  %11359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11360 = getelementptr inbounds %struct.GPR, %struct.GPR* %11359, i32 0, i32 7
  %11361 = getelementptr inbounds %struct.Reg, %struct.Reg* %11360, i32 0, i32 0
  %EDX.i1542 = bitcast %union.anon* %11361 to i32*
  %11362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11363 = getelementptr inbounds %struct.GPR, %struct.GPR* %11362, i32 0, i32 11
  %11364 = getelementptr inbounds %struct.Reg, %struct.Reg* %11363, i32 0, i32 0
  %RDI.i1543 = bitcast %union.anon* %11364 to i64*
  %11365 = load i64, i64* %RDI.i1543
  %11366 = load i32, i32* %EDX.i1542
  %11367 = zext i32 %11366 to i64
  %11368 = load i64, i64* %PC.i1541
  %11369 = add i64 %11368, 2
  store i64 %11369, i64* %PC.i1541
  %11370 = trunc i64 %11365 to i32
  %11371 = add i32 %11366, %11370
  %11372 = zext i32 %11371 to i64
  store i64 %11372, i64* %RDI.i1543, align 8
  %11373 = icmp ult i32 %11371, %11370
  %11374 = icmp ult i32 %11371, %11366
  %11375 = or i1 %11373, %11374
  %11376 = zext i1 %11375 to i8
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11376, i8* %11377, align 1
  %11378 = and i32 %11371, 255
  %11379 = call i32 @llvm.ctpop.i32(i32 %11378)
  %11380 = trunc i32 %11379 to i8
  %11381 = and i8 %11380, 1
  %11382 = xor i8 %11381, 1
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11382, i8* %11383, align 1
  %11384 = xor i64 %11367, %11365
  %11385 = trunc i64 %11384 to i32
  %11386 = xor i32 %11385, %11371
  %11387 = lshr i32 %11386, 4
  %11388 = trunc i32 %11387 to i8
  %11389 = and i8 %11388, 1
  %11390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11389, i8* %11390, align 1
  %11391 = icmp eq i32 %11371, 0
  %11392 = zext i1 %11391 to i8
  %11393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11392, i8* %11393, align 1
  %11394 = lshr i32 %11371, 31
  %11395 = trunc i32 %11394 to i8
  %11396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11395, i8* %11396, align 1
  %11397 = lshr i32 %11370, 31
  %11398 = lshr i32 %11366, 31
  %11399 = xor i32 %11394, %11397
  %11400 = xor i32 %11394, %11398
  %11401 = add i32 %11399, %11400
  %11402 = icmp eq i32 %11401, 2
  %11403 = zext i1 %11402 to i8
  %11404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11403, i8* %11404, align 1
  store %struct.Memory* %loadMem_406adb, %struct.Memory** %MEMORY
  %loadMem_406add = load %struct.Memory*, %struct.Memory** %MEMORY
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11406 = getelementptr inbounds %struct.GPR, %struct.GPR* %11405, i32 0, i32 33
  %11407 = getelementptr inbounds %struct.Reg, %struct.Reg* %11406, i32 0, i32 0
  %PC.i1538 = bitcast %union.anon* %11407 to i64*
  %11408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11409 = getelementptr inbounds %struct.GPR, %struct.GPR* %11408, i32 0, i32 1
  %11410 = getelementptr inbounds %struct.Reg, %struct.Reg* %11409, i32 0, i32 0
  %RAX.i1539 = bitcast %union.anon* %11410 to i64*
  %11411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11412 = getelementptr inbounds %struct.GPR, %struct.GPR* %11411, i32 0, i32 15
  %11413 = getelementptr inbounds %struct.Reg, %struct.Reg* %11412, i32 0, i32 0
  %RBP.i1540 = bitcast %union.anon* %11413 to i64*
  %11414 = load i64, i64* %RAX.i1539
  %11415 = load i64, i64* %RBP.i1540
  %11416 = sub i64 %11415, 104
  %11417 = load i64, i64* %PC.i1538
  %11418 = add i64 %11417, 3
  store i64 %11418, i64* %PC.i1538
  %11419 = trunc i64 %11414 to i32
  %11420 = inttoptr i64 %11416 to i32*
  %11421 = load i32, i32* %11420
  %11422 = sub i32 %11419, %11421
  %11423 = zext i32 %11422 to i64
  store i64 %11423, i64* %RAX.i1539, align 8
  %11424 = icmp ult i32 %11419, %11421
  %11425 = zext i1 %11424 to i8
  %11426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11425, i8* %11426, align 1
  %11427 = and i32 %11422, 255
  %11428 = call i32 @llvm.ctpop.i32(i32 %11427)
  %11429 = trunc i32 %11428 to i8
  %11430 = and i8 %11429, 1
  %11431 = xor i8 %11430, 1
  %11432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11431, i8* %11432, align 1
  %11433 = xor i32 %11421, %11419
  %11434 = xor i32 %11433, %11422
  %11435 = lshr i32 %11434, 4
  %11436 = trunc i32 %11435 to i8
  %11437 = and i8 %11436, 1
  %11438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11437, i8* %11438, align 1
  %11439 = icmp eq i32 %11422, 0
  %11440 = zext i1 %11439 to i8
  %11441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11440, i8* %11441, align 1
  %11442 = lshr i32 %11422, 31
  %11443 = trunc i32 %11442 to i8
  %11444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11443, i8* %11444, align 1
  %11445 = lshr i32 %11419, 31
  %11446 = lshr i32 %11421, 31
  %11447 = xor i32 %11446, %11445
  %11448 = xor i32 %11442, %11445
  %11449 = add i32 %11448, %11447
  %11450 = icmp eq i32 %11449, 2
  %11451 = zext i1 %11450 to i8
  %11452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11451, i8* %11452, align 1
  store %struct.Memory* %loadMem_406add, %struct.Memory** %MEMORY
  %loadMem_406ae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11454 = getelementptr inbounds %struct.GPR, %struct.GPR* %11453, i32 0, i32 33
  %11455 = getelementptr inbounds %struct.Reg, %struct.Reg* %11454, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %11455 to i64*
  %11456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11457 = getelementptr inbounds %struct.GPR, %struct.GPR* %11456, i32 0, i32 1
  %11458 = getelementptr inbounds %struct.Reg, %struct.Reg* %11457, i32 0, i32 0
  %EAX.i1536 = bitcast %union.anon* %11458 to i32*
  %11459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11460 = getelementptr inbounds %struct.GPR, %struct.GPR* %11459, i32 0, i32 5
  %11461 = getelementptr inbounds %struct.Reg, %struct.Reg* %11460, i32 0, i32 0
  %RCX.i1537 = bitcast %union.anon* %11461 to i64*
  %11462 = load i32, i32* %EAX.i1536
  %11463 = zext i32 %11462 to i64
  %11464 = load i64, i64* %PC.i1535
  %11465 = add i64 %11464, 2
  store i64 %11465, i64* %PC.i1535
  %11466 = and i64 %11463, 4294967295
  store i64 %11466, i64* %RCX.i1537, align 8
  store %struct.Memory* %loadMem_406ae0, %struct.Memory** %MEMORY
  %loadMem_406ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11468 = getelementptr inbounds %struct.GPR, %struct.GPR* %11467, i32 0, i32 33
  %11469 = getelementptr inbounds %struct.Reg, %struct.Reg* %11468, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %11469 to i64*
  %11470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11471 = getelementptr inbounds %struct.GPR, %struct.GPR* %11470, i32 0, i32 5
  %11472 = getelementptr inbounds %struct.Reg, %struct.Reg* %11471, i32 0, i32 0
  %11473 = bitcast %union.anon* %11472 to %struct.anon.2*
  %CL.i1533 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11473, i32 0, i32 0
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11475 = getelementptr inbounds %struct.GPR, %struct.GPR* %11474, i32 0, i32 11
  %11476 = getelementptr inbounds %struct.Reg, %struct.Reg* %11475, i32 0, i32 0
  %RDI.i1534 = bitcast %union.anon* %11476 to i64*
  %11477 = load i64, i64* %RDI.i1534
  %11478 = load i8, i8* %CL.i1533
  %11479 = zext i8 %11478 to i64
  %11480 = load i64, i64* %PC.i1532
  %11481 = add i64 %11480, 2
  store i64 %11481, i64* %PC.i1532
  %11482 = trunc i64 %11479 to i5
  switch i5 %11482, label %11486 [
    i5 0, label %routine_sarl__cl___edi.exit
    i5 1, label %11483
  ]

; <label>:11483:                                  ; preds = %routine_shll__cl___edx.exit
  %11484 = shl i64 %11477, 32
  %11485 = ashr i64 %11484, 33
  br label %11493

; <label>:11486:                                  ; preds = %routine_shll__cl___edx.exit
  %11487 = and i64 %11479, 31
  %11488 = add i64 %11487, -1
  %11489 = shl i64 %11477, 32
  %11490 = ashr exact i64 %11489, 32
  %11491 = ashr i64 %11490, %11488
  %11492 = lshr i64 %11491, 1
  br label %11493

; <label>:11493:                                  ; preds = %11486, %11483
  %11494 = phi i64 [ %11492, %11486 ], [ %11485, %11483 ]
  %11495 = phi i64 [ %11491, %11486 ], [ %11477, %11483 ]
  %11496 = trunc i64 %11495 to i8
  %11497 = and i8 %11496, 1
  %11498 = trunc i64 %11494 to i32
  %11499 = and i64 %11494, 4294967295
  store i64 %11499, i64* %RDI.i1534, align 8
  %11500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11497, i8* %11500, align 1
  %11501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11502 = and i32 %11498, 255
  %11503 = call i32 @llvm.ctpop.i32(i32 %11502)
  %11504 = trunc i32 %11503 to i8
  %11505 = and i8 %11504, 1
  %11506 = xor i8 %11505, 1
  store i8 %11506, i8* %11501, align 1
  %11507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11507, align 1
  %11508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11509 = icmp eq i32 %11498, 0
  %11510 = zext i1 %11509 to i8
  store i8 %11510, i8* %11508, align 1
  %11511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11512 = lshr i32 %11498, 31
  %11513 = trunc i32 %11512 to i8
  store i8 %11513, i8* %11511, align 1
  %11514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11514, align 1
  br label %routine_sarl__cl___edi.exit

routine_sarl__cl___edi.exit:                      ; preds = %routine_shll__cl___edx.exit, %11493
  store %struct.Memory* %loadMem_406ae2, %struct.Memory** %MEMORY
  %loadMem_406ae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11516 = getelementptr inbounds %struct.GPR, %struct.GPR* %11515, i32 0, i32 33
  %11517 = getelementptr inbounds %struct.Reg, %struct.Reg* %11516, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %11517 to i64*
  %11518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11519 = getelementptr inbounds %struct.GPR, %struct.GPR* %11518, i32 0, i32 11
  %11520 = getelementptr inbounds %struct.Reg, %struct.Reg* %11519, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %11520 to i32*
  %11521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11522 = getelementptr inbounds %struct.GPR, %struct.GPR* %11521, i32 0, i32 15
  %11523 = getelementptr inbounds %struct.Reg, %struct.Reg* %11522, i32 0, i32 0
  %RBP.i1531 = bitcast %union.anon* %11523 to i64*
  %11524 = load i64, i64* %RBP.i1531
  %11525 = sub i64 %11524, 40
  %11526 = load i32, i32* %EDI.i
  %11527 = zext i32 %11526 to i64
  %11528 = load i64, i64* %PC.i1530
  %11529 = add i64 %11528, 3
  store i64 %11529, i64* %PC.i1530
  %11530 = inttoptr i64 %11525 to i32*
  store i32 %11526, i32* %11530
  store %struct.Memory* %loadMem_406ae4, %struct.Memory** %MEMORY
  br label %block_.L_406ae7

block_.L_406ae7:                                  ; preds = %routine_sarl__cl___edi.exit, %routine_sarl__cl___edi.exit1600
  %loadMem_406ae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11532 = getelementptr inbounds %struct.GPR, %struct.GPR* %11531, i32 0, i32 33
  %11533 = getelementptr inbounds %struct.Reg, %struct.Reg* %11532, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %11533 to i64*
  %11534 = load i64, i64* %PC.i1529
  %11535 = add i64 %11534, 161
  %11536 = load i64, i64* %PC.i1529
  %11537 = add i64 %11536, 5
  store i64 %11537, i64* %PC.i1529
  %11538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11535, i64* %11538, align 8
  store %struct.Memory* %loadMem_406ae7, %struct.Memory** %MEMORY
  br label %block_.L_406b88

block_.L_406aec:                                  ; preds = %block_.L_406a1a
  %loadMem_406aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %11539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11540 = getelementptr inbounds %struct.GPR, %struct.GPR* %11539, i32 0, i32 33
  %11541 = getelementptr inbounds %struct.Reg, %struct.Reg* %11540, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %11541 to i64*
  %11542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11543 = getelementptr inbounds %struct.GPR, %struct.GPR* %11542, i32 0, i32 15
  %11544 = getelementptr inbounds %struct.Reg, %struct.Reg* %11543, i32 0, i32 0
  %RBP.i1528 = bitcast %union.anon* %11544 to i64*
  %11545 = load i64, i64* %RBP.i1528
  %11546 = sub i64 %11545, 20
  %11547 = load i64, i64* %PC.i1527
  %11548 = add i64 %11547, 4
  store i64 %11548, i64* %PC.i1527
  %11549 = inttoptr i64 %11546 to i32*
  %11550 = load i32, i32* %11549
  %11551 = sub i32 %11550, 1
  %11552 = icmp ult i32 %11550, 1
  %11553 = zext i1 %11552 to i8
  %11554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11553, i8* %11554, align 1
  %11555 = and i32 %11551, 255
  %11556 = call i32 @llvm.ctpop.i32(i32 %11555)
  %11557 = trunc i32 %11556 to i8
  %11558 = and i8 %11557, 1
  %11559 = xor i8 %11558, 1
  %11560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11559, i8* %11560, align 1
  %11561 = xor i32 %11550, 1
  %11562 = xor i32 %11561, %11551
  %11563 = lshr i32 %11562, 4
  %11564 = trunc i32 %11563 to i8
  %11565 = and i8 %11564, 1
  %11566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11565, i8* %11566, align 1
  %11567 = icmp eq i32 %11551, 0
  %11568 = zext i1 %11567 to i8
  %11569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11568, i8* %11569, align 1
  %11570 = lshr i32 %11551, 31
  %11571 = trunc i32 %11570 to i8
  %11572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11571, i8* %11572, align 1
  %11573 = lshr i32 %11550, 31
  %11574 = xor i32 %11570, %11573
  %11575 = add i32 %11574, %11573
  %11576 = icmp eq i32 %11575, 2
  %11577 = zext i1 %11576 to i8
  %11578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11577, i8* %11578, align 1
  store %struct.Memory* %loadMem_406aec, %struct.Memory** %MEMORY
  %loadMem_406af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11580 = getelementptr inbounds %struct.GPR, %struct.GPR* %11579, i32 0, i32 33
  %11581 = getelementptr inbounds %struct.Reg, %struct.Reg* %11580, i32 0, i32 0
  %PC.i1526 = bitcast %union.anon* %11581 to i64*
  %11582 = load i64, i64* %PC.i1526
  %11583 = add i64 %11582, 79
  %11584 = load i64, i64* %PC.i1526
  %11585 = add i64 %11584, 6
  %11586 = load i64, i64* %PC.i1526
  %11587 = add i64 %11586, 6
  store i64 %11587, i64* %PC.i1526
  %11588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11589 = load i8, i8* %11588, align 1
  %11590 = icmp eq i8 %11589, 0
  %11591 = zext i1 %11590 to i8
  store i8 %11591, i8* %BRANCH_TAKEN, align 1
  %11592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11593 = select i1 %11590, i64 %11583, i64 %11585
  store i64 %11593, i64* %11592, align 8
  store %struct.Memory* %loadMem_406af0, %struct.Memory** %MEMORY
  %loadBr_406af0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406af0 = icmp eq i8 %loadBr_406af0, 1
  br i1 %cmpBr_406af0, label %block_.L_406b3f, label %block_406af6

block_406af6:                                     ; preds = %block_.L_406aec
  %loadMem_406af6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11595 = getelementptr inbounds %struct.GPR, %struct.GPR* %11594, i32 0, i32 33
  %11596 = getelementptr inbounds %struct.Reg, %struct.Reg* %11595, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %11596 to i64*
  %11597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11598 = getelementptr inbounds %struct.GPR, %struct.GPR* %11597, i32 0, i32 1
  %11599 = getelementptr inbounds %struct.Reg, %struct.Reg* %11598, i32 0, i32 0
  %RAX.i1525 = bitcast %union.anon* %11599 to i64*
  %11600 = load i64, i64* %PC.i1524
  %11601 = add i64 %11600, 10
  store i64 %11601, i64* %PC.i1524
  store i64 ptrtoint (%G__0x70d010_type* @G__0x70d010 to i64), i64* %RAX.i1525, align 8
  store %struct.Memory* %loadMem_406af6, %struct.Memory** %MEMORY
  %loadMem_406b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11603 = getelementptr inbounds %struct.GPR, %struct.GPR* %11602, i32 0, i32 33
  %11604 = getelementptr inbounds %struct.Reg, %struct.Reg* %11603, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %11604 to i64*
  %11605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11606 = getelementptr inbounds %struct.GPR, %struct.GPR* %11605, i32 0, i32 5
  %11607 = getelementptr inbounds %struct.Reg, %struct.Reg* %11606, i32 0, i32 0
  %RCX.i1522 = bitcast %union.anon* %11607 to i64*
  %11608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11609 = getelementptr inbounds %struct.GPR, %struct.GPR* %11608, i32 0, i32 15
  %11610 = getelementptr inbounds %struct.Reg, %struct.Reg* %11609, i32 0, i32 0
  %RBP.i1523 = bitcast %union.anon* %11610 to i64*
  %11611 = load i64, i64* %RBP.i1523
  %11612 = sub i64 %11611, 88
  %11613 = load i64, i64* %PC.i1521
  %11614 = add i64 %11613, 3
  store i64 %11614, i64* %PC.i1521
  %11615 = inttoptr i64 %11612 to i32*
  %11616 = load i32, i32* %11615
  %11617 = zext i32 %11616 to i64
  store i64 %11617, i64* %RCX.i1522, align 8
  store %struct.Memory* %loadMem_406b00, %struct.Memory** %MEMORY
  %loadMem_406b03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11619 = getelementptr inbounds %struct.GPR, %struct.GPR* %11618, i32 0, i32 33
  %11620 = getelementptr inbounds %struct.Reg, %struct.Reg* %11619, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %11620 to i64*
  %11621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11622 = getelementptr inbounds %struct.GPR, %struct.GPR* %11621, i32 0, i32 7
  %11623 = getelementptr inbounds %struct.Reg, %struct.Reg* %11622, i32 0, i32 0
  %RDX.i1519 = bitcast %union.anon* %11623 to i64*
  %11624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11625 = getelementptr inbounds %struct.GPR, %struct.GPR* %11624, i32 0, i32 15
  %11626 = getelementptr inbounds %struct.Reg, %struct.Reg* %11625, i32 0, i32 0
  %RBP.i1520 = bitcast %union.anon* %11626 to i64*
  %11627 = load i64, i64* %RBP.i1520
  %11628 = sub i64 %11627, 108
  %11629 = load i64, i64* %PC.i1518
  %11630 = add i64 %11629, 4
  store i64 %11630, i64* %PC.i1518
  %11631 = inttoptr i64 %11628 to i32*
  %11632 = load i32, i32* %11631
  %11633 = sext i32 %11632 to i64
  store i64 %11633, i64* %RDX.i1519, align 8
  store %struct.Memory* %loadMem_406b03, %struct.Memory** %MEMORY
  %loadMem_406b07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11635 = getelementptr inbounds %struct.GPR, %struct.GPR* %11634, i32 0, i32 33
  %11636 = getelementptr inbounds %struct.Reg, %struct.Reg* %11635, i32 0, i32 0
  %PC.i1516 = bitcast %union.anon* %11636 to i64*
  %11637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11638 = getelementptr inbounds %struct.GPR, %struct.GPR* %11637, i32 0, i32 7
  %11639 = getelementptr inbounds %struct.Reg, %struct.Reg* %11638, i32 0, i32 0
  %RDX.i1517 = bitcast %union.anon* %11639 to i64*
  %11640 = load i64, i64* %RDX.i1517
  %11641 = load i64, i64* %PC.i1516
  %11642 = add i64 %11641, 4
  store i64 %11642, i64* %PC.i1516
  %11643 = shl i64 %11640, 5
  %11644 = icmp slt i64 %11643, 0
  %11645 = shl i64 %11643, 1
  store i64 %11645, i64* %RDX.i1517, align 8
  %11646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11647 = zext i1 %11644 to i8
  store i8 %11647, i8* %11646, align 1
  %11648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11649 = trunc i64 %11645 to i32
  %11650 = and i32 %11649, 254
  %11651 = call i32 @llvm.ctpop.i32(i32 %11650)
  %11652 = trunc i32 %11651 to i8
  %11653 = and i8 %11652, 1
  %11654 = xor i8 %11653, 1
  store i8 %11654, i8* %11648, align 1
  %11655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11655, align 1
  %11656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11657 = icmp eq i64 %11645, 0
  %11658 = zext i1 %11657 to i8
  store i8 %11658, i8* %11656, align 1
  %11659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11660 = lshr i64 %11645, 63
  %11661 = trunc i64 %11660 to i8
  store i8 %11661, i8* %11659, align 1
  %11662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11662, align 1
  store %struct.Memory* %loadMem_406b07, %struct.Memory** %MEMORY
  %loadMem_406b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11664 = getelementptr inbounds %struct.GPR, %struct.GPR* %11663, i32 0, i32 33
  %11665 = getelementptr inbounds %struct.Reg, %struct.Reg* %11664, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %11665 to i64*
  %11666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11667 = getelementptr inbounds %struct.GPR, %struct.GPR* %11666, i32 0, i32 1
  %11668 = getelementptr inbounds %struct.Reg, %struct.Reg* %11667, i32 0, i32 0
  %RAX.i1514 = bitcast %union.anon* %11668 to i64*
  %11669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11670 = getelementptr inbounds %struct.GPR, %struct.GPR* %11669, i32 0, i32 7
  %11671 = getelementptr inbounds %struct.Reg, %struct.Reg* %11670, i32 0, i32 0
  %RDX.i1515 = bitcast %union.anon* %11671 to i64*
  %11672 = load i64, i64* %RAX.i1514
  %11673 = load i64, i64* %RDX.i1515
  %11674 = load i64, i64* %PC.i1513
  %11675 = add i64 %11674, 3
  store i64 %11675, i64* %PC.i1513
  %11676 = add i64 %11673, %11672
  store i64 %11676, i64* %RAX.i1514, align 8
  %11677 = icmp ult i64 %11676, %11672
  %11678 = icmp ult i64 %11676, %11673
  %11679 = or i1 %11677, %11678
  %11680 = zext i1 %11679 to i8
  %11681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11680, i8* %11681, align 1
  %11682 = trunc i64 %11676 to i32
  %11683 = and i32 %11682, 255
  %11684 = call i32 @llvm.ctpop.i32(i32 %11683)
  %11685 = trunc i32 %11684 to i8
  %11686 = and i8 %11685, 1
  %11687 = xor i8 %11686, 1
  %11688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11687, i8* %11688, align 1
  %11689 = xor i64 %11673, %11672
  %11690 = xor i64 %11689, %11676
  %11691 = lshr i64 %11690, 4
  %11692 = trunc i64 %11691 to i8
  %11693 = and i8 %11692, 1
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11693, i8* %11694, align 1
  %11695 = icmp eq i64 %11676, 0
  %11696 = zext i1 %11695 to i8
  %11697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11696, i8* %11697, align 1
  %11698 = lshr i64 %11676, 63
  %11699 = trunc i64 %11698 to i8
  %11700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11699, i8* %11700, align 1
  %11701 = lshr i64 %11672, 63
  %11702 = lshr i64 %11673, 63
  %11703 = xor i64 %11698, %11701
  %11704 = xor i64 %11698, %11702
  %11705 = add i64 %11703, %11704
  %11706 = icmp eq i64 %11705, 2
  %11707 = zext i1 %11706 to i8
  %11708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11707, i8* %11708, align 1
  store %struct.Memory* %loadMem_406b0b, %struct.Memory** %MEMORY
  %loadMem_406b0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11710 = getelementptr inbounds %struct.GPR, %struct.GPR* %11709, i32 0, i32 33
  %11711 = getelementptr inbounds %struct.Reg, %struct.Reg* %11710, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %11711 to i64*
  %11712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11713 = getelementptr inbounds %struct.GPR, %struct.GPR* %11712, i32 0, i32 7
  %11714 = getelementptr inbounds %struct.Reg, %struct.Reg* %11713, i32 0, i32 0
  %RDX.i1511 = bitcast %union.anon* %11714 to i64*
  %11715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11716 = getelementptr inbounds %struct.GPR, %struct.GPR* %11715, i32 0, i32 15
  %11717 = getelementptr inbounds %struct.Reg, %struct.Reg* %11716, i32 0, i32 0
  %RBP.i1512 = bitcast %union.anon* %11717 to i64*
  %11718 = load i64, i64* %RBP.i1512
  %11719 = sub i64 %11718, 24
  %11720 = load i64, i64* %PC.i1510
  %11721 = add i64 %11720, 4
  store i64 %11721, i64* %PC.i1510
  %11722 = inttoptr i64 %11719 to i32*
  %11723 = load i32, i32* %11722
  %11724 = sext i32 %11723 to i64
  store i64 %11724, i64* %RDX.i1511, align 8
  store %struct.Memory* %loadMem_406b0e, %struct.Memory** %MEMORY
  %loadMem_406b12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11726 = getelementptr inbounds %struct.GPR, %struct.GPR* %11725, i32 0, i32 33
  %11727 = getelementptr inbounds %struct.Reg, %struct.Reg* %11726, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %11727 to i64*
  %11728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11729 = getelementptr inbounds %struct.GPR, %struct.GPR* %11728, i32 0, i32 7
  %11730 = getelementptr inbounds %struct.Reg, %struct.Reg* %11729, i32 0, i32 0
  %RDX.i1509 = bitcast %union.anon* %11730 to i64*
  %11731 = load i64, i64* %RDX.i1509
  %11732 = load i64, i64* %PC.i1508
  %11733 = add i64 %11732, 4
  store i64 %11733, i64* %PC.i1508
  %11734 = shl i64 %11731, 3
  %11735 = icmp slt i64 %11734, 0
  %11736 = shl i64 %11734, 1
  store i64 %11736, i64* %RDX.i1509, align 8
  %11737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11738 = zext i1 %11735 to i8
  store i8 %11738, i8* %11737, align 1
  %11739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11740 = trunc i64 %11736 to i32
  %11741 = and i32 %11740, 254
  %11742 = call i32 @llvm.ctpop.i32(i32 %11741)
  %11743 = trunc i32 %11742 to i8
  %11744 = and i8 %11743, 1
  %11745 = xor i8 %11744, 1
  store i8 %11745, i8* %11739, align 1
  %11746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11746, align 1
  %11747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11748 = icmp eq i64 %11736, 0
  %11749 = zext i1 %11748 to i8
  store i8 %11749, i8* %11747, align 1
  %11750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11751 = lshr i64 %11736, 63
  %11752 = trunc i64 %11751 to i8
  store i8 %11752, i8* %11750, align 1
  %11753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11753, align 1
  store %struct.Memory* %loadMem_406b12, %struct.Memory** %MEMORY
  %loadMem_406b16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11755 = getelementptr inbounds %struct.GPR, %struct.GPR* %11754, i32 0, i32 33
  %11756 = getelementptr inbounds %struct.Reg, %struct.Reg* %11755, i32 0, i32 0
  %PC.i1505 = bitcast %union.anon* %11756 to i64*
  %11757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11758 = getelementptr inbounds %struct.GPR, %struct.GPR* %11757, i32 0, i32 1
  %11759 = getelementptr inbounds %struct.Reg, %struct.Reg* %11758, i32 0, i32 0
  %RAX.i1506 = bitcast %union.anon* %11759 to i64*
  %11760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11761 = getelementptr inbounds %struct.GPR, %struct.GPR* %11760, i32 0, i32 7
  %11762 = getelementptr inbounds %struct.Reg, %struct.Reg* %11761, i32 0, i32 0
  %RDX.i1507 = bitcast %union.anon* %11762 to i64*
  %11763 = load i64, i64* %RAX.i1506
  %11764 = load i64, i64* %RDX.i1507
  %11765 = load i64, i64* %PC.i1505
  %11766 = add i64 %11765, 3
  store i64 %11766, i64* %PC.i1505
  %11767 = add i64 %11764, %11763
  store i64 %11767, i64* %RAX.i1506, align 8
  %11768 = icmp ult i64 %11767, %11763
  %11769 = icmp ult i64 %11767, %11764
  %11770 = or i1 %11768, %11769
  %11771 = zext i1 %11770 to i8
  %11772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11771, i8* %11772, align 1
  %11773 = trunc i64 %11767 to i32
  %11774 = and i32 %11773, 255
  %11775 = call i32 @llvm.ctpop.i32(i32 %11774)
  %11776 = trunc i32 %11775 to i8
  %11777 = and i8 %11776, 1
  %11778 = xor i8 %11777, 1
  %11779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11778, i8* %11779, align 1
  %11780 = xor i64 %11764, %11763
  %11781 = xor i64 %11780, %11767
  %11782 = lshr i64 %11781, 4
  %11783 = trunc i64 %11782 to i8
  %11784 = and i8 %11783, 1
  %11785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11784, i8* %11785, align 1
  %11786 = icmp eq i64 %11767, 0
  %11787 = zext i1 %11786 to i8
  %11788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11787, i8* %11788, align 1
  %11789 = lshr i64 %11767, 63
  %11790 = trunc i64 %11789 to i8
  %11791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11790, i8* %11791, align 1
  %11792 = lshr i64 %11763, 63
  %11793 = lshr i64 %11764, 63
  %11794 = xor i64 %11789, %11792
  %11795 = xor i64 %11789, %11793
  %11796 = add i64 %11794, %11795
  %11797 = icmp eq i64 %11796, 2
  %11798 = zext i1 %11797 to i8
  %11799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11798, i8* %11799, align 1
  store %struct.Memory* %loadMem_406b16, %struct.Memory** %MEMORY
  %loadMem_406b19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11801 = getelementptr inbounds %struct.GPR, %struct.GPR* %11800, i32 0, i32 33
  %11802 = getelementptr inbounds %struct.Reg, %struct.Reg* %11801, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %11802 to i64*
  %11803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11804 = getelementptr inbounds %struct.GPR, %struct.GPR* %11803, i32 0, i32 7
  %11805 = getelementptr inbounds %struct.Reg, %struct.Reg* %11804, i32 0, i32 0
  %RDX.i1503 = bitcast %union.anon* %11805 to i64*
  %11806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11807 = getelementptr inbounds %struct.GPR, %struct.GPR* %11806, i32 0, i32 15
  %11808 = getelementptr inbounds %struct.Reg, %struct.Reg* %11807, i32 0, i32 0
  %RBP.i1504 = bitcast %union.anon* %11808 to i64*
  %11809 = load i64, i64* %RBP.i1504
  %11810 = sub i64 %11809, 28
  %11811 = load i64, i64* %PC.i1502
  %11812 = add i64 %11811, 4
  store i64 %11812, i64* %PC.i1502
  %11813 = inttoptr i64 %11810 to i32*
  %11814 = load i32, i32* %11813
  %11815 = sext i32 %11814 to i64
  store i64 %11815, i64* %RDX.i1503, align 8
  store %struct.Memory* %loadMem_406b19, %struct.Memory** %MEMORY
  %loadMem_406b1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11817 = getelementptr inbounds %struct.GPR, %struct.GPR* %11816, i32 0, i32 33
  %11818 = getelementptr inbounds %struct.Reg, %struct.Reg* %11817, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %11818 to i64*
  %11819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11820 = getelementptr inbounds %struct.GPR, %struct.GPR* %11819, i32 0, i32 1
  %11821 = getelementptr inbounds %struct.Reg, %struct.Reg* %11820, i32 0, i32 0
  %RAX.i1499 = bitcast %union.anon* %11821 to i64*
  %11822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11823 = getelementptr inbounds %struct.GPR, %struct.GPR* %11822, i32 0, i32 5
  %11824 = getelementptr inbounds %struct.Reg, %struct.Reg* %11823, i32 0, i32 0
  %RCX.i1500 = bitcast %union.anon* %11824 to i64*
  %11825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11826 = getelementptr inbounds %struct.GPR, %struct.GPR* %11825, i32 0, i32 7
  %11827 = getelementptr inbounds %struct.Reg, %struct.Reg* %11826, i32 0, i32 0
  %RDX.i1501 = bitcast %union.anon* %11827 to i64*
  %11828 = load i64, i64* %RCX.i1500
  %11829 = load i64, i64* %RAX.i1499
  %11830 = load i64, i64* %RDX.i1501
  %11831 = mul i64 %11830, 4
  %11832 = add i64 %11831, %11829
  %11833 = load i64, i64* %PC.i1498
  %11834 = add i64 %11833, 4
  store i64 %11834, i64* %PC.i1498
  %11835 = inttoptr i64 %11832 to i32*
  %11836 = load i32, i32* %11835
  %11837 = shl i64 %11828, 32
  %11838 = ashr exact i64 %11837, 32
  %11839 = sext i32 %11836 to i64
  %11840 = mul i64 %11839, %11838
  %11841 = trunc i64 %11840 to i32
  %11842 = and i64 %11840, 4294967295
  store i64 %11842, i64* %RCX.i1500, align 8
  %11843 = shl i64 %11840, 32
  %11844 = ashr exact i64 %11843, 32
  %11845 = icmp ne i64 %11844, %11840
  %11846 = zext i1 %11845 to i8
  %11847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11846, i8* %11847, align 1
  %11848 = and i32 %11841, 255
  %11849 = call i32 @llvm.ctpop.i32(i32 %11848)
  %11850 = trunc i32 %11849 to i8
  %11851 = and i8 %11850, 1
  %11852 = xor i8 %11851, 1
  %11853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11852, i8* %11853, align 1
  %11854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11854, align 1
  %11855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11855, align 1
  %11856 = lshr i32 %11841, 31
  %11857 = trunc i32 %11856 to i8
  %11858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11857, i8* %11858, align 1
  %11859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11846, i8* %11859, align 1
  store %struct.Memory* %loadMem_406b1d, %struct.Memory** %MEMORY
  %loadMem_406b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11861 = getelementptr inbounds %struct.GPR, %struct.GPR* %11860, i32 0, i32 33
  %11862 = getelementptr inbounds %struct.Reg, %struct.Reg* %11861, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %11862 to i64*
  %11863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11864 = getelementptr inbounds %struct.GPR, %struct.GPR* %11863, i32 0, i32 9
  %11865 = getelementptr inbounds %struct.Reg, %struct.Reg* %11864, i32 0, i32 0
  %RSI.i1496 = bitcast %union.anon* %11865 to i64*
  %11866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11867 = getelementptr inbounds %struct.GPR, %struct.GPR* %11866, i32 0, i32 15
  %11868 = getelementptr inbounds %struct.Reg, %struct.Reg* %11867, i32 0, i32 0
  %RBP.i1497 = bitcast %union.anon* %11868 to i64*
  %11869 = load i64, i64* %RBP.i1497
  %11870 = sub i64 %11869, 104
  %11871 = load i64, i64* %PC.i1495
  %11872 = add i64 %11871, 3
  store i64 %11872, i64* %PC.i1495
  %11873 = inttoptr i64 %11870 to i32*
  %11874 = load i32, i32* %11873
  %11875 = zext i32 %11874 to i64
  store i64 %11875, i64* %RSI.i1496, align 8
  store %struct.Memory* %loadMem_406b21, %struct.Memory** %MEMORY
  %loadMem_406b24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11877 = getelementptr inbounds %struct.GPR, %struct.GPR* %11876, i32 0, i32 33
  %11878 = getelementptr inbounds %struct.Reg, %struct.Reg* %11877, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %11878 to i64*
  %11879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11880 = getelementptr inbounds %struct.GPR, %struct.GPR* %11879, i32 0, i32 9
  %11881 = getelementptr inbounds %struct.Reg, %struct.Reg* %11880, i32 0, i32 0
  %RSI.i1494 = bitcast %union.anon* %11881 to i64*
  %11882 = load i64, i64* %RSI.i1494
  %11883 = load i64, i64* %PC.i1493
  %11884 = add i64 %11883, 3
  store i64 %11884, i64* %PC.i1493
  %11885 = trunc i64 %11882 to i32
  %11886 = sub i32 %11885, 4
  %11887 = zext i32 %11886 to i64
  store i64 %11887, i64* %RSI.i1494, align 8
  %11888 = icmp ult i32 %11885, 4
  %11889 = zext i1 %11888 to i8
  %11890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11889, i8* %11890, align 1
  %11891 = and i32 %11886, 255
  %11892 = call i32 @llvm.ctpop.i32(i32 %11891)
  %11893 = trunc i32 %11892 to i8
  %11894 = and i8 %11893, 1
  %11895 = xor i8 %11894, 1
  %11896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11895, i8* %11896, align 1
  %11897 = xor i64 4, %11882
  %11898 = trunc i64 %11897 to i32
  %11899 = xor i32 %11898, %11886
  %11900 = lshr i32 %11899, 4
  %11901 = trunc i32 %11900 to i8
  %11902 = and i8 %11901, 1
  %11903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11902, i8* %11903, align 1
  %11904 = icmp eq i32 %11886, 0
  %11905 = zext i1 %11904 to i8
  %11906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11905, i8* %11906, align 1
  %11907 = lshr i32 %11886, 31
  %11908 = trunc i32 %11907 to i8
  %11909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11908, i8* %11909, align 1
  %11910 = lshr i32 %11885, 31
  %11911 = xor i32 %11907, %11910
  %11912 = add i32 %11911, %11910
  %11913 = icmp eq i32 %11912, 2
  %11914 = zext i1 %11913 to i8
  %11915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11914, i8* %11915, align 1
  store %struct.Memory* %loadMem_406b24, %struct.Memory** %MEMORY
  %loadMem_406b27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11917 = getelementptr inbounds %struct.GPR, %struct.GPR* %11916, i32 0, i32 33
  %11918 = getelementptr inbounds %struct.Reg, %struct.Reg* %11917, i32 0, i32 0
  %PC.i1490 = bitcast %union.anon* %11918 to i64*
  %11919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11920 = getelementptr inbounds %struct.GPR, %struct.GPR* %11919, i32 0, i32 5
  %11921 = getelementptr inbounds %struct.Reg, %struct.Reg* %11920, i32 0, i32 0
  %ECX.i1491 = bitcast %union.anon* %11921 to i32*
  %11922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11923 = getelementptr inbounds %struct.GPR, %struct.GPR* %11922, i32 0, i32 15
  %11924 = getelementptr inbounds %struct.Reg, %struct.Reg* %11923, i32 0, i32 0
  %RBP.i1492 = bitcast %union.anon* %11924 to i64*
  %11925 = load i64, i64* %RBP.i1492
  %11926 = sub i64 %11925, 184
  %11927 = load i32, i32* %ECX.i1491
  %11928 = zext i32 %11927 to i64
  %11929 = load i64, i64* %PC.i1490
  %11930 = add i64 %11929, 6
  store i64 %11930, i64* %PC.i1490
  %11931 = inttoptr i64 %11926 to i32*
  store i32 %11927, i32* %11931
  store %struct.Memory* %loadMem_406b27, %struct.Memory** %MEMORY
  %loadMem_406b2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11933 = getelementptr inbounds %struct.GPR, %struct.GPR* %11932, i32 0, i32 33
  %11934 = getelementptr inbounds %struct.Reg, %struct.Reg* %11933, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %11934 to i64*
  %11935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11936 = getelementptr inbounds %struct.GPR, %struct.GPR* %11935, i32 0, i32 9
  %11937 = getelementptr inbounds %struct.Reg, %struct.Reg* %11936, i32 0, i32 0
  %ESI.i1488 = bitcast %union.anon* %11937 to i32*
  %11938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11939 = getelementptr inbounds %struct.GPR, %struct.GPR* %11938, i32 0, i32 5
  %11940 = getelementptr inbounds %struct.Reg, %struct.Reg* %11939, i32 0, i32 0
  %RCX.i1489 = bitcast %union.anon* %11940 to i64*
  %11941 = load i32, i32* %ESI.i1488
  %11942 = zext i32 %11941 to i64
  %11943 = load i64, i64* %PC.i1487
  %11944 = add i64 %11943, 2
  store i64 %11944, i64* %PC.i1487
  %11945 = and i64 %11942, 4294967295
  store i64 %11945, i64* %RCX.i1489, align 8
  store %struct.Memory* %loadMem_406b2d, %struct.Memory** %MEMORY
  %loadMem_406b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11947 = getelementptr inbounds %struct.GPR, %struct.GPR* %11946, i32 0, i32 33
  %11948 = getelementptr inbounds %struct.Reg, %struct.Reg* %11947, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %11948 to i64*
  %11949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11950 = getelementptr inbounds %struct.GPR, %struct.GPR* %11949, i32 0, i32 9
  %11951 = getelementptr inbounds %struct.Reg, %struct.Reg* %11950, i32 0, i32 0
  %RSI.i1485 = bitcast %union.anon* %11951 to i64*
  %11952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11953 = getelementptr inbounds %struct.GPR, %struct.GPR* %11952, i32 0, i32 15
  %11954 = getelementptr inbounds %struct.Reg, %struct.Reg* %11953, i32 0, i32 0
  %RBP.i1486 = bitcast %union.anon* %11954 to i64*
  %11955 = load i64, i64* %RBP.i1486
  %11956 = sub i64 %11955, 184
  %11957 = load i64, i64* %PC.i1484
  %11958 = add i64 %11957, 6
  store i64 %11958, i64* %PC.i1484
  %11959 = inttoptr i64 %11956 to i32*
  %11960 = load i32, i32* %11959
  %11961 = zext i32 %11960 to i64
  store i64 %11961, i64* %RSI.i1485, align 8
  store %struct.Memory* %loadMem_406b2f, %struct.Memory** %MEMORY
  %loadMem_406b35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11963 = getelementptr inbounds %struct.GPR, %struct.GPR* %11962, i32 0, i32 33
  %11964 = getelementptr inbounds %struct.Reg, %struct.Reg* %11963, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %11964 to i64*
  %11965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11966 = getelementptr inbounds %struct.GPR, %struct.GPR* %11965, i32 0, i32 5
  %11967 = getelementptr inbounds %struct.Reg, %struct.Reg* %11966, i32 0, i32 0
  %11968 = bitcast %union.anon* %11967 to %struct.anon.2*
  %CL.i1481 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11968, i32 0, i32 0
  %11969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11970 = getelementptr inbounds %struct.GPR, %struct.GPR* %11969, i32 0, i32 9
  %11971 = getelementptr inbounds %struct.Reg, %struct.Reg* %11970, i32 0, i32 0
  %RSI.i1482 = bitcast %union.anon* %11971 to i64*
  %11972 = load i64, i64* %RSI.i1482
  %11973 = load i8, i8* %CL.i1481
  %11974 = zext i8 %11973 to i64
  %11975 = load i64, i64* %PC.i1480
  %11976 = add i64 %11975, 2
  store i64 %11976, i64* %PC.i1480
  %11977 = trunc i64 %11974 to i5
  switch i5 %11977, label %11984 [
    i5 0, label %routine_shll__cl___esi.exit1483
    i5 1, label %11978
  ]

; <label>:11978:                                  ; preds = %block_406af6
  %11979 = trunc i64 %11972 to i32
  %11980 = shl i32 %11979, 1
  %11981 = icmp slt i32 %11979, 0
  %11982 = icmp slt i32 %11980, 0
  %11983 = xor i1 %11981, %11982
  br label %11993

; <label>:11984:                                  ; preds = %block_406af6
  %11985 = and i64 %11974, 31
  %11986 = add i64 %11985, 4294967295
  %11987 = and i64 %11972, 4294967295
  %11988 = and i64 %11986, 4294967295
  %11989 = shl i64 %11987, %11988
  %11990 = trunc i64 %11989 to i32
  %11991 = icmp slt i32 %11990, 0
  %11992 = shl i32 %11990, 1
  br label %11993

; <label>:11993:                                  ; preds = %11984, %11978
  %11994 = phi i1 [ %11981, %11978 ], [ %11991, %11984 ]
  %11995 = phi i1 [ %11983, %11978 ], [ false, %11984 ]
  %11996 = phi i32 [ %11980, %11978 ], [ %11992, %11984 ]
  %11997 = zext i32 %11996 to i64
  store i64 %11997, i64* %RSI.i1482, align 8
  %11998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11999 = zext i1 %11994 to i8
  store i8 %11999, i8* %11998, align 1
  %12000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12001 = and i32 %11996, 254
  %12002 = call i32 @llvm.ctpop.i32(i32 %12001)
  %12003 = trunc i32 %12002 to i8
  %12004 = and i8 %12003, 1
  %12005 = xor i8 %12004, 1
  store i8 %12005, i8* %12000, align 1
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12006, align 1
  %12007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12008 = icmp eq i32 %11996, 0
  %12009 = zext i1 %12008 to i8
  store i8 %12009, i8* %12007, align 1
  %12010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12011 = lshr i32 %11996, 31
  %12012 = trunc i32 %12011 to i8
  store i8 %12012, i8* %12010, align 1
  %12013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12014 = zext i1 %11995 to i8
  store i8 %12014, i8* %12013, align 1
  br label %routine_shll__cl___esi.exit1483

routine_shll__cl___esi.exit1483:                  ; preds = %block_406af6, %11993
  store %struct.Memory* %loadMem_406b35, %struct.Memory** %MEMORY
  %loadMem_406b37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12016 = getelementptr inbounds %struct.GPR, %struct.GPR* %12015, i32 0, i32 33
  %12017 = getelementptr inbounds %struct.Reg, %struct.Reg* %12016, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %12017 to i64*
  %12018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12019 = getelementptr inbounds %struct.GPR, %struct.GPR* %12018, i32 0, i32 9
  %12020 = getelementptr inbounds %struct.Reg, %struct.Reg* %12019, i32 0, i32 0
  %ESI.i1478 = bitcast %union.anon* %12020 to i32*
  %12021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12022 = getelementptr inbounds %struct.GPR, %struct.GPR* %12021, i32 0, i32 15
  %12023 = getelementptr inbounds %struct.Reg, %struct.Reg* %12022, i32 0, i32 0
  %RBP.i1479 = bitcast %union.anon* %12023 to i64*
  %12024 = load i64, i64* %RBP.i1479
  %12025 = sub i64 %12024, 40
  %12026 = load i32, i32* %ESI.i1478
  %12027 = zext i32 %12026 to i64
  %12028 = load i64, i64* %PC.i1477
  %12029 = add i64 %12028, 3
  store i64 %12029, i64* %PC.i1477
  %12030 = inttoptr i64 %12025 to i32*
  store i32 %12026, i32* %12030
  store %struct.Memory* %loadMem_406b37, %struct.Memory** %MEMORY
  %loadMem_406b3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12032 = getelementptr inbounds %struct.GPR, %struct.GPR* %12031, i32 0, i32 33
  %12033 = getelementptr inbounds %struct.Reg, %struct.Reg* %12032, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %12033 to i64*
  %12034 = load i64, i64* %PC.i1476
  %12035 = add i64 %12034, 73
  %12036 = load i64, i64* %PC.i1476
  %12037 = add i64 %12036, 5
  store i64 %12037, i64* %PC.i1476
  %12038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12035, i64* %12038, align 8
  store %struct.Memory* %loadMem_406b3a, %struct.Memory** %MEMORY
  br label %block_.L_406b83

block_.L_406b3f:                                  ; preds = %block_.L_406aec
  %loadMem_406b3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12040 = getelementptr inbounds %struct.GPR, %struct.GPR* %12039, i32 0, i32 33
  %12041 = getelementptr inbounds %struct.Reg, %struct.Reg* %12040, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %12041 to i64*
  %12042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12043 = getelementptr inbounds %struct.GPR, %struct.GPR* %12042, i32 0, i32 1
  %12044 = getelementptr inbounds %struct.Reg, %struct.Reg* %12043, i32 0, i32 0
  %RAX.i1475 = bitcast %union.anon* %12044 to i64*
  %12045 = load i64, i64* %PC.i1474
  %12046 = add i64 %12045, 10
  store i64 %12046, i64* %PC.i1474
  store i64 ptrtoint (%G__0x6d09f0_type* @G__0x6d09f0 to i64), i64* %RAX.i1475, align 8
  store %struct.Memory* %loadMem_406b3f, %struct.Memory** %MEMORY
  %loadMem_406b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12048 = getelementptr inbounds %struct.GPR, %struct.GPR* %12047, i32 0, i32 33
  %12049 = getelementptr inbounds %struct.Reg, %struct.Reg* %12048, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %12049 to i64*
  %12050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12051 = getelementptr inbounds %struct.GPR, %struct.GPR* %12050, i32 0, i32 5
  %12052 = getelementptr inbounds %struct.Reg, %struct.Reg* %12051, i32 0, i32 0
  %RCX.i1472 = bitcast %union.anon* %12052 to i64*
  %12053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12054 = getelementptr inbounds %struct.GPR, %struct.GPR* %12053, i32 0, i32 15
  %12055 = getelementptr inbounds %struct.Reg, %struct.Reg* %12054, i32 0, i32 0
  %RBP.i1473 = bitcast %union.anon* %12055 to i64*
  %12056 = load i64, i64* %RBP.i1473
  %12057 = sub i64 %12056, 88
  %12058 = load i64, i64* %PC.i1471
  %12059 = add i64 %12058, 3
  store i64 %12059, i64* %PC.i1471
  %12060 = inttoptr i64 %12057 to i32*
  %12061 = load i32, i32* %12060
  %12062 = zext i32 %12061 to i64
  store i64 %12062, i64* %RCX.i1472, align 8
  store %struct.Memory* %loadMem_406b49, %struct.Memory** %MEMORY
  %loadMem_406b4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12064 = getelementptr inbounds %struct.GPR, %struct.GPR* %12063, i32 0, i32 33
  %12065 = getelementptr inbounds %struct.Reg, %struct.Reg* %12064, i32 0, i32 0
  %PC.i1468 = bitcast %union.anon* %12065 to i64*
  %12066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12067 = getelementptr inbounds %struct.GPR, %struct.GPR* %12066, i32 0, i32 7
  %12068 = getelementptr inbounds %struct.Reg, %struct.Reg* %12067, i32 0, i32 0
  %RDX.i1469 = bitcast %union.anon* %12068 to i64*
  %12069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12070 = getelementptr inbounds %struct.GPR, %struct.GPR* %12069, i32 0, i32 15
  %12071 = getelementptr inbounds %struct.Reg, %struct.Reg* %12070, i32 0, i32 0
  %RBP.i1470 = bitcast %union.anon* %12071 to i64*
  %12072 = load i64, i64* %RBP.i1470
  %12073 = sub i64 %12072, 108
  %12074 = load i64, i64* %PC.i1468
  %12075 = add i64 %12074, 4
  store i64 %12075, i64* %PC.i1468
  %12076 = inttoptr i64 %12073 to i32*
  %12077 = load i32, i32* %12076
  %12078 = sext i32 %12077 to i64
  store i64 %12078, i64* %RDX.i1469, align 8
  store %struct.Memory* %loadMem_406b4c, %struct.Memory** %MEMORY
  %loadMem_406b50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12080 = getelementptr inbounds %struct.GPR, %struct.GPR* %12079, i32 0, i32 33
  %12081 = getelementptr inbounds %struct.Reg, %struct.Reg* %12080, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %12081 to i64*
  %12082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12083 = getelementptr inbounds %struct.GPR, %struct.GPR* %12082, i32 0, i32 7
  %12084 = getelementptr inbounds %struct.Reg, %struct.Reg* %12083, i32 0, i32 0
  %RDX.i1467 = bitcast %union.anon* %12084 to i64*
  %12085 = load i64, i64* %RDX.i1467
  %12086 = load i64, i64* %PC.i1466
  %12087 = add i64 %12086, 4
  store i64 %12087, i64* %PC.i1466
  %12088 = shl i64 %12085, 5
  %12089 = icmp slt i64 %12088, 0
  %12090 = shl i64 %12088, 1
  store i64 %12090, i64* %RDX.i1467, align 8
  %12091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12092 = zext i1 %12089 to i8
  store i8 %12092, i8* %12091, align 1
  %12093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12094 = trunc i64 %12090 to i32
  %12095 = and i32 %12094, 254
  %12096 = call i32 @llvm.ctpop.i32(i32 %12095)
  %12097 = trunc i32 %12096 to i8
  %12098 = and i8 %12097, 1
  %12099 = xor i8 %12098, 1
  store i8 %12099, i8* %12093, align 1
  %12100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12100, align 1
  %12101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12102 = icmp eq i64 %12090, 0
  %12103 = zext i1 %12102 to i8
  store i8 %12103, i8* %12101, align 1
  %12104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12105 = lshr i64 %12090, 63
  %12106 = trunc i64 %12105 to i8
  store i8 %12106, i8* %12104, align 1
  %12107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12107, align 1
  store %struct.Memory* %loadMem_406b50, %struct.Memory** %MEMORY
  %loadMem_406b54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12109 = getelementptr inbounds %struct.GPR, %struct.GPR* %12108, i32 0, i32 33
  %12110 = getelementptr inbounds %struct.Reg, %struct.Reg* %12109, i32 0, i32 0
  %PC.i1463 = bitcast %union.anon* %12110 to i64*
  %12111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12112 = getelementptr inbounds %struct.GPR, %struct.GPR* %12111, i32 0, i32 1
  %12113 = getelementptr inbounds %struct.Reg, %struct.Reg* %12112, i32 0, i32 0
  %RAX.i1464 = bitcast %union.anon* %12113 to i64*
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12115 = getelementptr inbounds %struct.GPR, %struct.GPR* %12114, i32 0, i32 7
  %12116 = getelementptr inbounds %struct.Reg, %struct.Reg* %12115, i32 0, i32 0
  %RDX.i1465 = bitcast %union.anon* %12116 to i64*
  %12117 = load i64, i64* %RAX.i1464
  %12118 = load i64, i64* %RDX.i1465
  %12119 = load i64, i64* %PC.i1463
  %12120 = add i64 %12119, 3
  store i64 %12120, i64* %PC.i1463
  %12121 = add i64 %12118, %12117
  store i64 %12121, i64* %RAX.i1464, align 8
  %12122 = icmp ult i64 %12121, %12117
  %12123 = icmp ult i64 %12121, %12118
  %12124 = or i1 %12122, %12123
  %12125 = zext i1 %12124 to i8
  %12126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12125, i8* %12126, align 1
  %12127 = trunc i64 %12121 to i32
  %12128 = and i32 %12127, 255
  %12129 = call i32 @llvm.ctpop.i32(i32 %12128)
  %12130 = trunc i32 %12129 to i8
  %12131 = and i8 %12130, 1
  %12132 = xor i8 %12131, 1
  %12133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12132, i8* %12133, align 1
  %12134 = xor i64 %12118, %12117
  %12135 = xor i64 %12134, %12121
  %12136 = lshr i64 %12135, 4
  %12137 = trunc i64 %12136 to i8
  %12138 = and i8 %12137, 1
  %12139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12138, i8* %12139, align 1
  %12140 = icmp eq i64 %12121, 0
  %12141 = zext i1 %12140 to i8
  %12142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12141, i8* %12142, align 1
  %12143 = lshr i64 %12121, 63
  %12144 = trunc i64 %12143 to i8
  %12145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12144, i8* %12145, align 1
  %12146 = lshr i64 %12117, 63
  %12147 = lshr i64 %12118, 63
  %12148 = xor i64 %12143, %12146
  %12149 = xor i64 %12143, %12147
  %12150 = add i64 %12148, %12149
  %12151 = icmp eq i64 %12150, 2
  %12152 = zext i1 %12151 to i8
  %12153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12152, i8* %12153, align 1
  store %struct.Memory* %loadMem_406b54, %struct.Memory** %MEMORY
  %loadMem_406b57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12155 = getelementptr inbounds %struct.GPR, %struct.GPR* %12154, i32 0, i32 33
  %12156 = getelementptr inbounds %struct.Reg, %struct.Reg* %12155, i32 0, i32 0
  %PC.i1460 = bitcast %union.anon* %12156 to i64*
  %12157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12158 = getelementptr inbounds %struct.GPR, %struct.GPR* %12157, i32 0, i32 7
  %12159 = getelementptr inbounds %struct.Reg, %struct.Reg* %12158, i32 0, i32 0
  %RDX.i1461 = bitcast %union.anon* %12159 to i64*
  %12160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12161 = getelementptr inbounds %struct.GPR, %struct.GPR* %12160, i32 0, i32 15
  %12162 = getelementptr inbounds %struct.Reg, %struct.Reg* %12161, i32 0, i32 0
  %RBP.i1462 = bitcast %union.anon* %12162 to i64*
  %12163 = load i64, i64* %RBP.i1462
  %12164 = sub i64 %12163, 24
  %12165 = load i64, i64* %PC.i1460
  %12166 = add i64 %12165, 4
  store i64 %12166, i64* %PC.i1460
  %12167 = inttoptr i64 %12164 to i32*
  %12168 = load i32, i32* %12167
  %12169 = sext i32 %12168 to i64
  store i64 %12169, i64* %RDX.i1461, align 8
  store %struct.Memory* %loadMem_406b57, %struct.Memory** %MEMORY
  %loadMem_406b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12171 = getelementptr inbounds %struct.GPR, %struct.GPR* %12170, i32 0, i32 33
  %12172 = getelementptr inbounds %struct.Reg, %struct.Reg* %12171, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %12172 to i64*
  %12173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12174 = getelementptr inbounds %struct.GPR, %struct.GPR* %12173, i32 0, i32 7
  %12175 = getelementptr inbounds %struct.Reg, %struct.Reg* %12174, i32 0, i32 0
  %RDX.i1459 = bitcast %union.anon* %12175 to i64*
  %12176 = load i64, i64* %RDX.i1459
  %12177 = load i64, i64* %PC.i1458
  %12178 = add i64 %12177, 4
  store i64 %12178, i64* %PC.i1458
  %12179 = shl i64 %12176, 3
  %12180 = icmp slt i64 %12179, 0
  %12181 = shl i64 %12179, 1
  store i64 %12181, i64* %RDX.i1459, align 8
  %12182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12183 = zext i1 %12180 to i8
  store i8 %12183, i8* %12182, align 1
  %12184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12185 = trunc i64 %12181 to i32
  %12186 = and i32 %12185, 254
  %12187 = call i32 @llvm.ctpop.i32(i32 %12186)
  %12188 = trunc i32 %12187 to i8
  %12189 = and i8 %12188, 1
  %12190 = xor i8 %12189, 1
  store i8 %12190, i8* %12184, align 1
  %12191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12191, align 1
  %12192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12193 = icmp eq i64 %12181, 0
  %12194 = zext i1 %12193 to i8
  store i8 %12194, i8* %12192, align 1
  %12195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12196 = lshr i64 %12181, 63
  %12197 = trunc i64 %12196 to i8
  store i8 %12197, i8* %12195, align 1
  %12198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12198, align 1
  store %struct.Memory* %loadMem_406b5b, %struct.Memory** %MEMORY
  %loadMem_406b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12200 = getelementptr inbounds %struct.GPR, %struct.GPR* %12199, i32 0, i32 33
  %12201 = getelementptr inbounds %struct.Reg, %struct.Reg* %12200, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %12201 to i64*
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12203 = getelementptr inbounds %struct.GPR, %struct.GPR* %12202, i32 0, i32 1
  %12204 = getelementptr inbounds %struct.Reg, %struct.Reg* %12203, i32 0, i32 0
  %RAX.i1456 = bitcast %union.anon* %12204 to i64*
  %12205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12206 = getelementptr inbounds %struct.GPR, %struct.GPR* %12205, i32 0, i32 7
  %12207 = getelementptr inbounds %struct.Reg, %struct.Reg* %12206, i32 0, i32 0
  %RDX.i1457 = bitcast %union.anon* %12207 to i64*
  %12208 = load i64, i64* %RAX.i1456
  %12209 = load i64, i64* %RDX.i1457
  %12210 = load i64, i64* %PC.i1455
  %12211 = add i64 %12210, 3
  store i64 %12211, i64* %PC.i1455
  %12212 = add i64 %12209, %12208
  store i64 %12212, i64* %RAX.i1456, align 8
  %12213 = icmp ult i64 %12212, %12208
  %12214 = icmp ult i64 %12212, %12209
  %12215 = or i1 %12213, %12214
  %12216 = zext i1 %12215 to i8
  %12217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12216, i8* %12217, align 1
  %12218 = trunc i64 %12212 to i32
  %12219 = and i32 %12218, 255
  %12220 = call i32 @llvm.ctpop.i32(i32 %12219)
  %12221 = trunc i32 %12220 to i8
  %12222 = and i8 %12221, 1
  %12223 = xor i8 %12222, 1
  %12224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12223, i8* %12224, align 1
  %12225 = xor i64 %12209, %12208
  %12226 = xor i64 %12225, %12212
  %12227 = lshr i64 %12226, 4
  %12228 = trunc i64 %12227 to i8
  %12229 = and i8 %12228, 1
  %12230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12229, i8* %12230, align 1
  %12231 = icmp eq i64 %12212, 0
  %12232 = zext i1 %12231 to i8
  %12233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12232, i8* %12233, align 1
  %12234 = lshr i64 %12212, 63
  %12235 = trunc i64 %12234 to i8
  %12236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12235, i8* %12236, align 1
  %12237 = lshr i64 %12208, 63
  %12238 = lshr i64 %12209, 63
  %12239 = xor i64 %12234, %12237
  %12240 = xor i64 %12234, %12238
  %12241 = add i64 %12239, %12240
  %12242 = icmp eq i64 %12241, 2
  %12243 = zext i1 %12242 to i8
  %12244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12243, i8* %12244, align 1
  store %struct.Memory* %loadMem_406b5f, %struct.Memory** %MEMORY
  %loadMem_406b62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12246 = getelementptr inbounds %struct.GPR, %struct.GPR* %12245, i32 0, i32 33
  %12247 = getelementptr inbounds %struct.Reg, %struct.Reg* %12246, i32 0, i32 0
  %PC.i1452 = bitcast %union.anon* %12247 to i64*
  %12248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12249 = getelementptr inbounds %struct.GPR, %struct.GPR* %12248, i32 0, i32 7
  %12250 = getelementptr inbounds %struct.Reg, %struct.Reg* %12249, i32 0, i32 0
  %RDX.i1453 = bitcast %union.anon* %12250 to i64*
  %12251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12252 = getelementptr inbounds %struct.GPR, %struct.GPR* %12251, i32 0, i32 15
  %12253 = getelementptr inbounds %struct.Reg, %struct.Reg* %12252, i32 0, i32 0
  %RBP.i1454 = bitcast %union.anon* %12253 to i64*
  %12254 = load i64, i64* %RBP.i1454
  %12255 = sub i64 %12254, 28
  %12256 = load i64, i64* %PC.i1452
  %12257 = add i64 %12256, 4
  store i64 %12257, i64* %PC.i1452
  %12258 = inttoptr i64 %12255 to i32*
  %12259 = load i32, i32* %12258
  %12260 = sext i32 %12259 to i64
  store i64 %12260, i64* %RDX.i1453, align 8
  store %struct.Memory* %loadMem_406b62, %struct.Memory** %MEMORY
  %loadMem_406b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12262 = getelementptr inbounds %struct.GPR, %struct.GPR* %12261, i32 0, i32 33
  %12263 = getelementptr inbounds %struct.Reg, %struct.Reg* %12262, i32 0, i32 0
  %PC.i1448 = bitcast %union.anon* %12263 to i64*
  %12264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12265 = getelementptr inbounds %struct.GPR, %struct.GPR* %12264, i32 0, i32 1
  %12266 = getelementptr inbounds %struct.Reg, %struct.Reg* %12265, i32 0, i32 0
  %RAX.i1449 = bitcast %union.anon* %12266 to i64*
  %12267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12268 = getelementptr inbounds %struct.GPR, %struct.GPR* %12267, i32 0, i32 5
  %12269 = getelementptr inbounds %struct.Reg, %struct.Reg* %12268, i32 0, i32 0
  %RCX.i1450 = bitcast %union.anon* %12269 to i64*
  %12270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12271 = getelementptr inbounds %struct.GPR, %struct.GPR* %12270, i32 0, i32 7
  %12272 = getelementptr inbounds %struct.Reg, %struct.Reg* %12271, i32 0, i32 0
  %RDX.i1451 = bitcast %union.anon* %12272 to i64*
  %12273 = load i64, i64* %RCX.i1450
  %12274 = load i64, i64* %RAX.i1449
  %12275 = load i64, i64* %RDX.i1451
  %12276 = mul i64 %12275, 4
  %12277 = add i64 %12276, %12274
  %12278 = load i64, i64* %PC.i1448
  %12279 = add i64 %12278, 4
  store i64 %12279, i64* %PC.i1448
  %12280 = inttoptr i64 %12277 to i32*
  %12281 = load i32, i32* %12280
  %12282 = shl i64 %12273, 32
  %12283 = ashr exact i64 %12282, 32
  %12284 = sext i32 %12281 to i64
  %12285 = mul i64 %12284, %12283
  %12286 = trunc i64 %12285 to i32
  %12287 = and i64 %12285, 4294967295
  store i64 %12287, i64* %RCX.i1450, align 8
  %12288 = shl i64 %12285, 32
  %12289 = ashr exact i64 %12288, 32
  %12290 = icmp ne i64 %12289, %12285
  %12291 = zext i1 %12290 to i8
  %12292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12291, i8* %12292, align 1
  %12293 = and i32 %12286, 255
  %12294 = call i32 @llvm.ctpop.i32(i32 %12293)
  %12295 = trunc i32 %12294 to i8
  %12296 = and i8 %12295, 1
  %12297 = xor i8 %12296, 1
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12297, i8* %12298, align 1
  %12299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12299, align 1
  %12300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12300, align 1
  %12301 = lshr i32 %12286, 31
  %12302 = trunc i32 %12301 to i8
  %12303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12302, i8* %12303, align 1
  %12304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12291, i8* %12304, align 1
  store %struct.Memory* %loadMem_406b66, %struct.Memory** %MEMORY
  %loadMem_406b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12306 = getelementptr inbounds %struct.GPR, %struct.GPR* %12305, i32 0, i32 33
  %12307 = getelementptr inbounds %struct.Reg, %struct.Reg* %12306, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %12307 to i64*
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12309 = getelementptr inbounds %struct.GPR, %struct.GPR* %12308, i32 0, i32 9
  %12310 = getelementptr inbounds %struct.Reg, %struct.Reg* %12309, i32 0, i32 0
  %RSI.i1446 = bitcast %union.anon* %12310 to i64*
  %12311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12312 = getelementptr inbounds %struct.GPR, %struct.GPR* %12311, i32 0, i32 15
  %12313 = getelementptr inbounds %struct.Reg, %struct.Reg* %12312, i32 0, i32 0
  %RBP.i1447 = bitcast %union.anon* %12313 to i64*
  %12314 = load i64, i64* %RBP.i1447
  %12315 = sub i64 %12314, 104
  %12316 = load i64, i64* %PC.i1445
  %12317 = add i64 %12316, 3
  store i64 %12317, i64* %PC.i1445
  %12318 = inttoptr i64 %12315 to i32*
  %12319 = load i32, i32* %12318
  %12320 = zext i32 %12319 to i64
  store i64 %12320, i64* %RSI.i1446, align 8
  store %struct.Memory* %loadMem_406b6a, %struct.Memory** %MEMORY
  %loadMem_406b6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12322 = getelementptr inbounds %struct.GPR, %struct.GPR* %12321, i32 0, i32 33
  %12323 = getelementptr inbounds %struct.Reg, %struct.Reg* %12322, i32 0, i32 0
  %PC.i1443 = bitcast %union.anon* %12323 to i64*
  %12324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12325 = getelementptr inbounds %struct.GPR, %struct.GPR* %12324, i32 0, i32 9
  %12326 = getelementptr inbounds %struct.Reg, %struct.Reg* %12325, i32 0, i32 0
  %RSI.i1444 = bitcast %union.anon* %12326 to i64*
  %12327 = load i64, i64* %RSI.i1444
  %12328 = load i64, i64* %PC.i1443
  %12329 = add i64 %12328, 3
  store i64 %12329, i64* %PC.i1443
  %12330 = trunc i64 %12327 to i32
  %12331 = sub i32 %12330, 4
  %12332 = zext i32 %12331 to i64
  store i64 %12332, i64* %RSI.i1444, align 8
  %12333 = icmp ult i32 %12330, 4
  %12334 = zext i1 %12333 to i8
  %12335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12334, i8* %12335, align 1
  %12336 = and i32 %12331, 255
  %12337 = call i32 @llvm.ctpop.i32(i32 %12336)
  %12338 = trunc i32 %12337 to i8
  %12339 = and i8 %12338, 1
  %12340 = xor i8 %12339, 1
  %12341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12340, i8* %12341, align 1
  %12342 = xor i64 4, %12327
  %12343 = trunc i64 %12342 to i32
  %12344 = xor i32 %12343, %12331
  %12345 = lshr i32 %12344, 4
  %12346 = trunc i32 %12345 to i8
  %12347 = and i8 %12346, 1
  %12348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12347, i8* %12348, align 1
  %12349 = icmp eq i32 %12331, 0
  %12350 = zext i1 %12349 to i8
  %12351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12350, i8* %12351, align 1
  %12352 = lshr i32 %12331, 31
  %12353 = trunc i32 %12352 to i8
  %12354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12353, i8* %12354, align 1
  %12355 = lshr i32 %12330, 31
  %12356 = xor i32 %12352, %12355
  %12357 = add i32 %12356, %12355
  %12358 = icmp eq i32 %12357, 2
  %12359 = zext i1 %12358 to i8
  %12360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12359, i8* %12360, align 1
  store %struct.Memory* %loadMem_406b6d, %struct.Memory** %MEMORY
  %loadMem_406b70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12362 = getelementptr inbounds %struct.GPR, %struct.GPR* %12361, i32 0, i32 33
  %12363 = getelementptr inbounds %struct.Reg, %struct.Reg* %12362, i32 0, i32 0
  %PC.i1440 = bitcast %union.anon* %12363 to i64*
  %12364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12365 = getelementptr inbounds %struct.GPR, %struct.GPR* %12364, i32 0, i32 5
  %12366 = getelementptr inbounds %struct.Reg, %struct.Reg* %12365, i32 0, i32 0
  %ECX.i1441 = bitcast %union.anon* %12366 to i32*
  %12367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12368 = getelementptr inbounds %struct.GPR, %struct.GPR* %12367, i32 0, i32 15
  %12369 = getelementptr inbounds %struct.Reg, %struct.Reg* %12368, i32 0, i32 0
  %RBP.i1442 = bitcast %union.anon* %12369 to i64*
  %12370 = load i64, i64* %RBP.i1442
  %12371 = sub i64 %12370, 188
  %12372 = load i32, i32* %ECX.i1441
  %12373 = zext i32 %12372 to i64
  %12374 = load i64, i64* %PC.i1440
  %12375 = add i64 %12374, 6
  store i64 %12375, i64* %PC.i1440
  %12376 = inttoptr i64 %12371 to i32*
  store i32 %12372, i32* %12376
  store %struct.Memory* %loadMem_406b70, %struct.Memory** %MEMORY
  %loadMem_406b76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12378 = getelementptr inbounds %struct.GPR, %struct.GPR* %12377, i32 0, i32 33
  %12379 = getelementptr inbounds %struct.Reg, %struct.Reg* %12378, i32 0, i32 0
  %PC.i1437 = bitcast %union.anon* %12379 to i64*
  %12380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12381 = getelementptr inbounds %struct.GPR, %struct.GPR* %12380, i32 0, i32 9
  %12382 = getelementptr inbounds %struct.Reg, %struct.Reg* %12381, i32 0, i32 0
  %ESI.i1438 = bitcast %union.anon* %12382 to i32*
  %12383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12384 = getelementptr inbounds %struct.GPR, %struct.GPR* %12383, i32 0, i32 5
  %12385 = getelementptr inbounds %struct.Reg, %struct.Reg* %12384, i32 0, i32 0
  %RCX.i1439 = bitcast %union.anon* %12385 to i64*
  %12386 = load i32, i32* %ESI.i1438
  %12387 = zext i32 %12386 to i64
  %12388 = load i64, i64* %PC.i1437
  %12389 = add i64 %12388, 2
  store i64 %12389, i64* %PC.i1437
  %12390 = and i64 %12387, 4294967295
  store i64 %12390, i64* %RCX.i1439, align 8
  store %struct.Memory* %loadMem_406b76, %struct.Memory** %MEMORY
  %loadMem_406b78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12392 = getelementptr inbounds %struct.GPR, %struct.GPR* %12391, i32 0, i32 33
  %12393 = getelementptr inbounds %struct.Reg, %struct.Reg* %12392, i32 0, i32 0
  %PC.i1434 = bitcast %union.anon* %12393 to i64*
  %12394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12395 = getelementptr inbounds %struct.GPR, %struct.GPR* %12394, i32 0, i32 9
  %12396 = getelementptr inbounds %struct.Reg, %struct.Reg* %12395, i32 0, i32 0
  %RSI.i1435 = bitcast %union.anon* %12396 to i64*
  %12397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12398 = getelementptr inbounds %struct.GPR, %struct.GPR* %12397, i32 0, i32 15
  %12399 = getelementptr inbounds %struct.Reg, %struct.Reg* %12398, i32 0, i32 0
  %RBP.i1436 = bitcast %union.anon* %12399 to i64*
  %12400 = load i64, i64* %RBP.i1436
  %12401 = sub i64 %12400, 188
  %12402 = load i64, i64* %PC.i1434
  %12403 = add i64 %12402, 6
  store i64 %12403, i64* %PC.i1434
  %12404 = inttoptr i64 %12401 to i32*
  %12405 = load i32, i32* %12404
  %12406 = zext i32 %12405 to i64
  store i64 %12406, i64* %RSI.i1435, align 8
  store %struct.Memory* %loadMem_406b78, %struct.Memory** %MEMORY
  %loadMem_406b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12408 = getelementptr inbounds %struct.GPR, %struct.GPR* %12407, i32 0, i32 33
  %12409 = getelementptr inbounds %struct.Reg, %struct.Reg* %12408, i32 0, i32 0
  %PC.i1431 = bitcast %union.anon* %12409 to i64*
  %12410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12411 = getelementptr inbounds %struct.GPR, %struct.GPR* %12410, i32 0, i32 5
  %12412 = getelementptr inbounds %struct.Reg, %struct.Reg* %12411, i32 0, i32 0
  %12413 = bitcast %union.anon* %12412 to %struct.anon.2*
  %CL.i1432 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12413, i32 0, i32 0
  %12414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12415 = getelementptr inbounds %struct.GPR, %struct.GPR* %12414, i32 0, i32 9
  %12416 = getelementptr inbounds %struct.Reg, %struct.Reg* %12415, i32 0, i32 0
  %RSI.i1433 = bitcast %union.anon* %12416 to i64*
  %12417 = load i64, i64* %RSI.i1433
  %12418 = load i8, i8* %CL.i1432
  %12419 = zext i8 %12418 to i64
  %12420 = load i64, i64* %PC.i1431
  %12421 = add i64 %12420, 2
  store i64 %12421, i64* %PC.i1431
  %12422 = trunc i64 %12419 to i5
  switch i5 %12422, label %12429 [
    i5 0, label %routine_shll__cl___esi.exit
    i5 1, label %12423
  ]

; <label>:12423:                                  ; preds = %block_.L_406b3f
  %12424 = trunc i64 %12417 to i32
  %12425 = shl i32 %12424, 1
  %12426 = icmp slt i32 %12424, 0
  %12427 = icmp slt i32 %12425, 0
  %12428 = xor i1 %12426, %12427
  br label %12438

; <label>:12429:                                  ; preds = %block_.L_406b3f
  %12430 = and i64 %12419, 31
  %12431 = add i64 %12430, 4294967295
  %12432 = and i64 %12417, 4294967295
  %12433 = and i64 %12431, 4294967295
  %12434 = shl i64 %12432, %12433
  %12435 = trunc i64 %12434 to i32
  %12436 = icmp slt i32 %12435, 0
  %12437 = shl i32 %12435, 1
  br label %12438

; <label>:12438:                                  ; preds = %12429, %12423
  %12439 = phi i1 [ %12426, %12423 ], [ %12436, %12429 ]
  %12440 = phi i1 [ %12428, %12423 ], [ false, %12429 ]
  %12441 = phi i32 [ %12425, %12423 ], [ %12437, %12429 ]
  %12442 = zext i32 %12441 to i64
  store i64 %12442, i64* %RSI.i1433, align 8
  %12443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12444 = zext i1 %12439 to i8
  store i8 %12444, i8* %12443, align 1
  %12445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12446 = and i32 %12441, 254
  %12447 = call i32 @llvm.ctpop.i32(i32 %12446)
  %12448 = trunc i32 %12447 to i8
  %12449 = and i8 %12448, 1
  %12450 = xor i8 %12449, 1
  store i8 %12450, i8* %12445, align 1
  %12451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12451, align 1
  %12452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12453 = icmp eq i32 %12441, 0
  %12454 = zext i1 %12453 to i8
  store i8 %12454, i8* %12452, align 1
  %12455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12456 = lshr i32 %12441, 31
  %12457 = trunc i32 %12456 to i8
  store i8 %12457, i8* %12455, align 1
  %12458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12459 = zext i1 %12440 to i8
  store i8 %12459, i8* %12458, align 1
  br label %routine_shll__cl___esi.exit

routine_shll__cl___esi.exit:                      ; preds = %block_.L_406b3f, %12438
  store %struct.Memory* %loadMem_406b7e, %struct.Memory** %MEMORY
  %loadMem_406b80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12461 = getelementptr inbounds %struct.GPR, %struct.GPR* %12460, i32 0, i32 33
  %12462 = getelementptr inbounds %struct.Reg, %struct.Reg* %12461, i32 0, i32 0
  %PC.i1428 = bitcast %union.anon* %12462 to i64*
  %12463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12464 = getelementptr inbounds %struct.GPR, %struct.GPR* %12463, i32 0, i32 9
  %12465 = getelementptr inbounds %struct.Reg, %struct.Reg* %12464, i32 0, i32 0
  %ESI.i1429 = bitcast %union.anon* %12465 to i32*
  %12466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12467 = getelementptr inbounds %struct.GPR, %struct.GPR* %12466, i32 0, i32 15
  %12468 = getelementptr inbounds %struct.Reg, %struct.Reg* %12467, i32 0, i32 0
  %RBP.i1430 = bitcast %union.anon* %12468 to i64*
  %12469 = load i64, i64* %RBP.i1430
  %12470 = sub i64 %12469, 40
  %12471 = load i32, i32* %ESI.i1429
  %12472 = zext i32 %12471 to i64
  %12473 = load i64, i64* %PC.i1428
  %12474 = add i64 %12473, 3
  store i64 %12474, i64* %PC.i1428
  %12475 = inttoptr i64 %12470 to i32*
  store i32 %12471, i32* %12475
  store %struct.Memory* %loadMem_406b80, %struct.Memory** %MEMORY
  br label %block_.L_406b83

block_.L_406b83:                                  ; preds = %routine_shll__cl___esi.exit, %routine_shll__cl___esi.exit1483
  %loadMem_406b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12477 = getelementptr inbounds %struct.GPR, %struct.GPR* %12476, i32 0, i32 33
  %12478 = getelementptr inbounds %struct.Reg, %struct.Reg* %12477, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %12478 to i64*
  %12479 = load i64, i64* %PC.i1427
  %12480 = add i64 %12479, 5
  %12481 = load i64, i64* %PC.i1427
  %12482 = add i64 %12481, 5
  store i64 %12482, i64* %PC.i1427
  %12483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12480, i64* %12483, align 8
  store %struct.Memory* %loadMem_406b83, %struct.Memory** %MEMORY
  br label %block_.L_406b88

block_.L_406b88:                                  ; preds = %block_.L_406b83, %block_.L_406ae7
  %loadMem_406b88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12485 = getelementptr inbounds %struct.GPR, %struct.GPR* %12484, i32 0, i32 33
  %12486 = getelementptr inbounds %struct.Reg, %struct.Reg* %12485, i32 0, i32 0
  %PC.i1426 = bitcast %union.anon* %12486 to i64*
  %12487 = load i64, i64* %PC.i1426
  %12488 = add i64 %12487, 5
  %12489 = load i64, i64* %PC.i1426
  %12490 = add i64 %12489, 5
  store i64 %12490, i64* %PC.i1426
  %12491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12488, i64* %12491, align 8
  store %struct.Memory* %loadMem_406b88, %struct.Memory** %MEMORY
  br label %block_.L_406b8d

block_.L_406b8d:                                  ; preds = %block_.L_406b88, %block_406a0f
  %loadMem_406b8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12493 = getelementptr inbounds %struct.GPR, %struct.GPR* %12492, i32 0, i32 33
  %12494 = getelementptr inbounds %struct.Reg, %struct.Reg* %12493, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %12494 to i64*
  %12495 = load i64, i64* %PC.i1425
  %12496 = add i64 %12495, 5
  %12497 = load i64, i64* %PC.i1425
  %12498 = add i64 %12497, 5
  store i64 %12498, i64* %PC.i1425
  %12499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12496, i64* %12499, align 8
  store %struct.Memory* %loadMem_406b8d, %struct.Memory** %MEMORY
  br label %block_.L_406b92

block_.L_406b92:                                  ; preds = %block_.L_406b8d, %block_.L_406914
  %loadMem_406b92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12501 = getelementptr inbounds %struct.GPR, %struct.GPR* %12500, i32 0, i32 33
  %12502 = getelementptr inbounds %struct.Reg, %struct.Reg* %12501, i32 0, i32 0
  %PC.i1423 = bitcast %union.anon* %12502 to i64*
  %12503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12504 = getelementptr inbounds %struct.GPR, %struct.GPR* %12503, i32 0, i32 15
  %12505 = getelementptr inbounds %struct.Reg, %struct.Reg* %12504, i32 0, i32 0
  %RBP.i1424 = bitcast %union.anon* %12505 to i64*
  %12506 = load i64, i64* %RBP.i1424
  %12507 = sub i64 %12506, 156
  %12508 = load i64, i64* %PC.i1423
  %12509 = add i64 %12508, 7
  store i64 %12509, i64* %PC.i1423
  %12510 = inttoptr i64 %12507 to i32*
  %12511 = load i32, i32* %12510
  %12512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12512, align 1
  %12513 = and i32 %12511, 255
  %12514 = call i32 @llvm.ctpop.i32(i32 %12513)
  %12515 = trunc i32 %12514 to i8
  %12516 = and i8 %12515, 1
  %12517 = xor i8 %12516, 1
  %12518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12517, i8* %12518, align 1
  %12519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12519, align 1
  %12520 = icmp eq i32 %12511, 0
  %12521 = zext i1 %12520 to i8
  %12522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12521, i8* %12522, align 1
  %12523 = lshr i32 %12511, 31
  %12524 = trunc i32 %12523 to i8
  %12525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12524, i8* %12525, align 1
  %12526 = lshr i32 %12511, 31
  %12527 = xor i32 %12523, %12526
  %12528 = add i32 %12527, %12526
  %12529 = icmp eq i32 %12528, 2
  %12530 = zext i1 %12529 to i8
  %12531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12530, i8* %12531, align 1
  store %struct.Memory* %loadMem_406b92, %struct.Memory** %MEMORY
  %loadMem_406b99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12533 = getelementptr inbounds %struct.GPR, %struct.GPR* %12532, i32 0, i32 33
  %12534 = getelementptr inbounds %struct.Reg, %struct.Reg* %12533, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %12534 to i64*
  %12535 = load i64, i64* %PC.i1422
  %12536 = add i64 %12535, 42
  %12537 = load i64, i64* %PC.i1422
  %12538 = add i64 %12537, 6
  %12539 = load i64, i64* %PC.i1422
  %12540 = add i64 %12539, 6
  store i64 %12540, i64* %PC.i1422
  %12541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12542 = load i8, i8* %12541, align 1
  %12543 = icmp eq i8 %12542, 0
  %12544 = zext i1 %12543 to i8
  store i8 %12544, i8* %BRANCH_TAKEN, align 1
  %12545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12546 = select i1 %12543, i64 %12536, i64 %12538
  store i64 %12546, i64* %12545, align 8
  store %struct.Memory* %loadMem_406b99, %struct.Memory** %MEMORY
  %loadBr_406b99 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406b99 = icmp eq i8 %loadBr_406b99, 1
  br i1 %cmpBr_406b99, label %block_.L_406bc3, label %block_406b9f

block_406b9f:                                     ; preds = %block_.L_406b92
  %loadMem_406b9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12548 = getelementptr inbounds %struct.GPR, %struct.GPR* %12547, i32 0, i32 33
  %12549 = getelementptr inbounds %struct.Reg, %struct.Reg* %12548, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %12549 to i64*
  %12550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12551 = getelementptr inbounds %struct.GPR, %struct.GPR* %12550, i32 0, i32 1
  %12552 = getelementptr inbounds %struct.Reg, %struct.Reg* %12551, i32 0, i32 0
  %RAX.i1420 = bitcast %union.anon* %12552 to i64*
  %12553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12554 = getelementptr inbounds %struct.GPR, %struct.GPR* %12553, i32 0, i32 15
  %12555 = getelementptr inbounds %struct.Reg, %struct.Reg* %12554, i32 0, i32 0
  %RBP.i1421 = bitcast %union.anon* %12555 to i64*
  %12556 = load i64, i64* %RBP.i1421
  %12557 = sub i64 %12556, 40
  %12558 = load i64, i64* %PC.i1419
  %12559 = add i64 %12558, 3
  store i64 %12559, i64* %PC.i1419
  %12560 = inttoptr i64 %12557 to i32*
  %12561 = load i32, i32* %12560
  %12562 = zext i32 %12561 to i64
  store i64 %12562, i64* %RAX.i1420, align 8
  store %struct.Memory* %loadMem_406b9f, %struct.Memory** %MEMORY
  %loadMem_406ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12564 = getelementptr inbounds %struct.GPR, %struct.GPR* %12563, i32 0, i32 33
  %12565 = getelementptr inbounds %struct.Reg, %struct.Reg* %12564, i32 0, i32 0
  %PC.i1417 = bitcast %union.anon* %12565 to i64*
  %12566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12567 = getelementptr inbounds %struct.GPR, %struct.GPR* %12566, i32 0, i32 5
  %12568 = getelementptr inbounds %struct.Reg, %struct.Reg* %12567, i32 0, i32 0
  %RCX.i1418 = bitcast %union.anon* %12568 to i64*
  %12569 = load i64, i64* %PC.i1417
  %12570 = add i64 %12569, 8
  store i64 %12570, i64* %PC.i1417
  %12571 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12571, i64* %RCX.i1418, align 8
  store %struct.Memory* %loadMem_406ba2, %struct.Memory** %MEMORY
  %loadMem_406baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12573 = getelementptr inbounds %struct.GPR, %struct.GPR* %12572, i32 0, i32 33
  %12574 = getelementptr inbounds %struct.Reg, %struct.Reg* %12573, i32 0, i32 0
  %PC.i1415 = bitcast %union.anon* %12574 to i64*
  %12575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12576 = getelementptr inbounds %struct.GPR, %struct.GPR* %12575, i32 0, i32 5
  %12577 = getelementptr inbounds %struct.Reg, %struct.Reg* %12576, i32 0, i32 0
  %RCX.i1416 = bitcast %union.anon* %12577 to i64*
  %12578 = load i64, i64* %RCX.i1416
  %12579 = load i64, i64* %PC.i1415
  %12580 = add i64 %12579, 7
  store i64 %12580, i64* %PC.i1415
  %12581 = add i64 13112, %12578
  store i64 %12581, i64* %RCX.i1416, align 8
  %12582 = icmp ult i64 %12581, %12578
  %12583 = icmp ult i64 %12581, 13112
  %12584 = or i1 %12582, %12583
  %12585 = zext i1 %12584 to i8
  %12586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12585, i8* %12586, align 1
  %12587 = trunc i64 %12581 to i32
  %12588 = and i32 %12587, 255
  %12589 = call i32 @llvm.ctpop.i32(i32 %12588)
  %12590 = trunc i32 %12589 to i8
  %12591 = and i8 %12590, 1
  %12592 = xor i8 %12591, 1
  %12593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12592, i8* %12593, align 1
  %12594 = xor i64 13112, %12578
  %12595 = xor i64 %12594, %12581
  %12596 = lshr i64 %12595, 4
  %12597 = trunc i64 %12596 to i8
  %12598 = and i8 %12597, 1
  %12599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12598, i8* %12599, align 1
  %12600 = icmp eq i64 %12581, 0
  %12601 = zext i1 %12600 to i8
  %12602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12601, i8* %12602, align 1
  %12603 = lshr i64 %12581, 63
  %12604 = trunc i64 %12603 to i8
  %12605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12604, i8* %12605, align 1
  %12606 = lshr i64 %12578, 63
  %12607 = xor i64 %12603, %12606
  %12608 = add i64 %12607, %12603
  %12609 = icmp eq i64 %12608, 2
  %12610 = zext i1 %12609 to i8
  %12611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12610, i8* %12611, align 1
  store %struct.Memory* %loadMem_406baa, %struct.Memory** %MEMORY
  %loadMem_406bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12613 = getelementptr inbounds %struct.GPR, %struct.GPR* %12612, i32 0, i32 33
  %12614 = getelementptr inbounds %struct.Reg, %struct.Reg* %12613, i32 0, i32 0
  %PC.i1412 = bitcast %union.anon* %12614 to i64*
  %12615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12616 = getelementptr inbounds %struct.GPR, %struct.GPR* %12615, i32 0, i32 7
  %12617 = getelementptr inbounds %struct.Reg, %struct.Reg* %12616, i32 0, i32 0
  %RDX.i1413 = bitcast %union.anon* %12617 to i64*
  %12618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12619 = getelementptr inbounds %struct.GPR, %struct.GPR* %12618, i32 0, i32 15
  %12620 = getelementptr inbounds %struct.Reg, %struct.Reg* %12619, i32 0, i32 0
  %RBP.i1414 = bitcast %union.anon* %12620 to i64*
  %12621 = load i64, i64* %RBP.i1414
  %12622 = sub i64 %12621, 24
  %12623 = load i64, i64* %PC.i1412
  %12624 = add i64 %12623, 4
  store i64 %12624, i64* %PC.i1412
  %12625 = inttoptr i64 %12622 to i32*
  %12626 = load i32, i32* %12625
  %12627 = sext i32 %12626 to i64
  store i64 %12627, i64* %RDX.i1413, align 8
  store %struct.Memory* %loadMem_406bb1, %struct.Memory** %MEMORY
  %loadMem_406bb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12629 = getelementptr inbounds %struct.GPR, %struct.GPR* %12628, i32 0, i32 33
  %12630 = getelementptr inbounds %struct.Reg, %struct.Reg* %12629, i32 0, i32 0
  %PC.i1410 = bitcast %union.anon* %12630 to i64*
  %12631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12632 = getelementptr inbounds %struct.GPR, %struct.GPR* %12631, i32 0, i32 7
  %12633 = getelementptr inbounds %struct.Reg, %struct.Reg* %12632, i32 0, i32 0
  %RDX.i1411 = bitcast %union.anon* %12633 to i64*
  %12634 = load i64, i64* %RDX.i1411
  %12635 = load i64, i64* %PC.i1410
  %12636 = add i64 %12635, 4
  store i64 %12636, i64* %PC.i1410
  %12637 = shl i64 %12634, 5
  %12638 = icmp slt i64 %12637, 0
  %12639 = shl i64 %12637, 1
  store i64 %12639, i64* %RDX.i1411, align 8
  %12640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12641 = zext i1 %12638 to i8
  store i8 %12641, i8* %12640, align 1
  %12642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12643 = trunc i64 %12639 to i32
  %12644 = and i32 %12643, 254
  %12645 = call i32 @llvm.ctpop.i32(i32 %12644)
  %12646 = trunc i32 %12645 to i8
  %12647 = and i8 %12646, 1
  %12648 = xor i8 %12647, 1
  store i8 %12648, i8* %12642, align 1
  %12649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12649, align 1
  %12650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12651 = icmp eq i64 %12639, 0
  %12652 = zext i1 %12651 to i8
  store i8 %12652, i8* %12650, align 1
  %12653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12654 = lshr i64 %12639, 63
  %12655 = trunc i64 %12654 to i8
  store i8 %12655, i8* %12653, align 1
  %12656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12656, align 1
  store %struct.Memory* %loadMem_406bb5, %struct.Memory** %MEMORY
  %loadMem_406bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12658 = getelementptr inbounds %struct.GPR, %struct.GPR* %12657, i32 0, i32 33
  %12659 = getelementptr inbounds %struct.Reg, %struct.Reg* %12658, i32 0, i32 0
  %PC.i1407 = bitcast %union.anon* %12659 to i64*
  %12660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12661 = getelementptr inbounds %struct.GPR, %struct.GPR* %12660, i32 0, i32 5
  %12662 = getelementptr inbounds %struct.Reg, %struct.Reg* %12661, i32 0, i32 0
  %RCX.i1408 = bitcast %union.anon* %12662 to i64*
  %12663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12664 = getelementptr inbounds %struct.GPR, %struct.GPR* %12663, i32 0, i32 7
  %12665 = getelementptr inbounds %struct.Reg, %struct.Reg* %12664, i32 0, i32 0
  %RDX.i1409 = bitcast %union.anon* %12665 to i64*
  %12666 = load i64, i64* %RCX.i1408
  %12667 = load i64, i64* %RDX.i1409
  %12668 = load i64, i64* %PC.i1407
  %12669 = add i64 %12668, 3
  store i64 %12669, i64* %PC.i1407
  %12670 = add i64 %12667, %12666
  store i64 %12670, i64* %RCX.i1408, align 8
  %12671 = icmp ult i64 %12670, %12666
  %12672 = icmp ult i64 %12670, %12667
  %12673 = or i1 %12671, %12672
  %12674 = zext i1 %12673 to i8
  %12675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12674, i8* %12675, align 1
  %12676 = trunc i64 %12670 to i32
  %12677 = and i32 %12676, 255
  %12678 = call i32 @llvm.ctpop.i32(i32 %12677)
  %12679 = trunc i32 %12678 to i8
  %12680 = and i8 %12679, 1
  %12681 = xor i8 %12680, 1
  %12682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12681, i8* %12682, align 1
  %12683 = xor i64 %12667, %12666
  %12684 = xor i64 %12683, %12670
  %12685 = lshr i64 %12684, 4
  %12686 = trunc i64 %12685 to i8
  %12687 = and i8 %12686, 1
  %12688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12687, i8* %12688, align 1
  %12689 = icmp eq i64 %12670, 0
  %12690 = zext i1 %12689 to i8
  %12691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12690, i8* %12691, align 1
  %12692 = lshr i64 %12670, 63
  %12693 = trunc i64 %12692 to i8
  %12694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12693, i8* %12694, align 1
  %12695 = lshr i64 %12666, 63
  %12696 = lshr i64 %12667, 63
  %12697 = xor i64 %12692, %12695
  %12698 = xor i64 %12692, %12696
  %12699 = add i64 %12697, %12698
  %12700 = icmp eq i64 %12699, 2
  %12701 = zext i1 %12700 to i8
  %12702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12701, i8* %12702, align 1
  store %struct.Memory* %loadMem_406bb9, %struct.Memory** %MEMORY
  %loadMem_406bbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12704 = getelementptr inbounds %struct.GPR, %struct.GPR* %12703, i32 0, i32 33
  %12705 = getelementptr inbounds %struct.Reg, %struct.Reg* %12704, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %12705 to i64*
  %12706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12707 = getelementptr inbounds %struct.GPR, %struct.GPR* %12706, i32 0, i32 7
  %12708 = getelementptr inbounds %struct.Reg, %struct.Reg* %12707, i32 0, i32 0
  %RDX.i1405 = bitcast %union.anon* %12708 to i64*
  %12709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12710 = getelementptr inbounds %struct.GPR, %struct.GPR* %12709, i32 0, i32 15
  %12711 = getelementptr inbounds %struct.Reg, %struct.Reg* %12710, i32 0, i32 0
  %RBP.i1406 = bitcast %union.anon* %12711 to i64*
  %12712 = load i64, i64* %RBP.i1406
  %12713 = sub i64 %12712, 28
  %12714 = load i64, i64* %PC.i1404
  %12715 = add i64 %12714, 4
  store i64 %12715, i64* %PC.i1404
  %12716 = inttoptr i64 %12713 to i32*
  %12717 = load i32, i32* %12716
  %12718 = sext i32 %12717 to i64
  store i64 %12718, i64* %RDX.i1405, align 8
  store %struct.Memory* %loadMem_406bbc, %struct.Memory** %MEMORY
  %loadMem_406bc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12720 = getelementptr inbounds %struct.GPR, %struct.GPR* %12719, i32 0, i32 33
  %12721 = getelementptr inbounds %struct.Reg, %struct.Reg* %12720, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %12721 to i64*
  %12722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12723 = getelementptr inbounds %struct.GPR, %struct.GPR* %12722, i32 0, i32 1
  %12724 = getelementptr inbounds %struct.Reg, %struct.Reg* %12723, i32 0, i32 0
  %EAX.i1401 = bitcast %union.anon* %12724 to i32*
  %12725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12726 = getelementptr inbounds %struct.GPR, %struct.GPR* %12725, i32 0, i32 5
  %12727 = getelementptr inbounds %struct.Reg, %struct.Reg* %12726, i32 0, i32 0
  %RCX.i1402 = bitcast %union.anon* %12727 to i64*
  %12728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12729 = getelementptr inbounds %struct.GPR, %struct.GPR* %12728, i32 0, i32 7
  %12730 = getelementptr inbounds %struct.Reg, %struct.Reg* %12729, i32 0, i32 0
  %RDX.i1403 = bitcast %union.anon* %12730 to i64*
  %12731 = load i64, i64* %RCX.i1402
  %12732 = load i64, i64* %RDX.i1403
  %12733 = mul i64 %12732, 4
  %12734 = add i64 %12733, %12731
  %12735 = load i32, i32* %EAX.i1401
  %12736 = zext i32 %12735 to i64
  %12737 = load i64, i64* %PC.i1400
  %12738 = add i64 %12737, 3
  store i64 %12738, i64* %PC.i1400
  %12739 = inttoptr i64 %12734 to i32*
  store i32 %12735, i32* %12739
  store %struct.Memory* %loadMem_406bc0, %struct.Memory** %MEMORY
  br label %block_.L_406bc3

block_.L_406bc3:                                  ; preds = %block_406b9f, %block_.L_406b92
  %loadMem_406bc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12741 = getelementptr inbounds %struct.GPR, %struct.GPR* %12740, i32 0, i32 33
  %12742 = getelementptr inbounds %struct.Reg, %struct.Reg* %12741, i32 0, i32 0
  %PC.i1399 = bitcast %union.anon* %12742 to i64*
  %12743 = load i64, i64* %PC.i1399
  %12744 = add i64 %12743, 5
  %12745 = load i64, i64* %PC.i1399
  %12746 = add i64 %12745, 5
  store i64 %12746, i64* %PC.i1399
  %12747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12744, i64* %12747, align 8
  store %struct.Memory* %loadMem_406bc3, %struct.Memory** %MEMORY
  br label %block_.L_406bc8

block_.L_406bc8:                                  ; preds = %block_.L_406bc3
  %loadMem_406bc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12749 = getelementptr inbounds %struct.GPR, %struct.GPR* %12748, i32 0, i32 33
  %12750 = getelementptr inbounds %struct.Reg, %struct.Reg* %12749, i32 0, i32 0
  %PC.i1396 = bitcast %union.anon* %12750 to i64*
  %12751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12752 = getelementptr inbounds %struct.GPR, %struct.GPR* %12751, i32 0, i32 1
  %12753 = getelementptr inbounds %struct.Reg, %struct.Reg* %12752, i32 0, i32 0
  %RAX.i1397 = bitcast %union.anon* %12753 to i64*
  %12754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12755 = getelementptr inbounds %struct.GPR, %struct.GPR* %12754, i32 0, i32 15
  %12756 = getelementptr inbounds %struct.Reg, %struct.Reg* %12755, i32 0, i32 0
  %RBP.i1398 = bitcast %union.anon* %12756 to i64*
  %12757 = load i64, i64* %RBP.i1398
  %12758 = sub i64 %12757, 84
  %12759 = load i64, i64* %PC.i1396
  %12760 = add i64 %12759, 3
  store i64 %12760, i64* %PC.i1396
  %12761 = inttoptr i64 %12758 to i32*
  %12762 = load i32, i32* %12761
  %12763 = zext i32 %12762 to i64
  store i64 %12763, i64* %RAX.i1397, align 8
  store %struct.Memory* %loadMem_406bc8, %struct.Memory** %MEMORY
  %loadMem_406bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12765 = getelementptr inbounds %struct.GPR, %struct.GPR* %12764, i32 0, i32 33
  %12766 = getelementptr inbounds %struct.Reg, %struct.Reg* %12765, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %12766 to i64*
  %12767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12768 = getelementptr inbounds %struct.GPR, %struct.GPR* %12767, i32 0, i32 1
  %12769 = getelementptr inbounds %struct.Reg, %struct.Reg* %12768, i32 0, i32 0
  %RAX.i1395 = bitcast %union.anon* %12769 to i64*
  %12770 = load i64, i64* %RAX.i1395
  %12771 = load i64, i64* %PC.i1394
  %12772 = add i64 %12771, 3
  store i64 %12772, i64* %PC.i1394
  %12773 = trunc i64 %12770 to i32
  %12774 = add i32 1, %12773
  %12775 = zext i32 %12774 to i64
  store i64 %12775, i64* %RAX.i1395, align 8
  %12776 = icmp ult i32 %12774, %12773
  %12777 = icmp ult i32 %12774, 1
  %12778 = or i1 %12776, %12777
  %12779 = zext i1 %12778 to i8
  %12780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12779, i8* %12780, align 1
  %12781 = and i32 %12774, 255
  %12782 = call i32 @llvm.ctpop.i32(i32 %12781)
  %12783 = trunc i32 %12782 to i8
  %12784 = and i8 %12783, 1
  %12785 = xor i8 %12784, 1
  %12786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12785, i8* %12786, align 1
  %12787 = xor i64 1, %12770
  %12788 = trunc i64 %12787 to i32
  %12789 = xor i32 %12788, %12774
  %12790 = lshr i32 %12789, 4
  %12791 = trunc i32 %12790 to i8
  %12792 = and i8 %12791, 1
  %12793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12792, i8* %12793, align 1
  %12794 = icmp eq i32 %12774, 0
  %12795 = zext i1 %12794 to i8
  %12796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12795, i8* %12796, align 1
  %12797 = lshr i32 %12774, 31
  %12798 = trunc i32 %12797 to i8
  %12799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12798, i8* %12799, align 1
  %12800 = lshr i32 %12773, 31
  %12801 = xor i32 %12797, %12800
  %12802 = add i32 %12801, %12797
  %12803 = icmp eq i32 %12802, 2
  %12804 = zext i1 %12803 to i8
  %12805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12804, i8* %12805, align 1
  store %struct.Memory* %loadMem_406bcb, %struct.Memory** %MEMORY
  %loadMem_406bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %12806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12807 = getelementptr inbounds %struct.GPR, %struct.GPR* %12806, i32 0, i32 33
  %12808 = getelementptr inbounds %struct.Reg, %struct.Reg* %12807, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %12808 to i64*
  %12809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12810 = getelementptr inbounds %struct.GPR, %struct.GPR* %12809, i32 0, i32 1
  %12811 = getelementptr inbounds %struct.Reg, %struct.Reg* %12810, i32 0, i32 0
  %EAX.i1392 = bitcast %union.anon* %12811 to i32*
  %12812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12813 = getelementptr inbounds %struct.GPR, %struct.GPR* %12812, i32 0, i32 15
  %12814 = getelementptr inbounds %struct.Reg, %struct.Reg* %12813, i32 0, i32 0
  %RBP.i1393 = bitcast %union.anon* %12814 to i64*
  %12815 = load i64, i64* %RBP.i1393
  %12816 = sub i64 %12815, 84
  %12817 = load i32, i32* %EAX.i1392
  %12818 = zext i32 %12817 to i64
  %12819 = load i64, i64* %PC.i1391
  %12820 = add i64 %12819, 3
  store i64 %12820, i64* %PC.i1391
  %12821 = inttoptr i64 %12816 to i32*
  store i32 %12817, i32* %12821
  store %struct.Memory* %loadMem_406bce, %struct.Memory** %MEMORY
  %loadMem_406bd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12823 = getelementptr inbounds %struct.GPR, %struct.GPR* %12822, i32 0, i32 33
  %12824 = getelementptr inbounds %struct.Reg, %struct.Reg* %12823, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %12824 to i64*
  %12825 = load i64, i64* %PC.i1390
  %12826 = add i64 %12825, -1180
  %12827 = load i64, i64* %PC.i1390
  %12828 = add i64 %12827, 5
  store i64 %12828, i64* %PC.i1390
  %12829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12826, i64* %12829, align 8
  store %struct.Memory* %loadMem_406bd1, %struct.Memory** %MEMORY
  br label %block_.L_406735

block_.L_406bd6:                                  ; preds = %block_.L_406735
  %loadMem_406bd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12831 = getelementptr inbounds %struct.GPR, %struct.GPR* %12830, i32 0, i32 33
  %12832 = getelementptr inbounds %struct.Reg, %struct.Reg* %12831, i32 0, i32 0
  %PC.i1387 = bitcast %union.anon* %12832 to i64*
  %12833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12834 = getelementptr inbounds %struct.GPR, %struct.GPR* %12833, i32 0, i32 1
  %12835 = getelementptr inbounds %struct.Reg, %struct.Reg* %12834, i32 0, i32 0
  %RAX.i1388 = bitcast %union.anon* %12835 to i64*
  %12836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12837 = getelementptr inbounds %struct.GPR, %struct.GPR* %12836, i32 0, i32 15
  %12838 = getelementptr inbounds %struct.Reg, %struct.Reg* %12837, i32 0, i32 0
  %RBP.i1389 = bitcast %union.anon* %12838 to i64*
  %12839 = load i64, i64* %RBP.i1389
  %12840 = sub i64 %12839, 136
  %12841 = load i64, i64* %PC.i1387
  %12842 = add i64 %12841, 7
  store i64 %12842, i64* %PC.i1387
  %12843 = inttoptr i64 %12840 to i64*
  %12844 = load i64, i64* %12843
  store i64 %12844, i64* %RAX.i1388, align 8
  store %struct.Memory* %loadMem_406bd6, %struct.Memory** %MEMORY
  %loadMem_406bdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12846 = getelementptr inbounds %struct.GPR, %struct.GPR* %12845, i32 0, i32 33
  %12847 = getelementptr inbounds %struct.Reg, %struct.Reg* %12846, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %12847 to i64*
  %12848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12849 = getelementptr inbounds %struct.GPR, %struct.GPR* %12848, i32 0, i32 5
  %12850 = getelementptr inbounds %struct.Reg, %struct.Reg* %12849, i32 0, i32 0
  %RCX.i1385 = bitcast %union.anon* %12850 to i64*
  %12851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12852 = getelementptr inbounds %struct.GPR, %struct.GPR* %12851, i32 0, i32 15
  %12853 = getelementptr inbounds %struct.Reg, %struct.Reg* %12852, i32 0, i32 0
  %RBP.i1386 = bitcast %union.anon* %12853 to i64*
  %12854 = load i64, i64* %RBP.i1386
  %12855 = sub i64 %12854, 92
  %12856 = load i64, i64* %PC.i1384
  %12857 = add i64 %12856, 4
  store i64 %12857, i64* %PC.i1384
  %12858 = inttoptr i64 %12855 to i32*
  %12859 = load i32, i32* %12858
  %12860 = sext i32 %12859 to i64
  store i64 %12860, i64* %RCX.i1385, align 8
  store %struct.Memory* %loadMem_406bdd, %struct.Memory** %MEMORY
  %loadMem_406be1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12862 = getelementptr inbounds %struct.GPR, %struct.GPR* %12861, i32 0, i32 33
  %12863 = getelementptr inbounds %struct.Reg, %struct.Reg* %12862, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %12863 to i64*
  %12864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12865 = getelementptr inbounds %struct.GPR, %struct.GPR* %12864, i32 0, i32 1
  %12866 = getelementptr inbounds %struct.Reg, %struct.Reg* %12865, i32 0, i32 0
  %RAX.i1382 = bitcast %union.anon* %12866 to i64*
  %12867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12868 = getelementptr inbounds %struct.GPR, %struct.GPR* %12867, i32 0, i32 5
  %12869 = getelementptr inbounds %struct.Reg, %struct.Reg* %12868, i32 0, i32 0
  %RCX.i1383 = bitcast %union.anon* %12869 to i64*
  %12870 = load i64, i64* %RAX.i1382
  %12871 = load i64, i64* %RCX.i1383
  %12872 = mul i64 %12871, 4
  %12873 = add i64 %12872, %12870
  %12874 = load i64, i64* %PC.i1381
  %12875 = add i64 %12874, 7
  store i64 %12875, i64* %PC.i1381
  %12876 = inttoptr i64 %12873 to i32*
  store i32 0, i32* %12876
  store %struct.Memory* %loadMem_406be1, %struct.Memory** %MEMORY
  %loadMem_406be8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12878 = getelementptr inbounds %struct.GPR, %struct.GPR* %12877, i32 0, i32 33
  %12879 = getelementptr inbounds %struct.Reg, %struct.Reg* %12878, i32 0, i32 0
  %PC.i1379 = bitcast %union.anon* %12879 to i64*
  %12880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12881 = getelementptr inbounds %struct.GPR, %struct.GPR* %12880, i32 0, i32 15
  %12882 = getelementptr inbounds %struct.Reg, %struct.Reg* %12881, i32 0, i32 0
  %RBP.i1380 = bitcast %union.anon* %12882 to i64*
  %12883 = load i64, i64* %RBP.i1380
  %12884 = sub i64 %12883, 28
  %12885 = load i64, i64* %PC.i1379
  %12886 = add i64 %12885, 7
  store i64 %12886, i64* %PC.i1379
  %12887 = inttoptr i64 %12884 to i32*
  store i32 0, i32* %12887
  store %struct.Memory* %loadMem_406be8, %struct.Memory** %MEMORY
  br label %block_.L_406bef

block_.L_406bef:                                  ; preds = %block_.L_406d2c, %block_.L_406bd6
  %loadMem_406bef = load %struct.Memory*, %struct.Memory** %MEMORY
  %12888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12889 = getelementptr inbounds %struct.GPR, %struct.GPR* %12888, i32 0, i32 33
  %12890 = getelementptr inbounds %struct.Reg, %struct.Reg* %12889, i32 0, i32 0
  %PC.i1376 = bitcast %union.anon* %12890 to i64*
  %12891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12892 = getelementptr inbounds %struct.GPR, %struct.GPR* %12891, i32 0, i32 1
  %12893 = getelementptr inbounds %struct.Reg, %struct.Reg* %12892, i32 0, i32 0
  %EAX.i1377 = bitcast %union.anon* %12893 to i32*
  %12894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12895 = getelementptr inbounds %struct.GPR, %struct.GPR* %12894, i32 0, i32 1
  %12896 = getelementptr inbounds %struct.Reg, %struct.Reg* %12895, i32 0, i32 0
  %RAX.i1378 = bitcast %union.anon* %12896 to i64*
  %12897 = load i64, i64* %RAX.i1378
  %12898 = load i32, i32* %EAX.i1377
  %12899 = zext i32 %12898 to i64
  %12900 = load i64, i64* %PC.i1376
  %12901 = add i64 %12900, 2
  store i64 %12901, i64* %PC.i1376
  %12902 = xor i64 %12899, %12897
  %12903 = trunc i64 %12902 to i32
  %12904 = and i64 %12902, 4294967295
  store i64 %12904, i64* %RAX.i1378, align 8
  %12905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12905, align 1
  %12906 = and i32 %12903, 255
  %12907 = call i32 @llvm.ctpop.i32(i32 %12906)
  %12908 = trunc i32 %12907 to i8
  %12909 = and i8 %12908, 1
  %12910 = xor i8 %12909, 1
  %12911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12910, i8* %12911, align 1
  %12912 = icmp eq i32 %12903, 0
  %12913 = zext i1 %12912 to i8
  %12914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12913, i8* %12914, align 1
  %12915 = lshr i32 %12903, 31
  %12916 = trunc i32 %12915 to i8
  %12917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12916, i8* %12917, align 1
  %12918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12918, align 1
  %12919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12919, align 1
  store %struct.Memory* %loadMem_406bef, %struct.Memory** %MEMORY
  %loadMem_406bf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12921 = getelementptr inbounds %struct.GPR, %struct.GPR* %12920, i32 0, i32 33
  %12922 = getelementptr inbounds %struct.Reg, %struct.Reg* %12921, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %12922 to i64*
  %12923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12924 = getelementptr inbounds %struct.GPR, %struct.GPR* %12923, i32 0, i32 1
  %12925 = getelementptr inbounds %struct.Reg, %struct.Reg* %12924, i32 0, i32 0
  %12926 = bitcast %union.anon* %12925 to %struct.anon.2*
  %AL.i1374 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12926, i32 0, i32 0
  %12927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12928 = getelementptr inbounds %struct.GPR, %struct.GPR* %12927, i32 0, i32 5
  %12929 = getelementptr inbounds %struct.Reg, %struct.Reg* %12928, i32 0, i32 0
  %12930 = bitcast %union.anon* %12929 to %struct.anon.2*
  %CL.i1375 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12930, i32 0, i32 0
  %12931 = load i8, i8* %AL.i1374
  %12932 = zext i8 %12931 to i64
  %12933 = load i64, i64* %PC.i1373
  %12934 = add i64 %12933, 2
  store i64 %12934, i64* %PC.i1373
  store i8 %12931, i8* %CL.i1375, align 1
  store %struct.Memory* %loadMem_406bf1, %struct.Memory** %MEMORY
  %loadMem_406bf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12936 = getelementptr inbounds %struct.GPR, %struct.GPR* %12935, i32 0, i32 33
  %12937 = getelementptr inbounds %struct.Reg, %struct.Reg* %12936, i32 0, i32 0
  %PC.i1371 = bitcast %union.anon* %12937 to i64*
  %12938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12939 = getelementptr inbounds %struct.GPR, %struct.GPR* %12938, i32 0, i32 15
  %12940 = getelementptr inbounds %struct.Reg, %struct.Reg* %12939, i32 0, i32 0
  %RBP.i1372 = bitcast %union.anon* %12940 to i64*
  %12941 = load i64, i64* %RBP.i1372
  %12942 = sub i64 %12941, 28
  %12943 = load i64, i64* %PC.i1371
  %12944 = add i64 %12943, 4
  store i64 %12944, i64* %PC.i1371
  %12945 = inttoptr i64 %12942 to i32*
  %12946 = load i32, i32* %12945
  %12947 = sub i32 %12946, 4
  %12948 = icmp ult i32 %12946, 4
  %12949 = zext i1 %12948 to i8
  %12950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12949, i8* %12950, align 1
  %12951 = and i32 %12947, 255
  %12952 = call i32 @llvm.ctpop.i32(i32 %12951)
  %12953 = trunc i32 %12952 to i8
  %12954 = and i8 %12953, 1
  %12955 = xor i8 %12954, 1
  %12956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12955, i8* %12956, align 1
  %12957 = xor i32 %12946, 4
  %12958 = xor i32 %12957, %12947
  %12959 = lshr i32 %12958, 4
  %12960 = trunc i32 %12959 to i8
  %12961 = and i8 %12960, 1
  %12962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12961, i8* %12962, align 1
  %12963 = icmp eq i32 %12947, 0
  %12964 = zext i1 %12963 to i8
  %12965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12964, i8* %12965, align 1
  %12966 = lshr i32 %12947, 31
  %12967 = trunc i32 %12966 to i8
  %12968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12967, i8* %12968, align 1
  %12969 = lshr i32 %12946, 31
  %12970 = xor i32 %12966, %12969
  %12971 = add i32 %12970, %12969
  %12972 = icmp eq i32 %12971, 2
  %12973 = zext i1 %12972 to i8
  %12974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12973, i8* %12974, align 1
  store %struct.Memory* %loadMem_406bf3, %struct.Memory** %MEMORY
  %loadMem_406bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12976 = getelementptr inbounds %struct.GPR, %struct.GPR* %12975, i32 0, i32 33
  %12977 = getelementptr inbounds %struct.Reg, %struct.Reg* %12976, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %12977 to i64*
  %12978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12979 = getelementptr inbounds %struct.GPR, %struct.GPR* %12978, i32 0, i32 5
  %12980 = getelementptr inbounds %struct.Reg, %struct.Reg* %12979, i32 0, i32 0
  %12981 = bitcast %union.anon* %12980 to %struct.anon.2*
  %CL.i1369 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12981, i32 0, i32 0
  %12982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12983 = getelementptr inbounds %struct.GPR, %struct.GPR* %12982, i32 0, i32 15
  %12984 = getelementptr inbounds %struct.Reg, %struct.Reg* %12983, i32 0, i32 0
  %RBP.i1370 = bitcast %union.anon* %12984 to i64*
  %12985 = load i64, i64* %RBP.i1370
  %12986 = sub i64 %12985, 189
  %12987 = load i8, i8* %CL.i1369
  %12988 = zext i8 %12987 to i64
  %12989 = load i64, i64* %PC.i1368
  %12990 = add i64 %12989, 6
  store i64 %12990, i64* %PC.i1368
  %12991 = inttoptr i64 %12986 to i8*
  store i8 %12987, i8* %12991
  store %struct.Memory* %loadMem_406bf7, %struct.Memory** %MEMORY
  %loadMem_406bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12993 = getelementptr inbounds %struct.GPR, %struct.GPR* %12992, i32 0, i32 33
  %12994 = getelementptr inbounds %struct.Reg, %struct.Reg* %12993, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %12994 to i64*
  %12995 = load i64, i64* %PC.i1367
  %12996 = add i64 %12995, 24
  %12997 = load i64, i64* %PC.i1367
  %12998 = add i64 %12997, 6
  %12999 = load i64, i64* %PC.i1367
  %13000 = add i64 %12999, 6
  store i64 %13000, i64* %PC.i1367
  %13001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13002 = load i8, i8* %13001, align 1
  %13003 = icmp ne i8 %13002, 0
  %13004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13005 = load i8, i8* %13004, align 1
  %13006 = icmp ne i8 %13005, 0
  %13007 = xor i1 %13003, %13006
  %13008 = xor i1 %13007, true
  %13009 = zext i1 %13008 to i8
  store i8 %13009, i8* %BRANCH_TAKEN, align 1
  %13010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13011 = select i1 %13007, i64 %12998, i64 %12996
  store i64 %13011, i64* %13010, align 8
  store %struct.Memory* %loadMem_406bfd, %struct.Memory** %MEMORY
  %loadBr_406bfd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406bfd = icmp eq i8 %loadBr_406bfd, 1
  br i1 %cmpBr_406bfd, label %block_.L_406c15, label %block_406c03

block_406c03:                                     ; preds = %block_.L_406bef
  %loadMem_406c03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13013 = getelementptr inbounds %struct.GPR, %struct.GPR* %13012, i32 0, i32 33
  %13014 = getelementptr inbounds %struct.Reg, %struct.Reg* %13013, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %13014 to i64*
  %13015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13016 = getelementptr inbounds %struct.GPR, %struct.GPR* %13015, i32 0, i32 15
  %13017 = getelementptr inbounds %struct.Reg, %struct.Reg* %13016, i32 0, i32 0
  %RBP.i1366 = bitcast %union.anon* %13017 to i64*
  %13018 = load i64, i64* %RBP.i1366
  %13019 = sub i64 %13018, 156
  %13020 = load i64, i64* %PC.i1365
  %13021 = add i64 %13020, 7
  store i64 %13021, i64* %PC.i1365
  %13022 = inttoptr i64 %13019 to i32*
  %13023 = load i32, i32* %13022
  %13024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13024, align 1
  %13025 = and i32 %13023, 255
  %13026 = call i32 @llvm.ctpop.i32(i32 %13025)
  %13027 = trunc i32 %13026 to i8
  %13028 = and i8 %13027, 1
  %13029 = xor i8 %13028, 1
  %13030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13029, i8* %13030, align 1
  %13031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13031, align 1
  %13032 = icmp eq i32 %13023, 0
  %13033 = zext i1 %13032 to i8
  %13034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13033, i8* %13034, align 1
  %13035 = lshr i32 %13023, 31
  %13036 = trunc i32 %13035 to i8
  %13037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13036, i8* %13037, align 1
  %13038 = lshr i32 %13023, 31
  %13039 = xor i32 %13035, %13038
  %13040 = add i32 %13039, %13038
  %13041 = icmp eq i32 %13040, 2
  %13042 = zext i1 %13041 to i8
  %13043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13042, i8* %13043, align 1
  store %struct.Memory* %loadMem_406c03, %struct.Memory** %MEMORY
  %loadMem_406c0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13045 = getelementptr inbounds %struct.GPR, %struct.GPR* %13044, i32 0, i32 33
  %13046 = getelementptr inbounds %struct.Reg, %struct.Reg* %13045, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %13046 to i64*
  %13047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13048 = getelementptr inbounds %struct.GPR, %struct.GPR* %13047, i32 0, i32 1
  %13049 = getelementptr inbounds %struct.Reg, %struct.Reg* %13048, i32 0, i32 0
  %13050 = bitcast %union.anon* %13049 to %struct.anon.2*
  %AL.i1364 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13050, i32 0, i32 0
  %13051 = load i64, i64* %PC.i1363
  %13052 = add i64 %13051, 3
  store i64 %13052, i64* %PC.i1363
  %13053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13054 = load i8, i8* %13053, align 1
  %13055 = icmp eq i8 %13054, 0
  %13056 = zext i1 %13055 to i8
  store i8 %13056, i8* %AL.i1364, align 1
  store %struct.Memory* %loadMem_406c0a, %struct.Memory** %MEMORY
  %loadMem_406c0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13058 = getelementptr inbounds %struct.GPR, %struct.GPR* %13057, i32 0, i32 33
  %13059 = getelementptr inbounds %struct.Reg, %struct.Reg* %13058, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %13059 to i64*
  %13060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13061 = getelementptr inbounds %struct.GPR, %struct.GPR* %13060, i32 0, i32 1
  %13062 = getelementptr inbounds %struct.Reg, %struct.Reg* %13061, i32 0, i32 0
  %13063 = bitcast %union.anon* %13062 to %struct.anon.2*
  %AL.i1362 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13063, i32 0, i32 0
  %13064 = load i8, i8* %AL.i1362
  %13065 = zext i8 %13064 to i64
  %13066 = load i64, i64* %PC.i1361
  %13067 = add i64 %13066, 2
  store i64 %13067, i64* %PC.i1361
  %13068 = xor i64 255, %13065
  %13069 = trunc i64 %13068 to i8
  store i8 %13069, i8* %AL.i1362, align 1
  %13070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13070, align 1
  %13071 = trunc i64 %13068 to i32
  %13072 = and i32 %13071, 255
  %13073 = call i32 @llvm.ctpop.i32(i32 %13072)
  %13074 = trunc i32 %13073 to i8
  %13075 = and i8 %13074, 1
  %13076 = xor i8 %13075, 1
  %13077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13076, i8* %13077, align 1
  %13078 = icmp eq i8 %13069, 0
  %13079 = zext i1 %13078 to i8
  %13080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13079, i8* %13080, align 1
  %13081 = lshr i8 %13069, 7
  %13082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13081, i8* %13082, align 1
  %13083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13083, align 1
  %13084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13084, align 1
  store %struct.Memory* %loadMem_406c0d, %struct.Memory** %MEMORY
  %loadMem_406c0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13086 = getelementptr inbounds %struct.GPR, %struct.GPR* %13085, i32 0, i32 33
  %13087 = getelementptr inbounds %struct.Reg, %struct.Reg* %13086, i32 0, i32 0
  %PC.i1358 = bitcast %union.anon* %13087 to i64*
  %13088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13089 = getelementptr inbounds %struct.GPR, %struct.GPR* %13088, i32 0, i32 1
  %13090 = getelementptr inbounds %struct.Reg, %struct.Reg* %13089, i32 0, i32 0
  %13091 = bitcast %union.anon* %13090 to %struct.anon.2*
  %AL.i1359 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13091, i32 0, i32 0
  %13092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13093 = getelementptr inbounds %struct.GPR, %struct.GPR* %13092, i32 0, i32 15
  %13094 = getelementptr inbounds %struct.Reg, %struct.Reg* %13093, i32 0, i32 0
  %RBP.i1360 = bitcast %union.anon* %13094 to i64*
  %13095 = load i64, i64* %RBP.i1360
  %13096 = sub i64 %13095, 189
  %13097 = load i8, i8* %AL.i1359
  %13098 = zext i8 %13097 to i64
  %13099 = load i64, i64* %PC.i1358
  %13100 = add i64 %13099, 6
  store i64 %13100, i64* %PC.i1358
  %13101 = inttoptr i64 %13096 to i8*
  store i8 %13097, i8* %13101
  store %struct.Memory* %loadMem_406c0f, %struct.Memory** %MEMORY
  br label %block_.L_406c15

block_.L_406c15:                                  ; preds = %block_406c03, %block_.L_406bef
  %loadMem_406c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13103 = getelementptr inbounds %struct.GPR, %struct.GPR* %13102, i32 0, i32 33
  %13104 = getelementptr inbounds %struct.Reg, %struct.Reg* %13103, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %13104 to i64*
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13106 = getelementptr inbounds %struct.GPR, %struct.GPR* %13105, i32 0, i32 1
  %13107 = getelementptr inbounds %struct.Reg, %struct.Reg* %13106, i32 0, i32 0
  %13108 = bitcast %union.anon* %13107 to %struct.anon.2*
  %AL.i1356 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13108, i32 0, i32 0
  %13109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13110 = getelementptr inbounds %struct.GPR, %struct.GPR* %13109, i32 0, i32 15
  %13111 = getelementptr inbounds %struct.Reg, %struct.Reg* %13110, i32 0, i32 0
  %RBP.i1357 = bitcast %union.anon* %13111 to i64*
  %13112 = load i64, i64* %RBP.i1357
  %13113 = sub i64 %13112, 189
  %13114 = load i64, i64* %PC.i1355
  %13115 = add i64 %13114, 6
  store i64 %13115, i64* %PC.i1355
  %13116 = inttoptr i64 %13113 to i8*
  %13117 = load i8, i8* %13116
  store i8 %13117, i8* %AL.i1356, align 1
  store %struct.Memory* %loadMem_406c15, %struct.Memory** %MEMORY
  %loadMem_406c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13119 = getelementptr inbounds %struct.GPR, %struct.GPR* %13118, i32 0, i32 33
  %13120 = getelementptr inbounds %struct.Reg, %struct.Reg* %13119, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %13120 to i64*
  %13121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13122 = getelementptr inbounds %struct.GPR, %struct.GPR* %13121, i32 0, i32 1
  %13123 = getelementptr inbounds %struct.Reg, %struct.Reg* %13122, i32 0, i32 0
  %13124 = bitcast %union.anon* %13123 to %struct.anon.2*
  %AL.i1354 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13124, i32 0, i32 0
  %13125 = load i8, i8* %AL.i1354
  %13126 = zext i8 %13125 to i64
  %13127 = load i64, i64* %PC.i1353
  %13128 = add i64 %13127, 2
  store i64 %13128, i64* %PC.i1353
  %13129 = and i64 1, %13126
  %13130 = trunc i64 %13129 to i8
  %13131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13131, align 1
  %13132 = trunc i64 %13129 to i32
  %13133 = and i32 %13132, 255
  %13134 = call i32 @llvm.ctpop.i32(i32 %13133)
  %13135 = trunc i32 %13134 to i8
  %13136 = and i8 %13135, 1
  %13137 = xor i8 %13136, 1
  %13138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13137, i8* %13138, align 1
  %13139 = icmp eq i8 %13130, 0
  %13140 = zext i1 %13139 to i8
  %13141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13140, i8* %13141, align 1
  %13142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13142, align 1
  %13143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13143, align 1
  %13144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13144, align 1
  store %struct.Memory* %loadMem_406c1b, %struct.Memory** %MEMORY
  %loadMem_406c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13146 = getelementptr inbounds %struct.GPR, %struct.GPR* %13145, i32 0, i32 33
  %13147 = getelementptr inbounds %struct.Reg, %struct.Reg* %13146, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %13147 to i64*
  %13148 = load i64, i64* %PC.i1352
  %13149 = add i64 %13148, 11
  %13150 = load i64, i64* %PC.i1352
  %13151 = add i64 %13150, 6
  %13152 = load i64, i64* %PC.i1352
  %13153 = add i64 %13152, 6
  store i64 %13153, i64* %PC.i1352
  %13154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13155 = load i8, i8* %13154, align 1
  %13156 = icmp eq i8 %13155, 0
  %13157 = zext i1 %13156 to i8
  store i8 %13157, i8* %BRANCH_TAKEN, align 1
  %13158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13159 = select i1 %13156, i64 %13149, i64 %13151
  store i64 %13159, i64* %13158, align 8
  store %struct.Memory* %loadMem_406c1d, %struct.Memory** %MEMORY
  %loadBr_406c1d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406c1d = icmp eq i8 %loadBr_406c1d, 1
  br i1 %cmpBr_406c1d, label %block_.L_406c28, label %block_406c23

block_406c23:                                     ; preds = %block_.L_406c15
  %loadMem_406c23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13161 = getelementptr inbounds %struct.GPR, %struct.GPR* %13160, i32 0, i32 33
  %13162 = getelementptr inbounds %struct.Reg, %struct.Reg* %13161, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %13162 to i64*
  %13163 = load i64, i64* %PC.i1351
  %13164 = add i64 %13163, 279
  %13165 = load i64, i64* %PC.i1351
  %13166 = add i64 %13165, 5
  store i64 %13166, i64* %PC.i1351
  %13167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13164, i64* %13167, align 8
  store %struct.Memory* %loadMem_406c23, %struct.Memory** %MEMORY
  br label %block_.L_406d3a

block_.L_406c28:                                  ; preds = %block_.L_406c15
  %loadMem_406c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13169 = getelementptr inbounds %struct.GPR, %struct.GPR* %13168, i32 0, i32 33
  %13170 = getelementptr inbounds %struct.Reg, %struct.Reg* %13169, i32 0, i32 0
  %PC.i1349 = bitcast %union.anon* %13170 to i64*
  %13171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13172 = getelementptr inbounds %struct.GPR, %struct.GPR* %13171, i32 0, i32 15
  %13173 = getelementptr inbounds %struct.Reg, %struct.Reg* %13172, i32 0, i32 0
  %RBP.i1350 = bitcast %union.anon* %13173 to i64*
  %13174 = load i64, i64* %RBP.i1350
  %13175 = sub i64 %13174, 24
  %13176 = load i64, i64* %PC.i1349
  %13177 = add i64 %13176, 7
  store i64 %13177, i64* %PC.i1349
  %13178 = inttoptr i64 %13175 to i32*
  store i32 0, i32* %13178
  store %struct.Memory* %loadMem_406c28, %struct.Memory** %MEMORY
  br label %block_.L_406c2f

block_.L_406c2f:                                  ; preds = %block_406c39, %block_.L_406c28
  %loadMem_406c2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13180 = getelementptr inbounds %struct.GPR, %struct.GPR* %13179, i32 0, i32 33
  %13181 = getelementptr inbounds %struct.Reg, %struct.Reg* %13180, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %13181 to i64*
  %13182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13183 = getelementptr inbounds %struct.GPR, %struct.GPR* %13182, i32 0, i32 15
  %13184 = getelementptr inbounds %struct.Reg, %struct.Reg* %13183, i32 0, i32 0
  %RBP.i1348 = bitcast %union.anon* %13184 to i64*
  %13185 = load i64, i64* %RBP.i1348
  %13186 = sub i64 %13185, 24
  %13187 = load i64, i64* %PC.i1347
  %13188 = add i64 %13187, 4
  store i64 %13188, i64* %PC.i1347
  %13189 = inttoptr i64 %13186 to i32*
  %13190 = load i32, i32* %13189
  %13191 = sub i32 %13190, 4
  %13192 = icmp ult i32 %13190, 4
  %13193 = zext i1 %13192 to i8
  %13194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13193, i8* %13194, align 1
  %13195 = and i32 %13191, 255
  %13196 = call i32 @llvm.ctpop.i32(i32 %13195)
  %13197 = trunc i32 %13196 to i8
  %13198 = and i8 %13197, 1
  %13199 = xor i8 %13198, 1
  %13200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13199, i8* %13200, align 1
  %13201 = xor i32 %13190, 4
  %13202 = xor i32 %13201, %13191
  %13203 = lshr i32 %13202, 4
  %13204 = trunc i32 %13203 to i8
  %13205 = and i8 %13204, 1
  %13206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13205, i8* %13206, align 1
  %13207 = icmp eq i32 %13191, 0
  %13208 = zext i1 %13207 to i8
  %13209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13208, i8* %13209, align 1
  %13210 = lshr i32 %13191, 31
  %13211 = trunc i32 %13210 to i8
  %13212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13211, i8* %13212, align 1
  %13213 = lshr i32 %13190, 31
  %13214 = xor i32 %13210, %13213
  %13215 = add i32 %13214, %13213
  %13216 = icmp eq i32 %13215, 2
  %13217 = zext i1 %13216 to i8
  %13218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13217, i8* %13218, align 1
  store %struct.Memory* %loadMem_406c2f, %struct.Memory** %MEMORY
  %loadMem_406c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13220 = getelementptr inbounds %struct.GPR, %struct.GPR* %13219, i32 0, i32 33
  %13221 = getelementptr inbounds %struct.Reg, %struct.Reg* %13220, i32 0, i32 0
  %PC.i1346 = bitcast %union.anon* %13221 to i64*
  %13222 = load i64, i64* %PC.i1346
  %13223 = add i64 %13222, 60
  %13224 = load i64, i64* %PC.i1346
  %13225 = add i64 %13224, 6
  %13226 = load i64, i64* %PC.i1346
  %13227 = add i64 %13226, 6
  store i64 %13227, i64* %PC.i1346
  %13228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13229 = load i8, i8* %13228, align 1
  %13230 = icmp ne i8 %13229, 0
  %13231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13232 = load i8, i8* %13231, align 1
  %13233 = icmp ne i8 %13232, 0
  %13234 = xor i1 %13230, %13233
  %13235 = xor i1 %13234, true
  %13236 = zext i1 %13235 to i8
  store i8 %13236, i8* %BRANCH_TAKEN, align 1
  %13237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13238 = select i1 %13234, i64 %13225, i64 %13223
  store i64 %13238, i64* %13237, align 8
  store %struct.Memory* %loadMem_406c33, %struct.Memory** %MEMORY
  %loadBr_406c33 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406c33 = icmp eq i8 %loadBr_406c33, 1
  br i1 %cmpBr_406c33, label %block_.L_406c6f, label %block_406c39

block_406c39:                                     ; preds = %block_.L_406c2f
  %loadMem_406c39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13240 = getelementptr inbounds %struct.GPR, %struct.GPR* %13239, i32 0, i32 33
  %13241 = getelementptr inbounds %struct.Reg, %struct.Reg* %13240, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %13241 to i64*
  %13242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13243 = getelementptr inbounds %struct.GPR, %struct.GPR* %13242, i32 0, i32 1
  %13244 = getelementptr inbounds %struct.Reg, %struct.Reg* %13243, i32 0, i32 0
  %RAX.i1345 = bitcast %union.anon* %13244 to i64*
  %13245 = load i64, i64* %PC.i1344
  %13246 = add i64 %13245, 8
  store i64 %13246, i64* %PC.i1344
  %13247 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13247, i64* %RAX.i1345, align 8
  store %struct.Memory* %loadMem_406c39, %struct.Memory** %MEMORY
  %loadMem_406c41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13249 = getelementptr inbounds %struct.GPR, %struct.GPR* %13248, i32 0, i32 33
  %13250 = getelementptr inbounds %struct.Reg, %struct.Reg* %13249, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %13250 to i64*
  %13251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13252 = getelementptr inbounds %struct.GPR, %struct.GPR* %13251, i32 0, i32 1
  %13253 = getelementptr inbounds %struct.Reg, %struct.Reg* %13252, i32 0, i32 0
  %RAX.i1343 = bitcast %union.anon* %13253 to i64*
  %13254 = load i64, i64* %RAX.i1343
  %13255 = load i64, i64* %PC.i1342
  %13256 = add i64 %13255, 6
  store i64 %13256, i64* %PC.i1342
  %13257 = add i64 13112, %13254
  store i64 %13257, i64* %RAX.i1343, align 8
  %13258 = icmp ult i64 %13257, %13254
  %13259 = icmp ult i64 %13257, 13112
  %13260 = or i1 %13258, %13259
  %13261 = zext i1 %13260 to i8
  %13262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13261, i8* %13262, align 1
  %13263 = trunc i64 %13257 to i32
  %13264 = and i32 %13263, 255
  %13265 = call i32 @llvm.ctpop.i32(i32 %13264)
  %13266 = trunc i32 %13265 to i8
  %13267 = and i8 %13266, 1
  %13268 = xor i8 %13267, 1
  %13269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13268, i8* %13269, align 1
  %13270 = xor i64 13112, %13254
  %13271 = xor i64 %13270, %13257
  %13272 = lshr i64 %13271, 4
  %13273 = trunc i64 %13272 to i8
  %13274 = and i8 %13273, 1
  %13275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13274, i8* %13275, align 1
  %13276 = icmp eq i64 %13257, 0
  %13277 = zext i1 %13276 to i8
  %13278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13277, i8* %13278, align 1
  %13279 = lshr i64 %13257, 63
  %13280 = trunc i64 %13279 to i8
  %13281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13280, i8* %13281, align 1
  %13282 = lshr i64 %13254, 63
  %13283 = xor i64 %13279, %13282
  %13284 = add i64 %13283, %13279
  %13285 = icmp eq i64 %13284, 2
  %13286 = zext i1 %13285 to i8
  %13287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13286, i8* %13287, align 1
  store %struct.Memory* %loadMem_406c41, %struct.Memory** %MEMORY
  %loadMem_406c47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13289 = getelementptr inbounds %struct.GPR, %struct.GPR* %13288, i32 0, i32 33
  %13290 = getelementptr inbounds %struct.Reg, %struct.Reg* %13289, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %13290 to i64*
  %13291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13292 = getelementptr inbounds %struct.GPR, %struct.GPR* %13291, i32 0, i32 5
  %13293 = getelementptr inbounds %struct.Reg, %struct.Reg* %13292, i32 0, i32 0
  %RCX.i1340 = bitcast %union.anon* %13293 to i64*
  %13294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13295 = getelementptr inbounds %struct.GPR, %struct.GPR* %13294, i32 0, i32 15
  %13296 = getelementptr inbounds %struct.Reg, %struct.Reg* %13295, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %13296 to i64*
  %13297 = load i64, i64* %RBP.i1341
  %13298 = sub i64 %13297, 24
  %13299 = load i64, i64* %PC.i1339
  %13300 = add i64 %13299, 4
  store i64 %13300, i64* %PC.i1339
  %13301 = inttoptr i64 %13298 to i32*
  %13302 = load i32, i32* %13301
  %13303 = sext i32 %13302 to i64
  store i64 %13303, i64* %RCX.i1340, align 8
  store %struct.Memory* %loadMem_406c47, %struct.Memory** %MEMORY
  %loadMem_406c4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13305 = getelementptr inbounds %struct.GPR, %struct.GPR* %13304, i32 0, i32 33
  %13306 = getelementptr inbounds %struct.Reg, %struct.Reg* %13305, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %13306 to i64*
  %13307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13308 = getelementptr inbounds %struct.GPR, %struct.GPR* %13307, i32 0, i32 5
  %13309 = getelementptr inbounds %struct.Reg, %struct.Reg* %13308, i32 0, i32 0
  %RCX.i1338 = bitcast %union.anon* %13309 to i64*
  %13310 = load i64, i64* %RCX.i1338
  %13311 = load i64, i64* %PC.i1337
  %13312 = add i64 %13311, 4
  store i64 %13312, i64* %PC.i1337
  %13313 = shl i64 %13310, 5
  %13314 = icmp slt i64 %13313, 0
  %13315 = shl i64 %13313, 1
  store i64 %13315, i64* %RCX.i1338, align 8
  %13316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13317 = zext i1 %13314 to i8
  store i8 %13317, i8* %13316, align 1
  %13318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13319 = trunc i64 %13315 to i32
  %13320 = and i32 %13319, 254
  %13321 = call i32 @llvm.ctpop.i32(i32 %13320)
  %13322 = trunc i32 %13321 to i8
  %13323 = and i8 %13322, 1
  %13324 = xor i8 %13323, 1
  store i8 %13324, i8* %13318, align 1
  %13325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13325, align 1
  %13326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13327 = icmp eq i64 %13315, 0
  %13328 = zext i1 %13327 to i8
  store i8 %13328, i8* %13326, align 1
  %13329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13330 = lshr i64 %13315, 63
  %13331 = trunc i64 %13330 to i8
  store i8 %13331, i8* %13329, align 1
  %13332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13332, align 1
  store %struct.Memory* %loadMem_406c4b, %struct.Memory** %MEMORY
  %loadMem_406c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13334 = getelementptr inbounds %struct.GPR, %struct.GPR* %13333, i32 0, i32 33
  %13335 = getelementptr inbounds %struct.Reg, %struct.Reg* %13334, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %13335 to i64*
  %13336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13337 = getelementptr inbounds %struct.GPR, %struct.GPR* %13336, i32 0, i32 1
  %13338 = getelementptr inbounds %struct.Reg, %struct.Reg* %13337, i32 0, i32 0
  %RAX.i1335 = bitcast %union.anon* %13338 to i64*
  %13339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13340 = getelementptr inbounds %struct.GPR, %struct.GPR* %13339, i32 0, i32 5
  %13341 = getelementptr inbounds %struct.Reg, %struct.Reg* %13340, i32 0, i32 0
  %RCX.i1336 = bitcast %union.anon* %13341 to i64*
  %13342 = load i64, i64* %RAX.i1335
  %13343 = load i64, i64* %RCX.i1336
  %13344 = load i64, i64* %PC.i1334
  %13345 = add i64 %13344, 3
  store i64 %13345, i64* %PC.i1334
  %13346 = add i64 %13343, %13342
  store i64 %13346, i64* %RAX.i1335, align 8
  %13347 = icmp ult i64 %13346, %13342
  %13348 = icmp ult i64 %13346, %13343
  %13349 = or i1 %13347, %13348
  %13350 = zext i1 %13349 to i8
  %13351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13350, i8* %13351, align 1
  %13352 = trunc i64 %13346 to i32
  %13353 = and i32 %13352, 255
  %13354 = call i32 @llvm.ctpop.i32(i32 %13353)
  %13355 = trunc i32 %13354 to i8
  %13356 = and i8 %13355, 1
  %13357 = xor i8 %13356, 1
  %13358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13357, i8* %13358, align 1
  %13359 = xor i64 %13343, %13342
  %13360 = xor i64 %13359, %13346
  %13361 = lshr i64 %13360, 4
  %13362 = trunc i64 %13361 to i8
  %13363 = and i8 %13362, 1
  %13364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13363, i8* %13364, align 1
  %13365 = icmp eq i64 %13346, 0
  %13366 = zext i1 %13365 to i8
  %13367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13366, i8* %13367, align 1
  %13368 = lshr i64 %13346, 63
  %13369 = trunc i64 %13368 to i8
  %13370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13369, i8* %13370, align 1
  %13371 = lshr i64 %13342, 63
  %13372 = lshr i64 %13343, 63
  %13373 = xor i64 %13368, %13371
  %13374 = xor i64 %13368, %13372
  %13375 = add i64 %13373, %13374
  %13376 = icmp eq i64 %13375, 2
  %13377 = zext i1 %13376 to i8
  %13378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13377, i8* %13378, align 1
  store %struct.Memory* %loadMem_406c4f, %struct.Memory** %MEMORY
  %loadMem_406c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13380 = getelementptr inbounds %struct.GPR, %struct.GPR* %13379, i32 0, i32 33
  %13381 = getelementptr inbounds %struct.Reg, %struct.Reg* %13380, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %13381 to i64*
  %13382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13383 = getelementptr inbounds %struct.GPR, %struct.GPR* %13382, i32 0, i32 5
  %13384 = getelementptr inbounds %struct.Reg, %struct.Reg* %13383, i32 0, i32 0
  %RCX.i1332 = bitcast %union.anon* %13384 to i64*
  %13385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13386 = getelementptr inbounds %struct.GPR, %struct.GPR* %13385, i32 0, i32 15
  %13387 = getelementptr inbounds %struct.Reg, %struct.Reg* %13386, i32 0, i32 0
  %RBP.i1333 = bitcast %union.anon* %13387 to i64*
  %13388 = load i64, i64* %RBP.i1333
  %13389 = sub i64 %13388, 28
  %13390 = load i64, i64* %PC.i1331
  %13391 = add i64 %13390, 4
  store i64 %13391, i64* %PC.i1331
  %13392 = inttoptr i64 %13389 to i32*
  %13393 = load i32, i32* %13392
  %13394 = sext i32 %13393 to i64
  store i64 %13394, i64* %RCX.i1332, align 8
  store %struct.Memory* %loadMem_406c52, %struct.Memory** %MEMORY
  %loadMem_406c56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13396 = getelementptr inbounds %struct.GPR, %struct.GPR* %13395, i32 0, i32 33
  %13397 = getelementptr inbounds %struct.Reg, %struct.Reg* %13396, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %13397 to i64*
  %13398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13399 = getelementptr inbounds %struct.GPR, %struct.GPR* %13398, i32 0, i32 1
  %13400 = getelementptr inbounds %struct.Reg, %struct.Reg* %13399, i32 0, i32 0
  %RAX.i1328 = bitcast %union.anon* %13400 to i64*
  %13401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13402 = getelementptr inbounds %struct.GPR, %struct.GPR* %13401, i32 0, i32 5
  %13403 = getelementptr inbounds %struct.Reg, %struct.Reg* %13402, i32 0, i32 0
  %RCX.i1329 = bitcast %union.anon* %13403 to i64*
  %13404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13405 = getelementptr inbounds %struct.GPR, %struct.GPR* %13404, i32 0, i32 7
  %13406 = getelementptr inbounds %struct.Reg, %struct.Reg* %13405, i32 0, i32 0
  %RDX.i1330 = bitcast %union.anon* %13406 to i64*
  %13407 = load i64, i64* %RAX.i1328
  %13408 = load i64, i64* %RCX.i1329
  %13409 = mul i64 %13408, 4
  %13410 = add i64 %13409, %13407
  %13411 = load i64, i64* %PC.i1327
  %13412 = add i64 %13411, 3
  store i64 %13412, i64* %PC.i1327
  %13413 = inttoptr i64 %13410 to i32*
  %13414 = load i32, i32* %13413
  %13415 = zext i32 %13414 to i64
  store i64 %13415, i64* %RDX.i1330, align 8
  store %struct.Memory* %loadMem_406c56, %struct.Memory** %MEMORY
  %loadMem_406c59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13417 = getelementptr inbounds %struct.GPR, %struct.GPR* %13416, i32 0, i32 33
  %13418 = getelementptr inbounds %struct.Reg, %struct.Reg* %13417, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %13418 to i64*
  %13419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13420 = getelementptr inbounds %struct.GPR, %struct.GPR* %13419, i32 0, i32 1
  %13421 = getelementptr inbounds %struct.Reg, %struct.Reg* %13420, i32 0, i32 0
  %RAX.i1325 = bitcast %union.anon* %13421 to i64*
  %13422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13423 = getelementptr inbounds %struct.GPR, %struct.GPR* %13422, i32 0, i32 15
  %13424 = getelementptr inbounds %struct.Reg, %struct.Reg* %13423, i32 0, i32 0
  %RBP.i1326 = bitcast %union.anon* %13424 to i64*
  %13425 = load i64, i64* %RBP.i1326
  %13426 = sub i64 %13425, 24
  %13427 = load i64, i64* %PC.i1324
  %13428 = add i64 %13427, 4
  store i64 %13428, i64* %PC.i1324
  %13429 = inttoptr i64 %13426 to i32*
  %13430 = load i32, i32* %13429
  %13431 = sext i32 %13430 to i64
  store i64 %13431, i64* %RAX.i1325, align 8
  store %struct.Memory* %loadMem_406c59, %struct.Memory** %MEMORY
  %loadMem_406c5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13433 = getelementptr inbounds %struct.GPR, %struct.GPR* %13432, i32 0, i32 33
  %13434 = getelementptr inbounds %struct.Reg, %struct.Reg* %13433, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %13434 to i64*
  %13435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13436 = getelementptr inbounds %struct.GPR, %struct.GPR* %13435, i32 0, i32 7
  %13437 = getelementptr inbounds %struct.Reg, %struct.Reg* %13436, i32 0, i32 0
  %EDX.i1321 = bitcast %union.anon* %13437 to i32*
  %13438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13439 = getelementptr inbounds %struct.GPR, %struct.GPR* %13438, i32 0, i32 1
  %13440 = getelementptr inbounds %struct.Reg, %struct.Reg* %13439, i32 0, i32 0
  %RAX.i1322 = bitcast %union.anon* %13440 to i64*
  %13441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13442 = getelementptr inbounds %struct.GPR, %struct.GPR* %13441, i32 0, i32 15
  %13443 = getelementptr inbounds %struct.Reg, %struct.Reg* %13442, i32 0, i32 0
  %RBP.i1323 = bitcast %union.anon* %13443 to i64*
  %13444 = load i64, i64* %RBP.i1323
  %13445 = load i64, i64* %RAX.i1322
  %13446 = mul i64 %13445, 4
  %13447 = add i64 %13444, -64
  %13448 = add i64 %13447, %13446
  %13449 = load i32, i32* %EDX.i1321
  %13450 = zext i32 %13449 to i64
  %13451 = load i64, i64* %PC.i1320
  %13452 = add i64 %13451, 4
  store i64 %13452, i64* %PC.i1320
  %13453 = inttoptr i64 %13448 to i32*
  store i32 %13449, i32* %13453
  store %struct.Memory* %loadMem_406c5d, %struct.Memory** %MEMORY
  %loadMem_406c61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13455 = getelementptr inbounds %struct.GPR, %struct.GPR* %13454, i32 0, i32 33
  %13456 = getelementptr inbounds %struct.Reg, %struct.Reg* %13455, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %13456 to i64*
  %13457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13458 = getelementptr inbounds %struct.GPR, %struct.GPR* %13457, i32 0, i32 1
  %13459 = getelementptr inbounds %struct.Reg, %struct.Reg* %13458, i32 0, i32 0
  %RAX.i1318 = bitcast %union.anon* %13459 to i64*
  %13460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13461 = getelementptr inbounds %struct.GPR, %struct.GPR* %13460, i32 0, i32 15
  %13462 = getelementptr inbounds %struct.Reg, %struct.Reg* %13461, i32 0, i32 0
  %RBP.i1319 = bitcast %union.anon* %13462 to i64*
  %13463 = load i64, i64* %RBP.i1319
  %13464 = sub i64 %13463, 24
  %13465 = load i64, i64* %PC.i1317
  %13466 = add i64 %13465, 3
  store i64 %13466, i64* %PC.i1317
  %13467 = inttoptr i64 %13464 to i32*
  %13468 = load i32, i32* %13467
  %13469 = zext i32 %13468 to i64
  store i64 %13469, i64* %RAX.i1318, align 8
  store %struct.Memory* %loadMem_406c61, %struct.Memory** %MEMORY
  %loadMem_406c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13471 = getelementptr inbounds %struct.GPR, %struct.GPR* %13470, i32 0, i32 33
  %13472 = getelementptr inbounds %struct.Reg, %struct.Reg* %13471, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %13472 to i64*
  %13473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13474 = getelementptr inbounds %struct.GPR, %struct.GPR* %13473, i32 0, i32 1
  %13475 = getelementptr inbounds %struct.Reg, %struct.Reg* %13474, i32 0, i32 0
  %RAX.i1316 = bitcast %union.anon* %13475 to i64*
  %13476 = load i64, i64* %RAX.i1316
  %13477 = load i64, i64* %PC.i1315
  %13478 = add i64 %13477, 3
  store i64 %13478, i64* %PC.i1315
  %13479 = trunc i64 %13476 to i32
  %13480 = add i32 1, %13479
  %13481 = zext i32 %13480 to i64
  store i64 %13481, i64* %RAX.i1316, align 8
  %13482 = icmp ult i32 %13480, %13479
  %13483 = icmp ult i32 %13480, 1
  %13484 = or i1 %13482, %13483
  %13485 = zext i1 %13484 to i8
  %13486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13485, i8* %13486, align 1
  %13487 = and i32 %13480, 255
  %13488 = call i32 @llvm.ctpop.i32(i32 %13487)
  %13489 = trunc i32 %13488 to i8
  %13490 = and i8 %13489, 1
  %13491 = xor i8 %13490, 1
  %13492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13491, i8* %13492, align 1
  %13493 = xor i64 1, %13476
  %13494 = trunc i64 %13493 to i32
  %13495 = xor i32 %13494, %13480
  %13496 = lshr i32 %13495, 4
  %13497 = trunc i32 %13496 to i8
  %13498 = and i8 %13497, 1
  %13499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13498, i8* %13499, align 1
  %13500 = icmp eq i32 %13480, 0
  %13501 = zext i1 %13500 to i8
  %13502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13501, i8* %13502, align 1
  %13503 = lshr i32 %13480, 31
  %13504 = trunc i32 %13503 to i8
  %13505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13504, i8* %13505, align 1
  %13506 = lshr i32 %13479, 31
  %13507 = xor i32 %13503, %13506
  %13508 = add i32 %13507, %13503
  %13509 = icmp eq i32 %13508, 2
  %13510 = zext i1 %13509 to i8
  %13511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13510, i8* %13511, align 1
  store %struct.Memory* %loadMem_406c64, %struct.Memory** %MEMORY
  %loadMem_406c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13513 = getelementptr inbounds %struct.GPR, %struct.GPR* %13512, i32 0, i32 33
  %13514 = getelementptr inbounds %struct.Reg, %struct.Reg* %13513, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %13514 to i64*
  %13515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13516 = getelementptr inbounds %struct.GPR, %struct.GPR* %13515, i32 0, i32 1
  %13517 = getelementptr inbounds %struct.Reg, %struct.Reg* %13516, i32 0, i32 0
  %EAX.i1313 = bitcast %union.anon* %13517 to i32*
  %13518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13519 = getelementptr inbounds %struct.GPR, %struct.GPR* %13518, i32 0, i32 15
  %13520 = getelementptr inbounds %struct.Reg, %struct.Reg* %13519, i32 0, i32 0
  %RBP.i1314 = bitcast %union.anon* %13520 to i64*
  %13521 = load i64, i64* %RBP.i1314
  %13522 = sub i64 %13521, 24
  %13523 = load i32, i32* %EAX.i1313
  %13524 = zext i32 %13523 to i64
  %13525 = load i64, i64* %PC.i1312
  %13526 = add i64 %13525, 3
  store i64 %13526, i64* %PC.i1312
  %13527 = inttoptr i64 %13522 to i32*
  store i32 %13523, i32* %13527
  store %struct.Memory* %loadMem_406c67, %struct.Memory** %MEMORY
  %loadMem_406c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13529 = getelementptr inbounds %struct.GPR, %struct.GPR* %13528, i32 0, i32 33
  %13530 = getelementptr inbounds %struct.Reg, %struct.Reg* %13529, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %13530 to i64*
  %13531 = load i64, i64* %PC.i1311
  %13532 = add i64 %13531, -59
  %13533 = load i64, i64* %PC.i1311
  %13534 = add i64 %13533, 5
  store i64 %13534, i64* %PC.i1311
  %13535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13532, i64* %13535, align 8
  store %struct.Memory* %loadMem_406c6a, %struct.Memory** %MEMORY
  br label %block_.L_406c2f

block_.L_406c6f:                                  ; preds = %block_.L_406c2f
  %loadMem_406c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13537 = getelementptr inbounds %struct.GPR, %struct.GPR* %13536, i32 0, i32 33
  %13538 = getelementptr inbounds %struct.Reg, %struct.Reg* %13537, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %13538 to i64*
  %13539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13540 = getelementptr inbounds %struct.GPR, %struct.GPR* %13539, i32 0, i32 1
  %13541 = getelementptr inbounds %struct.Reg, %struct.Reg* %13540, i32 0, i32 0
  %RAX.i1309 = bitcast %union.anon* %13541 to i64*
  %13542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13543 = getelementptr inbounds %struct.GPR, %struct.GPR* %13542, i32 0, i32 15
  %13544 = getelementptr inbounds %struct.Reg, %struct.Reg* %13543, i32 0, i32 0
  %RBP.i1310 = bitcast %union.anon* %13544 to i64*
  %13545 = load i64, i64* %RBP.i1310
  %13546 = sub i64 %13545, 64
  %13547 = load i64, i64* %PC.i1308
  %13548 = add i64 %13547, 3
  store i64 %13548, i64* %PC.i1308
  %13549 = inttoptr i64 %13546 to i32*
  %13550 = load i32, i32* %13549
  %13551 = zext i32 %13550 to i64
  store i64 %13551, i64* %RAX.i1309, align 8
  store %struct.Memory* %loadMem_406c6f, %struct.Memory** %MEMORY
  %loadMem_406c72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13553 = getelementptr inbounds %struct.GPR, %struct.GPR* %13552, i32 0, i32 33
  %13554 = getelementptr inbounds %struct.Reg, %struct.Reg* %13553, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %13554 to i64*
  %13555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13556 = getelementptr inbounds %struct.GPR, %struct.GPR* %13555, i32 0, i32 1
  %13557 = getelementptr inbounds %struct.Reg, %struct.Reg* %13556, i32 0, i32 0
  %RAX.i1306 = bitcast %union.anon* %13557 to i64*
  %13558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13559 = getelementptr inbounds %struct.GPR, %struct.GPR* %13558, i32 0, i32 15
  %13560 = getelementptr inbounds %struct.Reg, %struct.Reg* %13559, i32 0, i32 0
  %RBP.i1307 = bitcast %union.anon* %13560 to i64*
  %13561 = load i64, i64* %RAX.i1306
  %13562 = load i64, i64* %RBP.i1307
  %13563 = sub i64 %13562, 56
  %13564 = load i64, i64* %PC.i1305
  %13565 = add i64 %13564, 3
  store i64 %13565, i64* %PC.i1305
  %13566 = trunc i64 %13561 to i32
  %13567 = inttoptr i64 %13563 to i32*
  %13568 = load i32, i32* %13567
  %13569 = add i32 %13568, %13566
  %13570 = zext i32 %13569 to i64
  store i64 %13570, i64* %RAX.i1306, align 8
  %13571 = icmp ult i32 %13569, %13566
  %13572 = icmp ult i32 %13569, %13568
  %13573 = or i1 %13571, %13572
  %13574 = zext i1 %13573 to i8
  %13575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13574, i8* %13575, align 1
  %13576 = and i32 %13569, 255
  %13577 = call i32 @llvm.ctpop.i32(i32 %13576)
  %13578 = trunc i32 %13577 to i8
  %13579 = and i8 %13578, 1
  %13580 = xor i8 %13579, 1
  %13581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13580, i8* %13581, align 1
  %13582 = xor i32 %13568, %13566
  %13583 = xor i32 %13582, %13569
  %13584 = lshr i32 %13583, 4
  %13585 = trunc i32 %13584 to i8
  %13586 = and i8 %13585, 1
  %13587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13586, i8* %13587, align 1
  %13588 = icmp eq i32 %13569, 0
  %13589 = zext i1 %13588 to i8
  %13590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13589, i8* %13590, align 1
  %13591 = lshr i32 %13569, 31
  %13592 = trunc i32 %13591 to i8
  %13593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13592, i8* %13593, align 1
  %13594 = lshr i32 %13566, 31
  %13595 = lshr i32 %13568, 31
  %13596 = xor i32 %13591, %13594
  %13597 = xor i32 %13591, %13595
  %13598 = add i32 %13596, %13597
  %13599 = icmp eq i32 %13598, 2
  %13600 = zext i1 %13599 to i8
  %13601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13600, i8* %13601, align 1
  store %struct.Memory* %loadMem_406c72, %struct.Memory** %MEMORY
  %loadMem_406c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13603 = getelementptr inbounds %struct.GPR, %struct.GPR* %13602, i32 0, i32 33
  %13604 = getelementptr inbounds %struct.Reg, %struct.Reg* %13603, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %13604 to i64*
  %13605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13606 = getelementptr inbounds %struct.GPR, %struct.GPR* %13605, i32 0, i32 1
  %13607 = getelementptr inbounds %struct.Reg, %struct.Reg* %13606, i32 0, i32 0
  %EAX.i1303 = bitcast %union.anon* %13607 to i32*
  %13608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13609 = getelementptr inbounds %struct.GPR, %struct.GPR* %13608, i32 0, i32 15
  %13610 = getelementptr inbounds %struct.Reg, %struct.Reg* %13609, i32 0, i32 0
  %RBP.i1304 = bitcast %union.anon* %13610 to i64*
  %13611 = load i64, i64* %RBP.i1304
  %13612 = sub i64 %13611, 80
  %13613 = load i32, i32* %EAX.i1303
  %13614 = zext i32 %13613 to i64
  %13615 = load i64, i64* %PC.i1302
  %13616 = add i64 %13615, 3
  store i64 %13616, i64* %PC.i1302
  %13617 = inttoptr i64 %13612 to i32*
  store i32 %13613, i32* %13617
  store %struct.Memory* %loadMem_406c75, %struct.Memory** %MEMORY
  %loadMem_406c78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13619 = getelementptr inbounds %struct.GPR, %struct.GPR* %13618, i32 0, i32 33
  %13620 = getelementptr inbounds %struct.Reg, %struct.Reg* %13619, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %13620 to i64*
  %13621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13622 = getelementptr inbounds %struct.GPR, %struct.GPR* %13621, i32 0, i32 1
  %13623 = getelementptr inbounds %struct.Reg, %struct.Reg* %13622, i32 0, i32 0
  %RAX.i1300 = bitcast %union.anon* %13623 to i64*
  %13624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13625 = getelementptr inbounds %struct.GPR, %struct.GPR* %13624, i32 0, i32 15
  %13626 = getelementptr inbounds %struct.Reg, %struct.Reg* %13625, i32 0, i32 0
  %RBP.i1301 = bitcast %union.anon* %13626 to i64*
  %13627 = load i64, i64* %RBP.i1301
  %13628 = sub i64 %13627, 64
  %13629 = load i64, i64* %PC.i1299
  %13630 = add i64 %13629, 3
  store i64 %13630, i64* %PC.i1299
  %13631 = inttoptr i64 %13628 to i32*
  %13632 = load i32, i32* %13631
  %13633 = zext i32 %13632 to i64
  store i64 %13633, i64* %RAX.i1300, align 8
  store %struct.Memory* %loadMem_406c78, %struct.Memory** %MEMORY
  %loadMem_406c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13635 = getelementptr inbounds %struct.GPR, %struct.GPR* %13634, i32 0, i32 33
  %13636 = getelementptr inbounds %struct.Reg, %struct.Reg* %13635, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %13636 to i64*
  %13637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13638 = getelementptr inbounds %struct.GPR, %struct.GPR* %13637, i32 0, i32 1
  %13639 = getelementptr inbounds %struct.Reg, %struct.Reg* %13638, i32 0, i32 0
  %RAX.i1297 = bitcast %union.anon* %13639 to i64*
  %13640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13641 = getelementptr inbounds %struct.GPR, %struct.GPR* %13640, i32 0, i32 15
  %13642 = getelementptr inbounds %struct.Reg, %struct.Reg* %13641, i32 0, i32 0
  %RBP.i1298 = bitcast %union.anon* %13642 to i64*
  %13643 = load i64, i64* %RAX.i1297
  %13644 = load i64, i64* %RBP.i1298
  %13645 = sub i64 %13644, 56
  %13646 = load i64, i64* %PC.i1296
  %13647 = add i64 %13646, 3
  store i64 %13647, i64* %PC.i1296
  %13648 = trunc i64 %13643 to i32
  %13649 = inttoptr i64 %13645 to i32*
  %13650 = load i32, i32* %13649
  %13651 = sub i32 %13648, %13650
  %13652 = zext i32 %13651 to i64
  store i64 %13652, i64* %RAX.i1297, align 8
  %13653 = icmp ult i32 %13648, %13650
  %13654 = zext i1 %13653 to i8
  %13655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13654, i8* %13655, align 1
  %13656 = and i32 %13651, 255
  %13657 = call i32 @llvm.ctpop.i32(i32 %13656)
  %13658 = trunc i32 %13657 to i8
  %13659 = and i8 %13658, 1
  %13660 = xor i8 %13659, 1
  %13661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13660, i8* %13661, align 1
  %13662 = xor i32 %13650, %13648
  %13663 = xor i32 %13662, %13651
  %13664 = lshr i32 %13663, 4
  %13665 = trunc i32 %13664 to i8
  %13666 = and i8 %13665, 1
  %13667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13666, i8* %13667, align 1
  %13668 = icmp eq i32 %13651, 0
  %13669 = zext i1 %13668 to i8
  %13670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13669, i8* %13670, align 1
  %13671 = lshr i32 %13651, 31
  %13672 = trunc i32 %13671 to i8
  %13673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13672, i8* %13673, align 1
  %13674 = lshr i32 %13648, 31
  %13675 = lshr i32 %13650, 31
  %13676 = xor i32 %13675, %13674
  %13677 = xor i32 %13671, %13674
  %13678 = add i32 %13677, %13676
  %13679 = icmp eq i32 %13678, 2
  %13680 = zext i1 %13679 to i8
  %13681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13680, i8* %13681, align 1
  store %struct.Memory* %loadMem_406c7b, %struct.Memory** %MEMORY
  %loadMem_406c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13683 = getelementptr inbounds %struct.GPR, %struct.GPR* %13682, i32 0, i32 33
  %13684 = getelementptr inbounds %struct.Reg, %struct.Reg* %13683, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %13684 to i64*
  %13685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13686 = getelementptr inbounds %struct.GPR, %struct.GPR* %13685, i32 0, i32 1
  %13687 = getelementptr inbounds %struct.Reg, %struct.Reg* %13686, i32 0, i32 0
  %EAX.i1294 = bitcast %union.anon* %13687 to i32*
  %13688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13689 = getelementptr inbounds %struct.GPR, %struct.GPR* %13688, i32 0, i32 15
  %13690 = getelementptr inbounds %struct.Reg, %struct.Reg* %13689, i32 0, i32 0
  %RBP.i1295 = bitcast %union.anon* %13690 to i64*
  %13691 = load i64, i64* %RBP.i1295
  %13692 = sub i64 %13691, 76
  %13693 = load i32, i32* %EAX.i1294
  %13694 = zext i32 %13693 to i64
  %13695 = load i64, i64* %PC.i1293
  %13696 = add i64 %13695, 3
  store i64 %13696, i64* %PC.i1293
  %13697 = inttoptr i64 %13692 to i32*
  store i32 %13693, i32* %13697
  store %struct.Memory* %loadMem_406c7e, %struct.Memory** %MEMORY
  %loadMem_406c81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13699 = getelementptr inbounds %struct.GPR, %struct.GPR* %13698, i32 0, i32 33
  %13700 = getelementptr inbounds %struct.Reg, %struct.Reg* %13699, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %13700 to i64*
  %13701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13702 = getelementptr inbounds %struct.GPR, %struct.GPR* %13701, i32 0, i32 1
  %13703 = getelementptr inbounds %struct.Reg, %struct.Reg* %13702, i32 0, i32 0
  %RAX.i1291 = bitcast %union.anon* %13703 to i64*
  %13704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13705 = getelementptr inbounds %struct.GPR, %struct.GPR* %13704, i32 0, i32 15
  %13706 = getelementptr inbounds %struct.Reg, %struct.Reg* %13705, i32 0, i32 0
  %RBP.i1292 = bitcast %union.anon* %13706 to i64*
  %13707 = load i64, i64* %RBP.i1292
  %13708 = sub i64 %13707, 60
  %13709 = load i64, i64* %PC.i1290
  %13710 = add i64 %13709, 3
  store i64 %13710, i64* %PC.i1290
  %13711 = inttoptr i64 %13708 to i32*
  %13712 = load i32, i32* %13711
  %13713 = zext i32 %13712 to i64
  store i64 %13713, i64* %RAX.i1291, align 8
  store %struct.Memory* %loadMem_406c81, %struct.Memory** %MEMORY
  %loadMem_406c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13715 = getelementptr inbounds %struct.GPR, %struct.GPR* %13714, i32 0, i32 33
  %13716 = getelementptr inbounds %struct.Reg, %struct.Reg* %13715, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %13716 to i64*
  %13717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13718 = getelementptr inbounds %struct.GPR, %struct.GPR* %13717, i32 0, i32 1
  %13719 = getelementptr inbounds %struct.Reg, %struct.Reg* %13718, i32 0, i32 0
  %RAX.i1289 = bitcast %union.anon* %13719 to i64*
  %13720 = load i64, i64* %RAX.i1289
  %13721 = load i64, i64* %PC.i1288
  %13722 = add i64 %13721, 2
  store i64 %13722, i64* %PC.i1288
  %13723 = shl i64 %13720, 32
  %13724 = ashr i64 %13723, 33
  %13725 = trunc i64 %13720 to i8
  %13726 = and i8 %13725, 1
  %13727 = trunc i64 %13724 to i32
  %13728 = and i64 %13724, 4294967295
  store i64 %13728, i64* %RAX.i1289, align 8
  %13729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13726, i8* %13729, align 1
  %13730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13731 = and i32 %13727, 255
  %13732 = call i32 @llvm.ctpop.i32(i32 %13731)
  %13733 = trunc i32 %13732 to i8
  %13734 = and i8 %13733, 1
  %13735 = xor i8 %13734, 1
  store i8 %13735, i8* %13730, align 1
  %13736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13736, align 1
  %13737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13738 = icmp eq i32 %13727, 0
  %13739 = zext i1 %13738 to i8
  store i8 %13739, i8* %13737, align 1
  %13740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13741 = lshr i32 %13727, 31
  %13742 = trunc i32 %13741 to i8
  store i8 %13742, i8* %13740, align 1
  %13743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13743, align 1
  store %struct.Memory* %loadMem_406c84, %struct.Memory** %MEMORY
  %loadMem_406c87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13745 = getelementptr inbounds %struct.GPR, %struct.GPR* %13744, i32 0, i32 33
  %13746 = getelementptr inbounds %struct.Reg, %struct.Reg* %13745, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %13746 to i64*
  %13747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13748 = getelementptr inbounds %struct.GPR, %struct.GPR* %13747, i32 0, i32 1
  %13749 = getelementptr inbounds %struct.Reg, %struct.Reg* %13748, i32 0, i32 0
  %RAX.i1286 = bitcast %union.anon* %13749 to i64*
  %13750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13751 = getelementptr inbounds %struct.GPR, %struct.GPR* %13750, i32 0, i32 15
  %13752 = getelementptr inbounds %struct.Reg, %struct.Reg* %13751, i32 0, i32 0
  %RBP.i1287 = bitcast %union.anon* %13752 to i64*
  %13753 = load i64, i64* %RAX.i1286
  %13754 = load i64, i64* %RBP.i1287
  %13755 = sub i64 %13754, 52
  %13756 = load i64, i64* %PC.i1285
  %13757 = add i64 %13756, 3
  store i64 %13757, i64* %PC.i1285
  %13758 = trunc i64 %13753 to i32
  %13759 = inttoptr i64 %13755 to i32*
  %13760 = load i32, i32* %13759
  %13761 = sub i32 %13758, %13760
  %13762 = zext i32 %13761 to i64
  store i64 %13762, i64* %RAX.i1286, align 8
  %13763 = icmp ult i32 %13758, %13760
  %13764 = zext i1 %13763 to i8
  %13765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13764, i8* %13765, align 1
  %13766 = and i32 %13761, 255
  %13767 = call i32 @llvm.ctpop.i32(i32 %13766)
  %13768 = trunc i32 %13767 to i8
  %13769 = and i8 %13768, 1
  %13770 = xor i8 %13769, 1
  %13771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13770, i8* %13771, align 1
  %13772 = xor i32 %13760, %13758
  %13773 = xor i32 %13772, %13761
  %13774 = lshr i32 %13773, 4
  %13775 = trunc i32 %13774 to i8
  %13776 = and i8 %13775, 1
  %13777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13776, i8* %13777, align 1
  %13778 = icmp eq i32 %13761, 0
  %13779 = zext i1 %13778 to i8
  %13780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13779, i8* %13780, align 1
  %13781 = lshr i32 %13761, 31
  %13782 = trunc i32 %13781 to i8
  %13783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13782, i8* %13783, align 1
  %13784 = lshr i32 %13758, 31
  %13785 = lshr i32 %13760, 31
  %13786 = xor i32 %13785, %13784
  %13787 = xor i32 %13781, %13784
  %13788 = add i32 %13787, %13786
  %13789 = icmp eq i32 %13788, 2
  %13790 = zext i1 %13789 to i8
  %13791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13790, i8* %13791, align 1
  store %struct.Memory* %loadMem_406c87, %struct.Memory** %MEMORY
  %loadMem_406c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13793 = getelementptr inbounds %struct.GPR, %struct.GPR* %13792, i32 0, i32 33
  %13794 = getelementptr inbounds %struct.Reg, %struct.Reg* %13793, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %13794 to i64*
  %13795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13796 = getelementptr inbounds %struct.GPR, %struct.GPR* %13795, i32 0, i32 1
  %13797 = getelementptr inbounds %struct.Reg, %struct.Reg* %13796, i32 0, i32 0
  %EAX.i1283 = bitcast %union.anon* %13797 to i32*
  %13798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13799 = getelementptr inbounds %struct.GPR, %struct.GPR* %13798, i32 0, i32 15
  %13800 = getelementptr inbounds %struct.Reg, %struct.Reg* %13799, i32 0, i32 0
  %RBP.i1284 = bitcast %union.anon* %13800 to i64*
  %13801 = load i64, i64* %RBP.i1284
  %13802 = sub i64 %13801, 72
  %13803 = load i32, i32* %EAX.i1283
  %13804 = zext i32 %13803 to i64
  %13805 = load i64, i64* %PC.i1282
  %13806 = add i64 %13805, 3
  store i64 %13806, i64* %PC.i1282
  %13807 = inttoptr i64 %13802 to i32*
  store i32 %13803, i32* %13807
  store %struct.Memory* %loadMem_406c8a, %struct.Memory** %MEMORY
  %loadMem_406c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13809 = getelementptr inbounds %struct.GPR, %struct.GPR* %13808, i32 0, i32 33
  %13810 = getelementptr inbounds %struct.Reg, %struct.Reg* %13809, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %13810 to i64*
  %13811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13812 = getelementptr inbounds %struct.GPR, %struct.GPR* %13811, i32 0, i32 1
  %13813 = getelementptr inbounds %struct.Reg, %struct.Reg* %13812, i32 0, i32 0
  %RAX.i1280 = bitcast %union.anon* %13813 to i64*
  %13814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13815 = getelementptr inbounds %struct.GPR, %struct.GPR* %13814, i32 0, i32 15
  %13816 = getelementptr inbounds %struct.Reg, %struct.Reg* %13815, i32 0, i32 0
  %RBP.i1281 = bitcast %union.anon* %13816 to i64*
  %13817 = load i64, i64* %RBP.i1281
  %13818 = sub i64 %13817, 60
  %13819 = load i64, i64* %PC.i1279
  %13820 = add i64 %13819, 3
  store i64 %13820, i64* %PC.i1279
  %13821 = inttoptr i64 %13818 to i32*
  %13822 = load i32, i32* %13821
  %13823 = zext i32 %13822 to i64
  store i64 %13823, i64* %RAX.i1280, align 8
  store %struct.Memory* %loadMem_406c8d, %struct.Memory** %MEMORY
  %loadMem_406c90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13825 = getelementptr inbounds %struct.GPR, %struct.GPR* %13824, i32 0, i32 33
  %13826 = getelementptr inbounds %struct.Reg, %struct.Reg* %13825, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %13826 to i64*
  %13827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13828 = getelementptr inbounds %struct.GPR, %struct.GPR* %13827, i32 0, i32 5
  %13829 = getelementptr inbounds %struct.Reg, %struct.Reg* %13828, i32 0, i32 0
  %RCX.i1277 = bitcast %union.anon* %13829 to i64*
  %13830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13831 = getelementptr inbounds %struct.GPR, %struct.GPR* %13830, i32 0, i32 15
  %13832 = getelementptr inbounds %struct.Reg, %struct.Reg* %13831, i32 0, i32 0
  %RBP.i1278 = bitcast %union.anon* %13832 to i64*
  %13833 = load i64, i64* %RBP.i1278
  %13834 = sub i64 %13833, 52
  %13835 = load i64, i64* %PC.i1276
  %13836 = add i64 %13835, 3
  store i64 %13836, i64* %PC.i1276
  %13837 = inttoptr i64 %13834 to i32*
  %13838 = load i32, i32* %13837
  %13839 = zext i32 %13838 to i64
  store i64 %13839, i64* %RCX.i1277, align 8
  store %struct.Memory* %loadMem_406c90, %struct.Memory** %MEMORY
  %loadMem_406c93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13841 = getelementptr inbounds %struct.GPR, %struct.GPR* %13840, i32 0, i32 33
  %13842 = getelementptr inbounds %struct.Reg, %struct.Reg* %13841, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %13842 to i64*
  %13843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13844 = getelementptr inbounds %struct.GPR, %struct.GPR* %13843, i32 0, i32 5
  %13845 = getelementptr inbounds %struct.Reg, %struct.Reg* %13844, i32 0, i32 0
  %RCX.i1275 = bitcast %union.anon* %13845 to i64*
  %13846 = load i64, i64* %RCX.i1275
  %13847 = load i64, i64* %PC.i1274
  %13848 = add i64 %13847, 2
  store i64 %13848, i64* %PC.i1274
  %13849 = shl i64 %13846, 32
  %13850 = ashr i64 %13849, 33
  %13851 = trunc i64 %13846 to i8
  %13852 = and i8 %13851, 1
  %13853 = trunc i64 %13850 to i32
  %13854 = and i64 %13850, 4294967295
  store i64 %13854, i64* %RCX.i1275, align 8
  %13855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13852, i8* %13855, align 1
  %13856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13857 = and i32 %13853, 255
  %13858 = call i32 @llvm.ctpop.i32(i32 %13857)
  %13859 = trunc i32 %13858 to i8
  %13860 = and i8 %13859, 1
  %13861 = xor i8 %13860, 1
  store i8 %13861, i8* %13856, align 1
  %13862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13862, align 1
  %13863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13864 = icmp eq i32 %13853, 0
  %13865 = zext i1 %13864 to i8
  store i8 %13865, i8* %13863, align 1
  %13866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13867 = lshr i32 %13853, 31
  %13868 = trunc i32 %13867 to i8
  store i8 %13868, i8* %13866, align 1
  %13869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13869, align 1
  store %struct.Memory* %loadMem_406c93, %struct.Memory** %MEMORY
  %loadMem_406c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13871 = getelementptr inbounds %struct.GPR, %struct.GPR* %13870, i32 0, i32 33
  %13872 = getelementptr inbounds %struct.Reg, %struct.Reg* %13871, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %13872 to i64*
  %13873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13874 = getelementptr inbounds %struct.GPR, %struct.GPR* %13873, i32 0, i32 5
  %13875 = getelementptr inbounds %struct.Reg, %struct.Reg* %13874, i32 0, i32 0
  %ECX.i1272 = bitcast %union.anon* %13875 to i32*
  %13876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13877 = getelementptr inbounds %struct.GPR, %struct.GPR* %13876, i32 0, i32 1
  %13878 = getelementptr inbounds %struct.Reg, %struct.Reg* %13877, i32 0, i32 0
  %RAX.i1273 = bitcast %union.anon* %13878 to i64*
  %13879 = load i64, i64* %RAX.i1273
  %13880 = load i32, i32* %ECX.i1272
  %13881 = zext i32 %13880 to i64
  %13882 = load i64, i64* %PC.i1271
  %13883 = add i64 %13882, 2
  store i64 %13883, i64* %PC.i1271
  %13884 = trunc i64 %13879 to i32
  %13885 = add i32 %13880, %13884
  %13886 = zext i32 %13885 to i64
  store i64 %13886, i64* %RAX.i1273, align 8
  %13887 = icmp ult i32 %13885, %13884
  %13888 = icmp ult i32 %13885, %13880
  %13889 = or i1 %13887, %13888
  %13890 = zext i1 %13889 to i8
  %13891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13890, i8* %13891, align 1
  %13892 = and i32 %13885, 255
  %13893 = call i32 @llvm.ctpop.i32(i32 %13892)
  %13894 = trunc i32 %13893 to i8
  %13895 = and i8 %13894, 1
  %13896 = xor i8 %13895, 1
  %13897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13896, i8* %13897, align 1
  %13898 = xor i64 %13881, %13879
  %13899 = trunc i64 %13898 to i32
  %13900 = xor i32 %13899, %13885
  %13901 = lshr i32 %13900, 4
  %13902 = trunc i32 %13901 to i8
  %13903 = and i8 %13902, 1
  %13904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13903, i8* %13904, align 1
  %13905 = icmp eq i32 %13885, 0
  %13906 = zext i1 %13905 to i8
  %13907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13906, i8* %13907, align 1
  %13908 = lshr i32 %13885, 31
  %13909 = trunc i32 %13908 to i8
  %13910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13909, i8* %13910, align 1
  %13911 = lshr i32 %13884, 31
  %13912 = lshr i32 %13880, 31
  %13913 = xor i32 %13908, %13911
  %13914 = xor i32 %13908, %13912
  %13915 = add i32 %13913, %13914
  %13916 = icmp eq i32 %13915, 2
  %13917 = zext i1 %13916 to i8
  %13918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13917, i8* %13918, align 1
  store %struct.Memory* %loadMem_406c96, %struct.Memory** %MEMORY
  %loadMem_406c98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13920 = getelementptr inbounds %struct.GPR, %struct.GPR* %13919, i32 0, i32 33
  %13921 = getelementptr inbounds %struct.Reg, %struct.Reg* %13920, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %13921 to i64*
  %13922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13923 = getelementptr inbounds %struct.GPR, %struct.GPR* %13922, i32 0, i32 1
  %13924 = getelementptr inbounds %struct.Reg, %struct.Reg* %13923, i32 0, i32 0
  %EAX.i1269 = bitcast %union.anon* %13924 to i32*
  %13925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13926 = getelementptr inbounds %struct.GPR, %struct.GPR* %13925, i32 0, i32 15
  %13927 = getelementptr inbounds %struct.Reg, %struct.Reg* %13926, i32 0, i32 0
  %RBP.i1270 = bitcast %union.anon* %13927 to i64*
  %13928 = load i64, i64* %RBP.i1270
  %13929 = sub i64 %13928, 68
  %13930 = load i32, i32* %EAX.i1269
  %13931 = zext i32 %13930 to i64
  %13932 = load i64, i64* %PC.i1268
  %13933 = add i64 %13932, 3
  store i64 %13933, i64* %PC.i1268
  %13934 = inttoptr i64 %13929 to i32*
  store i32 %13930, i32* %13934
  store %struct.Memory* %loadMem_406c98, %struct.Memory** %MEMORY
  %loadMem_406c9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13936 = getelementptr inbounds %struct.GPR, %struct.GPR* %13935, i32 0, i32 33
  %13937 = getelementptr inbounds %struct.Reg, %struct.Reg* %13936, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %13937 to i64*
  %13938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13939 = getelementptr inbounds %struct.GPR, %struct.GPR* %13938, i32 0, i32 15
  %13940 = getelementptr inbounds %struct.Reg, %struct.Reg* %13939, i32 0, i32 0
  %RBP.i1267 = bitcast %union.anon* %13940 to i64*
  %13941 = load i64, i64* %RBP.i1267
  %13942 = sub i64 %13941, 24
  %13943 = load i64, i64* %PC.i1266
  %13944 = add i64 %13943, 7
  store i64 %13944, i64* %PC.i1266
  %13945 = inttoptr i64 %13942 to i32*
  store i32 0, i32* %13945
  store %struct.Memory* %loadMem_406c9b, %struct.Memory** %MEMORY
  br label %block_.L_406ca2

block_.L_406ca2:                                  ; preds = %block_406cac, %block_.L_406c6f
  %loadMem_406ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13947 = getelementptr inbounds %struct.GPR, %struct.GPR* %13946, i32 0, i32 33
  %13948 = getelementptr inbounds %struct.Reg, %struct.Reg* %13947, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %13948 to i64*
  %13949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13950 = getelementptr inbounds %struct.GPR, %struct.GPR* %13949, i32 0, i32 15
  %13951 = getelementptr inbounds %struct.Reg, %struct.Reg* %13950, i32 0, i32 0
  %RBP.i1265 = bitcast %union.anon* %13951 to i64*
  %13952 = load i64, i64* %RBP.i1265
  %13953 = sub i64 %13952, 24
  %13954 = load i64, i64* %PC.i1264
  %13955 = add i64 %13954, 4
  store i64 %13955, i64* %PC.i1264
  %13956 = inttoptr i64 %13953 to i32*
  %13957 = load i32, i32* %13956
  %13958 = sub i32 %13957, 2
  %13959 = icmp ult i32 %13957, 2
  %13960 = zext i1 %13959 to i8
  %13961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13960, i8* %13961, align 1
  %13962 = and i32 %13958, 255
  %13963 = call i32 @llvm.ctpop.i32(i32 %13962)
  %13964 = trunc i32 %13963 to i8
  %13965 = and i8 %13964, 1
  %13966 = xor i8 %13965, 1
  %13967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13966, i8* %13967, align 1
  %13968 = xor i32 %13957, 2
  %13969 = xor i32 %13968, %13958
  %13970 = lshr i32 %13969, 4
  %13971 = trunc i32 %13970 to i8
  %13972 = and i8 %13971, 1
  %13973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13972, i8* %13973, align 1
  %13974 = icmp eq i32 %13958, 0
  %13975 = zext i1 %13974 to i8
  %13976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13975, i8* %13976, align 1
  %13977 = lshr i32 %13958, 31
  %13978 = trunc i32 %13977 to i8
  %13979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13978, i8* %13979, align 1
  %13980 = lshr i32 %13957, 31
  %13981 = xor i32 %13977, %13980
  %13982 = add i32 %13981, %13980
  %13983 = icmp eq i32 %13982, 2
  %13984 = zext i1 %13983 to i8
  %13985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13984, i8* %13985, align 1
  store %struct.Memory* %loadMem_406ca2, %struct.Memory** %MEMORY
  %loadMem_406ca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13987 = getelementptr inbounds %struct.GPR, %struct.GPR* %13986, i32 0, i32 33
  %13988 = getelementptr inbounds %struct.Reg, %struct.Reg* %13987, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %13988 to i64*
  %13989 = load i64, i64* %PC.i1263
  %13990 = add i64 %13989, 129
  %13991 = load i64, i64* %PC.i1263
  %13992 = add i64 %13991, 6
  %13993 = load i64, i64* %PC.i1263
  %13994 = add i64 %13993, 6
  store i64 %13994, i64* %PC.i1263
  %13995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13996 = load i8, i8* %13995, align 1
  %13997 = icmp ne i8 %13996, 0
  %13998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13999 = load i8, i8* %13998, align 1
  %14000 = icmp ne i8 %13999, 0
  %14001 = xor i1 %13997, %14000
  %14002 = xor i1 %14001, true
  %14003 = zext i1 %14002 to i8
  store i8 %14003, i8* %BRANCH_TAKEN, align 1
  %14004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14005 = select i1 %14001, i64 %13992, i64 %13990
  store i64 %14005, i64* %14004, align 8
  store %struct.Memory* %loadMem_406ca6, %struct.Memory** %MEMORY
  %loadBr_406ca6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406ca6 = icmp eq i8 %loadBr_406ca6, 1
  br i1 %cmpBr_406ca6, label %block_.L_406d27, label %block_406cac

block_406cac:                                     ; preds = %block_.L_406ca2
  %loadMem_406cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %14006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14007 = getelementptr inbounds %struct.GPR, %struct.GPR* %14006, i32 0, i32 33
  %14008 = getelementptr inbounds %struct.Reg, %struct.Reg* %14007, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %14008 to i64*
  %14009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14010 = getelementptr inbounds %struct.GPR, %struct.GPR* %14009, i32 0, i32 1
  %14011 = getelementptr inbounds %struct.Reg, %struct.Reg* %14010, i32 0, i32 0
  %RAX.i1262 = bitcast %union.anon* %14011 to i64*
  %14012 = load i64, i64* %PC.i1261
  %14013 = add i64 %14012, 5
  store i64 %14013, i64* %PC.i1261
  store i64 3, i64* %RAX.i1262, align 8
  store %struct.Memory* %loadMem_406cac, %struct.Memory** %MEMORY
  %loadMem_406cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14015 = getelementptr inbounds %struct.GPR, %struct.GPR* %14014, i32 0, i32 33
  %14016 = getelementptr inbounds %struct.Reg, %struct.Reg* %14015, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %14016 to i64*
  %14017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14018 = getelementptr inbounds %struct.GPR, %struct.GPR* %14017, i32 0, i32 1
  %14019 = getelementptr inbounds %struct.Reg, %struct.Reg* %14018, i32 0, i32 0
  %RAX.i1259 = bitcast %union.anon* %14019 to i64*
  %14020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14021 = getelementptr inbounds %struct.GPR, %struct.GPR* %14020, i32 0, i32 15
  %14022 = getelementptr inbounds %struct.Reg, %struct.Reg* %14021, i32 0, i32 0
  %RBP.i1260 = bitcast %union.anon* %14022 to i64*
  %14023 = load i64, i64* %RAX.i1259
  %14024 = load i64, i64* %RBP.i1260
  %14025 = sub i64 %14024, 24
  %14026 = load i64, i64* %PC.i1258
  %14027 = add i64 %14026, 3
  store i64 %14027, i64* %PC.i1258
  %14028 = trunc i64 %14023 to i32
  %14029 = inttoptr i64 %14025 to i32*
  %14030 = load i32, i32* %14029
  %14031 = sub i32 %14028, %14030
  %14032 = zext i32 %14031 to i64
  store i64 %14032, i64* %RAX.i1259, align 8
  %14033 = icmp ult i32 %14028, %14030
  %14034 = zext i1 %14033 to i8
  %14035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14034, i8* %14035, align 1
  %14036 = and i32 %14031, 255
  %14037 = call i32 @llvm.ctpop.i32(i32 %14036)
  %14038 = trunc i32 %14037 to i8
  %14039 = and i8 %14038, 1
  %14040 = xor i8 %14039, 1
  %14041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14040, i8* %14041, align 1
  %14042 = xor i32 %14030, %14028
  %14043 = xor i32 %14042, %14031
  %14044 = lshr i32 %14043, 4
  %14045 = trunc i32 %14044 to i8
  %14046 = and i8 %14045, 1
  %14047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14046, i8* %14047, align 1
  %14048 = icmp eq i32 %14031, 0
  %14049 = zext i1 %14048 to i8
  %14050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14049, i8* %14050, align 1
  %14051 = lshr i32 %14031, 31
  %14052 = trunc i32 %14051 to i8
  %14053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14052, i8* %14053, align 1
  %14054 = lshr i32 %14028, 31
  %14055 = lshr i32 %14030, 31
  %14056 = xor i32 %14055, %14054
  %14057 = xor i32 %14051, %14054
  %14058 = add i32 %14057, %14056
  %14059 = icmp eq i32 %14058, 2
  %14060 = zext i1 %14059 to i8
  %14061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14060, i8* %14061, align 1
  store %struct.Memory* %loadMem_406cb1, %struct.Memory** %MEMORY
  %loadMem_406cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14063 = getelementptr inbounds %struct.GPR, %struct.GPR* %14062, i32 0, i32 33
  %14064 = getelementptr inbounds %struct.Reg, %struct.Reg* %14063, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %14064 to i64*
  %14065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14066 = getelementptr inbounds %struct.GPR, %struct.GPR* %14065, i32 0, i32 1
  %14067 = getelementptr inbounds %struct.Reg, %struct.Reg* %14066, i32 0, i32 0
  %EAX.i1256 = bitcast %union.anon* %14067 to i32*
  %14068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14069 = getelementptr inbounds %struct.GPR, %struct.GPR* %14068, i32 0, i32 15
  %14070 = getelementptr inbounds %struct.Reg, %struct.Reg* %14069, i32 0, i32 0
  %RBP.i1257 = bitcast %union.anon* %14070 to i64*
  %14071 = load i64, i64* %RBP.i1257
  %14072 = sub i64 %14071, 32
  %14073 = load i32, i32* %EAX.i1256
  %14074 = zext i32 %14073 to i64
  %14075 = load i64, i64* %PC.i1255
  %14076 = add i64 %14075, 3
  store i64 %14076, i64* %PC.i1255
  %14077 = inttoptr i64 %14072 to i32*
  store i32 %14073, i32* %14077
  store %struct.Memory* %loadMem_406cb4, %struct.Memory** %MEMORY
  %loadMem_406cb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14079 = getelementptr inbounds %struct.GPR, %struct.GPR* %14078, i32 0, i32 33
  %14080 = getelementptr inbounds %struct.Reg, %struct.Reg* %14079, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %14080 to i64*
  %14081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14082 = getelementptr inbounds %struct.GPR, %struct.GPR* %14081, i32 0, i32 5
  %14083 = getelementptr inbounds %struct.Reg, %struct.Reg* %14082, i32 0, i32 0
  %RCX.i1253 = bitcast %union.anon* %14083 to i64*
  %14084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14085 = getelementptr inbounds %struct.GPR, %struct.GPR* %14084, i32 0, i32 15
  %14086 = getelementptr inbounds %struct.Reg, %struct.Reg* %14085, i32 0, i32 0
  %RBP.i1254 = bitcast %union.anon* %14086 to i64*
  %14087 = load i64, i64* %RBP.i1254
  %14088 = sub i64 %14087, 24
  %14089 = load i64, i64* %PC.i1252
  %14090 = add i64 %14089, 4
  store i64 %14090, i64* %PC.i1252
  %14091 = inttoptr i64 %14088 to i32*
  %14092 = load i32, i32* %14091
  %14093 = sext i32 %14092 to i64
  store i64 %14093, i64* %RCX.i1253, align 8
  store %struct.Memory* %loadMem_406cb7, %struct.Memory** %MEMORY
  %loadMem_406cbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14095 = getelementptr inbounds %struct.GPR, %struct.GPR* %14094, i32 0, i32 33
  %14096 = getelementptr inbounds %struct.Reg, %struct.Reg* %14095, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %14096 to i64*
  %14097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14098 = getelementptr inbounds %struct.GPR, %struct.GPR* %14097, i32 0, i32 1
  %14099 = getelementptr inbounds %struct.Reg, %struct.Reg* %14098, i32 0, i32 0
  %RAX.i1249 = bitcast %union.anon* %14099 to i64*
  %14100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14101 = getelementptr inbounds %struct.GPR, %struct.GPR* %14100, i32 0, i32 5
  %14102 = getelementptr inbounds %struct.Reg, %struct.Reg* %14101, i32 0, i32 0
  %RCX.i1250 = bitcast %union.anon* %14102 to i64*
  %14103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14104 = getelementptr inbounds %struct.GPR, %struct.GPR* %14103, i32 0, i32 15
  %14105 = getelementptr inbounds %struct.Reg, %struct.Reg* %14104, i32 0, i32 0
  %RBP.i1251 = bitcast %union.anon* %14105 to i64*
  %14106 = load i64, i64* %RBP.i1251
  %14107 = load i64, i64* %RCX.i1250
  %14108 = mul i64 %14107, 4
  %14109 = add i64 %14106, -80
  %14110 = add i64 %14109, %14108
  %14111 = load i64, i64* %PC.i1248
  %14112 = add i64 %14111, 4
  store i64 %14112, i64* %PC.i1248
  %14113 = inttoptr i64 %14110 to i32*
  %14114 = load i32, i32* %14113
  %14115 = zext i32 %14114 to i64
  store i64 %14115, i64* %RAX.i1249, align 8
  store %struct.Memory* %loadMem_406cbb, %struct.Memory** %MEMORY
  %loadMem_406cbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14117 = getelementptr inbounds %struct.GPR, %struct.GPR* %14116, i32 0, i32 33
  %14118 = getelementptr inbounds %struct.Reg, %struct.Reg* %14117, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %14118 to i64*
  %14119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14120 = getelementptr inbounds %struct.GPR, %struct.GPR* %14119, i32 0, i32 5
  %14121 = getelementptr inbounds %struct.Reg, %struct.Reg* %14120, i32 0, i32 0
  %RCX.i1246 = bitcast %union.anon* %14121 to i64*
  %14122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14123 = getelementptr inbounds %struct.GPR, %struct.GPR* %14122, i32 0, i32 15
  %14124 = getelementptr inbounds %struct.Reg, %struct.Reg* %14123, i32 0, i32 0
  %RBP.i1247 = bitcast %union.anon* %14124 to i64*
  %14125 = load i64, i64* %RBP.i1247
  %14126 = sub i64 %14125, 32
  %14127 = load i64, i64* %PC.i1245
  %14128 = add i64 %14127, 4
  store i64 %14128, i64* %PC.i1245
  %14129 = inttoptr i64 %14126 to i32*
  %14130 = load i32, i32* %14129
  %14131 = sext i32 %14130 to i64
  store i64 %14131, i64* %RCX.i1246, align 8
  store %struct.Memory* %loadMem_406cbf, %struct.Memory** %MEMORY
  %loadMem_406cc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14133 = getelementptr inbounds %struct.GPR, %struct.GPR* %14132, i32 0, i32 33
  %14134 = getelementptr inbounds %struct.Reg, %struct.Reg* %14133, i32 0, i32 0
  %PC.i1241 = bitcast %union.anon* %14134 to i64*
  %14135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14136 = getelementptr inbounds %struct.GPR, %struct.GPR* %14135, i32 0, i32 1
  %14137 = getelementptr inbounds %struct.Reg, %struct.Reg* %14136, i32 0, i32 0
  %RAX.i1242 = bitcast %union.anon* %14137 to i64*
  %14138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14139 = getelementptr inbounds %struct.GPR, %struct.GPR* %14138, i32 0, i32 5
  %14140 = getelementptr inbounds %struct.Reg, %struct.Reg* %14139, i32 0, i32 0
  %RCX.i1243 = bitcast %union.anon* %14140 to i64*
  %14141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14142 = getelementptr inbounds %struct.GPR, %struct.GPR* %14141, i32 0, i32 15
  %14143 = getelementptr inbounds %struct.Reg, %struct.Reg* %14142, i32 0, i32 0
  %RBP.i1244 = bitcast %union.anon* %14143 to i64*
  %14144 = load i64, i64* %RAX.i1242
  %14145 = load i64, i64* %RBP.i1244
  %14146 = load i64, i64* %RCX.i1243
  %14147 = mul i64 %14146, 4
  %14148 = add i64 %14145, -80
  %14149 = add i64 %14148, %14147
  %14150 = load i64, i64* %PC.i1241
  %14151 = add i64 %14150, 4
  store i64 %14151, i64* %PC.i1241
  %14152 = trunc i64 %14144 to i32
  %14153 = inttoptr i64 %14149 to i32*
  %14154 = load i32, i32* %14153
  %14155 = add i32 %14154, %14152
  %14156 = zext i32 %14155 to i64
  store i64 %14156, i64* %RAX.i1242, align 8
  %14157 = icmp ult i32 %14155, %14152
  %14158 = icmp ult i32 %14155, %14154
  %14159 = or i1 %14157, %14158
  %14160 = zext i1 %14159 to i8
  %14161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14160, i8* %14161, align 1
  %14162 = and i32 %14155, 255
  %14163 = call i32 @llvm.ctpop.i32(i32 %14162)
  %14164 = trunc i32 %14163 to i8
  %14165 = and i8 %14164, 1
  %14166 = xor i8 %14165, 1
  %14167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14166, i8* %14167, align 1
  %14168 = xor i32 %14154, %14152
  %14169 = xor i32 %14168, %14155
  %14170 = lshr i32 %14169, 4
  %14171 = trunc i32 %14170 to i8
  %14172 = and i8 %14171, 1
  %14173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14172, i8* %14173, align 1
  %14174 = icmp eq i32 %14155, 0
  %14175 = zext i1 %14174 to i8
  %14176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14175, i8* %14176, align 1
  %14177 = lshr i32 %14155, 31
  %14178 = trunc i32 %14177 to i8
  %14179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14178, i8* %14179, align 1
  %14180 = lshr i32 %14152, 31
  %14181 = lshr i32 %14154, 31
  %14182 = xor i32 %14177, %14180
  %14183 = xor i32 %14177, %14181
  %14184 = add i32 %14182, %14183
  %14185 = icmp eq i32 %14184, 2
  %14186 = zext i1 %14185 to i8
  %14187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14186, i8* %14187, align 1
  store %struct.Memory* %loadMem_406cc3, %struct.Memory** %MEMORY
  %loadMem_406cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14189 = getelementptr inbounds %struct.GPR, %struct.GPR* %14188, i32 0, i32 33
  %14190 = getelementptr inbounds %struct.Reg, %struct.Reg* %14189, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %14190 to i64*
  %14191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14192 = getelementptr inbounds %struct.GPR, %struct.GPR* %14191, i32 0, i32 5
  %14193 = getelementptr inbounds %struct.Reg, %struct.Reg* %14192, i32 0, i32 0
  %RCX.i1240 = bitcast %union.anon* %14193 to i64*
  %14194 = load i64, i64* %PC.i1239
  %14195 = add i64 %14194, 8
  store i64 %14195, i64* %PC.i1239
  %14196 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %14196, i64* %RCX.i1240, align 8
  store %struct.Memory* %loadMem_406cc7, %struct.Memory** %MEMORY
  %loadMem_406ccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14198 = getelementptr inbounds %struct.GPR, %struct.GPR* %14197, i32 0, i32 33
  %14199 = getelementptr inbounds %struct.Reg, %struct.Reg* %14198, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %14199 to i64*
  %14200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14201 = getelementptr inbounds %struct.GPR, %struct.GPR* %14200, i32 0, i32 5
  %14202 = getelementptr inbounds %struct.Reg, %struct.Reg* %14201, i32 0, i32 0
  %RCX.i1238 = bitcast %union.anon* %14202 to i64*
  %14203 = load i64, i64* %RCX.i1238
  %14204 = load i64, i64* %PC.i1237
  %14205 = add i64 %14204, 7
  store i64 %14205, i64* %PC.i1237
  %14206 = add i64 13112, %14203
  store i64 %14206, i64* %RCX.i1238, align 8
  %14207 = icmp ult i64 %14206, %14203
  %14208 = icmp ult i64 %14206, 13112
  %14209 = or i1 %14207, %14208
  %14210 = zext i1 %14209 to i8
  %14211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14210, i8* %14211, align 1
  %14212 = trunc i64 %14206 to i32
  %14213 = and i32 %14212, 255
  %14214 = call i32 @llvm.ctpop.i32(i32 %14213)
  %14215 = trunc i32 %14214 to i8
  %14216 = and i8 %14215, 1
  %14217 = xor i8 %14216, 1
  %14218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14217, i8* %14218, align 1
  %14219 = xor i64 13112, %14203
  %14220 = xor i64 %14219, %14206
  %14221 = lshr i64 %14220, 4
  %14222 = trunc i64 %14221 to i8
  %14223 = and i8 %14222, 1
  %14224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14223, i8* %14224, align 1
  %14225 = icmp eq i64 %14206, 0
  %14226 = zext i1 %14225 to i8
  %14227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14226, i8* %14227, align 1
  %14228 = lshr i64 %14206, 63
  %14229 = trunc i64 %14228 to i8
  %14230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14229, i8* %14230, align 1
  %14231 = lshr i64 %14203, 63
  %14232 = xor i64 %14228, %14231
  %14233 = add i64 %14232, %14228
  %14234 = icmp eq i64 %14233, 2
  %14235 = zext i1 %14234 to i8
  %14236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14235, i8* %14236, align 1
  store %struct.Memory* %loadMem_406ccf, %struct.Memory** %MEMORY
  %loadMem_406cd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14238 = getelementptr inbounds %struct.GPR, %struct.GPR* %14237, i32 0, i32 33
  %14239 = getelementptr inbounds %struct.Reg, %struct.Reg* %14238, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %14239 to i64*
  %14240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14241 = getelementptr inbounds %struct.GPR, %struct.GPR* %14240, i32 0, i32 7
  %14242 = getelementptr inbounds %struct.Reg, %struct.Reg* %14241, i32 0, i32 0
  %RDX.i1235 = bitcast %union.anon* %14242 to i64*
  %14243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14244 = getelementptr inbounds %struct.GPR, %struct.GPR* %14243, i32 0, i32 15
  %14245 = getelementptr inbounds %struct.Reg, %struct.Reg* %14244, i32 0, i32 0
  %RBP.i1236 = bitcast %union.anon* %14245 to i64*
  %14246 = load i64, i64* %RBP.i1236
  %14247 = sub i64 %14246, 24
  %14248 = load i64, i64* %PC.i1234
  %14249 = add i64 %14248, 4
  store i64 %14249, i64* %PC.i1234
  %14250 = inttoptr i64 %14247 to i32*
  %14251 = load i32, i32* %14250
  %14252 = sext i32 %14251 to i64
  store i64 %14252, i64* %RDX.i1235, align 8
  store %struct.Memory* %loadMem_406cd6, %struct.Memory** %MEMORY
  %loadMem_406cda = load %struct.Memory*, %struct.Memory** %MEMORY
  %14253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14254 = getelementptr inbounds %struct.GPR, %struct.GPR* %14253, i32 0, i32 33
  %14255 = getelementptr inbounds %struct.Reg, %struct.Reg* %14254, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %14255 to i64*
  %14256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14257 = getelementptr inbounds %struct.GPR, %struct.GPR* %14256, i32 0, i32 7
  %14258 = getelementptr inbounds %struct.Reg, %struct.Reg* %14257, i32 0, i32 0
  %RDX.i1233 = bitcast %union.anon* %14258 to i64*
  %14259 = load i64, i64* %RDX.i1233
  %14260 = load i64, i64* %PC.i1232
  %14261 = add i64 %14260, 4
  store i64 %14261, i64* %PC.i1232
  %14262 = shl i64 %14259, 5
  %14263 = icmp slt i64 %14262, 0
  %14264 = shl i64 %14262, 1
  store i64 %14264, i64* %RDX.i1233, align 8
  %14265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14266 = zext i1 %14263 to i8
  store i8 %14266, i8* %14265, align 1
  %14267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14268 = trunc i64 %14264 to i32
  %14269 = and i32 %14268, 254
  %14270 = call i32 @llvm.ctpop.i32(i32 %14269)
  %14271 = trunc i32 %14270 to i8
  %14272 = and i8 %14271, 1
  %14273 = xor i8 %14272, 1
  store i8 %14273, i8* %14267, align 1
  %14274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14274, align 1
  %14275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14276 = icmp eq i64 %14264, 0
  %14277 = zext i1 %14276 to i8
  store i8 %14277, i8* %14275, align 1
  %14278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14279 = lshr i64 %14264, 63
  %14280 = trunc i64 %14279 to i8
  store i8 %14280, i8* %14278, align 1
  %14281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14281, align 1
  store %struct.Memory* %loadMem_406cda, %struct.Memory** %MEMORY
  %loadMem_406cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %14282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14283 = getelementptr inbounds %struct.GPR, %struct.GPR* %14282, i32 0, i32 33
  %14284 = getelementptr inbounds %struct.Reg, %struct.Reg* %14283, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %14284 to i64*
  %14285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14286 = getelementptr inbounds %struct.GPR, %struct.GPR* %14285, i32 0, i32 5
  %14287 = getelementptr inbounds %struct.Reg, %struct.Reg* %14286, i32 0, i32 0
  %RCX.i1230 = bitcast %union.anon* %14287 to i64*
  %14288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14289 = getelementptr inbounds %struct.GPR, %struct.GPR* %14288, i32 0, i32 7
  %14290 = getelementptr inbounds %struct.Reg, %struct.Reg* %14289, i32 0, i32 0
  %RDX.i1231 = bitcast %union.anon* %14290 to i64*
  %14291 = load i64, i64* %RCX.i1230
  %14292 = load i64, i64* %RDX.i1231
  %14293 = load i64, i64* %PC.i1229
  %14294 = add i64 %14293, 3
  store i64 %14294, i64* %PC.i1229
  %14295 = add i64 %14292, %14291
  store i64 %14295, i64* %RCX.i1230, align 8
  %14296 = icmp ult i64 %14295, %14291
  %14297 = icmp ult i64 %14295, %14292
  %14298 = or i1 %14296, %14297
  %14299 = zext i1 %14298 to i8
  %14300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14299, i8* %14300, align 1
  %14301 = trunc i64 %14295 to i32
  %14302 = and i32 %14301, 255
  %14303 = call i32 @llvm.ctpop.i32(i32 %14302)
  %14304 = trunc i32 %14303 to i8
  %14305 = and i8 %14304, 1
  %14306 = xor i8 %14305, 1
  %14307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14306, i8* %14307, align 1
  %14308 = xor i64 %14292, %14291
  %14309 = xor i64 %14308, %14295
  %14310 = lshr i64 %14309, 4
  %14311 = trunc i64 %14310 to i8
  %14312 = and i8 %14311, 1
  %14313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14312, i8* %14313, align 1
  %14314 = icmp eq i64 %14295, 0
  %14315 = zext i1 %14314 to i8
  %14316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14315, i8* %14316, align 1
  %14317 = lshr i64 %14295, 63
  %14318 = trunc i64 %14317 to i8
  %14319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14318, i8* %14319, align 1
  %14320 = lshr i64 %14291, 63
  %14321 = lshr i64 %14292, 63
  %14322 = xor i64 %14317, %14320
  %14323 = xor i64 %14317, %14321
  %14324 = add i64 %14322, %14323
  %14325 = icmp eq i64 %14324, 2
  %14326 = zext i1 %14325 to i8
  %14327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14326, i8* %14327, align 1
  store %struct.Memory* %loadMem_406cde, %struct.Memory** %MEMORY
  %loadMem_406ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14329 = getelementptr inbounds %struct.GPR, %struct.GPR* %14328, i32 0, i32 33
  %14330 = getelementptr inbounds %struct.Reg, %struct.Reg* %14329, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %14330 to i64*
  %14331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14332 = getelementptr inbounds %struct.GPR, %struct.GPR* %14331, i32 0, i32 7
  %14333 = getelementptr inbounds %struct.Reg, %struct.Reg* %14332, i32 0, i32 0
  %RDX.i1227 = bitcast %union.anon* %14333 to i64*
  %14334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14335 = getelementptr inbounds %struct.GPR, %struct.GPR* %14334, i32 0, i32 15
  %14336 = getelementptr inbounds %struct.Reg, %struct.Reg* %14335, i32 0, i32 0
  %RBP.i1228 = bitcast %union.anon* %14336 to i64*
  %14337 = load i64, i64* %RBP.i1228
  %14338 = sub i64 %14337, 28
  %14339 = load i64, i64* %PC.i1226
  %14340 = add i64 %14339, 4
  store i64 %14340, i64* %PC.i1226
  %14341 = inttoptr i64 %14338 to i32*
  %14342 = load i32, i32* %14341
  %14343 = sext i32 %14342 to i64
  store i64 %14343, i64* %RDX.i1227, align 8
  store %struct.Memory* %loadMem_406ce1, %struct.Memory** %MEMORY
  %loadMem_406ce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14345 = getelementptr inbounds %struct.GPR, %struct.GPR* %14344, i32 0, i32 33
  %14346 = getelementptr inbounds %struct.Reg, %struct.Reg* %14345, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %14346 to i64*
  %14347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14348 = getelementptr inbounds %struct.GPR, %struct.GPR* %14347, i32 0, i32 1
  %14349 = getelementptr inbounds %struct.Reg, %struct.Reg* %14348, i32 0, i32 0
  %EAX.i1223 = bitcast %union.anon* %14349 to i32*
  %14350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14351 = getelementptr inbounds %struct.GPR, %struct.GPR* %14350, i32 0, i32 5
  %14352 = getelementptr inbounds %struct.Reg, %struct.Reg* %14351, i32 0, i32 0
  %RCX.i1224 = bitcast %union.anon* %14352 to i64*
  %14353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14354 = getelementptr inbounds %struct.GPR, %struct.GPR* %14353, i32 0, i32 7
  %14355 = getelementptr inbounds %struct.Reg, %struct.Reg* %14354, i32 0, i32 0
  %RDX.i1225 = bitcast %union.anon* %14355 to i64*
  %14356 = load i64, i64* %RCX.i1224
  %14357 = load i64, i64* %RDX.i1225
  %14358 = mul i64 %14357, 4
  %14359 = add i64 %14358, %14356
  %14360 = load i32, i32* %EAX.i1223
  %14361 = zext i32 %14360 to i64
  %14362 = load i64, i64* %PC.i1222
  %14363 = add i64 %14362, 3
  store i64 %14363, i64* %PC.i1222
  %14364 = inttoptr i64 %14359 to i32*
  store i32 %14360, i32* %14364
  store %struct.Memory* %loadMem_406ce5, %struct.Memory** %MEMORY
  %loadMem_406ce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14366 = getelementptr inbounds %struct.GPR, %struct.GPR* %14365, i32 0, i32 33
  %14367 = getelementptr inbounds %struct.Reg, %struct.Reg* %14366, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %14367 to i64*
  %14368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14369 = getelementptr inbounds %struct.GPR, %struct.GPR* %14368, i32 0, i32 5
  %14370 = getelementptr inbounds %struct.Reg, %struct.Reg* %14369, i32 0, i32 0
  %RCX.i1220 = bitcast %union.anon* %14370 to i64*
  %14371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14372 = getelementptr inbounds %struct.GPR, %struct.GPR* %14371, i32 0, i32 15
  %14373 = getelementptr inbounds %struct.Reg, %struct.Reg* %14372, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %14373 to i64*
  %14374 = load i64, i64* %RBP.i1221
  %14375 = sub i64 %14374, 24
  %14376 = load i64, i64* %PC.i1219
  %14377 = add i64 %14376, 4
  store i64 %14377, i64* %PC.i1219
  %14378 = inttoptr i64 %14375 to i32*
  %14379 = load i32, i32* %14378
  %14380 = sext i32 %14379 to i64
  store i64 %14380, i64* %RCX.i1220, align 8
  store %struct.Memory* %loadMem_406ce8, %struct.Memory** %MEMORY
  %loadMem_406cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %14381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14382 = getelementptr inbounds %struct.GPR, %struct.GPR* %14381, i32 0, i32 33
  %14383 = getelementptr inbounds %struct.Reg, %struct.Reg* %14382, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %14383 to i64*
  %14384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14385 = getelementptr inbounds %struct.GPR, %struct.GPR* %14384, i32 0, i32 1
  %14386 = getelementptr inbounds %struct.Reg, %struct.Reg* %14385, i32 0, i32 0
  %RAX.i1216 = bitcast %union.anon* %14386 to i64*
  %14387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14388 = getelementptr inbounds %struct.GPR, %struct.GPR* %14387, i32 0, i32 5
  %14389 = getelementptr inbounds %struct.Reg, %struct.Reg* %14388, i32 0, i32 0
  %RCX.i1217 = bitcast %union.anon* %14389 to i64*
  %14390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14391 = getelementptr inbounds %struct.GPR, %struct.GPR* %14390, i32 0, i32 15
  %14392 = getelementptr inbounds %struct.Reg, %struct.Reg* %14391, i32 0, i32 0
  %RBP.i1218 = bitcast %union.anon* %14392 to i64*
  %14393 = load i64, i64* %RBP.i1218
  %14394 = load i64, i64* %RCX.i1217
  %14395 = mul i64 %14394, 4
  %14396 = add i64 %14393, -80
  %14397 = add i64 %14396, %14395
  %14398 = load i64, i64* %PC.i1215
  %14399 = add i64 %14398, 4
  store i64 %14399, i64* %PC.i1215
  %14400 = inttoptr i64 %14397 to i32*
  %14401 = load i32, i32* %14400
  %14402 = zext i32 %14401 to i64
  store i64 %14402, i64* %RAX.i1216, align 8
  store %struct.Memory* %loadMem_406cec, %struct.Memory** %MEMORY
  %loadMem_406cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14404 = getelementptr inbounds %struct.GPR, %struct.GPR* %14403, i32 0, i32 33
  %14405 = getelementptr inbounds %struct.Reg, %struct.Reg* %14404, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %14405 to i64*
  %14406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14407 = getelementptr inbounds %struct.GPR, %struct.GPR* %14406, i32 0, i32 5
  %14408 = getelementptr inbounds %struct.Reg, %struct.Reg* %14407, i32 0, i32 0
  %RCX.i1213 = bitcast %union.anon* %14408 to i64*
  %14409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14410 = getelementptr inbounds %struct.GPR, %struct.GPR* %14409, i32 0, i32 15
  %14411 = getelementptr inbounds %struct.Reg, %struct.Reg* %14410, i32 0, i32 0
  %RBP.i1214 = bitcast %union.anon* %14411 to i64*
  %14412 = load i64, i64* %RBP.i1214
  %14413 = sub i64 %14412, 32
  %14414 = load i64, i64* %PC.i1212
  %14415 = add i64 %14414, 4
  store i64 %14415, i64* %PC.i1212
  %14416 = inttoptr i64 %14413 to i32*
  %14417 = load i32, i32* %14416
  %14418 = sext i32 %14417 to i64
  store i64 %14418, i64* %RCX.i1213, align 8
  store %struct.Memory* %loadMem_406cf0, %struct.Memory** %MEMORY
  %loadMem_406cf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14420 = getelementptr inbounds %struct.GPR, %struct.GPR* %14419, i32 0, i32 33
  %14421 = getelementptr inbounds %struct.Reg, %struct.Reg* %14420, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %14421 to i64*
  %14422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14423 = getelementptr inbounds %struct.GPR, %struct.GPR* %14422, i32 0, i32 1
  %14424 = getelementptr inbounds %struct.Reg, %struct.Reg* %14423, i32 0, i32 0
  %RAX.i1209 = bitcast %union.anon* %14424 to i64*
  %14425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14426 = getelementptr inbounds %struct.GPR, %struct.GPR* %14425, i32 0, i32 5
  %14427 = getelementptr inbounds %struct.Reg, %struct.Reg* %14426, i32 0, i32 0
  %RCX.i1210 = bitcast %union.anon* %14427 to i64*
  %14428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14429 = getelementptr inbounds %struct.GPR, %struct.GPR* %14428, i32 0, i32 15
  %14430 = getelementptr inbounds %struct.Reg, %struct.Reg* %14429, i32 0, i32 0
  %RBP.i1211 = bitcast %union.anon* %14430 to i64*
  %14431 = load i64, i64* %RAX.i1209
  %14432 = load i64, i64* %RBP.i1211
  %14433 = load i64, i64* %RCX.i1210
  %14434 = mul i64 %14433, 4
  %14435 = add i64 %14432, -80
  %14436 = add i64 %14435, %14434
  %14437 = load i64, i64* %PC.i1208
  %14438 = add i64 %14437, 4
  store i64 %14438, i64* %PC.i1208
  %14439 = trunc i64 %14431 to i32
  %14440 = inttoptr i64 %14436 to i32*
  %14441 = load i32, i32* %14440
  %14442 = sub i32 %14439, %14441
  %14443 = zext i32 %14442 to i64
  store i64 %14443, i64* %RAX.i1209, align 8
  %14444 = icmp ult i32 %14439, %14441
  %14445 = zext i1 %14444 to i8
  %14446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14445, i8* %14446, align 1
  %14447 = and i32 %14442, 255
  %14448 = call i32 @llvm.ctpop.i32(i32 %14447)
  %14449 = trunc i32 %14448 to i8
  %14450 = and i8 %14449, 1
  %14451 = xor i8 %14450, 1
  %14452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14451, i8* %14452, align 1
  %14453 = xor i32 %14441, %14439
  %14454 = xor i32 %14453, %14442
  %14455 = lshr i32 %14454, 4
  %14456 = trunc i32 %14455 to i8
  %14457 = and i8 %14456, 1
  %14458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14457, i8* %14458, align 1
  %14459 = icmp eq i32 %14442, 0
  %14460 = zext i1 %14459 to i8
  %14461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14460, i8* %14461, align 1
  %14462 = lshr i32 %14442, 31
  %14463 = trunc i32 %14462 to i8
  %14464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14463, i8* %14464, align 1
  %14465 = lshr i32 %14439, 31
  %14466 = lshr i32 %14441, 31
  %14467 = xor i32 %14466, %14465
  %14468 = xor i32 %14462, %14465
  %14469 = add i32 %14468, %14467
  %14470 = icmp eq i32 %14469, 2
  %14471 = zext i1 %14470 to i8
  %14472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14471, i8* %14472, align 1
  store %struct.Memory* %loadMem_406cf4, %struct.Memory** %MEMORY
  %loadMem_406cf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14474 = getelementptr inbounds %struct.GPR, %struct.GPR* %14473, i32 0, i32 33
  %14475 = getelementptr inbounds %struct.Reg, %struct.Reg* %14474, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %14475 to i64*
  %14476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14477 = getelementptr inbounds %struct.GPR, %struct.GPR* %14476, i32 0, i32 5
  %14478 = getelementptr inbounds %struct.Reg, %struct.Reg* %14477, i32 0, i32 0
  %RCX.i1207 = bitcast %union.anon* %14478 to i64*
  %14479 = load i64, i64* %PC.i1206
  %14480 = add i64 %14479, 8
  store i64 %14480, i64* %PC.i1206
  %14481 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %14481, i64* %RCX.i1207, align 8
  store %struct.Memory* %loadMem_406cf8, %struct.Memory** %MEMORY
  %loadMem_406d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14483 = getelementptr inbounds %struct.GPR, %struct.GPR* %14482, i32 0, i32 33
  %14484 = getelementptr inbounds %struct.Reg, %struct.Reg* %14483, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %14484 to i64*
  %14485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14486 = getelementptr inbounds %struct.GPR, %struct.GPR* %14485, i32 0, i32 5
  %14487 = getelementptr inbounds %struct.Reg, %struct.Reg* %14486, i32 0, i32 0
  %RCX.i1205 = bitcast %union.anon* %14487 to i64*
  %14488 = load i64, i64* %RCX.i1205
  %14489 = load i64, i64* %PC.i1204
  %14490 = add i64 %14489, 7
  store i64 %14490, i64* %PC.i1204
  %14491 = add i64 13112, %14488
  store i64 %14491, i64* %RCX.i1205, align 8
  %14492 = icmp ult i64 %14491, %14488
  %14493 = icmp ult i64 %14491, 13112
  %14494 = or i1 %14492, %14493
  %14495 = zext i1 %14494 to i8
  %14496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14495, i8* %14496, align 1
  %14497 = trunc i64 %14491 to i32
  %14498 = and i32 %14497, 255
  %14499 = call i32 @llvm.ctpop.i32(i32 %14498)
  %14500 = trunc i32 %14499 to i8
  %14501 = and i8 %14500, 1
  %14502 = xor i8 %14501, 1
  %14503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14502, i8* %14503, align 1
  %14504 = xor i64 13112, %14488
  %14505 = xor i64 %14504, %14491
  %14506 = lshr i64 %14505, 4
  %14507 = trunc i64 %14506 to i8
  %14508 = and i8 %14507, 1
  %14509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14508, i8* %14509, align 1
  %14510 = icmp eq i64 %14491, 0
  %14511 = zext i1 %14510 to i8
  %14512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14511, i8* %14512, align 1
  %14513 = lshr i64 %14491, 63
  %14514 = trunc i64 %14513 to i8
  %14515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14514, i8* %14515, align 1
  %14516 = lshr i64 %14488, 63
  %14517 = xor i64 %14513, %14516
  %14518 = add i64 %14517, %14513
  %14519 = icmp eq i64 %14518, 2
  %14520 = zext i1 %14519 to i8
  %14521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14520, i8* %14521, align 1
  store %struct.Memory* %loadMem_406d00, %struct.Memory** %MEMORY
  %loadMem_406d07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14523 = getelementptr inbounds %struct.GPR, %struct.GPR* %14522, i32 0, i32 33
  %14524 = getelementptr inbounds %struct.Reg, %struct.Reg* %14523, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %14524 to i64*
  %14525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14526 = getelementptr inbounds %struct.GPR, %struct.GPR* %14525, i32 0, i32 7
  %14527 = getelementptr inbounds %struct.Reg, %struct.Reg* %14526, i32 0, i32 0
  %RDX.i1202 = bitcast %union.anon* %14527 to i64*
  %14528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14529 = getelementptr inbounds %struct.GPR, %struct.GPR* %14528, i32 0, i32 15
  %14530 = getelementptr inbounds %struct.Reg, %struct.Reg* %14529, i32 0, i32 0
  %RBP.i1203 = bitcast %union.anon* %14530 to i64*
  %14531 = load i64, i64* %RBP.i1203
  %14532 = sub i64 %14531, 32
  %14533 = load i64, i64* %PC.i1201
  %14534 = add i64 %14533, 4
  store i64 %14534, i64* %PC.i1201
  %14535 = inttoptr i64 %14532 to i32*
  %14536 = load i32, i32* %14535
  %14537 = sext i32 %14536 to i64
  store i64 %14537, i64* %RDX.i1202, align 8
  store %struct.Memory* %loadMem_406d07, %struct.Memory** %MEMORY
  %loadMem_406d0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14539 = getelementptr inbounds %struct.GPR, %struct.GPR* %14538, i32 0, i32 33
  %14540 = getelementptr inbounds %struct.Reg, %struct.Reg* %14539, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %14540 to i64*
  %14541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14542 = getelementptr inbounds %struct.GPR, %struct.GPR* %14541, i32 0, i32 7
  %14543 = getelementptr inbounds %struct.Reg, %struct.Reg* %14542, i32 0, i32 0
  %RDX.i1200 = bitcast %union.anon* %14543 to i64*
  %14544 = load i64, i64* %RDX.i1200
  %14545 = load i64, i64* %PC.i1199
  %14546 = add i64 %14545, 4
  store i64 %14546, i64* %PC.i1199
  %14547 = shl i64 %14544, 5
  %14548 = icmp slt i64 %14547, 0
  %14549 = shl i64 %14547, 1
  store i64 %14549, i64* %RDX.i1200, align 8
  %14550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14551 = zext i1 %14548 to i8
  store i8 %14551, i8* %14550, align 1
  %14552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14553 = trunc i64 %14549 to i32
  %14554 = and i32 %14553, 254
  %14555 = call i32 @llvm.ctpop.i32(i32 %14554)
  %14556 = trunc i32 %14555 to i8
  %14557 = and i8 %14556, 1
  %14558 = xor i8 %14557, 1
  store i8 %14558, i8* %14552, align 1
  %14559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14559, align 1
  %14560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14561 = icmp eq i64 %14549, 0
  %14562 = zext i1 %14561 to i8
  store i8 %14562, i8* %14560, align 1
  %14563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14564 = lshr i64 %14549, 63
  %14565 = trunc i64 %14564 to i8
  store i8 %14565, i8* %14563, align 1
  %14566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14566, align 1
  store %struct.Memory* %loadMem_406d0b, %struct.Memory** %MEMORY
  %loadMem_406d0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14568 = getelementptr inbounds %struct.GPR, %struct.GPR* %14567, i32 0, i32 33
  %14569 = getelementptr inbounds %struct.Reg, %struct.Reg* %14568, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %14569 to i64*
  %14570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14571 = getelementptr inbounds %struct.GPR, %struct.GPR* %14570, i32 0, i32 5
  %14572 = getelementptr inbounds %struct.Reg, %struct.Reg* %14571, i32 0, i32 0
  %RCX.i1197 = bitcast %union.anon* %14572 to i64*
  %14573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14574 = getelementptr inbounds %struct.GPR, %struct.GPR* %14573, i32 0, i32 7
  %14575 = getelementptr inbounds %struct.Reg, %struct.Reg* %14574, i32 0, i32 0
  %RDX.i1198 = bitcast %union.anon* %14575 to i64*
  %14576 = load i64, i64* %RCX.i1197
  %14577 = load i64, i64* %RDX.i1198
  %14578 = load i64, i64* %PC.i1196
  %14579 = add i64 %14578, 3
  store i64 %14579, i64* %PC.i1196
  %14580 = add i64 %14577, %14576
  store i64 %14580, i64* %RCX.i1197, align 8
  %14581 = icmp ult i64 %14580, %14576
  %14582 = icmp ult i64 %14580, %14577
  %14583 = or i1 %14581, %14582
  %14584 = zext i1 %14583 to i8
  %14585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14584, i8* %14585, align 1
  %14586 = trunc i64 %14580 to i32
  %14587 = and i32 %14586, 255
  %14588 = call i32 @llvm.ctpop.i32(i32 %14587)
  %14589 = trunc i32 %14588 to i8
  %14590 = and i8 %14589, 1
  %14591 = xor i8 %14590, 1
  %14592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14591, i8* %14592, align 1
  %14593 = xor i64 %14577, %14576
  %14594 = xor i64 %14593, %14580
  %14595 = lshr i64 %14594, 4
  %14596 = trunc i64 %14595 to i8
  %14597 = and i8 %14596, 1
  %14598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14597, i8* %14598, align 1
  %14599 = icmp eq i64 %14580, 0
  %14600 = zext i1 %14599 to i8
  %14601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14600, i8* %14601, align 1
  %14602 = lshr i64 %14580, 63
  %14603 = trunc i64 %14602 to i8
  %14604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14603, i8* %14604, align 1
  %14605 = lshr i64 %14576, 63
  %14606 = lshr i64 %14577, 63
  %14607 = xor i64 %14602, %14605
  %14608 = xor i64 %14602, %14606
  %14609 = add i64 %14607, %14608
  %14610 = icmp eq i64 %14609, 2
  %14611 = zext i1 %14610 to i8
  %14612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14611, i8* %14612, align 1
  store %struct.Memory* %loadMem_406d0f, %struct.Memory** %MEMORY
  %loadMem_406d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14614 = getelementptr inbounds %struct.GPR, %struct.GPR* %14613, i32 0, i32 33
  %14615 = getelementptr inbounds %struct.Reg, %struct.Reg* %14614, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %14615 to i64*
  %14616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14617 = getelementptr inbounds %struct.GPR, %struct.GPR* %14616, i32 0, i32 7
  %14618 = getelementptr inbounds %struct.Reg, %struct.Reg* %14617, i32 0, i32 0
  %RDX.i1194 = bitcast %union.anon* %14618 to i64*
  %14619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14620 = getelementptr inbounds %struct.GPR, %struct.GPR* %14619, i32 0, i32 15
  %14621 = getelementptr inbounds %struct.Reg, %struct.Reg* %14620, i32 0, i32 0
  %RBP.i1195 = bitcast %union.anon* %14621 to i64*
  %14622 = load i64, i64* %RBP.i1195
  %14623 = sub i64 %14622, 28
  %14624 = load i64, i64* %PC.i1193
  %14625 = add i64 %14624, 4
  store i64 %14625, i64* %PC.i1193
  %14626 = inttoptr i64 %14623 to i32*
  %14627 = load i32, i32* %14626
  %14628 = sext i32 %14627 to i64
  store i64 %14628, i64* %RDX.i1194, align 8
  store %struct.Memory* %loadMem_406d12, %struct.Memory** %MEMORY
  %loadMem_406d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14630 = getelementptr inbounds %struct.GPR, %struct.GPR* %14629, i32 0, i32 33
  %14631 = getelementptr inbounds %struct.Reg, %struct.Reg* %14630, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %14631 to i64*
  %14632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14633 = getelementptr inbounds %struct.GPR, %struct.GPR* %14632, i32 0, i32 1
  %14634 = getelementptr inbounds %struct.Reg, %struct.Reg* %14633, i32 0, i32 0
  %EAX.i1190 = bitcast %union.anon* %14634 to i32*
  %14635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14636 = getelementptr inbounds %struct.GPR, %struct.GPR* %14635, i32 0, i32 5
  %14637 = getelementptr inbounds %struct.Reg, %struct.Reg* %14636, i32 0, i32 0
  %RCX.i1191 = bitcast %union.anon* %14637 to i64*
  %14638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14639 = getelementptr inbounds %struct.GPR, %struct.GPR* %14638, i32 0, i32 7
  %14640 = getelementptr inbounds %struct.Reg, %struct.Reg* %14639, i32 0, i32 0
  %RDX.i1192 = bitcast %union.anon* %14640 to i64*
  %14641 = load i64, i64* %RCX.i1191
  %14642 = load i64, i64* %RDX.i1192
  %14643 = mul i64 %14642, 4
  %14644 = add i64 %14643, %14641
  %14645 = load i32, i32* %EAX.i1190
  %14646 = zext i32 %14645 to i64
  %14647 = load i64, i64* %PC.i1189
  %14648 = add i64 %14647, 3
  store i64 %14648, i64* %PC.i1189
  %14649 = inttoptr i64 %14644 to i32*
  store i32 %14645, i32* %14649
  store %struct.Memory* %loadMem_406d16, %struct.Memory** %MEMORY
  %loadMem_406d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14651 = getelementptr inbounds %struct.GPR, %struct.GPR* %14650, i32 0, i32 33
  %14652 = getelementptr inbounds %struct.Reg, %struct.Reg* %14651, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %14652 to i64*
  %14653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14654 = getelementptr inbounds %struct.GPR, %struct.GPR* %14653, i32 0, i32 1
  %14655 = getelementptr inbounds %struct.Reg, %struct.Reg* %14654, i32 0, i32 0
  %RAX.i1187 = bitcast %union.anon* %14655 to i64*
  %14656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14657 = getelementptr inbounds %struct.GPR, %struct.GPR* %14656, i32 0, i32 15
  %14658 = getelementptr inbounds %struct.Reg, %struct.Reg* %14657, i32 0, i32 0
  %RBP.i1188 = bitcast %union.anon* %14658 to i64*
  %14659 = load i64, i64* %RBP.i1188
  %14660 = sub i64 %14659, 24
  %14661 = load i64, i64* %PC.i1186
  %14662 = add i64 %14661, 3
  store i64 %14662, i64* %PC.i1186
  %14663 = inttoptr i64 %14660 to i32*
  %14664 = load i32, i32* %14663
  %14665 = zext i32 %14664 to i64
  store i64 %14665, i64* %RAX.i1187, align 8
  store %struct.Memory* %loadMem_406d19, %struct.Memory** %MEMORY
  %loadMem_406d1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14667 = getelementptr inbounds %struct.GPR, %struct.GPR* %14666, i32 0, i32 33
  %14668 = getelementptr inbounds %struct.Reg, %struct.Reg* %14667, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %14668 to i64*
  %14669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14670 = getelementptr inbounds %struct.GPR, %struct.GPR* %14669, i32 0, i32 1
  %14671 = getelementptr inbounds %struct.Reg, %struct.Reg* %14670, i32 0, i32 0
  %RAX.i1185 = bitcast %union.anon* %14671 to i64*
  %14672 = load i64, i64* %RAX.i1185
  %14673 = load i64, i64* %PC.i1184
  %14674 = add i64 %14673, 3
  store i64 %14674, i64* %PC.i1184
  %14675 = trunc i64 %14672 to i32
  %14676 = add i32 1, %14675
  %14677 = zext i32 %14676 to i64
  store i64 %14677, i64* %RAX.i1185, align 8
  %14678 = icmp ult i32 %14676, %14675
  %14679 = icmp ult i32 %14676, 1
  %14680 = or i1 %14678, %14679
  %14681 = zext i1 %14680 to i8
  %14682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14681, i8* %14682, align 1
  %14683 = and i32 %14676, 255
  %14684 = call i32 @llvm.ctpop.i32(i32 %14683)
  %14685 = trunc i32 %14684 to i8
  %14686 = and i8 %14685, 1
  %14687 = xor i8 %14686, 1
  %14688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14687, i8* %14688, align 1
  %14689 = xor i64 1, %14672
  %14690 = trunc i64 %14689 to i32
  %14691 = xor i32 %14690, %14676
  %14692 = lshr i32 %14691, 4
  %14693 = trunc i32 %14692 to i8
  %14694 = and i8 %14693, 1
  %14695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14694, i8* %14695, align 1
  %14696 = icmp eq i32 %14676, 0
  %14697 = zext i1 %14696 to i8
  %14698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14697, i8* %14698, align 1
  %14699 = lshr i32 %14676, 31
  %14700 = trunc i32 %14699 to i8
  %14701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14700, i8* %14701, align 1
  %14702 = lshr i32 %14675, 31
  %14703 = xor i32 %14699, %14702
  %14704 = add i32 %14703, %14699
  %14705 = icmp eq i32 %14704, 2
  %14706 = zext i1 %14705 to i8
  %14707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14706, i8* %14707, align 1
  store %struct.Memory* %loadMem_406d1c, %struct.Memory** %MEMORY
  %loadMem_406d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14709 = getelementptr inbounds %struct.GPR, %struct.GPR* %14708, i32 0, i32 33
  %14710 = getelementptr inbounds %struct.Reg, %struct.Reg* %14709, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %14710 to i64*
  %14711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14712 = getelementptr inbounds %struct.GPR, %struct.GPR* %14711, i32 0, i32 1
  %14713 = getelementptr inbounds %struct.Reg, %struct.Reg* %14712, i32 0, i32 0
  %EAX.i1182 = bitcast %union.anon* %14713 to i32*
  %14714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14715 = getelementptr inbounds %struct.GPR, %struct.GPR* %14714, i32 0, i32 15
  %14716 = getelementptr inbounds %struct.Reg, %struct.Reg* %14715, i32 0, i32 0
  %RBP.i1183 = bitcast %union.anon* %14716 to i64*
  %14717 = load i64, i64* %RBP.i1183
  %14718 = sub i64 %14717, 24
  %14719 = load i32, i32* %EAX.i1182
  %14720 = zext i32 %14719 to i64
  %14721 = load i64, i64* %PC.i1181
  %14722 = add i64 %14721, 3
  store i64 %14722, i64* %PC.i1181
  %14723 = inttoptr i64 %14718 to i32*
  store i32 %14719, i32* %14723
  store %struct.Memory* %loadMem_406d1f, %struct.Memory** %MEMORY
  %loadMem_406d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14725 = getelementptr inbounds %struct.GPR, %struct.GPR* %14724, i32 0, i32 33
  %14726 = getelementptr inbounds %struct.Reg, %struct.Reg* %14725, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %14726 to i64*
  %14727 = load i64, i64* %PC.i1180
  %14728 = add i64 %14727, -128
  %14729 = load i64, i64* %PC.i1180
  %14730 = add i64 %14729, 5
  store i64 %14730, i64* %PC.i1180
  %14731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14728, i64* %14731, align 8
  store %struct.Memory* %loadMem_406d22, %struct.Memory** %MEMORY
  br label %block_.L_406ca2

block_.L_406d27:                                  ; preds = %block_.L_406ca2
  %loadMem_406d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14733 = getelementptr inbounds %struct.GPR, %struct.GPR* %14732, i32 0, i32 33
  %14734 = getelementptr inbounds %struct.Reg, %struct.Reg* %14733, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %14734 to i64*
  %14735 = load i64, i64* %PC.i1179
  %14736 = add i64 %14735, 5
  %14737 = load i64, i64* %PC.i1179
  %14738 = add i64 %14737, 5
  store i64 %14738, i64* %PC.i1179
  %14739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14736, i64* %14739, align 8
  store %struct.Memory* %loadMem_406d27, %struct.Memory** %MEMORY
  br label %block_.L_406d2c

block_.L_406d2c:                                  ; preds = %block_.L_406d27
  %loadMem_406d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14741 = getelementptr inbounds %struct.GPR, %struct.GPR* %14740, i32 0, i32 33
  %14742 = getelementptr inbounds %struct.Reg, %struct.Reg* %14741, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %14742 to i64*
  %14743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14744 = getelementptr inbounds %struct.GPR, %struct.GPR* %14743, i32 0, i32 1
  %14745 = getelementptr inbounds %struct.Reg, %struct.Reg* %14744, i32 0, i32 0
  %RAX.i1177 = bitcast %union.anon* %14745 to i64*
  %14746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14747 = getelementptr inbounds %struct.GPR, %struct.GPR* %14746, i32 0, i32 15
  %14748 = getelementptr inbounds %struct.Reg, %struct.Reg* %14747, i32 0, i32 0
  %RBP.i1178 = bitcast %union.anon* %14748 to i64*
  %14749 = load i64, i64* %RBP.i1178
  %14750 = sub i64 %14749, 28
  %14751 = load i64, i64* %PC.i1176
  %14752 = add i64 %14751, 3
  store i64 %14752, i64* %PC.i1176
  %14753 = inttoptr i64 %14750 to i32*
  %14754 = load i32, i32* %14753
  %14755 = zext i32 %14754 to i64
  store i64 %14755, i64* %RAX.i1177, align 8
  store %struct.Memory* %loadMem_406d2c, %struct.Memory** %MEMORY
  %loadMem_406d2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14757 = getelementptr inbounds %struct.GPR, %struct.GPR* %14756, i32 0, i32 33
  %14758 = getelementptr inbounds %struct.Reg, %struct.Reg* %14757, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %14758 to i64*
  %14759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14760 = getelementptr inbounds %struct.GPR, %struct.GPR* %14759, i32 0, i32 1
  %14761 = getelementptr inbounds %struct.Reg, %struct.Reg* %14760, i32 0, i32 0
  %RAX.i1175 = bitcast %union.anon* %14761 to i64*
  %14762 = load i64, i64* %RAX.i1175
  %14763 = load i64, i64* %PC.i1174
  %14764 = add i64 %14763, 3
  store i64 %14764, i64* %PC.i1174
  %14765 = trunc i64 %14762 to i32
  %14766 = add i32 1, %14765
  %14767 = zext i32 %14766 to i64
  store i64 %14767, i64* %RAX.i1175, align 8
  %14768 = icmp ult i32 %14766, %14765
  %14769 = icmp ult i32 %14766, 1
  %14770 = or i1 %14768, %14769
  %14771 = zext i1 %14770 to i8
  %14772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14771, i8* %14772, align 1
  %14773 = and i32 %14766, 255
  %14774 = call i32 @llvm.ctpop.i32(i32 %14773)
  %14775 = trunc i32 %14774 to i8
  %14776 = and i8 %14775, 1
  %14777 = xor i8 %14776, 1
  %14778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14777, i8* %14778, align 1
  %14779 = xor i64 1, %14762
  %14780 = trunc i64 %14779 to i32
  %14781 = xor i32 %14780, %14766
  %14782 = lshr i32 %14781, 4
  %14783 = trunc i32 %14782 to i8
  %14784 = and i8 %14783, 1
  %14785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14784, i8* %14785, align 1
  %14786 = icmp eq i32 %14766, 0
  %14787 = zext i1 %14786 to i8
  %14788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14787, i8* %14788, align 1
  %14789 = lshr i32 %14766, 31
  %14790 = trunc i32 %14789 to i8
  %14791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14790, i8* %14791, align 1
  %14792 = lshr i32 %14765, 31
  %14793 = xor i32 %14789, %14792
  %14794 = add i32 %14793, %14789
  %14795 = icmp eq i32 %14794, 2
  %14796 = zext i1 %14795 to i8
  %14797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14796, i8* %14797, align 1
  store %struct.Memory* %loadMem_406d2f, %struct.Memory** %MEMORY
  %loadMem_406d32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14799 = getelementptr inbounds %struct.GPR, %struct.GPR* %14798, i32 0, i32 33
  %14800 = getelementptr inbounds %struct.Reg, %struct.Reg* %14799, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %14800 to i64*
  %14801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14802 = getelementptr inbounds %struct.GPR, %struct.GPR* %14801, i32 0, i32 1
  %14803 = getelementptr inbounds %struct.Reg, %struct.Reg* %14802, i32 0, i32 0
  %EAX.i1172 = bitcast %union.anon* %14803 to i32*
  %14804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14805 = getelementptr inbounds %struct.GPR, %struct.GPR* %14804, i32 0, i32 15
  %14806 = getelementptr inbounds %struct.Reg, %struct.Reg* %14805, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %14806 to i64*
  %14807 = load i64, i64* %RBP.i1173
  %14808 = sub i64 %14807, 28
  %14809 = load i32, i32* %EAX.i1172
  %14810 = zext i32 %14809 to i64
  %14811 = load i64, i64* %PC.i1171
  %14812 = add i64 %14811, 3
  store i64 %14812, i64* %PC.i1171
  %14813 = inttoptr i64 %14808 to i32*
  store i32 %14809, i32* %14813
  store %struct.Memory* %loadMem_406d32, %struct.Memory** %MEMORY
  %loadMem_406d35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14815 = getelementptr inbounds %struct.GPR, %struct.GPR* %14814, i32 0, i32 33
  %14816 = getelementptr inbounds %struct.Reg, %struct.Reg* %14815, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %14816 to i64*
  %14817 = load i64, i64* %PC.i1170
  %14818 = add i64 %14817, -326
  %14819 = load i64, i64* %PC.i1170
  %14820 = add i64 %14819, 5
  store i64 %14820, i64* %PC.i1170
  %14821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14818, i64* %14821, align 8
  store %struct.Memory* %loadMem_406d35, %struct.Memory** %MEMORY
  br label %block_.L_406bef

block_.L_406d3a:                                  ; preds = %block_406c23
  %loadMem_406d3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14823 = getelementptr inbounds %struct.GPR, %struct.GPR* %14822, i32 0, i32 33
  %14824 = getelementptr inbounds %struct.Reg, %struct.Reg* %14823, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %14824 to i64*
  %14825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14826 = getelementptr inbounds %struct.GPR, %struct.GPR* %14825, i32 0, i32 15
  %14827 = getelementptr inbounds %struct.Reg, %struct.Reg* %14826, i32 0, i32 0
  %RBP.i1169 = bitcast %union.anon* %14827 to i64*
  %14828 = load i64, i64* %RBP.i1169
  %14829 = sub i64 %14828, 24
  %14830 = load i64, i64* %PC.i1168
  %14831 = add i64 %14830, 7
  store i64 %14831, i64* %PC.i1168
  %14832 = inttoptr i64 %14829 to i32*
  store i32 0, i32* %14832
  store %struct.Memory* %loadMem_406d3a, %struct.Memory** %MEMORY
  br label %block_.L_406d41

block_.L_406d41:                                  ; preds = %block_.L_40732e, %block_.L_406d3a
  %loadMem_406d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14834 = getelementptr inbounds %struct.GPR, %struct.GPR* %14833, i32 0, i32 33
  %14835 = getelementptr inbounds %struct.Reg, %struct.Reg* %14834, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %14835 to i64*
  %14836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14837 = getelementptr inbounds %struct.GPR, %struct.GPR* %14836, i32 0, i32 1
  %14838 = getelementptr inbounds %struct.Reg, %struct.Reg* %14837, i32 0, i32 0
  %EAX.i1166 = bitcast %union.anon* %14838 to i32*
  %14839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14840 = getelementptr inbounds %struct.GPR, %struct.GPR* %14839, i32 0, i32 1
  %14841 = getelementptr inbounds %struct.Reg, %struct.Reg* %14840, i32 0, i32 0
  %RAX.i1167 = bitcast %union.anon* %14841 to i64*
  %14842 = load i64, i64* %RAX.i1167
  %14843 = load i32, i32* %EAX.i1166
  %14844 = zext i32 %14843 to i64
  %14845 = load i64, i64* %PC.i1165
  %14846 = add i64 %14845, 2
  store i64 %14846, i64* %PC.i1165
  %14847 = xor i64 %14844, %14842
  %14848 = trunc i64 %14847 to i32
  %14849 = and i64 %14847, 4294967295
  store i64 %14849, i64* %RAX.i1167, align 8
  %14850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14850, align 1
  %14851 = and i32 %14848, 255
  %14852 = call i32 @llvm.ctpop.i32(i32 %14851)
  %14853 = trunc i32 %14852 to i8
  %14854 = and i8 %14853, 1
  %14855 = xor i8 %14854, 1
  %14856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14855, i8* %14856, align 1
  %14857 = icmp eq i32 %14848, 0
  %14858 = zext i1 %14857 to i8
  %14859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14858, i8* %14859, align 1
  %14860 = lshr i32 %14848, 31
  %14861 = trunc i32 %14860 to i8
  %14862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14861, i8* %14862, align 1
  %14863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14863, align 1
  %14864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14864, align 1
  store %struct.Memory* %loadMem_406d41, %struct.Memory** %MEMORY
  %loadMem_406d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14866 = getelementptr inbounds %struct.GPR, %struct.GPR* %14865, i32 0, i32 33
  %14867 = getelementptr inbounds %struct.Reg, %struct.Reg* %14866, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %14867 to i64*
  %14868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14869 = getelementptr inbounds %struct.GPR, %struct.GPR* %14868, i32 0, i32 1
  %14870 = getelementptr inbounds %struct.Reg, %struct.Reg* %14869, i32 0, i32 0
  %14871 = bitcast %union.anon* %14870 to %struct.anon.2*
  %AL.i1163 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14871, i32 0, i32 0
  %14872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14873 = getelementptr inbounds %struct.GPR, %struct.GPR* %14872, i32 0, i32 5
  %14874 = getelementptr inbounds %struct.Reg, %struct.Reg* %14873, i32 0, i32 0
  %14875 = bitcast %union.anon* %14874 to %struct.anon.2*
  %CL.i1164 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14875, i32 0, i32 0
  %14876 = load i8, i8* %AL.i1163
  %14877 = zext i8 %14876 to i64
  %14878 = load i64, i64* %PC.i1162
  %14879 = add i64 %14878, 2
  store i64 %14879, i64* %PC.i1162
  store i8 %14876, i8* %CL.i1164, align 1
  store %struct.Memory* %loadMem_406d43, %struct.Memory** %MEMORY
  %loadMem_406d45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14881 = getelementptr inbounds %struct.GPR, %struct.GPR* %14880, i32 0, i32 33
  %14882 = getelementptr inbounds %struct.Reg, %struct.Reg* %14881, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %14882 to i64*
  %14883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14884 = getelementptr inbounds %struct.GPR, %struct.GPR* %14883, i32 0, i32 15
  %14885 = getelementptr inbounds %struct.Reg, %struct.Reg* %14884, i32 0, i32 0
  %RBP.i1161 = bitcast %union.anon* %14885 to i64*
  %14886 = load i64, i64* %RBP.i1161
  %14887 = sub i64 %14886, 24
  %14888 = load i64, i64* %PC.i1160
  %14889 = add i64 %14888, 4
  store i64 %14889, i64* %PC.i1160
  %14890 = inttoptr i64 %14887 to i32*
  %14891 = load i32, i32* %14890
  %14892 = sub i32 %14891, 4
  %14893 = icmp ult i32 %14891, 4
  %14894 = zext i1 %14893 to i8
  %14895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14894, i8* %14895, align 1
  %14896 = and i32 %14892, 255
  %14897 = call i32 @llvm.ctpop.i32(i32 %14896)
  %14898 = trunc i32 %14897 to i8
  %14899 = and i8 %14898, 1
  %14900 = xor i8 %14899, 1
  %14901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14900, i8* %14901, align 1
  %14902 = xor i32 %14891, 4
  %14903 = xor i32 %14902, %14892
  %14904 = lshr i32 %14903, 4
  %14905 = trunc i32 %14904 to i8
  %14906 = and i8 %14905, 1
  %14907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14906, i8* %14907, align 1
  %14908 = icmp eq i32 %14892, 0
  %14909 = zext i1 %14908 to i8
  %14910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14909, i8* %14910, align 1
  %14911 = lshr i32 %14892, 31
  %14912 = trunc i32 %14911 to i8
  %14913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14912, i8* %14913, align 1
  %14914 = lshr i32 %14891, 31
  %14915 = xor i32 %14911, %14914
  %14916 = add i32 %14915, %14914
  %14917 = icmp eq i32 %14916, 2
  %14918 = zext i1 %14917 to i8
  %14919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14918, i8* %14919, align 1
  store %struct.Memory* %loadMem_406d45, %struct.Memory** %MEMORY
  %loadMem_406d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14921 = getelementptr inbounds %struct.GPR, %struct.GPR* %14920, i32 0, i32 33
  %14922 = getelementptr inbounds %struct.Reg, %struct.Reg* %14921, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %14922 to i64*
  %14923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14924 = getelementptr inbounds %struct.GPR, %struct.GPR* %14923, i32 0, i32 5
  %14925 = getelementptr inbounds %struct.Reg, %struct.Reg* %14924, i32 0, i32 0
  %14926 = bitcast %union.anon* %14925 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14926, i32 0, i32 0
  %14927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14928 = getelementptr inbounds %struct.GPR, %struct.GPR* %14927, i32 0, i32 15
  %14929 = getelementptr inbounds %struct.Reg, %struct.Reg* %14928, i32 0, i32 0
  %RBP.i1159 = bitcast %union.anon* %14929 to i64*
  %14930 = load i64, i64* %RBP.i1159
  %14931 = sub i64 %14930, 190
  %14932 = load i8, i8* %CL.i
  %14933 = zext i8 %14932 to i64
  %14934 = load i64, i64* %PC.i1158
  %14935 = add i64 %14934, 6
  store i64 %14935, i64* %PC.i1158
  %14936 = inttoptr i64 %14931 to i8*
  store i8 %14932, i8* %14936
  store %struct.Memory* %loadMem_406d49, %struct.Memory** %MEMORY
  %loadMem_406d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14938 = getelementptr inbounds %struct.GPR, %struct.GPR* %14937, i32 0, i32 33
  %14939 = getelementptr inbounds %struct.Reg, %struct.Reg* %14938, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %14939 to i64*
  %14940 = load i64, i64* %PC.i1157
  %14941 = add i64 %14940, 24
  %14942 = load i64, i64* %PC.i1157
  %14943 = add i64 %14942, 6
  %14944 = load i64, i64* %PC.i1157
  %14945 = add i64 %14944, 6
  store i64 %14945, i64* %PC.i1157
  %14946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14947 = load i8, i8* %14946, align 1
  %14948 = icmp ne i8 %14947, 0
  %14949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14950 = load i8, i8* %14949, align 1
  %14951 = icmp ne i8 %14950, 0
  %14952 = xor i1 %14948, %14951
  %14953 = xor i1 %14952, true
  %14954 = zext i1 %14953 to i8
  store i8 %14954, i8* %BRANCH_TAKEN, align 1
  %14955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14956 = select i1 %14952, i64 %14943, i64 %14941
  store i64 %14956, i64* %14955, align 8
  store %struct.Memory* %loadMem_406d4f, %struct.Memory** %MEMORY
  %loadBr_406d4f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406d4f = icmp eq i8 %loadBr_406d4f, 1
  br i1 %cmpBr_406d4f, label %block_.L_406d67, label %block_406d55

block_406d55:                                     ; preds = %block_.L_406d41
  %loadMem_406d55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14958 = getelementptr inbounds %struct.GPR, %struct.GPR* %14957, i32 0, i32 33
  %14959 = getelementptr inbounds %struct.Reg, %struct.Reg* %14958, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %14959 to i64*
  %14960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14961 = getelementptr inbounds %struct.GPR, %struct.GPR* %14960, i32 0, i32 15
  %14962 = getelementptr inbounds %struct.Reg, %struct.Reg* %14961, i32 0, i32 0
  %RBP.i1156 = bitcast %union.anon* %14962 to i64*
  %14963 = load i64, i64* %RBP.i1156
  %14964 = sub i64 %14963, 156
  %14965 = load i64, i64* %PC.i1155
  %14966 = add i64 %14965, 7
  store i64 %14966, i64* %PC.i1155
  %14967 = inttoptr i64 %14964 to i32*
  %14968 = load i32, i32* %14967
  %14969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14969, align 1
  %14970 = and i32 %14968, 255
  %14971 = call i32 @llvm.ctpop.i32(i32 %14970)
  %14972 = trunc i32 %14971 to i8
  %14973 = and i8 %14972, 1
  %14974 = xor i8 %14973, 1
  %14975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14974, i8* %14975, align 1
  %14976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14976, align 1
  %14977 = icmp eq i32 %14968, 0
  %14978 = zext i1 %14977 to i8
  %14979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14978, i8* %14979, align 1
  %14980 = lshr i32 %14968, 31
  %14981 = trunc i32 %14980 to i8
  %14982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14981, i8* %14982, align 1
  %14983 = lshr i32 %14968, 31
  %14984 = xor i32 %14980, %14983
  %14985 = add i32 %14984, %14983
  %14986 = icmp eq i32 %14985, 2
  %14987 = zext i1 %14986 to i8
  %14988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14987, i8* %14988, align 1
  store %struct.Memory* %loadMem_406d55, %struct.Memory** %MEMORY
  %loadMem_406d5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14990 = getelementptr inbounds %struct.GPR, %struct.GPR* %14989, i32 0, i32 33
  %14991 = getelementptr inbounds %struct.Reg, %struct.Reg* %14990, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %14991 to i64*
  %14992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14993 = getelementptr inbounds %struct.GPR, %struct.GPR* %14992, i32 0, i32 1
  %14994 = getelementptr inbounds %struct.Reg, %struct.Reg* %14993, i32 0, i32 0
  %14995 = bitcast %union.anon* %14994 to %struct.anon.2*
  %AL.i1154 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14995, i32 0, i32 0
  %14996 = load i64, i64* %PC.i1153
  %14997 = add i64 %14996, 3
  store i64 %14997, i64* %PC.i1153
  %14998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14999 = load i8, i8* %14998, align 1
  %15000 = icmp eq i8 %14999, 0
  %15001 = zext i1 %15000 to i8
  store i8 %15001, i8* %AL.i1154, align 1
  store %struct.Memory* %loadMem_406d5c, %struct.Memory** %MEMORY
  %loadMem_406d5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15003 = getelementptr inbounds %struct.GPR, %struct.GPR* %15002, i32 0, i32 33
  %15004 = getelementptr inbounds %struct.Reg, %struct.Reg* %15003, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %15004 to i64*
  %15005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15006 = getelementptr inbounds %struct.GPR, %struct.GPR* %15005, i32 0, i32 1
  %15007 = getelementptr inbounds %struct.Reg, %struct.Reg* %15006, i32 0, i32 0
  %15008 = bitcast %union.anon* %15007 to %struct.anon.2*
  %AL.i1152 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15008, i32 0, i32 0
  %15009 = load i8, i8* %AL.i1152
  %15010 = zext i8 %15009 to i64
  %15011 = load i64, i64* %PC.i1151
  %15012 = add i64 %15011, 2
  store i64 %15012, i64* %PC.i1151
  %15013 = xor i64 255, %15010
  %15014 = trunc i64 %15013 to i8
  store i8 %15014, i8* %AL.i1152, align 1
  %15015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15015, align 1
  %15016 = trunc i64 %15013 to i32
  %15017 = and i32 %15016, 255
  %15018 = call i32 @llvm.ctpop.i32(i32 %15017)
  %15019 = trunc i32 %15018 to i8
  %15020 = and i8 %15019, 1
  %15021 = xor i8 %15020, 1
  %15022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15021, i8* %15022, align 1
  %15023 = icmp eq i8 %15014, 0
  %15024 = zext i1 %15023 to i8
  %15025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15024, i8* %15025, align 1
  %15026 = lshr i8 %15014, 7
  %15027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15026, i8* %15027, align 1
  %15028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15028, align 1
  %15029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15029, align 1
  store %struct.Memory* %loadMem_406d5f, %struct.Memory** %MEMORY
  %loadMem_406d61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15031 = getelementptr inbounds %struct.GPR, %struct.GPR* %15030, i32 0, i32 33
  %15032 = getelementptr inbounds %struct.Reg, %struct.Reg* %15031, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %15032 to i64*
  %15033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15034 = getelementptr inbounds %struct.GPR, %struct.GPR* %15033, i32 0, i32 1
  %15035 = getelementptr inbounds %struct.Reg, %struct.Reg* %15034, i32 0, i32 0
  %15036 = bitcast %union.anon* %15035 to %struct.anon.2*
  %AL.i1149 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15036, i32 0, i32 0
  %15037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15038 = getelementptr inbounds %struct.GPR, %struct.GPR* %15037, i32 0, i32 15
  %15039 = getelementptr inbounds %struct.Reg, %struct.Reg* %15038, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %15039 to i64*
  %15040 = load i64, i64* %RBP.i1150
  %15041 = sub i64 %15040, 190
  %15042 = load i8, i8* %AL.i1149
  %15043 = zext i8 %15042 to i64
  %15044 = load i64, i64* %PC.i1148
  %15045 = add i64 %15044, 6
  store i64 %15045, i64* %PC.i1148
  %15046 = inttoptr i64 %15041 to i8*
  store i8 %15042, i8* %15046
  store %struct.Memory* %loadMem_406d61, %struct.Memory** %MEMORY
  br label %block_.L_406d67

block_.L_406d67:                                  ; preds = %block_406d55, %block_.L_406d41
  %loadMem_406d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15048 = getelementptr inbounds %struct.GPR, %struct.GPR* %15047, i32 0, i32 33
  %15049 = getelementptr inbounds %struct.Reg, %struct.Reg* %15048, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %15049 to i64*
  %15050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15051 = getelementptr inbounds %struct.GPR, %struct.GPR* %15050, i32 0, i32 1
  %15052 = getelementptr inbounds %struct.Reg, %struct.Reg* %15051, i32 0, i32 0
  %15053 = bitcast %union.anon* %15052 to %struct.anon.2*
  %AL.i1146 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15053, i32 0, i32 0
  %15054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15055 = getelementptr inbounds %struct.GPR, %struct.GPR* %15054, i32 0, i32 15
  %15056 = getelementptr inbounds %struct.Reg, %struct.Reg* %15055, i32 0, i32 0
  %RBP.i1147 = bitcast %union.anon* %15056 to i64*
  %15057 = load i64, i64* %RBP.i1147
  %15058 = sub i64 %15057, 190
  %15059 = load i64, i64* %PC.i1145
  %15060 = add i64 %15059, 6
  store i64 %15060, i64* %PC.i1145
  %15061 = inttoptr i64 %15058 to i8*
  %15062 = load i8, i8* %15061
  store i8 %15062, i8* %AL.i1146, align 1
  store %struct.Memory* %loadMem_406d67, %struct.Memory** %MEMORY
  %loadMem_406d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15064 = getelementptr inbounds %struct.GPR, %struct.GPR* %15063, i32 0, i32 33
  %15065 = getelementptr inbounds %struct.Reg, %struct.Reg* %15064, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %15065 to i64*
  %15066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15067 = getelementptr inbounds %struct.GPR, %struct.GPR* %15066, i32 0, i32 1
  %15068 = getelementptr inbounds %struct.Reg, %struct.Reg* %15067, i32 0, i32 0
  %15069 = bitcast %union.anon* %15068 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15069, i32 0, i32 0
  %15070 = load i8, i8* %AL.i
  %15071 = zext i8 %15070 to i64
  %15072 = load i64, i64* %PC.i1144
  %15073 = add i64 %15072, 2
  store i64 %15073, i64* %PC.i1144
  %15074 = and i64 1, %15071
  %15075 = trunc i64 %15074 to i8
  %15076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15076, align 1
  %15077 = trunc i64 %15074 to i32
  %15078 = and i32 %15077, 255
  %15079 = call i32 @llvm.ctpop.i32(i32 %15078)
  %15080 = trunc i32 %15079 to i8
  %15081 = and i8 %15080, 1
  %15082 = xor i8 %15081, 1
  %15083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15082, i8* %15083, align 1
  %15084 = icmp eq i8 %15075, 0
  %15085 = zext i1 %15084 to i8
  %15086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15085, i8* %15086, align 1
  %15087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %15087, align 1
  %15088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15088, align 1
  %15089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15089, align 1
  store %struct.Memory* %loadMem_406d6d, %struct.Memory** %MEMORY
  %loadMem_406d6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15091 = getelementptr inbounds %struct.GPR, %struct.GPR* %15090, i32 0, i32 33
  %15092 = getelementptr inbounds %struct.Reg, %struct.Reg* %15091, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %15092 to i64*
  %15093 = load i64, i64* %PC.i1143
  %15094 = add i64 %15093, 11
  %15095 = load i64, i64* %PC.i1143
  %15096 = add i64 %15095, 6
  %15097 = load i64, i64* %PC.i1143
  %15098 = add i64 %15097, 6
  store i64 %15098, i64* %PC.i1143
  %15099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15100 = load i8, i8* %15099, align 1
  %15101 = icmp eq i8 %15100, 0
  %15102 = zext i1 %15101 to i8
  store i8 %15102, i8* %BRANCH_TAKEN, align 1
  %15103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15104 = select i1 %15101, i64 %15094, i64 %15096
  store i64 %15104, i64* %15103, align 8
  store %struct.Memory* %loadMem_406d6f, %struct.Memory** %MEMORY
  %loadBr_406d6f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406d6f = icmp eq i8 %loadBr_406d6f, 1
  br i1 %cmpBr_406d6f, label %block_.L_406d7a, label %block_406d75

block_406d75:                                     ; preds = %block_.L_406d67
  %loadMem_406d75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15106 = getelementptr inbounds %struct.GPR, %struct.GPR* %15105, i32 0, i32 33
  %15107 = getelementptr inbounds %struct.Reg, %struct.Reg* %15106, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %15107 to i64*
  %15108 = load i64, i64* %PC.i1142
  %15109 = add i64 %15108, 1479
  %15110 = load i64, i64* %PC.i1142
  %15111 = add i64 %15110, 5
  store i64 %15111, i64* %PC.i1142
  %15112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15109, i64* %15112, align 8
  store %struct.Memory* %loadMem_406d75, %struct.Memory** %MEMORY
  br label %block_.L_40733c

block_.L_406d7a:                                  ; preds = %block_.L_406d67
  %loadMem_406d7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15114 = getelementptr inbounds %struct.GPR, %struct.GPR* %15113, i32 0, i32 33
  %15115 = getelementptr inbounds %struct.Reg, %struct.Reg* %15114, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %15115 to i64*
  %15116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15117 = getelementptr inbounds %struct.GPR, %struct.GPR* %15116, i32 0, i32 15
  %15118 = getelementptr inbounds %struct.Reg, %struct.Reg* %15117, i32 0, i32 0
  %RBP.i1141 = bitcast %union.anon* %15118 to i64*
  %15119 = load i64, i64* %RBP.i1141
  %15120 = sub i64 %15119, 28
  %15121 = load i64, i64* %PC.i1140
  %15122 = add i64 %15121, 7
  store i64 %15122, i64* %PC.i1140
  %15123 = inttoptr i64 %15120 to i32*
  store i32 0, i32* %15123
  store %struct.Memory* %loadMem_406d7a, %struct.Memory** %MEMORY
  br label %block_.L_406d81

block_.L_406d81:                                  ; preds = %block_406d8b, %block_.L_406d7a
  %loadMem_406d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15125 = getelementptr inbounds %struct.GPR, %struct.GPR* %15124, i32 0, i32 33
  %15126 = getelementptr inbounds %struct.Reg, %struct.Reg* %15125, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %15126 to i64*
  %15127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15128 = getelementptr inbounds %struct.GPR, %struct.GPR* %15127, i32 0, i32 15
  %15129 = getelementptr inbounds %struct.Reg, %struct.Reg* %15128, i32 0, i32 0
  %RBP.i1139 = bitcast %union.anon* %15129 to i64*
  %15130 = load i64, i64* %RBP.i1139
  %15131 = sub i64 %15130, 28
  %15132 = load i64, i64* %PC.i1138
  %15133 = add i64 %15132, 4
  store i64 %15133, i64* %PC.i1138
  %15134 = inttoptr i64 %15131 to i32*
  %15135 = load i32, i32* %15134
  %15136 = sub i32 %15135, 4
  %15137 = icmp ult i32 %15135, 4
  %15138 = zext i1 %15137 to i8
  %15139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15138, i8* %15139, align 1
  %15140 = and i32 %15136, 255
  %15141 = call i32 @llvm.ctpop.i32(i32 %15140)
  %15142 = trunc i32 %15141 to i8
  %15143 = and i8 %15142, 1
  %15144 = xor i8 %15143, 1
  %15145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15144, i8* %15145, align 1
  %15146 = xor i32 %15135, 4
  %15147 = xor i32 %15146, %15136
  %15148 = lshr i32 %15147, 4
  %15149 = trunc i32 %15148 to i8
  %15150 = and i8 %15149, 1
  %15151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15150, i8* %15151, align 1
  %15152 = icmp eq i32 %15136, 0
  %15153 = zext i1 %15152 to i8
  %15154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15153, i8* %15154, align 1
  %15155 = lshr i32 %15136, 31
  %15156 = trunc i32 %15155 to i8
  %15157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15156, i8* %15157, align 1
  %15158 = lshr i32 %15135, 31
  %15159 = xor i32 %15155, %15158
  %15160 = add i32 %15159, %15158
  %15161 = icmp eq i32 %15160, 2
  %15162 = zext i1 %15161 to i8
  %15163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15162, i8* %15163, align 1
  store %struct.Memory* %loadMem_406d81, %struct.Memory** %MEMORY
  %loadMem_406d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15165 = getelementptr inbounds %struct.GPR, %struct.GPR* %15164, i32 0, i32 33
  %15166 = getelementptr inbounds %struct.Reg, %struct.Reg* %15165, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %15166 to i64*
  %15167 = load i64, i64* %PC.i1137
  %15168 = add i64 %15167, 60
  %15169 = load i64, i64* %PC.i1137
  %15170 = add i64 %15169, 6
  %15171 = load i64, i64* %PC.i1137
  %15172 = add i64 %15171, 6
  store i64 %15172, i64* %PC.i1137
  %15173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15174 = load i8, i8* %15173, align 1
  %15175 = icmp ne i8 %15174, 0
  %15176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15177 = load i8, i8* %15176, align 1
  %15178 = icmp ne i8 %15177, 0
  %15179 = xor i1 %15175, %15178
  %15180 = xor i1 %15179, true
  %15181 = zext i1 %15180 to i8
  store i8 %15181, i8* %BRANCH_TAKEN, align 1
  %15182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15183 = select i1 %15179, i64 %15170, i64 %15168
  store i64 %15183, i64* %15182, align 8
  store %struct.Memory* %loadMem_406d85, %struct.Memory** %MEMORY
  %loadBr_406d85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406d85 = icmp eq i8 %loadBr_406d85, 1
  br i1 %cmpBr_406d85, label %block_.L_406dc1, label %block_406d8b

block_406d8b:                                     ; preds = %block_.L_406d81
  %loadMem_406d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15185 = getelementptr inbounds %struct.GPR, %struct.GPR* %15184, i32 0, i32 33
  %15186 = getelementptr inbounds %struct.Reg, %struct.Reg* %15185, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %15186 to i64*
  %15187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15188 = getelementptr inbounds %struct.GPR, %struct.GPR* %15187, i32 0, i32 1
  %15189 = getelementptr inbounds %struct.Reg, %struct.Reg* %15188, i32 0, i32 0
  %RAX.i1136 = bitcast %union.anon* %15189 to i64*
  %15190 = load i64, i64* %PC.i1135
  %15191 = add i64 %15190, 8
  store i64 %15191, i64* %PC.i1135
  %15192 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %15192, i64* %RAX.i1136, align 8
  store %struct.Memory* %loadMem_406d8b, %struct.Memory** %MEMORY
  %loadMem_406d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15194 = getelementptr inbounds %struct.GPR, %struct.GPR* %15193, i32 0, i32 33
  %15195 = getelementptr inbounds %struct.Reg, %struct.Reg* %15194, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %15195 to i64*
  %15196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15197 = getelementptr inbounds %struct.GPR, %struct.GPR* %15196, i32 0, i32 1
  %15198 = getelementptr inbounds %struct.Reg, %struct.Reg* %15197, i32 0, i32 0
  %RAX.i1134 = bitcast %union.anon* %15198 to i64*
  %15199 = load i64, i64* %RAX.i1134
  %15200 = load i64, i64* %PC.i1133
  %15201 = add i64 %15200, 6
  store i64 %15201, i64* %PC.i1133
  %15202 = add i64 13112, %15199
  store i64 %15202, i64* %RAX.i1134, align 8
  %15203 = icmp ult i64 %15202, %15199
  %15204 = icmp ult i64 %15202, 13112
  %15205 = or i1 %15203, %15204
  %15206 = zext i1 %15205 to i8
  %15207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15206, i8* %15207, align 1
  %15208 = trunc i64 %15202 to i32
  %15209 = and i32 %15208, 255
  %15210 = call i32 @llvm.ctpop.i32(i32 %15209)
  %15211 = trunc i32 %15210 to i8
  %15212 = and i8 %15211, 1
  %15213 = xor i8 %15212, 1
  %15214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15213, i8* %15214, align 1
  %15215 = xor i64 13112, %15199
  %15216 = xor i64 %15215, %15202
  %15217 = lshr i64 %15216, 4
  %15218 = trunc i64 %15217 to i8
  %15219 = and i8 %15218, 1
  %15220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15219, i8* %15220, align 1
  %15221 = icmp eq i64 %15202, 0
  %15222 = zext i1 %15221 to i8
  %15223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15222, i8* %15223, align 1
  %15224 = lshr i64 %15202, 63
  %15225 = trunc i64 %15224 to i8
  %15226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15225, i8* %15226, align 1
  %15227 = lshr i64 %15199, 63
  %15228 = xor i64 %15224, %15227
  %15229 = add i64 %15228, %15224
  %15230 = icmp eq i64 %15229, 2
  %15231 = zext i1 %15230 to i8
  %15232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15231, i8* %15232, align 1
  store %struct.Memory* %loadMem_406d93, %struct.Memory** %MEMORY
  %loadMem_406d99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15234 = getelementptr inbounds %struct.GPR, %struct.GPR* %15233, i32 0, i32 33
  %15235 = getelementptr inbounds %struct.Reg, %struct.Reg* %15234, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %15235 to i64*
  %15236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15237 = getelementptr inbounds %struct.GPR, %struct.GPR* %15236, i32 0, i32 5
  %15238 = getelementptr inbounds %struct.Reg, %struct.Reg* %15237, i32 0, i32 0
  %RCX.i1131 = bitcast %union.anon* %15238 to i64*
  %15239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15240 = getelementptr inbounds %struct.GPR, %struct.GPR* %15239, i32 0, i32 15
  %15241 = getelementptr inbounds %struct.Reg, %struct.Reg* %15240, i32 0, i32 0
  %RBP.i1132 = bitcast %union.anon* %15241 to i64*
  %15242 = load i64, i64* %RBP.i1132
  %15243 = sub i64 %15242, 24
  %15244 = load i64, i64* %PC.i1130
  %15245 = add i64 %15244, 4
  store i64 %15245, i64* %PC.i1130
  %15246 = inttoptr i64 %15243 to i32*
  %15247 = load i32, i32* %15246
  %15248 = sext i32 %15247 to i64
  store i64 %15248, i64* %RCX.i1131, align 8
  store %struct.Memory* %loadMem_406d99, %struct.Memory** %MEMORY
  %loadMem_406d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15250 = getelementptr inbounds %struct.GPR, %struct.GPR* %15249, i32 0, i32 33
  %15251 = getelementptr inbounds %struct.Reg, %struct.Reg* %15250, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %15251 to i64*
  %15252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15253 = getelementptr inbounds %struct.GPR, %struct.GPR* %15252, i32 0, i32 5
  %15254 = getelementptr inbounds %struct.Reg, %struct.Reg* %15253, i32 0, i32 0
  %RCX.i1129 = bitcast %union.anon* %15254 to i64*
  %15255 = load i64, i64* %RCX.i1129
  %15256 = load i64, i64* %PC.i1128
  %15257 = add i64 %15256, 4
  store i64 %15257, i64* %PC.i1128
  %15258 = shl i64 %15255, 5
  %15259 = icmp slt i64 %15258, 0
  %15260 = shl i64 %15258, 1
  store i64 %15260, i64* %RCX.i1129, align 8
  %15261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15262 = zext i1 %15259 to i8
  store i8 %15262, i8* %15261, align 1
  %15263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15264 = trunc i64 %15260 to i32
  %15265 = and i32 %15264, 254
  %15266 = call i32 @llvm.ctpop.i32(i32 %15265)
  %15267 = trunc i32 %15266 to i8
  %15268 = and i8 %15267, 1
  %15269 = xor i8 %15268, 1
  store i8 %15269, i8* %15263, align 1
  %15270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15270, align 1
  %15271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15272 = icmp eq i64 %15260, 0
  %15273 = zext i1 %15272 to i8
  store i8 %15273, i8* %15271, align 1
  %15274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15275 = lshr i64 %15260, 63
  %15276 = trunc i64 %15275 to i8
  store i8 %15276, i8* %15274, align 1
  %15277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15277, align 1
  store %struct.Memory* %loadMem_406d9d, %struct.Memory** %MEMORY
  %loadMem_406da1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15279 = getelementptr inbounds %struct.GPR, %struct.GPR* %15278, i32 0, i32 33
  %15280 = getelementptr inbounds %struct.Reg, %struct.Reg* %15279, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %15280 to i64*
  %15281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15282 = getelementptr inbounds %struct.GPR, %struct.GPR* %15281, i32 0, i32 1
  %15283 = getelementptr inbounds %struct.Reg, %struct.Reg* %15282, i32 0, i32 0
  %RAX.i1126 = bitcast %union.anon* %15283 to i64*
  %15284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15285 = getelementptr inbounds %struct.GPR, %struct.GPR* %15284, i32 0, i32 5
  %15286 = getelementptr inbounds %struct.Reg, %struct.Reg* %15285, i32 0, i32 0
  %RCX.i1127 = bitcast %union.anon* %15286 to i64*
  %15287 = load i64, i64* %RAX.i1126
  %15288 = load i64, i64* %RCX.i1127
  %15289 = load i64, i64* %PC.i1125
  %15290 = add i64 %15289, 3
  store i64 %15290, i64* %PC.i1125
  %15291 = add i64 %15288, %15287
  store i64 %15291, i64* %RAX.i1126, align 8
  %15292 = icmp ult i64 %15291, %15287
  %15293 = icmp ult i64 %15291, %15288
  %15294 = or i1 %15292, %15293
  %15295 = zext i1 %15294 to i8
  %15296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15295, i8* %15296, align 1
  %15297 = trunc i64 %15291 to i32
  %15298 = and i32 %15297, 255
  %15299 = call i32 @llvm.ctpop.i32(i32 %15298)
  %15300 = trunc i32 %15299 to i8
  %15301 = and i8 %15300, 1
  %15302 = xor i8 %15301, 1
  %15303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15302, i8* %15303, align 1
  %15304 = xor i64 %15288, %15287
  %15305 = xor i64 %15304, %15291
  %15306 = lshr i64 %15305, 4
  %15307 = trunc i64 %15306 to i8
  %15308 = and i8 %15307, 1
  %15309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15308, i8* %15309, align 1
  %15310 = icmp eq i64 %15291, 0
  %15311 = zext i1 %15310 to i8
  %15312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15311, i8* %15312, align 1
  %15313 = lshr i64 %15291, 63
  %15314 = trunc i64 %15313 to i8
  %15315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15314, i8* %15315, align 1
  %15316 = lshr i64 %15287, 63
  %15317 = lshr i64 %15288, 63
  %15318 = xor i64 %15313, %15316
  %15319 = xor i64 %15313, %15317
  %15320 = add i64 %15318, %15319
  %15321 = icmp eq i64 %15320, 2
  %15322 = zext i1 %15321 to i8
  %15323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15322, i8* %15323, align 1
  store %struct.Memory* %loadMem_406da1, %struct.Memory** %MEMORY
  %loadMem_406da4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15325 = getelementptr inbounds %struct.GPR, %struct.GPR* %15324, i32 0, i32 33
  %15326 = getelementptr inbounds %struct.Reg, %struct.Reg* %15325, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %15326 to i64*
  %15327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15328 = getelementptr inbounds %struct.GPR, %struct.GPR* %15327, i32 0, i32 5
  %15329 = getelementptr inbounds %struct.Reg, %struct.Reg* %15328, i32 0, i32 0
  %RCX.i1123 = bitcast %union.anon* %15329 to i64*
  %15330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15331 = getelementptr inbounds %struct.GPR, %struct.GPR* %15330, i32 0, i32 15
  %15332 = getelementptr inbounds %struct.Reg, %struct.Reg* %15331, i32 0, i32 0
  %RBP.i1124 = bitcast %union.anon* %15332 to i64*
  %15333 = load i64, i64* %RBP.i1124
  %15334 = sub i64 %15333, 28
  %15335 = load i64, i64* %PC.i1122
  %15336 = add i64 %15335, 4
  store i64 %15336, i64* %PC.i1122
  %15337 = inttoptr i64 %15334 to i32*
  %15338 = load i32, i32* %15337
  %15339 = sext i32 %15338 to i64
  store i64 %15339, i64* %RCX.i1123, align 8
  store %struct.Memory* %loadMem_406da4, %struct.Memory** %MEMORY
  %loadMem_406da8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15341 = getelementptr inbounds %struct.GPR, %struct.GPR* %15340, i32 0, i32 33
  %15342 = getelementptr inbounds %struct.Reg, %struct.Reg* %15341, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %15342 to i64*
  %15343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15344 = getelementptr inbounds %struct.GPR, %struct.GPR* %15343, i32 0, i32 1
  %15345 = getelementptr inbounds %struct.Reg, %struct.Reg* %15344, i32 0, i32 0
  %RAX.i1119 = bitcast %union.anon* %15345 to i64*
  %15346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15347 = getelementptr inbounds %struct.GPR, %struct.GPR* %15346, i32 0, i32 5
  %15348 = getelementptr inbounds %struct.Reg, %struct.Reg* %15347, i32 0, i32 0
  %RCX.i1120 = bitcast %union.anon* %15348 to i64*
  %15349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15350 = getelementptr inbounds %struct.GPR, %struct.GPR* %15349, i32 0, i32 7
  %15351 = getelementptr inbounds %struct.Reg, %struct.Reg* %15350, i32 0, i32 0
  %RDX.i1121 = bitcast %union.anon* %15351 to i64*
  %15352 = load i64, i64* %RAX.i1119
  %15353 = load i64, i64* %RCX.i1120
  %15354 = mul i64 %15353, 4
  %15355 = add i64 %15354, %15352
  %15356 = load i64, i64* %PC.i1118
  %15357 = add i64 %15356, 3
  store i64 %15357, i64* %PC.i1118
  %15358 = inttoptr i64 %15355 to i32*
  %15359 = load i32, i32* %15358
  %15360 = zext i32 %15359 to i64
  store i64 %15360, i64* %RDX.i1121, align 8
  store %struct.Memory* %loadMem_406da8, %struct.Memory** %MEMORY
  %loadMem_406dab = load %struct.Memory*, %struct.Memory** %MEMORY
  %15361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15362 = getelementptr inbounds %struct.GPR, %struct.GPR* %15361, i32 0, i32 33
  %15363 = getelementptr inbounds %struct.Reg, %struct.Reg* %15362, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %15363 to i64*
  %15364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15365 = getelementptr inbounds %struct.GPR, %struct.GPR* %15364, i32 0, i32 1
  %15366 = getelementptr inbounds %struct.Reg, %struct.Reg* %15365, i32 0, i32 0
  %RAX.i1116 = bitcast %union.anon* %15366 to i64*
  %15367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15368 = getelementptr inbounds %struct.GPR, %struct.GPR* %15367, i32 0, i32 15
  %15369 = getelementptr inbounds %struct.Reg, %struct.Reg* %15368, i32 0, i32 0
  %RBP.i1117 = bitcast %union.anon* %15369 to i64*
  %15370 = load i64, i64* %RBP.i1117
  %15371 = sub i64 %15370, 28
  %15372 = load i64, i64* %PC.i1115
  %15373 = add i64 %15372, 4
  store i64 %15373, i64* %PC.i1115
  %15374 = inttoptr i64 %15371 to i32*
  %15375 = load i32, i32* %15374
  %15376 = sext i32 %15375 to i64
  store i64 %15376, i64* %RAX.i1116, align 8
  store %struct.Memory* %loadMem_406dab, %struct.Memory** %MEMORY
  %loadMem_406daf = load %struct.Memory*, %struct.Memory** %MEMORY
  %15377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15378 = getelementptr inbounds %struct.GPR, %struct.GPR* %15377, i32 0, i32 33
  %15379 = getelementptr inbounds %struct.Reg, %struct.Reg* %15378, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %15379 to i64*
  %15380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15381 = getelementptr inbounds %struct.GPR, %struct.GPR* %15380, i32 0, i32 7
  %15382 = getelementptr inbounds %struct.Reg, %struct.Reg* %15381, i32 0, i32 0
  %EDX.i1112 = bitcast %union.anon* %15382 to i32*
  %15383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15384 = getelementptr inbounds %struct.GPR, %struct.GPR* %15383, i32 0, i32 1
  %15385 = getelementptr inbounds %struct.Reg, %struct.Reg* %15384, i32 0, i32 0
  %RAX.i1113 = bitcast %union.anon* %15385 to i64*
  %15386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15387 = getelementptr inbounds %struct.GPR, %struct.GPR* %15386, i32 0, i32 15
  %15388 = getelementptr inbounds %struct.Reg, %struct.Reg* %15387, i32 0, i32 0
  %RBP.i1114 = bitcast %union.anon* %15388 to i64*
  %15389 = load i64, i64* %RBP.i1114
  %15390 = load i64, i64* %RAX.i1113
  %15391 = mul i64 %15390, 4
  %15392 = add i64 %15389, -64
  %15393 = add i64 %15392, %15391
  %15394 = load i32, i32* %EDX.i1112
  %15395 = zext i32 %15394 to i64
  %15396 = load i64, i64* %PC.i1111
  %15397 = add i64 %15396, 4
  store i64 %15397, i64* %PC.i1111
  %15398 = inttoptr i64 %15393 to i32*
  store i32 %15394, i32* %15398
  store %struct.Memory* %loadMem_406daf, %struct.Memory** %MEMORY
  %loadMem_406db3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15400 = getelementptr inbounds %struct.GPR, %struct.GPR* %15399, i32 0, i32 33
  %15401 = getelementptr inbounds %struct.Reg, %struct.Reg* %15400, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %15401 to i64*
  %15402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15403 = getelementptr inbounds %struct.GPR, %struct.GPR* %15402, i32 0, i32 1
  %15404 = getelementptr inbounds %struct.Reg, %struct.Reg* %15403, i32 0, i32 0
  %RAX.i1109 = bitcast %union.anon* %15404 to i64*
  %15405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15406 = getelementptr inbounds %struct.GPR, %struct.GPR* %15405, i32 0, i32 15
  %15407 = getelementptr inbounds %struct.Reg, %struct.Reg* %15406, i32 0, i32 0
  %RBP.i1110 = bitcast %union.anon* %15407 to i64*
  %15408 = load i64, i64* %RBP.i1110
  %15409 = sub i64 %15408, 28
  %15410 = load i64, i64* %PC.i1108
  %15411 = add i64 %15410, 3
  store i64 %15411, i64* %PC.i1108
  %15412 = inttoptr i64 %15409 to i32*
  %15413 = load i32, i32* %15412
  %15414 = zext i32 %15413 to i64
  store i64 %15414, i64* %RAX.i1109, align 8
  store %struct.Memory* %loadMem_406db3, %struct.Memory** %MEMORY
  %loadMem_406db6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15416 = getelementptr inbounds %struct.GPR, %struct.GPR* %15415, i32 0, i32 33
  %15417 = getelementptr inbounds %struct.Reg, %struct.Reg* %15416, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %15417 to i64*
  %15418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15419 = getelementptr inbounds %struct.GPR, %struct.GPR* %15418, i32 0, i32 1
  %15420 = getelementptr inbounds %struct.Reg, %struct.Reg* %15419, i32 0, i32 0
  %RAX.i1107 = bitcast %union.anon* %15420 to i64*
  %15421 = load i64, i64* %RAX.i1107
  %15422 = load i64, i64* %PC.i1106
  %15423 = add i64 %15422, 3
  store i64 %15423, i64* %PC.i1106
  %15424 = trunc i64 %15421 to i32
  %15425 = add i32 1, %15424
  %15426 = zext i32 %15425 to i64
  store i64 %15426, i64* %RAX.i1107, align 8
  %15427 = icmp ult i32 %15425, %15424
  %15428 = icmp ult i32 %15425, 1
  %15429 = or i1 %15427, %15428
  %15430 = zext i1 %15429 to i8
  %15431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15430, i8* %15431, align 1
  %15432 = and i32 %15425, 255
  %15433 = call i32 @llvm.ctpop.i32(i32 %15432)
  %15434 = trunc i32 %15433 to i8
  %15435 = and i8 %15434, 1
  %15436 = xor i8 %15435, 1
  %15437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15436, i8* %15437, align 1
  %15438 = xor i64 1, %15421
  %15439 = trunc i64 %15438 to i32
  %15440 = xor i32 %15439, %15425
  %15441 = lshr i32 %15440, 4
  %15442 = trunc i32 %15441 to i8
  %15443 = and i8 %15442, 1
  %15444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15443, i8* %15444, align 1
  %15445 = icmp eq i32 %15425, 0
  %15446 = zext i1 %15445 to i8
  %15447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15446, i8* %15447, align 1
  %15448 = lshr i32 %15425, 31
  %15449 = trunc i32 %15448 to i8
  %15450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15449, i8* %15450, align 1
  %15451 = lshr i32 %15424, 31
  %15452 = xor i32 %15448, %15451
  %15453 = add i32 %15452, %15448
  %15454 = icmp eq i32 %15453, 2
  %15455 = zext i1 %15454 to i8
  %15456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15455, i8* %15456, align 1
  store %struct.Memory* %loadMem_406db6, %struct.Memory** %MEMORY
  %loadMem_406db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15458 = getelementptr inbounds %struct.GPR, %struct.GPR* %15457, i32 0, i32 33
  %15459 = getelementptr inbounds %struct.Reg, %struct.Reg* %15458, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %15459 to i64*
  %15460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15461 = getelementptr inbounds %struct.GPR, %struct.GPR* %15460, i32 0, i32 1
  %15462 = getelementptr inbounds %struct.Reg, %struct.Reg* %15461, i32 0, i32 0
  %EAX.i1104 = bitcast %union.anon* %15462 to i32*
  %15463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15464 = getelementptr inbounds %struct.GPR, %struct.GPR* %15463, i32 0, i32 15
  %15465 = getelementptr inbounds %struct.Reg, %struct.Reg* %15464, i32 0, i32 0
  %RBP.i1105 = bitcast %union.anon* %15465 to i64*
  %15466 = load i64, i64* %RBP.i1105
  %15467 = sub i64 %15466, 28
  %15468 = load i32, i32* %EAX.i1104
  %15469 = zext i32 %15468 to i64
  %15470 = load i64, i64* %PC.i1103
  %15471 = add i64 %15470, 3
  store i64 %15471, i64* %PC.i1103
  %15472 = inttoptr i64 %15467 to i32*
  store i32 %15468, i32* %15472
  store %struct.Memory* %loadMem_406db9, %struct.Memory** %MEMORY
  %loadMem_406dbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15474 = getelementptr inbounds %struct.GPR, %struct.GPR* %15473, i32 0, i32 33
  %15475 = getelementptr inbounds %struct.Reg, %struct.Reg* %15474, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %15475 to i64*
  %15476 = load i64, i64* %PC.i1102
  %15477 = add i64 %15476, -59
  %15478 = load i64, i64* %PC.i1102
  %15479 = add i64 %15478, 5
  store i64 %15479, i64* %PC.i1102
  %15480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15477, i64* %15480, align 8
  store %struct.Memory* %loadMem_406dbc, %struct.Memory** %MEMORY
  br label %block_.L_406d81

block_.L_406dc1:                                  ; preds = %block_.L_406d81
  %loadMem_406dc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15482 = getelementptr inbounds %struct.GPR, %struct.GPR* %15481, i32 0, i32 33
  %15483 = getelementptr inbounds %struct.Reg, %struct.Reg* %15482, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %15483 to i64*
  %15484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15485 = getelementptr inbounds %struct.GPR, %struct.GPR* %15484, i32 0, i32 1
  %15486 = getelementptr inbounds %struct.Reg, %struct.Reg* %15485, i32 0, i32 0
  %RAX.i1100 = bitcast %union.anon* %15486 to i64*
  %15487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15488 = getelementptr inbounds %struct.GPR, %struct.GPR* %15487, i32 0, i32 15
  %15489 = getelementptr inbounds %struct.Reg, %struct.Reg* %15488, i32 0, i32 0
  %RBP.i1101 = bitcast %union.anon* %15489 to i64*
  %15490 = load i64, i64* %RBP.i1101
  %15491 = sub i64 %15490, 64
  %15492 = load i64, i64* %PC.i1099
  %15493 = add i64 %15492, 3
  store i64 %15493, i64* %PC.i1099
  %15494 = inttoptr i64 %15491 to i32*
  %15495 = load i32, i32* %15494
  %15496 = zext i32 %15495 to i64
  store i64 %15496, i64* %RAX.i1100, align 8
  store %struct.Memory* %loadMem_406dc1, %struct.Memory** %MEMORY
  %loadMem_406dc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15498 = getelementptr inbounds %struct.GPR, %struct.GPR* %15497, i32 0, i32 33
  %15499 = getelementptr inbounds %struct.Reg, %struct.Reg* %15498, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %15499 to i64*
  %15500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15501 = getelementptr inbounds %struct.GPR, %struct.GPR* %15500, i32 0, i32 1
  %15502 = getelementptr inbounds %struct.Reg, %struct.Reg* %15501, i32 0, i32 0
  %RAX.i1097 = bitcast %union.anon* %15502 to i64*
  %15503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15504 = getelementptr inbounds %struct.GPR, %struct.GPR* %15503, i32 0, i32 15
  %15505 = getelementptr inbounds %struct.Reg, %struct.Reg* %15504, i32 0, i32 0
  %RBP.i1098 = bitcast %union.anon* %15505 to i64*
  %15506 = load i64, i64* %RAX.i1097
  %15507 = load i64, i64* %RBP.i1098
  %15508 = sub i64 %15507, 56
  %15509 = load i64, i64* %PC.i1096
  %15510 = add i64 %15509, 3
  store i64 %15510, i64* %PC.i1096
  %15511 = trunc i64 %15506 to i32
  %15512 = inttoptr i64 %15508 to i32*
  %15513 = load i32, i32* %15512
  %15514 = add i32 %15513, %15511
  %15515 = zext i32 %15514 to i64
  store i64 %15515, i64* %RAX.i1097, align 8
  %15516 = icmp ult i32 %15514, %15511
  %15517 = icmp ult i32 %15514, %15513
  %15518 = or i1 %15516, %15517
  %15519 = zext i1 %15518 to i8
  %15520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15519, i8* %15520, align 1
  %15521 = and i32 %15514, 255
  %15522 = call i32 @llvm.ctpop.i32(i32 %15521)
  %15523 = trunc i32 %15522 to i8
  %15524 = and i8 %15523, 1
  %15525 = xor i8 %15524, 1
  %15526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15525, i8* %15526, align 1
  %15527 = xor i32 %15513, %15511
  %15528 = xor i32 %15527, %15514
  %15529 = lshr i32 %15528, 4
  %15530 = trunc i32 %15529 to i8
  %15531 = and i8 %15530, 1
  %15532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15531, i8* %15532, align 1
  %15533 = icmp eq i32 %15514, 0
  %15534 = zext i1 %15533 to i8
  %15535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15534, i8* %15535, align 1
  %15536 = lshr i32 %15514, 31
  %15537 = trunc i32 %15536 to i8
  %15538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15537, i8* %15538, align 1
  %15539 = lshr i32 %15511, 31
  %15540 = lshr i32 %15513, 31
  %15541 = xor i32 %15536, %15539
  %15542 = xor i32 %15536, %15540
  %15543 = add i32 %15541, %15542
  %15544 = icmp eq i32 %15543, 2
  %15545 = zext i1 %15544 to i8
  %15546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15545, i8* %15546, align 1
  store %struct.Memory* %loadMem_406dc4, %struct.Memory** %MEMORY
  %loadMem_406dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15548 = getelementptr inbounds %struct.GPR, %struct.GPR* %15547, i32 0, i32 33
  %15549 = getelementptr inbounds %struct.Reg, %struct.Reg* %15548, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %15549 to i64*
  %15550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15551 = getelementptr inbounds %struct.GPR, %struct.GPR* %15550, i32 0, i32 1
  %15552 = getelementptr inbounds %struct.Reg, %struct.Reg* %15551, i32 0, i32 0
  %EAX.i1094 = bitcast %union.anon* %15552 to i32*
  %15553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15554 = getelementptr inbounds %struct.GPR, %struct.GPR* %15553, i32 0, i32 15
  %15555 = getelementptr inbounds %struct.Reg, %struct.Reg* %15554, i32 0, i32 0
  %RBP.i1095 = bitcast %union.anon* %15555 to i64*
  %15556 = load i64, i64* %RBP.i1095
  %15557 = sub i64 %15556, 80
  %15558 = load i32, i32* %EAX.i1094
  %15559 = zext i32 %15558 to i64
  %15560 = load i64, i64* %PC.i1093
  %15561 = add i64 %15560, 3
  store i64 %15561, i64* %PC.i1093
  %15562 = inttoptr i64 %15557 to i32*
  store i32 %15558, i32* %15562
  store %struct.Memory* %loadMem_406dc7, %struct.Memory** %MEMORY
  %loadMem_406dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %15563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15564 = getelementptr inbounds %struct.GPR, %struct.GPR* %15563, i32 0, i32 33
  %15565 = getelementptr inbounds %struct.Reg, %struct.Reg* %15564, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %15565 to i64*
  %15566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15567 = getelementptr inbounds %struct.GPR, %struct.GPR* %15566, i32 0, i32 1
  %15568 = getelementptr inbounds %struct.Reg, %struct.Reg* %15567, i32 0, i32 0
  %RAX.i1091 = bitcast %union.anon* %15568 to i64*
  %15569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15570 = getelementptr inbounds %struct.GPR, %struct.GPR* %15569, i32 0, i32 15
  %15571 = getelementptr inbounds %struct.Reg, %struct.Reg* %15570, i32 0, i32 0
  %RBP.i1092 = bitcast %union.anon* %15571 to i64*
  %15572 = load i64, i64* %RBP.i1092
  %15573 = sub i64 %15572, 64
  %15574 = load i64, i64* %PC.i1090
  %15575 = add i64 %15574, 3
  store i64 %15575, i64* %PC.i1090
  %15576 = inttoptr i64 %15573 to i32*
  %15577 = load i32, i32* %15576
  %15578 = zext i32 %15577 to i64
  store i64 %15578, i64* %RAX.i1091, align 8
  store %struct.Memory* %loadMem_406dca, %struct.Memory** %MEMORY
  %loadMem_406dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %15579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15580 = getelementptr inbounds %struct.GPR, %struct.GPR* %15579, i32 0, i32 33
  %15581 = getelementptr inbounds %struct.Reg, %struct.Reg* %15580, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %15581 to i64*
  %15582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15583 = getelementptr inbounds %struct.GPR, %struct.GPR* %15582, i32 0, i32 1
  %15584 = getelementptr inbounds %struct.Reg, %struct.Reg* %15583, i32 0, i32 0
  %RAX.i1088 = bitcast %union.anon* %15584 to i64*
  %15585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15586 = getelementptr inbounds %struct.GPR, %struct.GPR* %15585, i32 0, i32 15
  %15587 = getelementptr inbounds %struct.Reg, %struct.Reg* %15586, i32 0, i32 0
  %RBP.i1089 = bitcast %union.anon* %15587 to i64*
  %15588 = load i64, i64* %RAX.i1088
  %15589 = load i64, i64* %RBP.i1089
  %15590 = sub i64 %15589, 56
  %15591 = load i64, i64* %PC.i1087
  %15592 = add i64 %15591, 3
  store i64 %15592, i64* %PC.i1087
  %15593 = trunc i64 %15588 to i32
  %15594 = inttoptr i64 %15590 to i32*
  %15595 = load i32, i32* %15594
  %15596 = sub i32 %15593, %15595
  %15597 = zext i32 %15596 to i64
  store i64 %15597, i64* %RAX.i1088, align 8
  %15598 = icmp ult i32 %15593, %15595
  %15599 = zext i1 %15598 to i8
  %15600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15599, i8* %15600, align 1
  %15601 = and i32 %15596, 255
  %15602 = call i32 @llvm.ctpop.i32(i32 %15601)
  %15603 = trunc i32 %15602 to i8
  %15604 = and i8 %15603, 1
  %15605 = xor i8 %15604, 1
  %15606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15605, i8* %15606, align 1
  %15607 = xor i32 %15595, %15593
  %15608 = xor i32 %15607, %15596
  %15609 = lshr i32 %15608, 4
  %15610 = trunc i32 %15609 to i8
  %15611 = and i8 %15610, 1
  %15612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15611, i8* %15612, align 1
  %15613 = icmp eq i32 %15596, 0
  %15614 = zext i1 %15613 to i8
  %15615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15614, i8* %15615, align 1
  %15616 = lshr i32 %15596, 31
  %15617 = trunc i32 %15616 to i8
  %15618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15617, i8* %15618, align 1
  %15619 = lshr i32 %15593, 31
  %15620 = lshr i32 %15595, 31
  %15621 = xor i32 %15620, %15619
  %15622 = xor i32 %15616, %15619
  %15623 = add i32 %15622, %15621
  %15624 = icmp eq i32 %15623, 2
  %15625 = zext i1 %15624 to i8
  %15626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15625, i8* %15626, align 1
  store %struct.Memory* %loadMem_406dcd, %struct.Memory** %MEMORY
  %loadMem_406dd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15628 = getelementptr inbounds %struct.GPR, %struct.GPR* %15627, i32 0, i32 33
  %15629 = getelementptr inbounds %struct.Reg, %struct.Reg* %15628, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %15629 to i64*
  %15630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15631 = getelementptr inbounds %struct.GPR, %struct.GPR* %15630, i32 0, i32 1
  %15632 = getelementptr inbounds %struct.Reg, %struct.Reg* %15631, i32 0, i32 0
  %EAX.i1085 = bitcast %union.anon* %15632 to i32*
  %15633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15634 = getelementptr inbounds %struct.GPR, %struct.GPR* %15633, i32 0, i32 15
  %15635 = getelementptr inbounds %struct.Reg, %struct.Reg* %15634, i32 0, i32 0
  %RBP.i1086 = bitcast %union.anon* %15635 to i64*
  %15636 = load i64, i64* %RBP.i1086
  %15637 = sub i64 %15636, 76
  %15638 = load i32, i32* %EAX.i1085
  %15639 = zext i32 %15638 to i64
  %15640 = load i64, i64* %PC.i1084
  %15641 = add i64 %15640, 3
  store i64 %15641, i64* %PC.i1084
  %15642 = inttoptr i64 %15637 to i32*
  store i32 %15638, i32* %15642
  store %struct.Memory* %loadMem_406dd0, %struct.Memory** %MEMORY
  %loadMem_406dd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15644 = getelementptr inbounds %struct.GPR, %struct.GPR* %15643, i32 0, i32 33
  %15645 = getelementptr inbounds %struct.Reg, %struct.Reg* %15644, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %15645 to i64*
  %15646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15647 = getelementptr inbounds %struct.GPR, %struct.GPR* %15646, i32 0, i32 1
  %15648 = getelementptr inbounds %struct.Reg, %struct.Reg* %15647, i32 0, i32 0
  %RAX.i1082 = bitcast %union.anon* %15648 to i64*
  %15649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15650 = getelementptr inbounds %struct.GPR, %struct.GPR* %15649, i32 0, i32 15
  %15651 = getelementptr inbounds %struct.Reg, %struct.Reg* %15650, i32 0, i32 0
  %RBP.i1083 = bitcast %union.anon* %15651 to i64*
  %15652 = load i64, i64* %RBP.i1083
  %15653 = sub i64 %15652, 60
  %15654 = load i64, i64* %PC.i1081
  %15655 = add i64 %15654, 3
  store i64 %15655, i64* %PC.i1081
  %15656 = inttoptr i64 %15653 to i32*
  %15657 = load i32, i32* %15656
  %15658 = zext i32 %15657 to i64
  store i64 %15658, i64* %RAX.i1082, align 8
  store %struct.Memory* %loadMem_406dd3, %struct.Memory** %MEMORY
  %loadMem_406dd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15660 = getelementptr inbounds %struct.GPR, %struct.GPR* %15659, i32 0, i32 33
  %15661 = getelementptr inbounds %struct.Reg, %struct.Reg* %15660, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %15661 to i64*
  %15662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15663 = getelementptr inbounds %struct.GPR, %struct.GPR* %15662, i32 0, i32 1
  %15664 = getelementptr inbounds %struct.Reg, %struct.Reg* %15663, i32 0, i32 0
  %RAX.i1080 = bitcast %union.anon* %15664 to i64*
  %15665 = load i64, i64* %RAX.i1080
  %15666 = load i64, i64* %PC.i1079
  %15667 = add i64 %15666, 2
  store i64 %15667, i64* %PC.i1079
  %15668 = shl i64 %15665, 32
  %15669 = ashr i64 %15668, 33
  %15670 = trunc i64 %15665 to i8
  %15671 = and i8 %15670, 1
  %15672 = trunc i64 %15669 to i32
  %15673 = and i64 %15669, 4294967295
  store i64 %15673, i64* %RAX.i1080, align 8
  %15674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15671, i8* %15674, align 1
  %15675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15676 = and i32 %15672, 255
  %15677 = call i32 @llvm.ctpop.i32(i32 %15676)
  %15678 = trunc i32 %15677 to i8
  %15679 = and i8 %15678, 1
  %15680 = xor i8 %15679, 1
  store i8 %15680, i8* %15675, align 1
  %15681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15681, align 1
  %15682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15683 = icmp eq i32 %15672, 0
  %15684 = zext i1 %15683 to i8
  store i8 %15684, i8* %15682, align 1
  %15685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15686 = lshr i32 %15672, 31
  %15687 = trunc i32 %15686 to i8
  store i8 %15687, i8* %15685, align 1
  %15688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15688, align 1
  store %struct.Memory* %loadMem_406dd6, %struct.Memory** %MEMORY
  %loadMem_406dd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15690 = getelementptr inbounds %struct.GPR, %struct.GPR* %15689, i32 0, i32 33
  %15691 = getelementptr inbounds %struct.Reg, %struct.Reg* %15690, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %15691 to i64*
  %15692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15693 = getelementptr inbounds %struct.GPR, %struct.GPR* %15692, i32 0, i32 1
  %15694 = getelementptr inbounds %struct.Reg, %struct.Reg* %15693, i32 0, i32 0
  %RAX.i1077 = bitcast %union.anon* %15694 to i64*
  %15695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15696 = getelementptr inbounds %struct.GPR, %struct.GPR* %15695, i32 0, i32 15
  %15697 = getelementptr inbounds %struct.Reg, %struct.Reg* %15696, i32 0, i32 0
  %RBP.i1078 = bitcast %union.anon* %15697 to i64*
  %15698 = load i64, i64* %RAX.i1077
  %15699 = load i64, i64* %RBP.i1078
  %15700 = sub i64 %15699, 52
  %15701 = load i64, i64* %PC.i1076
  %15702 = add i64 %15701, 3
  store i64 %15702, i64* %PC.i1076
  %15703 = trunc i64 %15698 to i32
  %15704 = inttoptr i64 %15700 to i32*
  %15705 = load i32, i32* %15704
  %15706 = sub i32 %15703, %15705
  %15707 = zext i32 %15706 to i64
  store i64 %15707, i64* %RAX.i1077, align 8
  %15708 = icmp ult i32 %15703, %15705
  %15709 = zext i1 %15708 to i8
  %15710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15709, i8* %15710, align 1
  %15711 = and i32 %15706, 255
  %15712 = call i32 @llvm.ctpop.i32(i32 %15711)
  %15713 = trunc i32 %15712 to i8
  %15714 = and i8 %15713, 1
  %15715 = xor i8 %15714, 1
  %15716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15715, i8* %15716, align 1
  %15717 = xor i32 %15705, %15703
  %15718 = xor i32 %15717, %15706
  %15719 = lshr i32 %15718, 4
  %15720 = trunc i32 %15719 to i8
  %15721 = and i8 %15720, 1
  %15722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15721, i8* %15722, align 1
  %15723 = icmp eq i32 %15706, 0
  %15724 = zext i1 %15723 to i8
  %15725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15724, i8* %15725, align 1
  %15726 = lshr i32 %15706, 31
  %15727 = trunc i32 %15726 to i8
  %15728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15727, i8* %15728, align 1
  %15729 = lshr i32 %15703, 31
  %15730 = lshr i32 %15705, 31
  %15731 = xor i32 %15730, %15729
  %15732 = xor i32 %15726, %15729
  %15733 = add i32 %15732, %15731
  %15734 = icmp eq i32 %15733, 2
  %15735 = zext i1 %15734 to i8
  %15736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15735, i8* %15736, align 1
  store %struct.Memory* %loadMem_406dd9, %struct.Memory** %MEMORY
  %loadMem_406ddc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15738 = getelementptr inbounds %struct.GPR, %struct.GPR* %15737, i32 0, i32 33
  %15739 = getelementptr inbounds %struct.Reg, %struct.Reg* %15738, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %15739 to i64*
  %15740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15741 = getelementptr inbounds %struct.GPR, %struct.GPR* %15740, i32 0, i32 1
  %15742 = getelementptr inbounds %struct.Reg, %struct.Reg* %15741, i32 0, i32 0
  %EAX.i1074 = bitcast %union.anon* %15742 to i32*
  %15743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15744 = getelementptr inbounds %struct.GPR, %struct.GPR* %15743, i32 0, i32 15
  %15745 = getelementptr inbounds %struct.Reg, %struct.Reg* %15744, i32 0, i32 0
  %RBP.i1075 = bitcast %union.anon* %15745 to i64*
  %15746 = load i64, i64* %RBP.i1075
  %15747 = sub i64 %15746, 72
  %15748 = load i32, i32* %EAX.i1074
  %15749 = zext i32 %15748 to i64
  %15750 = load i64, i64* %PC.i1073
  %15751 = add i64 %15750, 3
  store i64 %15751, i64* %PC.i1073
  %15752 = inttoptr i64 %15747 to i32*
  store i32 %15748, i32* %15752
  store %struct.Memory* %loadMem_406ddc, %struct.Memory** %MEMORY
  %loadMem_406ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %15753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15754 = getelementptr inbounds %struct.GPR, %struct.GPR* %15753, i32 0, i32 33
  %15755 = getelementptr inbounds %struct.Reg, %struct.Reg* %15754, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %15755 to i64*
  %15756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15757 = getelementptr inbounds %struct.GPR, %struct.GPR* %15756, i32 0, i32 1
  %15758 = getelementptr inbounds %struct.Reg, %struct.Reg* %15757, i32 0, i32 0
  %RAX.i1071 = bitcast %union.anon* %15758 to i64*
  %15759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15760 = getelementptr inbounds %struct.GPR, %struct.GPR* %15759, i32 0, i32 15
  %15761 = getelementptr inbounds %struct.Reg, %struct.Reg* %15760, i32 0, i32 0
  %RBP.i1072 = bitcast %union.anon* %15761 to i64*
  %15762 = load i64, i64* %RBP.i1072
  %15763 = sub i64 %15762, 60
  %15764 = load i64, i64* %PC.i1070
  %15765 = add i64 %15764, 3
  store i64 %15765, i64* %PC.i1070
  %15766 = inttoptr i64 %15763 to i32*
  %15767 = load i32, i32* %15766
  %15768 = zext i32 %15767 to i64
  store i64 %15768, i64* %RAX.i1071, align 8
  store %struct.Memory* %loadMem_406ddf, %struct.Memory** %MEMORY
  %loadMem_406de2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15770 = getelementptr inbounds %struct.GPR, %struct.GPR* %15769, i32 0, i32 33
  %15771 = getelementptr inbounds %struct.Reg, %struct.Reg* %15770, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %15771 to i64*
  %15772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15773 = getelementptr inbounds %struct.GPR, %struct.GPR* %15772, i32 0, i32 5
  %15774 = getelementptr inbounds %struct.Reg, %struct.Reg* %15773, i32 0, i32 0
  %RCX.i1068 = bitcast %union.anon* %15774 to i64*
  %15775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15776 = getelementptr inbounds %struct.GPR, %struct.GPR* %15775, i32 0, i32 15
  %15777 = getelementptr inbounds %struct.Reg, %struct.Reg* %15776, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %15777 to i64*
  %15778 = load i64, i64* %RBP.i1069
  %15779 = sub i64 %15778, 52
  %15780 = load i64, i64* %PC.i1067
  %15781 = add i64 %15780, 3
  store i64 %15781, i64* %PC.i1067
  %15782 = inttoptr i64 %15779 to i32*
  %15783 = load i32, i32* %15782
  %15784 = zext i32 %15783 to i64
  store i64 %15784, i64* %RCX.i1068, align 8
  store %struct.Memory* %loadMem_406de2, %struct.Memory** %MEMORY
  %loadMem_406de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15786 = getelementptr inbounds %struct.GPR, %struct.GPR* %15785, i32 0, i32 33
  %15787 = getelementptr inbounds %struct.Reg, %struct.Reg* %15786, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %15787 to i64*
  %15788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15789 = getelementptr inbounds %struct.GPR, %struct.GPR* %15788, i32 0, i32 5
  %15790 = getelementptr inbounds %struct.Reg, %struct.Reg* %15789, i32 0, i32 0
  %RCX.i1066 = bitcast %union.anon* %15790 to i64*
  %15791 = load i64, i64* %RCX.i1066
  %15792 = load i64, i64* %PC.i1065
  %15793 = add i64 %15792, 2
  store i64 %15793, i64* %PC.i1065
  %15794 = shl i64 %15791, 32
  %15795 = ashr i64 %15794, 33
  %15796 = trunc i64 %15791 to i8
  %15797 = and i8 %15796, 1
  %15798 = trunc i64 %15795 to i32
  %15799 = and i64 %15795, 4294967295
  store i64 %15799, i64* %RCX.i1066, align 8
  %15800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15797, i8* %15800, align 1
  %15801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15802 = and i32 %15798, 255
  %15803 = call i32 @llvm.ctpop.i32(i32 %15802)
  %15804 = trunc i32 %15803 to i8
  %15805 = and i8 %15804, 1
  %15806 = xor i8 %15805, 1
  store i8 %15806, i8* %15801, align 1
  %15807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15807, align 1
  %15808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15809 = icmp eq i32 %15798, 0
  %15810 = zext i1 %15809 to i8
  store i8 %15810, i8* %15808, align 1
  %15811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15812 = lshr i32 %15798, 31
  %15813 = trunc i32 %15812 to i8
  store i8 %15813, i8* %15811, align 1
  %15814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15814, align 1
  store %struct.Memory* %loadMem_406de5, %struct.Memory** %MEMORY
  %loadMem_406de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15816 = getelementptr inbounds %struct.GPR, %struct.GPR* %15815, i32 0, i32 33
  %15817 = getelementptr inbounds %struct.Reg, %struct.Reg* %15816, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %15817 to i64*
  %15818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15819 = getelementptr inbounds %struct.GPR, %struct.GPR* %15818, i32 0, i32 5
  %15820 = getelementptr inbounds %struct.Reg, %struct.Reg* %15819, i32 0, i32 0
  %ECX.i1063 = bitcast %union.anon* %15820 to i32*
  %15821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15822 = getelementptr inbounds %struct.GPR, %struct.GPR* %15821, i32 0, i32 1
  %15823 = getelementptr inbounds %struct.Reg, %struct.Reg* %15822, i32 0, i32 0
  %RAX.i1064 = bitcast %union.anon* %15823 to i64*
  %15824 = load i64, i64* %RAX.i1064
  %15825 = load i32, i32* %ECX.i1063
  %15826 = zext i32 %15825 to i64
  %15827 = load i64, i64* %PC.i1062
  %15828 = add i64 %15827, 2
  store i64 %15828, i64* %PC.i1062
  %15829 = trunc i64 %15824 to i32
  %15830 = add i32 %15825, %15829
  %15831 = zext i32 %15830 to i64
  store i64 %15831, i64* %RAX.i1064, align 8
  %15832 = icmp ult i32 %15830, %15829
  %15833 = icmp ult i32 %15830, %15825
  %15834 = or i1 %15832, %15833
  %15835 = zext i1 %15834 to i8
  %15836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15835, i8* %15836, align 1
  %15837 = and i32 %15830, 255
  %15838 = call i32 @llvm.ctpop.i32(i32 %15837)
  %15839 = trunc i32 %15838 to i8
  %15840 = and i8 %15839, 1
  %15841 = xor i8 %15840, 1
  %15842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15841, i8* %15842, align 1
  %15843 = xor i64 %15826, %15824
  %15844 = trunc i64 %15843 to i32
  %15845 = xor i32 %15844, %15830
  %15846 = lshr i32 %15845, 4
  %15847 = trunc i32 %15846 to i8
  %15848 = and i8 %15847, 1
  %15849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15848, i8* %15849, align 1
  %15850 = icmp eq i32 %15830, 0
  %15851 = zext i1 %15850 to i8
  %15852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15851, i8* %15852, align 1
  %15853 = lshr i32 %15830, 31
  %15854 = trunc i32 %15853 to i8
  %15855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15854, i8* %15855, align 1
  %15856 = lshr i32 %15829, 31
  %15857 = lshr i32 %15825, 31
  %15858 = xor i32 %15853, %15856
  %15859 = xor i32 %15853, %15857
  %15860 = add i32 %15858, %15859
  %15861 = icmp eq i32 %15860, 2
  %15862 = zext i1 %15861 to i8
  %15863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15862, i8* %15863, align 1
  store %struct.Memory* %loadMem_406de8, %struct.Memory** %MEMORY
  %loadMem_406dea = load %struct.Memory*, %struct.Memory** %MEMORY
  %15864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15865 = getelementptr inbounds %struct.GPR, %struct.GPR* %15864, i32 0, i32 33
  %15866 = getelementptr inbounds %struct.Reg, %struct.Reg* %15865, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %15866 to i64*
  %15867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15868 = getelementptr inbounds %struct.GPR, %struct.GPR* %15867, i32 0, i32 1
  %15869 = getelementptr inbounds %struct.Reg, %struct.Reg* %15868, i32 0, i32 0
  %EAX.i1060 = bitcast %union.anon* %15869 to i32*
  %15870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15871 = getelementptr inbounds %struct.GPR, %struct.GPR* %15870, i32 0, i32 15
  %15872 = getelementptr inbounds %struct.Reg, %struct.Reg* %15871, i32 0, i32 0
  %RBP.i1061 = bitcast %union.anon* %15872 to i64*
  %15873 = load i64, i64* %RBP.i1061
  %15874 = sub i64 %15873, 68
  %15875 = load i32, i32* %EAX.i1060
  %15876 = zext i32 %15875 to i64
  %15877 = load i64, i64* %PC.i1059
  %15878 = add i64 %15877, 3
  store i64 %15878, i64* %PC.i1059
  %15879 = inttoptr i64 %15874 to i32*
  store i32 %15875, i32* %15879
  store %struct.Memory* %loadMem_406dea, %struct.Memory** %MEMORY
  %loadMem_406ded = load %struct.Memory*, %struct.Memory** %MEMORY
  %15880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15881 = getelementptr inbounds %struct.GPR, %struct.GPR* %15880, i32 0, i32 33
  %15882 = getelementptr inbounds %struct.Reg, %struct.Reg* %15881, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %15882 to i64*
  %15883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15884 = getelementptr inbounds %struct.GPR, %struct.GPR* %15883, i32 0, i32 15
  %15885 = getelementptr inbounds %struct.Reg, %struct.Reg* %15884, i32 0, i32 0
  %RBP.i1058 = bitcast %union.anon* %15885 to i64*
  %15886 = load i64, i64* %RBP.i1058
  %15887 = sub i64 %15886, 28
  %15888 = load i64, i64* %PC.i1057
  %15889 = add i64 %15888, 7
  store i64 %15889, i64* %PC.i1057
  %15890 = inttoptr i64 %15887 to i32*
  store i32 0, i32* %15890
  store %struct.Memory* %loadMem_406ded, %struct.Memory** %MEMORY
  br label %block_.L_406df4

block_.L_406df4:                                  ; preds = %block_.L_40731b, %block_.L_406dc1
  %loadMem_406df4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15892 = getelementptr inbounds %struct.GPR, %struct.GPR* %15891, i32 0, i32 33
  %15893 = getelementptr inbounds %struct.Reg, %struct.Reg* %15892, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %15893 to i64*
  %15894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15895 = getelementptr inbounds %struct.GPR, %struct.GPR* %15894, i32 0, i32 15
  %15896 = getelementptr inbounds %struct.Reg, %struct.Reg* %15895, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %15896 to i64*
  %15897 = load i64, i64* %RBP.i1056
  %15898 = sub i64 %15897, 28
  %15899 = load i64, i64* %PC.i1055
  %15900 = add i64 %15899, 4
  store i64 %15900, i64* %PC.i1055
  %15901 = inttoptr i64 %15898 to i32*
  %15902 = load i32, i32* %15901
  %15903 = sub i32 %15902, 2
  %15904 = icmp ult i32 %15902, 2
  %15905 = zext i1 %15904 to i8
  %15906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15905, i8* %15906, align 1
  %15907 = and i32 %15903, 255
  %15908 = call i32 @llvm.ctpop.i32(i32 %15907)
  %15909 = trunc i32 %15908 to i8
  %15910 = and i8 %15909, 1
  %15911 = xor i8 %15910, 1
  %15912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15911, i8* %15912, align 1
  %15913 = xor i32 %15902, 2
  %15914 = xor i32 %15913, %15903
  %15915 = lshr i32 %15914, 4
  %15916 = trunc i32 %15915 to i8
  %15917 = and i8 %15916, 1
  %15918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15917, i8* %15918, align 1
  %15919 = icmp eq i32 %15903, 0
  %15920 = zext i1 %15919 to i8
  %15921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15920, i8* %15921, align 1
  %15922 = lshr i32 %15903, 31
  %15923 = trunc i32 %15922 to i8
  %15924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15923, i8* %15924, align 1
  %15925 = lshr i32 %15902, 31
  %15926 = xor i32 %15922, %15925
  %15927 = add i32 %15926, %15925
  %15928 = icmp eq i32 %15927, 2
  %15929 = zext i1 %15928 to i8
  %15930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15929, i8* %15930, align 1
  store %struct.Memory* %loadMem_406df4, %struct.Memory** %MEMORY
  %loadMem_406df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15932 = getelementptr inbounds %struct.GPR, %struct.GPR* %15931, i32 0, i32 33
  %15933 = getelementptr inbounds %struct.Reg, %struct.Reg* %15932, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %15933 to i64*
  %15934 = load i64, i64* %PC.i1054
  %15935 = add i64 %15934, 1329
  %15936 = load i64, i64* %PC.i1054
  %15937 = add i64 %15936, 6
  %15938 = load i64, i64* %PC.i1054
  %15939 = add i64 %15938, 6
  store i64 %15939, i64* %PC.i1054
  %15940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15941 = load i8, i8* %15940, align 1
  %15942 = icmp ne i8 %15941, 0
  %15943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15944 = load i8, i8* %15943, align 1
  %15945 = icmp ne i8 %15944, 0
  %15946 = xor i1 %15942, %15945
  %15947 = xor i1 %15946, true
  %15948 = zext i1 %15947 to i8
  store i8 %15948, i8* %BRANCH_TAKEN, align 1
  %15949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15950 = select i1 %15946, i64 %15937, i64 %15935
  store i64 %15950, i64* %15949, align 8
  store %struct.Memory* %loadMem_406df8, %struct.Memory** %MEMORY
  %loadBr_406df8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406df8 = icmp eq i8 %loadBr_406df8, 1
  br i1 %cmpBr_406df8, label %block_.L_407329, label %block_406dfe

block_406dfe:                                     ; preds = %block_.L_406df4
  %loadMem_406dfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %15951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15952 = getelementptr inbounds %struct.GPR, %struct.GPR* %15951, i32 0, i32 33
  %15953 = getelementptr inbounds %struct.Reg, %struct.Reg* %15952, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %15953 to i64*
  %15954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15955 = getelementptr inbounds %struct.GPR, %struct.GPR* %15954, i32 0, i32 1
  %15956 = getelementptr inbounds %struct.Reg, %struct.Reg* %15955, i32 0, i32 0
  %RAX.i1053 = bitcast %union.anon* %15956 to i64*
  %15957 = load i64, i64* %PC.i1052
  %15958 = add i64 %15957, 5
  store i64 %15958, i64* %PC.i1052
  store i64 3, i64* %RAX.i1053, align 8
  store %struct.Memory* %loadMem_406dfe, %struct.Memory** %MEMORY
  %loadMem_406e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15960 = getelementptr inbounds %struct.GPR, %struct.GPR* %15959, i32 0, i32 33
  %15961 = getelementptr inbounds %struct.Reg, %struct.Reg* %15960, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %15961 to i64*
  %15962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15963 = getelementptr inbounds %struct.GPR, %struct.GPR* %15962, i32 0, i32 1
  %15964 = getelementptr inbounds %struct.Reg, %struct.Reg* %15963, i32 0, i32 0
  %RAX.i1050 = bitcast %union.anon* %15964 to i64*
  %15965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15966 = getelementptr inbounds %struct.GPR, %struct.GPR* %15965, i32 0, i32 15
  %15967 = getelementptr inbounds %struct.Reg, %struct.Reg* %15966, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %15967 to i64*
  %15968 = load i64, i64* %RAX.i1050
  %15969 = load i64, i64* %RBP.i1051
  %15970 = sub i64 %15969, 28
  %15971 = load i64, i64* %PC.i1049
  %15972 = add i64 %15971, 3
  store i64 %15972, i64* %PC.i1049
  %15973 = trunc i64 %15968 to i32
  %15974 = inttoptr i64 %15970 to i32*
  %15975 = load i32, i32* %15974
  %15976 = sub i32 %15973, %15975
  %15977 = zext i32 %15976 to i64
  store i64 %15977, i64* %RAX.i1050, align 8
  %15978 = icmp ult i32 %15973, %15975
  %15979 = zext i1 %15978 to i8
  %15980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15979, i8* %15980, align 1
  %15981 = and i32 %15976, 255
  %15982 = call i32 @llvm.ctpop.i32(i32 %15981)
  %15983 = trunc i32 %15982 to i8
  %15984 = and i8 %15983, 1
  %15985 = xor i8 %15984, 1
  %15986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15985, i8* %15986, align 1
  %15987 = xor i32 %15975, %15973
  %15988 = xor i32 %15987, %15976
  %15989 = lshr i32 %15988, 4
  %15990 = trunc i32 %15989 to i8
  %15991 = and i8 %15990, 1
  %15992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15991, i8* %15992, align 1
  %15993 = icmp eq i32 %15976, 0
  %15994 = zext i1 %15993 to i8
  %15995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15994, i8* %15995, align 1
  %15996 = lshr i32 %15976, 31
  %15997 = trunc i32 %15996 to i8
  %15998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15997, i8* %15998, align 1
  %15999 = lshr i32 %15973, 31
  %16000 = lshr i32 %15975, 31
  %16001 = xor i32 %16000, %15999
  %16002 = xor i32 %15996, %15999
  %16003 = add i32 %16002, %16001
  %16004 = icmp eq i32 %16003, 2
  %16005 = zext i1 %16004 to i8
  %16006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16005, i8* %16006, align 1
  store %struct.Memory* %loadMem_406e03, %struct.Memory** %MEMORY
  %loadMem_406e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16008 = getelementptr inbounds %struct.GPR, %struct.GPR* %16007, i32 0, i32 33
  %16009 = getelementptr inbounds %struct.Reg, %struct.Reg* %16008, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %16009 to i64*
  %16010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16011 = getelementptr inbounds %struct.GPR, %struct.GPR* %16010, i32 0, i32 1
  %16012 = getelementptr inbounds %struct.Reg, %struct.Reg* %16011, i32 0, i32 0
  %EAX.i1047 = bitcast %union.anon* %16012 to i32*
  %16013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16014 = getelementptr inbounds %struct.GPR, %struct.GPR* %16013, i32 0, i32 15
  %16015 = getelementptr inbounds %struct.Reg, %struct.Reg* %16014, i32 0, i32 0
  %RBP.i1048 = bitcast %union.anon* %16015 to i64*
  %16016 = load i64, i64* %RBP.i1048
  %16017 = sub i64 %16016, 36
  %16018 = load i32, i32* %EAX.i1047
  %16019 = zext i32 %16018 to i64
  %16020 = load i64, i64* %PC.i1046
  %16021 = add i64 %16020, 3
  store i64 %16021, i64* %PC.i1046
  %16022 = inttoptr i64 %16017 to i32*
  store i32 %16018, i32* %16022
  store %struct.Memory* %loadMem_406e06, %struct.Memory** %MEMORY
  %loadMem_406e09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16024 = getelementptr inbounds %struct.GPR, %struct.GPR* %16023, i32 0, i32 33
  %16025 = getelementptr inbounds %struct.Reg, %struct.Reg* %16024, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %16025 to i64*
  %16026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16027 = getelementptr inbounds %struct.GPR, %struct.GPR* %16026, i32 0, i32 5
  %16028 = getelementptr inbounds %struct.Reg, %struct.Reg* %16027, i32 0, i32 0
  %RCX.i1045 = bitcast %union.anon* %16028 to i64*
  %16029 = load i64, i64* %PC.i1044
  %16030 = add i64 %16029, 8
  store i64 %16030, i64* %PC.i1044
  %16031 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %16031, i64* %RCX.i1045, align 8
  store %struct.Memory* %loadMem_406e09, %struct.Memory** %MEMORY
  %loadMem_406e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16033 = getelementptr inbounds %struct.GPR, %struct.GPR* %16032, i32 0, i32 33
  %16034 = getelementptr inbounds %struct.Reg, %struct.Reg* %16033, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %16034 to i64*
  %16035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16036 = getelementptr inbounds %struct.GPR, %struct.GPR* %16035, i32 0, i32 5
  %16037 = getelementptr inbounds %struct.Reg, %struct.Reg* %16036, i32 0, i32 0
  %RCX.i1043 = bitcast %union.anon* %16037 to i64*
  %16038 = load i64, i64* %RCX.i1043
  %16039 = add i64 %16038, 72724
  %16040 = load i64, i64* %PC.i1042
  %16041 = add i64 %16040, 7
  store i64 %16041, i64* %PC.i1042
  %16042 = inttoptr i64 %16039 to i32*
  %16043 = load i32, i32* %16042
  %16044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16044, align 1
  %16045 = and i32 %16043, 255
  %16046 = call i32 @llvm.ctpop.i32(i32 %16045)
  %16047 = trunc i32 %16046 to i8
  %16048 = and i8 %16047, 1
  %16049 = xor i8 %16048, 1
  %16050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16049, i8* %16050, align 1
  %16051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16051, align 1
  %16052 = icmp eq i32 %16043, 0
  %16053 = zext i1 %16052 to i8
  %16054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16053, i8* %16054, align 1
  %16055 = lshr i32 %16043, 31
  %16056 = trunc i32 %16055 to i8
  %16057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16056, i8* %16057, align 1
  %16058 = lshr i32 %16043, 31
  %16059 = xor i32 %16055, %16058
  %16060 = add i32 %16059, %16058
  %16061 = icmp eq i32 %16060, 2
  %16062 = zext i1 %16061 to i8
  %16063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16062, i8* %16063, align 1
  store %struct.Memory* %loadMem_406e11, %struct.Memory** %MEMORY
  %loadMem_406e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16065 = getelementptr inbounds %struct.GPR, %struct.GPR* %16064, i32 0, i32 33
  %16066 = getelementptr inbounds %struct.Reg, %struct.Reg* %16065, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %16066 to i64*
  %16067 = load i64, i64* %PC.i1041
  %16068 = add i64 %16067, 1051
  %16069 = load i64, i64* %PC.i1041
  %16070 = add i64 %16069, 6
  %16071 = load i64, i64* %PC.i1041
  %16072 = add i64 %16071, 6
  store i64 %16072, i64* %PC.i1041
  %16073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16074 = load i8, i8* %16073, align 1
  %16075 = icmp eq i8 %16074, 0
  %16076 = zext i1 %16075 to i8
  store i8 %16076, i8* %BRANCH_TAKEN, align 1
  %16077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16078 = select i1 %16075, i64 %16068, i64 %16070
  store i64 %16078, i64* %16077, align 8
  store %struct.Memory* %loadMem_406e18, %struct.Memory** %MEMORY
  %loadBr_406e18 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406e18 = icmp eq i8 %loadBr_406e18, 1
  br i1 %cmpBr_406e18, label %block_.L_407233, label %block_406e1e

block_406e1e:                                     ; preds = %block_406dfe
  %loadMem_406e1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16080 = getelementptr inbounds %struct.GPR, %struct.GPR* %16079, i32 0, i32 33
  %16081 = getelementptr inbounds %struct.Reg, %struct.Reg* %16080, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %16081 to i64*
  %16082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16083 = getelementptr inbounds %struct.GPR, %struct.GPR* %16082, i32 0, i32 1
  %16084 = getelementptr inbounds %struct.Reg, %struct.Reg* %16083, i32 0, i32 0
  %EAX.i1039 = bitcast %union.anon* %16084 to i32*
  %16085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16086 = getelementptr inbounds %struct.GPR, %struct.GPR* %16085, i32 0, i32 1
  %16087 = getelementptr inbounds %struct.Reg, %struct.Reg* %16086, i32 0, i32 0
  %RAX.i1040 = bitcast %union.anon* %16087 to i64*
  %16088 = load i64, i64* %RAX.i1040
  %16089 = load i32, i32* %EAX.i1039
  %16090 = zext i32 %16089 to i64
  %16091 = load i64, i64* %PC.i1038
  %16092 = add i64 %16091, 2
  store i64 %16092, i64* %PC.i1038
  %16093 = xor i64 %16090, %16088
  %16094 = trunc i64 %16093 to i32
  %16095 = and i64 %16093, 4294967295
  store i64 %16095, i64* %RAX.i1040, align 8
  %16096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16096, align 1
  %16097 = and i32 %16094, 255
  %16098 = call i32 @llvm.ctpop.i32(i32 %16097)
  %16099 = trunc i32 %16098 to i8
  %16100 = and i8 %16099, 1
  %16101 = xor i8 %16100, 1
  %16102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16101, i8* %16102, align 1
  %16103 = icmp eq i32 %16094, 0
  %16104 = zext i1 %16103 to i8
  %16105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16104, i8* %16105, align 1
  %16106 = lshr i32 %16094, 31
  %16107 = trunc i32 %16106 to i8
  %16108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16107, i8* %16108, align 1
  %16109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16109, align 1
  %16110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16110, align 1
  store %struct.Memory* %loadMem_406e1e, %struct.Memory** %MEMORY
  %loadMem_406e20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16112 = getelementptr inbounds %struct.GPR, %struct.GPR* %16111, i32 0, i32 33
  %16113 = getelementptr inbounds %struct.Reg, %struct.Reg* %16112, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %16113 to i64*
  %16114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16115 = getelementptr inbounds %struct.GPR, %struct.GPR* %16114, i32 0, i32 1
  %16116 = getelementptr inbounds %struct.Reg, %struct.Reg* %16115, i32 0, i32 0
  %EAX.i1036 = bitcast %union.anon* %16116 to i32*
  %16117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16118 = getelementptr inbounds %struct.GPR, %struct.GPR* %16117, i32 0, i32 5
  %16119 = getelementptr inbounds %struct.Reg, %struct.Reg* %16118, i32 0, i32 0
  %RCX.i1037 = bitcast %union.anon* %16119 to i64*
  %16120 = load i32, i32* %EAX.i1036
  %16121 = zext i32 %16120 to i64
  %16122 = load i64, i64* %PC.i1035
  %16123 = add i64 %16122, 2
  store i64 %16123, i64* %PC.i1035
  %16124 = and i64 %16121, 4294967295
  store i64 %16124, i64* %RCX.i1037, align 8
  store %struct.Memory* %loadMem_406e20, %struct.Memory** %MEMORY
  %loadMem_406e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16126 = getelementptr inbounds %struct.GPR, %struct.GPR* %16125, i32 0, i32 33
  %16127 = getelementptr inbounds %struct.Reg, %struct.Reg* %16126, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %16127 to i64*
  %16128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16129 = getelementptr inbounds %struct.GPR, %struct.GPR* %16128, i32 0, i32 7
  %16130 = getelementptr inbounds %struct.Reg, %struct.Reg* %16129, i32 0, i32 0
  %RDX.i1034 = bitcast %union.anon* %16130 to i64*
  %16131 = load i64, i64* %PC.i1033
  %16132 = add i64 %16131, 8
  store i64 %16132, i64* %PC.i1033
  %16133 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %16133, i64* %RDX.i1034, align 8
  store %struct.Memory* %loadMem_406e22, %struct.Memory** %MEMORY
  %loadMem_406e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16135 = getelementptr inbounds %struct.GPR, %struct.GPR* %16134, i32 0, i32 33
  %16136 = getelementptr inbounds %struct.Reg, %struct.Reg* %16135, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %16136 to i64*
  %16137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16138 = getelementptr inbounds %struct.GPR, %struct.GPR* %16137, i32 0, i32 7
  %16139 = getelementptr inbounds %struct.Reg, %struct.Reg* %16138, i32 0, i32 0
  %RDX.i1032 = bitcast %union.anon* %16139 to i64*
  %16140 = load i64, i64* %RDX.i1032
  %16141 = add i64 %16140, 72684
  %16142 = load i64, i64* %PC.i1031
  %16143 = add i64 %16142, 7
  store i64 %16143, i64* %PC.i1031
  %16144 = inttoptr i64 %16141 to i32*
  %16145 = load i32, i32* %16144
  %16146 = sext i32 %16145 to i64
  store i64 %16146, i64* %RDX.i1032, align 8
  store %struct.Memory* %loadMem_406e2a, %struct.Memory** %MEMORY
  %loadMem_406e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16148 = getelementptr inbounds %struct.GPR, %struct.GPR* %16147, i32 0, i32 33
  %16149 = getelementptr inbounds %struct.Reg, %struct.Reg* %16148, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %16149 to i64*
  %16150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16151 = getelementptr inbounds %struct.GPR, %struct.GPR* %16150, i32 0, i32 9
  %16152 = getelementptr inbounds %struct.Reg, %struct.Reg* %16151, i32 0, i32 0
  %RSI.i1029 = bitcast %union.anon* %16152 to i64*
  %16153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16154 = getelementptr inbounds %struct.GPR, %struct.GPR* %16153, i32 0, i32 15
  %16155 = getelementptr inbounds %struct.Reg, %struct.Reg* %16154, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %16155 to i64*
  %16156 = load i64, i64* %RBP.i1030
  %16157 = sub i64 %16156, 28
  %16158 = load i64, i64* %PC.i1028
  %16159 = add i64 %16158, 4
  store i64 %16159, i64* %PC.i1028
  %16160 = inttoptr i64 %16157 to i32*
  %16161 = load i32, i32* %16160
  %16162 = sext i32 %16161 to i64
  store i64 %16162, i64* %RSI.i1029, align 8
  store %struct.Memory* %loadMem_406e31, %struct.Memory** %MEMORY
  %loadMem_406e35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16164 = getelementptr inbounds %struct.GPR, %struct.GPR* %16163, i32 0, i32 33
  %16165 = getelementptr inbounds %struct.Reg, %struct.Reg* %16164, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %16165 to i64*
  %16166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16167 = getelementptr inbounds %struct.GPR, %struct.GPR* %16166, i32 0, i32 1
  %16168 = getelementptr inbounds %struct.Reg, %struct.Reg* %16167, i32 0, i32 0
  %RAX.i1025 = bitcast %union.anon* %16168 to i64*
  %16169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16170 = getelementptr inbounds %struct.GPR, %struct.GPR* %16169, i32 0, i32 9
  %16171 = getelementptr inbounds %struct.Reg, %struct.Reg* %16170, i32 0, i32 0
  %RSI.i1026 = bitcast %union.anon* %16171 to i64*
  %16172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16173 = getelementptr inbounds %struct.GPR, %struct.GPR* %16172, i32 0, i32 15
  %16174 = getelementptr inbounds %struct.Reg, %struct.Reg* %16173, i32 0, i32 0
  %RBP.i1027 = bitcast %union.anon* %16174 to i64*
  %16175 = load i64, i64* %RBP.i1027
  %16176 = load i64, i64* %RSI.i1026
  %16177 = mul i64 %16176, 4
  %16178 = add i64 %16175, -80
  %16179 = add i64 %16178, %16177
  %16180 = load i64, i64* %PC.i1024
  %16181 = add i64 %16180, 4
  store i64 %16181, i64* %PC.i1024
  %16182 = inttoptr i64 %16179 to i32*
  %16183 = load i32, i32* %16182
  %16184 = zext i32 %16183 to i64
  store i64 %16184, i64* %RAX.i1025, align 8
  store %struct.Memory* %loadMem_406e35, %struct.Memory** %MEMORY
  %loadMem_406e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16186 = getelementptr inbounds %struct.GPR, %struct.GPR* %16185, i32 0, i32 33
  %16187 = getelementptr inbounds %struct.Reg, %struct.Reg* %16186, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %16187 to i64*
  %16188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16189 = getelementptr inbounds %struct.GPR, %struct.GPR* %16188, i32 0, i32 9
  %16190 = getelementptr inbounds %struct.Reg, %struct.Reg* %16189, i32 0, i32 0
  %RSI.i1022 = bitcast %union.anon* %16190 to i64*
  %16191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16192 = getelementptr inbounds %struct.GPR, %struct.GPR* %16191, i32 0, i32 15
  %16193 = getelementptr inbounds %struct.Reg, %struct.Reg* %16192, i32 0, i32 0
  %RBP.i1023 = bitcast %union.anon* %16193 to i64*
  %16194 = load i64, i64* %RBP.i1023
  %16195 = sub i64 %16194, 36
  %16196 = load i64, i64* %PC.i1021
  %16197 = add i64 %16196, 4
  store i64 %16197, i64* %PC.i1021
  %16198 = inttoptr i64 %16195 to i32*
  %16199 = load i32, i32* %16198
  %16200 = sext i32 %16199 to i64
  store i64 %16200, i64* %RSI.i1022, align 8
  store %struct.Memory* %loadMem_406e39, %struct.Memory** %MEMORY
  %loadMem_406e3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16202 = getelementptr inbounds %struct.GPR, %struct.GPR* %16201, i32 0, i32 33
  %16203 = getelementptr inbounds %struct.Reg, %struct.Reg* %16202, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %16203 to i64*
  %16204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16205 = getelementptr inbounds %struct.GPR, %struct.GPR* %16204, i32 0, i32 1
  %16206 = getelementptr inbounds %struct.Reg, %struct.Reg* %16205, i32 0, i32 0
  %RAX.i1018 = bitcast %union.anon* %16206 to i64*
  %16207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16208 = getelementptr inbounds %struct.GPR, %struct.GPR* %16207, i32 0, i32 9
  %16209 = getelementptr inbounds %struct.Reg, %struct.Reg* %16208, i32 0, i32 0
  %RSI.i1019 = bitcast %union.anon* %16209 to i64*
  %16210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16211 = getelementptr inbounds %struct.GPR, %struct.GPR* %16210, i32 0, i32 15
  %16212 = getelementptr inbounds %struct.Reg, %struct.Reg* %16211, i32 0, i32 0
  %RBP.i1020 = bitcast %union.anon* %16212 to i64*
  %16213 = load i64, i64* %RAX.i1018
  %16214 = load i64, i64* %RBP.i1020
  %16215 = load i64, i64* %RSI.i1019
  %16216 = mul i64 %16215, 4
  %16217 = add i64 %16214, -80
  %16218 = add i64 %16217, %16216
  %16219 = load i64, i64* %PC.i1017
  %16220 = add i64 %16219, 4
  store i64 %16220, i64* %PC.i1017
  %16221 = trunc i64 %16213 to i32
  %16222 = inttoptr i64 %16218 to i32*
  %16223 = load i32, i32* %16222
  %16224 = add i32 %16223, %16221
  %16225 = zext i32 %16224 to i64
  store i64 %16225, i64* %RAX.i1018, align 8
  %16226 = icmp ult i32 %16224, %16221
  %16227 = icmp ult i32 %16224, %16223
  %16228 = or i1 %16226, %16227
  %16229 = zext i1 %16228 to i8
  %16230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16229, i8* %16230, align 1
  %16231 = and i32 %16224, 255
  %16232 = call i32 @llvm.ctpop.i32(i32 %16231)
  %16233 = trunc i32 %16232 to i8
  %16234 = and i8 %16233, 1
  %16235 = xor i8 %16234, 1
  %16236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16235, i8* %16236, align 1
  %16237 = xor i32 %16223, %16221
  %16238 = xor i32 %16237, %16224
  %16239 = lshr i32 %16238, 4
  %16240 = trunc i32 %16239 to i8
  %16241 = and i8 %16240, 1
  %16242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16241, i8* %16242, align 1
  %16243 = icmp eq i32 %16224, 0
  %16244 = zext i1 %16243 to i8
  %16245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16244, i8* %16245, align 1
  %16246 = lshr i32 %16224, 31
  %16247 = trunc i32 %16246 to i8
  %16248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16247, i8* %16248, align 1
  %16249 = lshr i32 %16221, 31
  %16250 = lshr i32 %16223, 31
  %16251 = xor i32 %16246, %16249
  %16252 = xor i32 %16246, %16250
  %16253 = add i32 %16251, %16252
  %16254 = icmp eq i32 %16253, 2
  %16255 = zext i1 %16254 to i8
  %16256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16255, i8* %16256, align 1
  store %struct.Memory* %loadMem_406e3d, %struct.Memory** %MEMORY
  %loadMem_406e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16258 = getelementptr inbounds %struct.GPR, %struct.GPR* %16257, i32 0, i32 33
  %16259 = getelementptr inbounds %struct.Reg, %struct.Reg* %16258, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %16259 to i64*
  %16260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16261 = getelementptr inbounds %struct.GPR, %struct.GPR* %16260, i32 0, i32 1
  %16262 = getelementptr inbounds %struct.Reg, %struct.Reg* %16261, i32 0, i32 0
  %EAX.i1015 = bitcast %union.anon* %16262 to i32*
  %16263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16264 = getelementptr inbounds %struct.GPR, %struct.GPR* %16263, i32 0, i32 9
  %16265 = getelementptr inbounds %struct.Reg, %struct.Reg* %16264, i32 0, i32 0
  %RSI.i1016 = bitcast %union.anon* %16265 to i64*
  %16266 = load i32, i32* %EAX.i1015
  %16267 = zext i32 %16266 to i64
  %16268 = load i64, i64* %PC.i1014
  %16269 = add i64 %16268, 3
  store i64 %16269, i64* %PC.i1014
  %16270 = shl i64 %16267, 32
  %16271 = ashr exact i64 %16270, 32
  store i64 %16271, i64* %RSI.i1016, align 8
  store %struct.Memory* %loadMem_406e41, %struct.Memory** %MEMORY
  %loadMem_406e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16273 = getelementptr inbounds %struct.GPR, %struct.GPR* %16272, i32 0, i32 33
  %16274 = getelementptr inbounds %struct.Reg, %struct.Reg* %16273, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %16274 to i64*
  %16275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16276 = getelementptr inbounds %struct.GPR, %struct.GPR* %16275, i32 0, i32 11
  %16277 = getelementptr inbounds %struct.Reg, %struct.Reg* %16276, i32 0, i32 0
  %RDI.i1013 = bitcast %union.anon* %16277 to i64*
  %16278 = load i64, i64* %PC.i1012
  %16279 = add i64 %16278, 8
  store i64 %16279, i64* %PC.i1012
  %16280 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %16280, i64* %RDI.i1013, align 8
  store %struct.Memory* %loadMem_406e44, %struct.Memory** %MEMORY
  %loadMem_406e4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16282 = getelementptr inbounds %struct.GPR, %struct.GPR* %16281, i32 0, i32 33
  %16283 = getelementptr inbounds %struct.Reg, %struct.Reg* %16282, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %16283 to i64*
  %16284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16285 = getelementptr inbounds %struct.GPR, %struct.GPR* %16284, i32 0, i32 11
  %16286 = getelementptr inbounds %struct.Reg, %struct.Reg* %16285, i32 0, i32 0
  %RDI.i1011 = bitcast %union.anon* %16286 to i64*
  %16287 = load i64, i64* %RDI.i1011
  %16288 = load i64, i64* %PC.i1010
  %16289 = add i64 %16288, 7
  store i64 %16289, i64* %PC.i1010
  %16290 = add i64 12600, %16287
  store i64 %16290, i64* %RDI.i1011, align 8
  %16291 = icmp ult i64 %16290, %16287
  %16292 = icmp ult i64 %16290, 12600
  %16293 = or i1 %16291, %16292
  %16294 = zext i1 %16293 to i8
  %16295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16294, i8* %16295, align 1
  %16296 = trunc i64 %16290 to i32
  %16297 = and i32 %16296, 255
  %16298 = call i32 @llvm.ctpop.i32(i32 %16297)
  %16299 = trunc i32 %16298 to i8
  %16300 = and i8 %16299, 1
  %16301 = xor i8 %16300, 1
  %16302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16301, i8* %16302, align 1
  %16303 = xor i64 12600, %16287
  %16304 = xor i64 %16303, %16290
  %16305 = lshr i64 %16304, 4
  %16306 = trunc i64 %16305 to i8
  %16307 = and i8 %16306, 1
  %16308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16307, i8* %16308, align 1
  %16309 = icmp eq i64 %16290, 0
  %16310 = zext i1 %16309 to i8
  %16311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16310, i8* %16311, align 1
  %16312 = lshr i64 %16290, 63
  %16313 = trunc i64 %16312 to i8
  %16314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16313, i8* %16314, align 1
  %16315 = lshr i64 %16287, 63
  %16316 = xor i64 %16312, %16315
  %16317 = add i64 %16316, %16312
  %16318 = icmp eq i64 %16317, 2
  %16319 = zext i1 %16318 to i8
  %16320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16319, i8* %16320, align 1
  store %struct.Memory* %loadMem_406e4c, %struct.Memory** %MEMORY
  %loadMem_406e53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16322 = getelementptr inbounds %struct.GPR, %struct.GPR* %16321, i32 0, i32 33
  %16323 = getelementptr inbounds %struct.Reg, %struct.Reg* %16322, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %16323 to i64*
  %16324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16325 = getelementptr inbounds %struct.GPR, %struct.GPR* %16324, i32 0, i32 1
  %16326 = getelementptr inbounds %struct.Reg, %struct.Reg* %16325, i32 0, i32 0
  %RAX.i1008 = bitcast %union.anon* %16326 to i64*
  %16327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16328 = getelementptr inbounds %struct.GPR, %struct.GPR* %16327, i32 0, i32 15
  %16329 = getelementptr inbounds %struct.Reg, %struct.Reg* %16328, i32 0, i32 0
  %RBP.i1009 = bitcast %union.anon* %16329 to i64*
  %16330 = load i64, i64* %RBP.i1009
  %16331 = sub i64 %16330, 24
  %16332 = load i64, i64* %PC.i1007
  %16333 = add i64 %16332, 3
  store i64 %16333, i64* %PC.i1007
  %16334 = inttoptr i64 %16331 to i32*
  %16335 = load i32, i32* %16334
  %16336 = zext i32 %16335 to i64
  store i64 %16336, i64* %RAX.i1008, align 8
  store %struct.Memory* %loadMem_406e53, %struct.Memory** %MEMORY
  %loadMem_406e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16338 = getelementptr inbounds %struct.GPR, %struct.GPR* %16337, i32 0, i32 33
  %16339 = getelementptr inbounds %struct.Reg, %struct.Reg* %16338, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %16339 to i64*
  %16340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16341 = getelementptr inbounds %struct.GPR, %struct.GPR* %16340, i32 0, i32 1
  %16342 = getelementptr inbounds %struct.Reg, %struct.Reg* %16341, i32 0, i32 0
  %RAX.i1005 = bitcast %union.anon* %16342 to i64*
  %16343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16344 = getelementptr inbounds %struct.GPR, %struct.GPR* %16343, i32 0, i32 15
  %16345 = getelementptr inbounds %struct.Reg, %struct.Reg* %16344, i32 0, i32 0
  %RBP.i1006 = bitcast %union.anon* %16345 to i64*
  %16346 = load i64, i64* %RAX.i1005
  %16347 = load i64, i64* %RBP.i1006
  %16348 = sub i64 %16347, 4
  %16349 = load i64, i64* %PC.i1004
  %16350 = add i64 %16349, 3
  store i64 %16350, i64* %PC.i1004
  %16351 = trunc i64 %16346 to i32
  %16352 = inttoptr i64 %16348 to i32*
  %16353 = load i32, i32* %16352
  %16354 = add i32 %16353, %16351
  %16355 = zext i32 %16354 to i64
  store i64 %16355, i64* %RAX.i1005, align 8
  %16356 = icmp ult i32 %16354, %16351
  %16357 = icmp ult i32 %16354, %16353
  %16358 = or i1 %16356, %16357
  %16359 = zext i1 %16358 to i8
  %16360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16359, i8* %16360, align 1
  %16361 = and i32 %16354, 255
  %16362 = call i32 @llvm.ctpop.i32(i32 %16361)
  %16363 = trunc i32 %16362 to i8
  %16364 = and i8 %16363, 1
  %16365 = xor i8 %16364, 1
  %16366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16365, i8* %16366, align 1
  %16367 = xor i32 %16353, %16351
  %16368 = xor i32 %16367, %16354
  %16369 = lshr i32 %16368, 4
  %16370 = trunc i32 %16369 to i8
  %16371 = and i8 %16370, 1
  %16372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16371, i8* %16372, align 1
  %16373 = icmp eq i32 %16354, 0
  %16374 = zext i1 %16373 to i8
  %16375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16374, i8* %16375, align 1
  %16376 = lshr i32 %16354, 31
  %16377 = trunc i32 %16376 to i8
  %16378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16377, i8* %16378, align 1
  %16379 = lshr i32 %16351, 31
  %16380 = lshr i32 %16353, 31
  %16381 = xor i32 %16376, %16379
  %16382 = xor i32 %16376, %16380
  %16383 = add i32 %16381, %16382
  %16384 = icmp eq i32 %16383, 2
  %16385 = zext i1 %16384 to i8
  %16386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16385, i8* %16386, align 1
  store %struct.Memory* %loadMem_406e56, %struct.Memory** %MEMORY
  %loadMem_406e59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16388 = getelementptr inbounds %struct.GPR, %struct.GPR* %16387, i32 0, i32 33
  %16389 = getelementptr inbounds %struct.Reg, %struct.Reg* %16388, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %16389 to i64*
  %16390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16391 = getelementptr inbounds %struct.GPR, %struct.GPR* %16390, i32 0, i32 1
  %16392 = getelementptr inbounds %struct.Reg, %struct.Reg* %16391, i32 0, i32 0
  %EAX.i1002 = bitcast %union.anon* %16392 to i32*
  %16393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16394 = getelementptr inbounds %struct.GPR, %struct.GPR* %16393, i32 0, i32 17
  %16395 = getelementptr inbounds %struct.Reg, %struct.Reg* %16394, i32 0, i32 0
  %R8.i1003 = bitcast %union.anon* %16395 to i64*
  %16396 = load i32, i32* %EAX.i1002
  %16397 = zext i32 %16396 to i64
  %16398 = load i64, i64* %PC.i1001
  %16399 = add i64 %16398, 3
  store i64 %16399, i64* %PC.i1001
  %16400 = shl i64 %16397, 32
  %16401 = ashr exact i64 %16400, 32
  store i64 %16401, i64* %R8.i1003, align 8
  store %struct.Memory* %loadMem_406e59, %struct.Memory** %MEMORY
  %loadMem_406e5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16403 = getelementptr inbounds %struct.GPR, %struct.GPR* %16402, i32 0, i32 33
  %16404 = getelementptr inbounds %struct.Reg, %struct.Reg* %16403, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %16404 to i64*
  %16405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16406 = getelementptr inbounds %struct.GPR, %struct.GPR* %16405, i32 0, i32 17
  %16407 = getelementptr inbounds %struct.Reg, %struct.Reg* %16406, i32 0, i32 0
  %R8.i1000 = bitcast %union.anon* %16407 to i64*
  %16408 = load i64, i64* %R8.i1000
  %16409 = load i64, i64* %PC.i999
  %16410 = add i64 %16409, 4
  store i64 %16410, i64* %PC.i999
  %16411 = shl i64 %16408, 4
  %16412 = icmp slt i64 %16411, 0
  %16413 = shl i64 %16411, 1
  store i64 %16413, i64* %R8.i1000, align 8
  %16414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16415 = zext i1 %16412 to i8
  store i8 %16415, i8* %16414, align 1
  %16416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16417 = trunc i64 %16413 to i32
  %16418 = and i32 %16417, 254
  %16419 = call i32 @llvm.ctpop.i32(i32 %16418)
  %16420 = trunc i32 %16419 to i8
  %16421 = and i8 %16420, 1
  %16422 = xor i8 %16421, 1
  store i8 %16422, i8* %16416, align 1
  %16423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16423, align 1
  %16424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16425 = icmp eq i64 %16413, 0
  %16426 = zext i1 %16425 to i8
  store i8 %16426, i8* %16424, align 1
  %16427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16428 = lshr i64 %16413, 63
  %16429 = trunc i64 %16428 to i8
  store i8 %16429, i8* %16427, align 1
  %16430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16430, align 1
  store %struct.Memory* %loadMem_406e5c, %struct.Memory** %MEMORY
  %loadMem_406e60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16432 = getelementptr inbounds %struct.GPR, %struct.GPR* %16431, i32 0, i32 33
  %16433 = getelementptr inbounds %struct.Reg, %struct.Reg* %16432, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %16433 to i64*
  %16434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16435 = getelementptr inbounds %struct.GPR, %struct.GPR* %16434, i32 0, i32 11
  %16436 = getelementptr inbounds %struct.Reg, %struct.Reg* %16435, i32 0, i32 0
  %RDI.i997 = bitcast %union.anon* %16436 to i64*
  %16437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16438 = getelementptr inbounds %struct.GPR, %struct.GPR* %16437, i32 0, i32 17
  %16439 = getelementptr inbounds %struct.Reg, %struct.Reg* %16438, i32 0, i32 0
  %R8.i998 = bitcast %union.anon* %16439 to i64*
  %16440 = load i64, i64* %RDI.i997
  %16441 = load i64, i64* %R8.i998
  %16442 = load i64, i64* %PC.i996
  %16443 = add i64 %16442, 3
  store i64 %16443, i64* %PC.i996
  %16444 = add i64 %16441, %16440
  store i64 %16444, i64* %RDI.i997, align 8
  %16445 = icmp ult i64 %16444, %16440
  %16446 = icmp ult i64 %16444, %16441
  %16447 = or i1 %16445, %16446
  %16448 = zext i1 %16447 to i8
  %16449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16448, i8* %16449, align 1
  %16450 = trunc i64 %16444 to i32
  %16451 = and i32 %16450, 255
  %16452 = call i32 @llvm.ctpop.i32(i32 %16451)
  %16453 = trunc i32 %16452 to i8
  %16454 = and i8 %16453, 1
  %16455 = xor i8 %16454, 1
  %16456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16455, i8* %16456, align 1
  %16457 = xor i64 %16441, %16440
  %16458 = xor i64 %16457, %16444
  %16459 = lshr i64 %16458, 4
  %16460 = trunc i64 %16459 to i8
  %16461 = and i8 %16460, 1
  %16462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16461, i8* %16462, align 1
  %16463 = icmp eq i64 %16444, 0
  %16464 = zext i1 %16463 to i8
  %16465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16464, i8* %16465, align 1
  %16466 = lshr i64 %16444, 63
  %16467 = trunc i64 %16466 to i8
  %16468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16467, i8* %16468, align 1
  %16469 = lshr i64 %16440, 63
  %16470 = lshr i64 %16441, 63
  %16471 = xor i64 %16466, %16469
  %16472 = xor i64 %16466, %16470
  %16473 = add i64 %16471, %16472
  %16474 = icmp eq i64 %16473, 2
  %16475 = zext i1 %16474 to i8
  %16476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16475, i8* %16476, align 1
  store %struct.Memory* %loadMem_406e60, %struct.Memory** %MEMORY
  %loadMem_406e63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16478 = getelementptr inbounds %struct.GPR, %struct.GPR* %16477, i32 0, i32 33
  %16479 = getelementptr inbounds %struct.Reg, %struct.Reg* %16478, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %16479 to i64*
  %16480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16481 = getelementptr inbounds %struct.GPR, %struct.GPR* %16480, i32 0, i32 1
  %16482 = getelementptr inbounds %struct.Reg, %struct.Reg* %16481, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %16482 to i64*
  %16483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16484 = getelementptr inbounds %struct.GPR, %struct.GPR* %16483, i32 0, i32 15
  %16485 = getelementptr inbounds %struct.Reg, %struct.Reg* %16484, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %16485 to i64*
  %16486 = load i64, i64* %RBP.i995
  %16487 = sub i64 %16486, 28
  %16488 = load i64, i64* %PC.i993
  %16489 = add i64 %16488, 3
  store i64 %16489, i64* %PC.i993
  %16490 = inttoptr i64 %16487 to i32*
  %16491 = load i32, i32* %16490
  %16492 = zext i32 %16491 to i64
  store i64 %16492, i64* %RAX.i994, align 8
  store %struct.Memory* %loadMem_406e63, %struct.Memory** %MEMORY
  %loadMem_406e66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16494 = getelementptr inbounds %struct.GPR, %struct.GPR* %16493, i32 0, i32 33
  %16495 = getelementptr inbounds %struct.Reg, %struct.Reg* %16494, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %16495 to i64*
  %16496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16497 = getelementptr inbounds %struct.GPR, %struct.GPR* %16496, i32 0, i32 1
  %16498 = getelementptr inbounds %struct.Reg, %struct.Reg* %16497, i32 0, i32 0
  %RAX.i991 = bitcast %union.anon* %16498 to i64*
  %16499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16500 = getelementptr inbounds %struct.GPR, %struct.GPR* %16499, i32 0, i32 15
  %16501 = getelementptr inbounds %struct.Reg, %struct.Reg* %16500, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %16501 to i64*
  %16502 = load i64, i64* %RAX.i991
  %16503 = load i64, i64* %RBP.i992
  %16504 = sub i64 %16503, 8
  %16505 = load i64, i64* %PC.i990
  %16506 = add i64 %16505, 3
  store i64 %16506, i64* %PC.i990
  %16507 = trunc i64 %16502 to i32
  %16508 = inttoptr i64 %16504 to i32*
  %16509 = load i32, i32* %16508
  %16510 = add i32 %16509, %16507
  %16511 = zext i32 %16510 to i64
  store i64 %16511, i64* %RAX.i991, align 8
  %16512 = icmp ult i32 %16510, %16507
  %16513 = icmp ult i32 %16510, %16509
  %16514 = or i1 %16512, %16513
  %16515 = zext i1 %16514 to i8
  %16516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16515, i8* %16516, align 1
  %16517 = and i32 %16510, 255
  %16518 = call i32 @llvm.ctpop.i32(i32 %16517)
  %16519 = trunc i32 %16518 to i8
  %16520 = and i8 %16519, 1
  %16521 = xor i8 %16520, 1
  %16522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16521, i8* %16522, align 1
  %16523 = xor i32 %16509, %16507
  %16524 = xor i32 %16523, %16510
  %16525 = lshr i32 %16524, 4
  %16526 = trunc i32 %16525 to i8
  %16527 = and i8 %16526, 1
  %16528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16527, i8* %16528, align 1
  %16529 = icmp eq i32 %16510, 0
  %16530 = zext i1 %16529 to i8
  %16531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16530, i8* %16531, align 1
  %16532 = lshr i32 %16510, 31
  %16533 = trunc i32 %16532 to i8
  %16534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16533, i8* %16534, align 1
  %16535 = lshr i32 %16507, 31
  %16536 = lshr i32 %16509, 31
  %16537 = xor i32 %16532, %16535
  %16538 = xor i32 %16532, %16536
  %16539 = add i32 %16537, %16538
  %16540 = icmp eq i32 %16539, 2
  %16541 = zext i1 %16540 to i8
  %16542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16541, i8* %16542, align 1
  store %struct.Memory* %loadMem_406e66, %struct.Memory** %MEMORY
  %loadMem_406e69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16544 = getelementptr inbounds %struct.GPR, %struct.GPR* %16543, i32 0, i32 33
  %16545 = getelementptr inbounds %struct.Reg, %struct.Reg* %16544, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %16545 to i64*
  %16546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16547 = getelementptr inbounds %struct.GPR, %struct.GPR* %16546, i32 0, i32 1
  %16548 = getelementptr inbounds %struct.Reg, %struct.Reg* %16547, i32 0, i32 0
  %EAX.i988 = bitcast %union.anon* %16548 to i32*
  %16549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16550 = getelementptr inbounds %struct.GPR, %struct.GPR* %16549, i32 0, i32 17
  %16551 = getelementptr inbounds %struct.Reg, %struct.Reg* %16550, i32 0, i32 0
  %R8.i989 = bitcast %union.anon* %16551 to i64*
  %16552 = load i32, i32* %EAX.i988
  %16553 = zext i32 %16552 to i64
  %16554 = load i64, i64* %PC.i987
  %16555 = add i64 %16554, 3
  store i64 %16555, i64* %PC.i987
  %16556 = shl i64 %16553, 32
  %16557 = ashr exact i64 %16556, 32
  store i64 %16557, i64* %R8.i989, align 8
  store %struct.Memory* %loadMem_406e69, %struct.Memory** %MEMORY
  %loadMem_406e6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16559 = getelementptr inbounds %struct.GPR, %struct.GPR* %16558, i32 0, i32 33
  %16560 = getelementptr inbounds %struct.Reg, %struct.Reg* %16559, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %16560 to i64*
  %16561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16562 = getelementptr inbounds %struct.GPR, %struct.GPR* %16561, i32 0, i32 1
  %16563 = getelementptr inbounds %struct.Reg, %struct.Reg* %16562, i32 0, i32 0
  %RAX.i984 = bitcast %union.anon* %16563 to i64*
  %16564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16565 = getelementptr inbounds %struct.GPR, %struct.GPR* %16564, i32 0, i32 11
  %16566 = getelementptr inbounds %struct.Reg, %struct.Reg* %16565, i32 0, i32 0
  %RDI.i985 = bitcast %union.anon* %16566 to i64*
  %16567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16568 = getelementptr inbounds %struct.GPR, %struct.GPR* %16567, i32 0, i32 17
  %16569 = getelementptr inbounds %struct.Reg, %struct.Reg* %16568, i32 0, i32 0
  %R8.i986 = bitcast %union.anon* %16569 to i64*
  %16570 = load i64, i64* %RDI.i985
  %16571 = load i64, i64* %R8.i986
  %16572 = mul i64 %16571, 2
  %16573 = add i64 %16572, %16570
  %16574 = load i64, i64* %PC.i983
  %16575 = add i64 %16574, 5
  store i64 %16575, i64* %PC.i983
  %16576 = inttoptr i64 %16573 to i16*
  %16577 = load i16, i16* %16576
  %16578 = zext i16 %16577 to i64
  store i64 %16578, i64* %RAX.i984, align 8
  store %struct.Memory* %loadMem_406e6c, %struct.Memory** %MEMORY
  %loadMem_406e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16580 = getelementptr inbounds %struct.GPR, %struct.GPR* %16579, i32 0, i32 33
  %16581 = getelementptr inbounds %struct.Reg, %struct.Reg* %16580, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %16581 to i64*
  %16582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16583 = getelementptr inbounds %struct.GPR, %struct.GPR* %16582, i32 0, i32 1
  %16584 = getelementptr inbounds %struct.Reg, %struct.Reg* %16583, i32 0, i32 0
  %EAX.i981 = bitcast %union.anon* %16584 to i32*
  %16585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16586 = getelementptr inbounds %struct.GPR, %struct.GPR* %16585, i32 0, i32 11
  %16587 = getelementptr inbounds %struct.Reg, %struct.Reg* %16586, i32 0, i32 0
  %RDI.i982 = bitcast %union.anon* %16587 to i64*
  %16588 = load i32, i32* %EAX.i981
  %16589 = zext i32 %16588 to i64
  %16590 = load i64, i64* %PC.i980
  %16591 = add i64 %16590, 2
  store i64 %16591, i64* %PC.i980
  %16592 = and i64 %16589, 4294967295
  store i64 %16592, i64* %RDI.i982, align 8
  store %struct.Memory* %loadMem_406e71, %struct.Memory** %MEMORY
  %loadMem_406e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16594 = getelementptr inbounds %struct.GPR, %struct.GPR* %16593, i32 0, i32 33
  %16595 = getelementptr inbounds %struct.Reg, %struct.Reg* %16594, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %16595 to i64*
  %16596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16597 = getelementptr inbounds %struct.GPR, %struct.GPR* %16596, i32 0, i32 11
  %16598 = getelementptr inbounds %struct.Reg, %struct.Reg* %16597, i32 0, i32 0
  %RDI.i979 = bitcast %union.anon* %16598 to i64*
  %16599 = load i64, i64* %RDI.i979
  %16600 = load i64, i64* %PC.i978
  %16601 = add i64 %16600, 4
  store i64 %16601, i64* %PC.i978
  %16602 = shl i64 %16599, 5
  %16603 = icmp slt i64 %16602, 0
  %16604 = shl i64 %16602, 1
  store i64 %16604, i64* %RDI.i979, align 8
  %16605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16606 = zext i1 %16603 to i8
  store i8 %16606, i8* %16605, align 1
  %16607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16608 = trunc i64 %16604 to i32
  %16609 = and i32 %16608, 254
  %16610 = call i32 @llvm.ctpop.i32(i32 %16609)
  %16611 = trunc i32 %16610 to i8
  %16612 = and i8 %16611, 1
  %16613 = xor i8 %16612, 1
  store i8 %16613, i8* %16607, align 1
  %16614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16614, align 1
  %16615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16616 = icmp eq i64 %16604, 0
  %16617 = zext i1 %16616 to i8
  store i8 %16617, i8* %16615, align 1
  %16618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16619 = lshr i64 %16604, 63
  %16620 = trunc i64 %16619 to i8
  store i8 %16620, i8* %16618, align 1
  %16621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16621, align 1
  store %struct.Memory* %loadMem_406e73, %struct.Memory** %MEMORY
  %loadMem_406e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16623 = getelementptr inbounds %struct.GPR, %struct.GPR* %16622, i32 0, i32 33
  %16624 = getelementptr inbounds %struct.Reg, %struct.Reg* %16623, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %16624 to i64*
  %16625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16626 = getelementptr inbounds %struct.GPR, %struct.GPR* %16625, i32 0, i32 9
  %16627 = getelementptr inbounds %struct.Reg, %struct.Reg* %16626, i32 0, i32 0
  %RSI.i976 = bitcast %union.anon* %16627 to i64*
  %16628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16629 = getelementptr inbounds %struct.GPR, %struct.GPR* %16628, i32 0, i32 11
  %16630 = getelementptr inbounds %struct.Reg, %struct.Reg* %16629, i32 0, i32 0
  %RDI.i977 = bitcast %union.anon* %16630 to i64*
  %16631 = load i64, i64* %RSI.i976
  %16632 = load i64, i64* %RDI.i977
  %16633 = load i64, i64* %PC.i975
  %16634 = add i64 %16633, 3
  store i64 %16634, i64* %PC.i975
  %16635 = add i64 %16632, %16631
  store i64 %16635, i64* %RSI.i976, align 8
  %16636 = icmp ult i64 %16635, %16631
  %16637 = icmp ult i64 %16635, %16632
  %16638 = or i1 %16636, %16637
  %16639 = zext i1 %16638 to i8
  %16640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16639, i8* %16640, align 1
  %16641 = trunc i64 %16635 to i32
  %16642 = and i32 %16641, 255
  %16643 = call i32 @llvm.ctpop.i32(i32 %16642)
  %16644 = trunc i32 %16643 to i8
  %16645 = and i8 %16644, 1
  %16646 = xor i8 %16645, 1
  %16647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16646, i8* %16647, align 1
  %16648 = xor i64 %16632, %16631
  %16649 = xor i64 %16648, %16635
  %16650 = lshr i64 %16649, 4
  %16651 = trunc i64 %16650 to i8
  %16652 = and i8 %16651, 1
  %16653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16652, i8* %16653, align 1
  %16654 = icmp eq i64 %16635, 0
  %16655 = zext i1 %16654 to i8
  %16656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16655, i8* %16656, align 1
  %16657 = lshr i64 %16635, 63
  %16658 = trunc i64 %16657 to i8
  %16659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16658, i8* %16659, align 1
  %16660 = lshr i64 %16631, 63
  %16661 = lshr i64 %16632, 63
  %16662 = xor i64 %16657, %16660
  %16663 = xor i64 %16657, %16661
  %16664 = add i64 %16662, %16663
  %16665 = icmp eq i64 %16664, 2
  %16666 = zext i1 %16665 to i8
  %16667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16666, i8* %16667, align 1
  store %struct.Memory* %loadMem_406e77, %struct.Memory** %MEMORY
  %loadMem_406e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16669 = getelementptr inbounds %struct.GPR, %struct.GPR* %16668, i32 0, i32 33
  %16670 = getelementptr inbounds %struct.Reg, %struct.Reg* %16669, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %16670 to i64*
  %16671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16672 = getelementptr inbounds %struct.GPR, %struct.GPR* %16671, i32 0, i32 9
  %16673 = getelementptr inbounds %struct.Reg, %struct.Reg* %16672, i32 0, i32 0
  %RSI.i974 = bitcast %union.anon* %16673 to i64*
  %16674 = load i64, i64* %RSI.i974
  %16675 = load i64, i64* %PC.i973
  %16676 = add i64 %16675, 4
  store i64 %16676, i64* %PC.i973
  %16677 = add i64 32, %16674
  store i64 %16677, i64* %RSI.i974, align 8
  %16678 = icmp ult i64 %16677, %16674
  %16679 = icmp ult i64 %16677, 32
  %16680 = or i1 %16678, %16679
  %16681 = zext i1 %16680 to i8
  %16682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16681, i8* %16682, align 1
  %16683 = trunc i64 %16677 to i32
  %16684 = and i32 %16683, 255
  %16685 = call i32 @llvm.ctpop.i32(i32 %16684)
  %16686 = trunc i32 %16685 to i8
  %16687 = and i8 %16686, 1
  %16688 = xor i8 %16687, 1
  %16689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16688, i8* %16689, align 1
  %16690 = xor i64 32, %16674
  %16691 = xor i64 %16690, %16677
  %16692 = lshr i64 %16691, 4
  %16693 = trunc i64 %16692 to i8
  %16694 = and i8 %16693, 1
  %16695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16694, i8* %16695, align 1
  %16696 = icmp eq i64 %16677, 0
  %16697 = zext i1 %16696 to i8
  %16698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16697, i8* %16698, align 1
  %16699 = lshr i64 %16677, 63
  %16700 = trunc i64 %16699 to i8
  %16701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16700, i8* %16701, align 1
  %16702 = lshr i64 %16674, 63
  %16703 = xor i64 %16699, %16702
  %16704 = add i64 %16703, %16699
  %16705 = icmp eq i64 %16704, 2
  %16706 = zext i1 %16705 to i8
  %16707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16706, i8* %16707, align 1
  store %struct.Memory* %loadMem_406e7a, %struct.Memory** %MEMORY
  %loadMem_406e7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16709 = getelementptr inbounds %struct.GPR, %struct.GPR* %16708, i32 0, i32 33
  %16710 = getelementptr inbounds %struct.Reg, %struct.Reg* %16709, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %16710 to i64*
  %16711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16712 = getelementptr inbounds %struct.GPR, %struct.GPR* %16711, i32 0, i32 9
  %16713 = getelementptr inbounds %struct.Reg, %struct.Reg* %16712, i32 0, i32 0
  %RSI.i972 = bitcast %union.anon* %16713 to i64*
  %16714 = load i64, i64* %RSI.i972
  %16715 = load i64, i64* %PC.i971
  %16716 = add i64 %16715, 4
  store i64 %16716, i64* %PC.i971
  %16717 = ashr i64 %16714, 5
  %16718 = trunc i64 %16717 to i8
  %16719 = and i8 %16718, 1
  %16720 = ashr i64 %16717, 1
  store i64 %16720, i64* %RSI.i972, align 8
  %16721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16719, i8* %16721, align 1
  %16722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16723 = trunc i64 %16720 to i32
  %16724 = and i32 %16723, 255
  %16725 = call i32 @llvm.ctpop.i32(i32 %16724)
  %16726 = trunc i32 %16725 to i8
  %16727 = and i8 %16726, 1
  %16728 = xor i8 %16727, 1
  store i8 %16728, i8* %16722, align 1
  %16729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16729, align 1
  %16730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16731 = icmp eq i64 %16720, 0
  %16732 = zext i1 %16731 to i8
  store i8 %16732, i8* %16730, align 1
  %16733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16734 = lshr i64 %16720, 63
  %16735 = trunc i64 %16734 to i8
  store i8 %16735, i8* %16733, align 1
  %16736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16736, align 1
  store %struct.Memory* %loadMem_406e7e, %struct.Memory** %MEMORY
  %loadMem_406e82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16738 = getelementptr inbounds %struct.GPR, %struct.GPR* %16737, i32 0, i32 33
  %16739 = getelementptr inbounds %struct.Reg, %struct.Reg* %16738, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %16739 to i64*
  %16740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16741 = getelementptr inbounds %struct.GPR, %struct.GPR* %16740, i32 0, i32 5
  %16742 = getelementptr inbounds %struct.Reg, %struct.Reg* %16741, i32 0, i32 0
  %RCX.i969 = bitcast %union.anon* %16742 to i64*
  %16743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16744 = getelementptr inbounds %struct.GPR, %struct.GPR* %16743, i32 0, i32 9
  %16745 = getelementptr inbounds %struct.Reg, %struct.Reg* %16744, i32 0, i32 0
  %RSI.i970 = bitcast %union.anon* %16745 to i64*
  %16746 = load i64, i64* %RCX.i969
  %16747 = load i64, i64* %RSI.i970
  %16748 = load i64, i64* %PC.i968
  %16749 = add i64 %16748, 3
  store i64 %16749, i64* %PC.i968
  %16750 = sub i64 %16746, %16747
  %16751 = icmp ult i64 %16746, %16747
  %16752 = zext i1 %16751 to i8
  %16753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16752, i8* %16753, align 1
  %16754 = trunc i64 %16750 to i32
  %16755 = and i32 %16754, 255
  %16756 = call i32 @llvm.ctpop.i32(i32 %16755)
  %16757 = trunc i32 %16756 to i8
  %16758 = and i8 %16757, 1
  %16759 = xor i8 %16758, 1
  %16760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16759, i8* %16760, align 1
  %16761 = xor i64 %16747, %16746
  %16762 = xor i64 %16761, %16750
  %16763 = lshr i64 %16762, 4
  %16764 = trunc i64 %16763 to i8
  %16765 = and i8 %16764, 1
  %16766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16765, i8* %16766, align 1
  %16767 = icmp eq i64 %16750, 0
  %16768 = zext i1 %16767 to i8
  %16769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16768, i8* %16769, align 1
  %16770 = lshr i64 %16750, 63
  %16771 = trunc i64 %16770 to i8
  %16772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16771, i8* %16772, align 1
  %16773 = lshr i64 %16746, 63
  %16774 = lshr i64 %16747, 63
  %16775 = xor i64 %16774, %16773
  %16776 = xor i64 %16770, %16773
  %16777 = add i64 %16776, %16775
  %16778 = icmp eq i64 %16777, 2
  %16779 = zext i1 %16778 to i8
  %16780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16779, i8* %16780, align 1
  store %struct.Memory* %loadMem_406e82, %struct.Memory** %MEMORY
  %loadMem_406e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16782 = getelementptr inbounds %struct.GPR, %struct.GPR* %16781, i32 0, i32 33
  %16783 = getelementptr inbounds %struct.Reg, %struct.Reg* %16782, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %16783 to i64*
  %16784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16785 = getelementptr inbounds %struct.GPR, %struct.GPR* %16784, i32 0, i32 7
  %16786 = getelementptr inbounds %struct.Reg, %struct.Reg* %16785, i32 0, i32 0
  %RDX.i966 = bitcast %union.anon* %16786 to i64*
  %16787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16788 = getelementptr inbounds %struct.GPR, %struct.GPR* %16787, i32 0, i32 15
  %16789 = getelementptr inbounds %struct.Reg, %struct.Reg* %16788, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %16789 to i64*
  %16790 = load i64, i64* %RBP.i967
  %16791 = sub i64 %16790, 200
  %16792 = load i64, i64* %RDX.i966
  %16793 = load i64, i64* %PC.i965
  %16794 = add i64 %16793, 7
  store i64 %16794, i64* %PC.i965
  %16795 = inttoptr i64 %16791 to i64*
  store i64 %16792, i64* %16795
  store %struct.Memory* %loadMem_406e85, %struct.Memory** %MEMORY
  %loadMem_406e8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16797 = getelementptr inbounds %struct.GPR, %struct.GPR* %16796, i32 0, i32 33
  %16798 = getelementptr inbounds %struct.Reg, %struct.Reg* %16797, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %16798 to i64*
  %16799 = load i64, i64* %PC.i964
  %16800 = add i64 %16799, 22
  %16801 = load i64, i64* %PC.i964
  %16802 = add i64 %16801, 6
  %16803 = load i64, i64* %PC.i964
  %16804 = add i64 %16803, 6
  store i64 %16804, i64* %PC.i964
  %16805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16806 = load i8, i8* %16805, align 1
  %16807 = icmp ne i8 %16806, 0
  %16808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16809 = load i8, i8* %16808, align 1
  %16810 = icmp ne i8 %16809, 0
  %16811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16812 = load i8, i8* %16811, align 1
  %16813 = icmp ne i8 %16812, 0
  %16814 = xor i1 %16810, %16813
  %16815 = or i1 %16807, %16814
  %16816 = zext i1 %16815 to i8
  store i8 %16816, i8* %BRANCH_TAKEN, align 1
  %16817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16818 = select i1 %16815, i64 %16800, i64 %16802
  store i64 %16818, i64* %16817, align 8
  store %struct.Memory* %loadMem_406e8c, %struct.Memory** %MEMORY
  %loadBr_406e8c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406e8c = icmp eq i8 %loadBr_406e8c, 1
  br i1 %cmpBr_406e8c, label %block_.L_406ea2, label %block_406e92

block_406e92:                                     ; preds = %block_406e1e
  %loadMem_406e92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16820 = getelementptr inbounds %struct.GPR, %struct.GPR* %16819, i32 0, i32 33
  %16821 = getelementptr inbounds %struct.Reg, %struct.Reg* %16820, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %16821 to i64*
  %16822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16823 = getelementptr inbounds %struct.GPR, %struct.GPR* %16822, i32 0, i32 1
  %16824 = getelementptr inbounds %struct.Reg, %struct.Reg* %16823, i32 0, i32 0
  %EAX.i962 = bitcast %union.anon* %16824 to i32*
  %16825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16826 = getelementptr inbounds %struct.GPR, %struct.GPR* %16825, i32 0, i32 1
  %16827 = getelementptr inbounds %struct.Reg, %struct.Reg* %16826, i32 0, i32 0
  %RAX.i963 = bitcast %union.anon* %16827 to i64*
  %16828 = load i64, i64* %RAX.i963
  %16829 = load i32, i32* %EAX.i962
  %16830 = zext i32 %16829 to i64
  %16831 = load i64, i64* %PC.i961
  %16832 = add i64 %16831, 2
  store i64 %16832, i64* %PC.i961
  %16833 = xor i64 %16830, %16828
  %16834 = trunc i64 %16833 to i32
  %16835 = and i64 %16833, 4294967295
  store i64 %16835, i64* %RAX.i963, align 8
  %16836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16836, align 1
  %16837 = and i32 %16834, 255
  %16838 = call i32 @llvm.ctpop.i32(i32 %16837)
  %16839 = trunc i32 %16838 to i8
  %16840 = and i8 %16839, 1
  %16841 = xor i8 %16840, 1
  %16842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16841, i8* %16842, align 1
  %16843 = icmp eq i32 %16834, 0
  %16844 = zext i1 %16843 to i8
  %16845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16844, i8* %16845, align 1
  %16846 = lshr i32 %16834, 31
  %16847 = trunc i32 %16846 to i8
  %16848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16847, i8* %16848, align 1
  %16849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16849, align 1
  %16850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16850, align 1
  store %struct.Memory* %loadMem_406e92, %struct.Memory** %MEMORY
  %loadMem_406e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16852 = getelementptr inbounds %struct.GPR, %struct.GPR* %16851, i32 0, i32 33
  %16853 = getelementptr inbounds %struct.Reg, %struct.Reg* %16852, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %16853 to i64*
  %16854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16855 = getelementptr inbounds %struct.GPR, %struct.GPR* %16854, i32 0, i32 1
  %16856 = getelementptr inbounds %struct.Reg, %struct.Reg* %16855, i32 0, i32 0
  %EAX.i959 = bitcast %union.anon* %16856 to i32*
  %16857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16858 = getelementptr inbounds %struct.GPR, %struct.GPR* %16857, i32 0, i32 5
  %16859 = getelementptr inbounds %struct.Reg, %struct.Reg* %16858, i32 0, i32 0
  %RCX.i960 = bitcast %union.anon* %16859 to i64*
  %16860 = load i32, i32* %EAX.i959
  %16861 = zext i32 %16860 to i64
  %16862 = load i64, i64* %PC.i958
  %16863 = add i64 %16862, 2
  store i64 %16863, i64* %PC.i958
  %16864 = and i64 %16861, 4294967295
  store i64 %16864, i64* %RCX.i960, align 8
  store %struct.Memory* %loadMem_406e94, %struct.Memory** %MEMORY
  %loadMem_406e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16866 = getelementptr inbounds %struct.GPR, %struct.GPR* %16865, i32 0, i32 33
  %16867 = getelementptr inbounds %struct.Reg, %struct.Reg* %16866, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %16867 to i64*
  %16868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16869 = getelementptr inbounds %struct.GPR, %struct.GPR* %16868, i32 0, i32 5
  %16870 = getelementptr inbounds %struct.Reg, %struct.Reg* %16869, i32 0, i32 0
  %RCX.i956 = bitcast %union.anon* %16870 to i64*
  %16871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16872 = getelementptr inbounds %struct.GPR, %struct.GPR* %16871, i32 0, i32 15
  %16873 = getelementptr inbounds %struct.Reg, %struct.Reg* %16872, i32 0, i32 0
  %RBP.i957 = bitcast %union.anon* %16873 to i64*
  %16874 = load i64, i64* %RBP.i957
  %16875 = sub i64 %16874, 208
  %16876 = load i64, i64* %RCX.i956
  %16877 = load i64, i64* %PC.i955
  %16878 = add i64 %16877, 7
  store i64 %16878, i64* %PC.i955
  %16879 = inttoptr i64 %16875 to i64*
  store i64 %16876, i64* %16879
  store %struct.Memory* %loadMem_406e96, %struct.Memory** %MEMORY
  %loadMem_406e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16881 = getelementptr inbounds %struct.GPR, %struct.GPR* %16880, i32 0, i32 33
  %16882 = getelementptr inbounds %struct.Reg, %struct.Reg* %16881, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %16882 to i64*
  %16883 = load i64, i64* %PC.i954
  %16884 = add i64 %16883, 92
  %16885 = load i64, i64* %PC.i954
  %16886 = add i64 %16885, 5
  store i64 %16886, i64* %PC.i954
  %16887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16884, i64* %16887, align 8
  store %struct.Memory* %loadMem_406e9d, %struct.Memory** %MEMORY
  br label %block_.L_406ef9

block_.L_406ea2:                                  ; preds = %block_406e1e
  %loadMem_406ea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16889 = getelementptr inbounds %struct.GPR, %struct.GPR* %16888, i32 0, i32 33
  %16890 = getelementptr inbounds %struct.Reg, %struct.Reg* %16889, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %16890 to i64*
  %16891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16892 = getelementptr inbounds %struct.GPR, %struct.GPR* %16891, i32 0, i32 1
  %16893 = getelementptr inbounds %struct.Reg, %struct.Reg* %16892, i32 0, i32 0
  %RAX.i952 = bitcast %union.anon* %16893 to i64*
  %16894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16895 = getelementptr inbounds %struct.GPR, %struct.GPR* %16894, i32 0, i32 15
  %16896 = getelementptr inbounds %struct.Reg, %struct.Reg* %16895, i32 0, i32 0
  %RBP.i953 = bitcast %union.anon* %16896 to i64*
  %16897 = load i64, i64* %RBP.i953
  %16898 = sub i64 %16897, 28
  %16899 = load i64, i64* %PC.i951
  %16900 = add i64 %16899, 4
  store i64 %16900, i64* %PC.i951
  %16901 = inttoptr i64 %16898 to i32*
  %16902 = load i32, i32* %16901
  %16903 = sext i32 %16902 to i64
  store i64 %16903, i64* %RAX.i952, align 8
  store %struct.Memory* %loadMem_406ea2, %struct.Memory** %MEMORY
  %loadMem_406ea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16905 = getelementptr inbounds %struct.GPR, %struct.GPR* %16904, i32 0, i32 33
  %16906 = getelementptr inbounds %struct.Reg, %struct.Reg* %16905, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %16906 to i64*
  %16907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16908 = getelementptr inbounds %struct.GPR, %struct.GPR* %16907, i32 0, i32 1
  %16909 = getelementptr inbounds %struct.Reg, %struct.Reg* %16908, i32 0, i32 0
  %RAX.i948 = bitcast %union.anon* %16909 to i64*
  %16910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16911 = getelementptr inbounds %struct.GPR, %struct.GPR* %16910, i32 0, i32 5
  %16912 = getelementptr inbounds %struct.Reg, %struct.Reg* %16911, i32 0, i32 0
  %RCX.i949 = bitcast %union.anon* %16912 to i64*
  %16913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16914 = getelementptr inbounds %struct.GPR, %struct.GPR* %16913, i32 0, i32 15
  %16915 = getelementptr inbounds %struct.Reg, %struct.Reg* %16914, i32 0, i32 0
  %RBP.i950 = bitcast %union.anon* %16915 to i64*
  %16916 = load i64, i64* %RBP.i950
  %16917 = load i64, i64* %RAX.i948
  %16918 = mul i64 %16917, 4
  %16919 = add i64 %16916, -80
  %16920 = add i64 %16919, %16918
  %16921 = load i64, i64* %PC.i947
  %16922 = add i64 %16921, 4
  store i64 %16922, i64* %PC.i947
  %16923 = inttoptr i64 %16920 to i32*
  %16924 = load i32, i32* %16923
  %16925 = zext i32 %16924 to i64
  store i64 %16925, i64* %RCX.i949, align 8
  store %struct.Memory* %loadMem_406ea6, %struct.Memory** %MEMORY
  %loadMem_406eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %16926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16927 = getelementptr inbounds %struct.GPR, %struct.GPR* %16926, i32 0, i32 33
  %16928 = getelementptr inbounds %struct.Reg, %struct.Reg* %16927, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %16928 to i64*
  %16929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16930 = getelementptr inbounds %struct.GPR, %struct.GPR* %16929, i32 0, i32 1
  %16931 = getelementptr inbounds %struct.Reg, %struct.Reg* %16930, i32 0, i32 0
  %RAX.i945 = bitcast %union.anon* %16931 to i64*
  %16932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16933 = getelementptr inbounds %struct.GPR, %struct.GPR* %16932, i32 0, i32 15
  %16934 = getelementptr inbounds %struct.Reg, %struct.Reg* %16933, i32 0, i32 0
  %RBP.i946 = bitcast %union.anon* %16934 to i64*
  %16935 = load i64, i64* %RBP.i946
  %16936 = sub i64 %16935, 36
  %16937 = load i64, i64* %PC.i944
  %16938 = add i64 %16937, 4
  store i64 %16938, i64* %PC.i944
  %16939 = inttoptr i64 %16936 to i32*
  %16940 = load i32, i32* %16939
  %16941 = sext i32 %16940 to i64
  store i64 %16941, i64* %RAX.i945, align 8
  store %struct.Memory* %loadMem_406eaa, %struct.Memory** %MEMORY
  %loadMem_406eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %16942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16943 = getelementptr inbounds %struct.GPR, %struct.GPR* %16942, i32 0, i32 33
  %16944 = getelementptr inbounds %struct.Reg, %struct.Reg* %16943, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %16944 to i64*
  %16945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16946 = getelementptr inbounds %struct.GPR, %struct.GPR* %16945, i32 0, i32 1
  %16947 = getelementptr inbounds %struct.Reg, %struct.Reg* %16946, i32 0, i32 0
  %RAX.i941 = bitcast %union.anon* %16947 to i64*
  %16948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16949 = getelementptr inbounds %struct.GPR, %struct.GPR* %16948, i32 0, i32 5
  %16950 = getelementptr inbounds %struct.Reg, %struct.Reg* %16949, i32 0, i32 0
  %RCX.i942 = bitcast %union.anon* %16950 to i64*
  %16951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16952 = getelementptr inbounds %struct.GPR, %struct.GPR* %16951, i32 0, i32 15
  %16953 = getelementptr inbounds %struct.Reg, %struct.Reg* %16952, i32 0, i32 0
  %RBP.i943 = bitcast %union.anon* %16953 to i64*
  %16954 = load i64, i64* %RCX.i942
  %16955 = load i64, i64* %RBP.i943
  %16956 = load i64, i64* %RAX.i941
  %16957 = mul i64 %16956, 4
  %16958 = add i64 %16955, -80
  %16959 = add i64 %16958, %16957
  %16960 = load i64, i64* %PC.i940
  %16961 = add i64 %16960, 4
  store i64 %16961, i64* %PC.i940
  %16962 = trunc i64 %16954 to i32
  %16963 = inttoptr i64 %16959 to i32*
  %16964 = load i32, i32* %16963
  %16965 = add i32 %16964, %16962
  %16966 = zext i32 %16965 to i64
  store i64 %16966, i64* %RCX.i942, align 8
  %16967 = icmp ult i32 %16965, %16962
  %16968 = icmp ult i32 %16965, %16964
  %16969 = or i1 %16967, %16968
  %16970 = zext i1 %16969 to i8
  %16971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16970, i8* %16971, align 1
  %16972 = and i32 %16965, 255
  %16973 = call i32 @llvm.ctpop.i32(i32 %16972)
  %16974 = trunc i32 %16973 to i8
  %16975 = and i8 %16974, 1
  %16976 = xor i8 %16975, 1
  %16977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16976, i8* %16977, align 1
  %16978 = xor i32 %16964, %16962
  %16979 = xor i32 %16978, %16965
  %16980 = lshr i32 %16979, 4
  %16981 = trunc i32 %16980 to i8
  %16982 = and i8 %16981, 1
  %16983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16982, i8* %16983, align 1
  %16984 = icmp eq i32 %16965, 0
  %16985 = zext i1 %16984 to i8
  %16986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16985, i8* %16986, align 1
  %16987 = lshr i32 %16965, 31
  %16988 = trunc i32 %16987 to i8
  %16989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16988, i8* %16989, align 1
  %16990 = lshr i32 %16962, 31
  %16991 = lshr i32 %16964, 31
  %16992 = xor i32 %16987, %16990
  %16993 = xor i32 %16987, %16991
  %16994 = add i32 %16992, %16993
  %16995 = icmp eq i32 %16994, 2
  %16996 = zext i1 %16995 to i8
  %16997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16996, i8* %16997, align 1
  store %struct.Memory* %loadMem_406eae, %struct.Memory** %MEMORY
  %loadMem_406eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16999 = getelementptr inbounds %struct.GPR, %struct.GPR* %16998, i32 0, i32 33
  %17000 = getelementptr inbounds %struct.Reg, %struct.Reg* %16999, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %17000 to i64*
  %17001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17002 = getelementptr inbounds %struct.GPR, %struct.GPR* %17001, i32 0, i32 5
  %17003 = getelementptr inbounds %struct.Reg, %struct.Reg* %17002, i32 0, i32 0
  %ECX.i938 = bitcast %union.anon* %17003 to i32*
  %17004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17005 = getelementptr inbounds %struct.GPR, %struct.GPR* %17004, i32 0, i32 1
  %17006 = getelementptr inbounds %struct.Reg, %struct.Reg* %17005, i32 0, i32 0
  %RAX.i939 = bitcast %union.anon* %17006 to i64*
  %17007 = load i32, i32* %ECX.i938
  %17008 = zext i32 %17007 to i64
  %17009 = load i64, i64* %PC.i937
  %17010 = add i64 %17009, 3
  store i64 %17010, i64* %PC.i937
  %17011 = shl i64 %17008, 32
  %17012 = ashr exact i64 %17011, 32
  store i64 %17012, i64* %RAX.i939, align 8
  store %struct.Memory* %loadMem_406eb2, %struct.Memory** %MEMORY
  %loadMem_406eb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17014 = getelementptr inbounds %struct.GPR, %struct.GPR* %17013, i32 0, i32 33
  %17015 = getelementptr inbounds %struct.Reg, %struct.Reg* %17014, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %17015 to i64*
  %17016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17017 = getelementptr inbounds %struct.GPR, %struct.GPR* %17016, i32 0, i32 7
  %17018 = getelementptr inbounds %struct.Reg, %struct.Reg* %17017, i32 0, i32 0
  %RDX.i936 = bitcast %union.anon* %17018 to i64*
  %17019 = load i64, i64* %PC.i935
  %17020 = add i64 %17019, 8
  store i64 %17020, i64* %PC.i935
  %17021 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17021, i64* %RDX.i936, align 8
  store %struct.Memory* %loadMem_406eb5, %struct.Memory** %MEMORY
  %loadMem_406ebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17023 = getelementptr inbounds %struct.GPR, %struct.GPR* %17022, i32 0, i32 33
  %17024 = getelementptr inbounds %struct.Reg, %struct.Reg* %17023, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %17024 to i64*
  %17025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17026 = getelementptr inbounds %struct.GPR, %struct.GPR* %17025, i32 0, i32 7
  %17027 = getelementptr inbounds %struct.Reg, %struct.Reg* %17026, i32 0, i32 0
  %RDX.i934 = bitcast %union.anon* %17027 to i64*
  %17028 = load i64, i64* %RDX.i934
  %17029 = load i64, i64* %PC.i933
  %17030 = add i64 %17029, 7
  store i64 %17030, i64* %PC.i933
  %17031 = add i64 12600, %17028
  store i64 %17031, i64* %RDX.i934, align 8
  %17032 = icmp ult i64 %17031, %17028
  %17033 = icmp ult i64 %17031, 12600
  %17034 = or i1 %17032, %17033
  %17035 = zext i1 %17034 to i8
  %17036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17035, i8* %17036, align 1
  %17037 = trunc i64 %17031 to i32
  %17038 = and i32 %17037, 255
  %17039 = call i32 @llvm.ctpop.i32(i32 %17038)
  %17040 = trunc i32 %17039 to i8
  %17041 = and i8 %17040, 1
  %17042 = xor i8 %17041, 1
  %17043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17042, i8* %17043, align 1
  %17044 = xor i64 12600, %17028
  %17045 = xor i64 %17044, %17031
  %17046 = lshr i64 %17045, 4
  %17047 = trunc i64 %17046 to i8
  %17048 = and i8 %17047, 1
  %17049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17048, i8* %17049, align 1
  %17050 = icmp eq i64 %17031, 0
  %17051 = zext i1 %17050 to i8
  %17052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17051, i8* %17052, align 1
  %17053 = lshr i64 %17031, 63
  %17054 = trunc i64 %17053 to i8
  %17055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17054, i8* %17055, align 1
  %17056 = lshr i64 %17028, 63
  %17057 = xor i64 %17053, %17056
  %17058 = add i64 %17057, %17053
  %17059 = icmp eq i64 %17058, 2
  %17060 = zext i1 %17059 to i8
  %17061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17060, i8* %17061, align 1
  store %struct.Memory* %loadMem_406ebd, %struct.Memory** %MEMORY
  %loadMem_406ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17063 = getelementptr inbounds %struct.GPR, %struct.GPR* %17062, i32 0, i32 33
  %17064 = getelementptr inbounds %struct.Reg, %struct.Reg* %17063, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %17064 to i64*
  %17065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17066 = getelementptr inbounds %struct.GPR, %struct.GPR* %17065, i32 0, i32 5
  %17067 = getelementptr inbounds %struct.Reg, %struct.Reg* %17066, i32 0, i32 0
  %RCX.i931 = bitcast %union.anon* %17067 to i64*
  %17068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17069 = getelementptr inbounds %struct.GPR, %struct.GPR* %17068, i32 0, i32 15
  %17070 = getelementptr inbounds %struct.Reg, %struct.Reg* %17069, i32 0, i32 0
  %RBP.i932 = bitcast %union.anon* %17070 to i64*
  %17071 = load i64, i64* %RBP.i932
  %17072 = sub i64 %17071, 24
  %17073 = load i64, i64* %PC.i930
  %17074 = add i64 %17073, 3
  store i64 %17074, i64* %PC.i930
  %17075 = inttoptr i64 %17072 to i32*
  %17076 = load i32, i32* %17075
  %17077 = zext i32 %17076 to i64
  store i64 %17077, i64* %RCX.i931, align 8
  store %struct.Memory* %loadMem_406ec4, %struct.Memory** %MEMORY
  %loadMem_406ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17079 = getelementptr inbounds %struct.GPR, %struct.GPR* %17078, i32 0, i32 33
  %17080 = getelementptr inbounds %struct.Reg, %struct.Reg* %17079, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %17080 to i64*
  %17081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17082 = getelementptr inbounds %struct.GPR, %struct.GPR* %17081, i32 0, i32 5
  %17083 = getelementptr inbounds %struct.Reg, %struct.Reg* %17082, i32 0, i32 0
  %RCX.i928 = bitcast %union.anon* %17083 to i64*
  %17084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17085 = getelementptr inbounds %struct.GPR, %struct.GPR* %17084, i32 0, i32 15
  %17086 = getelementptr inbounds %struct.Reg, %struct.Reg* %17085, i32 0, i32 0
  %RBP.i929 = bitcast %union.anon* %17086 to i64*
  %17087 = load i64, i64* %RCX.i928
  %17088 = load i64, i64* %RBP.i929
  %17089 = sub i64 %17088, 4
  %17090 = load i64, i64* %PC.i927
  %17091 = add i64 %17090, 3
  store i64 %17091, i64* %PC.i927
  %17092 = trunc i64 %17087 to i32
  %17093 = inttoptr i64 %17089 to i32*
  %17094 = load i32, i32* %17093
  %17095 = add i32 %17094, %17092
  %17096 = zext i32 %17095 to i64
  store i64 %17096, i64* %RCX.i928, align 8
  %17097 = icmp ult i32 %17095, %17092
  %17098 = icmp ult i32 %17095, %17094
  %17099 = or i1 %17097, %17098
  %17100 = zext i1 %17099 to i8
  %17101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17100, i8* %17101, align 1
  %17102 = and i32 %17095, 255
  %17103 = call i32 @llvm.ctpop.i32(i32 %17102)
  %17104 = trunc i32 %17103 to i8
  %17105 = and i8 %17104, 1
  %17106 = xor i8 %17105, 1
  %17107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17106, i8* %17107, align 1
  %17108 = xor i32 %17094, %17092
  %17109 = xor i32 %17108, %17095
  %17110 = lshr i32 %17109, 4
  %17111 = trunc i32 %17110 to i8
  %17112 = and i8 %17111, 1
  %17113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17112, i8* %17113, align 1
  %17114 = icmp eq i32 %17095, 0
  %17115 = zext i1 %17114 to i8
  %17116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17115, i8* %17116, align 1
  %17117 = lshr i32 %17095, 31
  %17118 = trunc i32 %17117 to i8
  %17119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17118, i8* %17119, align 1
  %17120 = lshr i32 %17092, 31
  %17121 = lshr i32 %17094, 31
  %17122 = xor i32 %17117, %17120
  %17123 = xor i32 %17117, %17121
  %17124 = add i32 %17122, %17123
  %17125 = icmp eq i32 %17124, 2
  %17126 = zext i1 %17125 to i8
  %17127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17126, i8* %17127, align 1
  store %struct.Memory* %loadMem_406ec7, %struct.Memory** %MEMORY
  %loadMem_406eca = load %struct.Memory*, %struct.Memory** %MEMORY
  %17128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17129 = getelementptr inbounds %struct.GPR, %struct.GPR* %17128, i32 0, i32 33
  %17130 = getelementptr inbounds %struct.Reg, %struct.Reg* %17129, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %17130 to i64*
  %17131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17132 = getelementptr inbounds %struct.GPR, %struct.GPR* %17131, i32 0, i32 5
  %17133 = getelementptr inbounds %struct.Reg, %struct.Reg* %17132, i32 0, i32 0
  %ECX.i925 = bitcast %union.anon* %17133 to i32*
  %17134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17135 = getelementptr inbounds %struct.GPR, %struct.GPR* %17134, i32 0, i32 9
  %17136 = getelementptr inbounds %struct.Reg, %struct.Reg* %17135, i32 0, i32 0
  %RSI.i926 = bitcast %union.anon* %17136 to i64*
  %17137 = load i32, i32* %ECX.i925
  %17138 = zext i32 %17137 to i64
  %17139 = load i64, i64* %PC.i924
  %17140 = add i64 %17139, 3
  store i64 %17140, i64* %PC.i924
  %17141 = shl i64 %17138, 32
  %17142 = ashr exact i64 %17141, 32
  store i64 %17142, i64* %RSI.i926, align 8
  store %struct.Memory* %loadMem_406eca, %struct.Memory** %MEMORY
  %loadMem_406ecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17144 = getelementptr inbounds %struct.GPR, %struct.GPR* %17143, i32 0, i32 33
  %17145 = getelementptr inbounds %struct.Reg, %struct.Reg* %17144, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %17145 to i64*
  %17146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17147 = getelementptr inbounds %struct.GPR, %struct.GPR* %17146, i32 0, i32 9
  %17148 = getelementptr inbounds %struct.Reg, %struct.Reg* %17147, i32 0, i32 0
  %RSI.i923 = bitcast %union.anon* %17148 to i64*
  %17149 = load i64, i64* %RSI.i923
  %17150 = load i64, i64* %PC.i922
  %17151 = add i64 %17150, 4
  store i64 %17151, i64* %PC.i922
  %17152 = shl i64 %17149, 4
  %17153 = icmp slt i64 %17152, 0
  %17154 = shl i64 %17152, 1
  store i64 %17154, i64* %RSI.i923, align 8
  %17155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17156 = zext i1 %17153 to i8
  store i8 %17156, i8* %17155, align 1
  %17157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17158 = trunc i64 %17154 to i32
  %17159 = and i32 %17158, 254
  %17160 = call i32 @llvm.ctpop.i32(i32 %17159)
  %17161 = trunc i32 %17160 to i8
  %17162 = and i8 %17161, 1
  %17163 = xor i8 %17162, 1
  store i8 %17163, i8* %17157, align 1
  %17164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17164, align 1
  %17165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17166 = icmp eq i64 %17154, 0
  %17167 = zext i1 %17166 to i8
  store i8 %17167, i8* %17165, align 1
  %17168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17169 = lshr i64 %17154, 63
  %17170 = trunc i64 %17169 to i8
  store i8 %17170, i8* %17168, align 1
  %17171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17171, align 1
  store %struct.Memory* %loadMem_406ecd, %struct.Memory** %MEMORY
  %loadMem_406ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17173 = getelementptr inbounds %struct.GPR, %struct.GPR* %17172, i32 0, i32 33
  %17174 = getelementptr inbounds %struct.Reg, %struct.Reg* %17173, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %17174 to i64*
  %17175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17176 = getelementptr inbounds %struct.GPR, %struct.GPR* %17175, i32 0, i32 7
  %17177 = getelementptr inbounds %struct.Reg, %struct.Reg* %17176, i32 0, i32 0
  %RDX.i920 = bitcast %union.anon* %17177 to i64*
  %17178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17179 = getelementptr inbounds %struct.GPR, %struct.GPR* %17178, i32 0, i32 9
  %17180 = getelementptr inbounds %struct.Reg, %struct.Reg* %17179, i32 0, i32 0
  %RSI.i921 = bitcast %union.anon* %17180 to i64*
  %17181 = load i64, i64* %RDX.i920
  %17182 = load i64, i64* %RSI.i921
  %17183 = load i64, i64* %PC.i919
  %17184 = add i64 %17183, 3
  store i64 %17184, i64* %PC.i919
  %17185 = add i64 %17182, %17181
  store i64 %17185, i64* %RDX.i920, align 8
  %17186 = icmp ult i64 %17185, %17181
  %17187 = icmp ult i64 %17185, %17182
  %17188 = or i1 %17186, %17187
  %17189 = zext i1 %17188 to i8
  %17190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17189, i8* %17190, align 1
  %17191 = trunc i64 %17185 to i32
  %17192 = and i32 %17191, 255
  %17193 = call i32 @llvm.ctpop.i32(i32 %17192)
  %17194 = trunc i32 %17193 to i8
  %17195 = and i8 %17194, 1
  %17196 = xor i8 %17195, 1
  %17197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17196, i8* %17197, align 1
  %17198 = xor i64 %17182, %17181
  %17199 = xor i64 %17198, %17185
  %17200 = lshr i64 %17199, 4
  %17201 = trunc i64 %17200 to i8
  %17202 = and i8 %17201, 1
  %17203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17202, i8* %17203, align 1
  %17204 = icmp eq i64 %17185, 0
  %17205 = zext i1 %17204 to i8
  %17206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17205, i8* %17206, align 1
  %17207 = lshr i64 %17185, 63
  %17208 = trunc i64 %17207 to i8
  %17209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17208, i8* %17209, align 1
  %17210 = lshr i64 %17181, 63
  %17211 = lshr i64 %17182, 63
  %17212 = xor i64 %17207, %17210
  %17213 = xor i64 %17207, %17211
  %17214 = add i64 %17212, %17213
  %17215 = icmp eq i64 %17214, 2
  %17216 = zext i1 %17215 to i8
  %17217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17216, i8* %17217, align 1
  store %struct.Memory* %loadMem_406ed1, %struct.Memory** %MEMORY
  %loadMem_406ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17219 = getelementptr inbounds %struct.GPR, %struct.GPR* %17218, i32 0, i32 33
  %17220 = getelementptr inbounds %struct.Reg, %struct.Reg* %17219, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %17220 to i64*
  %17221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17222 = getelementptr inbounds %struct.GPR, %struct.GPR* %17221, i32 0, i32 5
  %17223 = getelementptr inbounds %struct.Reg, %struct.Reg* %17222, i32 0, i32 0
  %RCX.i917 = bitcast %union.anon* %17223 to i64*
  %17224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17225 = getelementptr inbounds %struct.GPR, %struct.GPR* %17224, i32 0, i32 15
  %17226 = getelementptr inbounds %struct.Reg, %struct.Reg* %17225, i32 0, i32 0
  %RBP.i918 = bitcast %union.anon* %17226 to i64*
  %17227 = load i64, i64* %RBP.i918
  %17228 = sub i64 %17227, 28
  %17229 = load i64, i64* %PC.i916
  %17230 = add i64 %17229, 3
  store i64 %17230, i64* %PC.i916
  %17231 = inttoptr i64 %17228 to i32*
  %17232 = load i32, i32* %17231
  %17233 = zext i32 %17232 to i64
  store i64 %17233, i64* %RCX.i917, align 8
  store %struct.Memory* %loadMem_406ed4, %struct.Memory** %MEMORY
  %loadMem_406ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17235 = getelementptr inbounds %struct.GPR, %struct.GPR* %17234, i32 0, i32 33
  %17236 = getelementptr inbounds %struct.Reg, %struct.Reg* %17235, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %17236 to i64*
  %17237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17238 = getelementptr inbounds %struct.GPR, %struct.GPR* %17237, i32 0, i32 5
  %17239 = getelementptr inbounds %struct.Reg, %struct.Reg* %17238, i32 0, i32 0
  %RCX.i914 = bitcast %union.anon* %17239 to i64*
  %17240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17241 = getelementptr inbounds %struct.GPR, %struct.GPR* %17240, i32 0, i32 15
  %17242 = getelementptr inbounds %struct.Reg, %struct.Reg* %17241, i32 0, i32 0
  %RBP.i915 = bitcast %union.anon* %17242 to i64*
  %17243 = load i64, i64* %RCX.i914
  %17244 = load i64, i64* %RBP.i915
  %17245 = sub i64 %17244, 8
  %17246 = load i64, i64* %PC.i913
  %17247 = add i64 %17246, 3
  store i64 %17247, i64* %PC.i913
  %17248 = trunc i64 %17243 to i32
  %17249 = inttoptr i64 %17245 to i32*
  %17250 = load i32, i32* %17249
  %17251 = add i32 %17250, %17248
  %17252 = zext i32 %17251 to i64
  store i64 %17252, i64* %RCX.i914, align 8
  %17253 = icmp ult i32 %17251, %17248
  %17254 = icmp ult i32 %17251, %17250
  %17255 = or i1 %17253, %17254
  %17256 = zext i1 %17255 to i8
  %17257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17256, i8* %17257, align 1
  %17258 = and i32 %17251, 255
  %17259 = call i32 @llvm.ctpop.i32(i32 %17258)
  %17260 = trunc i32 %17259 to i8
  %17261 = and i8 %17260, 1
  %17262 = xor i8 %17261, 1
  %17263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17262, i8* %17263, align 1
  %17264 = xor i32 %17250, %17248
  %17265 = xor i32 %17264, %17251
  %17266 = lshr i32 %17265, 4
  %17267 = trunc i32 %17266 to i8
  %17268 = and i8 %17267, 1
  %17269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17268, i8* %17269, align 1
  %17270 = icmp eq i32 %17251, 0
  %17271 = zext i1 %17270 to i8
  %17272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17271, i8* %17272, align 1
  %17273 = lshr i32 %17251, 31
  %17274 = trunc i32 %17273 to i8
  %17275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17274, i8* %17275, align 1
  %17276 = lshr i32 %17248, 31
  %17277 = lshr i32 %17250, 31
  %17278 = xor i32 %17273, %17276
  %17279 = xor i32 %17273, %17277
  %17280 = add i32 %17278, %17279
  %17281 = icmp eq i32 %17280, 2
  %17282 = zext i1 %17281 to i8
  %17283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17282, i8* %17283, align 1
  store %struct.Memory* %loadMem_406ed7, %struct.Memory** %MEMORY
  %loadMem_406eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %17284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17285 = getelementptr inbounds %struct.GPR, %struct.GPR* %17284, i32 0, i32 33
  %17286 = getelementptr inbounds %struct.Reg, %struct.Reg* %17285, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %17286 to i64*
  %17287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17288 = getelementptr inbounds %struct.GPR, %struct.GPR* %17287, i32 0, i32 5
  %17289 = getelementptr inbounds %struct.Reg, %struct.Reg* %17288, i32 0, i32 0
  %ECX.i911 = bitcast %union.anon* %17289 to i32*
  %17290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17291 = getelementptr inbounds %struct.GPR, %struct.GPR* %17290, i32 0, i32 9
  %17292 = getelementptr inbounds %struct.Reg, %struct.Reg* %17291, i32 0, i32 0
  %RSI.i912 = bitcast %union.anon* %17292 to i64*
  %17293 = load i32, i32* %ECX.i911
  %17294 = zext i32 %17293 to i64
  %17295 = load i64, i64* %PC.i910
  %17296 = add i64 %17295, 3
  store i64 %17296, i64* %PC.i910
  %17297 = shl i64 %17294, 32
  %17298 = ashr exact i64 %17297, 32
  store i64 %17298, i64* %RSI.i912, align 8
  store %struct.Memory* %loadMem_406eda, %struct.Memory** %MEMORY
  %loadMem_406edd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17300 = getelementptr inbounds %struct.GPR, %struct.GPR* %17299, i32 0, i32 33
  %17301 = getelementptr inbounds %struct.Reg, %struct.Reg* %17300, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %17301 to i64*
  %17302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17303 = getelementptr inbounds %struct.GPR, %struct.GPR* %17302, i32 0, i32 5
  %17304 = getelementptr inbounds %struct.Reg, %struct.Reg* %17303, i32 0, i32 0
  %RCX.i907 = bitcast %union.anon* %17304 to i64*
  %17305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17306 = getelementptr inbounds %struct.GPR, %struct.GPR* %17305, i32 0, i32 7
  %17307 = getelementptr inbounds %struct.Reg, %struct.Reg* %17306, i32 0, i32 0
  %RDX.i908 = bitcast %union.anon* %17307 to i64*
  %17308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17309 = getelementptr inbounds %struct.GPR, %struct.GPR* %17308, i32 0, i32 9
  %17310 = getelementptr inbounds %struct.Reg, %struct.Reg* %17309, i32 0, i32 0
  %RSI.i909 = bitcast %union.anon* %17310 to i64*
  %17311 = load i64, i64* %RDX.i908
  %17312 = load i64, i64* %RSI.i909
  %17313 = mul i64 %17312, 2
  %17314 = add i64 %17313, %17311
  %17315 = load i64, i64* %PC.i906
  %17316 = add i64 %17315, 4
  store i64 %17316, i64* %PC.i906
  %17317 = inttoptr i64 %17314 to i16*
  %17318 = load i16, i16* %17317
  %17319 = zext i16 %17318 to i64
  store i64 %17319, i64* %RCX.i907, align 8
  store %struct.Memory* %loadMem_406edd, %struct.Memory** %MEMORY
  %loadMem_406ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17321 = getelementptr inbounds %struct.GPR, %struct.GPR* %17320, i32 0, i32 33
  %17322 = getelementptr inbounds %struct.Reg, %struct.Reg* %17321, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %17322 to i64*
  %17323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17324 = getelementptr inbounds %struct.GPR, %struct.GPR* %17323, i32 0, i32 5
  %17325 = getelementptr inbounds %struct.Reg, %struct.Reg* %17324, i32 0, i32 0
  %ECX.i904 = bitcast %union.anon* %17325 to i32*
  %17326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17327 = getelementptr inbounds %struct.GPR, %struct.GPR* %17326, i32 0, i32 7
  %17328 = getelementptr inbounds %struct.Reg, %struct.Reg* %17327, i32 0, i32 0
  %RDX.i905 = bitcast %union.anon* %17328 to i64*
  %17329 = load i32, i32* %ECX.i904
  %17330 = zext i32 %17329 to i64
  %17331 = load i64, i64* %PC.i903
  %17332 = add i64 %17331, 2
  store i64 %17332, i64* %PC.i903
  %17333 = and i64 %17330, 4294967295
  store i64 %17333, i64* %RDX.i905, align 8
  store %struct.Memory* %loadMem_406ee1, %struct.Memory** %MEMORY
  %loadMem_406ee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17335 = getelementptr inbounds %struct.GPR, %struct.GPR* %17334, i32 0, i32 33
  %17336 = getelementptr inbounds %struct.Reg, %struct.Reg* %17335, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %17336 to i64*
  %17337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17338 = getelementptr inbounds %struct.GPR, %struct.GPR* %17337, i32 0, i32 7
  %17339 = getelementptr inbounds %struct.Reg, %struct.Reg* %17338, i32 0, i32 0
  %RDX.i902 = bitcast %union.anon* %17339 to i64*
  %17340 = load i64, i64* %RDX.i902
  %17341 = load i64, i64* %PC.i901
  %17342 = add i64 %17341, 4
  store i64 %17342, i64* %PC.i901
  %17343 = shl i64 %17340, 5
  %17344 = icmp slt i64 %17343, 0
  %17345 = shl i64 %17343, 1
  store i64 %17345, i64* %RDX.i902, align 8
  %17346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17347 = zext i1 %17344 to i8
  store i8 %17347, i8* %17346, align 1
  %17348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17349 = trunc i64 %17345 to i32
  %17350 = and i32 %17349, 254
  %17351 = call i32 @llvm.ctpop.i32(i32 %17350)
  %17352 = trunc i32 %17351 to i8
  %17353 = and i8 %17352, 1
  %17354 = xor i8 %17353, 1
  store i8 %17354, i8* %17348, align 1
  %17355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17355, align 1
  %17356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17357 = icmp eq i64 %17345, 0
  %17358 = zext i1 %17357 to i8
  store i8 %17358, i8* %17356, align 1
  %17359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17360 = lshr i64 %17345, 63
  %17361 = trunc i64 %17360 to i8
  store i8 %17361, i8* %17359, align 1
  %17362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17362, align 1
  store %struct.Memory* %loadMem_406ee3, %struct.Memory** %MEMORY
  %loadMem_406ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17364 = getelementptr inbounds %struct.GPR, %struct.GPR* %17363, i32 0, i32 33
  %17365 = getelementptr inbounds %struct.Reg, %struct.Reg* %17364, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %17365 to i64*
  %17366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17367 = getelementptr inbounds %struct.GPR, %struct.GPR* %17366, i32 0, i32 1
  %17368 = getelementptr inbounds %struct.Reg, %struct.Reg* %17367, i32 0, i32 0
  %RAX.i899 = bitcast %union.anon* %17368 to i64*
  %17369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17370 = getelementptr inbounds %struct.GPR, %struct.GPR* %17369, i32 0, i32 7
  %17371 = getelementptr inbounds %struct.Reg, %struct.Reg* %17370, i32 0, i32 0
  %RDX.i900 = bitcast %union.anon* %17371 to i64*
  %17372 = load i64, i64* %RAX.i899
  %17373 = load i64, i64* %RDX.i900
  %17374 = load i64, i64* %PC.i898
  %17375 = add i64 %17374, 3
  store i64 %17375, i64* %PC.i898
  %17376 = add i64 %17373, %17372
  store i64 %17376, i64* %RAX.i899, align 8
  %17377 = icmp ult i64 %17376, %17372
  %17378 = icmp ult i64 %17376, %17373
  %17379 = or i1 %17377, %17378
  %17380 = zext i1 %17379 to i8
  %17381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17380, i8* %17381, align 1
  %17382 = trunc i64 %17376 to i32
  %17383 = and i32 %17382, 255
  %17384 = call i32 @llvm.ctpop.i32(i32 %17383)
  %17385 = trunc i32 %17384 to i8
  %17386 = and i8 %17385, 1
  %17387 = xor i8 %17386, 1
  %17388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17387, i8* %17388, align 1
  %17389 = xor i64 %17373, %17372
  %17390 = xor i64 %17389, %17376
  %17391 = lshr i64 %17390, 4
  %17392 = trunc i64 %17391 to i8
  %17393 = and i8 %17392, 1
  %17394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17393, i8* %17394, align 1
  %17395 = icmp eq i64 %17376, 0
  %17396 = zext i1 %17395 to i8
  %17397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17396, i8* %17397, align 1
  %17398 = lshr i64 %17376, 63
  %17399 = trunc i64 %17398 to i8
  %17400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17399, i8* %17400, align 1
  %17401 = lshr i64 %17372, 63
  %17402 = lshr i64 %17373, 63
  %17403 = xor i64 %17398, %17401
  %17404 = xor i64 %17398, %17402
  %17405 = add i64 %17403, %17404
  %17406 = icmp eq i64 %17405, 2
  %17407 = zext i1 %17406 to i8
  %17408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17407, i8* %17408, align 1
  store %struct.Memory* %loadMem_406ee7, %struct.Memory** %MEMORY
  %loadMem_406eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %17409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17410 = getelementptr inbounds %struct.GPR, %struct.GPR* %17409, i32 0, i32 33
  %17411 = getelementptr inbounds %struct.Reg, %struct.Reg* %17410, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %17411 to i64*
  %17412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17413 = getelementptr inbounds %struct.GPR, %struct.GPR* %17412, i32 0, i32 1
  %17414 = getelementptr inbounds %struct.Reg, %struct.Reg* %17413, i32 0, i32 0
  %RAX.i897 = bitcast %union.anon* %17414 to i64*
  %17415 = load i64, i64* %RAX.i897
  %17416 = load i64, i64* %PC.i896
  %17417 = add i64 %17416, 4
  store i64 %17417, i64* %PC.i896
  %17418 = add i64 32, %17415
  store i64 %17418, i64* %RAX.i897, align 8
  %17419 = icmp ult i64 %17418, %17415
  %17420 = icmp ult i64 %17418, 32
  %17421 = or i1 %17419, %17420
  %17422 = zext i1 %17421 to i8
  %17423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17422, i8* %17423, align 1
  %17424 = trunc i64 %17418 to i32
  %17425 = and i32 %17424, 255
  %17426 = call i32 @llvm.ctpop.i32(i32 %17425)
  %17427 = trunc i32 %17426 to i8
  %17428 = and i8 %17427, 1
  %17429 = xor i8 %17428, 1
  %17430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17429, i8* %17430, align 1
  %17431 = xor i64 32, %17415
  %17432 = xor i64 %17431, %17418
  %17433 = lshr i64 %17432, 4
  %17434 = trunc i64 %17433 to i8
  %17435 = and i8 %17434, 1
  %17436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17435, i8* %17436, align 1
  %17437 = icmp eq i64 %17418, 0
  %17438 = zext i1 %17437 to i8
  %17439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17438, i8* %17439, align 1
  %17440 = lshr i64 %17418, 63
  %17441 = trunc i64 %17440 to i8
  %17442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17441, i8* %17442, align 1
  %17443 = lshr i64 %17415, 63
  %17444 = xor i64 %17440, %17443
  %17445 = add i64 %17444, %17440
  %17446 = icmp eq i64 %17445, 2
  %17447 = zext i1 %17446 to i8
  %17448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17447, i8* %17448, align 1
  store %struct.Memory* %loadMem_406eea, %struct.Memory** %MEMORY
  %loadMem_406eee = load %struct.Memory*, %struct.Memory** %MEMORY
  %17449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17450 = getelementptr inbounds %struct.GPR, %struct.GPR* %17449, i32 0, i32 33
  %17451 = getelementptr inbounds %struct.Reg, %struct.Reg* %17450, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %17451 to i64*
  %17452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17453 = getelementptr inbounds %struct.GPR, %struct.GPR* %17452, i32 0, i32 1
  %17454 = getelementptr inbounds %struct.Reg, %struct.Reg* %17453, i32 0, i32 0
  %RAX.i895 = bitcast %union.anon* %17454 to i64*
  %17455 = load i64, i64* %RAX.i895
  %17456 = load i64, i64* %PC.i894
  %17457 = add i64 %17456, 4
  store i64 %17457, i64* %PC.i894
  %17458 = ashr i64 %17455, 5
  %17459 = trunc i64 %17458 to i8
  %17460 = and i8 %17459, 1
  %17461 = ashr i64 %17458, 1
  store i64 %17461, i64* %RAX.i895, align 8
  %17462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17460, i8* %17462, align 1
  %17463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17464 = trunc i64 %17461 to i32
  %17465 = and i32 %17464, 255
  %17466 = call i32 @llvm.ctpop.i32(i32 %17465)
  %17467 = trunc i32 %17466 to i8
  %17468 = and i8 %17467, 1
  %17469 = xor i8 %17468, 1
  store i8 %17469, i8* %17463, align 1
  %17470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17470, align 1
  %17471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17472 = icmp eq i64 %17461, 0
  %17473 = zext i1 %17472 to i8
  store i8 %17473, i8* %17471, align 1
  %17474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17475 = lshr i64 %17461, 63
  %17476 = trunc i64 %17475 to i8
  store i8 %17476, i8* %17474, align 1
  %17477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17477, align 1
  store %struct.Memory* %loadMem_406eee, %struct.Memory** %MEMORY
  %loadMem_406ef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17479 = getelementptr inbounds %struct.GPR, %struct.GPR* %17478, i32 0, i32 33
  %17480 = getelementptr inbounds %struct.Reg, %struct.Reg* %17479, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %17480 to i64*
  %17481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17482 = getelementptr inbounds %struct.GPR, %struct.GPR* %17481, i32 0, i32 1
  %17483 = getelementptr inbounds %struct.Reg, %struct.Reg* %17482, i32 0, i32 0
  %RAX.i892 = bitcast %union.anon* %17483 to i64*
  %17484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17485 = getelementptr inbounds %struct.GPR, %struct.GPR* %17484, i32 0, i32 15
  %17486 = getelementptr inbounds %struct.Reg, %struct.Reg* %17485, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %17486 to i64*
  %17487 = load i64, i64* %RBP.i893
  %17488 = sub i64 %17487, 208
  %17489 = load i64, i64* %RAX.i892
  %17490 = load i64, i64* %PC.i891
  %17491 = add i64 %17490, 7
  store i64 %17491, i64* %PC.i891
  %17492 = inttoptr i64 %17488 to i64*
  store i64 %17489, i64* %17492
  store %struct.Memory* %loadMem_406ef2, %struct.Memory** %MEMORY
  br label %block_.L_406ef9

block_.L_406ef9:                                  ; preds = %block_.L_406ea2, %block_406e92
  %loadMem_406ef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17494 = getelementptr inbounds %struct.GPR, %struct.GPR* %17493, i32 0, i32 33
  %17495 = getelementptr inbounds %struct.Reg, %struct.Reg* %17494, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %17495 to i64*
  %17496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17497 = getelementptr inbounds %struct.GPR, %struct.GPR* %17496, i32 0, i32 1
  %17498 = getelementptr inbounds %struct.Reg, %struct.Reg* %17497, i32 0, i32 0
  %RAX.i889 = bitcast %union.anon* %17498 to i64*
  %17499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17500 = getelementptr inbounds %struct.GPR, %struct.GPR* %17499, i32 0, i32 15
  %17501 = getelementptr inbounds %struct.Reg, %struct.Reg* %17500, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %17501 to i64*
  %17502 = load i64, i64* %RBP.i890
  %17503 = sub i64 %17502, 208
  %17504 = load i64, i64* %PC.i888
  %17505 = add i64 %17504, 7
  store i64 %17505, i64* %PC.i888
  %17506 = inttoptr i64 %17503 to i64*
  %17507 = load i64, i64* %17506
  store i64 %17507, i64* %RAX.i889, align 8
  store %struct.Memory* %loadMem_406ef9, %struct.Memory** %MEMORY
  %loadMem_406f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17509 = getelementptr inbounds %struct.GPR, %struct.GPR* %17508, i32 0, i32 33
  %17510 = getelementptr inbounds %struct.Reg, %struct.Reg* %17509, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %17510 to i64*
  %17511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17512 = getelementptr inbounds %struct.GPR, %struct.GPR* %17511, i32 0, i32 5
  %17513 = getelementptr inbounds %struct.Reg, %struct.Reg* %17512, i32 0, i32 0
  %RCX.i886 = bitcast %union.anon* %17513 to i64*
  %17514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17515 = getelementptr inbounds %struct.GPR, %struct.GPR* %17514, i32 0, i32 15
  %17516 = getelementptr inbounds %struct.Reg, %struct.Reg* %17515, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %17516 to i64*
  %17517 = load i64, i64* %RBP.i887
  %17518 = sub i64 %17517, 200
  %17519 = load i64, i64* %PC.i885
  %17520 = add i64 %17519, 7
  store i64 %17520, i64* %PC.i885
  %17521 = inttoptr i64 %17518 to i64*
  %17522 = load i64, i64* %17521
  store i64 %17522, i64* %RCX.i886, align 8
  store %struct.Memory* %loadMem_406f00, %struct.Memory** %MEMORY
  %loadMem_406f07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17524 = getelementptr inbounds %struct.GPR, %struct.GPR* %17523, i32 0, i32 33
  %17525 = getelementptr inbounds %struct.Reg, %struct.Reg* %17524, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %17525 to i64*
  %17526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17527 = getelementptr inbounds %struct.GPR, %struct.GPR* %17526, i32 0, i32 1
  %17528 = getelementptr inbounds %struct.Reg, %struct.Reg* %17527, i32 0, i32 0
  %RAX.i883 = bitcast %union.anon* %17528 to i64*
  %17529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17530 = getelementptr inbounds %struct.GPR, %struct.GPR* %17529, i32 0, i32 5
  %17531 = getelementptr inbounds %struct.Reg, %struct.Reg* %17530, i32 0, i32 0
  %RCX.i884 = bitcast %union.anon* %17531 to i64*
  %17532 = load i64, i64* %RCX.i884
  %17533 = load i64, i64* %RAX.i883
  %17534 = load i64, i64* %PC.i882
  %17535 = add i64 %17534, 3
  store i64 %17535, i64* %PC.i882
  %17536 = sub i64 %17532, %17533
  %17537 = icmp ult i64 %17532, %17533
  %17538 = zext i1 %17537 to i8
  %17539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17538, i8* %17539, align 1
  %17540 = trunc i64 %17536 to i32
  %17541 = and i32 %17540, 255
  %17542 = call i32 @llvm.ctpop.i32(i32 %17541)
  %17543 = trunc i32 %17542 to i8
  %17544 = and i8 %17543, 1
  %17545 = xor i8 %17544, 1
  %17546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17545, i8* %17546, align 1
  %17547 = xor i64 %17533, %17532
  %17548 = xor i64 %17547, %17536
  %17549 = lshr i64 %17548, 4
  %17550 = trunc i64 %17549 to i8
  %17551 = and i8 %17550, 1
  %17552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17551, i8* %17552, align 1
  %17553 = icmp eq i64 %17536, 0
  %17554 = zext i1 %17553 to i8
  %17555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17554, i8* %17555, align 1
  %17556 = lshr i64 %17536, 63
  %17557 = trunc i64 %17556 to i8
  %17558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17557, i8* %17558, align 1
  %17559 = lshr i64 %17532, 63
  %17560 = lshr i64 %17533, 63
  %17561 = xor i64 %17560, %17559
  %17562 = xor i64 %17556, %17559
  %17563 = add i64 %17562, %17561
  %17564 = icmp eq i64 %17563, 2
  %17565 = zext i1 %17564 to i8
  %17566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17565, i8* %17566, align 1
  store %struct.Memory* %loadMem_406f07, %struct.Memory** %MEMORY
  %loadMem_406f0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17568 = getelementptr inbounds %struct.GPR, %struct.GPR* %17567, i32 0, i32 33
  %17569 = getelementptr inbounds %struct.Reg, %struct.Reg* %17568, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %17569 to i64*
  %17570 = load i64, i64* %PC.i881
  %17571 = add i64 %17570, 33
  %17572 = load i64, i64* %PC.i881
  %17573 = add i64 %17572, 6
  %17574 = load i64, i64* %PC.i881
  %17575 = add i64 %17574, 6
  store i64 %17575, i64* %PC.i881
  %17576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17577 = load i8, i8* %17576, align 1
  %17578 = icmp ne i8 %17577, 0
  %17579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17580 = load i8, i8* %17579, align 1
  %17581 = icmp ne i8 %17580, 0
  %17582 = xor i1 %17578, %17581
  %17583 = xor i1 %17582, true
  %17584 = zext i1 %17583 to i8
  store i8 %17584, i8* %BRANCH_TAKEN, align 1
  %17585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17586 = select i1 %17582, i64 %17573, i64 %17571
  store i64 %17586, i64* %17585, align 8
  store %struct.Memory* %loadMem_406f0a, %struct.Memory** %MEMORY
  %loadBr_406f0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406f0a = icmp eq i8 %loadBr_406f0a, 1
  br i1 %cmpBr_406f0a, label %block_.L_406f2b, label %block_406f10

block_406f10:                                     ; preds = %block_.L_406ef9
  %loadMem_406f10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17588 = getelementptr inbounds %struct.GPR, %struct.GPR* %17587, i32 0, i32 33
  %17589 = getelementptr inbounds %struct.Reg, %struct.Reg* %17588, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %17589 to i64*
  %17590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17591 = getelementptr inbounds %struct.GPR, %struct.GPR* %17590, i32 0, i32 1
  %17592 = getelementptr inbounds %struct.Reg, %struct.Reg* %17591, i32 0, i32 0
  %RAX.i880 = bitcast %union.anon* %17592 to i64*
  %17593 = load i64, i64* %PC.i879
  %17594 = add i64 %17593, 8
  store i64 %17594, i64* %PC.i879
  %17595 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17595, i64* %RAX.i880, align 8
  store %struct.Memory* %loadMem_406f10, %struct.Memory** %MEMORY
  %loadMem_406f18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17597 = getelementptr inbounds %struct.GPR, %struct.GPR* %17596, i32 0, i32 33
  %17598 = getelementptr inbounds %struct.Reg, %struct.Reg* %17597, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %17598 to i64*
  %17599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17600 = getelementptr inbounds %struct.GPR, %struct.GPR* %17599, i32 0, i32 1
  %17601 = getelementptr inbounds %struct.Reg, %struct.Reg* %17600, i32 0, i32 0
  %RAX.i878 = bitcast %union.anon* %17601 to i64*
  %17602 = load i64, i64* %RAX.i878
  %17603 = add i64 %17602, 72684
  %17604 = load i64, i64* %PC.i877
  %17605 = add i64 %17604, 7
  store i64 %17605, i64* %PC.i877
  %17606 = inttoptr i64 %17603 to i32*
  %17607 = load i32, i32* %17606
  %17608 = sext i32 %17607 to i64
  store i64 %17608, i64* %RAX.i878, align 8
  store %struct.Memory* %loadMem_406f18, %struct.Memory** %MEMORY
  %loadMem_406f1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17610 = getelementptr inbounds %struct.GPR, %struct.GPR* %17609, i32 0, i32 33
  %17611 = getelementptr inbounds %struct.Reg, %struct.Reg* %17610, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %17611 to i64*
  %17612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17613 = getelementptr inbounds %struct.GPR, %struct.GPR* %17612, i32 0, i32 1
  %17614 = getelementptr inbounds %struct.Reg, %struct.Reg* %17613, i32 0, i32 0
  %RAX.i875 = bitcast %union.anon* %17614 to i64*
  %17615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17616 = getelementptr inbounds %struct.GPR, %struct.GPR* %17615, i32 0, i32 15
  %17617 = getelementptr inbounds %struct.Reg, %struct.Reg* %17616, i32 0, i32 0
  %RBP.i876 = bitcast %union.anon* %17617 to i64*
  %17618 = load i64, i64* %RBP.i876
  %17619 = sub i64 %17618, 216
  %17620 = load i64, i64* %RAX.i875
  %17621 = load i64, i64* %PC.i874
  %17622 = add i64 %17621, 7
  store i64 %17622, i64* %PC.i874
  %17623 = inttoptr i64 %17619 to i64*
  store i64 %17620, i64* %17623
  store %struct.Memory* %loadMem_406f1f, %struct.Memory** %MEMORY
  %loadMem_406f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17625 = getelementptr inbounds %struct.GPR, %struct.GPR* %17624, i32 0, i32 33
  %17626 = getelementptr inbounds %struct.Reg, %struct.Reg* %17625, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %17626 to i64*
  %17627 = load i64, i64* %PC.i873
  %17628 = add i64 %17627, 215
  %17629 = load i64, i64* %PC.i873
  %17630 = add i64 %17629, 5
  store i64 %17630, i64* %PC.i873
  %17631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17628, i64* %17631, align 8
  store %struct.Memory* %loadMem_406f26, %struct.Memory** %MEMORY
  br label %block_.L_406ffd

block_.L_406f2b:                                  ; preds = %block_.L_406ef9
  %loadMem_406f2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17633 = getelementptr inbounds %struct.GPR, %struct.GPR* %17632, i32 0, i32 33
  %17634 = getelementptr inbounds %struct.Reg, %struct.Reg* %17633, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %17634 to i64*
  %17635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17636 = getelementptr inbounds %struct.GPR, %struct.GPR* %17635, i32 0, i32 1
  %17637 = getelementptr inbounds %struct.Reg, %struct.Reg* %17636, i32 0, i32 0
  %EAX.i871 = bitcast %union.anon* %17637 to i32*
  %17638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17639 = getelementptr inbounds %struct.GPR, %struct.GPR* %17638, i32 0, i32 1
  %17640 = getelementptr inbounds %struct.Reg, %struct.Reg* %17639, i32 0, i32 0
  %RAX.i872 = bitcast %union.anon* %17640 to i64*
  %17641 = load i64, i64* %RAX.i872
  %17642 = load i32, i32* %EAX.i871
  %17643 = zext i32 %17642 to i64
  %17644 = load i64, i64* %PC.i870
  %17645 = add i64 %17644, 2
  store i64 %17645, i64* %PC.i870
  %17646 = xor i64 %17643, %17641
  %17647 = trunc i64 %17646 to i32
  %17648 = and i64 %17646, 4294967295
  store i64 %17648, i64* %RAX.i872, align 8
  %17649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17649, align 1
  %17650 = and i32 %17647, 255
  %17651 = call i32 @llvm.ctpop.i32(i32 %17650)
  %17652 = trunc i32 %17651 to i8
  %17653 = and i8 %17652, 1
  %17654 = xor i8 %17653, 1
  %17655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17654, i8* %17655, align 1
  %17656 = icmp eq i32 %17647, 0
  %17657 = zext i1 %17656 to i8
  %17658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17657, i8* %17658, align 1
  %17659 = lshr i32 %17647, 31
  %17660 = trunc i32 %17659 to i8
  %17661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17660, i8* %17661, align 1
  %17662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17662, align 1
  %17663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17663, align 1
  store %struct.Memory* %loadMem_406f2b, %struct.Memory** %MEMORY
  %loadMem_406f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17665 = getelementptr inbounds %struct.GPR, %struct.GPR* %17664, i32 0, i32 33
  %17666 = getelementptr inbounds %struct.Reg, %struct.Reg* %17665, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %17666 to i64*
  %17667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17668 = getelementptr inbounds %struct.GPR, %struct.GPR* %17667, i32 0, i32 1
  %17669 = getelementptr inbounds %struct.Reg, %struct.Reg* %17668, i32 0, i32 0
  %EAX.i868 = bitcast %union.anon* %17669 to i32*
  %17670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17671 = getelementptr inbounds %struct.GPR, %struct.GPR* %17670, i32 0, i32 5
  %17672 = getelementptr inbounds %struct.Reg, %struct.Reg* %17671, i32 0, i32 0
  %RCX.i869 = bitcast %union.anon* %17672 to i64*
  %17673 = load i32, i32* %EAX.i868
  %17674 = zext i32 %17673 to i64
  %17675 = load i64, i64* %PC.i867
  %17676 = add i64 %17675, 2
  store i64 %17676, i64* %PC.i867
  %17677 = and i64 %17674, 4294967295
  store i64 %17677, i64* %RCX.i869, align 8
  store %struct.Memory* %loadMem_406f2d, %struct.Memory** %MEMORY
  %loadMem_406f2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17679 = getelementptr inbounds %struct.GPR, %struct.GPR* %17678, i32 0, i32 33
  %17680 = getelementptr inbounds %struct.Reg, %struct.Reg* %17679, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %17680 to i64*
  %17681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17682 = getelementptr inbounds %struct.GPR, %struct.GPR* %17681, i32 0, i32 7
  %17683 = getelementptr inbounds %struct.Reg, %struct.Reg* %17682, i32 0, i32 0
  %RDX.i865 = bitcast %union.anon* %17683 to i64*
  %17684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17685 = getelementptr inbounds %struct.GPR, %struct.GPR* %17684, i32 0, i32 15
  %17686 = getelementptr inbounds %struct.Reg, %struct.Reg* %17685, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %17686 to i64*
  %17687 = load i64, i64* %RBP.i866
  %17688 = sub i64 %17687, 28
  %17689 = load i64, i64* %PC.i864
  %17690 = add i64 %17689, 4
  store i64 %17690, i64* %PC.i864
  %17691 = inttoptr i64 %17688 to i32*
  %17692 = load i32, i32* %17691
  %17693 = sext i32 %17692 to i64
  store i64 %17693, i64* %RDX.i865, align 8
  store %struct.Memory* %loadMem_406f2f, %struct.Memory** %MEMORY
  %loadMem_406f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17695 = getelementptr inbounds %struct.GPR, %struct.GPR* %17694, i32 0, i32 33
  %17696 = getelementptr inbounds %struct.Reg, %struct.Reg* %17695, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %17696 to i64*
  %17697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17698 = getelementptr inbounds %struct.GPR, %struct.GPR* %17697, i32 0, i32 1
  %17699 = getelementptr inbounds %struct.Reg, %struct.Reg* %17698, i32 0, i32 0
  %RAX.i861 = bitcast %union.anon* %17699 to i64*
  %17700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17701 = getelementptr inbounds %struct.GPR, %struct.GPR* %17700, i32 0, i32 7
  %17702 = getelementptr inbounds %struct.Reg, %struct.Reg* %17701, i32 0, i32 0
  %RDX.i862 = bitcast %union.anon* %17702 to i64*
  %17703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17704 = getelementptr inbounds %struct.GPR, %struct.GPR* %17703, i32 0, i32 15
  %17705 = getelementptr inbounds %struct.Reg, %struct.Reg* %17704, i32 0, i32 0
  %RBP.i863 = bitcast %union.anon* %17705 to i64*
  %17706 = load i64, i64* %RBP.i863
  %17707 = load i64, i64* %RDX.i862
  %17708 = mul i64 %17707, 4
  %17709 = add i64 %17706, -80
  %17710 = add i64 %17709, %17708
  %17711 = load i64, i64* %PC.i860
  %17712 = add i64 %17711, 4
  store i64 %17712, i64* %PC.i860
  %17713 = inttoptr i64 %17710 to i32*
  %17714 = load i32, i32* %17713
  %17715 = zext i32 %17714 to i64
  store i64 %17715, i64* %RAX.i861, align 8
  store %struct.Memory* %loadMem_406f33, %struct.Memory** %MEMORY
  %loadMem_406f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17717 = getelementptr inbounds %struct.GPR, %struct.GPR* %17716, i32 0, i32 33
  %17718 = getelementptr inbounds %struct.Reg, %struct.Reg* %17717, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %17718 to i64*
  %17719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17720 = getelementptr inbounds %struct.GPR, %struct.GPR* %17719, i32 0, i32 7
  %17721 = getelementptr inbounds %struct.Reg, %struct.Reg* %17720, i32 0, i32 0
  %RDX.i858 = bitcast %union.anon* %17721 to i64*
  %17722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17723 = getelementptr inbounds %struct.GPR, %struct.GPR* %17722, i32 0, i32 15
  %17724 = getelementptr inbounds %struct.Reg, %struct.Reg* %17723, i32 0, i32 0
  %RBP.i859 = bitcast %union.anon* %17724 to i64*
  %17725 = load i64, i64* %RBP.i859
  %17726 = sub i64 %17725, 36
  %17727 = load i64, i64* %PC.i857
  %17728 = add i64 %17727, 4
  store i64 %17728, i64* %PC.i857
  %17729 = inttoptr i64 %17726 to i32*
  %17730 = load i32, i32* %17729
  %17731 = sext i32 %17730 to i64
  store i64 %17731, i64* %RDX.i858, align 8
  store %struct.Memory* %loadMem_406f37, %struct.Memory** %MEMORY
  %loadMem_406f3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17733 = getelementptr inbounds %struct.GPR, %struct.GPR* %17732, i32 0, i32 33
  %17734 = getelementptr inbounds %struct.Reg, %struct.Reg* %17733, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %17734 to i64*
  %17735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17736 = getelementptr inbounds %struct.GPR, %struct.GPR* %17735, i32 0, i32 1
  %17737 = getelementptr inbounds %struct.Reg, %struct.Reg* %17736, i32 0, i32 0
  %RAX.i854 = bitcast %union.anon* %17737 to i64*
  %17738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17739 = getelementptr inbounds %struct.GPR, %struct.GPR* %17738, i32 0, i32 7
  %17740 = getelementptr inbounds %struct.Reg, %struct.Reg* %17739, i32 0, i32 0
  %RDX.i855 = bitcast %union.anon* %17740 to i64*
  %17741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17742 = getelementptr inbounds %struct.GPR, %struct.GPR* %17741, i32 0, i32 15
  %17743 = getelementptr inbounds %struct.Reg, %struct.Reg* %17742, i32 0, i32 0
  %RBP.i856 = bitcast %union.anon* %17743 to i64*
  %17744 = load i64, i64* %RAX.i854
  %17745 = load i64, i64* %RBP.i856
  %17746 = load i64, i64* %RDX.i855
  %17747 = mul i64 %17746, 4
  %17748 = add i64 %17745, -80
  %17749 = add i64 %17748, %17747
  %17750 = load i64, i64* %PC.i853
  %17751 = add i64 %17750, 4
  store i64 %17751, i64* %PC.i853
  %17752 = trunc i64 %17744 to i32
  %17753 = inttoptr i64 %17749 to i32*
  %17754 = load i32, i32* %17753
  %17755 = add i32 %17754, %17752
  %17756 = zext i32 %17755 to i64
  store i64 %17756, i64* %RAX.i854, align 8
  %17757 = icmp ult i32 %17755, %17752
  %17758 = icmp ult i32 %17755, %17754
  %17759 = or i1 %17757, %17758
  %17760 = zext i1 %17759 to i8
  %17761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17760, i8* %17761, align 1
  %17762 = and i32 %17755, 255
  %17763 = call i32 @llvm.ctpop.i32(i32 %17762)
  %17764 = trunc i32 %17763 to i8
  %17765 = and i8 %17764, 1
  %17766 = xor i8 %17765, 1
  %17767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17766, i8* %17767, align 1
  %17768 = xor i32 %17754, %17752
  %17769 = xor i32 %17768, %17755
  %17770 = lshr i32 %17769, 4
  %17771 = trunc i32 %17770 to i8
  %17772 = and i8 %17771, 1
  %17773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17772, i8* %17773, align 1
  %17774 = icmp eq i32 %17755, 0
  %17775 = zext i1 %17774 to i8
  %17776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17775, i8* %17776, align 1
  %17777 = lshr i32 %17755, 31
  %17778 = trunc i32 %17777 to i8
  %17779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17778, i8* %17779, align 1
  %17780 = lshr i32 %17752, 31
  %17781 = lshr i32 %17754, 31
  %17782 = xor i32 %17777, %17780
  %17783 = xor i32 %17777, %17781
  %17784 = add i32 %17782, %17783
  %17785 = icmp eq i32 %17784, 2
  %17786 = zext i1 %17785 to i8
  %17787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17786, i8* %17787, align 1
  store %struct.Memory* %loadMem_406f3b, %struct.Memory** %MEMORY
  %loadMem_406f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17789 = getelementptr inbounds %struct.GPR, %struct.GPR* %17788, i32 0, i32 33
  %17790 = getelementptr inbounds %struct.Reg, %struct.Reg* %17789, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %17790 to i64*
  %17791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17792 = getelementptr inbounds %struct.GPR, %struct.GPR* %17791, i32 0, i32 1
  %17793 = getelementptr inbounds %struct.Reg, %struct.Reg* %17792, i32 0, i32 0
  %EAX.i851 = bitcast %union.anon* %17793 to i32*
  %17794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17795 = getelementptr inbounds %struct.GPR, %struct.GPR* %17794, i32 0, i32 7
  %17796 = getelementptr inbounds %struct.Reg, %struct.Reg* %17795, i32 0, i32 0
  %RDX.i852 = bitcast %union.anon* %17796 to i64*
  %17797 = load i32, i32* %EAX.i851
  %17798 = zext i32 %17797 to i64
  %17799 = load i64, i64* %PC.i850
  %17800 = add i64 %17799, 3
  store i64 %17800, i64* %PC.i850
  %17801 = shl i64 %17798, 32
  %17802 = ashr exact i64 %17801, 32
  store i64 %17802, i64* %RDX.i852, align 8
  store %struct.Memory* %loadMem_406f3f, %struct.Memory** %MEMORY
  %loadMem_406f42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17804 = getelementptr inbounds %struct.GPR, %struct.GPR* %17803, i32 0, i32 33
  %17805 = getelementptr inbounds %struct.Reg, %struct.Reg* %17804, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %17805 to i64*
  %17806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17807 = getelementptr inbounds %struct.GPR, %struct.GPR* %17806, i32 0, i32 9
  %17808 = getelementptr inbounds %struct.Reg, %struct.Reg* %17807, i32 0, i32 0
  %RSI.i849 = bitcast %union.anon* %17808 to i64*
  %17809 = load i64, i64* %PC.i848
  %17810 = add i64 %17809, 8
  store i64 %17810, i64* %PC.i848
  %17811 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17811, i64* %RSI.i849, align 8
  store %struct.Memory* %loadMem_406f42, %struct.Memory** %MEMORY
  %loadMem_406f4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17813 = getelementptr inbounds %struct.GPR, %struct.GPR* %17812, i32 0, i32 33
  %17814 = getelementptr inbounds %struct.Reg, %struct.Reg* %17813, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %17814 to i64*
  %17815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17816 = getelementptr inbounds %struct.GPR, %struct.GPR* %17815, i32 0, i32 9
  %17817 = getelementptr inbounds %struct.Reg, %struct.Reg* %17816, i32 0, i32 0
  %RSI.i847 = bitcast %union.anon* %17817 to i64*
  %17818 = load i64, i64* %RSI.i847
  %17819 = load i64, i64* %PC.i846
  %17820 = add i64 %17819, 7
  store i64 %17820, i64* %PC.i846
  %17821 = add i64 12600, %17818
  store i64 %17821, i64* %RSI.i847, align 8
  %17822 = icmp ult i64 %17821, %17818
  %17823 = icmp ult i64 %17821, 12600
  %17824 = or i1 %17822, %17823
  %17825 = zext i1 %17824 to i8
  %17826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17825, i8* %17826, align 1
  %17827 = trunc i64 %17821 to i32
  %17828 = and i32 %17827, 255
  %17829 = call i32 @llvm.ctpop.i32(i32 %17828)
  %17830 = trunc i32 %17829 to i8
  %17831 = and i8 %17830, 1
  %17832 = xor i8 %17831, 1
  %17833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17832, i8* %17833, align 1
  %17834 = xor i64 12600, %17818
  %17835 = xor i64 %17834, %17821
  %17836 = lshr i64 %17835, 4
  %17837 = trunc i64 %17836 to i8
  %17838 = and i8 %17837, 1
  %17839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17838, i8* %17839, align 1
  %17840 = icmp eq i64 %17821, 0
  %17841 = zext i1 %17840 to i8
  %17842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17841, i8* %17842, align 1
  %17843 = lshr i64 %17821, 63
  %17844 = trunc i64 %17843 to i8
  %17845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17844, i8* %17845, align 1
  %17846 = lshr i64 %17818, 63
  %17847 = xor i64 %17843, %17846
  %17848 = add i64 %17847, %17843
  %17849 = icmp eq i64 %17848, 2
  %17850 = zext i1 %17849 to i8
  %17851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17850, i8* %17851, align 1
  store %struct.Memory* %loadMem_406f4a, %struct.Memory** %MEMORY
  %loadMem_406f51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17853 = getelementptr inbounds %struct.GPR, %struct.GPR* %17852, i32 0, i32 33
  %17854 = getelementptr inbounds %struct.Reg, %struct.Reg* %17853, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %17854 to i64*
  %17855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17856 = getelementptr inbounds %struct.GPR, %struct.GPR* %17855, i32 0, i32 1
  %17857 = getelementptr inbounds %struct.Reg, %struct.Reg* %17856, i32 0, i32 0
  %RAX.i844 = bitcast %union.anon* %17857 to i64*
  %17858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17859 = getelementptr inbounds %struct.GPR, %struct.GPR* %17858, i32 0, i32 15
  %17860 = getelementptr inbounds %struct.Reg, %struct.Reg* %17859, i32 0, i32 0
  %RBP.i845 = bitcast %union.anon* %17860 to i64*
  %17861 = load i64, i64* %RBP.i845
  %17862 = sub i64 %17861, 24
  %17863 = load i64, i64* %PC.i843
  %17864 = add i64 %17863, 3
  store i64 %17864, i64* %PC.i843
  %17865 = inttoptr i64 %17862 to i32*
  %17866 = load i32, i32* %17865
  %17867 = zext i32 %17866 to i64
  store i64 %17867, i64* %RAX.i844, align 8
  store %struct.Memory* %loadMem_406f51, %struct.Memory** %MEMORY
  %loadMem_406f54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17869 = getelementptr inbounds %struct.GPR, %struct.GPR* %17868, i32 0, i32 33
  %17870 = getelementptr inbounds %struct.Reg, %struct.Reg* %17869, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %17870 to i64*
  %17871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17872 = getelementptr inbounds %struct.GPR, %struct.GPR* %17871, i32 0, i32 1
  %17873 = getelementptr inbounds %struct.Reg, %struct.Reg* %17872, i32 0, i32 0
  %RAX.i841 = bitcast %union.anon* %17873 to i64*
  %17874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17875 = getelementptr inbounds %struct.GPR, %struct.GPR* %17874, i32 0, i32 15
  %17876 = getelementptr inbounds %struct.Reg, %struct.Reg* %17875, i32 0, i32 0
  %RBP.i842 = bitcast %union.anon* %17876 to i64*
  %17877 = load i64, i64* %RAX.i841
  %17878 = load i64, i64* %RBP.i842
  %17879 = sub i64 %17878, 4
  %17880 = load i64, i64* %PC.i840
  %17881 = add i64 %17880, 3
  store i64 %17881, i64* %PC.i840
  %17882 = trunc i64 %17877 to i32
  %17883 = inttoptr i64 %17879 to i32*
  %17884 = load i32, i32* %17883
  %17885 = add i32 %17884, %17882
  %17886 = zext i32 %17885 to i64
  store i64 %17886, i64* %RAX.i841, align 8
  %17887 = icmp ult i32 %17885, %17882
  %17888 = icmp ult i32 %17885, %17884
  %17889 = or i1 %17887, %17888
  %17890 = zext i1 %17889 to i8
  %17891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17890, i8* %17891, align 1
  %17892 = and i32 %17885, 255
  %17893 = call i32 @llvm.ctpop.i32(i32 %17892)
  %17894 = trunc i32 %17893 to i8
  %17895 = and i8 %17894, 1
  %17896 = xor i8 %17895, 1
  %17897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17896, i8* %17897, align 1
  %17898 = xor i32 %17884, %17882
  %17899 = xor i32 %17898, %17885
  %17900 = lshr i32 %17899, 4
  %17901 = trunc i32 %17900 to i8
  %17902 = and i8 %17901, 1
  %17903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17902, i8* %17903, align 1
  %17904 = icmp eq i32 %17885, 0
  %17905 = zext i1 %17904 to i8
  %17906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17905, i8* %17906, align 1
  %17907 = lshr i32 %17885, 31
  %17908 = trunc i32 %17907 to i8
  %17909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17908, i8* %17909, align 1
  %17910 = lshr i32 %17882, 31
  %17911 = lshr i32 %17884, 31
  %17912 = xor i32 %17907, %17910
  %17913 = xor i32 %17907, %17911
  %17914 = add i32 %17912, %17913
  %17915 = icmp eq i32 %17914, 2
  %17916 = zext i1 %17915 to i8
  %17917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17916, i8* %17917, align 1
  store %struct.Memory* %loadMem_406f54, %struct.Memory** %MEMORY
  %loadMem_406f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17919 = getelementptr inbounds %struct.GPR, %struct.GPR* %17918, i32 0, i32 33
  %17920 = getelementptr inbounds %struct.Reg, %struct.Reg* %17919, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %17920 to i64*
  %17921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17922 = getelementptr inbounds %struct.GPR, %struct.GPR* %17921, i32 0, i32 1
  %17923 = getelementptr inbounds %struct.Reg, %struct.Reg* %17922, i32 0, i32 0
  %EAX.i838 = bitcast %union.anon* %17923 to i32*
  %17924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17925 = getelementptr inbounds %struct.GPR, %struct.GPR* %17924, i32 0, i32 11
  %17926 = getelementptr inbounds %struct.Reg, %struct.Reg* %17925, i32 0, i32 0
  %RDI.i839 = bitcast %union.anon* %17926 to i64*
  %17927 = load i32, i32* %EAX.i838
  %17928 = zext i32 %17927 to i64
  %17929 = load i64, i64* %PC.i837
  %17930 = add i64 %17929, 3
  store i64 %17930, i64* %PC.i837
  %17931 = shl i64 %17928, 32
  %17932 = ashr exact i64 %17931, 32
  store i64 %17932, i64* %RDI.i839, align 8
  store %struct.Memory* %loadMem_406f57, %struct.Memory** %MEMORY
  %loadMem_406f5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17934 = getelementptr inbounds %struct.GPR, %struct.GPR* %17933, i32 0, i32 33
  %17935 = getelementptr inbounds %struct.Reg, %struct.Reg* %17934, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %17935 to i64*
  %17936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17937 = getelementptr inbounds %struct.GPR, %struct.GPR* %17936, i32 0, i32 11
  %17938 = getelementptr inbounds %struct.Reg, %struct.Reg* %17937, i32 0, i32 0
  %RDI.i836 = bitcast %union.anon* %17938 to i64*
  %17939 = load i64, i64* %RDI.i836
  %17940 = load i64, i64* %PC.i835
  %17941 = add i64 %17940, 4
  store i64 %17941, i64* %PC.i835
  %17942 = shl i64 %17939, 4
  %17943 = icmp slt i64 %17942, 0
  %17944 = shl i64 %17942, 1
  store i64 %17944, i64* %RDI.i836, align 8
  %17945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17946 = zext i1 %17943 to i8
  store i8 %17946, i8* %17945, align 1
  %17947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17948 = trunc i64 %17944 to i32
  %17949 = and i32 %17948, 254
  %17950 = call i32 @llvm.ctpop.i32(i32 %17949)
  %17951 = trunc i32 %17950 to i8
  %17952 = and i8 %17951, 1
  %17953 = xor i8 %17952, 1
  store i8 %17953, i8* %17947, align 1
  %17954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17954, align 1
  %17955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17956 = icmp eq i64 %17944, 0
  %17957 = zext i1 %17956 to i8
  store i8 %17957, i8* %17955, align 1
  %17958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17959 = lshr i64 %17944, 63
  %17960 = trunc i64 %17959 to i8
  store i8 %17960, i8* %17958, align 1
  %17961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17961, align 1
  store %struct.Memory* %loadMem_406f5a, %struct.Memory** %MEMORY
  %loadMem_406f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17963 = getelementptr inbounds %struct.GPR, %struct.GPR* %17962, i32 0, i32 33
  %17964 = getelementptr inbounds %struct.Reg, %struct.Reg* %17963, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %17964 to i64*
  %17965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17966 = getelementptr inbounds %struct.GPR, %struct.GPR* %17965, i32 0, i32 9
  %17967 = getelementptr inbounds %struct.Reg, %struct.Reg* %17966, i32 0, i32 0
  %RSI.i833 = bitcast %union.anon* %17967 to i64*
  %17968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17969 = getelementptr inbounds %struct.GPR, %struct.GPR* %17968, i32 0, i32 11
  %17970 = getelementptr inbounds %struct.Reg, %struct.Reg* %17969, i32 0, i32 0
  %RDI.i834 = bitcast %union.anon* %17970 to i64*
  %17971 = load i64, i64* %RSI.i833
  %17972 = load i64, i64* %RDI.i834
  %17973 = load i64, i64* %PC.i832
  %17974 = add i64 %17973, 3
  store i64 %17974, i64* %PC.i832
  %17975 = add i64 %17972, %17971
  store i64 %17975, i64* %RSI.i833, align 8
  %17976 = icmp ult i64 %17975, %17971
  %17977 = icmp ult i64 %17975, %17972
  %17978 = or i1 %17976, %17977
  %17979 = zext i1 %17978 to i8
  %17980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17979, i8* %17980, align 1
  %17981 = trunc i64 %17975 to i32
  %17982 = and i32 %17981, 255
  %17983 = call i32 @llvm.ctpop.i32(i32 %17982)
  %17984 = trunc i32 %17983 to i8
  %17985 = and i8 %17984, 1
  %17986 = xor i8 %17985, 1
  %17987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17986, i8* %17987, align 1
  %17988 = xor i64 %17972, %17971
  %17989 = xor i64 %17988, %17975
  %17990 = lshr i64 %17989, 4
  %17991 = trunc i64 %17990 to i8
  %17992 = and i8 %17991, 1
  %17993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17992, i8* %17993, align 1
  %17994 = icmp eq i64 %17975, 0
  %17995 = zext i1 %17994 to i8
  %17996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17995, i8* %17996, align 1
  %17997 = lshr i64 %17975, 63
  %17998 = trunc i64 %17997 to i8
  %17999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17998, i8* %17999, align 1
  %18000 = lshr i64 %17971, 63
  %18001 = lshr i64 %17972, 63
  %18002 = xor i64 %17997, %18000
  %18003 = xor i64 %17997, %18001
  %18004 = add i64 %18002, %18003
  %18005 = icmp eq i64 %18004, 2
  %18006 = zext i1 %18005 to i8
  %18007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18006, i8* %18007, align 1
  store %struct.Memory* %loadMem_406f5e, %struct.Memory** %MEMORY
  %loadMem_406f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18009 = getelementptr inbounds %struct.GPR, %struct.GPR* %18008, i32 0, i32 33
  %18010 = getelementptr inbounds %struct.Reg, %struct.Reg* %18009, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %18010 to i64*
  %18011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18012 = getelementptr inbounds %struct.GPR, %struct.GPR* %18011, i32 0, i32 1
  %18013 = getelementptr inbounds %struct.Reg, %struct.Reg* %18012, i32 0, i32 0
  %RAX.i830 = bitcast %union.anon* %18013 to i64*
  %18014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18015 = getelementptr inbounds %struct.GPR, %struct.GPR* %18014, i32 0, i32 15
  %18016 = getelementptr inbounds %struct.Reg, %struct.Reg* %18015, i32 0, i32 0
  %RBP.i831 = bitcast %union.anon* %18016 to i64*
  %18017 = load i64, i64* %RBP.i831
  %18018 = sub i64 %18017, 28
  %18019 = load i64, i64* %PC.i829
  %18020 = add i64 %18019, 3
  store i64 %18020, i64* %PC.i829
  %18021 = inttoptr i64 %18018 to i32*
  %18022 = load i32, i32* %18021
  %18023 = zext i32 %18022 to i64
  store i64 %18023, i64* %RAX.i830, align 8
  store %struct.Memory* %loadMem_406f61, %struct.Memory** %MEMORY
  %loadMem_406f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18025 = getelementptr inbounds %struct.GPR, %struct.GPR* %18024, i32 0, i32 33
  %18026 = getelementptr inbounds %struct.Reg, %struct.Reg* %18025, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %18026 to i64*
  %18027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18028 = getelementptr inbounds %struct.GPR, %struct.GPR* %18027, i32 0, i32 1
  %18029 = getelementptr inbounds %struct.Reg, %struct.Reg* %18028, i32 0, i32 0
  %RAX.i827 = bitcast %union.anon* %18029 to i64*
  %18030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18031 = getelementptr inbounds %struct.GPR, %struct.GPR* %18030, i32 0, i32 15
  %18032 = getelementptr inbounds %struct.Reg, %struct.Reg* %18031, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %18032 to i64*
  %18033 = load i64, i64* %RAX.i827
  %18034 = load i64, i64* %RBP.i828
  %18035 = sub i64 %18034, 8
  %18036 = load i64, i64* %PC.i826
  %18037 = add i64 %18036, 3
  store i64 %18037, i64* %PC.i826
  %18038 = trunc i64 %18033 to i32
  %18039 = inttoptr i64 %18035 to i32*
  %18040 = load i32, i32* %18039
  %18041 = add i32 %18040, %18038
  %18042 = zext i32 %18041 to i64
  store i64 %18042, i64* %RAX.i827, align 8
  %18043 = icmp ult i32 %18041, %18038
  %18044 = icmp ult i32 %18041, %18040
  %18045 = or i1 %18043, %18044
  %18046 = zext i1 %18045 to i8
  %18047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18046, i8* %18047, align 1
  %18048 = and i32 %18041, 255
  %18049 = call i32 @llvm.ctpop.i32(i32 %18048)
  %18050 = trunc i32 %18049 to i8
  %18051 = and i8 %18050, 1
  %18052 = xor i8 %18051, 1
  %18053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18052, i8* %18053, align 1
  %18054 = xor i32 %18040, %18038
  %18055 = xor i32 %18054, %18041
  %18056 = lshr i32 %18055, 4
  %18057 = trunc i32 %18056 to i8
  %18058 = and i8 %18057, 1
  %18059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18058, i8* %18059, align 1
  %18060 = icmp eq i32 %18041, 0
  %18061 = zext i1 %18060 to i8
  %18062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18061, i8* %18062, align 1
  %18063 = lshr i32 %18041, 31
  %18064 = trunc i32 %18063 to i8
  %18065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18064, i8* %18065, align 1
  %18066 = lshr i32 %18038, 31
  %18067 = lshr i32 %18040, 31
  %18068 = xor i32 %18063, %18066
  %18069 = xor i32 %18063, %18067
  %18070 = add i32 %18068, %18069
  %18071 = icmp eq i32 %18070, 2
  %18072 = zext i1 %18071 to i8
  %18073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18072, i8* %18073, align 1
  store %struct.Memory* %loadMem_406f64, %struct.Memory** %MEMORY
  %loadMem_406f67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18075 = getelementptr inbounds %struct.GPR, %struct.GPR* %18074, i32 0, i32 33
  %18076 = getelementptr inbounds %struct.Reg, %struct.Reg* %18075, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %18076 to i64*
  %18077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18078 = getelementptr inbounds %struct.GPR, %struct.GPR* %18077, i32 0, i32 1
  %18079 = getelementptr inbounds %struct.Reg, %struct.Reg* %18078, i32 0, i32 0
  %EAX.i824 = bitcast %union.anon* %18079 to i32*
  %18080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18081 = getelementptr inbounds %struct.GPR, %struct.GPR* %18080, i32 0, i32 11
  %18082 = getelementptr inbounds %struct.Reg, %struct.Reg* %18081, i32 0, i32 0
  %RDI.i825 = bitcast %union.anon* %18082 to i64*
  %18083 = load i32, i32* %EAX.i824
  %18084 = zext i32 %18083 to i64
  %18085 = load i64, i64* %PC.i823
  %18086 = add i64 %18085, 3
  store i64 %18086, i64* %PC.i823
  %18087 = shl i64 %18084, 32
  %18088 = ashr exact i64 %18087, 32
  store i64 %18088, i64* %RDI.i825, align 8
  store %struct.Memory* %loadMem_406f67, %struct.Memory** %MEMORY
  %loadMem_406f6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18090 = getelementptr inbounds %struct.GPR, %struct.GPR* %18089, i32 0, i32 33
  %18091 = getelementptr inbounds %struct.Reg, %struct.Reg* %18090, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %18091 to i64*
  %18092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18093 = getelementptr inbounds %struct.GPR, %struct.GPR* %18092, i32 0, i32 1
  %18094 = getelementptr inbounds %struct.Reg, %struct.Reg* %18093, i32 0, i32 0
  %RAX.i820 = bitcast %union.anon* %18094 to i64*
  %18095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18096 = getelementptr inbounds %struct.GPR, %struct.GPR* %18095, i32 0, i32 9
  %18097 = getelementptr inbounds %struct.Reg, %struct.Reg* %18096, i32 0, i32 0
  %RSI.i821 = bitcast %union.anon* %18097 to i64*
  %18098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18099 = getelementptr inbounds %struct.GPR, %struct.GPR* %18098, i32 0, i32 11
  %18100 = getelementptr inbounds %struct.Reg, %struct.Reg* %18099, i32 0, i32 0
  %RDI.i822 = bitcast %union.anon* %18100 to i64*
  %18101 = load i64, i64* %RSI.i821
  %18102 = load i64, i64* %RDI.i822
  %18103 = mul i64 %18102, 2
  %18104 = add i64 %18103, %18101
  %18105 = load i64, i64* %PC.i819
  %18106 = add i64 %18105, 4
  store i64 %18106, i64* %PC.i819
  %18107 = inttoptr i64 %18104 to i16*
  %18108 = load i16, i16* %18107
  %18109 = zext i16 %18108 to i64
  store i64 %18109, i64* %RAX.i820, align 8
  store %struct.Memory* %loadMem_406f6a, %struct.Memory** %MEMORY
  %loadMem_406f6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18111 = getelementptr inbounds %struct.GPR, %struct.GPR* %18110, i32 0, i32 33
  %18112 = getelementptr inbounds %struct.Reg, %struct.Reg* %18111, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %18112 to i64*
  %18113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18114 = getelementptr inbounds %struct.GPR, %struct.GPR* %18113, i32 0, i32 1
  %18115 = getelementptr inbounds %struct.Reg, %struct.Reg* %18114, i32 0, i32 0
  %EAX.i817 = bitcast %union.anon* %18115 to i32*
  %18116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18117 = getelementptr inbounds %struct.GPR, %struct.GPR* %18116, i32 0, i32 9
  %18118 = getelementptr inbounds %struct.Reg, %struct.Reg* %18117, i32 0, i32 0
  %RSI.i818 = bitcast %union.anon* %18118 to i64*
  %18119 = load i32, i32* %EAX.i817
  %18120 = zext i32 %18119 to i64
  %18121 = load i64, i64* %PC.i816
  %18122 = add i64 %18121, 2
  store i64 %18122, i64* %PC.i816
  %18123 = and i64 %18120, 4294967295
  store i64 %18123, i64* %RSI.i818, align 8
  store %struct.Memory* %loadMem_406f6e, %struct.Memory** %MEMORY
  %loadMem_406f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18125 = getelementptr inbounds %struct.GPR, %struct.GPR* %18124, i32 0, i32 33
  %18126 = getelementptr inbounds %struct.Reg, %struct.Reg* %18125, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %18126 to i64*
  %18127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18128 = getelementptr inbounds %struct.GPR, %struct.GPR* %18127, i32 0, i32 9
  %18129 = getelementptr inbounds %struct.Reg, %struct.Reg* %18128, i32 0, i32 0
  %RSI.i815 = bitcast %union.anon* %18129 to i64*
  %18130 = load i64, i64* %RSI.i815
  %18131 = load i64, i64* %PC.i814
  %18132 = add i64 %18131, 4
  store i64 %18132, i64* %PC.i814
  %18133 = shl i64 %18130, 5
  %18134 = icmp slt i64 %18133, 0
  %18135 = shl i64 %18133, 1
  store i64 %18135, i64* %RSI.i815, align 8
  %18136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18137 = zext i1 %18134 to i8
  store i8 %18137, i8* %18136, align 1
  %18138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18139 = trunc i64 %18135 to i32
  %18140 = and i32 %18139, 254
  %18141 = call i32 @llvm.ctpop.i32(i32 %18140)
  %18142 = trunc i32 %18141 to i8
  %18143 = and i8 %18142, 1
  %18144 = xor i8 %18143, 1
  store i8 %18144, i8* %18138, align 1
  %18145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18145, align 1
  %18146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18147 = icmp eq i64 %18135, 0
  %18148 = zext i1 %18147 to i8
  store i8 %18148, i8* %18146, align 1
  %18149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18150 = lshr i64 %18135, 63
  %18151 = trunc i64 %18150 to i8
  store i8 %18151, i8* %18149, align 1
  %18152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18152, align 1
  store %struct.Memory* %loadMem_406f70, %struct.Memory** %MEMORY
  %loadMem_406f74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18154 = getelementptr inbounds %struct.GPR, %struct.GPR* %18153, i32 0, i32 33
  %18155 = getelementptr inbounds %struct.Reg, %struct.Reg* %18154, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %18155 to i64*
  %18156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18157 = getelementptr inbounds %struct.GPR, %struct.GPR* %18156, i32 0, i32 7
  %18158 = getelementptr inbounds %struct.Reg, %struct.Reg* %18157, i32 0, i32 0
  %RDX.i812 = bitcast %union.anon* %18158 to i64*
  %18159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18160 = getelementptr inbounds %struct.GPR, %struct.GPR* %18159, i32 0, i32 9
  %18161 = getelementptr inbounds %struct.Reg, %struct.Reg* %18160, i32 0, i32 0
  %RSI.i813 = bitcast %union.anon* %18161 to i64*
  %18162 = load i64, i64* %RDX.i812
  %18163 = load i64, i64* %RSI.i813
  %18164 = load i64, i64* %PC.i811
  %18165 = add i64 %18164, 3
  store i64 %18165, i64* %PC.i811
  %18166 = add i64 %18163, %18162
  store i64 %18166, i64* %RDX.i812, align 8
  %18167 = icmp ult i64 %18166, %18162
  %18168 = icmp ult i64 %18166, %18163
  %18169 = or i1 %18167, %18168
  %18170 = zext i1 %18169 to i8
  %18171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18170, i8* %18171, align 1
  %18172 = trunc i64 %18166 to i32
  %18173 = and i32 %18172, 255
  %18174 = call i32 @llvm.ctpop.i32(i32 %18173)
  %18175 = trunc i32 %18174 to i8
  %18176 = and i8 %18175, 1
  %18177 = xor i8 %18176, 1
  %18178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18177, i8* %18178, align 1
  %18179 = xor i64 %18163, %18162
  %18180 = xor i64 %18179, %18166
  %18181 = lshr i64 %18180, 4
  %18182 = trunc i64 %18181 to i8
  %18183 = and i8 %18182, 1
  %18184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18183, i8* %18184, align 1
  %18185 = icmp eq i64 %18166, 0
  %18186 = zext i1 %18185 to i8
  %18187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18186, i8* %18187, align 1
  %18188 = lshr i64 %18166, 63
  %18189 = trunc i64 %18188 to i8
  %18190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18189, i8* %18190, align 1
  %18191 = lshr i64 %18162, 63
  %18192 = lshr i64 %18163, 63
  %18193 = xor i64 %18188, %18191
  %18194 = xor i64 %18188, %18192
  %18195 = add i64 %18193, %18194
  %18196 = icmp eq i64 %18195, 2
  %18197 = zext i1 %18196 to i8
  %18198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18197, i8* %18198, align 1
  store %struct.Memory* %loadMem_406f74, %struct.Memory** %MEMORY
  %loadMem_406f77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18200 = getelementptr inbounds %struct.GPR, %struct.GPR* %18199, i32 0, i32 33
  %18201 = getelementptr inbounds %struct.Reg, %struct.Reg* %18200, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %18201 to i64*
  %18202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18203 = getelementptr inbounds %struct.GPR, %struct.GPR* %18202, i32 0, i32 7
  %18204 = getelementptr inbounds %struct.Reg, %struct.Reg* %18203, i32 0, i32 0
  %RDX.i810 = bitcast %union.anon* %18204 to i64*
  %18205 = load i64, i64* %RDX.i810
  %18206 = load i64, i64* %PC.i809
  %18207 = add i64 %18206, 4
  store i64 %18207, i64* %PC.i809
  %18208 = add i64 32, %18205
  store i64 %18208, i64* %RDX.i810, align 8
  %18209 = icmp ult i64 %18208, %18205
  %18210 = icmp ult i64 %18208, 32
  %18211 = or i1 %18209, %18210
  %18212 = zext i1 %18211 to i8
  %18213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18212, i8* %18213, align 1
  %18214 = trunc i64 %18208 to i32
  %18215 = and i32 %18214, 255
  %18216 = call i32 @llvm.ctpop.i32(i32 %18215)
  %18217 = trunc i32 %18216 to i8
  %18218 = and i8 %18217, 1
  %18219 = xor i8 %18218, 1
  %18220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18219, i8* %18220, align 1
  %18221 = xor i64 32, %18205
  %18222 = xor i64 %18221, %18208
  %18223 = lshr i64 %18222, 4
  %18224 = trunc i64 %18223 to i8
  %18225 = and i8 %18224, 1
  %18226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18225, i8* %18226, align 1
  %18227 = icmp eq i64 %18208, 0
  %18228 = zext i1 %18227 to i8
  %18229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18228, i8* %18229, align 1
  %18230 = lshr i64 %18208, 63
  %18231 = trunc i64 %18230 to i8
  %18232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18231, i8* %18232, align 1
  %18233 = lshr i64 %18205, 63
  %18234 = xor i64 %18230, %18233
  %18235 = add i64 %18234, %18230
  %18236 = icmp eq i64 %18235, 2
  %18237 = zext i1 %18236 to i8
  %18238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18237, i8* %18238, align 1
  store %struct.Memory* %loadMem_406f77, %struct.Memory** %MEMORY
  %loadMem_406f7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18240 = getelementptr inbounds %struct.GPR, %struct.GPR* %18239, i32 0, i32 33
  %18241 = getelementptr inbounds %struct.Reg, %struct.Reg* %18240, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %18241 to i64*
  %18242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18243 = getelementptr inbounds %struct.GPR, %struct.GPR* %18242, i32 0, i32 7
  %18244 = getelementptr inbounds %struct.Reg, %struct.Reg* %18243, i32 0, i32 0
  %RDX.i808 = bitcast %union.anon* %18244 to i64*
  %18245 = load i64, i64* %RDX.i808
  %18246 = load i64, i64* %PC.i807
  %18247 = add i64 %18246, 4
  store i64 %18247, i64* %PC.i807
  %18248 = ashr i64 %18245, 5
  %18249 = trunc i64 %18248 to i8
  %18250 = and i8 %18249, 1
  %18251 = ashr i64 %18248, 1
  store i64 %18251, i64* %RDX.i808, align 8
  %18252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18250, i8* %18252, align 1
  %18253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18254 = trunc i64 %18251 to i32
  %18255 = and i32 %18254, 255
  %18256 = call i32 @llvm.ctpop.i32(i32 %18255)
  %18257 = trunc i32 %18256 to i8
  %18258 = and i8 %18257, 1
  %18259 = xor i8 %18258, 1
  store i8 %18259, i8* %18253, align 1
  %18260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18260, align 1
  %18261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18262 = icmp eq i64 %18251, 0
  %18263 = zext i1 %18262 to i8
  store i8 %18263, i8* %18261, align 1
  %18264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18265 = lshr i64 %18251, 63
  %18266 = trunc i64 %18265 to i8
  store i8 %18266, i8* %18264, align 1
  %18267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18267, align 1
  store %struct.Memory* %loadMem_406f7b, %struct.Memory** %MEMORY
  %loadMem_406f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %18268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18269 = getelementptr inbounds %struct.GPR, %struct.GPR* %18268, i32 0, i32 33
  %18270 = getelementptr inbounds %struct.Reg, %struct.Reg* %18269, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %18270 to i64*
  %18271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18272 = getelementptr inbounds %struct.GPR, %struct.GPR* %18271, i32 0, i32 5
  %18273 = getelementptr inbounds %struct.Reg, %struct.Reg* %18272, i32 0, i32 0
  %RCX.i805 = bitcast %union.anon* %18273 to i64*
  %18274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18275 = getelementptr inbounds %struct.GPR, %struct.GPR* %18274, i32 0, i32 7
  %18276 = getelementptr inbounds %struct.Reg, %struct.Reg* %18275, i32 0, i32 0
  %RDX.i806 = bitcast %union.anon* %18276 to i64*
  %18277 = load i64, i64* %RCX.i805
  %18278 = load i64, i64* %RDX.i806
  %18279 = load i64, i64* %PC.i804
  %18280 = add i64 %18279, 3
  store i64 %18280, i64* %PC.i804
  %18281 = sub i64 %18277, %18278
  %18282 = icmp ult i64 %18277, %18278
  %18283 = zext i1 %18282 to i8
  %18284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18283, i8* %18284, align 1
  %18285 = trunc i64 %18281 to i32
  %18286 = and i32 %18285, 255
  %18287 = call i32 @llvm.ctpop.i32(i32 %18286)
  %18288 = trunc i32 %18287 to i8
  %18289 = and i8 %18288, 1
  %18290 = xor i8 %18289, 1
  %18291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18290, i8* %18291, align 1
  %18292 = xor i64 %18278, %18277
  %18293 = xor i64 %18292, %18281
  %18294 = lshr i64 %18293, 4
  %18295 = trunc i64 %18294 to i8
  %18296 = and i8 %18295, 1
  %18297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18296, i8* %18297, align 1
  %18298 = icmp eq i64 %18281, 0
  %18299 = zext i1 %18298 to i8
  %18300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18299, i8* %18300, align 1
  %18301 = lshr i64 %18281, 63
  %18302 = trunc i64 %18301 to i8
  %18303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18302, i8* %18303, align 1
  %18304 = lshr i64 %18277, 63
  %18305 = lshr i64 %18278, 63
  %18306 = xor i64 %18305, %18304
  %18307 = xor i64 %18301, %18304
  %18308 = add i64 %18307, %18306
  %18309 = icmp eq i64 %18308, 2
  %18310 = zext i1 %18309 to i8
  %18311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18310, i8* %18311, align 1
  store %struct.Memory* %loadMem_406f7f, %struct.Memory** %MEMORY
  %loadMem_406f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18313 = getelementptr inbounds %struct.GPR, %struct.GPR* %18312, i32 0, i32 33
  %18314 = getelementptr inbounds %struct.Reg, %struct.Reg* %18313, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %18314 to i64*
  %18315 = load i64, i64* %PC.i803
  %18316 = add i64 %18315, 22
  %18317 = load i64, i64* %PC.i803
  %18318 = add i64 %18317, 6
  %18319 = load i64, i64* %PC.i803
  %18320 = add i64 %18319, 6
  store i64 %18320, i64* %PC.i803
  %18321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18322 = load i8, i8* %18321, align 1
  %18323 = icmp ne i8 %18322, 0
  %18324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18325 = load i8, i8* %18324, align 1
  %18326 = icmp ne i8 %18325, 0
  %18327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18328 = load i8, i8* %18327, align 1
  %18329 = icmp ne i8 %18328, 0
  %18330 = xor i1 %18326, %18329
  %18331 = or i1 %18323, %18330
  %18332 = zext i1 %18331 to i8
  store i8 %18332, i8* %BRANCH_TAKEN, align 1
  %18333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18334 = select i1 %18331, i64 %18316, i64 %18318
  store i64 %18334, i64* %18333, align 8
  store %struct.Memory* %loadMem_406f82, %struct.Memory** %MEMORY
  %loadBr_406f82 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406f82 = icmp eq i8 %loadBr_406f82, 1
  br i1 %cmpBr_406f82, label %block_.L_406f98, label %block_406f88

block_406f88:                                     ; preds = %block_.L_406f2b
  %loadMem_406f88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18336 = getelementptr inbounds %struct.GPR, %struct.GPR* %18335, i32 0, i32 33
  %18337 = getelementptr inbounds %struct.Reg, %struct.Reg* %18336, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %18337 to i64*
  %18338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18339 = getelementptr inbounds %struct.GPR, %struct.GPR* %18338, i32 0, i32 1
  %18340 = getelementptr inbounds %struct.Reg, %struct.Reg* %18339, i32 0, i32 0
  %EAX.i801 = bitcast %union.anon* %18340 to i32*
  %18341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18342 = getelementptr inbounds %struct.GPR, %struct.GPR* %18341, i32 0, i32 1
  %18343 = getelementptr inbounds %struct.Reg, %struct.Reg* %18342, i32 0, i32 0
  %RAX.i802 = bitcast %union.anon* %18343 to i64*
  %18344 = load i64, i64* %RAX.i802
  %18345 = load i32, i32* %EAX.i801
  %18346 = zext i32 %18345 to i64
  %18347 = load i64, i64* %PC.i800
  %18348 = add i64 %18347, 2
  store i64 %18348, i64* %PC.i800
  %18349 = xor i64 %18346, %18344
  %18350 = trunc i64 %18349 to i32
  %18351 = and i64 %18349, 4294967295
  store i64 %18351, i64* %RAX.i802, align 8
  %18352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18352, align 1
  %18353 = and i32 %18350, 255
  %18354 = call i32 @llvm.ctpop.i32(i32 %18353)
  %18355 = trunc i32 %18354 to i8
  %18356 = and i8 %18355, 1
  %18357 = xor i8 %18356, 1
  %18358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18357, i8* %18358, align 1
  %18359 = icmp eq i32 %18350, 0
  %18360 = zext i1 %18359 to i8
  %18361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18360, i8* %18361, align 1
  %18362 = lshr i32 %18350, 31
  %18363 = trunc i32 %18362 to i8
  %18364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18363, i8* %18364, align 1
  %18365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18365, align 1
  %18366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18366, align 1
  store %struct.Memory* %loadMem_406f88, %struct.Memory** %MEMORY
  %loadMem_406f8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18368 = getelementptr inbounds %struct.GPR, %struct.GPR* %18367, i32 0, i32 33
  %18369 = getelementptr inbounds %struct.Reg, %struct.Reg* %18368, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %18369 to i64*
  %18370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18371 = getelementptr inbounds %struct.GPR, %struct.GPR* %18370, i32 0, i32 1
  %18372 = getelementptr inbounds %struct.Reg, %struct.Reg* %18371, i32 0, i32 0
  %EAX.i798 = bitcast %union.anon* %18372 to i32*
  %18373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18374 = getelementptr inbounds %struct.GPR, %struct.GPR* %18373, i32 0, i32 5
  %18375 = getelementptr inbounds %struct.Reg, %struct.Reg* %18374, i32 0, i32 0
  %RCX.i799 = bitcast %union.anon* %18375 to i64*
  %18376 = load i32, i32* %EAX.i798
  %18377 = zext i32 %18376 to i64
  %18378 = load i64, i64* %PC.i797
  %18379 = add i64 %18378, 2
  store i64 %18379, i64* %PC.i797
  %18380 = and i64 %18377, 4294967295
  store i64 %18380, i64* %RCX.i799, align 8
  store %struct.Memory* %loadMem_406f8a, %struct.Memory** %MEMORY
  %loadMem_406f8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18382 = getelementptr inbounds %struct.GPR, %struct.GPR* %18381, i32 0, i32 33
  %18383 = getelementptr inbounds %struct.Reg, %struct.Reg* %18382, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %18383 to i64*
  %18384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18385 = getelementptr inbounds %struct.GPR, %struct.GPR* %18384, i32 0, i32 5
  %18386 = getelementptr inbounds %struct.Reg, %struct.Reg* %18385, i32 0, i32 0
  %RCX.i795 = bitcast %union.anon* %18386 to i64*
  %18387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18388 = getelementptr inbounds %struct.GPR, %struct.GPR* %18387, i32 0, i32 15
  %18389 = getelementptr inbounds %struct.Reg, %struct.Reg* %18388, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %18389 to i64*
  %18390 = load i64, i64* %RBP.i796
  %18391 = sub i64 %18390, 224
  %18392 = load i64, i64* %RCX.i795
  %18393 = load i64, i64* %PC.i794
  %18394 = add i64 %18393, 7
  store i64 %18394, i64* %PC.i794
  %18395 = inttoptr i64 %18391 to i64*
  store i64 %18392, i64* %18395
  store %struct.Memory* %loadMem_406f8c, %struct.Memory** %MEMORY
  %loadMem_406f93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18397 = getelementptr inbounds %struct.GPR, %struct.GPR* %18396, i32 0, i32 33
  %18398 = getelementptr inbounds %struct.Reg, %struct.Reg* %18397, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %18398 to i64*
  %18399 = load i64, i64* %PC.i793
  %18400 = add i64 %18399, 92
  %18401 = load i64, i64* %PC.i793
  %18402 = add i64 %18401, 5
  store i64 %18402, i64* %PC.i793
  %18403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18400, i64* %18403, align 8
  store %struct.Memory* %loadMem_406f93, %struct.Memory** %MEMORY
  br label %block_.L_406fef

block_.L_406f98:                                  ; preds = %block_.L_406f2b
  %loadMem_406f98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18405 = getelementptr inbounds %struct.GPR, %struct.GPR* %18404, i32 0, i32 33
  %18406 = getelementptr inbounds %struct.Reg, %struct.Reg* %18405, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %18406 to i64*
  %18407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18408 = getelementptr inbounds %struct.GPR, %struct.GPR* %18407, i32 0, i32 1
  %18409 = getelementptr inbounds %struct.Reg, %struct.Reg* %18408, i32 0, i32 0
  %RAX.i791 = bitcast %union.anon* %18409 to i64*
  %18410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18411 = getelementptr inbounds %struct.GPR, %struct.GPR* %18410, i32 0, i32 15
  %18412 = getelementptr inbounds %struct.Reg, %struct.Reg* %18411, i32 0, i32 0
  %RBP.i792 = bitcast %union.anon* %18412 to i64*
  %18413 = load i64, i64* %RBP.i792
  %18414 = sub i64 %18413, 28
  %18415 = load i64, i64* %PC.i790
  %18416 = add i64 %18415, 4
  store i64 %18416, i64* %PC.i790
  %18417 = inttoptr i64 %18414 to i32*
  %18418 = load i32, i32* %18417
  %18419 = sext i32 %18418 to i64
  store i64 %18419, i64* %RAX.i791, align 8
  store %struct.Memory* %loadMem_406f98, %struct.Memory** %MEMORY
  %loadMem_406f9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18421 = getelementptr inbounds %struct.GPR, %struct.GPR* %18420, i32 0, i32 33
  %18422 = getelementptr inbounds %struct.Reg, %struct.Reg* %18421, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %18422 to i64*
  %18423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18424 = getelementptr inbounds %struct.GPR, %struct.GPR* %18423, i32 0, i32 1
  %18425 = getelementptr inbounds %struct.Reg, %struct.Reg* %18424, i32 0, i32 0
  %RAX.i787 = bitcast %union.anon* %18425 to i64*
  %18426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18427 = getelementptr inbounds %struct.GPR, %struct.GPR* %18426, i32 0, i32 5
  %18428 = getelementptr inbounds %struct.Reg, %struct.Reg* %18427, i32 0, i32 0
  %RCX.i788 = bitcast %union.anon* %18428 to i64*
  %18429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18430 = getelementptr inbounds %struct.GPR, %struct.GPR* %18429, i32 0, i32 15
  %18431 = getelementptr inbounds %struct.Reg, %struct.Reg* %18430, i32 0, i32 0
  %RBP.i789 = bitcast %union.anon* %18431 to i64*
  %18432 = load i64, i64* %RBP.i789
  %18433 = load i64, i64* %RAX.i787
  %18434 = mul i64 %18433, 4
  %18435 = add i64 %18432, -80
  %18436 = add i64 %18435, %18434
  %18437 = load i64, i64* %PC.i786
  %18438 = add i64 %18437, 4
  store i64 %18438, i64* %PC.i786
  %18439 = inttoptr i64 %18436 to i32*
  %18440 = load i32, i32* %18439
  %18441 = zext i32 %18440 to i64
  store i64 %18441, i64* %RCX.i788, align 8
  store %struct.Memory* %loadMem_406f9c, %struct.Memory** %MEMORY
  %loadMem_406fa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18443 = getelementptr inbounds %struct.GPR, %struct.GPR* %18442, i32 0, i32 33
  %18444 = getelementptr inbounds %struct.Reg, %struct.Reg* %18443, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %18444 to i64*
  %18445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18446 = getelementptr inbounds %struct.GPR, %struct.GPR* %18445, i32 0, i32 1
  %18447 = getelementptr inbounds %struct.Reg, %struct.Reg* %18446, i32 0, i32 0
  %RAX.i784 = bitcast %union.anon* %18447 to i64*
  %18448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18449 = getelementptr inbounds %struct.GPR, %struct.GPR* %18448, i32 0, i32 15
  %18450 = getelementptr inbounds %struct.Reg, %struct.Reg* %18449, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %18450 to i64*
  %18451 = load i64, i64* %RBP.i785
  %18452 = sub i64 %18451, 36
  %18453 = load i64, i64* %PC.i783
  %18454 = add i64 %18453, 4
  store i64 %18454, i64* %PC.i783
  %18455 = inttoptr i64 %18452 to i32*
  %18456 = load i32, i32* %18455
  %18457 = sext i32 %18456 to i64
  store i64 %18457, i64* %RAX.i784, align 8
  store %struct.Memory* %loadMem_406fa0, %struct.Memory** %MEMORY
  %loadMem_406fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18459 = getelementptr inbounds %struct.GPR, %struct.GPR* %18458, i32 0, i32 33
  %18460 = getelementptr inbounds %struct.Reg, %struct.Reg* %18459, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %18460 to i64*
  %18461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18462 = getelementptr inbounds %struct.GPR, %struct.GPR* %18461, i32 0, i32 1
  %18463 = getelementptr inbounds %struct.Reg, %struct.Reg* %18462, i32 0, i32 0
  %RAX.i780 = bitcast %union.anon* %18463 to i64*
  %18464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18465 = getelementptr inbounds %struct.GPR, %struct.GPR* %18464, i32 0, i32 5
  %18466 = getelementptr inbounds %struct.Reg, %struct.Reg* %18465, i32 0, i32 0
  %RCX.i781 = bitcast %union.anon* %18466 to i64*
  %18467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18468 = getelementptr inbounds %struct.GPR, %struct.GPR* %18467, i32 0, i32 15
  %18469 = getelementptr inbounds %struct.Reg, %struct.Reg* %18468, i32 0, i32 0
  %RBP.i782 = bitcast %union.anon* %18469 to i64*
  %18470 = load i64, i64* %RCX.i781
  %18471 = load i64, i64* %RBP.i782
  %18472 = load i64, i64* %RAX.i780
  %18473 = mul i64 %18472, 4
  %18474 = add i64 %18471, -80
  %18475 = add i64 %18474, %18473
  %18476 = load i64, i64* %PC.i779
  %18477 = add i64 %18476, 4
  store i64 %18477, i64* %PC.i779
  %18478 = trunc i64 %18470 to i32
  %18479 = inttoptr i64 %18475 to i32*
  %18480 = load i32, i32* %18479
  %18481 = add i32 %18480, %18478
  %18482 = zext i32 %18481 to i64
  store i64 %18482, i64* %RCX.i781, align 8
  %18483 = icmp ult i32 %18481, %18478
  %18484 = icmp ult i32 %18481, %18480
  %18485 = or i1 %18483, %18484
  %18486 = zext i1 %18485 to i8
  %18487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18486, i8* %18487, align 1
  %18488 = and i32 %18481, 255
  %18489 = call i32 @llvm.ctpop.i32(i32 %18488)
  %18490 = trunc i32 %18489 to i8
  %18491 = and i8 %18490, 1
  %18492 = xor i8 %18491, 1
  %18493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18492, i8* %18493, align 1
  %18494 = xor i32 %18480, %18478
  %18495 = xor i32 %18494, %18481
  %18496 = lshr i32 %18495, 4
  %18497 = trunc i32 %18496 to i8
  %18498 = and i8 %18497, 1
  %18499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18498, i8* %18499, align 1
  %18500 = icmp eq i32 %18481, 0
  %18501 = zext i1 %18500 to i8
  %18502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18501, i8* %18502, align 1
  %18503 = lshr i32 %18481, 31
  %18504 = trunc i32 %18503 to i8
  %18505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18504, i8* %18505, align 1
  %18506 = lshr i32 %18478, 31
  %18507 = lshr i32 %18480, 31
  %18508 = xor i32 %18503, %18506
  %18509 = xor i32 %18503, %18507
  %18510 = add i32 %18508, %18509
  %18511 = icmp eq i32 %18510, 2
  %18512 = zext i1 %18511 to i8
  %18513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18512, i8* %18513, align 1
  store %struct.Memory* %loadMem_406fa4, %struct.Memory** %MEMORY
  %loadMem_406fa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18515 = getelementptr inbounds %struct.GPR, %struct.GPR* %18514, i32 0, i32 33
  %18516 = getelementptr inbounds %struct.Reg, %struct.Reg* %18515, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %18516 to i64*
  %18517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18518 = getelementptr inbounds %struct.GPR, %struct.GPR* %18517, i32 0, i32 5
  %18519 = getelementptr inbounds %struct.Reg, %struct.Reg* %18518, i32 0, i32 0
  %ECX.i777 = bitcast %union.anon* %18519 to i32*
  %18520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18521 = getelementptr inbounds %struct.GPR, %struct.GPR* %18520, i32 0, i32 1
  %18522 = getelementptr inbounds %struct.Reg, %struct.Reg* %18521, i32 0, i32 0
  %RAX.i778 = bitcast %union.anon* %18522 to i64*
  %18523 = load i32, i32* %ECX.i777
  %18524 = zext i32 %18523 to i64
  %18525 = load i64, i64* %PC.i776
  %18526 = add i64 %18525, 3
  store i64 %18526, i64* %PC.i776
  %18527 = shl i64 %18524, 32
  %18528 = ashr exact i64 %18527, 32
  store i64 %18528, i64* %RAX.i778, align 8
  store %struct.Memory* %loadMem_406fa8, %struct.Memory** %MEMORY
  %loadMem_406fab = load %struct.Memory*, %struct.Memory** %MEMORY
  %18529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18530 = getelementptr inbounds %struct.GPR, %struct.GPR* %18529, i32 0, i32 33
  %18531 = getelementptr inbounds %struct.Reg, %struct.Reg* %18530, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %18531 to i64*
  %18532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18533 = getelementptr inbounds %struct.GPR, %struct.GPR* %18532, i32 0, i32 7
  %18534 = getelementptr inbounds %struct.Reg, %struct.Reg* %18533, i32 0, i32 0
  %RDX.i775 = bitcast %union.anon* %18534 to i64*
  %18535 = load i64, i64* %PC.i774
  %18536 = add i64 %18535, 8
  store i64 %18536, i64* %PC.i774
  %18537 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %18537, i64* %RDX.i775, align 8
  store %struct.Memory* %loadMem_406fab, %struct.Memory** %MEMORY
  %loadMem_406fb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18539 = getelementptr inbounds %struct.GPR, %struct.GPR* %18538, i32 0, i32 33
  %18540 = getelementptr inbounds %struct.Reg, %struct.Reg* %18539, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %18540 to i64*
  %18541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18542 = getelementptr inbounds %struct.GPR, %struct.GPR* %18541, i32 0, i32 7
  %18543 = getelementptr inbounds %struct.Reg, %struct.Reg* %18542, i32 0, i32 0
  %RDX.i773 = bitcast %union.anon* %18543 to i64*
  %18544 = load i64, i64* %RDX.i773
  %18545 = load i64, i64* %PC.i772
  %18546 = add i64 %18545, 7
  store i64 %18546, i64* %PC.i772
  %18547 = add i64 12600, %18544
  store i64 %18547, i64* %RDX.i773, align 8
  %18548 = icmp ult i64 %18547, %18544
  %18549 = icmp ult i64 %18547, 12600
  %18550 = or i1 %18548, %18549
  %18551 = zext i1 %18550 to i8
  %18552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18551, i8* %18552, align 1
  %18553 = trunc i64 %18547 to i32
  %18554 = and i32 %18553, 255
  %18555 = call i32 @llvm.ctpop.i32(i32 %18554)
  %18556 = trunc i32 %18555 to i8
  %18557 = and i8 %18556, 1
  %18558 = xor i8 %18557, 1
  %18559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18558, i8* %18559, align 1
  %18560 = xor i64 12600, %18544
  %18561 = xor i64 %18560, %18547
  %18562 = lshr i64 %18561, 4
  %18563 = trunc i64 %18562 to i8
  %18564 = and i8 %18563, 1
  %18565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18564, i8* %18565, align 1
  %18566 = icmp eq i64 %18547, 0
  %18567 = zext i1 %18566 to i8
  %18568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18567, i8* %18568, align 1
  %18569 = lshr i64 %18547, 63
  %18570 = trunc i64 %18569 to i8
  %18571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18570, i8* %18571, align 1
  %18572 = lshr i64 %18544, 63
  %18573 = xor i64 %18569, %18572
  %18574 = add i64 %18573, %18569
  %18575 = icmp eq i64 %18574, 2
  %18576 = zext i1 %18575 to i8
  %18577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18576, i8* %18577, align 1
  store %struct.Memory* %loadMem_406fb3, %struct.Memory** %MEMORY
  %loadMem_406fba = load %struct.Memory*, %struct.Memory** %MEMORY
  %18578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18579 = getelementptr inbounds %struct.GPR, %struct.GPR* %18578, i32 0, i32 33
  %18580 = getelementptr inbounds %struct.Reg, %struct.Reg* %18579, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %18580 to i64*
  %18581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18582 = getelementptr inbounds %struct.GPR, %struct.GPR* %18581, i32 0, i32 5
  %18583 = getelementptr inbounds %struct.Reg, %struct.Reg* %18582, i32 0, i32 0
  %RCX.i770 = bitcast %union.anon* %18583 to i64*
  %18584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18585 = getelementptr inbounds %struct.GPR, %struct.GPR* %18584, i32 0, i32 15
  %18586 = getelementptr inbounds %struct.Reg, %struct.Reg* %18585, i32 0, i32 0
  %RBP.i771 = bitcast %union.anon* %18586 to i64*
  %18587 = load i64, i64* %RBP.i771
  %18588 = sub i64 %18587, 24
  %18589 = load i64, i64* %PC.i769
  %18590 = add i64 %18589, 3
  store i64 %18590, i64* %PC.i769
  %18591 = inttoptr i64 %18588 to i32*
  %18592 = load i32, i32* %18591
  %18593 = zext i32 %18592 to i64
  store i64 %18593, i64* %RCX.i770, align 8
  store %struct.Memory* %loadMem_406fba, %struct.Memory** %MEMORY
  %loadMem_406fbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %18594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18595 = getelementptr inbounds %struct.GPR, %struct.GPR* %18594, i32 0, i32 33
  %18596 = getelementptr inbounds %struct.Reg, %struct.Reg* %18595, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %18596 to i64*
  %18597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18598 = getelementptr inbounds %struct.GPR, %struct.GPR* %18597, i32 0, i32 5
  %18599 = getelementptr inbounds %struct.Reg, %struct.Reg* %18598, i32 0, i32 0
  %RCX.i767 = bitcast %union.anon* %18599 to i64*
  %18600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18601 = getelementptr inbounds %struct.GPR, %struct.GPR* %18600, i32 0, i32 15
  %18602 = getelementptr inbounds %struct.Reg, %struct.Reg* %18601, i32 0, i32 0
  %RBP.i768 = bitcast %union.anon* %18602 to i64*
  %18603 = load i64, i64* %RCX.i767
  %18604 = load i64, i64* %RBP.i768
  %18605 = sub i64 %18604, 4
  %18606 = load i64, i64* %PC.i766
  %18607 = add i64 %18606, 3
  store i64 %18607, i64* %PC.i766
  %18608 = trunc i64 %18603 to i32
  %18609 = inttoptr i64 %18605 to i32*
  %18610 = load i32, i32* %18609
  %18611 = add i32 %18610, %18608
  %18612 = zext i32 %18611 to i64
  store i64 %18612, i64* %RCX.i767, align 8
  %18613 = icmp ult i32 %18611, %18608
  %18614 = icmp ult i32 %18611, %18610
  %18615 = or i1 %18613, %18614
  %18616 = zext i1 %18615 to i8
  %18617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18616, i8* %18617, align 1
  %18618 = and i32 %18611, 255
  %18619 = call i32 @llvm.ctpop.i32(i32 %18618)
  %18620 = trunc i32 %18619 to i8
  %18621 = and i8 %18620, 1
  %18622 = xor i8 %18621, 1
  %18623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18622, i8* %18623, align 1
  %18624 = xor i32 %18610, %18608
  %18625 = xor i32 %18624, %18611
  %18626 = lshr i32 %18625, 4
  %18627 = trunc i32 %18626 to i8
  %18628 = and i8 %18627, 1
  %18629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18628, i8* %18629, align 1
  %18630 = icmp eq i32 %18611, 0
  %18631 = zext i1 %18630 to i8
  %18632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18631, i8* %18632, align 1
  %18633 = lshr i32 %18611, 31
  %18634 = trunc i32 %18633 to i8
  %18635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18634, i8* %18635, align 1
  %18636 = lshr i32 %18608, 31
  %18637 = lshr i32 %18610, 31
  %18638 = xor i32 %18633, %18636
  %18639 = xor i32 %18633, %18637
  %18640 = add i32 %18638, %18639
  %18641 = icmp eq i32 %18640, 2
  %18642 = zext i1 %18641 to i8
  %18643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18642, i8* %18643, align 1
  store %struct.Memory* %loadMem_406fbd, %struct.Memory** %MEMORY
  %loadMem_406fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18645 = getelementptr inbounds %struct.GPR, %struct.GPR* %18644, i32 0, i32 33
  %18646 = getelementptr inbounds %struct.Reg, %struct.Reg* %18645, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %18646 to i64*
  %18647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18648 = getelementptr inbounds %struct.GPR, %struct.GPR* %18647, i32 0, i32 5
  %18649 = getelementptr inbounds %struct.Reg, %struct.Reg* %18648, i32 0, i32 0
  %ECX.i764 = bitcast %union.anon* %18649 to i32*
  %18650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18651 = getelementptr inbounds %struct.GPR, %struct.GPR* %18650, i32 0, i32 9
  %18652 = getelementptr inbounds %struct.Reg, %struct.Reg* %18651, i32 0, i32 0
  %RSI.i765 = bitcast %union.anon* %18652 to i64*
  %18653 = load i32, i32* %ECX.i764
  %18654 = zext i32 %18653 to i64
  %18655 = load i64, i64* %PC.i763
  %18656 = add i64 %18655, 3
  store i64 %18656, i64* %PC.i763
  %18657 = shl i64 %18654, 32
  %18658 = ashr exact i64 %18657, 32
  store i64 %18658, i64* %RSI.i765, align 8
  store %struct.Memory* %loadMem_406fc0, %struct.Memory** %MEMORY
  %loadMem_406fc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18660 = getelementptr inbounds %struct.GPR, %struct.GPR* %18659, i32 0, i32 33
  %18661 = getelementptr inbounds %struct.Reg, %struct.Reg* %18660, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %18661 to i64*
  %18662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18663 = getelementptr inbounds %struct.GPR, %struct.GPR* %18662, i32 0, i32 9
  %18664 = getelementptr inbounds %struct.Reg, %struct.Reg* %18663, i32 0, i32 0
  %RSI.i762 = bitcast %union.anon* %18664 to i64*
  %18665 = load i64, i64* %RSI.i762
  %18666 = load i64, i64* %PC.i761
  %18667 = add i64 %18666, 4
  store i64 %18667, i64* %PC.i761
  %18668 = shl i64 %18665, 4
  %18669 = icmp slt i64 %18668, 0
  %18670 = shl i64 %18668, 1
  store i64 %18670, i64* %RSI.i762, align 8
  %18671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18672 = zext i1 %18669 to i8
  store i8 %18672, i8* %18671, align 1
  %18673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18674 = trunc i64 %18670 to i32
  %18675 = and i32 %18674, 254
  %18676 = call i32 @llvm.ctpop.i32(i32 %18675)
  %18677 = trunc i32 %18676 to i8
  %18678 = and i8 %18677, 1
  %18679 = xor i8 %18678, 1
  store i8 %18679, i8* %18673, align 1
  %18680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18680, align 1
  %18681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18682 = icmp eq i64 %18670, 0
  %18683 = zext i1 %18682 to i8
  store i8 %18683, i8* %18681, align 1
  %18684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18685 = lshr i64 %18670, 63
  %18686 = trunc i64 %18685 to i8
  store i8 %18686, i8* %18684, align 1
  %18687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18687, align 1
  store %struct.Memory* %loadMem_406fc3, %struct.Memory** %MEMORY
  %loadMem_406fc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18689 = getelementptr inbounds %struct.GPR, %struct.GPR* %18688, i32 0, i32 33
  %18690 = getelementptr inbounds %struct.Reg, %struct.Reg* %18689, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %18690 to i64*
  %18691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18692 = getelementptr inbounds %struct.GPR, %struct.GPR* %18691, i32 0, i32 7
  %18693 = getelementptr inbounds %struct.Reg, %struct.Reg* %18692, i32 0, i32 0
  %RDX.i759 = bitcast %union.anon* %18693 to i64*
  %18694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18695 = getelementptr inbounds %struct.GPR, %struct.GPR* %18694, i32 0, i32 9
  %18696 = getelementptr inbounds %struct.Reg, %struct.Reg* %18695, i32 0, i32 0
  %RSI.i760 = bitcast %union.anon* %18696 to i64*
  %18697 = load i64, i64* %RDX.i759
  %18698 = load i64, i64* %RSI.i760
  %18699 = load i64, i64* %PC.i758
  %18700 = add i64 %18699, 3
  store i64 %18700, i64* %PC.i758
  %18701 = add i64 %18698, %18697
  store i64 %18701, i64* %RDX.i759, align 8
  %18702 = icmp ult i64 %18701, %18697
  %18703 = icmp ult i64 %18701, %18698
  %18704 = or i1 %18702, %18703
  %18705 = zext i1 %18704 to i8
  %18706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18705, i8* %18706, align 1
  %18707 = trunc i64 %18701 to i32
  %18708 = and i32 %18707, 255
  %18709 = call i32 @llvm.ctpop.i32(i32 %18708)
  %18710 = trunc i32 %18709 to i8
  %18711 = and i8 %18710, 1
  %18712 = xor i8 %18711, 1
  %18713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18712, i8* %18713, align 1
  %18714 = xor i64 %18698, %18697
  %18715 = xor i64 %18714, %18701
  %18716 = lshr i64 %18715, 4
  %18717 = trunc i64 %18716 to i8
  %18718 = and i8 %18717, 1
  %18719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18718, i8* %18719, align 1
  %18720 = icmp eq i64 %18701, 0
  %18721 = zext i1 %18720 to i8
  %18722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18721, i8* %18722, align 1
  %18723 = lshr i64 %18701, 63
  %18724 = trunc i64 %18723 to i8
  %18725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18724, i8* %18725, align 1
  %18726 = lshr i64 %18697, 63
  %18727 = lshr i64 %18698, 63
  %18728 = xor i64 %18723, %18726
  %18729 = xor i64 %18723, %18727
  %18730 = add i64 %18728, %18729
  %18731 = icmp eq i64 %18730, 2
  %18732 = zext i1 %18731 to i8
  %18733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18732, i8* %18733, align 1
  store %struct.Memory* %loadMem_406fc7, %struct.Memory** %MEMORY
  %loadMem_406fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %18734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18735 = getelementptr inbounds %struct.GPR, %struct.GPR* %18734, i32 0, i32 33
  %18736 = getelementptr inbounds %struct.Reg, %struct.Reg* %18735, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %18736 to i64*
  %18737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18738 = getelementptr inbounds %struct.GPR, %struct.GPR* %18737, i32 0, i32 5
  %18739 = getelementptr inbounds %struct.Reg, %struct.Reg* %18738, i32 0, i32 0
  %RCX.i756 = bitcast %union.anon* %18739 to i64*
  %18740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18741 = getelementptr inbounds %struct.GPR, %struct.GPR* %18740, i32 0, i32 15
  %18742 = getelementptr inbounds %struct.Reg, %struct.Reg* %18741, i32 0, i32 0
  %RBP.i757 = bitcast %union.anon* %18742 to i64*
  %18743 = load i64, i64* %RBP.i757
  %18744 = sub i64 %18743, 28
  %18745 = load i64, i64* %PC.i755
  %18746 = add i64 %18745, 3
  store i64 %18746, i64* %PC.i755
  %18747 = inttoptr i64 %18744 to i32*
  %18748 = load i32, i32* %18747
  %18749 = zext i32 %18748 to i64
  store i64 %18749, i64* %RCX.i756, align 8
  store %struct.Memory* %loadMem_406fca, %struct.Memory** %MEMORY
  %loadMem_406fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %18750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18751 = getelementptr inbounds %struct.GPR, %struct.GPR* %18750, i32 0, i32 33
  %18752 = getelementptr inbounds %struct.Reg, %struct.Reg* %18751, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %18752 to i64*
  %18753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18754 = getelementptr inbounds %struct.GPR, %struct.GPR* %18753, i32 0, i32 5
  %18755 = getelementptr inbounds %struct.Reg, %struct.Reg* %18754, i32 0, i32 0
  %RCX.i753 = bitcast %union.anon* %18755 to i64*
  %18756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18757 = getelementptr inbounds %struct.GPR, %struct.GPR* %18756, i32 0, i32 15
  %18758 = getelementptr inbounds %struct.Reg, %struct.Reg* %18757, i32 0, i32 0
  %RBP.i754 = bitcast %union.anon* %18758 to i64*
  %18759 = load i64, i64* %RCX.i753
  %18760 = load i64, i64* %RBP.i754
  %18761 = sub i64 %18760, 8
  %18762 = load i64, i64* %PC.i752
  %18763 = add i64 %18762, 3
  store i64 %18763, i64* %PC.i752
  %18764 = trunc i64 %18759 to i32
  %18765 = inttoptr i64 %18761 to i32*
  %18766 = load i32, i32* %18765
  %18767 = add i32 %18766, %18764
  %18768 = zext i32 %18767 to i64
  store i64 %18768, i64* %RCX.i753, align 8
  %18769 = icmp ult i32 %18767, %18764
  %18770 = icmp ult i32 %18767, %18766
  %18771 = or i1 %18769, %18770
  %18772 = zext i1 %18771 to i8
  %18773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18772, i8* %18773, align 1
  %18774 = and i32 %18767, 255
  %18775 = call i32 @llvm.ctpop.i32(i32 %18774)
  %18776 = trunc i32 %18775 to i8
  %18777 = and i8 %18776, 1
  %18778 = xor i8 %18777, 1
  %18779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18778, i8* %18779, align 1
  %18780 = xor i32 %18766, %18764
  %18781 = xor i32 %18780, %18767
  %18782 = lshr i32 %18781, 4
  %18783 = trunc i32 %18782 to i8
  %18784 = and i8 %18783, 1
  %18785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18784, i8* %18785, align 1
  %18786 = icmp eq i32 %18767, 0
  %18787 = zext i1 %18786 to i8
  %18788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18787, i8* %18788, align 1
  %18789 = lshr i32 %18767, 31
  %18790 = trunc i32 %18789 to i8
  %18791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18790, i8* %18791, align 1
  %18792 = lshr i32 %18764, 31
  %18793 = lshr i32 %18766, 31
  %18794 = xor i32 %18789, %18792
  %18795 = xor i32 %18789, %18793
  %18796 = add i32 %18794, %18795
  %18797 = icmp eq i32 %18796, 2
  %18798 = zext i1 %18797 to i8
  %18799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18798, i8* %18799, align 1
  store %struct.Memory* %loadMem_406fcd, %struct.Memory** %MEMORY
  %loadMem_406fd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18801 = getelementptr inbounds %struct.GPR, %struct.GPR* %18800, i32 0, i32 33
  %18802 = getelementptr inbounds %struct.Reg, %struct.Reg* %18801, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %18802 to i64*
  %18803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18804 = getelementptr inbounds %struct.GPR, %struct.GPR* %18803, i32 0, i32 5
  %18805 = getelementptr inbounds %struct.Reg, %struct.Reg* %18804, i32 0, i32 0
  %ECX.i750 = bitcast %union.anon* %18805 to i32*
  %18806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18807 = getelementptr inbounds %struct.GPR, %struct.GPR* %18806, i32 0, i32 9
  %18808 = getelementptr inbounds %struct.Reg, %struct.Reg* %18807, i32 0, i32 0
  %RSI.i751 = bitcast %union.anon* %18808 to i64*
  %18809 = load i32, i32* %ECX.i750
  %18810 = zext i32 %18809 to i64
  %18811 = load i64, i64* %PC.i749
  %18812 = add i64 %18811, 3
  store i64 %18812, i64* %PC.i749
  %18813 = shl i64 %18810, 32
  %18814 = ashr exact i64 %18813, 32
  store i64 %18814, i64* %RSI.i751, align 8
  store %struct.Memory* %loadMem_406fd0, %struct.Memory** %MEMORY
  %loadMem_406fd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18816 = getelementptr inbounds %struct.GPR, %struct.GPR* %18815, i32 0, i32 33
  %18817 = getelementptr inbounds %struct.Reg, %struct.Reg* %18816, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %18817 to i64*
  %18818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18819 = getelementptr inbounds %struct.GPR, %struct.GPR* %18818, i32 0, i32 5
  %18820 = getelementptr inbounds %struct.Reg, %struct.Reg* %18819, i32 0, i32 0
  %RCX.i746 = bitcast %union.anon* %18820 to i64*
  %18821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18822 = getelementptr inbounds %struct.GPR, %struct.GPR* %18821, i32 0, i32 7
  %18823 = getelementptr inbounds %struct.Reg, %struct.Reg* %18822, i32 0, i32 0
  %RDX.i747 = bitcast %union.anon* %18823 to i64*
  %18824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18825 = getelementptr inbounds %struct.GPR, %struct.GPR* %18824, i32 0, i32 9
  %18826 = getelementptr inbounds %struct.Reg, %struct.Reg* %18825, i32 0, i32 0
  %RSI.i748 = bitcast %union.anon* %18826 to i64*
  %18827 = load i64, i64* %RDX.i747
  %18828 = load i64, i64* %RSI.i748
  %18829 = mul i64 %18828, 2
  %18830 = add i64 %18829, %18827
  %18831 = load i64, i64* %PC.i745
  %18832 = add i64 %18831, 4
  store i64 %18832, i64* %PC.i745
  %18833 = inttoptr i64 %18830 to i16*
  %18834 = load i16, i16* %18833
  %18835 = zext i16 %18834 to i64
  store i64 %18835, i64* %RCX.i746, align 8
  store %struct.Memory* %loadMem_406fd3, %struct.Memory** %MEMORY
  %loadMem_406fd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18837 = getelementptr inbounds %struct.GPR, %struct.GPR* %18836, i32 0, i32 33
  %18838 = getelementptr inbounds %struct.Reg, %struct.Reg* %18837, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %18838 to i64*
  %18839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18840 = getelementptr inbounds %struct.GPR, %struct.GPR* %18839, i32 0, i32 5
  %18841 = getelementptr inbounds %struct.Reg, %struct.Reg* %18840, i32 0, i32 0
  %ECX.i743 = bitcast %union.anon* %18841 to i32*
  %18842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18843 = getelementptr inbounds %struct.GPR, %struct.GPR* %18842, i32 0, i32 7
  %18844 = getelementptr inbounds %struct.Reg, %struct.Reg* %18843, i32 0, i32 0
  %RDX.i744 = bitcast %union.anon* %18844 to i64*
  %18845 = load i32, i32* %ECX.i743
  %18846 = zext i32 %18845 to i64
  %18847 = load i64, i64* %PC.i742
  %18848 = add i64 %18847, 2
  store i64 %18848, i64* %PC.i742
  %18849 = and i64 %18846, 4294967295
  store i64 %18849, i64* %RDX.i744, align 8
  store %struct.Memory* %loadMem_406fd7, %struct.Memory** %MEMORY
  %loadMem_406fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18851 = getelementptr inbounds %struct.GPR, %struct.GPR* %18850, i32 0, i32 33
  %18852 = getelementptr inbounds %struct.Reg, %struct.Reg* %18851, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %18852 to i64*
  %18853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18854 = getelementptr inbounds %struct.GPR, %struct.GPR* %18853, i32 0, i32 7
  %18855 = getelementptr inbounds %struct.Reg, %struct.Reg* %18854, i32 0, i32 0
  %RDX.i741 = bitcast %union.anon* %18855 to i64*
  %18856 = load i64, i64* %RDX.i741
  %18857 = load i64, i64* %PC.i740
  %18858 = add i64 %18857, 4
  store i64 %18858, i64* %PC.i740
  %18859 = shl i64 %18856, 5
  %18860 = icmp slt i64 %18859, 0
  %18861 = shl i64 %18859, 1
  store i64 %18861, i64* %RDX.i741, align 8
  %18862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18863 = zext i1 %18860 to i8
  store i8 %18863, i8* %18862, align 1
  %18864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18865 = trunc i64 %18861 to i32
  %18866 = and i32 %18865, 254
  %18867 = call i32 @llvm.ctpop.i32(i32 %18866)
  %18868 = trunc i32 %18867 to i8
  %18869 = and i8 %18868, 1
  %18870 = xor i8 %18869, 1
  store i8 %18870, i8* %18864, align 1
  %18871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18871, align 1
  %18872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18873 = icmp eq i64 %18861, 0
  %18874 = zext i1 %18873 to i8
  store i8 %18874, i8* %18872, align 1
  %18875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18876 = lshr i64 %18861, 63
  %18877 = trunc i64 %18876 to i8
  store i8 %18877, i8* %18875, align 1
  %18878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18878, align 1
  store %struct.Memory* %loadMem_406fd9, %struct.Memory** %MEMORY
  %loadMem_406fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %18879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18880 = getelementptr inbounds %struct.GPR, %struct.GPR* %18879, i32 0, i32 33
  %18881 = getelementptr inbounds %struct.Reg, %struct.Reg* %18880, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %18881 to i64*
  %18882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18883 = getelementptr inbounds %struct.GPR, %struct.GPR* %18882, i32 0, i32 1
  %18884 = getelementptr inbounds %struct.Reg, %struct.Reg* %18883, i32 0, i32 0
  %RAX.i738 = bitcast %union.anon* %18884 to i64*
  %18885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18886 = getelementptr inbounds %struct.GPR, %struct.GPR* %18885, i32 0, i32 7
  %18887 = getelementptr inbounds %struct.Reg, %struct.Reg* %18886, i32 0, i32 0
  %RDX.i739 = bitcast %union.anon* %18887 to i64*
  %18888 = load i64, i64* %RAX.i738
  %18889 = load i64, i64* %RDX.i739
  %18890 = load i64, i64* %PC.i737
  %18891 = add i64 %18890, 3
  store i64 %18891, i64* %PC.i737
  %18892 = add i64 %18889, %18888
  store i64 %18892, i64* %RAX.i738, align 8
  %18893 = icmp ult i64 %18892, %18888
  %18894 = icmp ult i64 %18892, %18889
  %18895 = or i1 %18893, %18894
  %18896 = zext i1 %18895 to i8
  %18897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18896, i8* %18897, align 1
  %18898 = trunc i64 %18892 to i32
  %18899 = and i32 %18898, 255
  %18900 = call i32 @llvm.ctpop.i32(i32 %18899)
  %18901 = trunc i32 %18900 to i8
  %18902 = and i8 %18901, 1
  %18903 = xor i8 %18902, 1
  %18904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18903, i8* %18904, align 1
  %18905 = xor i64 %18889, %18888
  %18906 = xor i64 %18905, %18892
  %18907 = lshr i64 %18906, 4
  %18908 = trunc i64 %18907 to i8
  %18909 = and i8 %18908, 1
  %18910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18909, i8* %18910, align 1
  %18911 = icmp eq i64 %18892, 0
  %18912 = zext i1 %18911 to i8
  %18913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18912, i8* %18913, align 1
  %18914 = lshr i64 %18892, 63
  %18915 = trunc i64 %18914 to i8
  %18916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18915, i8* %18916, align 1
  %18917 = lshr i64 %18888, 63
  %18918 = lshr i64 %18889, 63
  %18919 = xor i64 %18914, %18917
  %18920 = xor i64 %18914, %18918
  %18921 = add i64 %18919, %18920
  %18922 = icmp eq i64 %18921, 2
  %18923 = zext i1 %18922 to i8
  %18924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18923, i8* %18924, align 1
  store %struct.Memory* %loadMem_406fdd, %struct.Memory** %MEMORY
  %loadMem_406fe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18926 = getelementptr inbounds %struct.GPR, %struct.GPR* %18925, i32 0, i32 33
  %18927 = getelementptr inbounds %struct.Reg, %struct.Reg* %18926, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %18927 to i64*
  %18928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18929 = getelementptr inbounds %struct.GPR, %struct.GPR* %18928, i32 0, i32 1
  %18930 = getelementptr inbounds %struct.Reg, %struct.Reg* %18929, i32 0, i32 0
  %RAX.i736 = bitcast %union.anon* %18930 to i64*
  %18931 = load i64, i64* %RAX.i736
  %18932 = load i64, i64* %PC.i735
  %18933 = add i64 %18932, 4
  store i64 %18933, i64* %PC.i735
  %18934 = add i64 32, %18931
  store i64 %18934, i64* %RAX.i736, align 8
  %18935 = icmp ult i64 %18934, %18931
  %18936 = icmp ult i64 %18934, 32
  %18937 = or i1 %18935, %18936
  %18938 = zext i1 %18937 to i8
  %18939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18938, i8* %18939, align 1
  %18940 = trunc i64 %18934 to i32
  %18941 = and i32 %18940, 255
  %18942 = call i32 @llvm.ctpop.i32(i32 %18941)
  %18943 = trunc i32 %18942 to i8
  %18944 = and i8 %18943, 1
  %18945 = xor i8 %18944, 1
  %18946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18945, i8* %18946, align 1
  %18947 = xor i64 32, %18931
  %18948 = xor i64 %18947, %18934
  %18949 = lshr i64 %18948, 4
  %18950 = trunc i64 %18949 to i8
  %18951 = and i8 %18950, 1
  %18952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18951, i8* %18952, align 1
  %18953 = icmp eq i64 %18934, 0
  %18954 = zext i1 %18953 to i8
  %18955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18954, i8* %18955, align 1
  %18956 = lshr i64 %18934, 63
  %18957 = trunc i64 %18956 to i8
  %18958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18957, i8* %18958, align 1
  %18959 = lshr i64 %18931, 63
  %18960 = xor i64 %18956, %18959
  %18961 = add i64 %18960, %18956
  %18962 = icmp eq i64 %18961, 2
  %18963 = zext i1 %18962 to i8
  %18964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18963, i8* %18964, align 1
  store %struct.Memory* %loadMem_406fe0, %struct.Memory** %MEMORY
  %loadMem_406fe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18966 = getelementptr inbounds %struct.GPR, %struct.GPR* %18965, i32 0, i32 33
  %18967 = getelementptr inbounds %struct.Reg, %struct.Reg* %18966, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %18967 to i64*
  %18968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18969 = getelementptr inbounds %struct.GPR, %struct.GPR* %18968, i32 0, i32 1
  %18970 = getelementptr inbounds %struct.Reg, %struct.Reg* %18969, i32 0, i32 0
  %RAX.i734 = bitcast %union.anon* %18970 to i64*
  %18971 = load i64, i64* %RAX.i734
  %18972 = load i64, i64* %PC.i733
  %18973 = add i64 %18972, 4
  store i64 %18973, i64* %PC.i733
  %18974 = ashr i64 %18971, 5
  %18975 = trunc i64 %18974 to i8
  %18976 = and i8 %18975, 1
  %18977 = ashr i64 %18974, 1
  store i64 %18977, i64* %RAX.i734, align 8
  %18978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18976, i8* %18978, align 1
  %18979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18980 = trunc i64 %18977 to i32
  %18981 = and i32 %18980, 255
  %18982 = call i32 @llvm.ctpop.i32(i32 %18981)
  %18983 = trunc i32 %18982 to i8
  %18984 = and i8 %18983, 1
  %18985 = xor i8 %18984, 1
  store i8 %18985, i8* %18979, align 1
  %18986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18986, align 1
  %18987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18988 = icmp eq i64 %18977, 0
  %18989 = zext i1 %18988 to i8
  store i8 %18989, i8* %18987, align 1
  %18990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18991 = lshr i64 %18977, 63
  %18992 = trunc i64 %18991 to i8
  store i8 %18992, i8* %18990, align 1
  %18993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18993, align 1
  store %struct.Memory* %loadMem_406fe4, %struct.Memory** %MEMORY
  %loadMem_406fe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18995 = getelementptr inbounds %struct.GPR, %struct.GPR* %18994, i32 0, i32 33
  %18996 = getelementptr inbounds %struct.Reg, %struct.Reg* %18995, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %18996 to i64*
  %18997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18998 = getelementptr inbounds %struct.GPR, %struct.GPR* %18997, i32 0, i32 1
  %18999 = getelementptr inbounds %struct.Reg, %struct.Reg* %18998, i32 0, i32 0
  %RAX.i731 = bitcast %union.anon* %18999 to i64*
  %19000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19001 = getelementptr inbounds %struct.GPR, %struct.GPR* %19000, i32 0, i32 15
  %19002 = getelementptr inbounds %struct.Reg, %struct.Reg* %19001, i32 0, i32 0
  %RBP.i732 = bitcast %union.anon* %19002 to i64*
  %19003 = load i64, i64* %RBP.i732
  %19004 = sub i64 %19003, 224
  %19005 = load i64, i64* %RAX.i731
  %19006 = load i64, i64* %PC.i730
  %19007 = add i64 %19006, 7
  store i64 %19007, i64* %PC.i730
  %19008 = inttoptr i64 %19004 to i64*
  store i64 %19005, i64* %19008
  store %struct.Memory* %loadMem_406fe8, %struct.Memory** %MEMORY
  br label %block_.L_406fef

block_.L_406fef:                                  ; preds = %block_.L_406f98, %block_406f88
  %loadMem_406fef = load %struct.Memory*, %struct.Memory** %MEMORY
  %19009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19010 = getelementptr inbounds %struct.GPR, %struct.GPR* %19009, i32 0, i32 33
  %19011 = getelementptr inbounds %struct.Reg, %struct.Reg* %19010, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %19011 to i64*
  %19012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19013 = getelementptr inbounds %struct.GPR, %struct.GPR* %19012, i32 0, i32 1
  %19014 = getelementptr inbounds %struct.Reg, %struct.Reg* %19013, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %19014 to i64*
  %19015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19016 = getelementptr inbounds %struct.GPR, %struct.GPR* %19015, i32 0, i32 15
  %19017 = getelementptr inbounds %struct.Reg, %struct.Reg* %19016, i32 0, i32 0
  %RBP.i729 = bitcast %union.anon* %19017 to i64*
  %19018 = load i64, i64* %RBP.i729
  %19019 = sub i64 %19018, 224
  %19020 = load i64, i64* %PC.i727
  %19021 = add i64 %19020, 7
  store i64 %19021, i64* %PC.i727
  %19022 = inttoptr i64 %19019 to i64*
  %19023 = load i64, i64* %19022
  store i64 %19023, i64* %RAX.i728, align 8
  store %struct.Memory* %loadMem_406fef, %struct.Memory** %MEMORY
  %loadMem_406ff6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19025 = getelementptr inbounds %struct.GPR, %struct.GPR* %19024, i32 0, i32 33
  %19026 = getelementptr inbounds %struct.Reg, %struct.Reg* %19025, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %19026 to i64*
  %19027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19028 = getelementptr inbounds %struct.GPR, %struct.GPR* %19027, i32 0, i32 1
  %19029 = getelementptr inbounds %struct.Reg, %struct.Reg* %19028, i32 0, i32 0
  %RAX.i725 = bitcast %union.anon* %19029 to i64*
  %19030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19031 = getelementptr inbounds %struct.GPR, %struct.GPR* %19030, i32 0, i32 15
  %19032 = getelementptr inbounds %struct.Reg, %struct.Reg* %19031, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %19032 to i64*
  %19033 = load i64, i64* %RBP.i726
  %19034 = sub i64 %19033, 216
  %19035 = load i64, i64* %RAX.i725
  %19036 = load i64, i64* %PC.i724
  %19037 = add i64 %19036, 7
  store i64 %19037, i64* %PC.i724
  %19038 = inttoptr i64 %19034 to i64*
  store i64 %19035, i64* %19038
  store %struct.Memory* %loadMem_406ff6, %struct.Memory** %MEMORY
  br label %block_.L_406ffd

block_.L_406ffd:                                  ; preds = %block_.L_406fef, %block_406f10
  %loadMem_406ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %19039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19040 = getelementptr inbounds %struct.GPR, %struct.GPR* %19039, i32 0, i32 33
  %19041 = getelementptr inbounds %struct.Reg, %struct.Reg* %19040, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %19041 to i64*
  %19042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19043 = getelementptr inbounds %struct.GPR, %struct.GPR* %19042, i32 0, i32 1
  %19044 = getelementptr inbounds %struct.Reg, %struct.Reg* %19043, i32 0, i32 0
  %RAX.i722 = bitcast %union.anon* %19044 to i64*
  %19045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19046 = getelementptr inbounds %struct.GPR, %struct.GPR* %19045, i32 0, i32 15
  %19047 = getelementptr inbounds %struct.Reg, %struct.Reg* %19046, i32 0, i32 0
  %RBP.i723 = bitcast %union.anon* %19047 to i64*
  %19048 = load i64, i64* %RBP.i723
  %19049 = sub i64 %19048, 216
  %19050 = load i64, i64* %PC.i721
  %19051 = add i64 %19050, 7
  store i64 %19051, i64* %PC.i721
  %19052 = inttoptr i64 %19049 to i64*
  %19053 = load i64, i64* %19052
  store i64 %19053, i64* %RAX.i722, align 8
  store %struct.Memory* %loadMem_406ffd, %struct.Memory** %MEMORY
  %loadMem_407004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19055 = getelementptr inbounds %struct.GPR, %struct.GPR* %19054, i32 0, i32 33
  %19056 = getelementptr inbounds %struct.Reg, %struct.Reg* %19055, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %19056 to i64*
  %19057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19058 = getelementptr inbounds %struct.GPR, %struct.GPR* %19057, i32 0, i32 5
  %19059 = getelementptr inbounds %struct.Reg, %struct.Reg* %19058, i32 0, i32 0
  %ECX.i719 = bitcast %union.anon* %19059 to i32*
  %19060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19061 = getelementptr inbounds %struct.GPR, %struct.GPR* %19060, i32 0, i32 5
  %19062 = getelementptr inbounds %struct.Reg, %struct.Reg* %19061, i32 0, i32 0
  %RCX.i720 = bitcast %union.anon* %19062 to i64*
  %19063 = load i64, i64* %RCX.i720
  %19064 = load i32, i32* %ECX.i719
  %19065 = zext i32 %19064 to i64
  %19066 = load i64, i64* %PC.i718
  %19067 = add i64 %19066, 2
  store i64 %19067, i64* %PC.i718
  %19068 = xor i64 %19065, %19063
  %19069 = trunc i64 %19068 to i32
  %19070 = and i64 %19068, 4294967295
  store i64 %19070, i64* %RCX.i720, align 8
  %19071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19071, align 1
  %19072 = and i32 %19069, 255
  %19073 = call i32 @llvm.ctpop.i32(i32 %19072)
  %19074 = trunc i32 %19073 to i8
  %19075 = and i8 %19074, 1
  %19076 = xor i8 %19075, 1
  %19077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19076, i8* %19077, align 1
  %19078 = icmp eq i32 %19069, 0
  %19079 = zext i1 %19078 to i8
  %19080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19079, i8* %19080, align 1
  %19081 = lshr i32 %19069, 31
  %19082 = trunc i32 %19081 to i8
  %19083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19082, i8* %19083, align 1
  %19084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19084, align 1
  %19085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19085, align 1
  store %struct.Memory* %loadMem_407004, %struct.Memory** %MEMORY
  %loadMem_407006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19087 = getelementptr inbounds %struct.GPR, %struct.GPR* %19086, i32 0, i32 33
  %19088 = getelementptr inbounds %struct.Reg, %struct.Reg* %19087, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %19088 to i64*
  %19089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19090 = getelementptr inbounds %struct.GPR, %struct.GPR* %19089, i32 0, i32 5
  %19091 = getelementptr inbounds %struct.Reg, %struct.Reg* %19090, i32 0, i32 0
  %ECX.i716 = bitcast %union.anon* %19091 to i32*
  %19092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19093 = getelementptr inbounds %struct.GPR, %struct.GPR* %19092, i32 0, i32 7
  %19094 = getelementptr inbounds %struct.Reg, %struct.Reg* %19093, i32 0, i32 0
  %RDX.i717 = bitcast %union.anon* %19094 to i64*
  %19095 = load i32, i32* %ECX.i716
  %19096 = zext i32 %19095 to i64
  %19097 = load i64, i64* %PC.i715
  %19098 = add i64 %19097, 2
  store i64 %19098, i64* %PC.i715
  %19099 = and i64 %19096, 4294967295
  store i64 %19099, i64* %RDX.i717, align 8
  store %struct.Memory* %loadMem_407006, %struct.Memory** %MEMORY
  %loadMem_407008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19101 = getelementptr inbounds %struct.GPR, %struct.GPR* %19100, i32 0, i32 33
  %19102 = getelementptr inbounds %struct.Reg, %struct.Reg* %19101, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %19102 to i64*
  %19103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19104 = getelementptr inbounds %struct.GPR, %struct.GPR* %19103, i32 0, i32 1
  %19105 = getelementptr inbounds %struct.Reg, %struct.Reg* %19104, i32 0, i32 0
  %EAX.i713 = bitcast %union.anon* %19105 to i32*
  %19106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19107 = getelementptr inbounds %struct.GPR, %struct.GPR* %19106, i32 0, i32 5
  %19108 = getelementptr inbounds %struct.Reg, %struct.Reg* %19107, i32 0, i32 0
  %RCX.i714 = bitcast %union.anon* %19108 to i64*
  %19109 = load i32, i32* %EAX.i713
  %19110 = zext i32 %19109 to i64
  %19111 = load i64, i64* %PC.i712
  %19112 = add i64 %19111, 2
  store i64 %19112, i64* %PC.i712
  %19113 = and i64 %19110, 4294967295
  store i64 %19113, i64* %RCX.i714, align 8
  store %struct.Memory* %loadMem_407008, %struct.Memory** %MEMORY
  %loadMem_40700a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19115 = getelementptr inbounds %struct.GPR, %struct.GPR* %19114, i32 0, i32 33
  %19116 = getelementptr inbounds %struct.Reg, %struct.Reg* %19115, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %19116 to i64*
  %19117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19118 = getelementptr inbounds %struct.GPR, %struct.GPR* %19117, i32 0, i32 1
  %19119 = getelementptr inbounds %struct.Reg, %struct.Reg* %19118, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %19119 to i64*
  %19120 = load i64, i64* %PC.i710
  %19121 = add i64 %19120, 8
  store i64 %19121, i64* %PC.i710
  %19122 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %19122, i64* %RAX.i711, align 8
  store %struct.Memory* %loadMem_40700a, %struct.Memory** %MEMORY
  %loadMem_407012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19124 = getelementptr inbounds %struct.GPR, %struct.GPR* %19123, i32 0, i32 33
  %19125 = getelementptr inbounds %struct.Reg, %struct.Reg* %19124, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %19125 to i64*
  %19126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19127 = getelementptr inbounds %struct.GPR, %struct.GPR* %19126, i32 0, i32 1
  %19128 = getelementptr inbounds %struct.Reg, %struct.Reg* %19127, i32 0, i32 0
  %RAX.i709 = bitcast %union.anon* %19128 to i64*
  %19129 = load i64, i64* %RAX.i709
  %19130 = load i64, i64* %PC.i708
  %19131 = add i64 %19130, 6
  store i64 %19131, i64* %PC.i708
  %19132 = add i64 13112, %19129
  store i64 %19132, i64* %RAX.i709, align 8
  %19133 = icmp ult i64 %19132, %19129
  %19134 = icmp ult i64 %19132, 13112
  %19135 = or i1 %19133, %19134
  %19136 = zext i1 %19135 to i8
  %19137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19136, i8* %19137, align 1
  %19138 = trunc i64 %19132 to i32
  %19139 = and i32 %19138, 255
  %19140 = call i32 @llvm.ctpop.i32(i32 %19139)
  %19141 = trunc i32 %19140 to i8
  %19142 = and i8 %19141, 1
  %19143 = xor i8 %19142, 1
  %19144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19143, i8* %19144, align 1
  %19145 = xor i64 13112, %19129
  %19146 = xor i64 %19145, %19132
  %19147 = lshr i64 %19146, 4
  %19148 = trunc i64 %19147 to i8
  %19149 = and i8 %19148, 1
  %19150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19149, i8* %19150, align 1
  %19151 = icmp eq i64 %19132, 0
  %19152 = zext i1 %19151 to i8
  %19153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19152, i8* %19153, align 1
  %19154 = lshr i64 %19132, 63
  %19155 = trunc i64 %19154 to i8
  %19156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19155, i8* %19156, align 1
  %19157 = lshr i64 %19129, 63
  %19158 = xor i64 %19154, %19157
  %19159 = add i64 %19158, %19154
  %19160 = icmp eq i64 %19159, 2
  %19161 = zext i1 %19160 to i8
  %19162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19161, i8* %19162, align 1
  store %struct.Memory* %loadMem_407012, %struct.Memory** %MEMORY
  %loadMem_407018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19164 = getelementptr inbounds %struct.GPR, %struct.GPR* %19163, i32 0, i32 33
  %19165 = getelementptr inbounds %struct.Reg, %struct.Reg* %19164, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %19165 to i64*
  %19166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19167 = getelementptr inbounds %struct.GPR, %struct.GPR* %19166, i32 0, i32 9
  %19168 = getelementptr inbounds %struct.Reg, %struct.Reg* %19167, i32 0, i32 0
  %RSI.i706 = bitcast %union.anon* %19168 to i64*
  %19169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19170 = getelementptr inbounds %struct.GPR, %struct.GPR* %19169, i32 0, i32 15
  %19171 = getelementptr inbounds %struct.Reg, %struct.Reg* %19170, i32 0, i32 0
  %RBP.i707 = bitcast %union.anon* %19171 to i64*
  %19172 = load i64, i64* %RBP.i707
  %19173 = sub i64 %19172, 24
  %19174 = load i64, i64* %PC.i705
  %19175 = add i64 %19174, 4
  store i64 %19175, i64* %PC.i705
  %19176 = inttoptr i64 %19173 to i32*
  %19177 = load i32, i32* %19176
  %19178 = sext i32 %19177 to i64
  store i64 %19178, i64* %RSI.i706, align 8
  store %struct.Memory* %loadMem_407018, %struct.Memory** %MEMORY
  %loadMem_40701c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19180 = getelementptr inbounds %struct.GPR, %struct.GPR* %19179, i32 0, i32 33
  %19181 = getelementptr inbounds %struct.Reg, %struct.Reg* %19180, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %19181 to i64*
  %19182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19183 = getelementptr inbounds %struct.GPR, %struct.GPR* %19182, i32 0, i32 9
  %19184 = getelementptr inbounds %struct.Reg, %struct.Reg* %19183, i32 0, i32 0
  %RSI.i704 = bitcast %union.anon* %19184 to i64*
  %19185 = load i64, i64* %RSI.i704
  %19186 = load i64, i64* %PC.i703
  %19187 = add i64 %19186, 4
  store i64 %19187, i64* %PC.i703
  %19188 = shl i64 %19185, 5
  %19189 = icmp slt i64 %19188, 0
  %19190 = shl i64 %19188, 1
  store i64 %19190, i64* %RSI.i704, align 8
  %19191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19192 = zext i1 %19189 to i8
  store i8 %19192, i8* %19191, align 1
  %19193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19194 = trunc i64 %19190 to i32
  %19195 = and i32 %19194, 254
  %19196 = call i32 @llvm.ctpop.i32(i32 %19195)
  %19197 = trunc i32 %19196 to i8
  %19198 = and i8 %19197, 1
  %19199 = xor i8 %19198, 1
  store i8 %19199, i8* %19193, align 1
  %19200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19200, align 1
  %19201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19202 = icmp eq i64 %19190, 0
  %19203 = zext i1 %19202 to i8
  store i8 %19203, i8* %19201, align 1
  %19204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19205 = lshr i64 %19190, 63
  %19206 = trunc i64 %19205 to i8
  store i8 %19206, i8* %19204, align 1
  %19207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19207, align 1
  store %struct.Memory* %loadMem_40701c, %struct.Memory** %MEMORY
  %loadMem_407020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19209 = getelementptr inbounds %struct.GPR, %struct.GPR* %19208, i32 0, i32 33
  %19210 = getelementptr inbounds %struct.Reg, %struct.Reg* %19209, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %19210 to i64*
  %19211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19212 = getelementptr inbounds %struct.GPR, %struct.GPR* %19211, i32 0, i32 1
  %19213 = getelementptr inbounds %struct.Reg, %struct.Reg* %19212, i32 0, i32 0
  %RAX.i701 = bitcast %union.anon* %19213 to i64*
  %19214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19215 = getelementptr inbounds %struct.GPR, %struct.GPR* %19214, i32 0, i32 9
  %19216 = getelementptr inbounds %struct.Reg, %struct.Reg* %19215, i32 0, i32 0
  %RSI.i702 = bitcast %union.anon* %19216 to i64*
  %19217 = load i64, i64* %RAX.i701
  %19218 = load i64, i64* %RSI.i702
  %19219 = load i64, i64* %PC.i700
  %19220 = add i64 %19219, 3
  store i64 %19220, i64* %PC.i700
  %19221 = add i64 %19218, %19217
  store i64 %19221, i64* %RAX.i701, align 8
  %19222 = icmp ult i64 %19221, %19217
  %19223 = icmp ult i64 %19221, %19218
  %19224 = or i1 %19222, %19223
  %19225 = zext i1 %19224 to i8
  %19226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19225, i8* %19226, align 1
  %19227 = trunc i64 %19221 to i32
  %19228 = and i32 %19227, 255
  %19229 = call i32 @llvm.ctpop.i32(i32 %19228)
  %19230 = trunc i32 %19229 to i8
  %19231 = and i8 %19230, 1
  %19232 = xor i8 %19231, 1
  %19233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19232, i8* %19233, align 1
  %19234 = xor i64 %19218, %19217
  %19235 = xor i64 %19234, %19221
  %19236 = lshr i64 %19235, 4
  %19237 = trunc i64 %19236 to i8
  %19238 = and i8 %19237, 1
  %19239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19238, i8* %19239, align 1
  %19240 = icmp eq i64 %19221, 0
  %19241 = zext i1 %19240 to i8
  %19242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19241, i8* %19242, align 1
  %19243 = lshr i64 %19221, 63
  %19244 = trunc i64 %19243 to i8
  %19245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19244, i8* %19245, align 1
  %19246 = lshr i64 %19217, 63
  %19247 = lshr i64 %19218, 63
  %19248 = xor i64 %19243, %19246
  %19249 = xor i64 %19243, %19247
  %19250 = add i64 %19248, %19249
  %19251 = icmp eq i64 %19250, 2
  %19252 = zext i1 %19251 to i8
  %19253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19252, i8* %19253, align 1
  store %struct.Memory* %loadMem_407020, %struct.Memory** %MEMORY
  %loadMem_407023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19255 = getelementptr inbounds %struct.GPR, %struct.GPR* %19254, i32 0, i32 33
  %19256 = getelementptr inbounds %struct.Reg, %struct.Reg* %19255, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %19256 to i64*
  %19257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19258 = getelementptr inbounds %struct.GPR, %struct.GPR* %19257, i32 0, i32 9
  %19259 = getelementptr inbounds %struct.Reg, %struct.Reg* %19258, i32 0, i32 0
  %RSI.i698 = bitcast %union.anon* %19259 to i64*
  %19260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19261 = getelementptr inbounds %struct.GPR, %struct.GPR* %19260, i32 0, i32 15
  %19262 = getelementptr inbounds %struct.Reg, %struct.Reg* %19261, i32 0, i32 0
  %RBP.i699 = bitcast %union.anon* %19262 to i64*
  %19263 = load i64, i64* %RBP.i699
  %19264 = sub i64 %19263, 28
  %19265 = load i64, i64* %PC.i697
  %19266 = add i64 %19265, 4
  store i64 %19266, i64* %PC.i697
  %19267 = inttoptr i64 %19264 to i32*
  %19268 = load i32, i32* %19267
  %19269 = sext i32 %19268 to i64
  store i64 %19269, i64* %RSI.i698, align 8
  store %struct.Memory* %loadMem_407023, %struct.Memory** %MEMORY
  %loadMem_407027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19271 = getelementptr inbounds %struct.GPR, %struct.GPR* %19270, i32 0, i32 33
  %19272 = getelementptr inbounds %struct.Reg, %struct.Reg* %19271, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %19272 to i64*
  %19273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19274 = getelementptr inbounds %struct.GPR, %struct.GPR* %19273, i32 0, i32 5
  %19275 = getelementptr inbounds %struct.Reg, %struct.Reg* %19274, i32 0, i32 0
  %ECX.i694 = bitcast %union.anon* %19275 to i32*
  %19276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19277 = getelementptr inbounds %struct.GPR, %struct.GPR* %19276, i32 0, i32 1
  %19278 = getelementptr inbounds %struct.Reg, %struct.Reg* %19277, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %19278 to i64*
  %19279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19280 = getelementptr inbounds %struct.GPR, %struct.GPR* %19279, i32 0, i32 9
  %19281 = getelementptr inbounds %struct.Reg, %struct.Reg* %19280, i32 0, i32 0
  %RSI.i696 = bitcast %union.anon* %19281 to i64*
  %19282 = load i64, i64* %RAX.i695
  %19283 = load i64, i64* %RSI.i696
  %19284 = mul i64 %19283, 4
  %19285 = add i64 %19284, %19282
  %19286 = load i32, i32* %ECX.i694
  %19287 = zext i32 %19286 to i64
  %19288 = load i64, i64* %PC.i693
  %19289 = add i64 %19288, 3
  store i64 %19289, i64* %PC.i693
  %19290 = inttoptr i64 %19285 to i32*
  store i32 %19286, i32* %19290
  store %struct.Memory* %loadMem_407027, %struct.Memory** %MEMORY
  %loadMem_40702a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19292 = getelementptr inbounds %struct.GPR, %struct.GPR* %19291, i32 0, i32 33
  %19293 = getelementptr inbounds %struct.Reg, %struct.Reg* %19292, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %19293 to i64*
  %19294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19295 = getelementptr inbounds %struct.GPR, %struct.GPR* %19294, i32 0, i32 1
  %19296 = getelementptr inbounds %struct.Reg, %struct.Reg* %19295, i32 0, i32 0
  %RAX.i692 = bitcast %union.anon* %19296 to i64*
  %19297 = load i64, i64* %PC.i691
  %19298 = add i64 %19297, 8
  store i64 %19298, i64* %PC.i691
  %19299 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %19299, i64* %RAX.i692, align 8
  store %struct.Memory* %loadMem_40702a, %struct.Memory** %MEMORY
  %loadMem_407032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19301 = getelementptr inbounds %struct.GPR, %struct.GPR* %19300, i32 0, i32 33
  %19302 = getelementptr inbounds %struct.Reg, %struct.Reg* %19301, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %19302 to i64*
  %19303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19304 = getelementptr inbounds %struct.GPR, %struct.GPR* %19303, i32 0, i32 1
  %19305 = getelementptr inbounds %struct.Reg, %struct.Reg* %19304, i32 0, i32 0
  %RAX.i690 = bitcast %union.anon* %19305 to i64*
  %19306 = load i64, i64* %RAX.i690
  %19307 = add i64 %19306, 72684
  %19308 = load i64, i64* %PC.i689
  %19309 = add i64 %19308, 7
  store i64 %19309, i64* %PC.i689
  %19310 = inttoptr i64 %19307 to i32*
  %19311 = load i32, i32* %19310
  %19312 = sext i32 %19311 to i64
  store i64 %19312, i64* %RAX.i690, align 8
  store %struct.Memory* %loadMem_407032, %struct.Memory** %MEMORY
  %loadMem_407039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19314 = getelementptr inbounds %struct.GPR, %struct.GPR* %19313, i32 0, i32 33
  %19315 = getelementptr inbounds %struct.Reg, %struct.Reg* %19314, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %19315 to i64*
  %19316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19317 = getelementptr inbounds %struct.GPR, %struct.GPR* %19316, i32 0, i32 9
  %19318 = getelementptr inbounds %struct.Reg, %struct.Reg* %19317, i32 0, i32 0
  %RSI.i687 = bitcast %union.anon* %19318 to i64*
  %19319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19320 = getelementptr inbounds %struct.GPR, %struct.GPR* %19319, i32 0, i32 15
  %19321 = getelementptr inbounds %struct.Reg, %struct.Reg* %19320, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %19321 to i64*
  %19322 = load i64, i64* %RBP.i688
  %19323 = sub i64 %19322, 28
  %19324 = load i64, i64* %PC.i686
  %19325 = add i64 %19324, 4
  store i64 %19325, i64* %PC.i686
  %19326 = inttoptr i64 %19323 to i32*
  %19327 = load i32, i32* %19326
  %19328 = sext i32 %19327 to i64
  store i64 %19328, i64* %RSI.i687, align 8
  store %struct.Memory* %loadMem_407039, %struct.Memory** %MEMORY
  %loadMem_40703d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19330 = getelementptr inbounds %struct.GPR, %struct.GPR* %19329, i32 0, i32 33
  %19331 = getelementptr inbounds %struct.Reg, %struct.Reg* %19330, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %19331 to i64*
  %19332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19333 = getelementptr inbounds %struct.GPR, %struct.GPR* %19332, i32 0, i32 5
  %19334 = getelementptr inbounds %struct.Reg, %struct.Reg* %19333, i32 0, i32 0
  %RCX.i683 = bitcast %union.anon* %19334 to i64*
  %19335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19336 = getelementptr inbounds %struct.GPR, %struct.GPR* %19335, i32 0, i32 9
  %19337 = getelementptr inbounds %struct.Reg, %struct.Reg* %19336, i32 0, i32 0
  %RSI.i684 = bitcast %union.anon* %19337 to i64*
  %19338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19339 = getelementptr inbounds %struct.GPR, %struct.GPR* %19338, i32 0, i32 15
  %19340 = getelementptr inbounds %struct.Reg, %struct.Reg* %19339, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %19340 to i64*
  %19341 = load i64, i64* %RBP.i685
  %19342 = load i64, i64* %RSI.i684
  %19343 = mul i64 %19342, 4
  %19344 = add i64 %19341, -80
  %19345 = add i64 %19344, %19343
  %19346 = load i64, i64* %PC.i682
  %19347 = add i64 %19346, 4
  store i64 %19347, i64* %PC.i682
  %19348 = inttoptr i64 %19345 to i32*
  %19349 = load i32, i32* %19348
  %19350 = zext i32 %19349 to i64
  store i64 %19350, i64* %RCX.i683, align 8
  store %struct.Memory* %loadMem_40703d, %struct.Memory** %MEMORY
  %loadMem_407041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19352 = getelementptr inbounds %struct.GPR, %struct.GPR* %19351, i32 0, i32 33
  %19353 = getelementptr inbounds %struct.Reg, %struct.Reg* %19352, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %19353 to i64*
  %19354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19355 = getelementptr inbounds %struct.GPR, %struct.GPR* %19354, i32 0, i32 9
  %19356 = getelementptr inbounds %struct.Reg, %struct.Reg* %19355, i32 0, i32 0
  %RSI.i680 = bitcast %union.anon* %19356 to i64*
  %19357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19358 = getelementptr inbounds %struct.GPR, %struct.GPR* %19357, i32 0, i32 15
  %19359 = getelementptr inbounds %struct.Reg, %struct.Reg* %19358, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %19359 to i64*
  %19360 = load i64, i64* %RBP.i681
  %19361 = sub i64 %19360, 36
  %19362 = load i64, i64* %PC.i679
  %19363 = add i64 %19362, 4
  store i64 %19363, i64* %PC.i679
  %19364 = inttoptr i64 %19361 to i32*
  %19365 = load i32, i32* %19364
  %19366 = sext i32 %19365 to i64
  store i64 %19366, i64* %RSI.i680, align 8
  store %struct.Memory* %loadMem_407041, %struct.Memory** %MEMORY
  %loadMem_407045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19368 = getelementptr inbounds %struct.GPR, %struct.GPR* %19367, i32 0, i32 33
  %19369 = getelementptr inbounds %struct.Reg, %struct.Reg* %19368, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %19369 to i64*
  %19370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19371 = getelementptr inbounds %struct.GPR, %struct.GPR* %19370, i32 0, i32 5
  %19372 = getelementptr inbounds %struct.Reg, %struct.Reg* %19371, i32 0, i32 0
  %RCX.i676 = bitcast %union.anon* %19372 to i64*
  %19373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19374 = getelementptr inbounds %struct.GPR, %struct.GPR* %19373, i32 0, i32 9
  %19375 = getelementptr inbounds %struct.Reg, %struct.Reg* %19374, i32 0, i32 0
  %RSI.i677 = bitcast %union.anon* %19375 to i64*
  %19376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19377 = getelementptr inbounds %struct.GPR, %struct.GPR* %19376, i32 0, i32 15
  %19378 = getelementptr inbounds %struct.Reg, %struct.Reg* %19377, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %19378 to i64*
  %19379 = load i64, i64* %RCX.i676
  %19380 = load i64, i64* %RBP.i678
  %19381 = load i64, i64* %RSI.i677
  %19382 = mul i64 %19381, 4
  %19383 = add i64 %19380, -80
  %19384 = add i64 %19383, %19382
  %19385 = load i64, i64* %PC.i675
  %19386 = add i64 %19385, 4
  store i64 %19386, i64* %PC.i675
  %19387 = trunc i64 %19379 to i32
  %19388 = inttoptr i64 %19384 to i32*
  %19389 = load i32, i32* %19388
  %19390 = sub i32 %19387, %19389
  %19391 = zext i32 %19390 to i64
  store i64 %19391, i64* %RCX.i676, align 8
  %19392 = icmp ult i32 %19387, %19389
  %19393 = zext i1 %19392 to i8
  %19394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19393, i8* %19394, align 1
  %19395 = and i32 %19390, 255
  %19396 = call i32 @llvm.ctpop.i32(i32 %19395)
  %19397 = trunc i32 %19396 to i8
  %19398 = and i8 %19397, 1
  %19399 = xor i8 %19398, 1
  %19400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19399, i8* %19400, align 1
  %19401 = xor i32 %19389, %19387
  %19402 = xor i32 %19401, %19390
  %19403 = lshr i32 %19402, 4
  %19404 = trunc i32 %19403 to i8
  %19405 = and i8 %19404, 1
  %19406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19405, i8* %19406, align 1
  %19407 = icmp eq i32 %19390, 0
  %19408 = zext i1 %19407 to i8
  %19409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19408, i8* %19409, align 1
  %19410 = lshr i32 %19390, 31
  %19411 = trunc i32 %19410 to i8
  %19412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19411, i8* %19412, align 1
  %19413 = lshr i32 %19387, 31
  %19414 = lshr i32 %19389, 31
  %19415 = xor i32 %19414, %19413
  %19416 = xor i32 %19410, %19413
  %19417 = add i32 %19416, %19415
  %19418 = icmp eq i32 %19417, 2
  %19419 = zext i1 %19418 to i8
  %19420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19419, i8* %19420, align 1
  store %struct.Memory* %loadMem_407045, %struct.Memory** %MEMORY
  %loadMem_407049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19422 = getelementptr inbounds %struct.GPR, %struct.GPR* %19421, i32 0, i32 33
  %19423 = getelementptr inbounds %struct.Reg, %struct.Reg* %19422, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %19423 to i64*
  %19424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19425 = getelementptr inbounds %struct.GPR, %struct.GPR* %19424, i32 0, i32 5
  %19426 = getelementptr inbounds %struct.Reg, %struct.Reg* %19425, i32 0, i32 0
  %ECX.i673 = bitcast %union.anon* %19426 to i32*
  %19427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19428 = getelementptr inbounds %struct.GPR, %struct.GPR* %19427, i32 0, i32 9
  %19429 = getelementptr inbounds %struct.Reg, %struct.Reg* %19428, i32 0, i32 0
  %RSI.i674 = bitcast %union.anon* %19429 to i64*
  %19430 = load i32, i32* %ECX.i673
  %19431 = zext i32 %19430 to i64
  %19432 = load i64, i64* %PC.i672
  %19433 = add i64 %19432, 3
  store i64 %19433, i64* %PC.i672
  %19434 = shl i64 %19431, 32
  %19435 = ashr exact i64 %19434, 32
  store i64 %19435, i64* %RSI.i674, align 8
  store %struct.Memory* %loadMem_407049, %struct.Memory** %MEMORY
  %loadMem_40704c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19437 = getelementptr inbounds %struct.GPR, %struct.GPR* %19436, i32 0, i32 33
  %19438 = getelementptr inbounds %struct.Reg, %struct.Reg* %19437, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %19438 to i64*
  %19439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19440 = getelementptr inbounds %struct.GPR, %struct.GPR* %19439, i32 0, i32 11
  %19441 = getelementptr inbounds %struct.Reg, %struct.Reg* %19440, i32 0, i32 0
  %RDI.i671 = bitcast %union.anon* %19441 to i64*
  %19442 = load i64, i64* %PC.i670
  %19443 = add i64 %19442, 8
  store i64 %19443, i64* %PC.i670
  %19444 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %19444, i64* %RDI.i671, align 8
  store %struct.Memory* %loadMem_40704c, %struct.Memory** %MEMORY
  %loadMem_407054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19446 = getelementptr inbounds %struct.GPR, %struct.GPR* %19445, i32 0, i32 33
  %19447 = getelementptr inbounds %struct.Reg, %struct.Reg* %19446, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %19447 to i64*
  %19448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19449 = getelementptr inbounds %struct.GPR, %struct.GPR* %19448, i32 0, i32 11
  %19450 = getelementptr inbounds %struct.Reg, %struct.Reg* %19449, i32 0, i32 0
  %RDI.i669 = bitcast %union.anon* %19450 to i64*
  %19451 = load i64, i64* %RDI.i669
  %19452 = load i64, i64* %PC.i668
  %19453 = add i64 %19452, 7
  store i64 %19453, i64* %PC.i668
  %19454 = add i64 12600, %19451
  store i64 %19454, i64* %RDI.i669, align 8
  %19455 = icmp ult i64 %19454, %19451
  %19456 = icmp ult i64 %19454, 12600
  %19457 = or i1 %19455, %19456
  %19458 = zext i1 %19457 to i8
  %19459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19458, i8* %19459, align 1
  %19460 = trunc i64 %19454 to i32
  %19461 = and i32 %19460, 255
  %19462 = call i32 @llvm.ctpop.i32(i32 %19461)
  %19463 = trunc i32 %19462 to i8
  %19464 = and i8 %19463, 1
  %19465 = xor i8 %19464, 1
  %19466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19465, i8* %19466, align 1
  %19467 = xor i64 12600, %19451
  %19468 = xor i64 %19467, %19454
  %19469 = lshr i64 %19468, 4
  %19470 = trunc i64 %19469 to i8
  %19471 = and i8 %19470, 1
  %19472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19471, i8* %19472, align 1
  %19473 = icmp eq i64 %19454, 0
  %19474 = zext i1 %19473 to i8
  %19475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19474, i8* %19475, align 1
  %19476 = lshr i64 %19454, 63
  %19477 = trunc i64 %19476 to i8
  %19478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19477, i8* %19478, align 1
  %19479 = lshr i64 %19451, 63
  %19480 = xor i64 %19476, %19479
  %19481 = add i64 %19480, %19476
  %19482 = icmp eq i64 %19481, 2
  %19483 = zext i1 %19482 to i8
  %19484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19483, i8* %19484, align 1
  store %struct.Memory* %loadMem_407054, %struct.Memory** %MEMORY
  %loadMem_40705b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19486 = getelementptr inbounds %struct.GPR, %struct.GPR* %19485, i32 0, i32 33
  %19487 = getelementptr inbounds %struct.Reg, %struct.Reg* %19486, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %19487 to i64*
  %19488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19489 = getelementptr inbounds %struct.GPR, %struct.GPR* %19488, i32 0, i32 5
  %19490 = getelementptr inbounds %struct.Reg, %struct.Reg* %19489, i32 0, i32 0
  %RCX.i666 = bitcast %union.anon* %19490 to i64*
  %19491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19492 = getelementptr inbounds %struct.GPR, %struct.GPR* %19491, i32 0, i32 15
  %19493 = getelementptr inbounds %struct.Reg, %struct.Reg* %19492, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %19493 to i64*
  %19494 = load i64, i64* %RBP.i667
  %19495 = sub i64 %19494, 24
  %19496 = load i64, i64* %PC.i665
  %19497 = add i64 %19496, 3
  store i64 %19497, i64* %PC.i665
  %19498 = inttoptr i64 %19495 to i32*
  %19499 = load i32, i32* %19498
  %19500 = zext i32 %19499 to i64
  store i64 %19500, i64* %RCX.i666, align 8
  store %struct.Memory* %loadMem_40705b, %struct.Memory** %MEMORY
  %loadMem_40705e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19502 = getelementptr inbounds %struct.GPR, %struct.GPR* %19501, i32 0, i32 33
  %19503 = getelementptr inbounds %struct.Reg, %struct.Reg* %19502, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %19503 to i64*
  %19504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19505 = getelementptr inbounds %struct.GPR, %struct.GPR* %19504, i32 0, i32 5
  %19506 = getelementptr inbounds %struct.Reg, %struct.Reg* %19505, i32 0, i32 0
  %RCX.i663 = bitcast %union.anon* %19506 to i64*
  %19507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19508 = getelementptr inbounds %struct.GPR, %struct.GPR* %19507, i32 0, i32 15
  %19509 = getelementptr inbounds %struct.Reg, %struct.Reg* %19508, i32 0, i32 0
  %RBP.i664 = bitcast %union.anon* %19509 to i64*
  %19510 = load i64, i64* %RCX.i663
  %19511 = load i64, i64* %RBP.i664
  %19512 = sub i64 %19511, 4
  %19513 = load i64, i64* %PC.i662
  %19514 = add i64 %19513, 3
  store i64 %19514, i64* %PC.i662
  %19515 = trunc i64 %19510 to i32
  %19516 = inttoptr i64 %19512 to i32*
  %19517 = load i32, i32* %19516
  %19518 = add i32 %19517, %19515
  %19519 = zext i32 %19518 to i64
  store i64 %19519, i64* %RCX.i663, align 8
  %19520 = icmp ult i32 %19518, %19515
  %19521 = icmp ult i32 %19518, %19517
  %19522 = or i1 %19520, %19521
  %19523 = zext i1 %19522 to i8
  %19524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19523, i8* %19524, align 1
  %19525 = and i32 %19518, 255
  %19526 = call i32 @llvm.ctpop.i32(i32 %19525)
  %19527 = trunc i32 %19526 to i8
  %19528 = and i8 %19527, 1
  %19529 = xor i8 %19528, 1
  %19530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19529, i8* %19530, align 1
  %19531 = xor i32 %19517, %19515
  %19532 = xor i32 %19531, %19518
  %19533 = lshr i32 %19532, 4
  %19534 = trunc i32 %19533 to i8
  %19535 = and i8 %19534, 1
  %19536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19535, i8* %19536, align 1
  %19537 = icmp eq i32 %19518, 0
  %19538 = zext i1 %19537 to i8
  %19539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19538, i8* %19539, align 1
  %19540 = lshr i32 %19518, 31
  %19541 = trunc i32 %19540 to i8
  %19542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19541, i8* %19542, align 1
  %19543 = lshr i32 %19515, 31
  %19544 = lshr i32 %19517, 31
  %19545 = xor i32 %19540, %19543
  %19546 = xor i32 %19540, %19544
  %19547 = add i32 %19545, %19546
  %19548 = icmp eq i32 %19547, 2
  %19549 = zext i1 %19548 to i8
  %19550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19549, i8* %19550, align 1
  store %struct.Memory* %loadMem_40705e, %struct.Memory** %MEMORY
  %loadMem_407061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19552 = getelementptr inbounds %struct.GPR, %struct.GPR* %19551, i32 0, i32 33
  %19553 = getelementptr inbounds %struct.Reg, %struct.Reg* %19552, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %19553 to i64*
  %19554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19555 = getelementptr inbounds %struct.GPR, %struct.GPR* %19554, i32 0, i32 5
  %19556 = getelementptr inbounds %struct.Reg, %struct.Reg* %19555, i32 0, i32 0
  %ECX.i660 = bitcast %union.anon* %19556 to i32*
  %19557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19558 = getelementptr inbounds %struct.GPR, %struct.GPR* %19557, i32 0, i32 17
  %19559 = getelementptr inbounds %struct.Reg, %struct.Reg* %19558, i32 0, i32 0
  %R8.i661 = bitcast %union.anon* %19559 to i64*
  %19560 = load i32, i32* %ECX.i660
  %19561 = zext i32 %19560 to i64
  %19562 = load i64, i64* %PC.i659
  %19563 = add i64 %19562, 3
  store i64 %19563, i64* %PC.i659
  %19564 = shl i64 %19561, 32
  %19565 = ashr exact i64 %19564, 32
  store i64 %19565, i64* %R8.i661, align 8
  store %struct.Memory* %loadMem_407061, %struct.Memory** %MEMORY
  %loadMem_407064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19567 = getelementptr inbounds %struct.GPR, %struct.GPR* %19566, i32 0, i32 33
  %19568 = getelementptr inbounds %struct.Reg, %struct.Reg* %19567, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %19568 to i64*
  %19569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19570 = getelementptr inbounds %struct.GPR, %struct.GPR* %19569, i32 0, i32 17
  %19571 = getelementptr inbounds %struct.Reg, %struct.Reg* %19570, i32 0, i32 0
  %R8.i658 = bitcast %union.anon* %19571 to i64*
  %19572 = load i64, i64* %R8.i658
  %19573 = load i64, i64* %PC.i657
  %19574 = add i64 %19573, 4
  store i64 %19574, i64* %PC.i657
  %19575 = shl i64 %19572, 4
  %19576 = icmp slt i64 %19575, 0
  %19577 = shl i64 %19575, 1
  store i64 %19577, i64* %R8.i658, align 8
  %19578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19579 = zext i1 %19576 to i8
  store i8 %19579, i8* %19578, align 1
  %19580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19581 = trunc i64 %19577 to i32
  %19582 = and i32 %19581, 254
  %19583 = call i32 @llvm.ctpop.i32(i32 %19582)
  %19584 = trunc i32 %19583 to i8
  %19585 = and i8 %19584, 1
  %19586 = xor i8 %19585, 1
  store i8 %19586, i8* %19580, align 1
  %19587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19587, align 1
  %19588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19589 = icmp eq i64 %19577, 0
  %19590 = zext i1 %19589 to i8
  store i8 %19590, i8* %19588, align 1
  %19591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19592 = lshr i64 %19577, 63
  %19593 = trunc i64 %19592 to i8
  store i8 %19593, i8* %19591, align 1
  %19594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19594, align 1
  store %struct.Memory* %loadMem_407064, %struct.Memory** %MEMORY
  %loadMem_407068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19596 = getelementptr inbounds %struct.GPR, %struct.GPR* %19595, i32 0, i32 33
  %19597 = getelementptr inbounds %struct.Reg, %struct.Reg* %19596, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %19597 to i64*
  %19598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19599 = getelementptr inbounds %struct.GPR, %struct.GPR* %19598, i32 0, i32 11
  %19600 = getelementptr inbounds %struct.Reg, %struct.Reg* %19599, i32 0, i32 0
  %RDI.i655 = bitcast %union.anon* %19600 to i64*
  %19601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19602 = getelementptr inbounds %struct.GPR, %struct.GPR* %19601, i32 0, i32 17
  %19603 = getelementptr inbounds %struct.Reg, %struct.Reg* %19602, i32 0, i32 0
  %R8.i656 = bitcast %union.anon* %19603 to i64*
  %19604 = load i64, i64* %RDI.i655
  %19605 = load i64, i64* %R8.i656
  %19606 = load i64, i64* %PC.i654
  %19607 = add i64 %19606, 3
  store i64 %19607, i64* %PC.i654
  %19608 = add i64 %19605, %19604
  store i64 %19608, i64* %RDI.i655, align 8
  %19609 = icmp ult i64 %19608, %19604
  %19610 = icmp ult i64 %19608, %19605
  %19611 = or i1 %19609, %19610
  %19612 = zext i1 %19611 to i8
  %19613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19612, i8* %19613, align 1
  %19614 = trunc i64 %19608 to i32
  %19615 = and i32 %19614, 255
  %19616 = call i32 @llvm.ctpop.i32(i32 %19615)
  %19617 = trunc i32 %19616 to i8
  %19618 = and i8 %19617, 1
  %19619 = xor i8 %19618, 1
  %19620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19619, i8* %19620, align 1
  %19621 = xor i64 %19605, %19604
  %19622 = xor i64 %19621, %19608
  %19623 = lshr i64 %19622, 4
  %19624 = trunc i64 %19623 to i8
  %19625 = and i8 %19624, 1
  %19626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19625, i8* %19626, align 1
  %19627 = icmp eq i64 %19608, 0
  %19628 = zext i1 %19627 to i8
  %19629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19628, i8* %19629, align 1
  %19630 = lshr i64 %19608, 63
  %19631 = trunc i64 %19630 to i8
  %19632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19631, i8* %19632, align 1
  %19633 = lshr i64 %19604, 63
  %19634 = lshr i64 %19605, 63
  %19635 = xor i64 %19630, %19633
  %19636 = xor i64 %19630, %19634
  %19637 = add i64 %19635, %19636
  %19638 = icmp eq i64 %19637, 2
  %19639 = zext i1 %19638 to i8
  %19640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19639, i8* %19640, align 1
  store %struct.Memory* %loadMem_407068, %struct.Memory** %MEMORY
  %loadMem_40706b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19642 = getelementptr inbounds %struct.GPR, %struct.GPR* %19641, i32 0, i32 33
  %19643 = getelementptr inbounds %struct.Reg, %struct.Reg* %19642, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %19643 to i64*
  %19644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19645 = getelementptr inbounds %struct.GPR, %struct.GPR* %19644, i32 0, i32 5
  %19646 = getelementptr inbounds %struct.Reg, %struct.Reg* %19645, i32 0, i32 0
  %RCX.i652 = bitcast %union.anon* %19646 to i64*
  %19647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19648 = getelementptr inbounds %struct.GPR, %struct.GPR* %19647, i32 0, i32 15
  %19649 = getelementptr inbounds %struct.Reg, %struct.Reg* %19648, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %19649 to i64*
  %19650 = load i64, i64* %RBP.i653
  %19651 = sub i64 %19650, 36
  %19652 = load i64, i64* %PC.i651
  %19653 = add i64 %19652, 3
  store i64 %19653, i64* %PC.i651
  %19654 = inttoptr i64 %19651 to i32*
  %19655 = load i32, i32* %19654
  %19656 = zext i32 %19655 to i64
  store i64 %19656, i64* %RCX.i652, align 8
  store %struct.Memory* %loadMem_40706b, %struct.Memory** %MEMORY
  %loadMem_40706e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19658 = getelementptr inbounds %struct.GPR, %struct.GPR* %19657, i32 0, i32 33
  %19659 = getelementptr inbounds %struct.Reg, %struct.Reg* %19658, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %19659 to i64*
  %19660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19661 = getelementptr inbounds %struct.GPR, %struct.GPR* %19660, i32 0, i32 5
  %19662 = getelementptr inbounds %struct.Reg, %struct.Reg* %19661, i32 0, i32 0
  %RCX.i649 = bitcast %union.anon* %19662 to i64*
  %19663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19664 = getelementptr inbounds %struct.GPR, %struct.GPR* %19663, i32 0, i32 15
  %19665 = getelementptr inbounds %struct.Reg, %struct.Reg* %19664, i32 0, i32 0
  %RBP.i650 = bitcast %union.anon* %19665 to i64*
  %19666 = load i64, i64* %RCX.i649
  %19667 = load i64, i64* %RBP.i650
  %19668 = sub i64 %19667, 8
  %19669 = load i64, i64* %PC.i648
  %19670 = add i64 %19669, 3
  store i64 %19670, i64* %PC.i648
  %19671 = trunc i64 %19666 to i32
  %19672 = inttoptr i64 %19668 to i32*
  %19673 = load i32, i32* %19672
  %19674 = add i32 %19673, %19671
  %19675 = zext i32 %19674 to i64
  store i64 %19675, i64* %RCX.i649, align 8
  %19676 = icmp ult i32 %19674, %19671
  %19677 = icmp ult i32 %19674, %19673
  %19678 = or i1 %19676, %19677
  %19679 = zext i1 %19678 to i8
  %19680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19679, i8* %19680, align 1
  %19681 = and i32 %19674, 255
  %19682 = call i32 @llvm.ctpop.i32(i32 %19681)
  %19683 = trunc i32 %19682 to i8
  %19684 = and i8 %19683, 1
  %19685 = xor i8 %19684, 1
  %19686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19685, i8* %19686, align 1
  %19687 = xor i32 %19673, %19671
  %19688 = xor i32 %19687, %19674
  %19689 = lshr i32 %19688, 4
  %19690 = trunc i32 %19689 to i8
  %19691 = and i8 %19690, 1
  %19692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19691, i8* %19692, align 1
  %19693 = icmp eq i32 %19674, 0
  %19694 = zext i1 %19693 to i8
  %19695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19694, i8* %19695, align 1
  %19696 = lshr i32 %19674, 31
  %19697 = trunc i32 %19696 to i8
  %19698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19697, i8* %19698, align 1
  %19699 = lshr i32 %19671, 31
  %19700 = lshr i32 %19673, 31
  %19701 = xor i32 %19696, %19699
  %19702 = xor i32 %19696, %19700
  %19703 = add i32 %19701, %19702
  %19704 = icmp eq i32 %19703, 2
  %19705 = zext i1 %19704 to i8
  %19706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19705, i8* %19706, align 1
  store %struct.Memory* %loadMem_40706e, %struct.Memory** %MEMORY
  %loadMem_407071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19708 = getelementptr inbounds %struct.GPR, %struct.GPR* %19707, i32 0, i32 33
  %19709 = getelementptr inbounds %struct.Reg, %struct.Reg* %19708, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %19709 to i64*
  %19710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19711 = getelementptr inbounds %struct.GPR, %struct.GPR* %19710, i32 0, i32 5
  %19712 = getelementptr inbounds %struct.Reg, %struct.Reg* %19711, i32 0, i32 0
  %ECX.i646 = bitcast %union.anon* %19712 to i32*
  %19713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19714 = getelementptr inbounds %struct.GPR, %struct.GPR* %19713, i32 0, i32 17
  %19715 = getelementptr inbounds %struct.Reg, %struct.Reg* %19714, i32 0, i32 0
  %R8.i647 = bitcast %union.anon* %19715 to i64*
  %19716 = load i32, i32* %ECX.i646
  %19717 = zext i32 %19716 to i64
  %19718 = load i64, i64* %PC.i645
  %19719 = add i64 %19718, 3
  store i64 %19719, i64* %PC.i645
  %19720 = shl i64 %19717, 32
  %19721 = ashr exact i64 %19720, 32
  store i64 %19721, i64* %R8.i647, align 8
  store %struct.Memory* %loadMem_407071, %struct.Memory** %MEMORY
  %loadMem_407074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19723 = getelementptr inbounds %struct.GPR, %struct.GPR* %19722, i32 0, i32 33
  %19724 = getelementptr inbounds %struct.Reg, %struct.Reg* %19723, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %19724 to i64*
  %19725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19726 = getelementptr inbounds %struct.GPR, %struct.GPR* %19725, i32 0, i32 5
  %19727 = getelementptr inbounds %struct.Reg, %struct.Reg* %19726, i32 0, i32 0
  %RCX.i643 = bitcast %union.anon* %19727 to i64*
  %19728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19729 = getelementptr inbounds %struct.GPR, %struct.GPR* %19728, i32 0, i32 11
  %19730 = getelementptr inbounds %struct.Reg, %struct.Reg* %19729, i32 0, i32 0
  %RDI.i644 = bitcast %union.anon* %19730 to i64*
  %19731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19732 = getelementptr inbounds %struct.GPR, %struct.GPR* %19731, i32 0, i32 17
  %19733 = getelementptr inbounds %struct.Reg, %struct.Reg* %19732, i32 0, i32 0
  %R8.i = bitcast %union.anon* %19733 to i64*
  %19734 = load i64, i64* %RDI.i644
  %19735 = load i64, i64* %R8.i
  %19736 = mul i64 %19735, 2
  %19737 = add i64 %19736, %19734
  %19738 = load i64, i64* %PC.i642
  %19739 = add i64 %19738, 5
  store i64 %19739, i64* %PC.i642
  %19740 = inttoptr i64 %19737 to i16*
  %19741 = load i16, i16* %19740
  %19742 = zext i16 %19741 to i64
  store i64 %19742, i64* %RCX.i643, align 8
  store %struct.Memory* %loadMem_407074, %struct.Memory** %MEMORY
  %loadMem_407079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19744 = getelementptr inbounds %struct.GPR, %struct.GPR* %19743, i32 0, i32 33
  %19745 = getelementptr inbounds %struct.Reg, %struct.Reg* %19744, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %19745 to i64*
  %19746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19747 = getelementptr inbounds %struct.GPR, %struct.GPR* %19746, i32 0, i32 5
  %19748 = getelementptr inbounds %struct.Reg, %struct.Reg* %19747, i32 0, i32 0
  %ECX.i640 = bitcast %union.anon* %19748 to i32*
  %19749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19750 = getelementptr inbounds %struct.GPR, %struct.GPR* %19749, i32 0, i32 11
  %19751 = getelementptr inbounds %struct.Reg, %struct.Reg* %19750, i32 0, i32 0
  %RDI.i641 = bitcast %union.anon* %19751 to i64*
  %19752 = load i32, i32* %ECX.i640
  %19753 = zext i32 %19752 to i64
  %19754 = load i64, i64* %PC.i639
  %19755 = add i64 %19754, 2
  store i64 %19755, i64* %PC.i639
  %19756 = and i64 %19753, 4294967295
  store i64 %19756, i64* %RDI.i641, align 8
  store %struct.Memory* %loadMem_407079, %struct.Memory** %MEMORY
  %loadMem_40707b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19758 = getelementptr inbounds %struct.GPR, %struct.GPR* %19757, i32 0, i32 33
  %19759 = getelementptr inbounds %struct.Reg, %struct.Reg* %19758, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %19759 to i64*
  %19760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19761 = getelementptr inbounds %struct.GPR, %struct.GPR* %19760, i32 0, i32 11
  %19762 = getelementptr inbounds %struct.Reg, %struct.Reg* %19761, i32 0, i32 0
  %RDI.i638 = bitcast %union.anon* %19762 to i64*
  %19763 = load i64, i64* %RDI.i638
  %19764 = load i64, i64* %PC.i637
  %19765 = add i64 %19764, 4
  store i64 %19765, i64* %PC.i637
  %19766 = shl i64 %19763, 5
  %19767 = icmp slt i64 %19766, 0
  %19768 = shl i64 %19766, 1
  store i64 %19768, i64* %RDI.i638, align 8
  %19769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19770 = zext i1 %19767 to i8
  store i8 %19770, i8* %19769, align 1
  %19771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19772 = trunc i64 %19768 to i32
  %19773 = and i32 %19772, 254
  %19774 = call i32 @llvm.ctpop.i32(i32 %19773)
  %19775 = trunc i32 %19774 to i8
  %19776 = and i8 %19775, 1
  %19777 = xor i8 %19776, 1
  store i8 %19777, i8* %19771, align 1
  %19778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19778, align 1
  %19779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19780 = icmp eq i64 %19768, 0
  %19781 = zext i1 %19780 to i8
  store i8 %19781, i8* %19779, align 1
  %19782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19783 = lshr i64 %19768, 63
  %19784 = trunc i64 %19783 to i8
  store i8 %19784, i8* %19782, align 1
  %19785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19785, align 1
  store %struct.Memory* %loadMem_40707b, %struct.Memory** %MEMORY
  %loadMem_40707f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19787 = getelementptr inbounds %struct.GPR, %struct.GPR* %19786, i32 0, i32 33
  %19788 = getelementptr inbounds %struct.Reg, %struct.Reg* %19787, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %19788 to i64*
  %19789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19790 = getelementptr inbounds %struct.GPR, %struct.GPR* %19789, i32 0, i32 9
  %19791 = getelementptr inbounds %struct.Reg, %struct.Reg* %19790, i32 0, i32 0
  %RSI.i635 = bitcast %union.anon* %19791 to i64*
  %19792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19793 = getelementptr inbounds %struct.GPR, %struct.GPR* %19792, i32 0, i32 11
  %19794 = getelementptr inbounds %struct.Reg, %struct.Reg* %19793, i32 0, i32 0
  %RDI.i636 = bitcast %union.anon* %19794 to i64*
  %19795 = load i64, i64* %RSI.i635
  %19796 = load i64, i64* %RDI.i636
  %19797 = load i64, i64* %PC.i634
  %19798 = add i64 %19797, 3
  store i64 %19798, i64* %PC.i634
  %19799 = add i64 %19796, %19795
  store i64 %19799, i64* %RSI.i635, align 8
  %19800 = icmp ult i64 %19799, %19795
  %19801 = icmp ult i64 %19799, %19796
  %19802 = or i1 %19800, %19801
  %19803 = zext i1 %19802 to i8
  %19804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19803, i8* %19804, align 1
  %19805 = trunc i64 %19799 to i32
  %19806 = and i32 %19805, 255
  %19807 = call i32 @llvm.ctpop.i32(i32 %19806)
  %19808 = trunc i32 %19807 to i8
  %19809 = and i8 %19808, 1
  %19810 = xor i8 %19809, 1
  %19811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19810, i8* %19811, align 1
  %19812 = xor i64 %19796, %19795
  %19813 = xor i64 %19812, %19799
  %19814 = lshr i64 %19813, 4
  %19815 = trunc i64 %19814 to i8
  %19816 = and i8 %19815, 1
  %19817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19816, i8* %19817, align 1
  %19818 = icmp eq i64 %19799, 0
  %19819 = zext i1 %19818 to i8
  %19820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19819, i8* %19820, align 1
  %19821 = lshr i64 %19799, 63
  %19822 = trunc i64 %19821 to i8
  %19823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19822, i8* %19823, align 1
  %19824 = lshr i64 %19795, 63
  %19825 = lshr i64 %19796, 63
  %19826 = xor i64 %19821, %19824
  %19827 = xor i64 %19821, %19825
  %19828 = add i64 %19826, %19827
  %19829 = icmp eq i64 %19828, 2
  %19830 = zext i1 %19829 to i8
  %19831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19830, i8* %19831, align 1
  store %struct.Memory* %loadMem_40707f, %struct.Memory** %MEMORY
  %loadMem_407082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19833 = getelementptr inbounds %struct.GPR, %struct.GPR* %19832, i32 0, i32 33
  %19834 = getelementptr inbounds %struct.Reg, %struct.Reg* %19833, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %19834 to i64*
  %19835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19836 = getelementptr inbounds %struct.GPR, %struct.GPR* %19835, i32 0, i32 9
  %19837 = getelementptr inbounds %struct.Reg, %struct.Reg* %19836, i32 0, i32 0
  %RSI.i633 = bitcast %union.anon* %19837 to i64*
  %19838 = load i64, i64* %RSI.i633
  %19839 = load i64, i64* %PC.i632
  %19840 = add i64 %19839, 4
  store i64 %19840, i64* %PC.i632
  %19841 = add i64 32, %19838
  store i64 %19841, i64* %RSI.i633, align 8
  %19842 = icmp ult i64 %19841, %19838
  %19843 = icmp ult i64 %19841, 32
  %19844 = or i1 %19842, %19843
  %19845 = zext i1 %19844 to i8
  %19846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19845, i8* %19846, align 1
  %19847 = trunc i64 %19841 to i32
  %19848 = and i32 %19847, 255
  %19849 = call i32 @llvm.ctpop.i32(i32 %19848)
  %19850 = trunc i32 %19849 to i8
  %19851 = and i8 %19850, 1
  %19852 = xor i8 %19851, 1
  %19853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19852, i8* %19853, align 1
  %19854 = xor i64 32, %19838
  %19855 = xor i64 %19854, %19841
  %19856 = lshr i64 %19855, 4
  %19857 = trunc i64 %19856 to i8
  %19858 = and i8 %19857, 1
  %19859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19858, i8* %19859, align 1
  %19860 = icmp eq i64 %19841, 0
  %19861 = zext i1 %19860 to i8
  %19862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19861, i8* %19862, align 1
  %19863 = lshr i64 %19841, 63
  %19864 = trunc i64 %19863 to i8
  %19865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19864, i8* %19865, align 1
  %19866 = lshr i64 %19838, 63
  %19867 = xor i64 %19863, %19866
  %19868 = add i64 %19867, %19863
  %19869 = icmp eq i64 %19868, 2
  %19870 = zext i1 %19869 to i8
  %19871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19870, i8* %19871, align 1
  store %struct.Memory* %loadMem_407082, %struct.Memory** %MEMORY
  %loadMem_407086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19873 = getelementptr inbounds %struct.GPR, %struct.GPR* %19872, i32 0, i32 33
  %19874 = getelementptr inbounds %struct.Reg, %struct.Reg* %19873, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %19874 to i64*
  %19875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19876 = getelementptr inbounds %struct.GPR, %struct.GPR* %19875, i32 0, i32 9
  %19877 = getelementptr inbounds %struct.Reg, %struct.Reg* %19876, i32 0, i32 0
  %RSI.i631 = bitcast %union.anon* %19877 to i64*
  %19878 = load i64, i64* %RSI.i631
  %19879 = load i64, i64* %PC.i630
  %19880 = add i64 %19879, 4
  store i64 %19880, i64* %PC.i630
  %19881 = ashr i64 %19878, 5
  %19882 = trunc i64 %19881 to i8
  %19883 = and i8 %19882, 1
  %19884 = ashr i64 %19881, 1
  store i64 %19884, i64* %RSI.i631, align 8
  %19885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19883, i8* %19885, align 1
  %19886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19887 = trunc i64 %19884 to i32
  %19888 = and i32 %19887, 255
  %19889 = call i32 @llvm.ctpop.i32(i32 %19888)
  %19890 = trunc i32 %19889 to i8
  %19891 = and i8 %19890, 1
  %19892 = xor i8 %19891, 1
  store i8 %19892, i8* %19886, align 1
  %19893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19893, align 1
  %19894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19895 = icmp eq i64 %19884, 0
  %19896 = zext i1 %19895 to i8
  store i8 %19896, i8* %19894, align 1
  %19897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19898 = lshr i64 %19884, 63
  %19899 = trunc i64 %19898 to i8
  store i8 %19899, i8* %19897, align 1
  %19900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19900, align 1
  store %struct.Memory* %loadMem_407086, %struct.Memory** %MEMORY
  %loadMem_40708a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19902 = getelementptr inbounds %struct.GPR, %struct.GPR* %19901, i32 0, i32 33
  %19903 = getelementptr inbounds %struct.Reg, %struct.Reg* %19902, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %19903 to i64*
  %19904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19905 = getelementptr inbounds %struct.GPR, %struct.GPR* %19904, i32 0, i32 7
  %19906 = getelementptr inbounds %struct.Reg, %struct.Reg* %19905, i32 0, i32 0
  %RDX.i628 = bitcast %union.anon* %19906 to i64*
  %19907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19908 = getelementptr inbounds %struct.GPR, %struct.GPR* %19907, i32 0, i32 9
  %19909 = getelementptr inbounds %struct.Reg, %struct.Reg* %19908, i32 0, i32 0
  %RSI.i629 = bitcast %union.anon* %19909 to i64*
  %19910 = load i64, i64* %RDX.i628
  %19911 = load i64, i64* %RSI.i629
  %19912 = load i64, i64* %PC.i627
  %19913 = add i64 %19912, 3
  store i64 %19913, i64* %PC.i627
  %19914 = sub i64 %19910, %19911
  %19915 = icmp ult i64 %19910, %19911
  %19916 = zext i1 %19915 to i8
  %19917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19916, i8* %19917, align 1
  %19918 = trunc i64 %19914 to i32
  %19919 = and i32 %19918, 255
  %19920 = call i32 @llvm.ctpop.i32(i32 %19919)
  %19921 = trunc i32 %19920 to i8
  %19922 = and i8 %19921, 1
  %19923 = xor i8 %19922, 1
  %19924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19923, i8* %19924, align 1
  %19925 = xor i64 %19911, %19910
  %19926 = xor i64 %19925, %19914
  %19927 = lshr i64 %19926, 4
  %19928 = trunc i64 %19927 to i8
  %19929 = and i8 %19928, 1
  %19930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19929, i8* %19930, align 1
  %19931 = icmp eq i64 %19914, 0
  %19932 = zext i1 %19931 to i8
  %19933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19932, i8* %19933, align 1
  %19934 = lshr i64 %19914, 63
  %19935 = trunc i64 %19934 to i8
  %19936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19935, i8* %19936, align 1
  %19937 = lshr i64 %19910, 63
  %19938 = lshr i64 %19911, 63
  %19939 = xor i64 %19938, %19937
  %19940 = xor i64 %19934, %19937
  %19941 = add i64 %19940, %19939
  %19942 = icmp eq i64 %19941, 2
  %19943 = zext i1 %19942 to i8
  %19944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19943, i8* %19944, align 1
  store %struct.Memory* %loadMem_40708a, %struct.Memory** %MEMORY
  %loadMem_40708d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19946 = getelementptr inbounds %struct.GPR, %struct.GPR* %19945, i32 0, i32 33
  %19947 = getelementptr inbounds %struct.Reg, %struct.Reg* %19946, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %19947 to i64*
  %19948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19949 = getelementptr inbounds %struct.GPR, %struct.GPR* %19948, i32 0, i32 1
  %19950 = getelementptr inbounds %struct.Reg, %struct.Reg* %19949, i32 0, i32 0
  %RAX.i625 = bitcast %union.anon* %19950 to i64*
  %19951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19952 = getelementptr inbounds %struct.GPR, %struct.GPR* %19951, i32 0, i32 15
  %19953 = getelementptr inbounds %struct.Reg, %struct.Reg* %19952, i32 0, i32 0
  %RBP.i626 = bitcast %union.anon* %19953 to i64*
  %19954 = load i64, i64* %RBP.i626
  %19955 = sub i64 %19954, 232
  %19956 = load i64, i64* %RAX.i625
  %19957 = load i64, i64* %PC.i624
  %19958 = add i64 %19957, 7
  store i64 %19958, i64* %PC.i624
  %19959 = inttoptr i64 %19955 to i64*
  store i64 %19956, i64* %19959
  store %struct.Memory* %loadMem_40708d, %struct.Memory** %MEMORY
  %loadMem_407094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19961 = getelementptr inbounds %struct.GPR, %struct.GPR* %19960, i32 0, i32 33
  %19962 = getelementptr inbounds %struct.Reg, %struct.Reg* %19961, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %19962 to i64*
  %19963 = load i64, i64* %PC.i623
  %19964 = add i64 %19963, 22
  %19965 = load i64, i64* %PC.i623
  %19966 = add i64 %19965, 6
  %19967 = load i64, i64* %PC.i623
  %19968 = add i64 %19967, 6
  store i64 %19968, i64* %PC.i623
  %19969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19970 = load i8, i8* %19969, align 1
  %19971 = icmp ne i8 %19970, 0
  %19972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19973 = load i8, i8* %19972, align 1
  %19974 = icmp ne i8 %19973, 0
  %19975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19976 = load i8, i8* %19975, align 1
  %19977 = icmp ne i8 %19976, 0
  %19978 = xor i1 %19974, %19977
  %19979 = or i1 %19971, %19978
  %19980 = zext i1 %19979 to i8
  store i8 %19980, i8* %BRANCH_TAKEN, align 1
  %19981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19982 = select i1 %19979, i64 %19964, i64 %19966
  store i64 %19982, i64* %19981, align 8
  store %struct.Memory* %loadMem_407094, %struct.Memory** %MEMORY
  %loadBr_407094 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_407094 = icmp eq i8 %loadBr_407094, 1
  br i1 %cmpBr_407094, label %block_.L_4070aa, label %block_40709a

block_40709a:                                     ; preds = %block_.L_406ffd
  %loadMem_40709a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19984 = getelementptr inbounds %struct.GPR, %struct.GPR* %19983, i32 0, i32 33
  %19985 = getelementptr inbounds %struct.Reg, %struct.Reg* %19984, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %19985 to i64*
  %19986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19987 = getelementptr inbounds %struct.GPR, %struct.GPR* %19986, i32 0, i32 1
  %19988 = getelementptr inbounds %struct.Reg, %struct.Reg* %19987, i32 0, i32 0
  %EAX.i621 = bitcast %union.anon* %19988 to i32*
  %19989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19990 = getelementptr inbounds %struct.GPR, %struct.GPR* %19989, i32 0, i32 1
  %19991 = getelementptr inbounds %struct.Reg, %struct.Reg* %19990, i32 0, i32 0
  %RAX.i622 = bitcast %union.anon* %19991 to i64*
  %19992 = load i64, i64* %RAX.i622
  %19993 = load i32, i32* %EAX.i621
  %19994 = zext i32 %19993 to i64
  %19995 = load i64, i64* %PC.i620
  %19996 = add i64 %19995, 2
  store i64 %19996, i64* %PC.i620
  %19997 = xor i64 %19994, %19992
  %19998 = trunc i64 %19997 to i32
  %19999 = and i64 %19997, 4294967295
  store i64 %19999, i64* %RAX.i622, align 8
  %20000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20000, align 1
  %20001 = and i32 %19998, 255
  %20002 = call i32 @llvm.ctpop.i32(i32 %20001)
  %20003 = trunc i32 %20002 to i8
  %20004 = and i8 %20003, 1
  %20005 = xor i8 %20004, 1
  %20006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20005, i8* %20006, align 1
  %20007 = icmp eq i32 %19998, 0
  %20008 = zext i1 %20007 to i8
  %20009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20008, i8* %20009, align 1
  %20010 = lshr i32 %19998, 31
  %20011 = trunc i32 %20010 to i8
  %20012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20011, i8* %20012, align 1
  %20013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20013, align 1
  %20014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20014, align 1
  store %struct.Memory* %loadMem_40709a, %struct.Memory** %MEMORY
  %loadMem_40709c = load %struct.Memory*, %struct.Memory** %MEMORY
  %20015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20016 = getelementptr inbounds %struct.GPR, %struct.GPR* %20015, i32 0, i32 33
  %20017 = getelementptr inbounds %struct.Reg, %struct.Reg* %20016, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %20017 to i64*
  %20018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20019 = getelementptr inbounds %struct.GPR, %struct.GPR* %20018, i32 0, i32 1
  %20020 = getelementptr inbounds %struct.Reg, %struct.Reg* %20019, i32 0, i32 0
  %EAX.i618 = bitcast %union.anon* %20020 to i32*
  %20021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20022 = getelementptr inbounds %struct.GPR, %struct.GPR* %20021, i32 0, i32 5
  %20023 = getelementptr inbounds %struct.Reg, %struct.Reg* %20022, i32 0, i32 0
  %RCX.i619 = bitcast %union.anon* %20023 to i64*
  %20024 = load i32, i32* %EAX.i618
  %20025 = zext i32 %20024 to i64
  %20026 = load i64, i64* %PC.i617
  %20027 = add i64 %20026, 2
  store i64 %20027, i64* %PC.i617
  %20028 = and i64 %20025, 4294967295
  store i64 %20028, i64* %RCX.i619, align 8
  store %struct.Memory* %loadMem_40709c, %struct.Memory** %MEMORY
  %loadMem_40709e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20030 = getelementptr inbounds %struct.GPR, %struct.GPR* %20029, i32 0, i32 33
  %20031 = getelementptr inbounds %struct.Reg, %struct.Reg* %20030, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %20031 to i64*
  %20032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20033 = getelementptr inbounds %struct.GPR, %struct.GPR* %20032, i32 0, i32 5
  %20034 = getelementptr inbounds %struct.Reg, %struct.Reg* %20033, i32 0, i32 0
  %RCX.i615 = bitcast %union.anon* %20034 to i64*
  %20035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20036 = getelementptr inbounds %struct.GPR, %struct.GPR* %20035, i32 0, i32 15
  %20037 = getelementptr inbounds %struct.Reg, %struct.Reg* %20036, i32 0, i32 0
  %RBP.i616 = bitcast %union.anon* %20037 to i64*
  %20038 = load i64, i64* %RBP.i616
  %20039 = sub i64 %20038, 240
  %20040 = load i64, i64* %RCX.i615
  %20041 = load i64, i64* %PC.i614
  %20042 = add i64 %20041, 7
  store i64 %20042, i64* %PC.i614
  %20043 = inttoptr i64 %20039 to i64*
  store i64 %20040, i64* %20043
  store %struct.Memory* %loadMem_40709e, %struct.Memory** %MEMORY
  %loadMem_4070a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20045 = getelementptr inbounds %struct.GPR, %struct.GPR* %20044, i32 0, i32 33
  %20046 = getelementptr inbounds %struct.Reg, %struct.Reg* %20045, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %20046 to i64*
  %20047 = load i64, i64* %PC.i613
  %20048 = add i64 %20047, 92
  %20049 = load i64, i64* %PC.i613
  %20050 = add i64 %20049, 5
  store i64 %20050, i64* %PC.i613
  %20051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20048, i64* %20051, align 8
  store %struct.Memory* %loadMem_4070a5, %struct.Memory** %MEMORY
  br label %block_.L_407101

block_.L_4070aa:                                  ; preds = %block_.L_406ffd
  %loadMem_4070aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %20052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20053 = getelementptr inbounds %struct.GPR, %struct.GPR* %20052, i32 0, i32 33
  %20054 = getelementptr inbounds %struct.Reg, %struct.Reg* %20053, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %20054 to i64*
  %20055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20056 = getelementptr inbounds %struct.GPR, %struct.GPR* %20055, i32 0, i32 1
  %20057 = getelementptr inbounds %struct.Reg, %struct.Reg* %20056, i32 0, i32 0
  %RAX.i611 = bitcast %union.anon* %20057 to i64*
  %20058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20059 = getelementptr inbounds %struct.GPR, %struct.GPR* %20058, i32 0, i32 15
  %20060 = getelementptr inbounds %struct.Reg, %struct.Reg* %20059, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %20060 to i64*
  %20061 = load i64, i64* %RBP.i612
  %20062 = sub i64 %20061, 28
  %20063 = load i64, i64* %PC.i610
  %20064 = add i64 %20063, 4
  store i64 %20064, i64* %PC.i610
  %20065 = inttoptr i64 %20062 to i32*
  %20066 = load i32, i32* %20065
  %20067 = sext i32 %20066 to i64
  store i64 %20067, i64* %RAX.i611, align 8
  store %struct.Memory* %loadMem_4070aa, %struct.Memory** %MEMORY
  %loadMem_4070ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %20068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20069 = getelementptr inbounds %struct.GPR, %struct.GPR* %20068, i32 0, i32 33
  %20070 = getelementptr inbounds %struct.Reg, %struct.Reg* %20069, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %20070 to i64*
  %20071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20072 = getelementptr inbounds %struct.GPR, %struct.GPR* %20071, i32 0, i32 1
  %20073 = getelementptr inbounds %struct.Reg, %struct.Reg* %20072, i32 0, i32 0
  %RAX.i607 = bitcast %union.anon* %20073 to i64*
  %20074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20075 = getelementptr inbounds %struct.GPR, %struct.GPR* %20074, i32 0, i32 5
  %20076 = getelementptr inbounds %struct.Reg, %struct.Reg* %20075, i32 0, i32 0
  %RCX.i608 = bitcast %union.anon* %20076 to i64*
  %20077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20078 = getelementptr inbounds %struct.GPR, %struct.GPR* %20077, i32 0, i32 15
  %20079 = getelementptr inbounds %struct.Reg, %struct.Reg* %20078, i32 0, i32 0
  %RBP.i609 = bitcast %union.anon* %20079 to i64*
  %20080 = load i64, i64* %RBP.i609
  %20081 = load i64, i64* %RAX.i607
  %20082 = mul i64 %20081, 4
  %20083 = add i64 %20080, -80
  %20084 = add i64 %20083, %20082
  %20085 = load i64, i64* %PC.i606
  %20086 = add i64 %20085, 4
  store i64 %20086, i64* %PC.i606
  %20087 = inttoptr i64 %20084 to i32*
  %20088 = load i32, i32* %20087
  %20089 = zext i32 %20088 to i64
  store i64 %20089, i64* %RCX.i608, align 8
  store %struct.Memory* %loadMem_4070ae, %struct.Memory** %MEMORY
  %loadMem_4070b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20091 = getelementptr inbounds %struct.GPR, %struct.GPR* %20090, i32 0, i32 33
  %20092 = getelementptr inbounds %struct.Reg, %struct.Reg* %20091, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %20092 to i64*
  %20093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20094 = getelementptr inbounds %struct.GPR, %struct.GPR* %20093, i32 0, i32 1
  %20095 = getelementptr inbounds %struct.Reg, %struct.Reg* %20094, i32 0, i32 0
  %RAX.i604 = bitcast %union.anon* %20095 to i64*
  %20096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20097 = getelementptr inbounds %struct.GPR, %struct.GPR* %20096, i32 0, i32 15
  %20098 = getelementptr inbounds %struct.Reg, %struct.Reg* %20097, i32 0, i32 0
  %RBP.i605 = bitcast %union.anon* %20098 to i64*
  %20099 = load i64, i64* %RBP.i605
  %20100 = sub i64 %20099, 36
  %20101 = load i64, i64* %PC.i603
  %20102 = add i64 %20101, 4
  store i64 %20102, i64* %PC.i603
  %20103 = inttoptr i64 %20100 to i32*
  %20104 = load i32, i32* %20103
  %20105 = sext i32 %20104 to i64
  store i64 %20105, i64* %RAX.i604, align 8
  store %struct.Memory* %loadMem_4070b2, %struct.Memory** %MEMORY
  %loadMem_4070b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20107 = getelementptr inbounds %struct.GPR, %struct.GPR* %20106, i32 0, i32 33
  %20108 = getelementptr inbounds %struct.Reg, %struct.Reg* %20107, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %20108 to i64*
  %20109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20110 = getelementptr inbounds %struct.GPR, %struct.GPR* %20109, i32 0, i32 1
  %20111 = getelementptr inbounds %struct.Reg, %struct.Reg* %20110, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %20111 to i64*
  %20112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20113 = getelementptr inbounds %struct.GPR, %struct.GPR* %20112, i32 0, i32 5
  %20114 = getelementptr inbounds %struct.Reg, %struct.Reg* %20113, i32 0, i32 0
  %RCX.i601 = bitcast %union.anon* %20114 to i64*
  %20115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20116 = getelementptr inbounds %struct.GPR, %struct.GPR* %20115, i32 0, i32 15
  %20117 = getelementptr inbounds %struct.Reg, %struct.Reg* %20116, i32 0, i32 0
  %RBP.i602 = bitcast %union.anon* %20117 to i64*
  %20118 = load i64, i64* %RCX.i601
  %20119 = load i64, i64* %RBP.i602
  %20120 = load i64, i64* %RAX.i600
  %20121 = mul i64 %20120, 4
  %20122 = add i64 %20119, -80
  %20123 = add i64 %20122, %20121
  %20124 = load i64, i64* %PC.i599
  %20125 = add i64 %20124, 4
  store i64 %20125, i64* %PC.i599
  %20126 = trunc i64 %20118 to i32
  %20127 = inttoptr i64 %20123 to i32*
  %20128 = load i32, i32* %20127
  %20129 = sub i32 %20126, %20128
  %20130 = zext i32 %20129 to i64
  store i64 %20130, i64* %RCX.i601, align 8
  %20131 = icmp ult i32 %20126, %20128
  %20132 = zext i1 %20131 to i8
  %20133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20132, i8* %20133, align 1
  %20134 = and i32 %20129, 255
  %20135 = call i32 @llvm.ctpop.i32(i32 %20134)
  %20136 = trunc i32 %20135 to i8
  %20137 = and i8 %20136, 1
  %20138 = xor i8 %20137, 1
  %20139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20138, i8* %20139, align 1
  %20140 = xor i32 %20128, %20126
  %20141 = xor i32 %20140, %20129
  %20142 = lshr i32 %20141, 4
  %20143 = trunc i32 %20142 to i8
  %20144 = and i8 %20143, 1
  %20145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20144, i8* %20145, align 1
  %20146 = icmp eq i32 %20129, 0
  %20147 = zext i1 %20146 to i8
  %20148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20147, i8* %20148, align 1
  %20149 = lshr i32 %20129, 31
  %20150 = trunc i32 %20149 to i8
  %20151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20150, i8* %20151, align 1
  %20152 = lshr i32 %20126, 31
  %20153 = lshr i32 %20128, 31
  %20154 = xor i32 %20153, %20152
  %20155 = xor i32 %20149, %20152
  %20156 = add i32 %20155, %20154
  %20157 = icmp eq i32 %20156, 2
  %20158 = zext i1 %20157 to i8
  %20159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20158, i8* %20159, align 1
  store %struct.Memory* %loadMem_4070b6, %struct.Memory** %MEMORY
  %loadMem_4070ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %20160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20161 = getelementptr inbounds %struct.GPR, %struct.GPR* %20160, i32 0, i32 33
  %20162 = getelementptr inbounds %struct.Reg, %struct.Reg* %20161, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %20162 to i64*
  %20163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20164 = getelementptr inbounds %struct.GPR, %struct.GPR* %20163, i32 0, i32 5
  %20165 = getelementptr inbounds %struct.Reg, %struct.Reg* %20164, i32 0, i32 0
  %ECX.i597 = bitcast %union.anon* %20165 to i32*
  %20166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20167 = getelementptr inbounds %struct.GPR, %struct.GPR* %20166, i32 0, i32 1
  %20168 = getelementptr inbounds %struct.Reg, %struct.Reg* %20167, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %20168 to i64*
  %20169 = load i32, i32* %ECX.i597
  %20170 = zext i32 %20169 to i64
  %20171 = load i64, i64* %PC.i596
  %20172 = add i64 %20171, 3
  store i64 %20172, i64* %PC.i596
  %20173 = shl i64 %20170, 32
  %20174 = ashr exact i64 %20173, 32
  store i64 %20174, i64* %RAX.i598, align 8
  store %struct.Memory* %loadMem_4070ba, %struct.Memory** %MEMORY
  %loadMem_4070bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %20175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20176 = getelementptr inbounds %struct.GPR, %struct.GPR* %20175, i32 0, i32 33
  %20177 = getelementptr inbounds %struct.Reg, %struct.Reg* %20176, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %20177 to i64*
  %20178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20179 = getelementptr inbounds %struct.GPR, %struct.GPR* %20178, i32 0, i32 7
  %20180 = getelementptr inbounds %struct.Reg, %struct.Reg* %20179, i32 0, i32 0
  %RDX.i595 = bitcast %union.anon* %20180 to i64*
  %20181 = load i64, i64* %PC.i594
  %20182 = add i64 %20181, 8
  store i64 %20182, i64* %PC.i594
  %20183 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20183, i64* %RDX.i595, align 8
  store %struct.Memory* %loadMem_4070bd, %struct.Memory** %MEMORY
  %loadMem_4070c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20185 = getelementptr inbounds %struct.GPR, %struct.GPR* %20184, i32 0, i32 33
  %20186 = getelementptr inbounds %struct.Reg, %struct.Reg* %20185, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %20186 to i64*
  %20187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20188 = getelementptr inbounds %struct.GPR, %struct.GPR* %20187, i32 0, i32 7
  %20189 = getelementptr inbounds %struct.Reg, %struct.Reg* %20188, i32 0, i32 0
  %RDX.i593 = bitcast %union.anon* %20189 to i64*
  %20190 = load i64, i64* %RDX.i593
  %20191 = load i64, i64* %PC.i592
  %20192 = add i64 %20191, 7
  store i64 %20192, i64* %PC.i592
  %20193 = add i64 12600, %20190
  store i64 %20193, i64* %RDX.i593, align 8
  %20194 = icmp ult i64 %20193, %20190
  %20195 = icmp ult i64 %20193, 12600
  %20196 = or i1 %20194, %20195
  %20197 = zext i1 %20196 to i8
  %20198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20197, i8* %20198, align 1
  %20199 = trunc i64 %20193 to i32
  %20200 = and i32 %20199, 255
  %20201 = call i32 @llvm.ctpop.i32(i32 %20200)
  %20202 = trunc i32 %20201 to i8
  %20203 = and i8 %20202, 1
  %20204 = xor i8 %20203, 1
  %20205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20204, i8* %20205, align 1
  %20206 = xor i64 12600, %20190
  %20207 = xor i64 %20206, %20193
  %20208 = lshr i64 %20207, 4
  %20209 = trunc i64 %20208 to i8
  %20210 = and i8 %20209, 1
  %20211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20210, i8* %20211, align 1
  %20212 = icmp eq i64 %20193, 0
  %20213 = zext i1 %20212 to i8
  %20214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20213, i8* %20214, align 1
  %20215 = lshr i64 %20193, 63
  %20216 = trunc i64 %20215 to i8
  %20217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20216, i8* %20217, align 1
  %20218 = lshr i64 %20190, 63
  %20219 = xor i64 %20215, %20218
  %20220 = add i64 %20219, %20215
  %20221 = icmp eq i64 %20220, 2
  %20222 = zext i1 %20221 to i8
  %20223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20222, i8* %20223, align 1
  store %struct.Memory* %loadMem_4070c5, %struct.Memory** %MEMORY
  %loadMem_4070cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %20224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20225 = getelementptr inbounds %struct.GPR, %struct.GPR* %20224, i32 0, i32 33
  %20226 = getelementptr inbounds %struct.Reg, %struct.Reg* %20225, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %20226 to i64*
  %20227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20228 = getelementptr inbounds %struct.GPR, %struct.GPR* %20227, i32 0, i32 5
  %20229 = getelementptr inbounds %struct.Reg, %struct.Reg* %20228, i32 0, i32 0
  %RCX.i590 = bitcast %union.anon* %20229 to i64*
  %20230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20231 = getelementptr inbounds %struct.GPR, %struct.GPR* %20230, i32 0, i32 15
  %20232 = getelementptr inbounds %struct.Reg, %struct.Reg* %20231, i32 0, i32 0
  %RBP.i591 = bitcast %union.anon* %20232 to i64*
  %20233 = load i64, i64* %RBP.i591
  %20234 = sub i64 %20233, 24
  %20235 = load i64, i64* %PC.i589
  %20236 = add i64 %20235, 3
  store i64 %20236, i64* %PC.i589
  %20237 = inttoptr i64 %20234 to i32*
  %20238 = load i32, i32* %20237
  %20239 = zext i32 %20238 to i64
  store i64 %20239, i64* %RCX.i590, align 8
  store %struct.Memory* %loadMem_4070cc, %struct.Memory** %MEMORY
  %loadMem_4070cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %20240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20241 = getelementptr inbounds %struct.GPR, %struct.GPR* %20240, i32 0, i32 33
  %20242 = getelementptr inbounds %struct.Reg, %struct.Reg* %20241, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %20242 to i64*
  %20243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20244 = getelementptr inbounds %struct.GPR, %struct.GPR* %20243, i32 0, i32 5
  %20245 = getelementptr inbounds %struct.Reg, %struct.Reg* %20244, i32 0, i32 0
  %RCX.i587 = bitcast %union.anon* %20245 to i64*
  %20246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20247 = getelementptr inbounds %struct.GPR, %struct.GPR* %20246, i32 0, i32 15
  %20248 = getelementptr inbounds %struct.Reg, %struct.Reg* %20247, i32 0, i32 0
  %RBP.i588 = bitcast %union.anon* %20248 to i64*
  %20249 = load i64, i64* %RCX.i587
  %20250 = load i64, i64* %RBP.i588
  %20251 = sub i64 %20250, 4
  %20252 = load i64, i64* %PC.i586
  %20253 = add i64 %20252, 3
  store i64 %20253, i64* %PC.i586
  %20254 = trunc i64 %20249 to i32
  %20255 = inttoptr i64 %20251 to i32*
  %20256 = load i32, i32* %20255
  %20257 = add i32 %20256, %20254
  %20258 = zext i32 %20257 to i64
  store i64 %20258, i64* %RCX.i587, align 8
  %20259 = icmp ult i32 %20257, %20254
  %20260 = icmp ult i32 %20257, %20256
  %20261 = or i1 %20259, %20260
  %20262 = zext i1 %20261 to i8
  %20263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20262, i8* %20263, align 1
  %20264 = and i32 %20257, 255
  %20265 = call i32 @llvm.ctpop.i32(i32 %20264)
  %20266 = trunc i32 %20265 to i8
  %20267 = and i8 %20266, 1
  %20268 = xor i8 %20267, 1
  %20269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20268, i8* %20269, align 1
  %20270 = xor i32 %20256, %20254
  %20271 = xor i32 %20270, %20257
  %20272 = lshr i32 %20271, 4
  %20273 = trunc i32 %20272 to i8
  %20274 = and i8 %20273, 1
  %20275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20274, i8* %20275, align 1
  %20276 = icmp eq i32 %20257, 0
  %20277 = zext i1 %20276 to i8
  %20278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20277, i8* %20278, align 1
  %20279 = lshr i32 %20257, 31
  %20280 = trunc i32 %20279 to i8
  %20281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20280, i8* %20281, align 1
  %20282 = lshr i32 %20254, 31
  %20283 = lshr i32 %20256, 31
  %20284 = xor i32 %20279, %20282
  %20285 = xor i32 %20279, %20283
  %20286 = add i32 %20284, %20285
  %20287 = icmp eq i32 %20286, 2
  %20288 = zext i1 %20287 to i8
  %20289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20288, i8* %20289, align 1
  store %struct.Memory* %loadMem_4070cf, %struct.Memory** %MEMORY
  %loadMem_4070d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20291 = getelementptr inbounds %struct.GPR, %struct.GPR* %20290, i32 0, i32 33
  %20292 = getelementptr inbounds %struct.Reg, %struct.Reg* %20291, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %20292 to i64*
  %20293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20294 = getelementptr inbounds %struct.GPR, %struct.GPR* %20293, i32 0, i32 5
  %20295 = getelementptr inbounds %struct.Reg, %struct.Reg* %20294, i32 0, i32 0
  %ECX.i584 = bitcast %union.anon* %20295 to i32*
  %20296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20297 = getelementptr inbounds %struct.GPR, %struct.GPR* %20296, i32 0, i32 9
  %20298 = getelementptr inbounds %struct.Reg, %struct.Reg* %20297, i32 0, i32 0
  %RSI.i585 = bitcast %union.anon* %20298 to i64*
  %20299 = load i32, i32* %ECX.i584
  %20300 = zext i32 %20299 to i64
  %20301 = load i64, i64* %PC.i583
  %20302 = add i64 %20301, 3
  store i64 %20302, i64* %PC.i583
  %20303 = shl i64 %20300, 32
  %20304 = ashr exact i64 %20303, 32
  store i64 %20304, i64* %RSI.i585, align 8
  store %struct.Memory* %loadMem_4070d2, %struct.Memory** %MEMORY
  %loadMem_4070d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20306 = getelementptr inbounds %struct.GPR, %struct.GPR* %20305, i32 0, i32 33
  %20307 = getelementptr inbounds %struct.Reg, %struct.Reg* %20306, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %20307 to i64*
  %20308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20309 = getelementptr inbounds %struct.GPR, %struct.GPR* %20308, i32 0, i32 9
  %20310 = getelementptr inbounds %struct.Reg, %struct.Reg* %20309, i32 0, i32 0
  %RSI.i582 = bitcast %union.anon* %20310 to i64*
  %20311 = load i64, i64* %RSI.i582
  %20312 = load i64, i64* %PC.i581
  %20313 = add i64 %20312, 4
  store i64 %20313, i64* %PC.i581
  %20314 = shl i64 %20311, 4
  %20315 = icmp slt i64 %20314, 0
  %20316 = shl i64 %20314, 1
  store i64 %20316, i64* %RSI.i582, align 8
  %20317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20318 = zext i1 %20315 to i8
  store i8 %20318, i8* %20317, align 1
  %20319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20320 = trunc i64 %20316 to i32
  %20321 = and i32 %20320, 254
  %20322 = call i32 @llvm.ctpop.i32(i32 %20321)
  %20323 = trunc i32 %20322 to i8
  %20324 = and i8 %20323, 1
  %20325 = xor i8 %20324, 1
  store i8 %20325, i8* %20319, align 1
  %20326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20326, align 1
  %20327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20328 = icmp eq i64 %20316, 0
  %20329 = zext i1 %20328 to i8
  store i8 %20329, i8* %20327, align 1
  %20330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20331 = lshr i64 %20316, 63
  %20332 = trunc i64 %20331 to i8
  store i8 %20332, i8* %20330, align 1
  %20333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20333, align 1
  store %struct.Memory* %loadMem_4070d5, %struct.Memory** %MEMORY
  %loadMem_4070d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20335 = getelementptr inbounds %struct.GPR, %struct.GPR* %20334, i32 0, i32 33
  %20336 = getelementptr inbounds %struct.Reg, %struct.Reg* %20335, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %20336 to i64*
  %20337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20338 = getelementptr inbounds %struct.GPR, %struct.GPR* %20337, i32 0, i32 7
  %20339 = getelementptr inbounds %struct.Reg, %struct.Reg* %20338, i32 0, i32 0
  %RDX.i579 = bitcast %union.anon* %20339 to i64*
  %20340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20341 = getelementptr inbounds %struct.GPR, %struct.GPR* %20340, i32 0, i32 9
  %20342 = getelementptr inbounds %struct.Reg, %struct.Reg* %20341, i32 0, i32 0
  %RSI.i580 = bitcast %union.anon* %20342 to i64*
  %20343 = load i64, i64* %RDX.i579
  %20344 = load i64, i64* %RSI.i580
  %20345 = load i64, i64* %PC.i578
  %20346 = add i64 %20345, 3
  store i64 %20346, i64* %PC.i578
  %20347 = add i64 %20344, %20343
  store i64 %20347, i64* %RDX.i579, align 8
  %20348 = icmp ult i64 %20347, %20343
  %20349 = icmp ult i64 %20347, %20344
  %20350 = or i1 %20348, %20349
  %20351 = zext i1 %20350 to i8
  %20352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20351, i8* %20352, align 1
  %20353 = trunc i64 %20347 to i32
  %20354 = and i32 %20353, 255
  %20355 = call i32 @llvm.ctpop.i32(i32 %20354)
  %20356 = trunc i32 %20355 to i8
  %20357 = and i8 %20356, 1
  %20358 = xor i8 %20357, 1
  %20359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20358, i8* %20359, align 1
  %20360 = xor i64 %20344, %20343
  %20361 = xor i64 %20360, %20347
  %20362 = lshr i64 %20361, 4
  %20363 = trunc i64 %20362 to i8
  %20364 = and i8 %20363, 1
  %20365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20364, i8* %20365, align 1
  %20366 = icmp eq i64 %20347, 0
  %20367 = zext i1 %20366 to i8
  %20368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20367, i8* %20368, align 1
  %20369 = lshr i64 %20347, 63
  %20370 = trunc i64 %20369 to i8
  %20371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20370, i8* %20371, align 1
  %20372 = lshr i64 %20343, 63
  %20373 = lshr i64 %20344, 63
  %20374 = xor i64 %20369, %20372
  %20375 = xor i64 %20369, %20373
  %20376 = add i64 %20374, %20375
  %20377 = icmp eq i64 %20376, 2
  %20378 = zext i1 %20377 to i8
  %20379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20378, i8* %20379, align 1
  store %struct.Memory* %loadMem_4070d9, %struct.Memory** %MEMORY
  %loadMem_4070dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %20380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20381 = getelementptr inbounds %struct.GPR, %struct.GPR* %20380, i32 0, i32 33
  %20382 = getelementptr inbounds %struct.Reg, %struct.Reg* %20381, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %20382 to i64*
  %20383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20384 = getelementptr inbounds %struct.GPR, %struct.GPR* %20383, i32 0, i32 5
  %20385 = getelementptr inbounds %struct.Reg, %struct.Reg* %20384, i32 0, i32 0
  %RCX.i576 = bitcast %union.anon* %20385 to i64*
  %20386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20387 = getelementptr inbounds %struct.GPR, %struct.GPR* %20386, i32 0, i32 15
  %20388 = getelementptr inbounds %struct.Reg, %struct.Reg* %20387, i32 0, i32 0
  %RBP.i577 = bitcast %union.anon* %20388 to i64*
  %20389 = load i64, i64* %RBP.i577
  %20390 = sub i64 %20389, 36
  %20391 = load i64, i64* %PC.i575
  %20392 = add i64 %20391, 3
  store i64 %20392, i64* %PC.i575
  %20393 = inttoptr i64 %20390 to i32*
  %20394 = load i32, i32* %20393
  %20395 = zext i32 %20394 to i64
  store i64 %20395, i64* %RCX.i576, align 8
  store %struct.Memory* %loadMem_4070dc, %struct.Memory** %MEMORY
  %loadMem_4070df = load %struct.Memory*, %struct.Memory** %MEMORY
  %20396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20397 = getelementptr inbounds %struct.GPR, %struct.GPR* %20396, i32 0, i32 33
  %20398 = getelementptr inbounds %struct.Reg, %struct.Reg* %20397, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %20398 to i64*
  %20399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20400 = getelementptr inbounds %struct.GPR, %struct.GPR* %20399, i32 0, i32 5
  %20401 = getelementptr inbounds %struct.Reg, %struct.Reg* %20400, i32 0, i32 0
  %RCX.i573 = bitcast %union.anon* %20401 to i64*
  %20402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20403 = getelementptr inbounds %struct.GPR, %struct.GPR* %20402, i32 0, i32 15
  %20404 = getelementptr inbounds %struct.Reg, %struct.Reg* %20403, i32 0, i32 0
  %RBP.i574 = bitcast %union.anon* %20404 to i64*
  %20405 = load i64, i64* %RCX.i573
  %20406 = load i64, i64* %RBP.i574
  %20407 = sub i64 %20406, 8
  %20408 = load i64, i64* %PC.i572
  %20409 = add i64 %20408, 3
  store i64 %20409, i64* %PC.i572
  %20410 = trunc i64 %20405 to i32
  %20411 = inttoptr i64 %20407 to i32*
  %20412 = load i32, i32* %20411
  %20413 = add i32 %20412, %20410
  %20414 = zext i32 %20413 to i64
  store i64 %20414, i64* %RCX.i573, align 8
  %20415 = icmp ult i32 %20413, %20410
  %20416 = icmp ult i32 %20413, %20412
  %20417 = or i1 %20415, %20416
  %20418 = zext i1 %20417 to i8
  %20419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20418, i8* %20419, align 1
  %20420 = and i32 %20413, 255
  %20421 = call i32 @llvm.ctpop.i32(i32 %20420)
  %20422 = trunc i32 %20421 to i8
  %20423 = and i8 %20422, 1
  %20424 = xor i8 %20423, 1
  %20425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20424, i8* %20425, align 1
  %20426 = xor i32 %20412, %20410
  %20427 = xor i32 %20426, %20413
  %20428 = lshr i32 %20427, 4
  %20429 = trunc i32 %20428 to i8
  %20430 = and i8 %20429, 1
  %20431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20430, i8* %20431, align 1
  %20432 = icmp eq i32 %20413, 0
  %20433 = zext i1 %20432 to i8
  %20434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20433, i8* %20434, align 1
  %20435 = lshr i32 %20413, 31
  %20436 = trunc i32 %20435 to i8
  %20437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20436, i8* %20437, align 1
  %20438 = lshr i32 %20410, 31
  %20439 = lshr i32 %20412, 31
  %20440 = xor i32 %20435, %20438
  %20441 = xor i32 %20435, %20439
  %20442 = add i32 %20440, %20441
  %20443 = icmp eq i32 %20442, 2
  %20444 = zext i1 %20443 to i8
  %20445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20444, i8* %20445, align 1
  store %struct.Memory* %loadMem_4070df, %struct.Memory** %MEMORY
  %loadMem_4070e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20447 = getelementptr inbounds %struct.GPR, %struct.GPR* %20446, i32 0, i32 33
  %20448 = getelementptr inbounds %struct.Reg, %struct.Reg* %20447, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %20448 to i64*
  %20449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20450 = getelementptr inbounds %struct.GPR, %struct.GPR* %20449, i32 0, i32 5
  %20451 = getelementptr inbounds %struct.Reg, %struct.Reg* %20450, i32 0, i32 0
  %ECX.i570 = bitcast %union.anon* %20451 to i32*
  %20452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20453 = getelementptr inbounds %struct.GPR, %struct.GPR* %20452, i32 0, i32 9
  %20454 = getelementptr inbounds %struct.Reg, %struct.Reg* %20453, i32 0, i32 0
  %RSI.i571 = bitcast %union.anon* %20454 to i64*
  %20455 = load i32, i32* %ECX.i570
  %20456 = zext i32 %20455 to i64
  %20457 = load i64, i64* %PC.i569
  %20458 = add i64 %20457, 3
  store i64 %20458, i64* %PC.i569
  %20459 = shl i64 %20456, 32
  %20460 = ashr exact i64 %20459, 32
  store i64 %20460, i64* %RSI.i571, align 8
  store %struct.Memory* %loadMem_4070e2, %struct.Memory** %MEMORY
  %loadMem_4070e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20462 = getelementptr inbounds %struct.GPR, %struct.GPR* %20461, i32 0, i32 33
  %20463 = getelementptr inbounds %struct.Reg, %struct.Reg* %20462, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %20463 to i64*
  %20464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20465 = getelementptr inbounds %struct.GPR, %struct.GPR* %20464, i32 0, i32 5
  %20466 = getelementptr inbounds %struct.Reg, %struct.Reg* %20465, i32 0, i32 0
  %RCX.i566 = bitcast %union.anon* %20466 to i64*
  %20467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20468 = getelementptr inbounds %struct.GPR, %struct.GPR* %20467, i32 0, i32 7
  %20469 = getelementptr inbounds %struct.Reg, %struct.Reg* %20468, i32 0, i32 0
  %RDX.i567 = bitcast %union.anon* %20469 to i64*
  %20470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20471 = getelementptr inbounds %struct.GPR, %struct.GPR* %20470, i32 0, i32 9
  %20472 = getelementptr inbounds %struct.Reg, %struct.Reg* %20471, i32 0, i32 0
  %RSI.i568 = bitcast %union.anon* %20472 to i64*
  %20473 = load i64, i64* %RDX.i567
  %20474 = load i64, i64* %RSI.i568
  %20475 = mul i64 %20474, 2
  %20476 = add i64 %20475, %20473
  %20477 = load i64, i64* %PC.i565
  %20478 = add i64 %20477, 4
  store i64 %20478, i64* %PC.i565
  %20479 = inttoptr i64 %20476 to i16*
  %20480 = load i16, i16* %20479
  %20481 = zext i16 %20480 to i64
  store i64 %20481, i64* %RCX.i566, align 8
  store %struct.Memory* %loadMem_4070e5, %struct.Memory** %MEMORY
  %loadMem_4070e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20483 = getelementptr inbounds %struct.GPR, %struct.GPR* %20482, i32 0, i32 33
  %20484 = getelementptr inbounds %struct.Reg, %struct.Reg* %20483, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %20484 to i64*
  %20485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20486 = getelementptr inbounds %struct.GPR, %struct.GPR* %20485, i32 0, i32 5
  %20487 = getelementptr inbounds %struct.Reg, %struct.Reg* %20486, i32 0, i32 0
  %ECX.i563 = bitcast %union.anon* %20487 to i32*
  %20488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20489 = getelementptr inbounds %struct.GPR, %struct.GPR* %20488, i32 0, i32 7
  %20490 = getelementptr inbounds %struct.Reg, %struct.Reg* %20489, i32 0, i32 0
  %RDX.i564 = bitcast %union.anon* %20490 to i64*
  %20491 = load i32, i32* %ECX.i563
  %20492 = zext i32 %20491 to i64
  %20493 = load i64, i64* %PC.i562
  %20494 = add i64 %20493, 2
  store i64 %20494, i64* %PC.i562
  %20495 = and i64 %20492, 4294967295
  store i64 %20495, i64* %RDX.i564, align 8
  store %struct.Memory* %loadMem_4070e9, %struct.Memory** %MEMORY
  %loadMem_4070eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %20496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20497 = getelementptr inbounds %struct.GPR, %struct.GPR* %20496, i32 0, i32 33
  %20498 = getelementptr inbounds %struct.Reg, %struct.Reg* %20497, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %20498 to i64*
  %20499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20500 = getelementptr inbounds %struct.GPR, %struct.GPR* %20499, i32 0, i32 7
  %20501 = getelementptr inbounds %struct.Reg, %struct.Reg* %20500, i32 0, i32 0
  %RDX.i561 = bitcast %union.anon* %20501 to i64*
  %20502 = load i64, i64* %RDX.i561
  %20503 = load i64, i64* %PC.i560
  %20504 = add i64 %20503, 4
  store i64 %20504, i64* %PC.i560
  %20505 = shl i64 %20502, 5
  %20506 = icmp slt i64 %20505, 0
  %20507 = shl i64 %20505, 1
  store i64 %20507, i64* %RDX.i561, align 8
  %20508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20509 = zext i1 %20506 to i8
  store i8 %20509, i8* %20508, align 1
  %20510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20511 = trunc i64 %20507 to i32
  %20512 = and i32 %20511, 254
  %20513 = call i32 @llvm.ctpop.i32(i32 %20512)
  %20514 = trunc i32 %20513 to i8
  %20515 = and i8 %20514, 1
  %20516 = xor i8 %20515, 1
  store i8 %20516, i8* %20510, align 1
  %20517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20517, align 1
  %20518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20519 = icmp eq i64 %20507, 0
  %20520 = zext i1 %20519 to i8
  store i8 %20520, i8* %20518, align 1
  %20521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20522 = lshr i64 %20507, 63
  %20523 = trunc i64 %20522 to i8
  store i8 %20523, i8* %20521, align 1
  %20524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20524, align 1
  store %struct.Memory* %loadMem_4070eb, %struct.Memory** %MEMORY
  %loadMem_4070ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %20525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20526 = getelementptr inbounds %struct.GPR, %struct.GPR* %20525, i32 0, i32 33
  %20527 = getelementptr inbounds %struct.Reg, %struct.Reg* %20526, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %20527 to i64*
  %20528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20529 = getelementptr inbounds %struct.GPR, %struct.GPR* %20528, i32 0, i32 1
  %20530 = getelementptr inbounds %struct.Reg, %struct.Reg* %20529, i32 0, i32 0
  %RAX.i558 = bitcast %union.anon* %20530 to i64*
  %20531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20532 = getelementptr inbounds %struct.GPR, %struct.GPR* %20531, i32 0, i32 7
  %20533 = getelementptr inbounds %struct.Reg, %struct.Reg* %20532, i32 0, i32 0
  %RDX.i559 = bitcast %union.anon* %20533 to i64*
  %20534 = load i64, i64* %RAX.i558
  %20535 = load i64, i64* %RDX.i559
  %20536 = load i64, i64* %PC.i557
  %20537 = add i64 %20536, 3
  store i64 %20537, i64* %PC.i557
  %20538 = add i64 %20535, %20534
  store i64 %20538, i64* %RAX.i558, align 8
  %20539 = icmp ult i64 %20538, %20534
  %20540 = icmp ult i64 %20538, %20535
  %20541 = or i1 %20539, %20540
  %20542 = zext i1 %20541 to i8
  %20543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20542, i8* %20543, align 1
  %20544 = trunc i64 %20538 to i32
  %20545 = and i32 %20544, 255
  %20546 = call i32 @llvm.ctpop.i32(i32 %20545)
  %20547 = trunc i32 %20546 to i8
  %20548 = and i8 %20547, 1
  %20549 = xor i8 %20548, 1
  %20550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20549, i8* %20550, align 1
  %20551 = xor i64 %20535, %20534
  %20552 = xor i64 %20551, %20538
  %20553 = lshr i64 %20552, 4
  %20554 = trunc i64 %20553 to i8
  %20555 = and i8 %20554, 1
  %20556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20555, i8* %20556, align 1
  %20557 = icmp eq i64 %20538, 0
  %20558 = zext i1 %20557 to i8
  %20559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20558, i8* %20559, align 1
  %20560 = lshr i64 %20538, 63
  %20561 = trunc i64 %20560 to i8
  %20562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20561, i8* %20562, align 1
  %20563 = lshr i64 %20534, 63
  %20564 = lshr i64 %20535, 63
  %20565 = xor i64 %20560, %20563
  %20566 = xor i64 %20560, %20564
  %20567 = add i64 %20565, %20566
  %20568 = icmp eq i64 %20567, 2
  %20569 = zext i1 %20568 to i8
  %20570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20569, i8* %20570, align 1
  store %struct.Memory* %loadMem_4070ef, %struct.Memory** %MEMORY
  %loadMem_4070f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20572 = getelementptr inbounds %struct.GPR, %struct.GPR* %20571, i32 0, i32 33
  %20573 = getelementptr inbounds %struct.Reg, %struct.Reg* %20572, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %20573 to i64*
  %20574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20575 = getelementptr inbounds %struct.GPR, %struct.GPR* %20574, i32 0, i32 1
  %20576 = getelementptr inbounds %struct.Reg, %struct.Reg* %20575, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %20576 to i64*
  %20577 = load i64, i64* %RAX.i556
  %20578 = load i64, i64* %PC.i555
  %20579 = add i64 %20578, 4
  store i64 %20579, i64* %PC.i555
  %20580 = add i64 32, %20577
  store i64 %20580, i64* %RAX.i556, align 8
  %20581 = icmp ult i64 %20580, %20577
  %20582 = icmp ult i64 %20580, 32
  %20583 = or i1 %20581, %20582
  %20584 = zext i1 %20583 to i8
  %20585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20584, i8* %20585, align 1
  %20586 = trunc i64 %20580 to i32
  %20587 = and i32 %20586, 255
  %20588 = call i32 @llvm.ctpop.i32(i32 %20587)
  %20589 = trunc i32 %20588 to i8
  %20590 = and i8 %20589, 1
  %20591 = xor i8 %20590, 1
  %20592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20591, i8* %20592, align 1
  %20593 = xor i64 32, %20577
  %20594 = xor i64 %20593, %20580
  %20595 = lshr i64 %20594, 4
  %20596 = trunc i64 %20595 to i8
  %20597 = and i8 %20596, 1
  %20598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20597, i8* %20598, align 1
  %20599 = icmp eq i64 %20580, 0
  %20600 = zext i1 %20599 to i8
  %20601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20600, i8* %20601, align 1
  %20602 = lshr i64 %20580, 63
  %20603 = trunc i64 %20602 to i8
  %20604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20603, i8* %20604, align 1
  %20605 = lshr i64 %20577, 63
  %20606 = xor i64 %20602, %20605
  %20607 = add i64 %20606, %20602
  %20608 = icmp eq i64 %20607, 2
  %20609 = zext i1 %20608 to i8
  %20610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20609, i8* %20610, align 1
  store %struct.Memory* %loadMem_4070f2, %struct.Memory** %MEMORY
  %loadMem_4070f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20612 = getelementptr inbounds %struct.GPR, %struct.GPR* %20611, i32 0, i32 33
  %20613 = getelementptr inbounds %struct.Reg, %struct.Reg* %20612, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %20613 to i64*
  %20614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20615 = getelementptr inbounds %struct.GPR, %struct.GPR* %20614, i32 0, i32 1
  %20616 = getelementptr inbounds %struct.Reg, %struct.Reg* %20615, i32 0, i32 0
  %RAX.i554 = bitcast %union.anon* %20616 to i64*
  %20617 = load i64, i64* %RAX.i554
  %20618 = load i64, i64* %PC.i553
  %20619 = add i64 %20618, 4
  store i64 %20619, i64* %PC.i553
  %20620 = ashr i64 %20617, 5
  %20621 = trunc i64 %20620 to i8
  %20622 = and i8 %20621, 1
  %20623 = ashr i64 %20620, 1
  store i64 %20623, i64* %RAX.i554, align 8
  %20624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20622, i8* %20624, align 1
  %20625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20626 = trunc i64 %20623 to i32
  %20627 = and i32 %20626, 255
  %20628 = call i32 @llvm.ctpop.i32(i32 %20627)
  %20629 = trunc i32 %20628 to i8
  %20630 = and i8 %20629, 1
  %20631 = xor i8 %20630, 1
  store i8 %20631, i8* %20625, align 1
  %20632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20632, align 1
  %20633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20634 = icmp eq i64 %20623, 0
  %20635 = zext i1 %20634 to i8
  store i8 %20635, i8* %20633, align 1
  %20636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20637 = lshr i64 %20623, 63
  %20638 = trunc i64 %20637 to i8
  store i8 %20638, i8* %20636, align 1
  %20639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20639, align 1
  store %struct.Memory* %loadMem_4070f6, %struct.Memory** %MEMORY
  %loadMem_4070fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %20640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20641 = getelementptr inbounds %struct.GPR, %struct.GPR* %20640, i32 0, i32 33
  %20642 = getelementptr inbounds %struct.Reg, %struct.Reg* %20641, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %20642 to i64*
  %20643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20644 = getelementptr inbounds %struct.GPR, %struct.GPR* %20643, i32 0, i32 1
  %20645 = getelementptr inbounds %struct.Reg, %struct.Reg* %20644, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %20645 to i64*
  %20646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20647 = getelementptr inbounds %struct.GPR, %struct.GPR* %20646, i32 0, i32 15
  %20648 = getelementptr inbounds %struct.Reg, %struct.Reg* %20647, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %20648 to i64*
  %20649 = load i64, i64* %RBP.i552
  %20650 = sub i64 %20649, 240
  %20651 = load i64, i64* %RAX.i551
  %20652 = load i64, i64* %PC.i550
  %20653 = add i64 %20652, 7
  store i64 %20653, i64* %PC.i550
  %20654 = inttoptr i64 %20650 to i64*
  store i64 %20651, i64* %20654
  store %struct.Memory* %loadMem_4070fa, %struct.Memory** %MEMORY
  br label %block_.L_407101

block_.L_407101:                                  ; preds = %block_.L_4070aa, %block_40709a
  %loadMem_407101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20656 = getelementptr inbounds %struct.GPR, %struct.GPR* %20655, i32 0, i32 33
  %20657 = getelementptr inbounds %struct.Reg, %struct.Reg* %20656, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %20657 to i64*
  %20658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20659 = getelementptr inbounds %struct.GPR, %struct.GPR* %20658, i32 0, i32 1
  %20660 = getelementptr inbounds %struct.Reg, %struct.Reg* %20659, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %20660 to i64*
  %20661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20662 = getelementptr inbounds %struct.GPR, %struct.GPR* %20661, i32 0, i32 15
  %20663 = getelementptr inbounds %struct.Reg, %struct.Reg* %20662, i32 0, i32 0
  %RBP.i549 = bitcast %union.anon* %20663 to i64*
  %20664 = load i64, i64* %RBP.i549
  %20665 = sub i64 %20664, 240
  %20666 = load i64, i64* %PC.i547
  %20667 = add i64 %20666, 7
  store i64 %20667, i64* %PC.i547
  %20668 = inttoptr i64 %20665 to i64*
  %20669 = load i64, i64* %20668
  store i64 %20669, i64* %RAX.i548, align 8
  store %struct.Memory* %loadMem_407101, %struct.Memory** %MEMORY
  %loadMem_407108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20671 = getelementptr inbounds %struct.GPR, %struct.GPR* %20670, i32 0, i32 33
  %20672 = getelementptr inbounds %struct.Reg, %struct.Reg* %20671, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %20672 to i64*
  %20673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20674 = getelementptr inbounds %struct.GPR, %struct.GPR* %20673, i32 0, i32 5
  %20675 = getelementptr inbounds %struct.Reg, %struct.Reg* %20674, i32 0, i32 0
  %RCX.i545 = bitcast %union.anon* %20675 to i64*
  %20676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20677 = getelementptr inbounds %struct.GPR, %struct.GPR* %20676, i32 0, i32 15
  %20678 = getelementptr inbounds %struct.Reg, %struct.Reg* %20677, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %20678 to i64*
  %20679 = load i64, i64* %RBP.i546
  %20680 = sub i64 %20679, 232
  %20681 = load i64, i64* %PC.i544
  %20682 = add i64 %20681, 7
  store i64 %20682, i64* %PC.i544
  %20683 = inttoptr i64 %20680 to i64*
  %20684 = load i64, i64* %20683
  store i64 %20684, i64* %RCX.i545, align 8
  store %struct.Memory* %loadMem_407108, %struct.Memory** %MEMORY
  %loadMem_40710f = load %struct.Memory*, %struct.Memory** %MEMORY
  %20685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20686 = getelementptr inbounds %struct.GPR, %struct.GPR* %20685, i32 0, i32 33
  %20687 = getelementptr inbounds %struct.Reg, %struct.Reg* %20686, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %20687 to i64*
  %20688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20689 = getelementptr inbounds %struct.GPR, %struct.GPR* %20688, i32 0, i32 1
  %20690 = getelementptr inbounds %struct.Reg, %struct.Reg* %20689, i32 0, i32 0
  %RAX.i542 = bitcast %union.anon* %20690 to i64*
  %20691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20692 = getelementptr inbounds %struct.GPR, %struct.GPR* %20691, i32 0, i32 5
  %20693 = getelementptr inbounds %struct.Reg, %struct.Reg* %20692, i32 0, i32 0
  %RCX.i543 = bitcast %union.anon* %20693 to i64*
  %20694 = load i64, i64* %RCX.i543
  %20695 = load i64, i64* %RAX.i542
  %20696 = load i64, i64* %PC.i541
  %20697 = add i64 %20696, 3
  store i64 %20697, i64* %PC.i541
  %20698 = sub i64 %20694, %20695
  %20699 = icmp ult i64 %20694, %20695
  %20700 = zext i1 %20699 to i8
  %20701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20700, i8* %20701, align 1
  %20702 = trunc i64 %20698 to i32
  %20703 = and i32 %20702, 255
  %20704 = call i32 @llvm.ctpop.i32(i32 %20703)
  %20705 = trunc i32 %20704 to i8
  %20706 = and i8 %20705, 1
  %20707 = xor i8 %20706, 1
  %20708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20707, i8* %20708, align 1
  %20709 = xor i64 %20695, %20694
  %20710 = xor i64 %20709, %20698
  %20711 = lshr i64 %20710, 4
  %20712 = trunc i64 %20711 to i8
  %20713 = and i8 %20712, 1
  %20714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20713, i8* %20714, align 1
  %20715 = icmp eq i64 %20698, 0
  %20716 = zext i1 %20715 to i8
  %20717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20716, i8* %20717, align 1
  %20718 = lshr i64 %20698, 63
  %20719 = trunc i64 %20718 to i8
  %20720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20719, i8* %20720, align 1
  %20721 = lshr i64 %20694, 63
  %20722 = lshr i64 %20695, 63
  %20723 = xor i64 %20722, %20721
  %20724 = xor i64 %20718, %20721
  %20725 = add i64 %20724, %20723
  %20726 = icmp eq i64 %20725, 2
  %20727 = zext i1 %20726 to i8
  %20728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20727, i8* %20728, align 1
  store %struct.Memory* %loadMem_40710f, %struct.Memory** %MEMORY
  %loadMem_407112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20730 = getelementptr inbounds %struct.GPR, %struct.GPR* %20729, i32 0, i32 33
  %20731 = getelementptr inbounds %struct.Reg, %struct.Reg* %20730, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %20731 to i64*
  %20732 = load i64, i64* %PC.i540
  %20733 = add i64 %20732, 33
  %20734 = load i64, i64* %PC.i540
  %20735 = add i64 %20734, 6
  %20736 = load i64, i64* %PC.i540
  %20737 = add i64 %20736, 6
  store i64 %20737, i64* %PC.i540
  %20738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20739 = load i8, i8* %20738, align 1
  %20740 = icmp ne i8 %20739, 0
  %20741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20742 = load i8, i8* %20741, align 1
  %20743 = icmp ne i8 %20742, 0
  %20744 = xor i1 %20740, %20743
  %20745 = xor i1 %20744, true
  %20746 = zext i1 %20745 to i8
  store i8 %20746, i8* %BRANCH_TAKEN, align 1
  %20747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20748 = select i1 %20744, i64 %20735, i64 %20733
  store i64 %20748, i64* %20747, align 8
  store %struct.Memory* %loadMem_407112, %struct.Memory** %MEMORY
  %loadBr_407112 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_407112 = icmp eq i8 %loadBr_407112, 1
  br i1 %cmpBr_407112, label %block_.L_407133, label %block_407118

block_407118:                                     ; preds = %block_.L_407101
  %loadMem_407118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20750 = getelementptr inbounds %struct.GPR, %struct.GPR* %20749, i32 0, i32 33
  %20751 = getelementptr inbounds %struct.Reg, %struct.Reg* %20750, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %20751 to i64*
  %20752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20753 = getelementptr inbounds %struct.GPR, %struct.GPR* %20752, i32 0, i32 1
  %20754 = getelementptr inbounds %struct.Reg, %struct.Reg* %20753, i32 0, i32 0
  %RAX.i539 = bitcast %union.anon* %20754 to i64*
  %20755 = load i64, i64* %PC.i538
  %20756 = add i64 %20755, 8
  store i64 %20756, i64* %PC.i538
  %20757 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20757, i64* %RAX.i539, align 8
  store %struct.Memory* %loadMem_407118, %struct.Memory** %MEMORY
  %loadMem_407120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20759 = getelementptr inbounds %struct.GPR, %struct.GPR* %20758, i32 0, i32 33
  %20760 = getelementptr inbounds %struct.Reg, %struct.Reg* %20759, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %20760 to i64*
  %20761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20762 = getelementptr inbounds %struct.GPR, %struct.GPR* %20761, i32 0, i32 1
  %20763 = getelementptr inbounds %struct.Reg, %struct.Reg* %20762, i32 0, i32 0
  %RAX.i537 = bitcast %union.anon* %20763 to i64*
  %20764 = load i64, i64* %RAX.i537
  %20765 = add i64 %20764, 72684
  %20766 = load i64, i64* %PC.i536
  %20767 = add i64 %20766, 7
  store i64 %20767, i64* %PC.i536
  %20768 = inttoptr i64 %20765 to i32*
  %20769 = load i32, i32* %20768
  %20770 = sext i32 %20769 to i64
  store i64 %20770, i64* %RAX.i537, align 8
  store %struct.Memory* %loadMem_407120, %struct.Memory** %MEMORY
  %loadMem_407127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20772 = getelementptr inbounds %struct.GPR, %struct.GPR* %20771, i32 0, i32 33
  %20773 = getelementptr inbounds %struct.Reg, %struct.Reg* %20772, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %20773 to i64*
  %20774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20775 = getelementptr inbounds %struct.GPR, %struct.GPR* %20774, i32 0, i32 1
  %20776 = getelementptr inbounds %struct.Reg, %struct.Reg* %20775, i32 0, i32 0
  %RAX.i534 = bitcast %union.anon* %20776 to i64*
  %20777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20778 = getelementptr inbounds %struct.GPR, %struct.GPR* %20777, i32 0, i32 15
  %20779 = getelementptr inbounds %struct.Reg, %struct.Reg* %20778, i32 0, i32 0
  %RBP.i535 = bitcast %union.anon* %20779 to i64*
  %20780 = load i64, i64* %RBP.i535
  %20781 = sub i64 %20780, 248
  %20782 = load i64, i64* %RAX.i534
  %20783 = load i64, i64* %PC.i533
  %20784 = add i64 %20783, 7
  store i64 %20784, i64* %PC.i533
  %20785 = inttoptr i64 %20781 to i64*
  store i64 %20782, i64* %20785
  store %struct.Memory* %loadMem_407127, %struct.Memory** %MEMORY
  %loadMem_40712e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20787 = getelementptr inbounds %struct.GPR, %struct.GPR* %20786, i32 0, i32 33
  %20788 = getelementptr inbounds %struct.Reg, %struct.Reg* %20787, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %20788 to i64*
  %20789 = load i64, i64* %PC.i532
  %20790 = add i64 %20789, 215
  %20791 = load i64, i64* %PC.i532
  %20792 = add i64 %20791, 5
  store i64 %20792, i64* %PC.i532
  %20793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20790, i64* %20793, align 8
  store %struct.Memory* %loadMem_40712e, %struct.Memory** %MEMORY
  br label %block_.L_407205

block_.L_407133:                                  ; preds = %block_.L_407101
  %loadMem_407133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20795 = getelementptr inbounds %struct.GPR, %struct.GPR* %20794, i32 0, i32 33
  %20796 = getelementptr inbounds %struct.Reg, %struct.Reg* %20795, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %20796 to i64*
  %20797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20798 = getelementptr inbounds %struct.GPR, %struct.GPR* %20797, i32 0, i32 1
  %20799 = getelementptr inbounds %struct.Reg, %struct.Reg* %20798, i32 0, i32 0
  %EAX.i530 = bitcast %union.anon* %20799 to i32*
  %20800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20801 = getelementptr inbounds %struct.GPR, %struct.GPR* %20800, i32 0, i32 1
  %20802 = getelementptr inbounds %struct.Reg, %struct.Reg* %20801, i32 0, i32 0
  %RAX.i531 = bitcast %union.anon* %20802 to i64*
  %20803 = load i64, i64* %RAX.i531
  %20804 = load i32, i32* %EAX.i530
  %20805 = zext i32 %20804 to i64
  %20806 = load i64, i64* %PC.i529
  %20807 = add i64 %20806, 2
  store i64 %20807, i64* %PC.i529
  %20808 = xor i64 %20805, %20803
  %20809 = trunc i64 %20808 to i32
  %20810 = and i64 %20808, 4294967295
  store i64 %20810, i64* %RAX.i531, align 8
  %20811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20811, align 1
  %20812 = and i32 %20809, 255
  %20813 = call i32 @llvm.ctpop.i32(i32 %20812)
  %20814 = trunc i32 %20813 to i8
  %20815 = and i8 %20814, 1
  %20816 = xor i8 %20815, 1
  %20817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20816, i8* %20817, align 1
  %20818 = icmp eq i32 %20809, 0
  %20819 = zext i1 %20818 to i8
  %20820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20819, i8* %20820, align 1
  %20821 = lshr i32 %20809, 31
  %20822 = trunc i32 %20821 to i8
  %20823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20822, i8* %20823, align 1
  %20824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20824, align 1
  %20825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20825, align 1
  store %struct.Memory* %loadMem_407133, %struct.Memory** %MEMORY
  %loadMem_407135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20827 = getelementptr inbounds %struct.GPR, %struct.GPR* %20826, i32 0, i32 33
  %20828 = getelementptr inbounds %struct.Reg, %struct.Reg* %20827, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %20828 to i64*
  %20829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20830 = getelementptr inbounds %struct.GPR, %struct.GPR* %20829, i32 0, i32 1
  %20831 = getelementptr inbounds %struct.Reg, %struct.Reg* %20830, i32 0, i32 0
  %EAX.i527 = bitcast %union.anon* %20831 to i32*
  %20832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20833 = getelementptr inbounds %struct.GPR, %struct.GPR* %20832, i32 0, i32 5
  %20834 = getelementptr inbounds %struct.Reg, %struct.Reg* %20833, i32 0, i32 0
  %RCX.i528 = bitcast %union.anon* %20834 to i64*
  %20835 = load i32, i32* %EAX.i527
  %20836 = zext i32 %20835 to i64
  %20837 = load i64, i64* %PC.i526
  %20838 = add i64 %20837, 2
  store i64 %20838, i64* %PC.i526
  %20839 = and i64 %20836, 4294967295
  store i64 %20839, i64* %RCX.i528, align 8
  store %struct.Memory* %loadMem_407135, %struct.Memory** %MEMORY
  %loadMem_407137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20841 = getelementptr inbounds %struct.GPR, %struct.GPR* %20840, i32 0, i32 33
  %20842 = getelementptr inbounds %struct.Reg, %struct.Reg* %20841, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %20842 to i64*
  %20843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20844 = getelementptr inbounds %struct.GPR, %struct.GPR* %20843, i32 0, i32 7
  %20845 = getelementptr inbounds %struct.Reg, %struct.Reg* %20844, i32 0, i32 0
  %RDX.i524 = bitcast %union.anon* %20845 to i64*
  %20846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20847 = getelementptr inbounds %struct.GPR, %struct.GPR* %20846, i32 0, i32 15
  %20848 = getelementptr inbounds %struct.Reg, %struct.Reg* %20847, i32 0, i32 0
  %RBP.i525 = bitcast %union.anon* %20848 to i64*
  %20849 = load i64, i64* %RBP.i525
  %20850 = sub i64 %20849, 28
  %20851 = load i64, i64* %PC.i523
  %20852 = add i64 %20851, 4
  store i64 %20852, i64* %PC.i523
  %20853 = inttoptr i64 %20850 to i32*
  %20854 = load i32, i32* %20853
  %20855 = sext i32 %20854 to i64
  store i64 %20855, i64* %RDX.i524, align 8
  store %struct.Memory* %loadMem_407137, %struct.Memory** %MEMORY
  %loadMem_40713b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20857 = getelementptr inbounds %struct.GPR, %struct.GPR* %20856, i32 0, i32 33
  %20858 = getelementptr inbounds %struct.Reg, %struct.Reg* %20857, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %20858 to i64*
  %20859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20860 = getelementptr inbounds %struct.GPR, %struct.GPR* %20859, i32 0, i32 1
  %20861 = getelementptr inbounds %struct.Reg, %struct.Reg* %20860, i32 0, i32 0
  %RAX.i520 = bitcast %union.anon* %20861 to i64*
  %20862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20863 = getelementptr inbounds %struct.GPR, %struct.GPR* %20862, i32 0, i32 7
  %20864 = getelementptr inbounds %struct.Reg, %struct.Reg* %20863, i32 0, i32 0
  %RDX.i521 = bitcast %union.anon* %20864 to i64*
  %20865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20866 = getelementptr inbounds %struct.GPR, %struct.GPR* %20865, i32 0, i32 15
  %20867 = getelementptr inbounds %struct.Reg, %struct.Reg* %20866, i32 0, i32 0
  %RBP.i522 = bitcast %union.anon* %20867 to i64*
  %20868 = load i64, i64* %RBP.i522
  %20869 = load i64, i64* %RDX.i521
  %20870 = mul i64 %20869, 4
  %20871 = add i64 %20868, -80
  %20872 = add i64 %20871, %20870
  %20873 = load i64, i64* %PC.i519
  %20874 = add i64 %20873, 4
  store i64 %20874, i64* %PC.i519
  %20875 = inttoptr i64 %20872 to i32*
  %20876 = load i32, i32* %20875
  %20877 = zext i32 %20876 to i64
  store i64 %20877, i64* %RAX.i520, align 8
  store %struct.Memory* %loadMem_40713b, %struct.Memory** %MEMORY
  %loadMem_40713f = load %struct.Memory*, %struct.Memory** %MEMORY
  %20878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20879 = getelementptr inbounds %struct.GPR, %struct.GPR* %20878, i32 0, i32 33
  %20880 = getelementptr inbounds %struct.Reg, %struct.Reg* %20879, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %20880 to i64*
  %20881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20882 = getelementptr inbounds %struct.GPR, %struct.GPR* %20881, i32 0, i32 7
  %20883 = getelementptr inbounds %struct.Reg, %struct.Reg* %20882, i32 0, i32 0
  %RDX.i517 = bitcast %union.anon* %20883 to i64*
  %20884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20885 = getelementptr inbounds %struct.GPR, %struct.GPR* %20884, i32 0, i32 15
  %20886 = getelementptr inbounds %struct.Reg, %struct.Reg* %20885, i32 0, i32 0
  %RBP.i518 = bitcast %union.anon* %20886 to i64*
  %20887 = load i64, i64* %RBP.i518
  %20888 = sub i64 %20887, 36
  %20889 = load i64, i64* %PC.i516
  %20890 = add i64 %20889, 4
  store i64 %20890, i64* %PC.i516
  %20891 = inttoptr i64 %20888 to i32*
  %20892 = load i32, i32* %20891
  %20893 = sext i32 %20892 to i64
  store i64 %20893, i64* %RDX.i517, align 8
  store %struct.Memory* %loadMem_40713f, %struct.Memory** %MEMORY
  %loadMem_407143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20895 = getelementptr inbounds %struct.GPR, %struct.GPR* %20894, i32 0, i32 33
  %20896 = getelementptr inbounds %struct.Reg, %struct.Reg* %20895, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %20896 to i64*
  %20897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20898 = getelementptr inbounds %struct.GPR, %struct.GPR* %20897, i32 0, i32 1
  %20899 = getelementptr inbounds %struct.Reg, %struct.Reg* %20898, i32 0, i32 0
  %RAX.i513 = bitcast %union.anon* %20899 to i64*
  %20900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20901 = getelementptr inbounds %struct.GPR, %struct.GPR* %20900, i32 0, i32 7
  %20902 = getelementptr inbounds %struct.Reg, %struct.Reg* %20901, i32 0, i32 0
  %RDX.i514 = bitcast %union.anon* %20902 to i64*
  %20903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20904 = getelementptr inbounds %struct.GPR, %struct.GPR* %20903, i32 0, i32 15
  %20905 = getelementptr inbounds %struct.Reg, %struct.Reg* %20904, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %20905 to i64*
  %20906 = load i64, i64* %RAX.i513
  %20907 = load i64, i64* %RBP.i515
  %20908 = load i64, i64* %RDX.i514
  %20909 = mul i64 %20908, 4
  %20910 = add i64 %20907, -80
  %20911 = add i64 %20910, %20909
  %20912 = load i64, i64* %PC.i512
  %20913 = add i64 %20912, 4
  store i64 %20913, i64* %PC.i512
  %20914 = trunc i64 %20906 to i32
  %20915 = inttoptr i64 %20911 to i32*
  %20916 = load i32, i32* %20915
  %20917 = sub i32 %20914, %20916
  %20918 = zext i32 %20917 to i64
  store i64 %20918, i64* %RAX.i513, align 8
  %20919 = icmp ult i32 %20914, %20916
  %20920 = zext i1 %20919 to i8
  %20921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20920, i8* %20921, align 1
  %20922 = and i32 %20917, 255
  %20923 = call i32 @llvm.ctpop.i32(i32 %20922)
  %20924 = trunc i32 %20923 to i8
  %20925 = and i8 %20924, 1
  %20926 = xor i8 %20925, 1
  %20927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20926, i8* %20927, align 1
  %20928 = xor i32 %20916, %20914
  %20929 = xor i32 %20928, %20917
  %20930 = lshr i32 %20929, 4
  %20931 = trunc i32 %20930 to i8
  %20932 = and i8 %20931, 1
  %20933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20932, i8* %20933, align 1
  %20934 = icmp eq i32 %20917, 0
  %20935 = zext i1 %20934 to i8
  %20936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20935, i8* %20936, align 1
  %20937 = lshr i32 %20917, 31
  %20938 = trunc i32 %20937 to i8
  %20939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20938, i8* %20939, align 1
  %20940 = lshr i32 %20914, 31
  %20941 = lshr i32 %20916, 31
  %20942 = xor i32 %20941, %20940
  %20943 = xor i32 %20937, %20940
  %20944 = add i32 %20943, %20942
  %20945 = icmp eq i32 %20944, 2
  %20946 = zext i1 %20945 to i8
  %20947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20946, i8* %20947, align 1
  store %struct.Memory* %loadMem_407143, %struct.Memory** %MEMORY
  %loadMem_407147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20949 = getelementptr inbounds %struct.GPR, %struct.GPR* %20948, i32 0, i32 33
  %20950 = getelementptr inbounds %struct.Reg, %struct.Reg* %20949, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %20950 to i64*
  %20951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20952 = getelementptr inbounds %struct.GPR, %struct.GPR* %20951, i32 0, i32 1
  %20953 = getelementptr inbounds %struct.Reg, %struct.Reg* %20952, i32 0, i32 0
  %EAX.i510 = bitcast %union.anon* %20953 to i32*
  %20954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20955 = getelementptr inbounds %struct.GPR, %struct.GPR* %20954, i32 0, i32 7
  %20956 = getelementptr inbounds %struct.Reg, %struct.Reg* %20955, i32 0, i32 0
  %RDX.i511 = bitcast %union.anon* %20956 to i64*
  %20957 = load i32, i32* %EAX.i510
  %20958 = zext i32 %20957 to i64
  %20959 = load i64, i64* %PC.i509
  %20960 = add i64 %20959, 3
  store i64 %20960, i64* %PC.i509
  %20961 = shl i64 %20958, 32
  %20962 = ashr exact i64 %20961, 32
  store i64 %20962, i64* %RDX.i511, align 8
  store %struct.Memory* %loadMem_407147, %struct.Memory** %MEMORY
  %loadMem_40714a = load %struct.Memory*, %struct.Memory** %MEMORY
  %20963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20964 = getelementptr inbounds %struct.GPR, %struct.GPR* %20963, i32 0, i32 33
  %20965 = getelementptr inbounds %struct.Reg, %struct.Reg* %20964, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %20965 to i64*
  %20966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20967 = getelementptr inbounds %struct.GPR, %struct.GPR* %20966, i32 0, i32 9
  %20968 = getelementptr inbounds %struct.Reg, %struct.Reg* %20967, i32 0, i32 0
  %RSI.i508 = bitcast %union.anon* %20968 to i64*
  %20969 = load i64, i64* %PC.i507
  %20970 = add i64 %20969, 8
  store i64 %20970, i64* %PC.i507
  %20971 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20971, i64* %RSI.i508, align 8
  store %struct.Memory* %loadMem_40714a, %struct.Memory** %MEMORY
  %loadMem_407152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20973 = getelementptr inbounds %struct.GPR, %struct.GPR* %20972, i32 0, i32 33
  %20974 = getelementptr inbounds %struct.Reg, %struct.Reg* %20973, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %20974 to i64*
  %20975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20976 = getelementptr inbounds %struct.GPR, %struct.GPR* %20975, i32 0, i32 9
  %20977 = getelementptr inbounds %struct.Reg, %struct.Reg* %20976, i32 0, i32 0
  %RSI.i506 = bitcast %union.anon* %20977 to i64*
  %20978 = load i64, i64* %RSI.i506
  %20979 = load i64, i64* %PC.i505
  %20980 = add i64 %20979, 7
  store i64 %20980, i64* %PC.i505
  %20981 = add i64 12600, %20978
  store i64 %20981, i64* %RSI.i506, align 8
  %20982 = icmp ult i64 %20981, %20978
  %20983 = icmp ult i64 %20981, 12600
  %20984 = or i1 %20982, %20983
  %20985 = zext i1 %20984 to i8
  %20986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20985, i8* %20986, align 1
  %20987 = trunc i64 %20981 to i32
  %20988 = and i32 %20987, 255
  %20989 = call i32 @llvm.ctpop.i32(i32 %20988)
  %20990 = trunc i32 %20989 to i8
  %20991 = and i8 %20990, 1
  %20992 = xor i8 %20991, 1
  %20993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20992, i8* %20993, align 1
  %20994 = xor i64 12600, %20978
  %20995 = xor i64 %20994, %20981
  %20996 = lshr i64 %20995, 4
  %20997 = trunc i64 %20996 to i8
  %20998 = and i8 %20997, 1
  %20999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20998, i8* %20999, align 1
  %21000 = icmp eq i64 %20981, 0
  %21001 = zext i1 %21000 to i8
  %21002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21001, i8* %21002, align 1
  %21003 = lshr i64 %20981, 63
  %21004 = trunc i64 %21003 to i8
  %21005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21004, i8* %21005, align 1
  %21006 = lshr i64 %20978, 63
  %21007 = xor i64 %21003, %21006
  %21008 = add i64 %21007, %21003
  %21009 = icmp eq i64 %21008, 2
  %21010 = zext i1 %21009 to i8
  %21011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21010, i8* %21011, align 1
  store %struct.Memory* %loadMem_407152, %struct.Memory** %MEMORY
  %loadMem_407159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21013 = getelementptr inbounds %struct.GPR, %struct.GPR* %21012, i32 0, i32 33
  %21014 = getelementptr inbounds %struct.Reg, %struct.Reg* %21013, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %21014 to i64*
  %21015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21016 = getelementptr inbounds %struct.GPR, %struct.GPR* %21015, i32 0, i32 1
  %21017 = getelementptr inbounds %struct.Reg, %struct.Reg* %21016, i32 0, i32 0
  %RAX.i503 = bitcast %union.anon* %21017 to i64*
  %21018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21019 = getelementptr inbounds %struct.GPR, %struct.GPR* %21018, i32 0, i32 15
  %21020 = getelementptr inbounds %struct.Reg, %struct.Reg* %21019, i32 0, i32 0
  %RBP.i504 = bitcast %union.anon* %21020 to i64*
  %21021 = load i64, i64* %RBP.i504
  %21022 = sub i64 %21021, 24
  %21023 = load i64, i64* %PC.i502
  %21024 = add i64 %21023, 3
  store i64 %21024, i64* %PC.i502
  %21025 = inttoptr i64 %21022 to i32*
  %21026 = load i32, i32* %21025
  %21027 = zext i32 %21026 to i64
  store i64 %21027, i64* %RAX.i503, align 8
  store %struct.Memory* %loadMem_407159, %struct.Memory** %MEMORY
  %loadMem_40715c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21029 = getelementptr inbounds %struct.GPR, %struct.GPR* %21028, i32 0, i32 33
  %21030 = getelementptr inbounds %struct.Reg, %struct.Reg* %21029, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %21030 to i64*
  %21031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21032 = getelementptr inbounds %struct.GPR, %struct.GPR* %21031, i32 0, i32 1
  %21033 = getelementptr inbounds %struct.Reg, %struct.Reg* %21032, i32 0, i32 0
  %RAX.i500 = bitcast %union.anon* %21033 to i64*
  %21034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21035 = getelementptr inbounds %struct.GPR, %struct.GPR* %21034, i32 0, i32 15
  %21036 = getelementptr inbounds %struct.Reg, %struct.Reg* %21035, i32 0, i32 0
  %RBP.i501 = bitcast %union.anon* %21036 to i64*
  %21037 = load i64, i64* %RAX.i500
  %21038 = load i64, i64* %RBP.i501
  %21039 = sub i64 %21038, 4
  %21040 = load i64, i64* %PC.i499
  %21041 = add i64 %21040, 3
  store i64 %21041, i64* %PC.i499
  %21042 = trunc i64 %21037 to i32
  %21043 = inttoptr i64 %21039 to i32*
  %21044 = load i32, i32* %21043
  %21045 = add i32 %21044, %21042
  %21046 = zext i32 %21045 to i64
  store i64 %21046, i64* %RAX.i500, align 8
  %21047 = icmp ult i32 %21045, %21042
  %21048 = icmp ult i32 %21045, %21044
  %21049 = or i1 %21047, %21048
  %21050 = zext i1 %21049 to i8
  %21051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21050, i8* %21051, align 1
  %21052 = and i32 %21045, 255
  %21053 = call i32 @llvm.ctpop.i32(i32 %21052)
  %21054 = trunc i32 %21053 to i8
  %21055 = and i8 %21054, 1
  %21056 = xor i8 %21055, 1
  %21057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21056, i8* %21057, align 1
  %21058 = xor i32 %21044, %21042
  %21059 = xor i32 %21058, %21045
  %21060 = lshr i32 %21059, 4
  %21061 = trunc i32 %21060 to i8
  %21062 = and i8 %21061, 1
  %21063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21062, i8* %21063, align 1
  %21064 = icmp eq i32 %21045, 0
  %21065 = zext i1 %21064 to i8
  %21066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21065, i8* %21066, align 1
  %21067 = lshr i32 %21045, 31
  %21068 = trunc i32 %21067 to i8
  %21069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21068, i8* %21069, align 1
  %21070 = lshr i32 %21042, 31
  %21071 = lshr i32 %21044, 31
  %21072 = xor i32 %21067, %21070
  %21073 = xor i32 %21067, %21071
  %21074 = add i32 %21072, %21073
  %21075 = icmp eq i32 %21074, 2
  %21076 = zext i1 %21075 to i8
  %21077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21076, i8* %21077, align 1
  store %struct.Memory* %loadMem_40715c, %struct.Memory** %MEMORY
  %loadMem_40715f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21079 = getelementptr inbounds %struct.GPR, %struct.GPR* %21078, i32 0, i32 33
  %21080 = getelementptr inbounds %struct.Reg, %struct.Reg* %21079, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %21080 to i64*
  %21081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21082 = getelementptr inbounds %struct.GPR, %struct.GPR* %21081, i32 0, i32 1
  %21083 = getelementptr inbounds %struct.Reg, %struct.Reg* %21082, i32 0, i32 0
  %EAX.i497 = bitcast %union.anon* %21083 to i32*
  %21084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21085 = getelementptr inbounds %struct.GPR, %struct.GPR* %21084, i32 0, i32 11
  %21086 = getelementptr inbounds %struct.Reg, %struct.Reg* %21085, i32 0, i32 0
  %RDI.i498 = bitcast %union.anon* %21086 to i64*
  %21087 = load i32, i32* %EAX.i497
  %21088 = zext i32 %21087 to i64
  %21089 = load i64, i64* %PC.i496
  %21090 = add i64 %21089, 3
  store i64 %21090, i64* %PC.i496
  %21091 = shl i64 %21088, 32
  %21092 = ashr exact i64 %21091, 32
  store i64 %21092, i64* %RDI.i498, align 8
  store %struct.Memory* %loadMem_40715f, %struct.Memory** %MEMORY
  %loadMem_407162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21094 = getelementptr inbounds %struct.GPR, %struct.GPR* %21093, i32 0, i32 33
  %21095 = getelementptr inbounds %struct.Reg, %struct.Reg* %21094, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %21095 to i64*
  %21096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21097 = getelementptr inbounds %struct.GPR, %struct.GPR* %21096, i32 0, i32 11
  %21098 = getelementptr inbounds %struct.Reg, %struct.Reg* %21097, i32 0, i32 0
  %RDI.i495 = bitcast %union.anon* %21098 to i64*
  %21099 = load i64, i64* %RDI.i495
  %21100 = load i64, i64* %PC.i494
  %21101 = add i64 %21100, 4
  store i64 %21101, i64* %PC.i494
  %21102 = shl i64 %21099, 4
  %21103 = icmp slt i64 %21102, 0
  %21104 = shl i64 %21102, 1
  store i64 %21104, i64* %RDI.i495, align 8
  %21105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %21106 = zext i1 %21103 to i8
  store i8 %21106, i8* %21105, align 1
  %21107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21108 = trunc i64 %21104 to i32
  %21109 = and i32 %21108, 254
  %21110 = call i32 @llvm.ctpop.i32(i32 %21109)
  %21111 = trunc i32 %21110 to i8
  %21112 = and i8 %21111, 1
  %21113 = xor i8 %21112, 1
  store i8 %21113, i8* %21107, align 1
  %21114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21114, align 1
  %21115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21116 = icmp eq i64 %21104, 0
  %21117 = zext i1 %21116 to i8
  store i8 %21117, i8* %21115, align 1
  %21118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21119 = lshr i64 %21104, 63
  %21120 = trunc i64 %21119 to i8
  store i8 %21120, i8* %21118, align 1
  %21121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21121, align 1
  store %struct.Memory* %loadMem_407162, %struct.Memory** %MEMORY
  %loadMem_407166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21123 = getelementptr inbounds %struct.GPR, %struct.GPR* %21122, i32 0, i32 33
  %21124 = getelementptr inbounds %struct.Reg, %struct.Reg* %21123, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %21124 to i64*
  %21125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21126 = getelementptr inbounds %struct.GPR, %struct.GPR* %21125, i32 0, i32 9
  %21127 = getelementptr inbounds %struct.Reg, %struct.Reg* %21126, i32 0, i32 0
  %RSI.i492 = bitcast %union.anon* %21127 to i64*
  %21128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21129 = getelementptr inbounds %struct.GPR, %struct.GPR* %21128, i32 0, i32 11
  %21130 = getelementptr inbounds %struct.Reg, %struct.Reg* %21129, i32 0, i32 0
  %RDI.i493 = bitcast %union.anon* %21130 to i64*
  %21131 = load i64, i64* %RSI.i492
  %21132 = load i64, i64* %RDI.i493
  %21133 = load i64, i64* %PC.i491
  %21134 = add i64 %21133, 3
  store i64 %21134, i64* %PC.i491
  %21135 = add i64 %21132, %21131
  store i64 %21135, i64* %RSI.i492, align 8
  %21136 = icmp ult i64 %21135, %21131
  %21137 = icmp ult i64 %21135, %21132
  %21138 = or i1 %21136, %21137
  %21139 = zext i1 %21138 to i8
  %21140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21139, i8* %21140, align 1
  %21141 = trunc i64 %21135 to i32
  %21142 = and i32 %21141, 255
  %21143 = call i32 @llvm.ctpop.i32(i32 %21142)
  %21144 = trunc i32 %21143 to i8
  %21145 = and i8 %21144, 1
  %21146 = xor i8 %21145, 1
  %21147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21146, i8* %21147, align 1
  %21148 = xor i64 %21132, %21131
  %21149 = xor i64 %21148, %21135
  %21150 = lshr i64 %21149, 4
  %21151 = trunc i64 %21150 to i8
  %21152 = and i8 %21151, 1
  %21153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21152, i8* %21153, align 1
  %21154 = icmp eq i64 %21135, 0
  %21155 = zext i1 %21154 to i8
  %21156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21155, i8* %21156, align 1
  %21157 = lshr i64 %21135, 63
  %21158 = trunc i64 %21157 to i8
  %21159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21158, i8* %21159, align 1
  %21160 = lshr i64 %21131, 63
  %21161 = lshr i64 %21132, 63
  %21162 = xor i64 %21157, %21160
  %21163 = xor i64 %21157, %21161
  %21164 = add i64 %21162, %21163
  %21165 = icmp eq i64 %21164, 2
  %21166 = zext i1 %21165 to i8
  %21167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21166, i8* %21167, align 1
  store %struct.Memory* %loadMem_407166, %struct.Memory** %MEMORY
  %loadMem_407169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21169 = getelementptr inbounds %struct.GPR, %struct.GPR* %21168, i32 0, i32 33
  %21170 = getelementptr inbounds %struct.Reg, %struct.Reg* %21169, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %21170 to i64*
  %21171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21172 = getelementptr inbounds %struct.GPR, %struct.GPR* %21171, i32 0, i32 1
  %21173 = getelementptr inbounds %struct.Reg, %struct.Reg* %21172, i32 0, i32 0
  %RAX.i489 = bitcast %union.anon* %21173 to i64*
  %21174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21175 = getelementptr inbounds %struct.GPR, %struct.GPR* %21174, i32 0, i32 15
  %21176 = getelementptr inbounds %struct.Reg, %struct.Reg* %21175, i32 0, i32 0
  %RBP.i490 = bitcast %union.anon* %21176 to i64*
  %21177 = load i64, i64* %RBP.i490
  %21178 = sub i64 %21177, 36
  %21179 = load i64, i64* %PC.i488
  %21180 = add i64 %21179, 3
  store i64 %21180, i64* %PC.i488
  %21181 = inttoptr i64 %21178 to i32*
  %21182 = load i32, i32* %21181
  %21183 = zext i32 %21182 to i64
  store i64 %21183, i64* %RAX.i489, align 8
  store %struct.Memory* %loadMem_407169, %struct.Memory** %MEMORY
  %loadMem_40716c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21185 = getelementptr inbounds %struct.GPR, %struct.GPR* %21184, i32 0, i32 33
  %21186 = getelementptr inbounds %struct.Reg, %struct.Reg* %21185, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %21186 to i64*
  %21187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21188 = getelementptr inbounds %struct.GPR, %struct.GPR* %21187, i32 0, i32 1
  %21189 = getelementptr inbounds %struct.Reg, %struct.Reg* %21188, i32 0, i32 0
  %RAX.i486 = bitcast %union.anon* %21189 to i64*
  %21190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21191 = getelementptr inbounds %struct.GPR, %struct.GPR* %21190, i32 0, i32 15
  %21192 = getelementptr inbounds %struct.Reg, %struct.Reg* %21191, i32 0, i32 0
  %RBP.i487 = bitcast %union.anon* %21192 to i64*
  %21193 = load i64, i64* %RAX.i486
  %21194 = load i64, i64* %RBP.i487
  %21195 = sub i64 %21194, 8
  %21196 = load i64, i64* %PC.i485
  %21197 = add i64 %21196, 3
  store i64 %21197, i64* %PC.i485
  %21198 = trunc i64 %21193 to i32
  %21199 = inttoptr i64 %21195 to i32*
  %21200 = load i32, i32* %21199
  %21201 = add i32 %21200, %21198
  %21202 = zext i32 %21201 to i64
  store i64 %21202, i64* %RAX.i486, align 8
  %21203 = icmp ult i32 %21201, %21198
  %21204 = icmp ult i32 %21201, %21200
  %21205 = or i1 %21203, %21204
  %21206 = zext i1 %21205 to i8
  %21207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21206, i8* %21207, align 1
  %21208 = and i32 %21201, 255
  %21209 = call i32 @llvm.ctpop.i32(i32 %21208)
  %21210 = trunc i32 %21209 to i8
  %21211 = and i8 %21210, 1
  %21212 = xor i8 %21211, 1
  %21213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21212, i8* %21213, align 1
  %21214 = xor i32 %21200, %21198
  %21215 = xor i32 %21214, %21201
  %21216 = lshr i32 %21215, 4
  %21217 = trunc i32 %21216 to i8
  %21218 = and i8 %21217, 1
  %21219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21218, i8* %21219, align 1
  %21220 = icmp eq i32 %21201, 0
  %21221 = zext i1 %21220 to i8
  %21222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21221, i8* %21222, align 1
  %21223 = lshr i32 %21201, 31
  %21224 = trunc i32 %21223 to i8
  %21225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21224, i8* %21225, align 1
  %21226 = lshr i32 %21198, 31
  %21227 = lshr i32 %21200, 31
  %21228 = xor i32 %21223, %21226
  %21229 = xor i32 %21223, %21227
  %21230 = add i32 %21228, %21229
  %21231 = icmp eq i32 %21230, 2
  %21232 = zext i1 %21231 to i8
  %21233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21232, i8* %21233, align 1
  store %struct.Memory* %loadMem_40716c, %struct.Memory** %MEMORY
  %loadMem_40716f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21235 = getelementptr inbounds %struct.GPR, %struct.GPR* %21234, i32 0, i32 33
  %21236 = getelementptr inbounds %struct.Reg, %struct.Reg* %21235, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %21236 to i64*
  %21237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21238 = getelementptr inbounds %struct.GPR, %struct.GPR* %21237, i32 0, i32 1
  %21239 = getelementptr inbounds %struct.Reg, %struct.Reg* %21238, i32 0, i32 0
  %EAX.i483 = bitcast %union.anon* %21239 to i32*
  %21240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21241 = getelementptr inbounds %struct.GPR, %struct.GPR* %21240, i32 0, i32 11
  %21242 = getelementptr inbounds %struct.Reg, %struct.Reg* %21241, i32 0, i32 0
  %RDI.i484 = bitcast %union.anon* %21242 to i64*
  %21243 = load i32, i32* %EAX.i483
  %21244 = zext i32 %21243 to i64
  %21245 = load i64, i64* %PC.i482
  %21246 = add i64 %21245, 3
  store i64 %21246, i64* %PC.i482
  %21247 = shl i64 %21244, 32
  %21248 = ashr exact i64 %21247, 32
  store i64 %21248, i64* %RDI.i484, align 8
  store %struct.Memory* %loadMem_40716f, %struct.Memory** %MEMORY
  %loadMem_407172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21250 = getelementptr inbounds %struct.GPR, %struct.GPR* %21249, i32 0, i32 33
  %21251 = getelementptr inbounds %struct.Reg, %struct.Reg* %21250, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %21251 to i64*
  %21252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21253 = getelementptr inbounds %struct.GPR, %struct.GPR* %21252, i32 0, i32 1
  %21254 = getelementptr inbounds %struct.Reg, %struct.Reg* %21253, i32 0, i32 0
  %RAX.i480 = bitcast %union.anon* %21254 to i64*
  %21255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21256 = getelementptr inbounds %struct.GPR, %struct.GPR* %21255, i32 0, i32 9
  %21257 = getelementptr inbounds %struct.Reg, %struct.Reg* %21256, i32 0, i32 0
  %RSI.i481 = bitcast %union.anon* %21257 to i64*
  %21258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21259 = getelementptr inbounds %struct.GPR, %struct.GPR* %21258, i32 0, i32 11
  %21260 = getelementptr inbounds %struct.Reg, %struct.Reg* %21259, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %21260 to i64*
  %21261 = load i64, i64* %RSI.i481
  %21262 = load i64, i64* %RDI.i
  %21263 = mul i64 %21262, 2
  %21264 = add i64 %21263, %21261
  %21265 = load i64, i64* %PC.i479
  %21266 = add i64 %21265, 4
  store i64 %21266, i64* %PC.i479
  %21267 = inttoptr i64 %21264 to i16*
  %21268 = load i16, i16* %21267
  %21269 = zext i16 %21268 to i64
  store i64 %21269, i64* %RAX.i480, align 8
  store %struct.Memory* %loadMem_407172, %struct.Memory** %MEMORY
  %loadMem_407176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21271 = getelementptr inbounds %struct.GPR, %struct.GPR* %21270, i32 0, i32 33
  %21272 = getelementptr inbounds %struct.Reg, %struct.Reg* %21271, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %21272 to i64*
  %21273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21274 = getelementptr inbounds %struct.GPR, %struct.GPR* %21273, i32 0, i32 1
  %21275 = getelementptr inbounds %struct.Reg, %struct.Reg* %21274, i32 0, i32 0
  %EAX.i477 = bitcast %union.anon* %21275 to i32*
  %21276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21277 = getelementptr inbounds %struct.GPR, %struct.GPR* %21276, i32 0, i32 9
  %21278 = getelementptr inbounds %struct.Reg, %struct.Reg* %21277, i32 0, i32 0
  %RSI.i478 = bitcast %union.anon* %21278 to i64*
  %21279 = load i32, i32* %EAX.i477
  %21280 = zext i32 %21279 to i64
  %21281 = load i64, i64* %PC.i476
  %21282 = add i64 %21281, 2
  store i64 %21282, i64* %PC.i476
  %21283 = and i64 %21280, 4294967295
  store i64 %21283, i64* %RSI.i478, align 8
  store %struct.Memory* %loadMem_407176, %struct.Memory** %MEMORY
  %loadMem_407178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21285 = getelementptr inbounds %struct.GPR, %struct.GPR* %21284, i32 0, i32 33
  %21286 = getelementptr inbounds %struct.Reg, %struct.Reg* %21285, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %21286 to i64*
  %21287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21288 = getelementptr inbounds %struct.GPR, %struct.GPR* %21287, i32 0, i32 9
  %21289 = getelementptr inbounds %struct.Reg, %struct.Reg* %21288, i32 0, i32 0
  %RSI.i475 = bitcast %union.anon* %21289 to i64*
  %21290 = load i64, i64* %RSI.i475
  %21291 = load i64, i64* %PC.i474
  %21292 = add i64 %21291, 4
  store i64 %21292, i64* %PC.i474
  %21293 = shl i64 %21290, 5
  %21294 = icmp slt i64 %21293, 0
  %21295 = shl i64 %21293, 1
  store i64 %21295, i64* %RSI.i475, align 8
  %21296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %21297 = zext i1 %21294 to i8
  store i8 %21297, i8* %21296, align 1
  %21298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21299 = trunc i64 %21295 to i32
  %21300 = and i32 %21299, 254
  %21301 = call i32 @llvm.ctpop.i32(i32 %21300)
  %21302 = trunc i32 %21301 to i8
  %21303 = and i8 %21302, 1
  %21304 = xor i8 %21303, 1
  store i8 %21304, i8* %21298, align 1
  %21305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21305, align 1
  %21306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21307 = icmp eq i64 %21295, 0
  %21308 = zext i1 %21307 to i8
  store i8 %21308, i8* %21306, align 1
  %21309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21310 = lshr i64 %21295, 63
  %21311 = trunc i64 %21310 to i8
  store i8 %21311, i8* %21309, align 1
  %21312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21312, align 1
  store %struct.Memory* %loadMem_407178, %struct.Memory** %MEMORY
  %loadMem_40717c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21314 = getelementptr inbounds %struct.GPR, %struct.GPR* %21313, i32 0, i32 33
  %21315 = getelementptr inbounds %struct.Reg, %struct.Reg* %21314, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %21315 to i64*
  %21316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21317 = getelementptr inbounds %struct.GPR, %struct.GPR* %21316, i32 0, i32 7
  %21318 = getelementptr inbounds %struct.Reg, %struct.Reg* %21317, i32 0, i32 0
  %RDX.i472 = bitcast %union.anon* %21318 to i64*
  %21319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21320 = getelementptr inbounds %struct.GPR, %struct.GPR* %21319, i32 0, i32 9
  %21321 = getelementptr inbounds %struct.Reg, %struct.Reg* %21320, i32 0, i32 0
  %RSI.i473 = bitcast %union.anon* %21321 to i64*
  %21322 = load i64, i64* %RDX.i472
  %21323 = load i64, i64* %RSI.i473
  %21324 = load i64, i64* %PC.i471
  %21325 = add i64 %21324, 3
  store i64 %21325, i64* %PC.i471
  %21326 = add i64 %21323, %21322
  store i64 %21326, i64* %RDX.i472, align 8
  %21327 = icmp ult i64 %21326, %21322
  %21328 = icmp ult i64 %21326, %21323
  %21329 = or i1 %21327, %21328
  %21330 = zext i1 %21329 to i8
  %21331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21330, i8* %21331, align 1
  %21332 = trunc i64 %21326 to i32
  %21333 = and i32 %21332, 255
  %21334 = call i32 @llvm.ctpop.i32(i32 %21333)
  %21335 = trunc i32 %21334 to i8
  %21336 = and i8 %21335, 1
  %21337 = xor i8 %21336, 1
  %21338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21337, i8* %21338, align 1
  %21339 = xor i64 %21323, %21322
  %21340 = xor i64 %21339, %21326
  %21341 = lshr i64 %21340, 4
  %21342 = trunc i64 %21341 to i8
  %21343 = and i8 %21342, 1
  %21344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21343, i8* %21344, align 1
  %21345 = icmp eq i64 %21326, 0
  %21346 = zext i1 %21345 to i8
  %21347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21346, i8* %21347, align 1
  %21348 = lshr i64 %21326, 63
  %21349 = trunc i64 %21348 to i8
  %21350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21349, i8* %21350, align 1
  %21351 = lshr i64 %21322, 63
  %21352 = lshr i64 %21323, 63
  %21353 = xor i64 %21348, %21351
  %21354 = xor i64 %21348, %21352
  %21355 = add i64 %21353, %21354
  %21356 = icmp eq i64 %21355, 2
  %21357 = zext i1 %21356 to i8
  %21358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21357, i8* %21358, align 1
  store %struct.Memory* %loadMem_40717c, %struct.Memory** %MEMORY
  %loadMem_40717f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21360 = getelementptr inbounds %struct.GPR, %struct.GPR* %21359, i32 0, i32 33
  %21361 = getelementptr inbounds %struct.Reg, %struct.Reg* %21360, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %21361 to i64*
  %21362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21363 = getelementptr inbounds %struct.GPR, %struct.GPR* %21362, i32 0, i32 7
  %21364 = getelementptr inbounds %struct.Reg, %struct.Reg* %21363, i32 0, i32 0
  %RDX.i470 = bitcast %union.anon* %21364 to i64*
  %21365 = load i64, i64* %RDX.i470
  %21366 = load i64, i64* %PC.i469
  %21367 = add i64 %21366, 4
  store i64 %21367, i64* %PC.i469
  %21368 = add i64 32, %21365
  store i64 %21368, i64* %RDX.i470, align 8
  %21369 = icmp ult i64 %21368, %21365
  %21370 = icmp ult i64 %21368, 32
  %21371 = or i1 %21369, %21370
  %21372 = zext i1 %21371 to i8
  %21373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21372, i8* %21373, align 1
  %21374 = trunc i64 %21368 to i32
  %21375 = and i32 %21374, 255
  %21376 = call i32 @llvm.ctpop.i32(i32 %21375)
  %21377 = trunc i32 %21376 to i8
  %21378 = and i8 %21377, 1
  %21379 = xor i8 %21378, 1
  %21380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21379, i8* %21380, align 1
  %21381 = xor i64 32, %21365
  %21382 = xor i64 %21381, %21368
  %21383 = lshr i64 %21382, 4
  %21384 = trunc i64 %21383 to i8
  %21385 = and i8 %21384, 1
  %21386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21385, i8* %21386, align 1
  %21387 = icmp eq i64 %21368, 0
  %21388 = zext i1 %21387 to i8
  %21389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21388, i8* %21389, align 1
  %21390 = lshr i64 %21368, 63
  %21391 = trunc i64 %21390 to i8
  %21392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21391, i8* %21392, align 1
  %21393 = lshr i64 %21365, 63
  %21394 = xor i64 %21390, %21393
  %21395 = add i64 %21394, %21390
  %21396 = icmp eq i64 %21395, 2
  %21397 = zext i1 %21396 to i8
  %21398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21397, i8* %21398, align 1
  store %struct.Memory* %loadMem_40717f, %struct.Memory** %MEMORY
  %loadMem_407183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21400 = getelementptr inbounds %struct.GPR, %struct.GPR* %21399, i32 0, i32 33
  %21401 = getelementptr inbounds %struct.Reg, %struct.Reg* %21400, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %21401 to i64*
  %21402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21403 = getelementptr inbounds %struct.GPR, %struct.GPR* %21402, i32 0, i32 7
  %21404 = getelementptr inbounds %struct.Reg, %struct.Reg* %21403, i32 0, i32 0
  %RDX.i468 = bitcast %union.anon* %21404 to i64*
  %21405 = load i64, i64* %RDX.i468
  %21406 = load i64, i64* %PC.i467
  %21407 = add i64 %21406, 4
  store i64 %21407, i64* %PC.i467
  %21408 = ashr i64 %21405, 5
  %21409 = trunc i64 %21408 to i8
  %21410 = and i8 %21409, 1
  %21411 = ashr i64 %21408, 1
  store i64 %21411, i64* %RDX.i468, align 8
  %21412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21410, i8* %21412, align 1
  %21413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21414 = trunc i64 %21411 to i32
  %21415 = and i32 %21414, 255
  %21416 = call i32 @llvm.ctpop.i32(i32 %21415)
  %21417 = trunc i32 %21416 to i8
  %21418 = and i8 %21417, 1
  %21419 = xor i8 %21418, 1
  store i8 %21419, i8* %21413, align 1
  %21420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21420, align 1
  %21421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21422 = icmp eq i64 %21411, 0
  %21423 = zext i1 %21422 to i8
  store i8 %21423, i8* %21421, align 1
  %21424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21425 = lshr i64 %21411, 63
  %21426 = trunc i64 %21425 to i8
  store i8 %21426, i8* %21424, align 1
  %21427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21427, align 1
  store %struct.Memory* %loadMem_407183, %struct.Memory** %MEMORY
  %loadMem_407187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21429 = getelementptr inbounds %struct.GPR, %struct.GPR* %21428, i32 0, i32 33
  %21430 = getelementptr inbounds %struct.Reg, %struct.Reg* %21429, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %21430 to i64*
  %21431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21432 = getelementptr inbounds %struct.GPR, %struct.GPR* %21431, i32 0, i32 5
  %21433 = getelementptr inbounds %struct.Reg, %struct.Reg* %21432, i32 0, i32 0
  %RCX.i465 = bitcast %union.anon* %21433 to i64*
  %21434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21435 = getelementptr inbounds %struct.GPR, %struct.GPR* %21434, i32 0, i32 7
  %21436 = getelementptr inbounds %struct.Reg, %struct.Reg* %21435, i32 0, i32 0
  %RDX.i466 = bitcast %union.anon* %21436 to i64*
  %21437 = load i64, i64* %RCX.i465
  %21438 = load i64, i64* %RDX.i466
  %21439 = load i64, i64* %PC.i464
  %21440 = add i64 %21439, 3
  store i64 %21440, i64* %PC.i464
  %21441 = sub i64 %21437, %21438
  %21442 = icmp ult i64 %21437, %21438
  %21443 = zext i1 %21442 to i8
  %21444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21443, i8* %21444, align 1
  %21445 = trunc i64 %21441 to i32
  %21446 = and i32 %21445, 255
  %21447 = call i32 @llvm.ctpop.i32(i32 %21446)
  %21448 = trunc i32 %21447 to i8
  %21449 = and i8 %21448, 1
  %21450 = xor i8 %21449, 1
  %21451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21450, i8* %21451, align 1
  %21452 = xor i64 %21438, %21437
  %21453 = xor i64 %21452, %21441
  %21454 = lshr i64 %21453, 4
  %21455 = trunc i64 %21454 to i8
  %21456 = and i8 %21455, 1
  %21457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21456, i8* %21457, align 1
  %21458 = icmp eq i64 %21441, 0
  %21459 = zext i1 %21458 to i8
  %21460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21459, i8* %21460, align 1
  %21461 = lshr i64 %21441, 63
  %21462 = trunc i64 %21461 to i8
  %21463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21462, i8* %21463, align 1
  %21464 = lshr i64 %21437, 63
  %21465 = lshr i64 %21438, 63
  %21466 = xor i64 %21465, %21464
  %21467 = xor i64 %21461, %21464
  %21468 = add i64 %21467, %21466
  %21469 = icmp eq i64 %21468, 2
  %21470 = zext i1 %21469 to i8
  %21471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21470, i8* %21471, align 1
  store %struct.Memory* %loadMem_407187, %struct.Memory** %MEMORY
  %loadMem_40718a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21473 = getelementptr inbounds %struct.GPR, %struct.GPR* %21472, i32 0, i32 33
  %21474 = getelementptr inbounds %struct.Reg, %struct.Reg* %21473, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %21474 to i64*
  %21475 = load i64, i64* %PC.i463
  %21476 = add i64 %21475, 22
  %21477 = load i64, i64* %PC.i463
  %21478 = add i64 %21477, 6
  %21479 = load i64, i64* %PC.i463
  %21480 = add i64 %21479, 6
  store i64 %21480, i64* %PC.i463
  %21481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21482 = load i8, i8* %21481, align 1
  %21483 = icmp ne i8 %21482, 0
  %21484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21485 = load i8, i8* %21484, align 1
  %21486 = icmp ne i8 %21485, 0
  %21487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %21488 = load i8, i8* %21487, align 1
  %21489 = icmp ne i8 %21488, 0
  %21490 = xor i1 %21486, %21489
  %21491 = or i1 %21483, %21490
  %21492 = zext i1 %21491 to i8
  store i8 %21492, i8* %BRANCH_TAKEN, align 1
  %21493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21494 = select i1 %21491, i64 %21476, i64 %21478
  store i64 %21494, i64* %21493, align 8
  store %struct.Memory* %loadMem_40718a, %struct.Memory** %MEMORY
  %loadBr_40718a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40718a = icmp eq i8 %loadBr_40718a, 1
  br i1 %cmpBr_40718a, label %block_.L_4071a0, label %block_407190

block_407190:                                     ; preds = %block_.L_407133
  %loadMem_407190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21496 = getelementptr inbounds %struct.GPR, %struct.GPR* %21495, i32 0, i32 33
  %21497 = getelementptr inbounds %struct.Reg, %struct.Reg* %21496, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %21497 to i64*
  %21498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21499 = getelementptr inbounds %struct.GPR, %struct.GPR* %21498, i32 0, i32 1
  %21500 = getelementptr inbounds %struct.Reg, %struct.Reg* %21499, i32 0, i32 0
  %EAX.i461 = bitcast %union.anon* %21500 to i32*
  %21501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21502 = getelementptr inbounds %struct.GPR, %struct.GPR* %21501, i32 0, i32 1
  %21503 = getelementptr inbounds %struct.Reg, %struct.Reg* %21502, i32 0, i32 0
  %RAX.i462 = bitcast %union.anon* %21503 to i64*
  %21504 = load i64, i64* %RAX.i462
  %21505 = load i32, i32* %EAX.i461
  %21506 = zext i32 %21505 to i64
  %21507 = load i64, i64* %PC.i460
  %21508 = add i64 %21507, 2
  store i64 %21508, i64* %PC.i460
  %21509 = xor i64 %21506, %21504
  %21510 = trunc i64 %21509 to i32
  %21511 = and i64 %21509, 4294967295
  store i64 %21511, i64* %RAX.i462, align 8
  %21512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %21512, align 1
  %21513 = and i32 %21510, 255
  %21514 = call i32 @llvm.ctpop.i32(i32 %21513)
  %21515 = trunc i32 %21514 to i8
  %21516 = and i8 %21515, 1
  %21517 = xor i8 %21516, 1
  %21518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21517, i8* %21518, align 1
  %21519 = icmp eq i32 %21510, 0
  %21520 = zext i1 %21519 to i8
  %21521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21520, i8* %21521, align 1
  %21522 = lshr i32 %21510, 31
  %21523 = trunc i32 %21522 to i8
  %21524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21523, i8* %21524, align 1
  %21525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21525, align 1
  %21526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21526, align 1
  store %struct.Memory* %loadMem_407190, %struct.Memory** %MEMORY
  %loadMem_407192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21528 = getelementptr inbounds %struct.GPR, %struct.GPR* %21527, i32 0, i32 33
  %21529 = getelementptr inbounds %struct.Reg, %struct.Reg* %21528, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %21529 to i64*
  %21530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21531 = getelementptr inbounds %struct.GPR, %struct.GPR* %21530, i32 0, i32 1
  %21532 = getelementptr inbounds %struct.Reg, %struct.Reg* %21531, i32 0, i32 0
  %EAX.i458 = bitcast %union.anon* %21532 to i32*
  %21533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21534 = getelementptr inbounds %struct.GPR, %struct.GPR* %21533, i32 0, i32 5
  %21535 = getelementptr inbounds %struct.Reg, %struct.Reg* %21534, i32 0, i32 0
  %RCX.i459 = bitcast %union.anon* %21535 to i64*
  %21536 = load i32, i32* %EAX.i458
  %21537 = zext i32 %21536 to i64
  %21538 = load i64, i64* %PC.i457
  %21539 = add i64 %21538, 2
  store i64 %21539, i64* %PC.i457
  %21540 = and i64 %21537, 4294967295
  store i64 %21540, i64* %RCX.i459, align 8
  store %struct.Memory* %loadMem_407192, %struct.Memory** %MEMORY
  %loadMem_407194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21542 = getelementptr inbounds %struct.GPR, %struct.GPR* %21541, i32 0, i32 33
  %21543 = getelementptr inbounds %struct.Reg, %struct.Reg* %21542, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %21543 to i64*
  %21544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21545 = getelementptr inbounds %struct.GPR, %struct.GPR* %21544, i32 0, i32 5
  %21546 = getelementptr inbounds %struct.Reg, %struct.Reg* %21545, i32 0, i32 0
  %RCX.i455 = bitcast %union.anon* %21546 to i64*
  %21547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21548 = getelementptr inbounds %struct.GPR, %struct.GPR* %21547, i32 0, i32 15
  %21549 = getelementptr inbounds %struct.Reg, %struct.Reg* %21548, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %21549 to i64*
  %21550 = load i64, i64* %RBP.i456
  %21551 = sub i64 %21550, 256
  %21552 = load i64, i64* %RCX.i455
  %21553 = load i64, i64* %PC.i454
  %21554 = add i64 %21553, 7
  store i64 %21554, i64* %PC.i454
  %21555 = inttoptr i64 %21551 to i64*
  store i64 %21552, i64* %21555
  store %struct.Memory* %loadMem_407194, %struct.Memory** %MEMORY
  %loadMem_40719b = load %struct.Memory*, %struct.Memory** %MEMORY
  %21556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21557 = getelementptr inbounds %struct.GPR, %struct.GPR* %21556, i32 0, i32 33
  %21558 = getelementptr inbounds %struct.Reg, %struct.Reg* %21557, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %21558 to i64*
  %21559 = load i64, i64* %PC.i453
  %21560 = add i64 %21559, 92
  %21561 = load i64, i64* %PC.i453
  %21562 = add i64 %21561, 5
  store i64 %21562, i64* %PC.i453
  %21563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21560, i64* %21563, align 8
  store %struct.Memory* %loadMem_40719b, %struct.Memory** %MEMORY
  br label %block_.L_4071f7

block_.L_4071a0:                                  ; preds = %block_.L_407133
  %loadMem_4071a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21565 = getelementptr inbounds %struct.GPR, %struct.GPR* %21564, i32 0, i32 33
  %21566 = getelementptr inbounds %struct.Reg, %struct.Reg* %21565, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %21566 to i64*
  %21567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21568 = getelementptr inbounds %struct.GPR, %struct.GPR* %21567, i32 0, i32 1
  %21569 = getelementptr inbounds %struct.Reg, %struct.Reg* %21568, i32 0, i32 0
  %RAX.i451 = bitcast %union.anon* %21569 to i64*
  %21570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21571 = getelementptr inbounds %struct.GPR, %struct.GPR* %21570, i32 0, i32 15
  %21572 = getelementptr inbounds %struct.Reg, %struct.Reg* %21571, i32 0, i32 0
  %RBP.i452 = bitcast %union.anon* %21572 to i64*
  %21573 = load i64, i64* %RBP.i452
  %21574 = sub i64 %21573, 28
  %21575 = load i64, i64* %PC.i450
  %21576 = add i64 %21575, 4
  store i64 %21576, i64* %PC.i450
  %21577 = inttoptr i64 %21574 to i32*
  %21578 = load i32, i32* %21577
  %21579 = sext i32 %21578 to i64
  store i64 %21579, i64* %RAX.i451, align 8
  store %struct.Memory* %loadMem_4071a0, %struct.Memory** %MEMORY
  %loadMem_4071a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21581 = getelementptr inbounds %struct.GPR, %struct.GPR* %21580, i32 0, i32 33
  %21582 = getelementptr inbounds %struct.Reg, %struct.Reg* %21581, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %21582 to i64*
  %21583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21584 = getelementptr inbounds %struct.GPR, %struct.GPR* %21583, i32 0, i32 1
  %21585 = getelementptr inbounds %struct.Reg, %struct.Reg* %21584, i32 0, i32 0
  %RAX.i447 = bitcast %union.anon* %21585 to i64*
  %21586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21587 = getelementptr inbounds %struct.GPR, %struct.GPR* %21586, i32 0, i32 5
  %21588 = getelementptr inbounds %struct.Reg, %struct.Reg* %21587, i32 0, i32 0
  %RCX.i448 = bitcast %union.anon* %21588 to i64*
  %21589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21590 = getelementptr inbounds %struct.GPR, %struct.GPR* %21589, i32 0, i32 15
  %21591 = getelementptr inbounds %struct.Reg, %struct.Reg* %21590, i32 0, i32 0
  %RBP.i449 = bitcast %union.anon* %21591 to i64*
  %21592 = load i64, i64* %RBP.i449
  %21593 = load i64, i64* %RAX.i447
  %21594 = mul i64 %21593, 4
  %21595 = add i64 %21592, -80
  %21596 = add i64 %21595, %21594
  %21597 = load i64, i64* %PC.i446
  %21598 = add i64 %21597, 4
  store i64 %21598, i64* %PC.i446
  %21599 = inttoptr i64 %21596 to i32*
  %21600 = load i32, i32* %21599
  %21601 = zext i32 %21600 to i64
  store i64 %21601, i64* %RCX.i448, align 8
  store %struct.Memory* %loadMem_4071a4, %struct.Memory** %MEMORY
  %loadMem_4071a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21603 = getelementptr inbounds %struct.GPR, %struct.GPR* %21602, i32 0, i32 33
  %21604 = getelementptr inbounds %struct.Reg, %struct.Reg* %21603, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %21604 to i64*
  %21605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21606 = getelementptr inbounds %struct.GPR, %struct.GPR* %21605, i32 0, i32 1
  %21607 = getelementptr inbounds %struct.Reg, %struct.Reg* %21606, i32 0, i32 0
  %RAX.i444 = bitcast %union.anon* %21607 to i64*
  %21608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21609 = getelementptr inbounds %struct.GPR, %struct.GPR* %21608, i32 0, i32 15
  %21610 = getelementptr inbounds %struct.Reg, %struct.Reg* %21609, i32 0, i32 0
  %RBP.i445 = bitcast %union.anon* %21610 to i64*
  %21611 = load i64, i64* %RBP.i445
  %21612 = sub i64 %21611, 36
  %21613 = load i64, i64* %PC.i443
  %21614 = add i64 %21613, 4
  store i64 %21614, i64* %PC.i443
  %21615 = inttoptr i64 %21612 to i32*
  %21616 = load i32, i32* %21615
  %21617 = sext i32 %21616 to i64
  store i64 %21617, i64* %RAX.i444, align 8
  store %struct.Memory* %loadMem_4071a8, %struct.Memory** %MEMORY
  %loadMem_4071ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %21618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21619 = getelementptr inbounds %struct.GPR, %struct.GPR* %21618, i32 0, i32 33
  %21620 = getelementptr inbounds %struct.Reg, %struct.Reg* %21619, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %21620 to i64*
  %21621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21622 = getelementptr inbounds %struct.GPR, %struct.GPR* %21621, i32 0, i32 1
  %21623 = getelementptr inbounds %struct.Reg, %struct.Reg* %21622, i32 0, i32 0
  %RAX.i440 = bitcast %union.anon* %21623 to i64*
  %21624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21625 = getelementptr inbounds %struct.GPR, %struct.GPR* %21624, i32 0, i32 5
  %21626 = getelementptr inbounds %struct.Reg, %struct.Reg* %21625, i32 0, i32 0
  %RCX.i441 = bitcast %union.anon* %21626 to i64*
  %21627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21628 = getelementptr inbounds %struct.GPR, %struct.GPR* %21627, i32 0, i32 15
  %21629 = getelementptr inbounds %struct.Reg, %struct.Reg* %21628, i32 0, i32 0
  %RBP.i442 = bitcast %union.anon* %21629 to i64*
  %21630 = load i64, i64* %RCX.i441
  %21631 = load i64, i64* %RBP.i442
  %21632 = load i64, i64* %RAX.i440
  %21633 = mul i64 %21632, 4
  %21634 = add i64 %21631, -80
  %21635 = add i64 %21634, %21633
  %21636 = load i64, i64* %PC.i439
  %21637 = add i64 %21636, 4
  store i64 %21637, i64* %PC.i439
  %21638 = trunc i64 %21630 to i32
  %21639 = inttoptr i64 %21635 to i32*
  %21640 = load i32, i32* %21639
  %21641 = sub i32 %21638, %21640
  %21642 = zext i32 %21641 to i64
  store i64 %21642, i64* %RCX.i441, align 8
  %21643 = icmp ult i32 %21638, %21640
  %21644 = zext i1 %21643 to i8
  %21645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21644, i8* %21645, align 1
  %21646 = and i32 %21641, 255
  %21647 = call i32 @llvm.ctpop.i32(i32 %21646)
  %21648 = trunc i32 %21647 to i8
  %21649 = and i8 %21648, 1
  %21650 = xor i8 %21649, 1
  %21651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21650, i8* %21651, align 1
  %21652 = xor i32 %21640, %21638
  %21653 = xor i32 %21652, %21641
  %21654 = lshr i32 %21653, 4
  %21655 = trunc i32 %21654 to i8
  %21656 = and i8 %21655, 1
  %21657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21656, i8* %21657, align 1
  %21658 = icmp eq i32 %21641, 0
  %21659 = zext i1 %21658 to i8
  %21660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21659, i8* %21660, align 1
  %21661 = lshr i32 %21641, 31
  %21662 = trunc i32 %21661 to i8
  %21663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21662, i8* %21663, align 1
  %21664 = lshr i32 %21638, 31
  %21665 = lshr i32 %21640, 31
  %21666 = xor i32 %21665, %21664
  %21667 = xor i32 %21661, %21664
  %21668 = add i32 %21667, %21666
  %21669 = icmp eq i32 %21668, 2
  %21670 = zext i1 %21669 to i8
  %21671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21670, i8* %21671, align 1
  store %struct.Memory* %loadMem_4071ac, %struct.Memory** %MEMORY
  %loadMem_4071b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21673 = getelementptr inbounds %struct.GPR, %struct.GPR* %21672, i32 0, i32 33
  %21674 = getelementptr inbounds %struct.Reg, %struct.Reg* %21673, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %21674 to i64*
  %21675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21676 = getelementptr inbounds %struct.GPR, %struct.GPR* %21675, i32 0, i32 5
  %21677 = getelementptr inbounds %struct.Reg, %struct.Reg* %21676, i32 0, i32 0
  %ECX.i437 = bitcast %union.anon* %21677 to i32*
  %21678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21679 = getelementptr inbounds %struct.GPR, %struct.GPR* %21678, i32 0, i32 1
  %21680 = getelementptr inbounds %struct.Reg, %struct.Reg* %21679, i32 0, i32 0
  %RAX.i438 = bitcast %union.anon* %21680 to i64*
  %21681 = load i32, i32* %ECX.i437
  %21682 = zext i32 %21681 to i64
  %21683 = load i64, i64* %PC.i436
  %21684 = add i64 %21683, 3
  store i64 %21684, i64* %PC.i436
  %21685 = shl i64 %21682, 32
  %21686 = ashr exact i64 %21685, 32
  store i64 %21686, i64* %RAX.i438, align 8
  store %struct.Memory* %loadMem_4071b0, %struct.Memory** %MEMORY
  %loadMem_4071b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21688 = getelementptr inbounds %struct.GPR, %struct.GPR* %21687, i32 0, i32 33
  %21689 = getelementptr inbounds %struct.Reg, %struct.Reg* %21688, i32 0, i32 0
  %PC.i434 = bitcast %union.anon* %21689 to i64*
  %21690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21691 = getelementptr inbounds %struct.GPR, %struct.GPR* %21690, i32 0, i32 7
  %21692 = getelementptr inbounds %struct.Reg, %struct.Reg* %21691, i32 0, i32 0
  %RDX.i435 = bitcast %union.anon* %21692 to i64*
  %21693 = load i64, i64* %PC.i434
  %21694 = add i64 %21693, 8
  store i64 %21694, i64* %PC.i434
  %21695 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %21695, i64* %RDX.i435, align 8
  store %struct.Memory* %loadMem_4071b3, %struct.Memory** %MEMORY
  %loadMem_4071bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %21696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21697 = getelementptr inbounds %struct.GPR, %struct.GPR* %21696, i32 0, i32 33
  %21698 = getelementptr inbounds %struct.Reg, %struct.Reg* %21697, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %21698 to i64*
  %21699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21700 = getelementptr inbounds %struct.GPR, %struct.GPR* %21699, i32 0, i32 7
  %21701 = getelementptr inbounds %struct.Reg, %struct.Reg* %21700, i32 0, i32 0
  %RDX.i433 = bitcast %union.anon* %21701 to i64*
  %21702 = load i64, i64* %RDX.i433
  %21703 = load i64, i64* %PC.i432
  %21704 = add i64 %21703, 7
  store i64 %21704, i64* %PC.i432
  %21705 = add i64 12600, %21702
  store i64 %21705, i64* %RDX.i433, align 8
  %21706 = icmp ult i64 %21705, %21702
  %21707 = icmp ult i64 %21705, 12600
  %21708 = or i1 %21706, %21707
  %21709 = zext i1 %21708 to i8
  %21710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21709, i8* %21710, align 1
  %21711 = trunc i64 %21705 to i32
  %21712 = and i32 %21711, 255
  %21713 = call i32 @llvm.ctpop.i32(i32 %21712)
  %21714 = trunc i32 %21713 to i8
  %21715 = and i8 %21714, 1
  %21716 = xor i8 %21715, 1
  %21717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21716, i8* %21717, align 1
  %21718 = xor i64 12600, %21702
  %21719 = xor i64 %21718, %21705
  %21720 = lshr i64 %21719, 4
  %21721 = trunc i64 %21720 to i8
  %21722 = and i8 %21721, 1
  %21723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21722, i8* %21723, align 1
  %21724 = icmp eq i64 %21705, 0
  %21725 = zext i1 %21724 to i8
  %21726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21725, i8* %21726, align 1
  %21727 = lshr i64 %21705, 63
  %21728 = trunc i64 %21727 to i8
  %21729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21728, i8* %21729, align 1
  %21730 = lshr i64 %21702, 63
  %21731 = xor i64 %21727, %21730
  %21732 = add i64 %21731, %21727
  %21733 = icmp eq i64 %21732, 2
  %21734 = zext i1 %21733 to i8
  %21735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21734, i8* %21735, align 1
  store %struct.Memory* %loadMem_4071bb, %struct.Memory** %MEMORY
  %loadMem_4071c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21737 = getelementptr inbounds %struct.GPR, %struct.GPR* %21736, i32 0, i32 33
  %21738 = getelementptr inbounds %struct.Reg, %struct.Reg* %21737, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %21738 to i64*
  %21739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21740 = getelementptr inbounds %struct.GPR, %struct.GPR* %21739, i32 0, i32 5
  %21741 = getelementptr inbounds %struct.Reg, %struct.Reg* %21740, i32 0, i32 0
  %RCX.i430 = bitcast %union.anon* %21741 to i64*
  %21742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21743 = getelementptr inbounds %struct.GPR, %struct.GPR* %21742, i32 0, i32 15
  %21744 = getelementptr inbounds %struct.Reg, %struct.Reg* %21743, i32 0, i32 0
  %RBP.i431 = bitcast %union.anon* %21744 to i64*
  %21745 = load i64, i64* %RBP.i431
  %21746 = sub i64 %21745, 24
  %21747 = load i64, i64* %PC.i429
  %21748 = add i64 %21747, 3
  store i64 %21748, i64* %PC.i429
  %21749 = inttoptr i64 %21746 to i32*
  %21750 = load i32, i32* %21749
  %21751 = zext i32 %21750 to i64
  store i64 %21751, i64* %RCX.i430, align 8
  store %struct.Memory* %loadMem_4071c2, %struct.Memory** %MEMORY
  %loadMem_4071c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21753 = getelementptr inbounds %struct.GPR, %struct.GPR* %21752, i32 0, i32 33
  %21754 = getelementptr inbounds %struct.Reg, %struct.Reg* %21753, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %21754 to i64*
  %21755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21756 = getelementptr inbounds %struct.GPR, %struct.GPR* %21755, i32 0, i32 5
  %21757 = getelementptr inbounds %struct.Reg, %struct.Reg* %21756, i32 0, i32 0
  %RCX.i427 = bitcast %union.anon* %21757 to i64*
  %21758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21759 = getelementptr inbounds %struct.GPR, %struct.GPR* %21758, i32 0, i32 15
  %21760 = getelementptr inbounds %struct.Reg, %struct.Reg* %21759, i32 0, i32 0
  %RBP.i428 = bitcast %union.anon* %21760 to i64*
  %21761 = load i64, i64* %RCX.i427
  %21762 = load i64, i64* %RBP.i428
  %21763 = sub i64 %21762, 4
  %21764 = load i64, i64* %PC.i426
  %21765 = add i64 %21764, 3
  store i64 %21765, i64* %PC.i426
  %21766 = trunc i64 %21761 to i32
  %21767 = inttoptr i64 %21763 to i32*
  %21768 = load i32, i32* %21767
  %21769 = add i32 %21768, %21766
  %21770 = zext i32 %21769 to i64
  store i64 %21770, i64* %RCX.i427, align 8
  %21771 = icmp ult i32 %21769, %21766
  %21772 = icmp ult i32 %21769, %21768
  %21773 = or i1 %21771, %21772
  %21774 = zext i1 %21773 to i8
  %21775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21774, i8* %21775, align 1
  %21776 = and i32 %21769, 255
  %21777 = call i32 @llvm.ctpop.i32(i32 %21776)
  %21778 = trunc i32 %21777 to i8
  %21779 = and i8 %21778, 1
  %21780 = xor i8 %21779, 1
  %21781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21780, i8* %21781, align 1
  %21782 = xor i32 %21768, %21766
  %21783 = xor i32 %21782, %21769
  %21784 = lshr i32 %21783, 4
  %21785 = trunc i32 %21784 to i8
  %21786 = and i8 %21785, 1
  %21787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21786, i8* %21787, align 1
  %21788 = icmp eq i32 %21769, 0
  %21789 = zext i1 %21788 to i8
  %21790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21789, i8* %21790, align 1
  %21791 = lshr i32 %21769, 31
  %21792 = trunc i32 %21791 to i8
  %21793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21792, i8* %21793, align 1
  %21794 = lshr i32 %21766, 31
  %21795 = lshr i32 %21768, 31
  %21796 = xor i32 %21791, %21794
  %21797 = xor i32 %21791, %21795
  %21798 = add i32 %21796, %21797
  %21799 = icmp eq i32 %21798, 2
  %21800 = zext i1 %21799 to i8
  %21801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21800, i8* %21801, align 1
  store %struct.Memory* %loadMem_4071c5, %struct.Memory** %MEMORY
  %loadMem_4071c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21803 = getelementptr inbounds %struct.GPR, %struct.GPR* %21802, i32 0, i32 33
  %21804 = getelementptr inbounds %struct.Reg, %struct.Reg* %21803, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %21804 to i64*
  %21805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21806 = getelementptr inbounds %struct.GPR, %struct.GPR* %21805, i32 0, i32 5
  %21807 = getelementptr inbounds %struct.Reg, %struct.Reg* %21806, i32 0, i32 0
  %ECX.i424 = bitcast %union.anon* %21807 to i32*
  %21808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21809 = getelementptr inbounds %struct.GPR, %struct.GPR* %21808, i32 0, i32 9
  %21810 = getelementptr inbounds %struct.Reg, %struct.Reg* %21809, i32 0, i32 0
  %RSI.i425 = bitcast %union.anon* %21810 to i64*
  %21811 = load i32, i32* %ECX.i424
  %21812 = zext i32 %21811 to i64
  %21813 = load i64, i64* %PC.i423
  %21814 = add i64 %21813, 3
  store i64 %21814, i64* %PC.i423
  %21815 = shl i64 %21812, 32
  %21816 = ashr exact i64 %21815, 32
  store i64 %21816, i64* %RSI.i425, align 8
  store %struct.Memory* %loadMem_4071c8, %struct.Memory** %MEMORY
  %loadMem_4071cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %21817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21818 = getelementptr inbounds %struct.GPR, %struct.GPR* %21817, i32 0, i32 33
  %21819 = getelementptr inbounds %struct.Reg, %struct.Reg* %21818, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %21819 to i64*
  %21820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21821 = getelementptr inbounds %struct.GPR, %struct.GPR* %21820, i32 0, i32 9
  %21822 = getelementptr inbounds %struct.Reg, %struct.Reg* %21821, i32 0, i32 0
  %RSI.i422 = bitcast %union.anon* %21822 to i64*
  %21823 = load i64, i64* %RSI.i422
  %21824 = load i64, i64* %PC.i421
  %21825 = add i64 %21824, 4
  store i64 %21825, i64* %PC.i421
  %21826 = shl i64 %21823, 4
  %21827 = icmp slt i64 %21826, 0
  %21828 = shl i64 %21826, 1
  store i64 %21828, i64* %RSI.i422, align 8
  %21829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %21830 = zext i1 %21827 to i8
  store i8 %21830, i8* %21829, align 1
  %21831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21832 = trunc i64 %21828 to i32
  %21833 = and i32 %21832, 254
  %21834 = call i32 @llvm.ctpop.i32(i32 %21833)
  %21835 = trunc i32 %21834 to i8
  %21836 = and i8 %21835, 1
  %21837 = xor i8 %21836, 1
  store i8 %21837, i8* %21831, align 1
  %21838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21838, align 1
  %21839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21840 = icmp eq i64 %21828, 0
  %21841 = zext i1 %21840 to i8
  store i8 %21841, i8* %21839, align 1
  %21842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21843 = lshr i64 %21828, 63
  %21844 = trunc i64 %21843 to i8
  store i8 %21844, i8* %21842, align 1
  %21845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21845, align 1
  store %struct.Memory* %loadMem_4071cb, %struct.Memory** %MEMORY
  %loadMem_4071cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %21846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21847 = getelementptr inbounds %struct.GPR, %struct.GPR* %21846, i32 0, i32 33
  %21848 = getelementptr inbounds %struct.Reg, %struct.Reg* %21847, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %21848 to i64*
  %21849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21850 = getelementptr inbounds %struct.GPR, %struct.GPR* %21849, i32 0, i32 7
  %21851 = getelementptr inbounds %struct.Reg, %struct.Reg* %21850, i32 0, i32 0
  %RDX.i419 = bitcast %union.anon* %21851 to i64*
  %21852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21853 = getelementptr inbounds %struct.GPR, %struct.GPR* %21852, i32 0, i32 9
  %21854 = getelementptr inbounds %struct.Reg, %struct.Reg* %21853, i32 0, i32 0
  %RSI.i420 = bitcast %union.anon* %21854 to i64*
  %21855 = load i64, i64* %RDX.i419
  %21856 = load i64, i64* %RSI.i420
  %21857 = load i64, i64* %PC.i418
  %21858 = add i64 %21857, 3
  store i64 %21858, i64* %PC.i418
  %21859 = add i64 %21856, %21855
  store i64 %21859, i64* %RDX.i419, align 8
  %21860 = icmp ult i64 %21859, %21855
  %21861 = icmp ult i64 %21859, %21856
  %21862 = or i1 %21860, %21861
  %21863 = zext i1 %21862 to i8
  %21864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21863, i8* %21864, align 1
  %21865 = trunc i64 %21859 to i32
  %21866 = and i32 %21865, 255
  %21867 = call i32 @llvm.ctpop.i32(i32 %21866)
  %21868 = trunc i32 %21867 to i8
  %21869 = and i8 %21868, 1
  %21870 = xor i8 %21869, 1
  %21871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21870, i8* %21871, align 1
  %21872 = xor i64 %21856, %21855
  %21873 = xor i64 %21872, %21859
  %21874 = lshr i64 %21873, 4
  %21875 = trunc i64 %21874 to i8
  %21876 = and i8 %21875, 1
  %21877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21876, i8* %21877, align 1
  %21878 = icmp eq i64 %21859, 0
  %21879 = zext i1 %21878 to i8
  %21880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21879, i8* %21880, align 1
  %21881 = lshr i64 %21859, 63
  %21882 = trunc i64 %21881 to i8
  %21883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21882, i8* %21883, align 1
  %21884 = lshr i64 %21855, 63
  %21885 = lshr i64 %21856, 63
  %21886 = xor i64 %21881, %21884
  %21887 = xor i64 %21881, %21885
  %21888 = add i64 %21886, %21887
  %21889 = icmp eq i64 %21888, 2
  %21890 = zext i1 %21889 to i8
  %21891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21890, i8* %21891, align 1
  store %struct.Memory* %loadMem_4071cf, %struct.Memory** %MEMORY
  %loadMem_4071d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21893 = getelementptr inbounds %struct.GPR, %struct.GPR* %21892, i32 0, i32 33
  %21894 = getelementptr inbounds %struct.Reg, %struct.Reg* %21893, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %21894 to i64*
  %21895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21896 = getelementptr inbounds %struct.GPR, %struct.GPR* %21895, i32 0, i32 5
  %21897 = getelementptr inbounds %struct.Reg, %struct.Reg* %21896, i32 0, i32 0
  %RCX.i416 = bitcast %union.anon* %21897 to i64*
  %21898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21899 = getelementptr inbounds %struct.GPR, %struct.GPR* %21898, i32 0, i32 15
  %21900 = getelementptr inbounds %struct.Reg, %struct.Reg* %21899, i32 0, i32 0
  %RBP.i417 = bitcast %union.anon* %21900 to i64*
  %21901 = load i64, i64* %RBP.i417
  %21902 = sub i64 %21901, 36
  %21903 = load i64, i64* %PC.i415
  %21904 = add i64 %21903, 3
  store i64 %21904, i64* %PC.i415
  %21905 = inttoptr i64 %21902 to i32*
  %21906 = load i32, i32* %21905
  %21907 = zext i32 %21906 to i64
  store i64 %21907, i64* %RCX.i416, align 8
  store %struct.Memory* %loadMem_4071d2, %struct.Memory** %MEMORY
  %loadMem_4071d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21909 = getelementptr inbounds %struct.GPR, %struct.GPR* %21908, i32 0, i32 33
  %21910 = getelementptr inbounds %struct.Reg, %struct.Reg* %21909, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %21910 to i64*
  %21911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21912 = getelementptr inbounds %struct.GPR, %struct.GPR* %21911, i32 0, i32 5
  %21913 = getelementptr inbounds %struct.Reg, %struct.Reg* %21912, i32 0, i32 0
  %RCX.i413 = bitcast %union.anon* %21913 to i64*
  %21914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21915 = getelementptr inbounds %struct.GPR, %struct.GPR* %21914, i32 0, i32 15
  %21916 = getelementptr inbounds %struct.Reg, %struct.Reg* %21915, i32 0, i32 0
  %RBP.i414 = bitcast %union.anon* %21916 to i64*
  %21917 = load i64, i64* %RCX.i413
  %21918 = load i64, i64* %RBP.i414
  %21919 = sub i64 %21918, 8
  %21920 = load i64, i64* %PC.i412
  %21921 = add i64 %21920, 3
  store i64 %21921, i64* %PC.i412
  %21922 = trunc i64 %21917 to i32
  %21923 = inttoptr i64 %21919 to i32*
  %21924 = load i32, i32* %21923
  %21925 = add i32 %21924, %21922
  %21926 = zext i32 %21925 to i64
  store i64 %21926, i64* %RCX.i413, align 8
  %21927 = icmp ult i32 %21925, %21922
  %21928 = icmp ult i32 %21925, %21924
  %21929 = or i1 %21927, %21928
  %21930 = zext i1 %21929 to i8
  %21931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21930, i8* %21931, align 1
  %21932 = and i32 %21925, 255
  %21933 = call i32 @llvm.ctpop.i32(i32 %21932)
  %21934 = trunc i32 %21933 to i8
  %21935 = and i8 %21934, 1
  %21936 = xor i8 %21935, 1
  %21937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21936, i8* %21937, align 1
  %21938 = xor i32 %21924, %21922
  %21939 = xor i32 %21938, %21925
  %21940 = lshr i32 %21939, 4
  %21941 = trunc i32 %21940 to i8
  %21942 = and i8 %21941, 1
  %21943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21942, i8* %21943, align 1
  %21944 = icmp eq i32 %21925, 0
  %21945 = zext i1 %21944 to i8
  %21946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21945, i8* %21946, align 1
  %21947 = lshr i32 %21925, 31
  %21948 = trunc i32 %21947 to i8
  %21949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21948, i8* %21949, align 1
  %21950 = lshr i32 %21922, 31
  %21951 = lshr i32 %21924, 31
  %21952 = xor i32 %21947, %21950
  %21953 = xor i32 %21947, %21951
  %21954 = add i32 %21952, %21953
  %21955 = icmp eq i32 %21954, 2
  %21956 = zext i1 %21955 to i8
  %21957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21956, i8* %21957, align 1
  store %struct.Memory* %loadMem_4071d5, %struct.Memory** %MEMORY
  %loadMem_4071d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21959 = getelementptr inbounds %struct.GPR, %struct.GPR* %21958, i32 0, i32 33
  %21960 = getelementptr inbounds %struct.Reg, %struct.Reg* %21959, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %21960 to i64*
  %21961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21962 = getelementptr inbounds %struct.GPR, %struct.GPR* %21961, i32 0, i32 5
  %21963 = getelementptr inbounds %struct.Reg, %struct.Reg* %21962, i32 0, i32 0
  %ECX.i410 = bitcast %union.anon* %21963 to i32*
  %21964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21965 = getelementptr inbounds %struct.GPR, %struct.GPR* %21964, i32 0, i32 9
  %21966 = getelementptr inbounds %struct.Reg, %struct.Reg* %21965, i32 0, i32 0
  %RSI.i411 = bitcast %union.anon* %21966 to i64*
  %21967 = load i32, i32* %ECX.i410
  %21968 = zext i32 %21967 to i64
  %21969 = load i64, i64* %PC.i409
  %21970 = add i64 %21969, 3
  store i64 %21970, i64* %PC.i409
  %21971 = shl i64 %21968, 32
  %21972 = ashr exact i64 %21971, 32
  store i64 %21972, i64* %RSI.i411, align 8
  store %struct.Memory* %loadMem_4071d8, %struct.Memory** %MEMORY
  %loadMem_4071db = load %struct.Memory*, %struct.Memory** %MEMORY
  %21973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21974 = getelementptr inbounds %struct.GPR, %struct.GPR* %21973, i32 0, i32 33
  %21975 = getelementptr inbounds %struct.Reg, %struct.Reg* %21974, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %21975 to i64*
  %21976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21977 = getelementptr inbounds %struct.GPR, %struct.GPR* %21976, i32 0, i32 5
  %21978 = getelementptr inbounds %struct.Reg, %struct.Reg* %21977, i32 0, i32 0
  %RCX.i406 = bitcast %union.anon* %21978 to i64*
  %21979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21980 = getelementptr inbounds %struct.GPR, %struct.GPR* %21979, i32 0, i32 7
  %21981 = getelementptr inbounds %struct.Reg, %struct.Reg* %21980, i32 0, i32 0
  %RDX.i407 = bitcast %union.anon* %21981 to i64*
  %21982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21983 = getelementptr inbounds %struct.GPR, %struct.GPR* %21982, i32 0, i32 9
  %21984 = getelementptr inbounds %struct.Reg, %struct.Reg* %21983, i32 0, i32 0
  %RSI.i408 = bitcast %union.anon* %21984 to i64*
  %21985 = load i64, i64* %RDX.i407
  %21986 = load i64, i64* %RSI.i408
  %21987 = mul i64 %21986, 2
  %21988 = add i64 %21987, %21985
  %21989 = load i64, i64* %PC.i405
  %21990 = add i64 %21989, 4
  store i64 %21990, i64* %PC.i405
  %21991 = inttoptr i64 %21988 to i16*
  %21992 = load i16, i16* %21991
  %21993 = zext i16 %21992 to i64
  store i64 %21993, i64* %RCX.i406, align 8
  store %struct.Memory* %loadMem_4071db, %struct.Memory** %MEMORY
  %loadMem_4071df = load %struct.Memory*, %struct.Memory** %MEMORY
  %21994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21995 = getelementptr inbounds %struct.GPR, %struct.GPR* %21994, i32 0, i32 33
  %21996 = getelementptr inbounds %struct.Reg, %struct.Reg* %21995, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %21996 to i64*
  %21997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21998 = getelementptr inbounds %struct.GPR, %struct.GPR* %21997, i32 0, i32 5
  %21999 = getelementptr inbounds %struct.Reg, %struct.Reg* %21998, i32 0, i32 0
  %ECX.i403 = bitcast %union.anon* %21999 to i32*
  %22000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22001 = getelementptr inbounds %struct.GPR, %struct.GPR* %22000, i32 0, i32 7
  %22002 = getelementptr inbounds %struct.Reg, %struct.Reg* %22001, i32 0, i32 0
  %RDX.i404 = bitcast %union.anon* %22002 to i64*
  %22003 = load i32, i32* %ECX.i403
  %22004 = zext i32 %22003 to i64
  %22005 = load i64, i64* %PC.i402
  %22006 = add i64 %22005, 2
  store i64 %22006, i64* %PC.i402
  %22007 = and i64 %22004, 4294967295
  store i64 %22007, i64* %RDX.i404, align 8
  store %struct.Memory* %loadMem_4071df, %struct.Memory** %MEMORY
  %loadMem_4071e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22009 = getelementptr inbounds %struct.GPR, %struct.GPR* %22008, i32 0, i32 33
  %22010 = getelementptr inbounds %struct.Reg, %struct.Reg* %22009, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %22010 to i64*
  %22011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22012 = getelementptr inbounds %struct.GPR, %struct.GPR* %22011, i32 0, i32 7
  %22013 = getelementptr inbounds %struct.Reg, %struct.Reg* %22012, i32 0, i32 0
  %RDX.i401 = bitcast %union.anon* %22013 to i64*
  %22014 = load i64, i64* %RDX.i401
  %22015 = load i64, i64* %PC.i400
  %22016 = add i64 %22015, 4
  store i64 %22016, i64* %PC.i400
  %22017 = shl i64 %22014, 5
  %22018 = icmp slt i64 %22017, 0
  %22019 = shl i64 %22017, 1
  store i64 %22019, i64* %RDX.i401, align 8
  %22020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %22021 = zext i1 %22018 to i8
  store i8 %22021, i8* %22020, align 1
  %22022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22023 = trunc i64 %22019 to i32
  %22024 = and i32 %22023, 254
  %22025 = call i32 @llvm.ctpop.i32(i32 %22024)
  %22026 = trunc i32 %22025 to i8
  %22027 = and i8 %22026, 1
  %22028 = xor i8 %22027, 1
  store i8 %22028, i8* %22022, align 1
  %22029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22029, align 1
  %22030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22031 = icmp eq i64 %22019, 0
  %22032 = zext i1 %22031 to i8
  store i8 %22032, i8* %22030, align 1
  %22033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22034 = lshr i64 %22019, 63
  %22035 = trunc i64 %22034 to i8
  store i8 %22035, i8* %22033, align 1
  %22036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22036, align 1
  store %struct.Memory* %loadMem_4071e1, %struct.Memory** %MEMORY
  %loadMem_4071e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22038 = getelementptr inbounds %struct.GPR, %struct.GPR* %22037, i32 0, i32 33
  %22039 = getelementptr inbounds %struct.Reg, %struct.Reg* %22038, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %22039 to i64*
  %22040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22041 = getelementptr inbounds %struct.GPR, %struct.GPR* %22040, i32 0, i32 1
  %22042 = getelementptr inbounds %struct.Reg, %struct.Reg* %22041, i32 0, i32 0
  %RAX.i398 = bitcast %union.anon* %22042 to i64*
  %22043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22044 = getelementptr inbounds %struct.GPR, %struct.GPR* %22043, i32 0, i32 7
  %22045 = getelementptr inbounds %struct.Reg, %struct.Reg* %22044, i32 0, i32 0
  %RDX.i399 = bitcast %union.anon* %22045 to i64*
  %22046 = load i64, i64* %RAX.i398
  %22047 = load i64, i64* %RDX.i399
  %22048 = load i64, i64* %PC.i397
  %22049 = add i64 %22048, 3
  store i64 %22049, i64* %PC.i397
  %22050 = add i64 %22047, %22046
  store i64 %22050, i64* %RAX.i398, align 8
  %22051 = icmp ult i64 %22050, %22046
  %22052 = icmp ult i64 %22050, %22047
  %22053 = or i1 %22051, %22052
  %22054 = zext i1 %22053 to i8
  %22055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22054, i8* %22055, align 1
  %22056 = trunc i64 %22050 to i32
  %22057 = and i32 %22056, 255
  %22058 = call i32 @llvm.ctpop.i32(i32 %22057)
  %22059 = trunc i32 %22058 to i8
  %22060 = and i8 %22059, 1
  %22061 = xor i8 %22060, 1
  %22062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22061, i8* %22062, align 1
  %22063 = xor i64 %22047, %22046
  %22064 = xor i64 %22063, %22050
  %22065 = lshr i64 %22064, 4
  %22066 = trunc i64 %22065 to i8
  %22067 = and i8 %22066, 1
  %22068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22067, i8* %22068, align 1
  %22069 = icmp eq i64 %22050, 0
  %22070 = zext i1 %22069 to i8
  %22071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22070, i8* %22071, align 1
  %22072 = lshr i64 %22050, 63
  %22073 = trunc i64 %22072 to i8
  %22074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22073, i8* %22074, align 1
  %22075 = lshr i64 %22046, 63
  %22076 = lshr i64 %22047, 63
  %22077 = xor i64 %22072, %22075
  %22078 = xor i64 %22072, %22076
  %22079 = add i64 %22077, %22078
  %22080 = icmp eq i64 %22079, 2
  %22081 = zext i1 %22080 to i8
  %22082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22081, i8* %22082, align 1
  store %struct.Memory* %loadMem_4071e5, %struct.Memory** %MEMORY
  %loadMem_4071e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22084 = getelementptr inbounds %struct.GPR, %struct.GPR* %22083, i32 0, i32 33
  %22085 = getelementptr inbounds %struct.Reg, %struct.Reg* %22084, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %22085 to i64*
  %22086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22087 = getelementptr inbounds %struct.GPR, %struct.GPR* %22086, i32 0, i32 1
  %22088 = getelementptr inbounds %struct.Reg, %struct.Reg* %22087, i32 0, i32 0
  %RAX.i396 = bitcast %union.anon* %22088 to i64*
  %22089 = load i64, i64* %RAX.i396
  %22090 = load i64, i64* %PC.i395
  %22091 = add i64 %22090, 4
  store i64 %22091, i64* %PC.i395
  %22092 = add i64 32, %22089
  store i64 %22092, i64* %RAX.i396, align 8
  %22093 = icmp ult i64 %22092, %22089
  %22094 = icmp ult i64 %22092, 32
  %22095 = or i1 %22093, %22094
  %22096 = zext i1 %22095 to i8
  %22097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22096, i8* %22097, align 1
  %22098 = trunc i64 %22092 to i32
  %22099 = and i32 %22098, 255
  %22100 = call i32 @llvm.ctpop.i32(i32 %22099)
  %22101 = trunc i32 %22100 to i8
  %22102 = and i8 %22101, 1
  %22103 = xor i8 %22102, 1
  %22104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22103, i8* %22104, align 1
  %22105 = xor i64 32, %22089
  %22106 = xor i64 %22105, %22092
  %22107 = lshr i64 %22106, 4
  %22108 = trunc i64 %22107 to i8
  %22109 = and i8 %22108, 1
  %22110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22109, i8* %22110, align 1
  %22111 = icmp eq i64 %22092, 0
  %22112 = zext i1 %22111 to i8
  %22113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22112, i8* %22113, align 1
  %22114 = lshr i64 %22092, 63
  %22115 = trunc i64 %22114 to i8
  %22116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22115, i8* %22116, align 1
  %22117 = lshr i64 %22089, 63
  %22118 = xor i64 %22114, %22117
  %22119 = add i64 %22118, %22114
  %22120 = icmp eq i64 %22119, 2
  %22121 = zext i1 %22120 to i8
  %22122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22121, i8* %22122, align 1
  store %struct.Memory* %loadMem_4071e8, %struct.Memory** %MEMORY
  %loadMem_4071ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %22123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22124 = getelementptr inbounds %struct.GPR, %struct.GPR* %22123, i32 0, i32 33
  %22125 = getelementptr inbounds %struct.Reg, %struct.Reg* %22124, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %22125 to i64*
  %22126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22127 = getelementptr inbounds %struct.GPR, %struct.GPR* %22126, i32 0, i32 1
  %22128 = getelementptr inbounds %struct.Reg, %struct.Reg* %22127, i32 0, i32 0
  %RAX.i394 = bitcast %union.anon* %22128 to i64*
  %22129 = load i64, i64* %RAX.i394
  %22130 = load i64, i64* %PC.i393
  %22131 = add i64 %22130, 4
  store i64 %22131, i64* %PC.i393
  %22132 = ashr i64 %22129, 5
  %22133 = trunc i64 %22132 to i8
  %22134 = and i8 %22133, 1
  %22135 = ashr i64 %22132, 1
  store i64 %22135, i64* %RAX.i394, align 8
  %22136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22134, i8* %22136, align 1
  %22137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22138 = trunc i64 %22135 to i32
  %22139 = and i32 %22138, 255
  %22140 = call i32 @llvm.ctpop.i32(i32 %22139)
  %22141 = trunc i32 %22140 to i8
  %22142 = and i8 %22141, 1
  %22143 = xor i8 %22142, 1
  store i8 %22143, i8* %22137, align 1
  %22144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22144, align 1
  %22145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22146 = icmp eq i64 %22135, 0
  %22147 = zext i1 %22146 to i8
  store i8 %22147, i8* %22145, align 1
  %22148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22149 = lshr i64 %22135, 63
  %22150 = trunc i64 %22149 to i8
  store i8 %22150, i8* %22148, align 1
  %22151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22151, align 1
  store %struct.Memory* %loadMem_4071ec, %struct.Memory** %MEMORY
  %loadMem_4071f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22153 = getelementptr inbounds %struct.GPR, %struct.GPR* %22152, i32 0, i32 33
  %22154 = getelementptr inbounds %struct.Reg, %struct.Reg* %22153, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %22154 to i64*
  %22155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22156 = getelementptr inbounds %struct.GPR, %struct.GPR* %22155, i32 0, i32 1
  %22157 = getelementptr inbounds %struct.Reg, %struct.Reg* %22156, i32 0, i32 0
  %RAX.i391 = bitcast %union.anon* %22157 to i64*
  %22158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22159 = getelementptr inbounds %struct.GPR, %struct.GPR* %22158, i32 0, i32 15
  %22160 = getelementptr inbounds %struct.Reg, %struct.Reg* %22159, i32 0, i32 0
  %RBP.i392 = bitcast %union.anon* %22160 to i64*
  %22161 = load i64, i64* %RBP.i392
  %22162 = sub i64 %22161, 256
  %22163 = load i64, i64* %RAX.i391
  %22164 = load i64, i64* %PC.i390
  %22165 = add i64 %22164, 7
  store i64 %22165, i64* %PC.i390
  %22166 = inttoptr i64 %22162 to i64*
  store i64 %22163, i64* %22166
  store %struct.Memory* %loadMem_4071f0, %struct.Memory** %MEMORY
  br label %block_.L_4071f7

block_.L_4071f7:                                  ; preds = %block_.L_4071a0, %block_407190
  %loadMem_4071f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22168 = getelementptr inbounds %struct.GPR, %struct.GPR* %22167, i32 0, i32 33
  %22169 = getelementptr inbounds %struct.Reg, %struct.Reg* %22168, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %22169 to i64*
  %22170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22171 = getelementptr inbounds %struct.GPR, %struct.GPR* %22170, i32 0, i32 1
  %22172 = getelementptr inbounds %struct.Reg, %struct.Reg* %22171, i32 0, i32 0
  %RAX.i388 = bitcast %union.anon* %22172 to i64*
  %22173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22174 = getelementptr inbounds %struct.GPR, %struct.GPR* %22173, i32 0, i32 15
  %22175 = getelementptr inbounds %struct.Reg, %struct.Reg* %22174, i32 0, i32 0
  %RBP.i389 = bitcast %union.anon* %22175 to i64*
  %22176 = load i64, i64* %RBP.i389
  %22177 = sub i64 %22176, 256
  %22178 = load i64, i64* %PC.i387
  %22179 = add i64 %22178, 7
  store i64 %22179, i64* %PC.i387
  %22180 = inttoptr i64 %22177 to i64*
  %22181 = load i64, i64* %22180
  store i64 %22181, i64* %RAX.i388, align 8
  store %struct.Memory* %loadMem_4071f7, %struct.Memory** %MEMORY
  %loadMem_4071fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %22182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22183 = getelementptr inbounds %struct.GPR, %struct.GPR* %22182, i32 0, i32 33
  %22184 = getelementptr inbounds %struct.Reg, %struct.Reg* %22183, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %22184 to i64*
  %22185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22186 = getelementptr inbounds %struct.GPR, %struct.GPR* %22185, i32 0, i32 1
  %22187 = getelementptr inbounds %struct.Reg, %struct.Reg* %22186, i32 0, i32 0
  %RAX.i385 = bitcast %union.anon* %22187 to i64*
  %22188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22189 = getelementptr inbounds %struct.GPR, %struct.GPR* %22188, i32 0, i32 15
  %22190 = getelementptr inbounds %struct.Reg, %struct.Reg* %22189, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %22190 to i64*
  %22191 = load i64, i64* %RBP.i386
  %22192 = sub i64 %22191, 248
  %22193 = load i64, i64* %RAX.i385
  %22194 = load i64, i64* %PC.i384
  %22195 = add i64 %22194, 7
  store i64 %22195, i64* %PC.i384
  %22196 = inttoptr i64 %22192 to i64*
  store i64 %22193, i64* %22196
  store %struct.Memory* %loadMem_4071fe, %struct.Memory** %MEMORY
  br label %block_.L_407205

block_.L_407205:                                  ; preds = %block_.L_4071f7, %block_407118
  %loadMem_407205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22198 = getelementptr inbounds %struct.GPR, %struct.GPR* %22197, i32 0, i32 33
  %22199 = getelementptr inbounds %struct.Reg, %struct.Reg* %22198, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %22199 to i64*
  %22200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22201 = getelementptr inbounds %struct.GPR, %struct.GPR* %22200, i32 0, i32 1
  %22202 = getelementptr inbounds %struct.Reg, %struct.Reg* %22201, i32 0, i32 0
  %RAX.i382 = bitcast %union.anon* %22202 to i64*
  %22203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22204 = getelementptr inbounds %struct.GPR, %struct.GPR* %22203, i32 0, i32 15
  %22205 = getelementptr inbounds %struct.Reg, %struct.Reg* %22204, i32 0, i32 0
  %RBP.i383 = bitcast %union.anon* %22205 to i64*
  %22206 = load i64, i64* %RBP.i383
  %22207 = sub i64 %22206, 248
  %22208 = load i64, i64* %PC.i381
  %22209 = add i64 %22208, 7
  store i64 %22209, i64* %PC.i381
  %22210 = inttoptr i64 %22207 to i64*
  %22211 = load i64, i64* %22210
  store i64 %22211, i64* %RAX.i382, align 8
  store %struct.Memory* %loadMem_407205, %struct.Memory** %MEMORY
  %loadMem_40720c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22213 = getelementptr inbounds %struct.GPR, %struct.GPR* %22212, i32 0, i32 33
  %22214 = getelementptr inbounds %struct.Reg, %struct.Reg* %22213, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %22214 to i64*
  %22215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22216 = getelementptr inbounds %struct.GPR, %struct.GPR* %22215, i32 0, i32 1
  %22217 = getelementptr inbounds %struct.Reg, %struct.Reg* %22216, i32 0, i32 0
  %EAX.i379 = bitcast %union.anon* %22217 to i32*
  %22218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22219 = getelementptr inbounds %struct.GPR, %struct.GPR* %22218, i32 0, i32 5
  %22220 = getelementptr inbounds %struct.Reg, %struct.Reg* %22219, i32 0, i32 0
  %RCX.i380 = bitcast %union.anon* %22220 to i64*
  %22221 = load i32, i32* %EAX.i379
  %22222 = zext i32 %22221 to i64
  %22223 = load i64, i64* %PC.i378
  %22224 = add i64 %22223, 2
  store i64 %22224, i64* %PC.i378
  %22225 = and i64 %22222, 4294967295
  store i64 %22225, i64* %RCX.i380, align 8
  store %struct.Memory* %loadMem_40720c, %struct.Memory** %MEMORY
  %loadMem_40720e = load %struct.Memory*, %struct.Memory** %MEMORY
  %22226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22227 = getelementptr inbounds %struct.GPR, %struct.GPR* %22226, i32 0, i32 33
  %22228 = getelementptr inbounds %struct.Reg, %struct.Reg* %22227, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %22228 to i64*
  %22229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22230 = getelementptr inbounds %struct.GPR, %struct.GPR* %22229, i32 0, i32 1
  %22231 = getelementptr inbounds %struct.Reg, %struct.Reg* %22230, i32 0, i32 0
  %RAX.i377 = bitcast %union.anon* %22231 to i64*
  %22232 = load i64, i64* %PC.i376
  %22233 = add i64 %22232, 8
  store i64 %22233, i64* %PC.i376
  %22234 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22234, i64* %RAX.i377, align 8
  store %struct.Memory* %loadMem_40720e, %struct.Memory** %MEMORY
  %loadMem_407216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22236 = getelementptr inbounds %struct.GPR, %struct.GPR* %22235, i32 0, i32 33
  %22237 = getelementptr inbounds %struct.Reg, %struct.Reg* %22236, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %22237 to i64*
  %22238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22239 = getelementptr inbounds %struct.GPR, %struct.GPR* %22238, i32 0, i32 1
  %22240 = getelementptr inbounds %struct.Reg, %struct.Reg* %22239, i32 0, i32 0
  %RAX.i375 = bitcast %union.anon* %22240 to i64*
  %22241 = load i64, i64* %RAX.i375
  %22242 = load i64, i64* %PC.i374
  %22243 = add i64 %22242, 6
  store i64 %22243, i64* %PC.i374
  %22244 = add i64 13112, %22241
  store i64 %22244, i64* %RAX.i375, align 8
  %22245 = icmp ult i64 %22244, %22241
  %22246 = icmp ult i64 %22244, 13112
  %22247 = or i1 %22245, %22246
  %22248 = zext i1 %22247 to i8
  %22249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22248, i8* %22249, align 1
  %22250 = trunc i64 %22244 to i32
  %22251 = and i32 %22250, 255
  %22252 = call i32 @llvm.ctpop.i32(i32 %22251)
  %22253 = trunc i32 %22252 to i8
  %22254 = and i8 %22253, 1
  %22255 = xor i8 %22254, 1
  %22256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22255, i8* %22256, align 1
  %22257 = xor i64 13112, %22241
  %22258 = xor i64 %22257, %22244
  %22259 = lshr i64 %22258, 4
  %22260 = trunc i64 %22259 to i8
  %22261 = and i8 %22260, 1
  %22262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22261, i8* %22262, align 1
  %22263 = icmp eq i64 %22244, 0
  %22264 = zext i1 %22263 to i8
  %22265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22264, i8* %22265, align 1
  %22266 = lshr i64 %22244, 63
  %22267 = trunc i64 %22266 to i8
  %22268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22267, i8* %22268, align 1
  %22269 = lshr i64 %22241, 63
  %22270 = xor i64 %22266, %22269
  %22271 = add i64 %22270, %22266
  %22272 = icmp eq i64 %22271, 2
  %22273 = zext i1 %22272 to i8
  %22274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22273, i8* %22274, align 1
  store %struct.Memory* %loadMem_407216, %struct.Memory** %MEMORY
  %loadMem_40721c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22276 = getelementptr inbounds %struct.GPR, %struct.GPR* %22275, i32 0, i32 33
  %22277 = getelementptr inbounds %struct.Reg, %struct.Reg* %22276, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %22277 to i64*
  %22278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22279 = getelementptr inbounds %struct.GPR, %struct.GPR* %22278, i32 0, i32 7
  %22280 = getelementptr inbounds %struct.Reg, %struct.Reg* %22279, i32 0, i32 0
  %RDX.i372 = bitcast %union.anon* %22280 to i64*
  %22281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22282 = getelementptr inbounds %struct.GPR, %struct.GPR* %22281, i32 0, i32 15
  %22283 = getelementptr inbounds %struct.Reg, %struct.Reg* %22282, i32 0, i32 0
  %RBP.i373 = bitcast %union.anon* %22283 to i64*
  %22284 = load i64, i64* %RBP.i373
  %22285 = sub i64 %22284, 24
  %22286 = load i64, i64* %PC.i371
  %22287 = add i64 %22286, 4
  store i64 %22287, i64* %PC.i371
  %22288 = inttoptr i64 %22285 to i32*
  %22289 = load i32, i32* %22288
  %22290 = sext i32 %22289 to i64
  store i64 %22290, i64* %RDX.i372, align 8
  store %struct.Memory* %loadMem_40721c, %struct.Memory** %MEMORY
  %loadMem_407220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22292 = getelementptr inbounds %struct.GPR, %struct.GPR* %22291, i32 0, i32 33
  %22293 = getelementptr inbounds %struct.Reg, %struct.Reg* %22292, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %22293 to i64*
  %22294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22295 = getelementptr inbounds %struct.GPR, %struct.GPR* %22294, i32 0, i32 7
  %22296 = getelementptr inbounds %struct.Reg, %struct.Reg* %22295, i32 0, i32 0
  %RDX.i370 = bitcast %union.anon* %22296 to i64*
  %22297 = load i64, i64* %RDX.i370
  %22298 = load i64, i64* %PC.i369
  %22299 = add i64 %22298, 4
  store i64 %22299, i64* %PC.i369
  %22300 = shl i64 %22297, 5
  %22301 = icmp slt i64 %22300, 0
  %22302 = shl i64 %22300, 1
  store i64 %22302, i64* %RDX.i370, align 8
  %22303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %22304 = zext i1 %22301 to i8
  store i8 %22304, i8* %22303, align 1
  %22305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22306 = trunc i64 %22302 to i32
  %22307 = and i32 %22306, 254
  %22308 = call i32 @llvm.ctpop.i32(i32 %22307)
  %22309 = trunc i32 %22308 to i8
  %22310 = and i8 %22309, 1
  %22311 = xor i8 %22310, 1
  store i8 %22311, i8* %22305, align 1
  %22312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22312, align 1
  %22313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22314 = icmp eq i64 %22302, 0
  %22315 = zext i1 %22314 to i8
  store i8 %22315, i8* %22313, align 1
  %22316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22317 = lshr i64 %22302, 63
  %22318 = trunc i64 %22317 to i8
  store i8 %22318, i8* %22316, align 1
  %22319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22319, align 1
  store %struct.Memory* %loadMem_407220, %struct.Memory** %MEMORY
  %loadMem_407224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22321 = getelementptr inbounds %struct.GPR, %struct.GPR* %22320, i32 0, i32 33
  %22322 = getelementptr inbounds %struct.Reg, %struct.Reg* %22321, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %22322 to i64*
  %22323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22324 = getelementptr inbounds %struct.GPR, %struct.GPR* %22323, i32 0, i32 1
  %22325 = getelementptr inbounds %struct.Reg, %struct.Reg* %22324, i32 0, i32 0
  %RAX.i367 = bitcast %union.anon* %22325 to i64*
  %22326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22327 = getelementptr inbounds %struct.GPR, %struct.GPR* %22326, i32 0, i32 7
  %22328 = getelementptr inbounds %struct.Reg, %struct.Reg* %22327, i32 0, i32 0
  %RDX.i368 = bitcast %union.anon* %22328 to i64*
  %22329 = load i64, i64* %RAX.i367
  %22330 = load i64, i64* %RDX.i368
  %22331 = load i64, i64* %PC.i366
  %22332 = add i64 %22331, 3
  store i64 %22332, i64* %PC.i366
  %22333 = add i64 %22330, %22329
  store i64 %22333, i64* %RAX.i367, align 8
  %22334 = icmp ult i64 %22333, %22329
  %22335 = icmp ult i64 %22333, %22330
  %22336 = or i1 %22334, %22335
  %22337 = zext i1 %22336 to i8
  %22338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22337, i8* %22338, align 1
  %22339 = trunc i64 %22333 to i32
  %22340 = and i32 %22339, 255
  %22341 = call i32 @llvm.ctpop.i32(i32 %22340)
  %22342 = trunc i32 %22341 to i8
  %22343 = and i8 %22342, 1
  %22344 = xor i8 %22343, 1
  %22345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22344, i8* %22345, align 1
  %22346 = xor i64 %22330, %22329
  %22347 = xor i64 %22346, %22333
  %22348 = lshr i64 %22347, 4
  %22349 = trunc i64 %22348 to i8
  %22350 = and i8 %22349, 1
  %22351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22350, i8* %22351, align 1
  %22352 = icmp eq i64 %22333, 0
  %22353 = zext i1 %22352 to i8
  %22354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22353, i8* %22354, align 1
  %22355 = lshr i64 %22333, 63
  %22356 = trunc i64 %22355 to i8
  %22357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22356, i8* %22357, align 1
  %22358 = lshr i64 %22329, 63
  %22359 = lshr i64 %22330, 63
  %22360 = xor i64 %22355, %22358
  %22361 = xor i64 %22355, %22359
  %22362 = add i64 %22360, %22361
  %22363 = icmp eq i64 %22362, 2
  %22364 = zext i1 %22363 to i8
  %22365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22364, i8* %22365, align 1
  store %struct.Memory* %loadMem_407224, %struct.Memory** %MEMORY
  %loadMem_407227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22367 = getelementptr inbounds %struct.GPR, %struct.GPR* %22366, i32 0, i32 33
  %22368 = getelementptr inbounds %struct.Reg, %struct.Reg* %22367, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %22368 to i64*
  %22369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22370 = getelementptr inbounds %struct.GPR, %struct.GPR* %22369, i32 0, i32 7
  %22371 = getelementptr inbounds %struct.Reg, %struct.Reg* %22370, i32 0, i32 0
  %RDX.i364 = bitcast %union.anon* %22371 to i64*
  %22372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22373 = getelementptr inbounds %struct.GPR, %struct.GPR* %22372, i32 0, i32 15
  %22374 = getelementptr inbounds %struct.Reg, %struct.Reg* %22373, i32 0, i32 0
  %RBP.i365 = bitcast %union.anon* %22374 to i64*
  %22375 = load i64, i64* %RBP.i365
  %22376 = sub i64 %22375, 36
  %22377 = load i64, i64* %PC.i363
  %22378 = add i64 %22377, 4
  store i64 %22378, i64* %PC.i363
  %22379 = inttoptr i64 %22376 to i32*
  %22380 = load i32, i32* %22379
  %22381 = sext i32 %22380 to i64
  store i64 %22381, i64* %RDX.i364, align 8
  store %struct.Memory* %loadMem_407227, %struct.Memory** %MEMORY
  %loadMem_40722b = load %struct.Memory*, %struct.Memory** %MEMORY
  %22382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22383 = getelementptr inbounds %struct.GPR, %struct.GPR* %22382, i32 0, i32 33
  %22384 = getelementptr inbounds %struct.Reg, %struct.Reg* %22383, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %22384 to i64*
  %22385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22386 = getelementptr inbounds %struct.GPR, %struct.GPR* %22385, i32 0, i32 5
  %22387 = getelementptr inbounds %struct.Reg, %struct.Reg* %22386, i32 0, i32 0
  %ECX.i360 = bitcast %union.anon* %22387 to i32*
  %22388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22389 = getelementptr inbounds %struct.GPR, %struct.GPR* %22388, i32 0, i32 1
  %22390 = getelementptr inbounds %struct.Reg, %struct.Reg* %22389, i32 0, i32 0
  %RAX.i361 = bitcast %union.anon* %22390 to i64*
  %22391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22392 = getelementptr inbounds %struct.GPR, %struct.GPR* %22391, i32 0, i32 7
  %22393 = getelementptr inbounds %struct.Reg, %struct.Reg* %22392, i32 0, i32 0
  %RDX.i362 = bitcast %union.anon* %22393 to i64*
  %22394 = load i64, i64* %RAX.i361
  %22395 = load i64, i64* %RDX.i362
  %22396 = mul i64 %22395, 4
  %22397 = add i64 %22396, %22394
  %22398 = load i32, i32* %ECX.i360
  %22399 = zext i32 %22398 to i64
  %22400 = load i64, i64* %PC.i359
  %22401 = add i64 %22400, 3
  store i64 %22401, i64* %PC.i359
  %22402 = inttoptr i64 %22397 to i32*
  store i32 %22398, i32* %22402
  store %struct.Memory* %loadMem_40722b, %struct.Memory** %MEMORY
  %loadMem_40722e = load %struct.Memory*, %struct.Memory** %MEMORY
  %22403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22404 = getelementptr inbounds %struct.GPR, %struct.GPR* %22403, i32 0, i32 33
  %22405 = getelementptr inbounds %struct.Reg, %struct.Reg* %22404, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %22405 to i64*
  %22406 = load i64, i64* %PC.i358
  %22407 = add i64 %22406, 232
  %22408 = load i64, i64* %PC.i358
  %22409 = add i64 %22408, 5
  store i64 %22409, i64* %PC.i358
  %22410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %22407, i64* %22410, align 8
  store %struct.Memory* %loadMem_40722e, %struct.Memory** %MEMORY
  br label %block_.L_407316

block_.L_407233:                                  ; preds = %block_406dfe
  %loadMem_407233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22412 = getelementptr inbounds %struct.GPR, %struct.GPR* %22411, i32 0, i32 33
  %22413 = getelementptr inbounds %struct.Reg, %struct.Reg* %22412, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %22413 to i64*
  %22414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22415 = getelementptr inbounds %struct.GPR, %struct.GPR* %22414, i32 0, i32 15
  %22416 = getelementptr inbounds %struct.Reg, %struct.Reg* %22415, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %22416 to i64*
  %22417 = load i64, i64* %RBP.i357
  %22418 = sub i64 %22417, 156
  %22419 = load i64, i64* %PC.i356
  %22420 = add i64 %22419, 7
  store i64 %22420, i64* %PC.i356
  %22421 = inttoptr i64 %22418 to i32*
  %22422 = load i32, i32* %22421
  %22423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %22423, align 1
  %22424 = and i32 %22422, 255
  %22425 = call i32 @llvm.ctpop.i32(i32 %22424)
  %22426 = trunc i32 %22425 to i8
  %22427 = and i8 %22426, 1
  %22428 = xor i8 %22427, 1
  %22429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22428, i8* %22429, align 1
  %22430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22430, align 1
  %22431 = icmp eq i32 %22422, 0
  %22432 = zext i1 %22431 to i8
  %22433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22432, i8* %22433, align 1
  %22434 = lshr i32 %22422, 31
  %22435 = trunc i32 %22434 to i8
  %22436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22435, i8* %22436, align 1
  %22437 = lshr i32 %22422, 31
  %22438 = xor i32 %22434, %22437
  %22439 = add i32 %22438, %22437
  %22440 = icmp eq i32 %22439, 2
  %22441 = zext i1 %22440 to i8
  %22442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22441, i8* %22442, align 1
  store %struct.Memory* %loadMem_407233, %struct.Memory** %MEMORY
  %loadMem_40723a = load %struct.Memory*, %struct.Memory** %MEMORY
  %22443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22444 = getelementptr inbounds %struct.GPR, %struct.GPR* %22443, i32 0, i32 33
  %22445 = getelementptr inbounds %struct.Reg, %struct.Reg* %22444, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %22445 to i64*
  %22446 = load i64, i64* %PC.i355
  %22447 = add i64 %22446, 107
  %22448 = load i64, i64* %PC.i355
  %22449 = add i64 %22448, 6
  %22450 = load i64, i64* %PC.i355
  %22451 = add i64 %22450, 6
  store i64 %22451, i64* %PC.i355
  %22452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22453 = load i8, i8* %22452, align 1
  store i8 %22453, i8* %BRANCH_TAKEN, align 1
  %22454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22455 = icmp ne i8 %22453, 0
  %22456 = select i1 %22455, i64 %22447, i64 %22449
  store i64 %22456, i64* %22454, align 8
  store %struct.Memory* %loadMem_40723a, %struct.Memory** %MEMORY
  %loadBr_40723a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40723a = icmp eq i8 %loadBr_40723a, 1
  br i1 %cmpBr_40723a, label %block_.L_4072a5, label %block_407240

block_407240:                                     ; preds = %block_.L_407233
  %loadMem_407240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22458 = getelementptr inbounds %struct.GPR, %struct.GPR* %22457, i32 0, i32 33
  %22459 = getelementptr inbounds %struct.Reg, %struct.Reg* %22458, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %22459 to i64*
  %22460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22461 = getelementptr inbounds %struct.GPR, %struct.GPR* %22460, i32 0, i32 1
  %22462 = getelementptr inbounds %struct.Reg, %struct.Reg* %22461, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %22462 to i64*
  %22463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22464 = getelementptr inbounds %struct.GPR, %struct.GPR* %22463, i32 0, i32 15
  %22465 = getelementptr inbounds %struct.Reg, %struct.Reg* %22464, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %22465 to i64*
  %22466 = load i64, i64* %RBP.i354
  %22467 = sub i64 %22466, 28
  %22468 = load i64, i64* %PC.i352
  %22469 = add i64 %22468, 4
  store i64 %22469, i64* %PC.i352
  %22470 = inttoptr i64 %22467 to i32*
  %22471 = load i32, i32* %22470
  %22472 = sext i32 %22471 to i64
  store i64 %22472, i64* %RAX.i353, align 8
  store %struct.Memory* %loadMem_407240, %struct.Memory** %MEMORY
  %loadMem_407244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22474 = getelementptr inbounds %struct.GPR, %struct.GPR* %22473, i32 0, i32 33
  %22475 = getelementptr inbounds %struct.Reg, %struct.Reg* %22474, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %22475 to i64*
  %22476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22477 = getelementptr inbounds %struct.GPR, %struct.GPR* %22476, i32 0, i32 1
  %22478 = getelementptr inbounds %struct.Reg, %struct.Reg* %22477, i32 0, i32 0
  %RAX.i349 = bitcast %union.anon* %22478 to i64*
  %22479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22480 = getelementptr inbounds %struct.GPR, %struct.GPR* %22479, i32 0, i32 5
  %22481 = getelementptr inbounds %struct.Reg, %struct.Reg* %22480, i32 0, i32 0
  %RCX.i350 = bitcast %union.anon* %22481 to i64*
  %22482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22483 = getelementptr inbounds %struct.GPR, %struct.GPR* %22482, i32 0, i32 15
  %22484 = getelementptr inbounds %struct.Reg, %struct.Reg* %22483, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %22484 to i64*
  %22485 = load i64, i64* %RBP.i351
  %22486 = load i64, i64* %RAX.i349
  %22487 = mul i64 %22486, 4
  %22488 = add i64 %22485, -80
  %22489 = add i64 %22488, %22487
  %22490 = load i64, i64* %PC.i348
  %22491 = add i64 %22490, 4
  store i64 %22491, i64* %PC.i348
  %22492 = inttoptr i64 %22489 to i32*
  %22493 = load i32, i32* %22492
  %22494 = zext i32 %22493 to i64
  store i64 %22494, i64* %RCX.i350, align 8
  store %struct.Memory* %loadMem_407244, %struct.Memory** %MEMORY
  %loadMem_407248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22496 = getelementptr inbounds %struct.GPR, %struct.GPR* %22495, i32 0, i32 33
  %22497 = getelementptr inbounds %struct.Reg, %struct.Reg* %22496, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %22497 to i64*
  %22498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22499 = getelementptr inbounds %struct.GPR, %struct.GPR* %22498, i32 0, i32 1
  %22500 = getelementptr inbounds %struct.Reg, %struct.Reg* %22499, i32 0, i32 0
  %RAX.i346 = bitcast %union.anon* %22500 to i64*
  %22501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22502 = getelementptr inbounds %struct.GPR, %struct.GPR* %22501, i32 0, i32 15
  %22503 = getelementptr inbounds %struct.Reg, %struct.Reg* %22502, i32 0, i32 0
  %RBP.i347 = bitcast %union.anon* %22503 to i64*
  %22504 = load i64, i64* %RBP.i347
  %22505 = sub i64 %22504, 36
  %22506 = load i64, i64* %PC.i345
  %22507 = add i64 %22506, 4
  store i64 %22507, i64* %PC.i345
  %22508 = inttoptr i64 %22505 to i32*
  %22509 = load i32, i32* %22508
  %22510 = sext i32 %22509 to i64
  store i64 %22510, i64* %RAX.i346, align 8
  store %struct.Memory* %loadMem_407248, %struct.Memory** %MEMORY
  %loadMem_40724c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22512 = getelementptr inbounds %struct.GPR, %struct.GPR* %22511, i32 0, i32 33
  %22513 = getelementptr inbounds %struct.Reg, %struct.Reg* %22512, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %22513 to i64*
  %22514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22515 = getelementptr inbounds %struct.GPR, %struct.GPR* %22514, i32 0, i32 1
  %22516 = getelementptr inbounds %struct.Reg, %struct.Reg* %22515, i32 0, i32 0
  %RAX.i342 = bitcast %union.anon* %22516 to i64*
  %22517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22518 = getelementptr inbounds %struct.GPR, %struct.GPR* %22517, i32 0, i32 5
  %22519 = getelementptr inbounds %struct.Reg, %struct.Reg* %22518, i32 0, i32 0
  %RCX.i343 = bitcast %union.anon* %22519 to i64*
  %22520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22521 = getelementptr inbounds %struct.GPR, %struct.GPR* %22520, i32 0, i32 15
  %22522 = getelementptr inbounds %struct.Reg, %struct.Reg* %22521, i32 0, i32 0
  %RBP.i344 = bitcast %union.anon* %22522 to i64*
  %22523 = load i64, i64* %RCX.i343
  %22524 = load i64, i64* %RBP.i344
  %22525 = load i64, i64* %RAX.i342
  %22526 = mul i64 %22525, 4
  %22527 = add i64 %22524, -80
  %22528 = add i64 %22527, %22526
  %22529 = load i64, i64* %PC.i341
  %22530 = add i64 %22529, 4
  store i64 %22530, i64* %PC.i341
  %22531 = trunc i64 %22523 to i32
  %22532 = inttoptr i64 %22528 to i32*
  %22533 = load i32, i32* %22532
  %22534 = add i32 %22533, %22531
  %22535 = zext i32 %22534 to i64
  store i64 %22535, i64* %RCX.i343, align 8
  %22536 = icmp ult i32 %22534, %22531
  %22537 = icmp ult i32 %22534, %22533
  %22538 = or i1 %22536, %22537
  %22539 = zext i1 %22538 to i8
  %22540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22539, i8* %22540, align 1
  %22541 = and i32 %22534, 255
  %22542 = call i32 @llvm.ctpop.i32(i32 %22541)
  %22543 = trunc i32 %22542 to i8
  %22544 = and i8 %22543, 1
  %22545 = xor i8 %22544, 1
  %22546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22545, i8* %22546, align 1
  %22547 = xor i32 %22533, %22531
  %22548 = xor i32 %22547, %22534
  %22549 = lshr i32 %22548, 4
  %22550 = trunc i32 %22549 to i8
  %22551 = and i8 %22550, 1
  %22552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22551, i8* %22552, align 1
  %22553 = icmp eq i32 %22534, 0
  %22554 = zext i1 %22553 to i8
  %22555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22554, i8* %22555, align 1
  %22556 = lshr i32 %22534, 31
  %22557 = trunc i32 %22556 to i8
  %22558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22557, i8* %22558, align 1
  %22559 = lshr i32 %22531, 31
  %22560 = lshr i32 %22533, 31
  %22561 = xor i32 %22556, %22559
  %22562 = xor i32 %22556, %22560
  %22563 = add i32 %22561, %22562
  %22564 = icmp eq i32 %22563, 2
  %22565 = zext i1 %22564 to i8
  %22566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22565, i8* %22566, align 1
  store %struct.Memory* %loadMem_40724c, %struct.Memory** %MEMORY
  %loadMem_407250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22568 = getelementptr inbounds %struct.GPR, %struct.GPR* %22567, i32 0, i32 33
  %22569 = getelementptr inbounds %struct.Reg, %struct.Reg* %22568, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %22569 to i64*
  %22570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22571 = getelementptr inbounds %struct.GPR, %struct.GPR* %22570, i32 0, i32 1
  %22572 = getelementptr inbounds %struct.Reg, %struct.Reg* %22571, i32 0, i32 0
  %RAX.i340 = bitcast %union.anon* %22572 to i64*
  %22573 = load i64, i64* %PC.i339
  %22574 = add i64 %22573, 8
  store i64 %22574, i64* %PC.i339
  %22575 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22575, i64* %RAX.i340, align 8
  store %struct.Memory* %loadMem_407250, %struct.Memory** %MEMORY
  %loadMem_407258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22577 = getelementptr inbounds %struct.GPR, %struct.GPR* %22576, i32 0, i32 33
  %22578 = getelementptr inbounds %struct.Reg, %struct.Reg* %22577, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %22578 to i64*
  %22579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22580 = getelementptr inbounds %struct.GPR, %struct.GPR* %22579, i32 0, i32 1
  %22581 = getelementptr inbounds %struct.Reg, %struct.Reg* %22580, i32 0, i32 0
  %RAX.i338 = bitcast %union.anon* %22581 to i64*
  %22582 = load i64, i64* %RAX.i338
  %22583 = load i64, i64* %PC.i337
  %22584 = add i64 %22583, 6
  store i64 %22584, i64* %PC.i337
  %22585 = add i64 13112, %22582
  store i64 %22585, i64* %RAX.i338, align 8
  %22586 = icmp ult i64 %22585, %22582
  %22587 = icmp ult i64 %22585, 13112
  %22588 = or i1 %22586, %22587
  %22589 = zext i1 %22588 to i8
  %22590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22589, i8* %22590, align 1
  %22591 = trunc i64 %22585 to i32
  %22592 = and i32 %22591, 255
  %22593 = call i32 @llvm.ctpop.i32(i32 %22592)
  %22594 = trunc i32 %22593 to i8
  %22595 = and i8 %22594, 1
  %22596 = xor i8 %22595, 1
  %22597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22596, i8* %22597, align 1
  %22598 = xor i64 13112, %22582
  %22599 = xor i64 %22598, %22585
  %22600 = lshr i64 %22599, 4
  %22601 = trunc i64 %22600 to i8
  %22602 = and i8 %22601, 1
  %22603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22602, i8* %22603, align 1
  %22604 = icmp eq i64 %22585, 0
  %22605 = zext i1 %22604 to i8
  %22606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22605, i8* %22606, align 1
  %22607 = lshr i64 %22585, 63
  %22608 = trunc i64 %22607 to i8
  %22609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22608, i8* %22609, align 1
  %22610 = lshr i64 %22582, 63
  %22611 = xor i64 %22607, %22610
  %22612 = add i64 %22611, %22607
  %22613 = icmp eq i64 %22612, 2
  %22614 = zext i1 %22613 to i8
  %22615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22614, i8* %22615, align 1
  store %struct.Memory* %loadMem_407258, %struct.Memory** %MEMORY
  %loadMem_40725e = load %struct.Memory*, %struct.Memory** %MEMORY
  %22616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22617 = getelementptr inbounds %struct.GPR, %struct.GPR* %22616, i32 0, i32 33
  %22618 = getelementptr inbounds %struct.Reg, %struct.Reg* %22617, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %22618 to i64*
  %22619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22620 = getelementptr inbounds %struct.GPR, %struct.GPR* %22619, i32 0, i32 7
  %22621 = getelementptr inbounds %struct.Reg, %struct.Reg* %22620, i32 0, i32 0
  %RDX.i335 = bitcast %union.anon* %22621 to i64*
  %22622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22623 = getelementptr inbounds %struct.GPR, %struct.GPR* %22622, i32 0, i32 15
  %22624 = getelementptr inbounds %struct.Reg, %struct.Reg* %22623, i32 0, i32 0
  %RBP.i336 = bitcast %union.anon* %22624 to i64*
  %22625 = load i64, i64* %RBP.i336
  %22626 = sub i64 %22625, 24
  %22627 = load i64, i64* %PC.i334
  %22628 = add i64 %22627, 4
  store i64 %22628, i64* %PC.i334
  %22629 = inttoptr i64 %22626 to i32*
  %22630 = load i32, i32* %22629
  %22631 = sext i32 %22630 to i64
  store i64 %22631, i64* %RDX.i335, align 8
  store %struct.Memory* %loadMem_40725e, %struct.Memory** %MEMORY
  %loadMem_407262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22633 = getelementptr inbounds %struct.GPR, %struct.GPR* %22632, i32 0, i32 33
  %22634 = getelementptr inbounds %struct.Reg, %struct.Reg* %22633, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %22634 to i64*
  %22635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22636 = getelementptr inbounds %struct.GPR, %struct.GPR* %22635, i32 0, i32 7
  %22637 = getelementptr inbounds %struct.Reg, %struct.Reg* %22636, i32 0, i32 0
  %RDX.i333 = bitcast %union.anon* %22637 to i64*
  %22638 = load i64, i64* %RDX.i333
  %22639 = load i64, i64* %PC.i332
  %22640 = add i64 %22639, 4
  store i64 %22640, i64* %PC.i332
  %22641 = shl i64 %22638, 5
  %22642 = icmp slt i64 %22641, 0
  %22643 = shl i64 %22641, 1
  store i64 %22643, i64* %RDX.i333, align 8
  %22644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %22645 = zext i1 %22642 to i8
  store i8 %22645, i8* %22644, align 1
  %22646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22647 = trunc i64 %22643 to i32
  %22648 = and i32 %22647, 254
  %22649 = call i32 @llvm.ctpop.i32(i32 %22648)
  %22650 = trunc i32 %22649 to i8
  %22651 = and i8 %22650, 1
  %22652 = xor i8 %22651, 1
  store i8 %22652, i8* %22646, align 1
  %22653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22653, align 1
  %22654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22655 = icmp eq i64 %22643, 0
  %22656 = zext i1 %22655 to i8
  store i8 %22656, i8* %22654, align 1
  %22657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22658 = lshr i64 %22643, 63
  %22659 = trunc i64 %22658 to i8
  store i8 %22659, i8* %22657, align 1
  %22660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22660, align 1
  store %struct.Memory* %loadMem_407262, %struct.Memory** %MEMORY
  %loadMem_407266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22662 = getelementptr inbounds %struct.GPR, %struct.GPR* %22661, i32 0, i32 33
  %22663 = getelementptr inbounds %struct.Reg, %struct.Reg* %22662, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %22663 to i64*
  %22664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22665 = getelementptr inbounds %struct.GPR, %struct.GPR* %22664, i32 0, i32 1
  %22666 = getelementptr inbounds %struct.Reg, %struct.Reg* %22665, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %22666 to i64*
  %22667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22668 = getelementptr inbounds %struct.GPR, %struct.GPR* %22667, i32 0, i32 7
  %22669 = getelementptr inbounds %struct.Reg, %struct.Reg* %22668, i32 0, i32 0
  %RDX.i331 = bitcast %union.anon* %22669 to i64*
  %22670 = load i64, i64* %RAX.i330
  %22671 = load i64, i64* %RDX.i331
  %22672 = load i64, i64* %PC.i329
  %22673 = add i64 %22672, 3
  store i64 %22673, i64* %PC.i329
  %22674 = add i64 %22671, %22670
  store i64 %22674, i64* %RAX.i330, align 8
  %22675 = icmp ult i64 %22674, %22670
  %22676 = icmp ult i64 %22674, %22671
  %22677 = or i1 %22675, %22676
  %22678 = zext i1 %22677 to i8
  %22679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22678, i8* %22679, align 1
  %22680 = trunc i64 %22674 to i32
  %22681 = and i32 %22680, 255
  %22682 = call i32 @llvm.ctpop.i32(i32 %22681)
  %22683 = trunc i32 %22682 to i8
  %22684 = and i8 %22683, 1
  %22685 = xor i8 %22684, 1
  %22686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22685, i8* %22686, align 1
  %22687 = xor i64 %22671, %22670
  %22688 = xor i64 %22687, %22674
  %22689 = lshr i64 %22688, 4
  %22690 = trunc i64 %22689 to i8
  %22691 = and i8 %22690, 1
  %22692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22691, i8* %22692, align 1
  %22693 = icmp eq i64 %22674, 0
  %22694 = zext i1 %22693 to i8
  %22695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22694, i8* %22695, align 1
  %22696 = lshr i64 %22674, 63
  %22697 = trunc i64 %22696 to i8
  %22698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22697, i8* %22698, align 1
  %22699 = lshr i64 %22670, 63
  %22700 = lshr i64 %22671, 63
  %22701 = xor i64 %22696, %22699
  %22702 = xor i64 %22696, %22700
  %22703 = add i64 %22701, %22702
  %22704 = icmp eq i64 %22703, 2
  %22705 = zext i1 %22704 to i8
  %22706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22705, i8* %22706, align 1
  store %struct.Memory* %loadMem_407266, %struct.Memory** %MEMORY
  %loadMem_407269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22708 = getelementptr inbounds %struct.GPR, %struct.GPR* %22707, i32 0, i32 33
  %22709 = getelementptr inbounds %struct.Reg, %struct.Reg* %22708, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %22709 to i64*
  %22710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22711 = getelementptr inbounds %struct.GPR, %struct.GPR* %22710, i32 0, i32 7
  %22712 = getelementptr inbounds %struct.Reg, %struct.Reg* %22711, i32 0, i32 0
  %RDX.i327 = bitcast %union.anon* %22712 to i64*
  %22713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22714 = getelementptr inbounds %struct.GPR, %struct.GPR* %22713, i32 0, i32 15
  %22715 = getelementptr inbounds %struct.Reg, %struct.Reg* %22714, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %22715 to i64*
  %22716 = load i64, i64* %RBP.i328
  %22717 = sub i64 %22716, 28
  %22718 = load i64, i64* %PC.i326
  %22719 = add i64 %22718, 4
  store i64 %22719, i64* %PC.i326
  %22720 = inttoptr i64 %22717 to i32*
  %22721 = load i32, i32* %22720
  %22722 = sext i32 %22721 to i64
  store i64 %22722, i64* %RDX.i327, align 8
  store %struct.Memory* %loadMem_407269, %struct.Memory** %MEMORY
  %loadMem_40726d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22724 = getelementptr inbounds %struct.GPR, %struct.GPR* %22723, i32 0, i32 33
  %22725 = getelementptr inbounds %struct.Reg, %struct.Reg* %22724, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %22725 to i64*
  %22726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22727 = getelementptr inbounds %struct.GPR, %struct.GPR* %22726, i32 0, i32 5
  %22728 = getelementptr inbounds %struct.Reg, %struct.Reg* %22727, i32 0, i32 0
  %ECX.i323 = bitcast %union.anon* %22728 to i32*
  %22729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22730 = getelementptr inbounds %struct.GPR, %struct.GPR* %22729, i32 0, i32 1
  %22731 = getelementptr inbounds %struct.Reg, %struct.Reg* %22730, i32 0, i32 0
  %RAX.i324 = bitcast %union.anon* %22731 to i64*
  %22732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22733 = getelementptr inbounds %struct.GPR, %struct.GPR* %22732, i32 0, i32 7
  %22734 = getelementptr inbounds %struct.Reg, %struct.Reg* %22733, i32 0, i32 0
  %RDX.i325 = bitcast %union.anon* %22734 to i64*
  %22735 = load i64, i64* %RAX.i324
  %22736 = load i64, i64* %RDX.i325
  %22737 = mul i64 %22736, 4
  %22738 = add i64 %22737, %22735
  %22739 = load i32, i32* %ECX.i323
  %22740 = zext i32 %22739 to i64
  %22741 = load i64, i64* %PC.i322
  %22742 = add i64 %22741, 3
  store i64 %22742, i64* %PC.i322
  %22743 = inttoptr i64 %22738 to i32*
  store i32 %22739, i32* %22743
  store %struct.Memory* %loadMem_40726d, %struct.Memory** %MEMORY
  %loadMem_407270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22745 = getelementptr inbounds %struct.GPR, %struct.GPR* %22744, i32 0, i32 33
  %22746 = getelementptr inbounds %struct.Reg, %struct.Reg* %22745, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %22746 to i64*
  %22747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22748 = getelementptr inbounds %struct.GPR, %struct.GPR* %22747, i32 0, i32 1
  %22749 = getelementptr inbounds %struct.Reg, %struct.Reg* %22748, i32 0, i32 0
  %RAX.i320 = bitcast %union.anon* %22749 to i64*
  %22750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22751 = getelementptr inbounds %struct.GPR, %struct.GPR* %22750, i32 0, i32 15
  %22752 = getelementptr inbounds %struct.Reg, %struct.Reg* %22751, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %22752 to i64*
  %22753 = load i64, i64* %RBP.i321
  %22754 = sub i64 %22753, 28
  %22755 = load i64, i64* %PC.i319
  %22756 = add i64 %22755, 4
  store i64 %22756, i64* %PC.i319
  %22757 = inttoptr i64 %22754 to i32*
  %22758 = load i32, i32* %22757
  %22759 = sext i32 %22758 to i64
  store i64 %22759, i64* %RAX.i320, align 8
  store %struct.Memory* %loadMem_407270, %struct.Memory** %MEMORY
  %loadMem_407274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22761 = getelementptr inbounds %struct.GPR, %struct.GPR* %22760, i32 0, i32 33
  %22762 = getelementptr inbounds %struct.Reg, %struct.Reg* %22761, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %22762 to i64*
  %22763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22764 = getelementptr inbounds %struct.GPR, %struct.GPR* %22763, i32 0, i32 1
  %22765 = getelementptr inbounds %struct.Reg, %struct.Reg* %22764, i32 0, i32 0
  %RAX.i316 = bitcast %union.anon* %22765 to i64*
  %22766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22767 = getelementptr inbounds %struct.GPR, %struct.GPR* %22766, i32 0, i32 5
  %22768 = getelementptr inbounds %struct.Reg, %struct.Reg* %22767, i32 0, i32 0
  %RCX.i317 = bitcast %union.anon* %22768 to i64*
  %22769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22770 = getelementptr inbounds %struct.GPR, %struct.GPR* %22769, i32 0, i32 15
  %22771 = getelementptr inbounds %struct.Reg, %struct.Reg* %22770, i32 0, i32 0
  %RBP.i318 = bitcast %union.anon* %22771 to i64*
  %22772 = load i64, i64* %RBP.i318
  %22773 = load i64, i64* %RAX.i316
  %22774 = mul i64 %22773, 4
  %22775 = add i64 %22772, -80
  %22776 = add i64 %22775, %22774
  %22777 = load i64, i64* %PC.i315
  %22778 = add i64 %22777, 4
  store i64 %22778, i64* %PC.i315
  %22779 = inttoptr i64 %22776 to i32*
  %22780 = load i32, i32* %22779
  %22781 = zext i32 %22780 to i64
  store i64 %22781, i64* %RCX.i317, align 8
  store %struct.Memory* %loadMem_407274, %struct.Memory** %MEMORY
  %loadMem_407278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22783 = getelementptr inbounds %struct.GPR, %struct.GPR* %22782, i32 0, i32 33
  %22784 = getelementptr inbounds %struct.Reg, %struct.Reg* %22783, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %22784 to i64*
  %22785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22786 = getelementptr inbounds %struct.GPR, %struct.GPR* %22785, i32 0, i32 1
  %22787 = getelementptr inbounds %struct.Reg, %struct.Reg* %22786, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %22787 to i64*
  %22788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22789 = getelementptr inbounds %struct.GPR, %struct.GPR* %22788, i32 0, i32 15
  %22790 = getelementptr inbounds %struct.Reg, %struct.Reg* %22789, i32 0, i32 0
  %RBP.i314 = bitcast %union.anon* %22790 to i64*
  %22791 = load i64, i64* %RBP.i314
  %22792 = sub i64 %22791, 36
  %22793 = load i64, i64* %PC.i312
  %22794 = add i64 %22793, 4
  store i64 %22794, i64* %PC.i312
  %22795 = inttoptr i64 %22792 to i32*
  %22796 = load i32, i32* %22795
  %22797 = sext i32 %22796 to i64
  store i64 %22797, i64* %RAX.i313, align 8
  store %struct.Memory* %loadMem_407278, %struct.Memory** %MEMORY
  %loadMem_40727c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22799 = getelementptr inbounds %struct.GPR, %struct.GPR* %22798, i32 0, i32 33
  %22800 = getelementptr inbounds %struct.Reg, %struct.Reg* %22799, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %22800 to i64*
  %22801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22802 = getelementptr inbounds %struct.GPR, %struct.GPR* %22801, i32 0, i32 1
  %22803 = getelementptr inbounds %struct.Reg, %struct.Reg* %22802, i32 0, i32 0
  %RAX.i309 = bitcast %union.anon* %22803 to i64*
  %22804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22805 = getelementptr inbounds %struct.GPR, %struct.GPR* %22804, i32 0, i32 5
  %22806 = getelementptr inbounds %struct.Reg, %struct.Reg* %22805, i32 0, i32 0
  %RCX.i310 = bitcast %union.anon* %22806 to i64*
  %22807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22808 = getelementptr inbounds %struct.GPR, %struct.GPR* %22807, i32 0, i32 15
  %22809 = getelementptr inbounds %struct.Reg, %struct.Reg* %22808, i32 0, i32 0
  %RBP.i311 = bitcast %union.anon* %22809 to i64*
  %22810 = load i64, i64* %RCX.i310
  %22811 = load i64, i64* %RBP.i311
  %22812 = load i64, i64* %RAX.i309
  %22813 = mul i64 %22812, 4
  %22814 = add i64 %22811, -80
  %22815 = add i64 %22814, %22813
  %22816 = load i64, i64* %PC.i308
  %22817 = add i64 %22816, 4
  store i64 %22817, i64* %PC.i308
  %22818 = trunc i64 %22810 to i32
  %22819 = inttoptr i64 %22815 to i32*
  %22820 = load i32, i32* %22819
  %22821 = sub i32 %22818, %22820
  %22822 = zext i32 %22821 to i64
  store i64 %22822, i64* %RCX.i310, align 8
  %22823 = icmp ult i32 %22818, %22820
  %22824 = zext i1 %22823 to i8
  %22825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22824, i8* %22825, align 1
  %22826 = and i32 %22821, 255
  %22827 = call i32 @llvm.ctpop.i32(i32 %22826)
  %22828 = trunc i32 %22827 to i8
  %22829 = and i8 %22828, 1
  %22830 = xor i8 %22829, 1
  %22831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22830, i8* %22831, align 1
  %22832 = xor i32 %22820, %22818
  %22833 = xor i32 %22832, %22821
  %22834 = lshr i32 %22833, 4
  %22835 = trunc i32 %22834 to i8
  %22836 = and i8 %22835, 1
  %22837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22836, i8* %22837, align 1
  %22838 = icmp eq i32 %22821, 0
  %22839 = zext i1 %22838 to i8
  %22840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22839, i8* %22840, align 1
  %22841 = lshr i32 %22821, 31
  %22842 = trunc i32 %22841 to i8
  %22843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22842, i8* %22843, align 1
  %22844 = lshr i32 %22818, 31
  %22845 = lshr i32 %22820, 31
  %22846 = xor i32 %22845, %22844
  %22847 = xor i32 %22841, %22844
  %22848 = add i32 %22847, %22846
  %22849 = icmp eq i32 %22848, 2
  %22850 = zext i1 %22849 to i8
  %22851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22850, i8* %22851, align 1
  store %struct.Memory* %loadMem_40727c, %struct.Memory** %MEMORY
  %loadMem_407280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22853 = getelementptr inbounds %struct.GPR, %struct.GPR* %22852, i32 0, i32 33
  %22854 = getelementptr inbounds %struct.Reg, %struct.Reg* %22853, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %22854 to i64*
  %22855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22856 = getelementptr inbounds %struct.GPR, %struct.GPR* %22855, i32 0, i32 1
  %22857 = getelementptr inbounds %struct.Reg, %struct.Reg* %22856, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %22857 to i64*
  %22858 = load i64, i64* %PC.i306
  %22859 = add i64 %22858, 8
  store i64 %22859, i64* %PC.i306
  %22860 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22860, i64* %RAX.i307, align 8
  store %struct.Memory* %loadMem_407280, %struct.Memory** %MEMORY
  %loadMem_407288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22862 = getelementptr inbounds %struct.GPR, %struct.GPR* %22861, i32 0, i32 33
  %22863 = getelementptr inbounds %struct.Reg, %struct.Reg* %22862, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %22863 to i64*
  %22864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22865 = getelementptr inbounds %struct.GPR, %struct.GPR* %22864, i32 0, i32 1
  %22866 = getelementptr inbounds %struct.Reg, %struct.Reg* %22865, i32 0, i32 0
  %RAX.i305 = bitcast %union.anon* %22866 to i64*
  %22867 = load i64, i64* %RAX.i305
  %22868 = load i64, i64* %PC.i304
  %22869 = add i64 %22868, 6
  store i64 %22869, i64* %PC.i304
  %22870 = add i64 13112, %22867
  store i64 %22870, i64* %RAX.i305, align 8
  %22871 = icmp ult i64 %22870, %22867
  %22872 = icmp ult i64 %22870, 13112
  %22873 = or i1 %22871, %22872
  %22874 = zext i1 %22873 to i8
  %22875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22874, i8* %22875, align 1
  %22876 = trunc i64 %22870 to i32
  %22877 = and i32 %22876, 255
  %22878 = call i32 @llvm.ctpop.i32(i32 %22877)
  %22879 = trunc i32 %22878 to i8
  %22880 = and i8 %22879, 1
  %22881 = xor i8 %22880, 1
  %22882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22881, i8* %22882, align 1
  %22883 = xor i64 13112, %22867
  %22884 = xor i64 %22883, %22870
  %22885 = lshr i64 %22884, 4
  %22886 = trunc i64 %22885 to i8
  %22887 = and i8 %22886, 1
  %22888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22887, i8* %22888, align 1
  %22889 = icmp eq i64 %22870, 0
  %22890 = zext i1 %22889 to i8
  %22891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22890, i8* %22891, align 1
  %22892 = lshr i64 %22870, 63
  %22893 = trunc i64 %22892 to i8
  %22894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22893, i8* %22894, align 1
  %22895 = lshr i64 %22867, 63
  %22896 = xor i64 %22892, %22895
  %22897 = add i64 %22896, %22892
  %22898 = icmp eq i64 %22897, 2
  %22899 = zext i1 %22898 to i8
  %22900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22899, i8* %22900, align 1
  store %struct.Memory* %loadMem_407288, %struct.Memory** %MEMORY
  %loadMem_40728e = load %struct.Memory*, %struct.Memory** %MEMORY
  %22901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22902 = getelementptr inbounds %struct.GPR, %struct.GPR* %22901, i32 0, i32 33
  %22903 = getelementptr inbounds %struct.Reg, %struct.Reg* %22902, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %22903 to i64*
  %22904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22905 = getelementptr inbounds %struct.GPR, %struct.GPR* %22904, i32 0, i32 7
  %22906 = getelementptr inbounds %struct.Reg, %struct.Reg* %22905, i32 0, i32 0
  %RDX.i302 = bitcast %union.anon* %22906 to i64*
  %22907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22908 = getelementptr inbounds %struct.GPR, %struct.GPR* %22907, i32 0, i32 15
  %22909 = getelementptr inbounds %struct.Reg, %struct.Reg* %22908, i32 0, i32 0
  %RBP.i303 = bitcast %union.anon* %22909 to i64*
  %22910 = load i64, i64* %RBP.i303
  %22911 = sub i64 %22910, 24
  %22912 = load i64, i64* %PC.i301
  %22913 = add i64 %22912, 4
  store i64 %22913, i64* %PC.i301
  %22914 = inttoptr i64 %22911 to i32*
  %22915 = load i32, i32* %22914
  %22916 = sext i32 %22915 to i64
  store i64 %22916, i64* %RDX.i302, align 8
  store %struct.Memory* %loadMem_40728e, %struct.Memory** %MEMORY
  %loadMem_407292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22918 = getelementptr inbounds %struct.GPR, %struct.GPR* %22917, i32 0, i32 33
  %22919 = getelementptr inbounds %struct.Reg, %struct.Reg* %22918, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %22919 to i64*
  %22920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22921 = getelementptr inbounds %struct.GPR, %struct.GPR* %22920, i32 0, i32 7
  %22922 = getelementptr inbounds %struct.Reg, %struct.Reg* %22921, i32 0, i32 0
  %RDX.i300 = bitcast %union.anon* %22922 to i64*
  %22923 = load i64, i64* %RDX.i300
  %22924 = load i64, i64* %PC.i299
  %22925 = add i64 %22924, 4
  store i64 %22925, i64* %PC.i299
  %22926 = shl i64 %22923, 5
  %22927 = icmp slt i64 %22926, 0
  %22928 = shl i64 %22926, 1
  store i64 %22928, i64* %RDX.i300, align 8
  %22929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %22930 = zext i1 %22927 to i8
  store i8 %22930, i8* %22929, align 1
  %22931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22932 = trunc i64 %22928 to i32
  %22933 = and i32 %22932, 254
  %22934 = call i32 @llvm.ctpop.i32(i32 %22933)
  %22935 = trunc i32 %22934 to i8
  %22936 = and i8 %22935, 1
  %22937 = xor i8 %22936, 1
  store i8 %22937, i8* %22931, align 1
  %22938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22938, align 1
  %22939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22940 = icmp eq i64 %22928, 0
  %22941 = zext i1 %22940 to i8
  store i8 %22941, i8* %22939, align 1
  %22942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22943 = lshr i64 %22928, 63
  %22944 = trunc i64 %22943 to i8
  store i8 %22944, i8* %22942, align 1
  %22945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22945, align 1
  store %struct.Memory* %loadMem_407292, %struct.Memory** %MEMORY
  %loadMem_407296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22947 = getelementptr inbounds %struct.GPR, %struct.GPR* %22946, i32 0, i32 33
  %22948 = getelementptr inbounds %struct.Reg, %struct.Reg* %22947, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %22948 to i64*
  %22949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22950 = getelementptr inbounds %struct.GPR, %struct.GPR* %22949, i32 0, i32 1
  %22951 = getelementptr inbounds %struct.Reg, %struct.Reg* %22950, i32 0, i32 0
  %RAX.i297 = bitcast %union.anon* %22951 to i64*
  %22952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22953 = getelementptr inbounds %struct.GPR, %struct.GPR* %22952, i32 0, i32 7
  %22954 = getelementptr inbounds %struct.Reg, %struct.Reg* %22953, i32 0, i32 0
  %RDX.i298 = bitcast %union.anon* %22954 to i64*
  %22955 = load i64, i64* %RAX.i297
  %22956 = load i64, i64* %RDX.i298
  %22957 = load i64, i64* %PC.i296
  %22958 = add i64 %22957, 3
  store i64 %22958, i64* %PC.i296
  %22959 = add i64 %22956, %22955
  store i64 %22959, i64* %RAX.i297, align 8
  %22960 = icmp ult i64 %22959, %22955
  %22961 = icmp ult i64 %22959, %22956
  %22962 = or i1 %22960, %22961
  %22963 = zext i1 %22962 to i8
  %22964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22963, i8* %22964, align 1
  %22965 = trunc i64 %22959 to i32
  %22966 = and i32 %22965, 255
  %22967 = call i32 @llvm.ctpop.i32(i32 %22966)
  %22968 = trunc i32 %22967 to i8
  %22969 = and i8 %22968, 1
  %22970 = xor i8 %22969, 1
  %22971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22970, i8* %22971, align 1
  %22972 = xor i64 %22956, %22955
  %22973 = xor i64 %22972, %22959
  %22974 = lshr i64 %22973, 4
  %22975 = trunc i64 %22974 to i8
  %22976 = and i8 %22975, 1
  %22977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22976, i8* %22977, align 1
  %22978 = icmp eq i64 %22959, 0
  %22979 = zext i1 %22978 to i8
  %22980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22979, i8* %22980, align 1
  %22981 = lshr i64 %22959, 63
  %22982 = trunc i64 %22981 to i8
  %22983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22982, i8* %22983, align 1
  %22984 = lshr i64 %22955, 63
  %22985 = lshr i64 %22956, 63
  %22986 = xor i64 %22981, %22984
  %22987 = xor i64 %22981, %22985
  %22988 = add i64 %22986, %22987
  %22989 = icmp eq i64 %22988, 2
  %22990 = zext i1 %22989 to i8
  %22991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22990, i8* %22991, align 1
  store %struct.Memory* %loadMem_407296, %struct.Memory** %MEMORY
  %loadMem_407299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22993 = getelementptr inbounds %struct.GPR, %struct.GPR* %22992, i32 0, i32 33
  %22994 = getelementptr inbounds %struct.Reg, %struct.Reg* %22993, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %22994 to i64*
  %22995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22996 = getelementptr inbounds %struct.GPR, %struct.GPR* %22995, i32 0, i32 7
  %22997 = getelementptr inbounds %struct.Reg, %struct.Reg* %22996, i32 0, i32 0
  %RDX.i294 = bitcast %union.anon* %22997 to i64*
  %22998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22999 = getelementptr inbounds %struct.GPR, %struct.GPR* %22998, i32 0, i32 15
  %23000 = getelementptr inbounds %struct.Reg, %struct.Reg* %22999, i32 0, i32 0
  %RBP.i295 = bitcast %union.anon* %23000 to i64*
  %23001 = load i64, i64* %RBP.i295
  %23002 = sub i64 %23001, 36
  %23003 = load i64, i64* %PC.i293
  %23004 = add i64 %23003, 4
  store i64 %23004, i64* %PC.i293
  %23005 = inttoptr i64 %23002 to i32*
  %23006 = load i32, i32* %23005
  %23007 = sext i32 %23006 to i64
  store i64 %23007, i64* %RDX.i294, align 8
  store %struct.Memory* %loadMem_407299, %struct.Memory** %MEMORY
  %loadMem_40729d = load %struct.Memory*, %struct.Memory** %MEMORY
  %23008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23009 = getelementptr inbounds %struct.GPR, %struct.GPR* %23008, i32 0, i32 33
  %23010 = getelementptr inbounds %struct.Reg, %struct.Reg* %23009, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %23010 to i64*
  %23011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23012 = getelementptr inbounds %struct.GPR, %struct.GPR* %23011, i32 0, i32 5
  %23013 = getelementptr inbounds %struct.Reg, %struct.Reg* %23012, i32 0, i32 0
  %ECX.i290 = bitcast %union.anon* %23013 to i32*
  %23014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23015 = getelementptr inbounds %struct.GPR, %struct.GPR* %23014, i32 0, i32 1
  %23016 = getelementptr inbounds %struct.Reg, %struct.Reg* %23015, i32 0, i32 0
  %RAX.i291 = bitcast %union.anon* %23016 to i64*
  %23017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23018 = getelementptr inbounds %struct.GPR, %struct.GPR* %23017, i32 0, i32 7
  %23019 = getelementptr inbounds %struct.Reg, %struct.Reg* %23018, i32 0, i32 0
  %RDX.i292 = bitcast %union.anon* %23019 to i64*
  %23020 = load i64, i64* %RAX.i291
  %23021 = load i64, i64* %RDX.i292
  %23022 = mul i64 %23021, 4
  %23023 = add i64 %23022, %23020
  %23024 = load i32, i32* %ECX.i290
  %23025 = zext i32 %23024 to i64
  %23026 = load i64, i64* %PC.i289
  %23027 = add i64 %23026, 3
  store i64 %23027, i64* %PC.i289
  %23028 = inttoptr i64 %23023 to i32*
  store i32 %23024, i32* %23028
  store %struct.Memory* %loadMem_40729d, %struct.Memory** %MEMORY
  %loadMem_4072a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23030 = getelementptr inbounds %struct.GPR, %struct.GPR* %23029, i32 0, i32 33
  %23031 = getelementptr inbounds %struct.Reg, %struct.Reg* %23030, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %23031 to i64*
  %23032 = load i64, i64* %PC.i288
  %23033 = add i64 %23032, 113
  %23034 = load i64, i64* %PC.i288
  %23035 = add i64 %23034, 5
  store i64 %23035, i64* %PC.i288
  %23036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23033, i64* %23036, align 8
  store %struct.Memory* %loadMem_4072a0, %struct.Memory** %MEMORY
  br label %block_.L_407311

block_.L_4072a5:                                  ; preds = %block_.L_407233
  %loadMem_4072a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23038 = getelementptr inbounds %struct.GPR, %struct.GPR* %23037, i32 0, i32 33
  %23039 = getelementptr inbounds %struct.Reg, %struct.Reg* %23038, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %23039 to i64*
  %23040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23041 = getelementptr inbounds %struct.GPR, %struct.GPR* %23040, i32 0, i32 1
  %23042 = getelementptr inbounds %struct.Reg, %struct.Reg* %23041, i32 0, i32 0
  %RAX.i286 = bitcast %union.anon* %23042 to i64*
  %23043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23044 = getelementptr inbounds %struct.GPR, %struct.GPR* %23043, i32 0, i32 15
  %23045 = getelementptr inbounds %struct.Reg, %struct.Reg* %23044, i32 0, i32 0
  %RBP.i287 = bitcast %union.anon* %23045 to i64*
  %23046 = load i64, i64* %RBP.i287
  %23047 = sub i64 %23046, 28
  %23048 = load i64, i64* %PC.i285
  %23049 = add i64 %23048, 4
  store i64 %23049, i64* %PC.i285
  %23050 = inttoptr i64 %23047 to i32*
  %23051 = load i32, i32* %23050
  %23052 = sext i32 %23051 to i64
  store i64 %23052, i64* %RAX.i286, align 8
  store %struct.Memory* %loadMem_4072a5, %struct.Memory** %MEMORY
  %loadMem_4072a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23054 = getelementptr inbounds %struct.GPR, %struct.GPR* %23053, i32 0, i32 33
  %23055 = getelementptr inbounds %struct.Reg, %struct.Reg* %23054, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %23055 to i64*
  %23056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23057 = getelementptr inbounds %struct.GPR, %struct.GPR* %23056, i32 0, i32 1
  %23058 = getelementptr inbounds %struct.Reg, %struct.Reg* %23057, i32 0, i32 0
  %RAX.i282 = bitcast %union.anon* %23058 to i64*
  %23059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23060 = getelementptr inbounds %struct.GPR, %struct.GPR* %23059, i32 0, i32 5
  %23061 = getelementptr inbounds %struct.Reg, %struct.Reg* %23060, i32 0, i32 0
  %RCX.i283 = bitcast %union.anon* %23061 to i64*
  %23062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23063 = getelementptr inbounds %struct.GPR, %struct.GPR* %23062, i32 0, i32 15
  %23064 = getelementptr inbounds %struct.Reg, %struct.Reg* %23063, i32 0, i32 0
  %RBP.i284 = bitcast %union.anon* %23064 to i64*
  %23065 = load i64, i64* %RBP.i284
  %23066 = load i64, i64* %RAX.i282
  %23067 = mul i64 %23066, 4
  %23068 = add i64 %23065, -80
  %23069 = add i64 %23068, %23067
  %23070 = load i64, i64* %PC.i281
  %23071 = add i64 %23070, 4
  store i64 %23071, i64* %PC.i281
  %23072 = inttoptr i64 %23069 to i32*
  %23073 = load i32, i32* %23072
  %23074 = zext i32 %23073 to i64
  store i64 %23074, i64* %RCX.i283, align 8
  store %struct.Memory* %loadMem_4072a9, %struct.Memory** %MEMORY
  %loadMem_4072ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %23075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23076 = getelementptr inbounds %struct.GPR, %struct.GPR* %23075, i32 0, i32 33
  %23077 = getelementptr inbounds %struct.Reg, %struct.Reg* %23076, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %23077 to i64*
  %23078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23079 = getelementptr inbounds %struct.GPR, %struct.GPR* %23078, i32 0, i32 1
  %23080 = getelementptr inbounds %struct.Reg, %struct.Reg* %23079, i32 0, i32 0
  %RAX.i279 = bitcast %union.anon* %23080 to i64*
  %23081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23082 = getelementptr inbounds %struct.GPR, %struct.GPR* %23081, i32 0, i32 15
  %23083 = getelementptr inbounds %struct.Reg, %struct.Reg* %23082, i32 0, i32 0
  %RBP.i280 = bitcast %union.anon* %23083 to i64*
  %23084 = load i64, i64* %RBP.i280
  %23085 = sub i64 %23084, 36
  %23086 = load i64, i64* %PC.i278
  %23087 = add i64 %23086, 4
  store i64 %23087, i64* %PC.i278
  %23088 = inttoptr i64 %23085 to i32*
  %23089 = load i32, i32* %23088
  %23090 = sext i32 %23089 to i64
  store i64 %23090, i64* %RAX.i279, align 8
  store %struct.Memory* %loadMem_4072ad, %struct.Memory** %MEMORY
  %loadMem_4072b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23092 = getelementptr inbounds %struct.GPR, %struct.GPR* %23091, i32 0, i32 33
  %23093 = getelementptr inbounds %struct.Reg, %struct.Reg* %23092, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %23093 to i64*
  %23094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23095 = getelementptr inbounds %struct.GPR, %struct.GPR* %23094, i32 0, i32 1
  %23096 = getelementptr inbounds %struct.Reg, %struct.Reg* %23095, i32 0, i32 0
  %RAX.i275 = bitcast %union.anon* %23096 to i64*
  %23097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23098 = getelementptr inbounds %struct.GPR, %struct.GPR* %23097, i32 0, i32 5
  %23099 = getelementptr inbounds %struct.Reg, %struct.Reg* %23098, i32 0, i32 0
  %RCX.i276 = bitcast %union.anon* %23099 to i64*
  %23100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23101 = getelementptr inbounds %struct.GPR, %struct.GPR* %23100, i32 0, i32 15
  %23102 = getelementptr inbounds %struct.Reg, %struct.Reg* %23101, i32 0, i32 0
  %RBP.i277 = bitcast %union.anon* %23102 to i64*
  %23103 = load i64, i64* %RCX.i276
  %23104 = load i64, i64* %RBP.i277
  %23105 = load i64, i64* %RAX.i275
  %23106 = mul i64 %23105, 4
  %23107 = add i64 %23104, -80
  %23108 = add i64 %23107, %23106
  %23109 = load i64, i64* %PC.i274
  %23110 = add i64 %23109, 4
  store i64 %23110, i64* %PC.i274
  %23111 = trunc i64 %23103 to i32
  %23112 = inttoptr i64 %23108 to i32*
  %23113 = load i32, i32* %23112
  %23114 = add i32 %23113, %23111
  %23115 = zext i32 %23114 to i64
  store i64 %23115, i64* %RCX.i276, align 8
  %23116 = icmp ult i32 %23114, %23111
  %23117 = icmp ult i32 %23114, %23113
  %23118 = or i1 %23116, %23117
  %23119 = zext i1 %23118 to i8
  %23120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23119, i8* %23120, align 1
  %23121 = and i32 %23114, 255
  %23122 = call i32 @llvm.ctpop.i32(i32 %23121)
  %23123 = trunc i32 %23122 to i8
  %23124 = and i8 %23123, 1
  %23125 = xor i8 %23124, 1
  %23126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23125, i8* %23126, align 1
  %23127 = xor i32 %23113, %23111
  %23128 = xor i32 %23127, %23114
  %23129 = lshr i32 %23128, 4
  %23130 = trunc i32 %23129 to i8
  %23131 = and i8 %23130, 1
  %23132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23131, i8* %23132, align 1
  %23133 = icmp eq i32 %23114, 0
  %23134 = zext i1 %23133 to i8
  %23135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23134, i8* %23135, align 1
  %23136 = lshr i32 %23114, 31
  %23137 = trunc i32 %23136 to i8
  %23138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23137, i8* %23138, align 1
  %23139 = lshr i32 %23111, 31
  %23140 = lshr i32 %23113, 31
  %23141 = xor i32 %23136, %23139
  %23142 = xor i32 %23136, %23140
  %23143 = add i32 %23141, %23142
  %23144 = icmp eq i32 %23143, 2
  %23145 = zext i1 %23144 to i8
  %23146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23145, i8* %23146, align 1
  store %struct.Memory* %loadMem_4072b1, %struct.Memory** %MEMORY
  %loadMem_4072b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23148 = getelementptr inbounds %struct.GPR, %struct.GPR* %23147, i32 0, i32 33
  %23149 = getelementptr inbounds %struct.Reg, %struct.Reg* %23148, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %23149 to i64*
  %23150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23151 = getelementptr inbounds %struct.GPR, %struct.GPR* %23150, i32 0, i32 5
  %23152 = getelementptr inbounds %struct.Reg, %struct.Reg* %23151, i32 0, i32 0
  %RCX.i273 = bitcast %union.anon* %23152 to i64*
  %23153 = load i64, i64* %RCX.i273
  %23154 = load i64, i64* %PC.i272
  %23155 = add i64 %23154, 3
  store i64 %23155, i64* %PC.i272
  %23156 = trunc i64 %23153 to i32
  %23157 = add i32 32, %23156
  %23158 = zext i32 %23157 to i64
  store i64 %23158, i64* %RCX.i273, align 8
  %23159 = icmp ult i32 %23157, %23156
  %23160 = icmp ult i32 %23157, 32
  %23161 = or i1 %23159, %23160
  %23162 = zext i1 %23161 to i8
  %23163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23162, i8* %23163, align 1
  %23164 = and i32 %23157, 255
  %23165 = call i32 @llvm.ctpop.i32(i32 %23164)
  %23166 = trunc i32 %23165 to i8
  %23167 = and i8 %23166, 1
  %23168 = xor i8 %23167, 1
  %23169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23168, i8* %23169, align 1
  %23170 = xor i64 32, %23153
  %23171 = trunc i64 %23170 to i32
  %23172 = xor i32 %23171, %23157
  %23173 = lshr i32 %23172, 4
  %23174 = trunc i32 %23173 to i8
  %23175 = and i8 %23174, 1
  %23176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23175, i8* %23176, align 1
  %23177 = icmp eq i32 %23157, 0
  %23178 = zext i1 %23177 to i8
  %23179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23178, i8* %23179, align 1
  %23180 = lshr i32 %23157, 31
  %23181 = trunc i32 %23180 to i8
  %23182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23181, i8* %23182, align 1
  %23183 = lshr i32 %23156, 31
  %23184 = xor i32 %23180, %23183
  %23185 = add i32 %23184, %23180
  %23186 = icmp eq i32 %23185, 2
  %23187 = zext i1 %23186 to i8
  %23188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23187, i8* %23188, align 1
  store %struct.Memory* %loadMem_4072b5, %struct.Memory** %MEMORY
  %loadMem_4072b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23190 = getelementptr inbounds %struct.GPR, %struct.GPR* %23189, i32 0, i32 33
  %23191 = getelementptr inbounds %struct.Reg, %struct.Reg* %23190, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %23191 to i64*
  %23192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23193 = getelementptr inbounds %struct.GPR, %struct.GPR* %23192, i32 0, i32 5
  %23194 = getelementptr inbounds %struct.Reg, %struct.Reg* %23193, i32 0, i32 0
  %RCX.i271 = bitcast %union.anon* %23194 to i64*
  %23195 = load i64, i64* %RCX.i271
  %23196 = load i64, i64* %PC.i270
  %23197 = add i64 %23196, 3
  store i64 %23197, i64* %PC.i270
  %23198 = shl i64 %23195, 32
  %23199 = ashr exact i64 %23198, 32
  %23200 = ashr i64 %23199, 5
  %23201 = lshr i64 %23200, 1
  %23202 = trunc i64 %23200 to i8
  %23203 = and i8 %23202, 1
  %23204 = trunc i64 %23201 to i32
  %23205 = and i64 %23201, 4294967295
  store i64 %23205, i64* %RCX.i271, align 8
  %23206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23203, i8* %23206, align 1
  %23207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23208 = and i32 %23204, 255
  %23209 = call i32 @llvm.ctpop.i32(i32 %23208)
  %23210 = trunc i32 %23209 to i8
  %23211 = and i8 %23210, 1
  %23212 = xor i8 %23211, 1
  store i8 %23212, i8* %23207, align 1
  %23213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23213, align 1
  %23214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23215 = icmp eq i32 %23204, 0
  %23216 = zext i1 %23215 to i8
  store i8 %23216, i8* %23214, align 1
  %23217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23218 = lshr i32 %23204, 31
  %23219 = trunc i32 %23218 to i8
  store i8 %23219, i8* %23217, align 1
  %23220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23220, align 1
  store %struct.Memory* %loadMem_4072b8, %struct.Memory** %MEMORY
  %loadMem_4072bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %23221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23222 = getelementptr inbounds %struct.GPR, %struct.GPR* %23221, i32 0, i32 33
  %23223 = getelementptr inbounds %struct.Reg, %struct.Reg* %23222, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %23223 to i64*
  %23224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23225 = getelementptr inbounds %struct.GPR, %struct.GPR* %23224, i32 0, i32 1
  %23226 = getelementptr inbounds %struct.Reg, %struct.Reg* %23225, i32 0, i32 0
  %RAX.i269 = bitcast %union.anon* %23226 to i64*
  %23227 = load i64, i64* %PC.i268
  %23228 = add i64 %23227, 8
  store i64 %23228, i64* %PC.i268
  %23229 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %23229, i64* %RAX.i269, align 8
  store %struct.Memory* %loadMem_4072bb, %struct.Memory** %MEMORY
  %loadMem_4072c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23231 = getelementptr inbounds %struct.GPR, %struct.GPR* %23230, i32 0, i32 33
  %23232 = getelementptr inbounds %struct.Reg, %struct.Reg* %23231, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %23232 to i64*
  %23233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23234 = getelementptr inbounds %struct.GPR, %struct.GPR* %23233, i32 0, i32 1
  %23235 = getelementptr inbounds %struct.Reg, %struct.Reg* %23234, i32 0, i32 0
  %RAX.i267 = bitcast %union.anon* %23235 to i64*
  %23236 = load i64, i64* %RAX.i267
  %23237 = load i64, i64* %PC.i266
  %23238 = add i64 %23237, 6
  store i64 %23238, i64* %PC.i266
  %23239 = add i64 13112, %23236
  store i64 %23239, i64* %RAX.i267, align 8
  %23240 = icmp ult i64 %23239, %23236
  %23241 = icmp ult i64 %23239, 13112
  %23242 = or i1 %23240, %23241
  %23243 = zext i1 %23242 to i8
  %23244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23243, i8* %23244, align 1
  %23245 = trunc i64 %23239 to i32
  %23246 = and i32 %23245, 255
  %23247 = call i32 @llvm.ctpop.i32(i32 %23246)
  %23248 = trunc i32 %23247 to i8
  %23249 = and i8 %23248, 1
  %23250 = xor i8 %23249, 1
  %23251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23250, i8* %23251, align 1
  %23252 = xor i64 13112, %23236
  %23253 = xor i64 %23252, %23239
  %23254 = lshr i64 %23253, 4
  %23255 = trunc i64 %23254 to i8
  %23256 = and i8 %23255, 1
  %23257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23256, i8* %23257, align 1
  %23258 = icmp eq i64 %23239, 0
  %23259 = zext i1 %23258 to i8
  %23260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23259, i8* %23260, align 1
  %23261 = lshr i64 %23239, 63
  %23262 = trunc i64 %23261 to i8
  %23263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23262, i8* %23263, align 1
  %23264 = lshr i64 %23236, 63
  %23265 = xor i64 %23261, %23264
  %23266 = add i64 %23265, %23261
  %23267 = icmp eq i64 %23266, 2
  %23268 = zext i1 %23267 to i8
  %23269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23268, i8* %23269, align 1
  store %struct.Memory* %loadMem_4072c3, %struct.Memory** %MEMORY
  %loadMem_4072c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23271 = getelementptr inbounds %struct.GPR, %struct.GPR* %23270, i32 0, i32 33
  %23272 = getelementptr inbounds %struct.Reg, %struct.Reg* %23271, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %23272 to i64*
  %23273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23274 = getelementptr inbounds %struct.GPR, %struct.GPR* %23273, i32 0, i32 7
  %23275 = getelementptr inbounds %struct.Reg, %struct.Reg* %23274, i32 0, i32 0
  %RDX.i264 = bitcast %union.anon* %23275 to i64*
  %23276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23277 = getelementptr inbounds %struct.GPR, %struct.GPR* %23276, i32 0, i32 15
  %23278 = getelementptr inbounds %struct.Reg, %struct.Reg* %23277, i32 0, i32 0
  %RBP.i265 = bitcast %union.anon* %23278 to i64*
  %23279 = load i64, i64* %RBP.i265
  %23280 = sub i64 %23279, 24
  %23281 = load i64, i64* %PC.i263
  %23282 = add i64 %23281, 4
  store i64 %23282, i64* %PC.i263
  %23283 = inttoptr i64 %23280 to i32*
  %23284 = load i32, i32* %23283
  %23285 = sext i32 %23284 to i64
  store i64 %23285, i64* %RDX.i264, align 8
  store %struct.Memory* %loadMem_4072c9, %struct.Memory** %MEMORY
  %loadMem_4072cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %23286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23287 = getelementptr inbounds %struct.GPR, %struct.GPR* %23286, i32 0, i32 33
  %23288 = getelementptr inbounds %struct.Reg, %struct.Reg* %23287, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %23288 to i64*
  %23289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23290 = getelementptr inbounds %struct.GPR, %struct.GPR* %23289, i32 0, i32 7
  %23291 = getelementptr inbounds %struct.Reg, %struct.Reg* %23290, i32 0, i32 0
  %RDX.i262 = bitcast %union.anon* %23291 to i64*
  %23292 = load i64, i64* %RDX.i262
  %23293 = load i64, i64* %PC.i261
  %23294 = add i64 %23293, 4
  store i64 %23294, i64* %PC.i261
  %23295 = shl i64 %23292, 5
  %23296 = icmp slt i64 %23295, 0
  %23297 = shl i64 %23295, 1
  store i64 %23297, i64* %RDX.i262, align 8
  %23298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %23299 = zext i1 %23296 to i8
  store i8 %23299, i8* %23298, align 1
  %23300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23301 = trunc i64 %23297 to i32
  %23302 = and i32 %23301, 254
  %23303 = call i32 @llvm.ctpop.i32(i32 %23302)
  %23304 = trunc i32 %23303 to i8
  %23305 = and i8 %23304, 1
  %23306 = xor i8 %23305, 1
  store i8 %23306, i8* %23300, align 1
  %23307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23307, align 1
  %23308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23309 = icmp eq i64 %23297, 0
  %23310 = zext i1 %23309 to i8
  store i8 %23310, i8* %23308, align 1
  %23311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23312 = lshr i64 %23297, 63
  %23313 = trunc i64 %23312 to i8
  store i8 %23313, i8* %23311, align 1
  %23314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23314, align 1
  store %struct.Memory* %loadMem_4072cd, %struct.Memory** %MEMORY
  %loadMem_4072d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23316 = getelementptr inbounds %struct.GPR, %struct.GPR* %23315, i32 0, i32 33
  %23317 = getelementptr inbounds %struct.Reg, %struct.Reg* %23316, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %23317 to i64*
  %23318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23319 = getelementptr inbounds %struct.GPR, %struct.GPR* %23318, i32 0, i32 1
  %23320 = getelementptr inbounds %struct.Reg, %struct.Reg* %23319, i32 0, i32 0
  %RAX.i259 = bitcast %union.anon* %23320 to i64*
  %23321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23322 = getelementptr inbounds %struct.GPR, %struct.GPR* %23321, i32 0, i32 7
  %23323 = getelementptr inbounds %struct.Reg, %struct.Reg* %23322, i32 0, i32 0
  %RDX.i260 = bitcast %union.anon* %23323 to i64*
  %23324 = load i64, i64* %RAX.i259
  %23325 = load i64, i64* %RDX.i260
  %23326 = load i64, i64* %PC.i258
  %23327 = add i64 %23326, 3
  store i64 %23327, i64* %PC.i258
  %23328 = add i64 %23325, %23324
  store i64 %23328, i64* %RAX.i259, align 8
  %23329 = icmp ult i64 %23328, %23324
  %23330 = icmp ult i64 %23328, %23325
  %23331 = or i1 %23329, %23330
  %23332 = zext i1 %23331 to i8
  %23333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23332, i8* %23333, align 1
  %23334 = trunc i64 %23328 to i32
  %23335 = and i32 %23334, 255
  %23336 = call i32 @llvm.ctpop.i32(i32 %23335)
  %23337 = trunc i32 %23336 to i8
  %23338 = and i8 %23337, 1
  %23339 = xor i8 %23338, 1
  %23340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23339, i8* %23340, align 1
  %23341 = xor i64 %23325, %23324
  %23342 = xor i64 %23341, %23328
  %23343 = lshr i64 %23342, 4
  %23344 = trunc i64 %23343 to i8
  %23345 = and i8 %23344, 1
  %23346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23345, i8* %23346, align 1
  %23347 = icmp eq i64 %23328, 0
  %23348 = zext i1 %23347 to i8
  %23349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23348, i8* %23349, align 1
  %23350 = lshr i64 %23328, 63
  %23351 = trunc i64 %23350 to i8
  %23352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23351, i8* %23352, align 1
  %23353 = lshr i64 %23324, 63
  %23354 = lshr i64 %23325, 63
  %23355 = xor i64 %23350, %23353
  %23356 = xor i64 %23350, %23354
  %23357 = add i64 %23355, %23356
  %23358 = icmp eq i64 %23357, 2
  %23359 = zext i1 %23358 to i8
  %23360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23359, i8* %23360, align 1
  store %struct.Memory* %loadMem_4072d1, %struct.Memory** %MEMORY
  %loadMem_4072d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23362 = getelementptr inbounds %struct.GPR, %struct.GPR* %23361, i32 0, i32 33
  %23363 = getelementptr inbounds %struct.Reg, %struct.Reg* %23362, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %23363 to i64*
  %23364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23365 = getelementptr inbounds %struct.GPR, %struct.GPR* %23364, i32 0, i32 7
  %23366 = getelementptr inbounds %struct.Reg, %struct.Reg* %23365, i32 0, i32 0
  %RDX.i256 = bitcast %union.anon* %23366 to i64*
  %23367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23368 = getelementptr inbounds %struct.GPR, %struct.GPR* %23367, i32 0, i32 15
  %23369 = getelementptr inbounds %struct.Reg, %struct.Reg* %23368, i32 0, i32 0
  %RBP.i257 = bitcast %union.anon* %23369 to i64*
  %23370 = load i64, i64* %RBP.i257
  %23371 = sub i64 %23370, 28
  %23372 = load i64, i64* %PC.i255
  %23373 = add i64 %23372, 4
  store i64 %23373, i64* %PC.i255
  %23374 = inttoptr i64 %23371 to i32*
  %23375 = load i32, i32* %23374
  %23376 = sext i32 %23375 to i64
  store i64 %23376, i64* %RDX.i256, align 8
  store %struct.Memory* %loadMem_4072d4, %struct.Memory** %MEMORY
  %loadMem_4072d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23378 = getelementptr inbounds %struct.GPR, %struct.GPR* %23377, i32 0, i32 33
  %23379 = getelementptr inbounds %struct.Reg, %struct.Reg* %23378, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %23379 to i64*
  %23380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23381 = getelementptr inbounds %struct.GPR, %struct.GPR* %23380, i32 0, i32 5
  %23382 = getelementptr inbounds %struct.Reg, %struct.Reg* %23381, i32 0, i32 0
  %ECX.i252 = bitcast %union.anon* %23382 to i32*
  %23383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23384 = getelementptr inbounds %struct.GPR, %struct.GPR* %23383, i32 0, i32 1
  %23385 = getelementptr inbounds %struct.Reg, %struct.Reg* %23384, i32 0, i32 0
  %RAX.i253 = bitcast %union.anon* %23385 to i64*
  %23386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23387 = getelementptr inbounds %struct.GPR, %struct.GPR* %23386, i32 0, i32 7
  %23388 = getelementptr inbounds %struct.Reg, %struct.Reg* %23387, i32 0, i32 0
  %RDX.i254 = bitcast %union.anon* %23388 to i64*
  %23389 = load i64, i64* %RAX.i253
  %23390 = load i64, i64* %RDX.i254
  %23391 = mul i64 %23390, 4
  %23392 = add i64 %23391, %23389
  %23393 = load i32, i32* %ECX.i252
  %23394 = zext i32 %23393 to i64
  %23395 = load i64, i64* %PC.i251
  %23396 = add i64 %23395, 3
  store i64 %23396, i64* %PC.i251
  %23397 = inttoptr i64 %23392 to i32*
  store i32 %23393, i32* %23397
  store %struct.Memory* %loadMem_4072d8, %struct.Memory** %MEMORY
  %loadMem_4072db = load %struct.Memory*, %struct.Memory** %MEMORY
  %23398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23399 = getelementptr inbounds %struct.GPR, %struct.GPR* %23398, i32 0, i32 33
  %23400 = getelementptr inbounds %struct.Reg, %struct.Reg* %23399, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %23400 to i64*
  %23401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23402 = getelementptr inbounds %struct.GPR, %struct.GPR* %23401, i32 0, i32 1
  %23403 = getelementptr inbounds %struct.Reg, %struct.Reg* %23402, i32 0, i32 0
  %RAX.i249 = bitcast %union.anon* %23403 to i64*
  %23404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23405 = getelementptr inbounds %struct.GPR, %struct.GPR* %23404, i32 0, i32 15
  %23406 = getelementptr inbounds %struct.Reg, %struct.Reg* %23405, i32 0, i32 0
  %RBP.i250 = bitcast %union.anon* %23406 to i64*
  %23407 = load i64, i64* %RBP.i250
  %23408 = sub i64 %23407, 28
  %23409 = load i64, i64* %PC.i248
  %23410 = add i64 %23409, 4
  store i64 %23410, i64* %PC.i248
  %23411 = inttoptr i64 %23408 to i32*
  %23412 = load i32, i32* %23411
  %23413 = sext i32 %23412 to i64
  store i64 %23413, i64* %RAX.i249, align 8
  store %struct.Memory* %loadMem_4072db, %struct.Memory** %MEMORY
  %loadMem_4072df = load %struct.Memory*, %struct.Memory** %MEMORY
  %23414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23415 = getelementptr inbounds %struct.GPR, %struct.GPR* %23414, i32 0, i32 33
  %23416 = getelementptr inbounds %struct.Reg, %struct.Reg* %23415, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %23416 to i64*
  %23417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23418 = getelementptr inbounds %struct.GPR, %struct.GPR* %23417, i32 0, i32 1
  %23419 = getelementptr inbounds %struct.Reg, %struct.Reg* %23418, i32 0, i32 0
  %RAX.i245 = bitcast %union.anon* %23419 to i64*
  %23420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23421 = getelementptr inbounds %struct.GPR, %struct.GPR* %23420, i32 0, i32 5
  %23422 = getelementptr inbounds %struct.Reg, %struct.Reg* %23421, i32 0, i32 0
  %RCX.i246 = bitcast %union.anon* %23422 to i64*
  %23423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23424 = getelementptr inbounds %struct.GPR, %struct.GPR* %23423, i32 0, i32 15
  %23425 = getelementptr inbounds %struct.Reg, %struct.Reg* %23424, i32 0, i32 0
  %RBP.i247 = bitcast %union.anon* %23425 to i64*
  %23426 = load i64, i64* %RBP.i247
  %23427 = load i64, i64* %RAX.i245
  %23428 = mul i64 %23427, 4
  %23429 = add i64 %23426, -80
  %23430 = add i64 %23429, %23428
  %23431 = load i64, i64* %PC.i244
  %23432 = add i64 %23431, 4
  store i64 %23432, i64* %PC.i244
  %23433 = inttoptr i64 %23430 to i32*
  %23434 = load i32, i32* %23433
  %23435 = zext i32 %23434 to i64
  store i64 %23435, i64* %RCX.i246, align 8
  store %struct.Memory* %loadMem_4072df, %struct.Memory** %MEMORY
  %loadMem_4072e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23437 = getelementptr inbounds %struct.GPR, %struct.GPR* %23436, i32 0, i32 33
  %23438 = getelementptr inbounds %struct.Reg, %struct.Reg* %23437, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %23438 to i64*
  %23439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23440 = getelementptr inbounds %struct.GPR, %struct.GPR* %23439, i32 0, i32 1
  %23441 = getelementptr inbounds %struct.Reg, %struct.Reg* %23440, i32 0, i32 0
  %RAX.i242 = bitcast %union.anon* %23441 to i64*
  %23442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23443 = getelementptr inbounds %struct.GPR, %struct.GPR* %23442, i32 0, i32 15
  %23444 = getelementptr inbounds %struct.Reg, %struct.Reg* %23443, i32 0, i32 0
  %RBP.i243 = bitcast %union.anon* %23444 to i64*
  %23445 = load i64, i64* %RBP.i243
  %23446 = sub i64 %23445, 36
  %23447 = load i64, i64* %PC.i241
  %23448 = add i64 %23447, 4
  store i64 %23448, i64* %PC.i241
  %23449 = inttoptr i64 %23446 to i32*
  %23450 = load i32, i32* %23449
  %23451 = sext i32 %23450 to i64
  store i64 %23451, i64* %RAX.i242, align 8
  store %struct.Memory* %loadMem_4072e3, %struct.Memory** %MEMORY
  %loadMem_4072e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23453 = getelementptr inbounds %struct.GPR, %struct.GPR* %23452, i32 0, i32 33
  %23454 = getelementptr inbounds %struct.Reg, %struct.Reg* %23453, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %23454 to i64*
  %23455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23456 = getelementptr inbounds %struct.GPR, %struct.GPR* %23455, i32 0, i32 1
  %23457 = getelementptr inbounds %struct.Reg, %struct.Reg* %23456, i32 0, i32 0
  %RAX.i238 = bitcast %union.anon* %23457 to i64*
  %23458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23459 = getelementptr inbounds %struct.GPR, %struct.GPR* %23458, i32 0, i32 5
  %23460 = getelementptr inbounds %struct.Reg, %struct.Reg* %23459, i32 0, i32 0
  %RCX.i239 = bitcast %union.anon* %23460 to i64*
  %23461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23462 = getelementptr inbounds %struct.GPR, %struct.GPR* %23461, i32 0, i32 15
  %23463 = getelementptr inbounds %struct.Reg, %struct.Reg* %23462, i32 0, i32 0
  %RBP.i240 = bitcast %union.anon* %23463 to i64*
  %23464 = load i64, i64* %RCX.i239
  %23465 = load i64, i64* %RBP.i240
  %23466 = load i64, i64* %RAX.i238
  %23467 = mul i64 %23466, 4
  %23468 = add i64 %23465, -80
  %23469 = add i64 %23468, %23467
  %23470 = load i64, i64* %PC.i237
  %23471 = add i64 %23470, 4
  store i64 %23471, i64* %PC.i237
  %23472 = trunc i64 %23464 to i32
  %23473 = inttoptr i64 %23469 to i32*
  %23474 = load i32, i32* %23473
  %23475 = sub i32 %23472, %23474
  %23476 = zext i32 %23475 to i64
  store i64 %23476, i64* %RCX.i239, align 8
  %23477 = icmp ult i32 %23472, %23474
  %23478 = zext i1 %23477 to i8
  %23479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23478, i8* %23479, align 1
  %23480 = and i32 %23475, 255
  %23481 = call i32 @llvm.ctpop.i32(i32 %23480)
  %23482 = trunc i32 %23481 to i8
  %23483 = and i8 %23482, 1
  %23484 = xor i8 %23483, 1
  %23485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23484, i8* %23485, align 1
  %23486 = xor i32 %23474, %23472
  %23487 = xor i32 %23486, %23475
  %23488 = lshr i32 %23487, 4
  %23489 = trunc i32 %23488 to i8
  %23490 = and i8 %23489, 1
  %23491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23490, i8* %23491, align 1
  %23492 = icmp eq i32 %23475, 0
  %23493 = zext i1 %23492 to i8
  %23494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23493, i8* %23494, align 1
  %23495 = lshr i32 %23475, 31
  %23496 = trunc i32 %23495 to i8
  %23497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23496, i8* %23497, align 1
  %23498 = lshr i32 %23472, 31
  %23499 = lshr i32 %23474, 31
  %23500 = xor i32 %23499, %23498
  %23501 = xor i32 %23495, %23498
  %23502 = add i32 %23501, %23500
  %23503 = icmp eq i32 %23502, 2
  %23504 = zext i1 %23503 to i8
  %23505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23504, i8* %23505, align 1
  store %struct.Memory* %loadMem_4072e7, %struct.Memory** %MEMORY
  %loadMem_4072eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %23506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23507 = getelementptr inbounds %struct.GPR, %struct.GPR* %23506, i32 0, i32 33
  %23508 = getelementptr inbounds %struct.Reg, %struct.Reg* %23507, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %23508 to i64*
  %23509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23510 = getelementptr inbounds %struct.GPR, %struct.GPR* %23509, i32 0, i32 5
  %23511 = getelementptr inbounds %struct.Reg, %struct.Reg* %23510, i32 0, i32 0
  %RCX.i236 = bitcast %union.anon* %23511 to i64*
  %23512 = load i64, i64* %RCX.i236
  %23513 = load i64, i64* %PC.i235
  %23514 = add i64 %23513, 3
  store i64 %23514, i64* %PC.i235
  %23515 = trunc i64 %23512 to i32
  %23516 = add i32 32, %23515
  %23517 = zext i32 %23516 to i64
  store i64 %23517, i64* %RCX.i236, align 8
  %23518 = icmp ult i32 %23516, %23515
  %23519 = icmp ult i32 %23516, 32
  %23520 = or i1 %23518, %23519
  %23521 = zext i1 %23520 to i8
  %23522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23521, i8* %23522, align 1
  %23523 = and i32 %23516, 255
  %23524 = call i32 @llvm.ctpop.i32(i32 %23523)
  %23525 = trunc i32 %23524 to i8
  %23526 = and i8 %23525, 1
  %23527 = xor i8 %23526, 1
  %23528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23527, i8* %23528, align 1
  %23529 = xor i64 32, %23512
  %23530 = trunc i64 %23529 to i32
  %23531 = xor i32 %23530, %23516
  %23532 = lshr i32 %23531, 4
  %23533 = trunc i32 %23532 to i8
  %23534 = and i8 %23533, 1
  %23535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23534, i8* %23535, align 1
  %23536 = icmp eq i32 %23516, 0
  %23537 = zext i1 %23536 to i8
  %23538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23537, i8* %23538, align 1
  %23539 = lshr i32 %23516, 31
  %23540 = trunc i32 %23539 to i8
  %23541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23540, i8* %23541, align 1
  %23542 = lshr i32 %23515, 31
  %23543 = xor i32 %23539, %23542
  %23544 = add i32 %23543, %23539
  %23545 = icmp eq i32 %23544, 2
  %23546 = zext i1 %23545 to i8
  %23547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23546, i8* %23547, align 1
  store %struct.Memory* %loadMem_4072eb, %struct.Memory** %MEMORY
  %loadMem_4072ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %23548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23549 = getelementptr inbounds %struct.GPR, %struct.GPR* %23548, i32 0, i32 33
  %23550 = getelementptr inbounds %struct.Reg, %struct.Reg* %23549, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %23550 to i64*
  %23551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23552 = getelementptr inbounds %struct.GPR, %struct.GPR* %23551, i32 0, i32 5
  %23553 = getelementptr inbounds %struct.Reg, %struct.Reg* %23552, i32 0, i32 0
  %RCX.i234 = bitcast %union.anon* %23553 to i64*
  %23554 = load i64, i64* %RCX.i234
  %23555 = load i64, i64* %PC.i233
  %23556 = add i64 %23555, 3
  store i64 %23556, i64* %PC.i233
  %23557 = shl i64 %23554, 32
  %23558 = ashr exact i64 %23557, 32
  %23559 = ashr i64 %23558, 5
  %23560 = lshr i64 %23559, 1
  %23561 = trunc i64 %23559 to i8
  %23562 = and i8 %23561, 1
  %23563 = trunc i64 %23560 to i32
  %23564 = and i64 %23560, 4294967295
  store i64 %23564, i64* %RCX.i234, align 8
  %23565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23562, i8* %23565, align 1
  %23566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23567 = and i32 %23563, 255
  %23568 = call i32 @llvm.ctpop.i32(i32 %23567)
  %23569 = trunc i32 %23568 to i8
  %23570 = and i8 %23569, 1
  %23571 = xor i8 %23570, 1
  store i8 %23571, i8* %23566, align 1
  %23572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23572, align 1
  %23573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23574 = icmp eq i32 %23563, 0
  %23575 = zext i1 %23574 to i8
  store i8 %23575, i8* %23573, align 1
  %23576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23577 = lshr i32 %23563, 31
  %23578 = trunc i32 %23577 to i8
  store i8 %23578, i8* %23576, align 1
  %23579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23579, align 1
  store %struct.Memory* %loadMem_4072ee, %struct.Memory** %MEMORY
  %loadMem_4072f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23581 = getelementptr inbounds %struct.GPR, %struct.GPR* %23580, i32 0, i32 33
  %23582 = getelementptr inbounds %struct.Reg, %struct.Reg* %23581, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %23582 to i64*
  %23583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23584 = getelementptr inbounds %struct.GPR, %struct.GPR* %23583, i32 0, i32 1
  %23585 = getelementptr inbounds %struct.Reg, %struct.Reg* %23584, i32 0, i32 0
  %RAX.i232 = bitcast %union.anon* %23585 to i64*
  %23586 = load i64, i64* %PC.i231
  %23587 = add i64 %23586, 8
  store i64 %23587, i64* %PC.i231
  %23588 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %23588, i64* %RAX.i232, align 8
  store %struct.Memory* %loadMem_4072f1, %struct.Memory** %MEMORY
  %loadMem_4072f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23590 = getelementptr inbounds %struct.GPR, %struct.GPR* %23589, i32 0, i32 33
  %23591 = getelementptr inbounds %struct.Reg, %struct.Reg* %23590, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %23591 to i64*
  %23592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23593 = getelementptr inbounds %struct.GPR, %struct.GPR* %23592, i32 0, i32 1
  %23594 = getelementptr inbounds %struct.Reg, %struct.Reg* %23593, i32 0, i32 0
  %RAX.i230 = bitcast %union.anon* %23594 to i64*
  %23595 = load i64, i64* %RAX.i230
  %23596 = load i64, i64* %PC.i229
  %23597 = add i64 %23596, 6
  store i64 %23597, i64* %PC.i229
  %23598 = add i64 13112, %23595
  store i64 %23598, i64* %RAX.i230, align 8
  %23599 = icmp ult i64 %23598, %23595
  %23600 = icmp ult i64 %23598, 13112
  %23601 = or i1 %23599, %23600
  %23602 = zext i1 %23601 to i8
  %23603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23602, i8* %23603, align 1
  %23604 = trunc i64 %23598 to i32
  %23605 = and i32 %23604, 255
  %23606 = call i32 @llvm.ctpop.i32(i32 %23605)
  %23607 = trunc i32 %23606 to i8
  %23608 = and i8 %23607, 1
  %23609 = xor i8 %23608, 1
  %23610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23609, i8* %23610, align 1
  %23611 = xor i64 13112, %23595
  %23612 = xor i64 %23611, %23598
  %23613 = lshr i64 %23612, 4
  %23614 = trunc i64 %23613 to i8
  %23615 = and i8 %23614, 1
  %23616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23615, i8* %23616, align 1
  %23617 = icmp eq i64 %23598, 0
  %23618 = zext i1 %23617 to i8
  %23619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23618, i8* %23619, align 1
  %23620 = lshr i64 %23598, 63
  %23621 = trunc i64 %23620 to i8
  %23622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23621, i8* %23622, align 1
  %23623 = lshr i64 %23595, 63
  %23624 = xor i64 %23620, %23623
  %23625 = add i64 %23624, %23620
  %23626 = icmp eq i64 %23625, 2
  %23627 = zext i1 %23626 to i8
  %23628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23627, i8* %23628, align 1
  store %struct.Memory* %loadMem_4072f9, %struct.Memory** %MEMORY
  %loadMem_4072ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %23629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23630 = getelementptr inbounds %struct.GPR, %struct.GPR* %23629, i32 0, i32 33
  %23631 = getelementptr inbounds %struct.Reg, %struct.Reg* %23630, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %23631 to i64*
  %23632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23633 = getelementptr inbounds %struct.GPR, %struct.GPR* %23632, i32 0, i32 7
  %23634 = getelementptr inbounds %struct.Reg, %struct.Reg* %23633, i32 0, i32 0
  %RDX.i227 = bitcast %union.anon* %23634 to i64*
  %23635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23636 = getelementptr inbounds %struct.GPR, %struct.GPR* %23635, i32 0, i32 15
  %23637 = getelementptr inbounds %struct.Reg, %struct.Reg* %23636, i32 0, i32 0
  %RBP.i228 = bitcast %union.anon* %23637 to i64*
  %23638 = load i64, i64* %RBP.i228
  %23639 = sub i64 %23638, 24
  %23640 = load i64, i64* %PC.i226
  %23641 = add i64 %23640, 4
  store i64 %23641, i64* %PC.i226
  %23642 = inttoptr i64 %23639 to i32*
  %23643 = load i32, i32* %23642
  %23644 = sext i32 %23643 to i64
  store i64 %23644, i64* %RDX.i227, align 8
  store %struct.Memory* %loadMem_4072ff, %struct.Memory** %MEMORY
  %loadMem_407303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23646 = getelementptr inbounds %struct.GPR, %struct.GPR* %23645, i32 0, i32 33
  %23647 = getelementptr inbounds %struct.Reg, %struct.Reg* %23646, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %23647 to i64*
  %23648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23649 = getelementptr inbounds %struct.GPR, %struct.GPR* %23648, i32 0, i32 7
  %23650 = getelementptr inbounds %struct.Reg, %struct.Reg* %23649, i32 0, i32 0
  %RDX.i225 = bitcast %union.anon* %23650 to i64*
  %23651 = load i64, i64* %RDX.i225
  %23652 = load i64, i64* %PC.i224
  %23653 = add i64 %23652, 4
  store i64 %23653, i64* %PC.i224
  %23654 = shl i64 %23651, 5
  %23655 = icmp slt i64 %23654, 0
  %23656 = shl i64 %23654, 1
  store i64 %23656, i64* %RDX.i225, align 8
  %23657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %23658 = zext i1 %23655 to i8
  store i8 %23658, i8* %23657, align 1
  %23659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23660 = trunc i64 %23656 to i32
  %23661 = and i32 %23660, 254
  %23662 = call i32 @llvm.ctpop.i32(i32 %23661)
  %23663 = trunc i32 %23662 to i8
  %23664 = and i8 %23663, 1
  %23665 = xor i8 %23664, 1
  store i8 %23665, i8* %23659, align 1
  %23666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23666, align 1
  %23667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23668 = icmp eq i64 %23656, 0
  %23669 = zext i1 %23668 to i8
  store i8 %23669, i8* %23667, align 1
  %23670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23671 = lshr i64 %23656, 63
  %23672 = trunc i64 %23671 to i8
  store i8 %23672, i8* %23670, align 1
  %23673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23673, align 1
  store %struct.Memory* %loadMem_407303, %struct.Memory** %MEMORY
  %loadMem_407307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23675 = getelementptr inbounds %struct.GPR, %struct.GPR* %23674, i32 0, i32 33
  %23676 = getelementptr inbounds %struct.Reg, %struct.Reg* %23675, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %23676 to i64*
  %23677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23678 = getelementptr inbounds %struct.GPR, %struct.GPR* %23677, i32 0, i32 1
  %23679 = getelementptr inbounds %struct.Reg, %struct.Reg* %23678, i32 0, i32 0
  %RAX.i222 = bitcast %union.anon* %23679 to i64*
  %23680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23681 = getelementptr inbounds %struct.GPR, %struct.GPR* %23680, i32 0, i32 7
  %23682 = getelementptr inbounds %struct.Reg, %struct.Reg* %23681, i32 0, i32 0
  %RDX.i223 = bitcast %union.anon* %23682 to i64*
  %23683 = load i64, i64* %RAX.i222
  %23684 = load i64, i64* %RDX.i223
  %23685 = load i64, i64* %PC.i221
  %23686 = add i64 %23685, 3
  store i64 %23686, i64* %PC.i221
  %23687 = add i64 %23684, %23683
  store i64 %23687, i64* %RAX.i222, align 8
  %23688 = icmp ult i64 %23687, %23683
  %23689 = icmp ult i64 %23687, %23684
  %23690 = or i1 %23688, %23689
  %23691 = zext i1 %23690 to i8
  %23692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23691, i8* %23692, align 1
  %23693 = trunc i64 %23687 to i32
  %23694 = and i32 %23693, 255
  %23695 = call i32 @llvm.ctpop.i32(i32 %23694)
  %23696 = trunc i32 %23695 to i8
  %23697 = and i8 %23696, 1
  %23698 = xor i8 %23697, 1
  %23699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23698, i8* %23699, align 1
  %23700 = xor i64 %23684, %23683
  %23701 = xor i64 %23700, %23687
  %23702 = lshr i64 %23701, 4
  %23703 = trunc i64 %23702 to i8
  %23704 = and i8 %23703, 1
  %23705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23704, i8* %23705, align 1
  %23706 = icmp eq i64 %23687, 0
  %23707 = zext i1 %23706 to i8
  %23708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23707, i8* %23708, align 1
  %23709 = lshr i64 %23687, 63
  %23710 = trunc i64 %23709 to i8
  %23711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23710, i8* %23711, align 1
  %23712 = lshr i64 %23683, 63
  %23713 = lshr i64 %23684, 63
  %23714 = xor i64 %23709, %23712
  %23715 = xor i64 %23709, %23713
  %23716 = add i64 %23714, %23715
  %23717 = icmp eq i64 %23716, 2
  %23718 = zext i1 %23717 to i8
  %23719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23718, i8* %23719, align 1
  store %struct.Memory* %loadMem_407307, %struct.Memory** %MEMORY
  %loadMem_40730a = load %struct.Memory*, %struct.Memory** %MEMORY
  %23720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23721 = getelementptr inbounds %struct.GPR, %struct.GPR* %23720, i32 0, i32 33
  %23722 = getelementptr inbounds %struct.Reg, %struct.Reg* %23721, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %23722 to i64*
  %23723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23724 = getelementptr inbounds %struct.GPR, %struct.GPR* %23723, i32 0, i32 7
  %23725 = getelementptr inbounds %struct.Reg, %struct.Reg* %23724, i32 0, i32 0
  %RDX.i219 = bitcast %union.anon* %23725 to i64*
  %23726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23727 = getelementptr inbounds %struct.GPR, %struct.GPR* %23726, i32 0, i32 15
  %23728 = getelementptr inbounds %struct.Reg, %struct.Reg* %23727, i32 0, i32 0
  %RBP.i220 = bitcast %union.anon* %23728 to i64*
  %23729 = load i64, i64* %RBP.i220
  %23730 = sub i64 %23729, 36
  %23731 = load i64, i64* %PC.i218
  %23732 = add i64 %23731, 4
  store i64 %23732, i64* %PC.i218
  %23733 = inttoptr i64 %23730 to i32*
  %23734 = load i32, i32* %23733
  %23735 = sext i32 %23734 to i64
  store i64 %23735, i64* %RDX.i219, align 8
  store %struct.Memory* %loadMem_40730a, %struct.Memory** %MEMORY
  %loadMem_40730e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23737 = getelementptr inbounds %struct.GPR, %struct.GPR* %23736, i32 0, i32 33
  %23738 = getelementptr inbounds %struct.Reg, %struct.Reg* %23737, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %23738 to i64*
  %23739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23740 = getelementptr inbounds %struct.GPR, %struct.GPR* %23739, i32 0, i32 5
  %23741 = getelementptr inbounds %struct.Reg, %struct.Reg* %23740, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %23741 to i32*
  %23742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23743 = getelementptr inbounds %struct.GPR, %struct.GPR* %23742, i32 0, i32 1
  %23744 = getelementptr inbounds %struct.Reg, %struct.Reg* %23743, i32 0, i32 0
  %RAX.i216 = bitcast %union.anon* %23744 to i64*
  %23745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23746 = getelementptr inbounds %struct.GPR, %struct.GPR* %23745, i32 0, i32 7
  %23747 = getelementptr inbounds %struct.Reg, %struct.Reg* %23746, i32 0, i32 0
  %RDX.i217 = bitcast %union.anon* %23747 to i64*
  %23748 = load i64, i64* %RAX.i216
  %23749 = load i64, i64* %RDX.i217
  %23750 = mul i64 %23749, 4
  %23751 = add i64 %23750, %23748
  %23752 = load i32, i32* %ECX.i
  %23753 = zext i32 %23752 to i64
  %23754 = load i64, i64* %PC.i215
  %23755 = add i64 %23754, 3
  store i64 %23755, i64* %PC.i215
  %23756 = inttoptr i64 %23751 to i32*
  store i32 %23752, i32* %23756
  store %struct.Memory* %loadMem_40730e, %struct.Memory** %MEMORY
  br label %block_.L_407311

block_.L_407311:                                  ; preds = %block_.L_4072a5, %block_407240
  %loadMem_407311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23758 = getelementptr inbounds %struct.GPR, %struct.GPR* %23757, i32 0, i32 33
  %23759 = getelementptr inbounds %struct.Reg, %struct.Reg* %23758, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %23759 to i64*
  %23760 = load i64, i64* %PC.i214
  %23761 = add i64 %23760, 5
  %23762 = load i64, i64* %PC.i214
  %23763 = add i64 %23762, 5
  store i64 %23763, i64* %PC.i214
  %23764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23761, i64* %23764, align 8
  store %struct.Memory* %loadMem_407311, %struct.Memory** %MEMORY
  br label %block_.L_407316

block_.L_407316:                                  ; preds = %block_.L_407311, %block_.L_407205
  %loadMem_407316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23766 = getelementptr inbounds %struct.GPR, %struct.GPR* %23765, i32 0, i32 33
  %23767 = getelementptr inbounds %struct.Reg, %struct.Reg* %23766, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %23767 to i64*
  %23768 = load i64, i64* %PC.i213
  %23769 = add i64 %23768, 5
  %23770 = load i64, i64* %PC.i213
  %23771 = add i64 %23770, 5
  store i64 %23771, i64* %PC.i213
  %23772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23769, i64* %23772, align 8
  store %struct.Memory* %loadMem_407316, %struct.Memory** %MEMORY
  br label %block_.L_40731b

block_.L_40731b:                                  ; preds = %block_.L_407316
  %loadMem_40731b = load %struct.Memory*, %struct.Memory** %MEMORY
  %23773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23774 = getelementptr inbounds %struct.GPR, %struct.GPR* %23773, i32 0, i32 33
  %23775 = getelementptr inbounds %struct.Reg, %struct.Reg* %23774, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %23775 to i64*
  %23776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23777 = getelementptr inbounds %struct.GPR, %struct.GPR* %23776, i32 0, i32 1
  %23778 = getelementptr inbounds %struct.Reg, %struct.Reg* %23777, i32 0, i32 0
  %RAX.i211 = bitcast %union.anon* %23778 to i64*
  %23779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23780 = getelementptr inbounds %struct.GPR, %struct.GPR* %23779, i32 0, i32 15
  %23781 = getelementptr inbounds %struct.Reg, %struct.Reg* %23780, i32 0, i32 0
  %RBP.i212 = bitcast %union.anon* %23781 to i64*
  %23782 = load i64, i64* %RBP.i212
  %23783 = sub i64 %23782, 28
  %23784 = load i64, i64* %PC.i210
  %23785 = add i64 %23784, 3
  store i64 %23785, i64* %PC.i210
  %23786 = inttoptr i64 %23783 to i32*
  %23787 = load i32, i32* %23786
  %23788 = zext i32 %23787 to i64
  store i64 %23788, i64* %RAX.i211, align 8
  store %struct.Memory* %loadMem_40731b, %struct.Memory** %MEMORY
  %loadMem_40731e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23790 = getelementptr inbounds %struct.GPR, %struct.GPR* %23789, i32 0, i32 33
  %23791 = getelementptr inbounds %struct.Reg, %struct.Reg* %23790, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %23791 to i64*
  %23792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23793 = getelementptr inbounds %struct.GPR, %struct.GPR* %23792, i32 0, i32 1
  %23794 = getelementptr inbounds %struct.Reg, %struct.Reg* %23793, i32 0, i32 0
  %RAX.i209 = bitcast %union.anon* %23794 to i64*
  %23795 = load i64, i64* %RAX.i209
  %23796 = load i64, i64* %PC.i208
  %23797 = add i64 %23796, 3
  store i64 %23797, i64* %PC.i208
  %23798 = trunc i64 %23795 to i32
  %23799 = add i32 1, %23798
  %23800 = zext i32 %23799 to i64
  store i64 %23800, i64* %RAX.i209, align 8
  %23801 = icmp ult i32 %23799, %23798
  %23802 = icmp ult i32 %23799, 1
  %23803 = or i1 %23801, %23802
  %23804 = zext i1 %23803 to i8
  %23805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23804, i8* %23805, align 1
  %23806 = and i32 %23799, 255
  %23807 = call i32 @llvm.ctpop.i32(i32 %23806)
  %23808 = trunc i32 %23807 to i8
  %23809 = and i8 %23808, 1
  %23810 = xor i8 %23809, 1
  %23811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23810, i8* %23811, align 1
  %23812 = xor i64 1, %23795
  %23813 = trunc i64 %23812 to i32
  %23814 = xor i32 %23813, %23799
  %23815 = lshr i32 %23814, 4
  %23816 = trunc i32 %23815 to i8
  %23817 = and i8 %23816, 1
  %23818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23817, i8* %23818, align 1
  %23819 = icmp eq i32 %23799, 0
  %23820 = zext i1 %23819 to i8
  %23821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23820, i8* %23821, align 1
  %23822 = lshr i32 %23799, 31
  %23823 = trunc i32 %23822 to i8
  %23824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23823, i8* %23824, align 1
  %23825 = lshr i32 %23798, 31
  %23826 = xor i32 %23822, %23825
  %23827 = add i32 %23826, %23822
  %23828 = icmp eq i32 %23827, 2
  %23829 = zext i1 %23828 to i8
  %23830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23829, i8* %23830, align 1
  store %struct.Memory* %loadMem_40731e, %struct.Memory** %MEMORY
  %loadMem_407321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23832 = getelementptr inbounds %struct.GPR, %struct.GPR* %23831, i32 0, i32 33
  %23833 = getelementptr inbounds %struct.Reg, %struct.Reg* %23832, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %23833 to i64*
  %23834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23835 = getelementptr inbounds %struct.GPR, %struct.GPR* %23834, i32 0, i32 1
  %23836 = getelementptr inbounds %struct.Reg, %struct.Reg* %23835, i32 0, i32 0
  %EAX.i206 = bitcast %union.anon* %23836 to i32*
  %23837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23838 = getelementptr inbounds %struct.GPR, %struct.GPR* %23837, i32 0, i32 15
  %23839 = getelementptr inbounds %struct.Reg, %struct.Reg* %23838, i32 0, i32 0
  %RBP.i207 = bitcast %union.anon* %23839 to i64*
  %23840 = load i64, i64* %RBP.i207
  %23841 = sub i64 %23840, 28
  %23842 = load i32, i32* %EAX.i206
  %23843 = zext i32 %23842 to i64
  %23844 = load i64, i64* %PC.i205
  %23845 = add i64 %23844, 3
  store i64 %23845, i64* %PC.i205
  %23846 = inttoptr i64 %23841 to i32*
  store i32 %23842, i32* %23846
  store %struct.Memory* %loadMem_407321, %struct.Memory** %MEMORY
  %loadMem_407324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23848 = getelementptr inbounds %struct.GPR, %struct.GPR* %23847, i32 0, i32 33
  %23849 = getelementptr inbounds %struct.Reg, %struct.Reg* %23848, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %23849 to i64*
  %23850 = load i64, i64* %PC.i204
  %23851 = add i64 %23850, -1328
  %23852 = load i64, i64* %PC.i204
  %23853 = add i64 %23852, 5
  store i64 %23853, i64* %PC.i204
  %23854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23851, i64* %23854, align 8
  store %struct.Memory* %loadMem_407324, %struct.Memory** %MEMORY
  br label %block_.L_406df4

block_.L_407329:                                  ; preds = %block_.L_406df4
  %loadMem_407329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23856 = getelementptr inbounds %struct.GPR, %struct.GPR* %23855, i32 0, i32 33
  %23857 = getelementptr inbounds %struct.Reg, %struct.Reg* %23856, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %23857 to i64*
  %23858 = load i64, i64* %PC.i203
  %23859 = add i64 %23858, 5
  %23860 = load i64, i64* %PC.i203
  %23861 = add i64 %23860, 5
  store i64 %23861, i64* %PC.i203
  %23862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23859, i64* %23862, align 8
  store %struct.Memory* %loadMem_407329, %struct.Memory** %MEMORY
  br label %block_.L_40732e

block_.L_40732e:                                  ; preds = %block_.L_407329
  %loadMem_40732e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23864 = getelementptr inbounds %struct.GPR, %struct.GPR* %23863, i32 0, i32 33
  %23865 = getelementptr inbounds %struct.Reg, %struct.Reg* %23864, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %23865 to i64*
  %23866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23867 = getelementptr inbounds %struct.GPR, %struct.GPR* %23866, i32 0, i32 1
  %23868 = getelementptr inbounds %struct.Reg, %struct.Reg* %23867, i32 0, i32 0
  %RAX.i201 = bitcast %union.anon* %23868 to i64*
  %23869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23870 = getelementptr inbounds %struct.GPR, %struct.GPR* %23869, i32 0, i32 15
  %23871 = getelementptr inbounds %struct.Reg, %struct.Reg* %23870, i32 0, i32 0
  %RBP.i202 = bitcast %union.anon* %23871 to i64*
  %23872 = load i64, i64* %RBP.i202
  %23873 = sub i64 %23872, 24
  %23874 = load i64, i64* %PC.i200
  %23875 = add i64 %23874, 3
  store i64 %23875, i64* %PC.i200
  %23876 = inttoptr i64 %23873 to i32*
  %23877 = load i32, i32* %23876
  %23878 = zext i32 %23877 to i64
  store i64 %23878, i64* %RAX.i201, align 8
  store %struct.Memory* %loadMem_40732e, %struct.Memory** %MEMORY
  %loadMem_407331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23880 = getelementptr inbounds %struct.GPR, %struct.GPR* %23879, i32 0, i32 33
  %23881 = getelementptr inbounds %struct.Reg, %struct.Reg* %23880, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %23881 to i64*
  %23882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23883 = getelementptr inbounds %struct.GPR, %struct.GPR* %23882, i32 0, i32 1
  %23884 = getelementptr inbounds %struct.Reg, %struct.Reg* %23883, i32 0, i32 0
  %RAX.i199 = bitcast %union.anon* %23884 to i64*
  %23885 = load i64, i64* %RAX.i199
  %23886 = load i64, i64* %PC.i198
  %23887 = add i64 %23886, 3
  store i64 %23887, i64* %PC.i198
  %23888 = trunc i64 %23885 to i32
  %23889 = add i32 1, %23888
  %23890 = zext i32 %23889 to i64
  store i64 %23890, i64* %RAX.i199, align 8
  %23891 = icmp ult i32 %23889, %23888
  %23892 = icmp ult i32 %23889, 1
  %23893 = or i1 %23891, %23892
  %23894 = zext i1 %23893 to i8
  %23895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23894, i8* %23895, align 1
  %23896 = and i32 %23889, 255
  %23897 = call i32 @llvm.ctpop.i32(i32 %23896)
  %23898 = trunc i32 %23897 to i8
  %23899 = and i8 %23898, 1
  %23900 = xor i8 %23899, 1
  %23901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23900, i8* %23901, align 1
  %23902 = xor i64 1, %23885
  %23903 = trunc i64 %23902 to i32
  %23904 = xor i32 %23903, %23889
  %23905 = lshr i32 %23904, 4
  %23906 = trunc i32 %23905 to i8
  %23907 = and i8 %23906, 1
  %23908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23907, i8* %23908, align 1
  %23909 = icmp eq i32 %23889, 0
  %23910 = zext i1 %23909 to i8
  %23911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23910, i8* %23911, align 1
  %23912 = lshr i32 %23889, 31
  %23913 = trunc i32 %23912 to i8
  %23914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23913, i8* %23914, align 1
  %23915 = lshr i32 %23888, 31
  %23916 = xor i32 %23912, %23915
  %23917 = add i32 %23916, %23912
  %23918 = icmp eq i32 %23917, 2
  %23919 = zext i1 %23918 to i8
  %23920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23919, i8* %23920, align 1
  store %struct.Memory* %loadMem_407331, %struct.Memory** %MEMORY
  %loadMem_407334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23922 = getelementptr inbounds %struct.GPR, %struct.GPR* %23921, i32 0, i32 33
  %23923 = getelementptr inbounds %struct.Reg, %struct.Reg* %23922, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %23923 to i64*
  %23924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23925 = getelementptr inbounds %struct.GPR, %struct.GPR* %23924, i32 0, i32 1
  %23926 = getelementptr inbounds %struct.Reg, %struct.Reg* %23925, i32 0, i32 0
  %EAX.i196 = bitcast %union.anon* %23926 to i32*
  %23927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23928 = getelementptr inbounds %struct.GPR, %struct.GPR* %23927, i32 0, i32 15
  %23929 = getelementptr inbounds %struct.Reg, %struct.Reg* %23928, i32 0, i32 0
  %RBP.i197 = bitcast %union.anon* %23929 to i64*
  %23930 = load i64, i64* %RBP.i197
  %23931 = sub i64 %23930, 24
  %23932 = load i32, i32* %EAX.i196
  %23933 = zext i32 %23932 to i64
  %23934 = load i64, i64* %PC.i195
  %23935 = add i64 %23934, 3
  store i64 %23935, i64* %PC.i195
  %23936 = inttoptr i64 %23931 to i32*
  store i32 %23932, i32* %23936
  store %struct.Memory* %loadMem_407334, %struct.Memory** %MEMORY
  %loadMem_407337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23938 = getelementptr inbounds %struct.GPR, %struct.GPR* %23937, i32 0, i32 33
  %23939 = getelementptr inbounds %struct.Reg, %struct.Reg* %23938, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %23939 to i64*
  %23940 = load i64, i64* %PC.i194
  %23941 = add i64 %23940, -1526
  %23942 = load i64, i64* %PC.i194
  %23943 = add i64 %23942, 5
  store i64 %23943, i64* %PC.i194
  %23944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23941, i64* %23944, align 8
  store %struct.Memory* %loadMem_407337, %struct.Memory** %MEMORY
  br label %block_.L_406d41

block_.L_40733c:                                  ; preds = %block_406d75
  %loadMem_40733c = load %struct.Memory*, %struct.Memory** %MEMORY
  %23945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23946 = getelementptr inbounds %struct.GPR, %struct.GPR* %23945, i32 0, i32 33
  %23947 = getelementptr inbounds %struct.Reg, %struct.Reg* %23946, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %23947 to i64*
  %23948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23949 = getelementptr inbounds %struct.GPR, %struct.GPR* %23948, i32 0, i32 1
  %23950 = getelementptr inbounds %struct.Reg, %struct.Reg* %23949, i32 0, i32 0
  %RAX.i193 = bitcast %union.anon* %23950 to i64*
  %23951 = load i64, i64* %PC.i192
  %23952 = add i64 %23951, 8
  store i64 %23952, i64* %PC.i192
  %23953 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %23953, i64* %RAX.i193, align 8
  store %struct.Memory* %loadMem_40733c, %struct.Memory** %MEMORY
  %loadMem_407344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23955 = getelementptr inbounds %struct.GPR, %struct.GPR* %23954, i32 0, i32 33
  %23956 = getelementptr inbounds %struct.Reg, %struct.Reg* %23955, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %23956 to i64*
  %23957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23958 = getelementptr inbounds %struct.GPR, %struct.GPR* %23957, i32 0, i32 1
  %23959 = getelementptr inbounds %struct.Reg, %struct.Reg* %23958, i32 0, i32 0
  %RAX.i191 = bitcast %union.anon* %23959 to i64*
  %23960 = load i64, i64* %RAX.i191
  %23961 = add i64 %23960, 72724
  %23962 = load i64, i64* %PC.i190
  %23963 = add i64 %23962, 7
  store i64 %23963, i64* %PC.i190
  %23964 = inttoptr i64 %23961 to i32*
  %23965 = load i32, i32* %23964
  %23966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %23966, align 1
  %23967 = and i32 %23965, 255
  %23968 = call i32 @llvm.ctpop.i32(i32 %23967)
  %23969 = trunc i32 %23968 to i8
  %23970 = and i8 %23969, 1
  %23971 = xor i8 %23970, 1
  %23972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23971, i8* %23972, align 1
  %23973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23973, align 1
  %23974 = icmp eq i32 %23965, 0
  %23975 = zext i1 %23974 to i8
  %23976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23975, i8* %23976, align 1
  %23977 = lshr i32 %23965, 31
  %23978 = trunc i32 %23977 to i8
  %23979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23978, i8* %23979, align 1
  %23980 = lshr i32 %23965, 31
  %23981 = xor i32 %23977, %23980
  %23982 = add i32 %23981, %23980
  %23983 = icmp eq i32 %23982, 2
  %23984 = zext i1 %23983 to i8
  %23985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23984, i8* %23985, align 1
  store %struct.Memory* %loadMem_407344, %struct.Memory** %MEMORY
  %loadMem_40734b = load %struct.Memory*, %struct.Memory** %MEMORY
  %23986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23987 = getelementptr inbounds %struct.GPR, %struct.GPR* %23986, i32 0, i32 33
  %23988 = getelementptr inbounds %struct.Reg, %struct.Reg* %23987, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %23988 to i64*
  %23989 = load i64, i64* %PC.i189
  %23990 = add i64 %23989, 354
  %23991 = load i64, i64* %PC.i189
  %23992 = add i64 %23991, 6
  %23993 = load i64, i64* %PC.i189
  %23994 = add i64 %23993, 6
  store i64 %23994, i64* %PC.i189
  %23995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23996 = load i8, i8* %23995, align 1
  %23997 = icmp eq i8 %23996, 0
  %23998 = zext i1 %23997 to i8
  store i8 %23998, i8* %BRANCH_TAKEN, align 1
  %23999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24000 = select i1 %23997, i64 %23990, i64 %23992
  store i64 %24000, i64* %23999, align 8
  store %struct.Memory* %loadMem_40734b, %struct.Memory** %MEMORY
  %loadBr_40734b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40734b = icmp eq i8 %loadBr_40734b, 1
  br i1 %cmpBr_40734b, label %block_.L_4074ad, label %block_407351

block_407351:                                     ; preds = %block_.L_40733c
  %loadMem_407351 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24002 = getelementptr inbounds %struct.GPR, %struct.GPR* %24001, i32 0, i32 33
  %24003 = getelementptr inbounds %struct.Reg, %struct.Reg* %24002, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %24003 to i64*
  %24004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24005 = getelementptr inbounds %struct.GPR, %struct.GPR* %24004, i32 0, i32 15
  %24006 = getelementptr inbounds %struct.Reg, %struct.Reg* %24005, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %24006 to i64*
  %24007 = load i64, i64* %RBP.i188
  %24008 = sub i64 %24007, 28
  %24009 = load i64, i64* %PC.i187
  %24010 = add i64 %24009, 7
  store i64 %24010, i64* %PC.i187
  %24011 = inttoptr i64 %24008 to i32*
  store i32 0, i32* %24011
  store %struct.Memory* %loadMem_407351, %struct.Memory** %MEMORY
  br label %block_.L_407358

block_.L_407358:                                  ; preds = %block_.L_40749a, %block_407351
  %loadMem_407358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24013 = getelementptr inbounds %struct.GPR, %struct.GPR* %24012, i32 0, i32 33
  %24014 = getelementptr inbounds %struct.Reg, %struct.Reg* %24013, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %24014 to i64*
  %24015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24016 = getelementptr inbounds %struct.GPR, %struct.GPR* %24015, i32 0, i32 15
  %24017 = getelementptr inbounds %struct.Reg, %struct.Reg* %24016, i32 0, i32 0
  %RBP.i186 = bitcast %union.anon* %24017 to i64*
  %24018 = load i64, i64* %RBP.i186
  %24019 = sub i64 %24018, 28
  %24020 = load i64, i64* %PC.i185
  %24021 = add i64 %24020, 4
  store i64 %24021, i64* %PC.i185
  %24022 = inttoptr i64 %24019 to i32*
  %24023 = load i32, i32* %24022
  %24024 = sub i32 %24023, 4
  %24025 = icmp ult i32 %24023, 4
  %24026 = zext i1 %24025 to i8
  %24027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24026, i8* %24027, align 1
  %24028 = and i32 %24024, 255
  %24029 = call i32 @llvm.ctpop.i32(i32 %24028)
  %24030 = trunc i32 %24029 to i8
  %24031 = and i8 %24030, 1
  %24032 = xor i8 %24031, 1
  %24033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24032, i8* %24033, align 1
  %24034 = xor i32 %24023, 4
  %24035 = xor i32 %24034, %24024
  %24036 = lshr i32 %24035, 4
  %24037 = trunc i32 %24036 to i8
  %24038 = and i8 %24037, 1
  %24039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24038, i8* %24039, align 1
  %24040 = icmp eq i32 %24024, 0
  %24041 = zext i1 %24040 to i8
  %24042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24041, i8* %24042, align 1
  %24043 = lshr i32 %24024, 31
  %24044 = trunc i32 %24043 to i8
  %24045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24044, i8* %24045, align 1
  %24046 = lshr i32 %24023, 31
  %24047 = xor i32 %24043, %24046
  %24048 = add i32 %24047, %24046
  %24049 = icmp eq i32 %24048, 2
  %24050 = zext i1 %24049 to i8
  %24051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24050, i8* %24051, align 1
  store %struct.Memory* %loadMem_407358, %struct.Memory** %MEMORY
  %loadMem_40735c = load %struct.Memory*, %struct.Memory** %MEMORY
  %24052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24053 = getelementptr inbounds %struct.GPR, %struct.GPR* %24052, i32 0, i32 33
  %24054 = getelementptr inbounds %struct.Reg, %struct.Reg* %24053, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %24054 to i64*
  %24055 = load i64, i64* %PC.i184
  %24056 = add i64 %24055, 332
  %24057 = load i64, i64* %PC.i184
  %24058 = add i64 %24057, 6
  %24059 = load i64, i64* %PC.i184
  %24060 = add i64 %24059, 6
  store i64 %24060, i64* %PC.i184
  %24061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24062 = load i8, i8* %24061, align 1
  %24063 = icmp ne i8 %24062, 0
  %24064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %24065 = load i8, i8* %24064, align 1
  %24066 = icmp ne i8 %24065, 0
  %24067 = xor i1 %24063, %24066
  %24068 = xor i1 %24067, true
  %24069 = zext i1 %24068 to i8
  store i8 %24069, i8* %BRANCH_TAKEN, align 1
  %24070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24071 = select i1 %24067, i64 %24058, i64 %24056
  store i64 %24071, i64* %24070, align 8
  store %struct.Memory* %loadMem_40735c, %struct.Memory** %MEMORY
  %loadBr_40735c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40735c = icmp eq i8 %loadBr_40735c, 1
  br i1 %cmpBr_40735c, label %block_.L_4074a8, label %block_407362

block_407362:                                     ; preds = %block_.L_407358
  %loadMem_407362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24073 = getelementptr inbounds %struct.GPR, %struct.GPR* %24072, i32 0, i32 33
  %24074 = getelementptr inbounds %struct.Reg, %struct.Reg* %24073, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %24074 to i64*
  %24075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24076 = getelementptr inbounds %struct.GPR, %struct.GPR* %24075, i32 0, i32 15
  %24077 = getelementptr inbounds %struct.Reg, %struct.Reg* %24076, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %24077 to i64*
  %24078 = load i64, i64* %RBP.i183
  %24079 = sub i64 %24078, 24
  %24080 = load i64, i64* %PC.i182
  %24081 = add i64 %24080, 7
  store i64 %24081, i64* %PC.i182
  %24082 = inttoptr i64 %24079 to i32*
  store i32 0, i32* %24082
  store %struct.Memory* %loadMem_407362, %struct.Memory** %MEMORY
  br label %block_.L_407369

block_.L_407369:                                  ; preds = %block_.L_407487, %block_407362
  %loadMem_407369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24084 = getelementptr inbounds %struct.GPR, %struct.GPR* %24083, i32 0, i32 33
  %24085 = getelementptr inbounds %struct.Reg, %struct.Reg* %24084, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %24085 to i64*
  %24086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24087 = getelementptr inbounds %struct.GPR, %struct.GPR* %24086, i32 0, i32 15
  %24088 = getelementptr inbounds %struct.Reg, %struct.Reg* %24087, i32 0, i32 0
  %RBP.i181 = bitcast %union.anon* %24088 to i64*
  %24089 = load i64, i64* %RBP.i181
  %24090 = sub i64 %24089, 24
  %24091 = load i64, i64* %PC.i180
  %24092 = add i64 %24091, 4
  store i64 %24092, i64* %PC.i180
  %24093 = inttoptr i64 %24090 to i32*
  %24094 = load i32, i32* %24093
  %24095 = sub i32 %24094, 4
  %24096 = icmp ult i32 %24094, 4
  %24097 = zext i1 %24096 to i8
  %24098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24097, i8* %24098, align 1
  %24099 = and i32 %24095, 255
  %24100 = call i32 @llvm.ctpop.i32(i32 %24099)
  %24101 = trunc i32 %24100 to i8
  %24102 = and i8 %24101, 1
  %24103 = xor i8 %24102, 1
  %24104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24103, i8* %24104, align 1
  %24105 = xor i32 %24094, 4
  %24106 = xor i32 %24105, %24095
  %24107 = lshr i32 %24106, 4
  %24108 = trunc i32 %24107 to i8
  %24109 = and i8 %24108, 1
  %24110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24109, i8* %24110, align 1
  %24111 = icmp eq i32 %24095, 0
  %24112 = zext i1 %24111 to i8
  %24113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24112, i8* %24113, align 1
  %24114 = lshr i32 %24095, 31
  %24115 = trunc i32 %24114 to i8
  %24116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24115, i8* %24116, align 1
  %24117 = lshr i32 %24094, 31
  %24118 = xor i32 %24114, %24117
  %24119 = add i32 %24118, %24117
  %24120 = icmp eq i32 %24119, 2
  %24121 = zext i1 %24120 to i8
  %24122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24121, i8* %24122, align 1
  store %struct.Memory* %loadMem_407369, %struct.Memory** %MEMORY
  %loadMem_40736d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24124 = getelementptr inbounds %struct.GPR, %struct.GPR* %24123, i32 0, i32 33
  %24125 = getelementptr inbounds %struct.Reg, %struct.Reg* %24124, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %24125 to i64*
  %24126 = load i64, i64* %PC.i179
  %24127 = add i64 %24126, 296
  %24128 = load i64, i64* %PC.i179
  %24129 = add i64 %24128, 6
  %24130 = load i64, i64* %PC.i179
  %24131 = add i64 %24130, 6
  store i64 %24131, i64* %PC.i179
  %24132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24133 = load i8, i8* %24132, align 1
  %24134 = icmp ne i8 %24133, 0
  %24135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %24136 = load i8, i8* %24135, align 1
  %24137 = icmp ne i8 %24136, 0
  %24138 = xor i1 %24134, %24137
  %24139 = xor i1 %24138, true
  %24140 = zext i1 %24139 to i8
  store i8 %24140, i8* %BRANCH_TAKEN, align 1
  %24141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24142 = select i1 %24138, i64 %24129, i64 %24127
  store i64 %24142, i64* %24141, align 8
  store %struct.Memory* %loadMem_40736d, %struct.Memory** %MEMORY
  %loadBr_40736d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40736d = icmp eq i8 %loadBr_40736d, 1
  br i1 %cmpBr_40736d, label %block_.L_407495, label %block_407373

block_407373:                                     ; preds = %block_.L_407369
  %loadMem_407373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24144 = getelementptr inbounds %struct.GPR, %struct.GPR* %24143, i32 0, i32 33
  %24145 = getelementptr inbounds %struct.Reg, %struct.Reg* %24144, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %24145 to i64*
  %24146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24147 = getelementptr inbounds %struct.GPR, %struct.GPR* %24146, i32 0, i32 15
  %24148 = getelementptr inbounds %struct.Reg, %struct.Reg* %24147, i32 0, i32 0
  %RBP.i178 = bitcast %union.anon* %24148 to i64*
  %24149 = load i64, i64* %RBP.i178
  %24150 = sub i64 %24149, 156
  %24151 = load i64, i64* %PC.i177
  %24152 = add i64 %24151, 7
  store i64 %24152, i64* %PC.i177
  %24153 = inttoptr i64 %24150 to i32*
  %24154 = load i32, i32* %24153
  %24155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %24155, align 1
  %24156 = and i32 %24154, 255
  %24157 = call i32 @llvm.ctpop.i32(i32 %24156)
  %24158 = trunc i32 %24157 to i8
  %24159 = and i8 %24158, 1
  %24160 = xor i8 %24159, 1
  %24161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24160, i8* %24161, align 1
  %24162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24162, align 1
  %24163 = icmp eq i32 %24154, 0
  %24164 = zext i1 %24163 to i8
  %24165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24164, i8* %24165, align 1
  %24166 = lshr i32 %24154, 31
  %24167 = trunc i32 %24166 to i8
  %24168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24167, i8* %24168, align 1
  %24169 = lshr i32 %24154, 31
  %24170 = xor i32 %24166, %24169
  %24171 = add i32 %24170, %24169
  %24172 = icmp eq i32 %24171, 2
  %24173 = zext i1 %24172 to i8
  %24174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24173, i8* %24174, align 1
  store %struct.Memory* %loadMem_407373, %struct.Memory** %MEMORY
  %loadMem_40737a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24176 = getelementptr inbounds %struct.GPR, %struct.GPR* %24175, i32 0, i32 33
  %24177 = getelementptr inbounds %struct.Reg, %struct.Reg* %24176, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %24177 to i64*
  %24178 = load i64, i64* %PC.i176
  %24179 = add i64 %24178, 160
  %24180 = load i64, i64* %PC.i176
  %24181 = add i64 %24180, 6
  %24182 = load i64, i64* %PC.i176
  %24183 = add i64 %24182, 6
  store i64 %24183, i64* %PC.i176
  %24184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24185 = load i8, i8* %24184, align 1
  store i8 %24185, i8* %BRANCH_TAKEN, align 1
  %24186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24187 = icmp ne i8 %24185, 0
  %24188 = select i1 %24187, i64 %24179, i64 %24181
  store i64 %24188, i64* %24186, align 8
  store %struct.Memory* %loadMem_40737a, %struct.Memory** %MEMORY
  %loadBr_40737a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40737a = icmp eq i8 %loadBr_40737a, 1
  br i1 %cmpBr_40737a, label %block_.L_40741a, label %block_407380

block_407380:                                     ; preds = %block_407373
  %loadMem_407380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24190 = getelementptr inbounds %struct.GPR, %struct.GPR* %24189, i32 0, i32 33
  %24191 = getelementptr inbounds %struct.Reg, %struct.Reg* %24190, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %24191 to i64*
  %24192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24193 = getelementptr inbounds %struct.GPR, %struct.GPR* %24192, i32 0, i32 1
  %24194 = getelementptr inbounds %struct.Reg, %struct.Reg* %24193, i32 0, i32 0
  %RAX.i175 = bitcast %union.anon* %24194 to i64*
  %24195 = load i64, i64* %PC.i174
  %24196 = add i64 %24195, 8
  store i64 %24196, i64* %PC.i174
  %24197 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %24197, i64* %RAX.i175, align 8
  store %struct.Memory* %loadMem_407380, %struct.Memory** %MEMORY
  %loadMem_407388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24199 = getelementptr inbounds %struct.GPR, %struct.GPR* %24198, i32 0, i32 33
  %24200 = getelementptr inbounds %struct.Reg, %struct.Reg* %24199, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %24200 to i64*
  %24201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24202 = getelementptr inbounds %struct.GPR, %struct.GPR* %24201, i32 0, i32 1
  %24203 = getelementptr inbounds %struct.Reg, %struct.Reg* %24202, i32 0, i32 0
  %RAX.i173 = bitcast %union.anon* %24203 to i64*
  %24204 = load i64, i64* %RAX.i173
  %24205 = load i64, i64* %PC.i172
  %24206 = add i64 %24205, 6
  store i64 %24206, i64* %PC.i172
  %24207 = add i64 13112, %24204
  store i64 %24207, i64* %RAX.i173, align 8
  %24208 = icmp ult i64 %24207, %24204
  %24209 = icmp ult i64 %24207, 13112
  %24210 = or i1 %24208, %24209
  %24211 = zext i1 %24210 to i8
  %24212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24211, i8* %24212, align 1
  %24213 = trunc i64 %24207 to i32
  %24214 = and i32 %24213, 255
  %24215 = call i32 @llvm.ctpop.i32(i32 %24214)
  %24216 = trunc i32 %24215 to i8
  %24217 = and i8 %24216, 1
  %24218 = xor i8 %24217, 1
  %24219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24218, i8* %24219, align 1
  %24220 = xor i64 13112, %24204
  %24221 = xor i64 %24220, %24207
  %24222 = lshr i64 %24221, 4
  %24223 = trunc i64 %24222 to i8
  %24224 = and i8 %24223, 1
  %24225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24224, i8* %24225, align 1
  %24226 = icmp eq i64 %24207, 0
  %24227 = zext i1 %24226 to i8
  %24228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24227, i8* %24228, align 1
  %24229 = lshr i64 %24207, 63
  %24230 = trunc i64 %24229 to i8
  %24231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24230, i8* %24231, align 1
  %24232 = lshr i64 %24204, 63
  %24233 = xor i64 %24229, %24232
  %24234 = add i64 %24233, %24229
  %24235 = icmp eq i64 %24234, 2
  %24236 = zext i1 %24235 to i8
  %24237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24236, i8* %24237, align 1
  store %struct.Memory* %loadMem_407388, %struct.Memory** %MEMORY
  %loadMem_40738e = load %struct.Memory*, %struct.Memory** %MEMORY
  %24238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24239 = getelementptr inbounds %struct.GPR, %struct.GPR* %24238, i32 0, i32 33
  %24240 = getelementptr inbounds %struct.Reg, %struct.Reg* %24239, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %24240 to i64*
  %24241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24242 = getelementptr inbounds %struct.GPR, %struct.GPR* %24241, i32 0, i32 5
  %24243 = getelementptr inbounds %struct.Reg, %struct.Reg* %24242, i32 0, i32 0
  %RCX.i170 = bitcast %union.anon* %24243 to i64*
  %24244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24245 = getelementptr inbounds %struct.GPR, %struct.GPR* %24244, i32 0, i32 15
  %24246 = getelementptr inbounds %struct.Reg, %struct.Reg* %24245, i32 0, i32 0
  %RBP.i171 = bitcast %union.anon* %24246 to i64*
  %24247 = load i64, i64* %RBP.i171
  %24248 = sub i64 %24247, 24
  %24249 = load i64, i64* %PC.i169
  %24250 = add i64 %24249, 4
  store i64 %24250, i64* %PC.i169
  %24251 = inttoptr i64 %24248 to i32*
  %24252 = load i32, i32* %24251
  %24253 = sext i32 %24252 to i64
  store i64 %24253, i64* %RCX.i170, align 8
  store %struct.Memory* %loadMem_40738e, %struct.Memory** %MEMORY
  %loadMem_407392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24255 = getelementptr inbounds %struct.GPR, %struct.GPR* %24254, i32 0, i32 33
  %24256 = getelementptr inbounds %struct.Reg, %struct.Reg* %24255, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %24256 to i64*
  %24257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24258 = getelementptr inbounds %struct.GPR, %struct.GPR* %24257, i32 0, i32 5
  %24259 = getelementptr inbounds %struct.Reg, %struct.Reg* %24258, i32 0, i32 0
  %RCX.i168 = bitcast %union.anon* %24259 to i64*
  %24260 = load i64, i64* %RCX.i168
  %24261 = load i64, i64* %PC.i167
  %24262 = add i64 %24261, 4
  store i64 %24262, i64* %PC.i167
  %24263 = shl i64 %24260, 5
  %24264 = icmp slt i64 %24263, 0
  %24265 = shl i64 %24263, 1
  store i64 %24265, i64* %RCX.i168, align 8
  %24266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %24267 = zext i1 %24264 to i8
  store i8 %24267, i8* %24266, align 1
  %24268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %24269 = trunc i64 %24265 to i32
  %24270 = and i32 %24269, 254
  %24271 = call i32 @llvm.ctpop.i32(i32 %24270)
  %24272 = trunc i32 %24271 to i8
  %24273 = and i8 %24272, 1
  %24274 = xor i8 %24273, 1
  store i8 %24274, i8* %24268, align 1
  %24275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24275, align 1
  %24276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24277 = icmp eq i64 %24265, 0
  %24278 = zext i1 %24277 to i8
  store i8 %24278, i8* %24276, align 1
  %24279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24280 = lshr i64 %24265, 63
  %24281 = trunc i64 %24280 to i8
  store i8 %24281, i8* %24279, align 1
  %24282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24282, align 1
  store %struct.Memory* %loadMem_407392, %struct.Memory** %MEMORY
  %loadMem_407396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24284 = getelementptr inbounds %struct.GPR, %struct.GPR* %24283, i32 0, i32 33
  %24285 = getelementptr inbounds %struct.Reg, %struct.Reg* %24284, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %24285 to i64*
  %24286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24287 = getelementptr inbounds %struct.GPR, %struct.GPR* %24286, i32 0, i32 1
  %24288 = getelementptr inbounds %struct.Reg, %struct.Reg* %24287, i32 0, i32 0
  %RAX.i165 = bitcast %union.anon* %24288 to i64*
  %24289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24290 = getelementptr inbounds %struct.GPR, %struct.GPR* %24289, i32 0, i32 5
  %24291 = getelementptr inbounds %struct.Reg, %struct.Reg* %24290, i32 0, i32 0
  %RCX.i166 = bitcast %union.anon* %24291 to i64*
  %24292 = load i64, i64* %RAX.i165
  %24293 = load i64, i64* %RCX.i166
  %24294 = load i64, i64* %PC.i164
  %24295 = add i64 %24294, 3
  store i64 %24295, i64* %PC.i164
  %24296 = add i64 %24293, %24292
  store i64 %24296, i64* %RAX.i165, align 8
  %24297 = icmp ult i64 %24296, %24292
  %24298 = icmp ult i64 %24296, %24293
  %24299 = or i1 %24297, %24298
  %24300 = zext i1 %24299 to i8
  %24301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24300, i8* %24301, align 1
  %24302 = trunc i64 %24296 to i32
  %24303 = and i32 %24302, 255
  %24304 = call i32 @llvm.ctpop.i32(i32 %24303)
  %24305 = trunc i32 %24304 to i8
  %24306 = and i8 %24305, 1
  %24307 = xor i8 %24306, 1
  %24308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24307, i8* %24308, align 1
  %24309 = xor i64 %24293, %24292
  %24310 = xor i64 %24309, %24296
  %24311 = lshr i64 %24310, 4
  %24312 = trunc i64 %24311 to i8
  %24313 = and i8 %24312, 1
  %24314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24313, i8* %24314, align 1
  %24315 = icmp eq i64 %24296, 0
  %24316 = zext i1 %24315 to i8
  %24317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24316, i8* %24317, align 1
  %24318 = lshr i64 %24296, 63
  %24319 = trunc i64 %24318 to i8
  %24320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24319, i8* %24320, align 1
  %24321 = lshr i64 %24292, 63
  %24322 = lshr i64 %24293, 63
  %24323 = xor i64 %24318, %24321
  %24324 = xor i64 %24318, %24322
  %24325 = add i64 %24323, %24324
  %24326 = icmp eq i64 %24325, 2
  %24327 = zext i1 %24326 to i8
  %24328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24327, i8* %24328, align 1
  store %struct.Memory* %loadMem_407396, %struct.Memory** %MEMORY
  %loadMem_407399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24330 = getelementptr inbounds %struct.GPR, %struct.GPR* %24329, i32 0, i32 33
  %24331 = getelementptr inbounds %struct.Reg, %struct.Reg* %24330, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %24331 to i64*
  %24332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24333 = getelementptr inbounds %struct.GPR, %struct.GPR* %24332, i32 0, i32 5
  %24334 = getelementptr inbounds %struct.Reg, %struct.Reg* %24333, i32 0, i32 0
  %RCX.i162 = bitcast %union.anon* %24334 to i64*
  %24335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24336 = getelementptr inbounds %struct.GPR, %struct.GPR* %24335, i32 0, i32 15
  %24337 = getelementptr inbounds %struct.Reg, %struct.Reg* %24336, i32 0, i32 0
  %RBP.i163 = bitcast %union.anon* %24337 to i64*
  %24338 = load i64, i64* %RBP.i163
  %24339 = sub i64 %24338, 28
  %24340 = load i64, i64* %PC.i161
  %24341 = add i64 %24340, 4
  store i64 %24341, i64* %PC.i161
  %24342 = inttoptr i64 %24339 to i32*
  %24343 = load i32, i32* %24342
  %24344 = sext i32 %24343 to i64
  store i64 %24344, i64* %RCX.i162, align 8
  store %struct.Memory* %loadMem_407399, %struct.Memory** %MEMORY
  %loadMem_40739d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24346 = getelementptr inbounds %struct.GPR, %struct.GPR* %24345, i32 0, i32 33
  %24347 = getelementptr inbounds %struct.Reg, %struct.Reg* %24346, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %24347 to i64*
  %24348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24349 = getelementptr inbounds %struct.GPR, %struct.GPR* %24348, i32 0, i32 1
  %24350 = getelementptr inbounds %struct.Reg, %struct.Reg* %24349, i32 0, i32 0
  %RAX.i158 = bitcast %union.anon* %24350 to i64*
  %24351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24352 = getelementptr inbounds %struct.GPR, %struct.GPR* %24351, i32 0, i32 5
  %24353 = getelementptr inbounds %struct.Reg, %struct.Reg* %24352, i32 0, i32 0
  %RCX.i159 = bitcast %union.anon* %24353 to i64*
  %24354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24355 = getelementptr inbounds %struct.GPR, %struct.GPR* %24354, i32 0, i32 7
  %24356 = getelementptr inbounds %struct.Reg, %struct.Reg* %24355, i32 0, i32 0
  %RDX.i160 = bitcast %union.anon* %24356 to i64*
  %24357 = load i64, i64* %RAX.i158
  %24358 = load i64, i64* %RCX.i159
  %24359 = mul i64 %24358, 4
  %24360 = add i64 %24359, %24357
  %24361 = load i64, i64* %PC.i157
  %24362 = add i64 %24361, 3
  store i64 %24362, i64* %PC.i157
  %24363 = inttoptr i64 %24360 to i32*
  %24364 = load i32, i32* %24363
  %24365 = zext i32 %24364 to i64
  store i64 %24365, i64* %RDX.i160, align 8
  store %struct.Memory* %loadMem_40739d, %struct.Memory** %MEMORY
  %loadMem_4073a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24367 = getelementptr inbounds %struct.GPR, %struct.GPR* %24366, i32 0, i32 33
  %24368 = getelementptr inbounds %struct.Reg, %struct.Reg* %24367, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %24368 to i64*
  %24369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24370 = getelementptr inbounds %struct.GPR, %struct.GPR* %24369, i32 0, i32 1
  %24371 = getelementptr inbounds %struct.Reg, %struct.Reg* %24370, i32 0, i32 0
  %RAX.i156 = bitcast %union.anon* %24371 to i64*
  %24372 = load i64, i64* %PC.i155
  %24373 = add i64 %24372, 8
  store i64 %24373, i64* %PC.i155
  %24374 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %24374, i64* %RAX.i156, align 8
  store %struct.Memory* %loadMem_4073a0, %struct.Memory** %MEMORY
  %loadMem_4073a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24376 = getelementptr inbounds %struct.GPR, %struct.GPR* %24375, i32 0, i32 33
  %24377 = getelementptr inbounds %struct.Reg, %struct.Reg* %24376, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %24377 to i64*
  %24378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24379 = getelementptr inbounds %struct.GPR, %struct.GPR* %24378, i32 0, i32 1
  %24380 = getelementptr inbounds %struct.Reg, %struct.Reg* %24379, i32 0, i32 0
  %RAX.i154 = bitcast %union.anon* %24380 to i64*
  %24381 = load i64, i64* %RAX.i154
  %24382 = load i64, i64* %PC.i153
  %24383 = add i64 %24382, 6
  store i64 %24383, i64* %PC.i153
  %24384 = add i64 12600, %24381
  store i64 %24384, i64* %RAX.i154, align 8
  %24385 = icmp ult i64 %24384, %24381
  %24386 = icmp ult i64 %24384, 12600
  %24387 = or i1 %24385, %24386
  %24388 = zext i1 %24387 to i8
  %24389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24388, i8* %24389, align 1
  %24390 = trunc i64 %24384 to i32
  %24391 = and i32 %24390, 255
  %24392 = call i32 @llvm.ctpop.i32(i32 %24391)
  %24393 = trunc i32 %24392 to i8
  %24394 = and i8 %24393, 1
  %24395 = xor i8 %24394, 1
  %24396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24395, i8* %24396, align 1
  %24397 = xor i64 12600, %24381
  %24398 = xor i64 %24397, %24384
  %24399 = lshr i64 %24398, 4
  %24400 = trunc i64 %24399 to i8
  %24401 = and i8 %24400, 1
  %24402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24401, i8* %24402, align 1
  %24403 = icmp eq i64 %24384, 0
  %24404 = zext i1 %24403 to i8
  %24405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24404, i8* %24405, align 1
  %24406 = lshr i64 %24384, 63
  %24407 = trunc i64 %24406 to i8
  %24408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24407, i8* %24408, align 1
  %24409 = lshr i64 %24381, 63
  %24410 = xor i64 %24406, %24409
  %24411 = add i64 %24410, %24406
  %24412 = icmp eq i64 %24411, 2
  %24413 = zext i1 %24412 to i8
  %24414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24413, i8* %24414, align 1
  store %struct.Memory* %loadMem_4073a8, %struct.Memory** %MEMORY
  %loadMem_4073ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %24415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24416 = getelementptr inbounds %struct.GPR, %struct.GPR* %24415, i32 0, i32 33
  %24417 = getelementptr inbounds %struct.Reg, %struct.Reg* %24416, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %24417 to i64*
  %24418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24419 = getelementptr inbounds %struct.GPR, %struct.GPR* %24418, i32 0, i32 9
  %24420 = getelementptr inbounds %struct.Reg, %struct.Reg* %24419, i32 0, i32 0
  %RSI.i151 = bitcast %union.anon* %24420 to i64*
  %24421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24422 = getelementptr inbounds %struct.GPR, %struct.GPR* %24421, i32 0, i32 15
  %24423 = getelementptr inbounds %struct.Reg, %struct.Reg* %24422, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %24423 to i64*
  %24424 = load i64, i64* %RBP.i152
  %24425 = sub i64 %24424, 24
  %24426 = load i64, i64* %PC.i150
  %24427 = add i64 %24426, 3
  store i64 %24427, i64* %PC.i150
  %24428 = inttoptr i64 %24425 to i32*
  %24429 = load i32, i32* %24428
  %24430 = zext i32 %24429 to i64
  store i64 %24430, i64* %RSI.i151, align 8
  store %struct.Memory* %loadMem_4073ae, %struct.Memory** %MEMORY
  %loadMem_4073b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24432 = getelementptr inbounds %struct.GPR, %struct.GPR* %24431, i32 0, i32 33
  %24433 = getelementptr inbounds %struct.Reg, %struct.Reg* %24432, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %24433 to i64*
  %24434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24435 = getelementptr inbounds %struct.GPR, %struct.GPR* %24434, i32 0, i32 9
  %24436 = getelementptr inbounds %struct.Reg, %struct.Reg* %24435, i32 0, i32 0
  %RSI.i148 = bitcast %union.anon* %24436 to i64*
  %24437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24438 = getelementptr inbounds %struct.GPR, %struct.GPR* %24437, i32 0, i32 15
  %24439 = getelementptr inbounds %struct.Reg, %struct.Reg* %24438, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %24439 to i64*
  %24440 = load i64, i64* %RSI.i148
  %24441 = load i64, i64* %RBP.i149
  %24442 = sub i64 %24441, 4
  %24443 = load i64, i64* %PC.i147
  %24444 = add i64 %24443, 3
  store i64 %24444, i64* %PC.i147
  %24445 = trunc i64 %24440 to i32
  %24446 = inttoptr i64 %24442 to i32*
  %24447 = load i32, i32* %24446
  %24448 = add i32 %24447, %24445
  %24449 = zext i32 %24448 to i64
  store i64 %24449, i64* %RSI.i148, align 8
  %24450 = icmp ult i32 %24448, %24445
  %24451 = icmp ult i32 %24448, %24447
  %24452 = or i1 %24450, %24451
  %24453 = zext i1 %24452 to i8
  %24454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24453, i8* %24454, align 1
  %24455 = and i32 %24448, 255
  %24456 = call i32 @llvm.ctpop.i32(i32 %24455)
  %24457 = trunc i32 %24456 to i8
  %24458 = and i8 %24457, 1
  %24459 = xor i8 %24458, 1
  %24460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24459, i8* %24460, align 1
  %24461 = xor i32 %24447, %24445
  %24462 = xor i32 %24461, %24448
  %24463 = lshr i32 %24462, 4
  %24464 = trunc i32 %24463 to i8
  %24465 = and i8 %24464, 1
  %24466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24465, i8* %24466, align 1
  %24467 = icmp eq i32 %24448, 0
  %24468 = zext i1 %24467 to i8
  %24469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24468, i8* %24469, align 1
  %24470 = lshr i32 %24448, 31
  %24471 = trunc i32 %24470 to i8
  %24472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24471, i8* %24472, align 1
  %24473 = lshr i32 %24445, 31
  %24474 = lshr i32 %24447, 31
  %24475 = xor i32 %24470, %24473
  %24476 = xor i32 %24470, %24474
  %24477 = add i32 %24475, %24476
  %24478 = icmp eq i32 %24477, 2
  %24479 = zext i1 %24478 to i8
  %24480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24479, i8* %24480, align 1
  store %struct.Memory* %loadMem_4073b1, %struct.Memory** %MEMORY
  %loadMem_4073b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24482 = getelementptr inbounds %struct.GPR, %struct.GPR* %24481, i32 0, i32 33
  %24483 = getelementptr inbounds %struct.Reg, %struct.Reg* %24482, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %24483 to i64*
  %24484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24485 = getelementptr inbounds %struct.GPR, %struct.GPR* %24484, i32 0, i32 9
  %24486 = getelementptr inbounds %struct.Reg, %struct.Reg* %24485, i32 0, i32 0
  %ESI.i145 = bitcast %union.anon* %24486 to i32*
  %24487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24488 = getelementptr inbounds %struct.GPR, %struct.GPR* %24487, i32 0, i32 5
  %24489 = getelementptr inbounds %struct.Reg, %struct.Reg* %24488, i32 0, i32 0
  %RCX.i146 = bitcast %union.anon* %24489 to i64*
  %24490 = load i32, i32* %ESI.i145
  %24491 = zext i32 %24490 to i64
  %24492 = load i64, i64* %PC.i144
  %24493 = add i64 %24492, 3
  store i64 %24493, i64* %PC.i144
  %24494 = shl i64 %24491, 32
  %24495 = ashr exact i64 %24494, 32
  store i64 %24495, i64* %RCX.i146, align 8
  store %struct.Memory* %loadMem_4073b4, %struct.Memory** %MEMORY
  %loadMem_4073b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24497 = getelementptr inbounds %struct.GPR, %struct.GPR* %24496, i32 0, i32 33
  %24498 = getelementptr inbounds %struct.Reg, %struct.Reg* %24497, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %24498 to i64*
  %24499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24500 = getelementptr inbounds %struct.GPR, %struct.GPR* %24499, i32 0, i32 5
  %24501 = getelementptr inbounds %struct.Reg, %struct.Reg* %24500, i32 0, i32 0
  %RCX.i143 = bitcast %union.anon* %24501 to i64*
  %24502 = load i64, i64* %RCX.i143
  %24503 = load i64, i64* %PC.i142
  %24504 = add i64 %24503, 4
  store i64 %24504, i64* %PC.i142
  %24505 = shl i64 %24502, 4
  %24506 = icmp slt i64 %24505, 0
  %24507 = shl i64 %24505, 1
  store i64 %24507, i64* %RCX.i143, align 8
  %24508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %24509 = zext i1 %24506 to i8
  store i8 %24509, i8* %24508, align 1
  %24510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %24511 = trunc i64 %24507 to i32
  %24512 = and i32 %24511, 254
  %24513 = call i32 @llvm.ctpop.i32(i32 %24512)
  %24514 = trunc i32 %24513 to i8
  %24515 = and i8 %24514, 1
  %24516 = xor i8 %24515, 1
  store i8 %24516, i8* %24510, align 1
  %24517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24517, align 1
  %24518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24519 = icmp eq i64 %24507, 0
  %24520 = zext i1 %24519 to i8
  store i8 %24520, i8* %24518, align 1
  %24521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24522 = lshr i64 %24507, 63
  %24523 = trunc i64 %24522 to i8
  store i8 %24523, i8* %24521, align 1
  %24524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24524, align 1
  store %struct.Memory* %loadMem_4073b7, %struct.Memory** %MEMORY
  %loadMem_4073bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %24525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24526 = getelementptr inbounds %struct.GPR, %struct.GPR* %24525, i32 0, i32 33
  %24527 = getelementptr inbounds %struct.Reg, %struct.Reg* %24526, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %24527 to i64*
  %24528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24529 = getelementptr inbounds %struct.GPR, %struct.GPR* %24528, i32 0, i32 1
  %24530 = getelementptr inbounds %struct.Reg, %struct.Reg* %24529, i32 0, i32 0
  %RAX.i140 = bitcast %union.anon* %24530 to i64*
  %24531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24532 = getelementptr inbounds %struct.GPR, %struct.GPR* %24531, i32 0, i32 5
  %24533 = getelementptr inbounds %struct.Reg, %struct.Reg* %24532, i32 0, i32 0
  %RCX.i141 = bitcast %union.anon* %24533 to i64*
  %24534 = load i64, i64* %RAX.i140
  %24535 = load i64, i64* %RCX.i141
  %24536 = load i64, i64* %PC.i139
  %24537 = add i64 %24536, 3
  store i64 %24537, i64* %PC.i139
  %24538 = add i64 %24535, %24534
  store i64 %24538, i64* %RAX.i140, align 8
  %24539 = icmp ult i64 %24538, %24534
  %24540 = icmp ult i64 %24538, %24535
  %24541 = or i1 %24539, %24540
  %24542 = zext i1 %24541 to i8
  %24543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24542, i8* %24543, align 1
  %24544 = trunc i64 %24538 to i32
  %24545 = and i32 %24544, 255
  %24546 = call i32 @llvm.ctpop.i32(i32 %24545)
  %24547 = trunc i32 %24546 to i8
  %24548 = and i8 %24547, 1
  %24549 = xor i8 %24548, 1
  %24550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24549, i8* %24550, align 1
  %24551 = xor i64 %24535, %24534
  %24552 = xor i64 %24551, %24538
  %24553 = lshr i64 %24552, 4
  %24554 = trunc i64 %24553 to i8
  %24555 = and i8 %24554, 1
  %24556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24555, i8* %24556, align 1
  %24557 = icmp eq i64 %24538, 0
  %24558 = zext i1 %24557 to i8
  %24559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24558, i8* %24559, align 1
  %24560 = lshr i64 %24538, 63
  %24561 = trunc i64 %24560 to i8
  %24562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24561, i8* %24562, align 1
  %24563 = lshr i64 %24534, 63
  %24564 = lshr i64 %24535, 63
  %24565 = xor i64 %24560, %24563
  %24566 = xor i64 %24560, %24564
  %24567 = add i64 %24565, %24566
  %24568 = icmp eq i64 %24567, 2
  %24569 = zext i1 %24568 to i8
  %24570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24569, i8* %24570, align 1
  store %struct.Memory* %loadMem_4073bb, %struct.Memory** %MEMORY
  %loadMem_4073be = load %struct.Memory*, %struct.Memory** %MEMORY
  %24571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24572 = getelementptr inbounds %struct.GPR, %struct.GPR* %24571, i32 0, i32 33
  %24573 = getelementptr inbounds %struct.Reg, %struct.Reg* %24572, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %24573 to i64*
  %24574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24575 = getelementptr inbounds %struct.GPR, %struct.GPR* %24574, i32 0, i32 9
  %24576 = getelementptr inbounds %struct.Reg, %struct.Reg* %24575, i32 0, i32 0
  %RSI.i137 = bitcast %union.anon* %24576 to i64*
  %24577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24578 = getelementptr inbounds %struct.GPR, %struct.GPR* %24577, i32 0, i32 15
  %24579 = getelementptr inbounds %struct.Reg, %struct.Reg* %24578, i32 0, i32 0
  %RBP.i138 = bitcast %union.anon* %24579 to i64*
  %24580 = load i64, i64* %RBP.i138
  %24581 = sub i64 %24580, 28
  %24582 = load i64, i64* %PC.i136
  %24583 = add i64 %24582, 3
  store i64 %24583, i64* %PC.i136
  %24584 = inttoptr i64 %24581 to i32*
  %24585 = load i32, i32* %24584
  %24586 = zext i32 %24585 to i64
  store i64 %24586, i64* %RSI.i137, align 8
  store %struct.Memory* %loadMem_4073be, %struct.Memory** %MEMORY
  %loadMem_4073c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24588 = getelementptr inbounds %struct.GPR, %struct.GPR* %24587, i32 0, i32 33
  %24589 = getelementptr inbounds %struct.Reg, %struct.Reg* %24588, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %24589 to i64*
  %24590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24591 = getelementptr inbounds %struct.GPR, %struct.GPR* %24590, i32 0, i32 9
  %24592 = getelementptr inbounds %struct.Reg, %struct.Reg* %24591, i32 0, i32 0
  %RSI.i134 = bitcast %union.anon* %24592 to i64*
  %24593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24594 = getelementptr inbounds %struct.GPR, %struct.GPR* %24593, i32 0, i32 15
  %24595 = getelementptr inbounds %struct.Reg, %struct.Reg* %24594, i32 0, i32 0
  %RBP.i135 = bitcast %union.anon* %24595 to i64*
  %24596 = load i64, i64* %RSI.i134
  %24597 = load i64, i64* %RBP.i135
  %24598 = sub i64 %24597, 8
  %24599 = load i64, i64* %PC.i133
  %24600 = add i64 %24599, 3
  store i64 %24600, i64* %PC.i133
  %24601 = trunc i64 %24596 to i32
  %24602 = inttoptr i64 %24598 to i32*
  %24603 = load i32, i32* %24602
  %24604 = add i32 %24603, %24601
  %24605 = zext i32 %24604 to i64
  store i64 %24605, i64* %RSI.i134, align 8
  %24606 = icmp ult i32 %24604, %24601
  %24607 = icmp ult i32 %24604, %24603
  %24608 = or i1 %24606, %24607
  %24609 = zext i1 %24608 to i8
  %24610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24609, i8* %24610, align 1
  %24611 = and i32 %24604, 255
  %24612 = call i32 @llvm.ctpop.i32(i32 %24611)
  %24613 = trunc i32 %24612 to i8
  %24614 = and i8 %24613, 1
  %24615 = xor i8 %24614, 1
  %24616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24615, i8* %24616, align 1
  %24617 = xor i32 %24603, %24601
  %24618 = xor i32 %24617, %24604
  %24619 = lshr i32 %24618, 4
  %24620 = trunc i32 %24619 to i8
  %24621 = and i8 %24620, 1
  %24622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24621, i8* %24622, align 1
  %24623 = icmp eq i32 %24604, 0
  %24624 = zext i1 %24623 to i8
  %24625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24624, i8* %24625, align 1
  %24626 = lshr i32 %24604, 31
  %24627 = trunc i32 %24626 to i8
  %24628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24627, i8* %24628, align 1
  %24629 = lshr i32 %24601, 31
  %24630 = lshr i32 %24603, 31
  %24631 = xor i32 %24626, %24629
  %24632 = xor i32 %24626, %24630
  %24633 = add i32 %24631, %24632
  %24634 = icmp eq i32 %24633, 2
  %24635 = zext i1 %24634 to i8
  %24636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24635, i8* %24636, align 1
  store %struct.Memory* %loadMem_4073c1, %struct.Memory** %MEMORY
  %loadMem_4073c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24638 = getelementptr inbounds %struct.GPR, %struct.GPR* %24637, i32 0, i32 33
  %24639 = getelementptr inbounds %struct.Reg, %struct.Reg* %24638, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %24639 to i64*
  %24640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24641 = getelementptr inbounds %struct.GPR, %struct.GPR* %24640, i32 0, i32 9
  %24642 = getelementptr inbounds %struct.Reg, %struct.Reg* %24641, i32 0, i32 0
  %ESI.i131 = bitcast %union.anon* %24642 to i32*
  %24643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24644 = getelementptr inbounds %struct.GPR, %struct.GPR* %24643, i32 0, i32 5
  %24645 = getelementptr inbounds %struct.Reg, %struct.Reg* %24644, i32 0, i32 0
  %RCX.i132 = bitcast %union.anon* %24645 to i64*
  %24646 = load i32, i32* %ESI.i131
  %24647 = zext i32 %24646 to i64
  %24648 = load i64, i64* %PC.i130
  %24649 = add i64 %24648, 3
  store i64 %24649, i64* %PC.i130
  %24650 = shl i64 %24647, 32
  %24651 = ashr exact i64 %24650, 32
  store i64 %24651, i64* %RCX.i132, align 8
  store %struct.Memory* %loadMem_4073c4, %struct.Memory** %MEMORY
  %loadMem_4073c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24653 = getelementptr inbounds %struct.GPR, %struct.GPR* %24652, i32 0, i32 33
  %24654 = getelementptr inbounds %struct.Reg, %struct.Reg* %24653, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %24654 to i64*
  %24655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24656 = getelementptr inbounds %struct.GPR, %struct.GPR* %24655, i32 0, i32 1
  %24657 = getelementptr inbounds %struct.Reg, %struct.Reg* %24656, i32 0, i32 0
  %RAX.i128 = bitcast %union.anon* %24657 to i64*
  %24658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24659 = getelementptr inbounds %struct.GPR, %struct.GPR* %24658, i32 0, i32 5
  %24660 = getelementptr inbounds %struct.Reg, %struct.Reg* %24659, i32 0, i32 0
  %RCX.i129 = bitcast %union.anon* %24660 to i64*
  %24661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24662 = getelementptr inbounds %struct.GPR, %struct.GPR* %24661, i32 0, i32 9
  %24663 = getelementptr inbounds %struct.Reg, %struct.Reg* %24662, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %24663 to i64*
  %24664 = load i64, i64* %RAX.i128
  %24665 = load i64, i64* %RCX.i129
  %24666 = mul i64 %24665, 2
  %24667 = add i64 %24666, %24664
  %24668 = load i64, i64* %PC.i127
  %24669 = add i64 %24668, 4
  store i64 %24669, i64* %PC.i127
  %24670 = inttoptr i64 %24667 to i16*
  %24671 = load i16, i16* %24670
  %24672 = zext i16 %24671 to i64
  store i64 %24672, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_4073c7, %struct.Memory** %MEMORY
  %loadMem_4073cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %24673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24674 = getelementptr inbounds %struct.GPR, %struct.GPR* %24673, i32 0, i32 33
  %24675 = getelementptr inbounds %struct.Reg, %struct.Reg* %24674, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %24675 to i64*
  %24676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24677 = getelementptr inbounds %struct.GPR, %struct.GPR* %24676, i32 0, i32 9
  %24678 = getelementptr inbounds %struct.Reg, %struct.Reg* %24677, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %24678 to i32*
  %24679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24680 = getelementptr inbounds %struct.GPR, %struct.GPR* %24679, i32 0, i32 7
  %24681 = getelementptr inbounds %struct.Reg, %struct.Reg* %24680, i32 0, i32 0
  %RDX.i126 = bitcast %union.anon* %24681 to i64*
  %24682 = load i64, i64* %RDX.i126
  %24683 = load i32, i32* %ESI.i
  %24684 = zext i32 %24683 to i64
  %24685 = load i64, i64* %PC.i125
  %24686 = add i64 %24685, 2
  store i64 %24686, i64* %PC.i125
  %24687 = trunc i64 %24682 to i32
  %24688 = add i32 %24683, %24687
  %24689 = zext i32 %24688 to i64
  store i64 %24689, i64* %RDX.i126, align 8
  %24690 = icmp ult i32 %24688, %24687
  %24691 = icmp ult i32 %24688, %24683
  %24692 = or i1 %24690, %24691
  %24693 = zext i1 %24692 to i8
  %24694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24693, i8* %24694, align 1
  %24695 = and i32 %24688, 255
  %24696 = call i32 @llvm.ctpop.i32(i32 %24695)
  %24697 = trunc i32 %24696 to i8
  %24698 = and i8 %24697, 1
  %24699 = xor i8 %24698, 1
  %24700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24699, i8* %24700, align 1
  %24701 = xor i64 %24684, %24682
  %24702 = trunc i64 %24701 to i32
  %24703 = xor i32 %24702, %24688
  %24704 = lshr i32 %24703, 4
  %24705 = trunc i32 %24704 to i8
  %24706 = and i8 %24705, 1
  %24707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24706, i8* %24707, align 1
  %24708 = icmp eq i32 %24688, 0
  %24709 = zext i1 %24708 to i8
  %24710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24709, i8* %24710, align 1
  %24711 = lshr i32 %24688, 31
  %24712 = trunc i32 %24711 to i8
  %24713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24712, i8* %24713, align 1
  %24714 = lshr i32 %24687, 31
  %24715 = lshr i32 %24683, 31
  %24716 = xor i32 %24711, %24714
  %24717 = xor i32 %24711, %24715
  %24718 = add i32 %24716, %24717
  %24719 = icmp eq i32 %24718, 2
  %24720 = zext i1 %24719 to i8
  %24721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24720, i8* %24721, align 1
  store %struct.Memory* %loadMem_4073cb, %struct.Memory** %MEMORY
  %loadMem_4073cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %24722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24723 = getelementptr inbounds %struct.GPR, %struct.GPR* %24722, i32 0, i32 33
  %24724 = getelementptr inbounds %struct.Reg, %struct.Reg* %24723, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %24724 to i64*
  %24725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24726 = getelementptr inbounds %struct.GPR, %struct.GPR* %24725, i32 0, i32 7
  %24727 = getelementptr inbounds %struct.Reg, %struct.Reg* %24726, i32 0, i32 0
  %DX.i123 = bitcast %union.anon* %24727 to i16*
  %24728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24729 = getelementptr inbounds %struct.GPR, %struct.GPR* %24728, i32 0, i32 11
  %24730 = getelementptr inbounds %struct.Reg, %struct.Reg* %24729, i32 0, i32 0
  %DI.i124 = bitcast %union.anon* %24730 to i16*
  %24731 = load i16, i16* %DX.i123
  %24732 = zext i16 %24731 to i64
  %24733 = load i64, i64* %PC.i122
  %24734 = add i64 %24733, 3
  store i64 %24734, i64* %PC.i122
  store i16 %24731, i16* %DI.i124, align 2
  store %struct.Memory* %loadMem_4073cd, %struct.Memory** %MEMORY
  %loadMem_4073d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24736 = getelementptr inbounds %struct.GPR, %struct.GPR* %24735, i32 0, i32 33
  %24737 = getelementptr inbounds %struct.Reg, %struct.Reg* %24736, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %24737 to i64*
  %24738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24739 = getelementptr inbounds %struct.GPR, %struct.GPR* %24738, i32 0, i32 1
  %24740 = getelementptr inbounds %struct.Reg, %struct.Reg* %24739, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %24740 to i64*
  %24741 = load i64, i64* %PC.i120
  %24742 = add i64 %24741, 8
  store i64 %24742, i64* %PC.i120
  %24743 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %24743, i64* %RAX.i121, align 8
  store %struct.Memory* %loadMem_4073d0, %struct.Memory** %MEMORY
  %loadMem_4073d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24745 = getelementptr inbounds %struct.GPR, %struct.GPR* %24744, i32 0, i32 33
  %24746 = getelementptr inbounds %struct.Reg, %struct.Reg* %24745, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %24746 to i64*
  %24747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24748 = getelementptr inbounds %struct.GPR, %struct.GPR* %24747, i32 0, i32 1
  %24749 = getelementptr inbounds %struct.Reg, %struct.Reg* %24748, i32 0, i32 0
  %RAX.i119 = bitcast %union.anon* %24749 to i64*
  %24750 = load i64, i64* %RAX.i119
  %24751 = add i64 %24750, 6424
  %24752 = load i64, i64* %PC.i118
  %24753 = add i64 %24752, 7
  store i64 %24753, i64* %PC.i118
  %24754 = inttoptr i64 %24751 to i64*
  %24755 = load i64, i64* %24754
  store i64 %24755, i64* %RAX.i119, align 8
  store %struct.Memory* %loadMem_4073d8, %struct.Memory** %MEMORY
  %loadMem_4073df = load %struct.Memory*, %struct.Memory** %MEMORY
  %24756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24757 = getelementptr inbounds %struct.GPR, %struct.GPR* %24756, i32 0, i32 33
  %24758 = getelementptr inbounds %struct.Reg, %struct.Reg* %24757, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %24758 to i64*
  %24759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24760 = getelementptr inbounds %struct.GPR, %struct.GPR* %24759, i32 0, i32 5
  %24761 = getelementptr inbounds %struct.Reg, %struct.Reg* %24760, i32 0, i32 0
  %RCX.i117 = bitcast %union.anon* %24761 to i64*
  %24762 = load i64, i64* %PC.i116
  %24763 = add i64 %24762, 8
  store i64 %24763, i64* %PC.i116
  %24764 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %24764, i64* %RCX.i117, align 8
  store %struct.Memory* %loadMem_4073df, %struct.Memory** %MEMORY
  %loadMem_4073e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24766 = getelementptr inbounds %struct.GPR, %struct.GPR* %24765, i32 0, i32 33
  %24767 = getelementptr inbounds %struct.Reg, %struct.Reg* %24766, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %24767 to i64*
  %24768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24769 = getelementptr inbounds %struct.GPR, %struct.GPR* %24768, i32 0, i32 5
  %24770 = getelementptr inbounds %struct.Reg, %struct.Reg* %24769, i32 0, i32 0
  %RCX.i114 = bitcast %union.anon* %24770 to i64*
  %24771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24772 = getelementptr inbounds %struct.GPR, %struct.GPR* %24771, i32 0, i32 7
  %24773 = getelementptr inbounds %struct.Reg, %struct.Reg* %24772, i32 0, i32 0
  %RDX.i115 = bitcast %union.anon* %24773 to i64*
  %24774 = load i64, i64* %RCX.i114
  %24775 = add i64 %24774, 156
  %24776 = load i64, i64* %PC.i113
  %24777 = add i64 %24776, 6
  store i64 %24777, i64* %PC.i113
  %24778 = inttoptr i64 %24775 to i32*
  %24779 = load i32, i32* %24778
  %24780 = zext i32 %24779 to i64
  store i64 %24780, i64* %RDX.i115, align 8
  store %struct.Memory* %loadMem_4073e7, %struct.Memory** %MEMORY
  %loadMem_4073ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %24781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24782 = getelementptr inbounds %struct.GPR, %struct.GPR* %24781, i32 0, i32 33
  %24783 = getelementptr inbounds %struct.Reg, %struct.Reg* %24782, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %24783 to i64*
  %24784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24785 = getelementptr inbounds %struct.GPR, %struct.GPR* %24784, i32 0, i32 7
  %24786 = getelementptr inbounds %struct.Reg, %struct.Reg* %24785, i32 0, i32 0
  %RDX.i111 = bitcast %union.anon* %24786 to i64*
  %24787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24788 = getelementptr inbounds %struct.GPR, %struct.GPR* %24787, i32 0, i32 15
  %24789 = getelementptr inbounds %struct.Reg, %struct.Reg* %24788, i32 0, i32 0
  %RBP.i112 = bitcast %union.anon* %24789 to i64*
  %24790 = load i64, i64* %RDX.i111
  %24791 = load i64, i64* %RBP.i112
  %24792 = sub i64 %24791, 8
  %24793 = load i64, i64* %PC.i110
  %24794 = add i64 %24793, 3
  store i64 %24794, i64* %PC.i110
  %24795 = trunc i64 %24790 to i32
  %24796 = inttoptr i64 %24792 to i32*
  %24797 = load i32, i32* %24796
  %24798 = add i32 %24797, %24795
  %24799 = zext i32 %24798 to i64
  store i64 %24799, i64* %RDX.i111, align 8
  %24800 = icmp ult i32 %24798, %24795
  %24801 = icmp ult i32 %24798, %24797
  %24802 = or i1 %24800, %24801
  %24803 = zext i1 %24802 to i8
  %24804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24803, i8* %24804, align 1
  %24805 = and i32 %24798, 255
  %24806 = call i32 @llvm.ctpop.i32(i32 %24805)
  %24807 = trunc i32 %24806 to i8
  %24808 = and i8 %24807, 1
  %24809 = xor i8 %24808, 1
  %24810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24809, i8* %24810, align 1
  %24811 = xor i32 %24797, %24795
  %24812 = xor i32 %24811, %24798
  %24813 = lshr i32 %24812, 4
  %24814 = trunc i32 %24813 to i8
  %24815 = and i8 %24814, 1
  %24816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24815, i8* %24816, align 1
  %24817 = icmp eq i32 %24798, 0
  %24818 = zext i1 %24817 to i8
  %24819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24818, i8* %24819, align 1
  %24820 = lshr i32 %24798, 31
  %24821 = trunc i32 %24820 to i8
  %24822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24821, i8* %24822, align 1
  %24823 = lshr i32 %24795, 31
  %24824 = lshr i32 %24797, 31
  %24825 = xor i32 %24820, %24823
  %24826 = xor i32 %24820, %24824
  %24827 = add i32 %24825, %24826
  %24828 = icmp eq i32 %24827, 2
  %24829 = zext i1 %24828 to i8
  %24830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24829, i8* %24830, align 1
  store %struct.Memory* %loadMem_4073ed, %struct.Memory** %MEMORY
  %loadMem_4073f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24832 = getelementptr inbounds %struct.GPR, %struct.GPR* %24831, i32 0, i32 33
  %24833 = getelementptr inbounds %struct.Reg, %struct.Reg* %24832, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %24833 to i64*
  %24834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24835 = getelementptr inbounds %struct.GPR, %struct.GPR* %24834, i32 0, i32 7
  %24836 = getelementptr inbounds %struct.Reg, %struct.Reg* %24835, i32 0, i32 0
  %RDX.i108 = bitcast %union.anon* %24836 to i64*
  %24837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24838 = getelementptr inbounds %struct.GPR, %struct.GPR* %24837, i32 0, i32 15
  %24839 = getelementptr inbounds %struct.Reg, %struct.Reg* %24838, i32 0, i32 0
  %RBP.i109 = bitcast %union.anon* %24839 to i64*
  %24840 = load i64, i64* %RDX.i108
  %24841 = load i64, i64* %RBP.i109
  %24842 = sub i64 %24841, 28
  %24843 = load i64, i64* %PC.i107
  %24844 = add i64 %24843, 3
  store i64 %24844, i64* %PC.i107
  %24845 = trunc i64 %24840 to i32
  %24846 = inttoptr i64 %24842 to i32*
  %24847 = load i32, i32* %24846
  %24848 = add i32 %24847, %24845
  %24849 = zext i32 %24848 to i64
  store i64 %24849, i64* %RDX.i108, align 8
  %24850 = icmp ult i32 %24848, %24845
  %24851 = icmp ult i32 %24848, %24847
  %24852 = or i1 %24850, %24851
  %24853 = zext i1 %24852 to i8
  %24854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24853, i8* %24854, align 1
  %24855 = and i32 %24848, 255
  %24856 = call i32 @llvm.ctpop.i32(i32 %24855)
  %24857 = trunc i32 %24856 to i8
  %24858 = and i8 %24857, 1
  %24859 = xor i8 %24858, 1
  %24860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24859, i8* %24860, align 1
  %24861 = xor i32 %24847, %24845
  %24862 = xor i32 %24861, %24848
  %24863 = lshr i32 %24862, 4
  %24864 = trunc i32 %24863 to i8
  %24865 = and i8 %24864, 1
  %24866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24865, i8* %24866, align 1
  %24867 = icmp eq i32 %24848, 0
  %24868 = zext i1 %24867 to i8
  %24869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24868, i8* %24869, align 1
  %24870 = lshr i32 %24848, 31
  %24871 = trunc i32 %24870 to i8
  %24872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24871, i8* %24872, align 1
  %24873 = lshr i32 %24845, 31
  %24874 = lshr i32 %24847, 31
  %24875 = xor i32 %24870, %24873
  %24876 = xor i32 %24870, %24874
  %24877 = add i32 %24875, %24876
  %24878 = icmp eq i32 %24877, 2
  %24879 = zext i1 %24878 to i8
  %24880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24879, i8* %24880, align 1
  store %struct.Memory* %loadMem_4073f0, %struct.Memory** %MEMORY
  %loadMem_4073f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24882 = getelementptr inbounds %struct.GPR, %struct.GPR* %24881, i32 0, i32 33
  %24883 = getelementptr inbounds %struct.Reg, %struct.Reg* %24882, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %24883 to i64*
  %24884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24885 = getelementptr inbounds %struct.GPR, %struct.GPR* %24884, i32 0, i32 7
  %24886 = getelementptr inbounds %struct.Reg, %struct.Reg* %24885, i32 0, i32 0
  %EDX.i105 = bitcast %union.anon* %24886 to i32*
  %24887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24888 = getelementptr inbounds %struct.GPR, %struct.GPR* %24887, i32 0, i32 5
  %24889 = getelementptr inbounds %struct.Reg, %struct.Reg* %24888, i32 0, i32 0
  %RCX.i106 = bitcast %union.anon* %24889 to i64*
  %24890 = load i32, i32* %EDX.i105
  %24891 = zext i32 %24890 to i64
  %24892 = load i64, i64* %PC.i104
  %24893 = add i64 %24892, 3
  store i64 %24893, i64* %PC.i104
  %24894 = shl i64 %24891, 32
  %24895 = ashr exact i64 %24894, 32
  store i64 %24895, i64* %RCX.i106, align 8
  store %struct.Memory* %loadMem_4073f3, %struct.Memory** %MEMORY
  %loadMem_4073f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24897 = getelementptr inbounds %struct.GPR, %struct.GPR* %24896, i32 0, i32 33
  %24898 = getelementptr inbounds %struct.Reg, %struct.Reg* %24897, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %24898 to i64*
  %24899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24900 = getelementptr inbounds %struct.GPR, %struct.GPR* %24899, i32 0, i32 1
  %24901 = getelementptr inbounds %struct.Reg, %struct.Reg* %24900, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %24901 to i64*
  %24902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24903 = getelementptr inbounds %struct.GPR, %struct.GPR* %24902, i32 0, i32 5
  %24904 = getelementptr inbounds %struct.Reg, %struct.Reg* %24903, i32 0, i32 0
  %RCX.i103 = bitcast %union.anon* %24904 to i64*
  %24905 = load i64, i64* %RAX.i102
  %24906 = load i64, i64* %RCX.i103
  %24907 = mul i64 %24906, 8
  %24908 = add i64 %24907, %24905
  %24909 = load i64, i64* %PC.i101
  %24910 = add i64 %24909, 4
  store i64 %24910, i64* %PC.i101
  %24911 = inttoptr i64 %24908 to i64*
  %24912 = load i64, i64* %24911
  store i64 %24912, i64* %RAX.i102, align 8
  store %struct.Memory* %loadMem_4073f6, %struct.Memory** %MEMORY
  %loadMem_4073fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %24913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24914 = getelementptr inbounds %struct.GPR, %struct.GPR* %24913, i32 0, i32 33
  %24915 = getelementptr inbounds %struct.Reg, %struct.Reg* %24914, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %24915 to i64*
  %24916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24917 = getelementptr inbounds %struct.GPR, %struct.GPR* %24916, i32 0, i32 5
  %24918 = getelementptr inbounds %struct.Reg, %struct.Reg* %24917, i32 0, i32 0
  %RCX.i100 = bitcast %union.anon* %24918 to i64*
  %24919 = load i64, i64* %PC.i99
  %24920 = add i64 %24919, 8
  store i64 %24920, i64* %PC.i99
  %24921 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %24921, i64* %RCX.i100, align 8
  store %struct.Memory* %loadMem_4073fa, %struct.Memory** %MEMORY
  %loadMem_407402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24923 = getelementptr inbounds %struct.GPR, %struct.GPR* %24922, i32 0, i32 33
  %24924 = getelementptr inbounds %struct.Reg, %struct.Reg* %24923, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %24924 to i64*
  %24925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24926 = getelementptr inbounds %struct.GPR, %struct.GPR* %24925, i32 0, i32 5
  %24927 = getelementptr inbounds %struct.Reg, %struct.Reg* %24926, i32 0, i32 0
  %RCX.i97 = bitcast %union.anon* %24927 to i64*
  %24928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24929 = getelementptr inbounds %struct.GPR, %struct.GPR* %24928, i32 0, i32 7
  %24930 = getelementptr inbounds %struct.Reg, %struct.Reg* %24929, i32 0, i32 0
  %RDX.i98 = bitcast %union.anon* %24930 to i64*
  %24931 = load i64, i64* %RCX.i97
  %24932 = add i64 %24931, 152
  %24933 = load i64, i64* %PC.i96
  %24934 = add i64 %24933, 6
  store i64 %24934, i64* %PC.i96
  %24935 = inttoptr i64 %24932 to i32*
  %24936 = load i32, i32* %24935
  %24937 = zext i32 %24936 to i64
  store i64 %24937, i64* %RDX.i98, align 8
  store %struct.Memory* %loadMem_407402, %struct.Memory** %MEMORY
  %loadMem_407408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24939 = getelementptr inbounds %struct.GPR, %struct.GPR* %24938, i32 0, i32 33
  %24940 = getelementptr inbounds %struct.Reg, %struct.Reg* %24939, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %24940 to i64*
  %24941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24942 = getelementptr inbounds %struct.GPR, %struct.GPR* %24941, i32 0, i32 7
  %24943 = getelementptr inbounds %struct.Reg, %struct.Reg* %24942, i32 0, i32 0
  %RDX.i94 = bitcast %union.anon* %24943 to i64*
  %24944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24945 = getelementptr inbounds %struct.GPR, %struct.GPR* %24944, i32 0, i32 15
  %24946 = getelementptr inbounds %struct.Reg, %struct.Reg* %24945, i32 0, i32 0
  %RBP.i95 = bitcast %union.anon* %24946 to i64*
  %24947 = load i64, i64* %RDX.i94
  %24948 = load i64, i64* %RBP.i95
  %24949 = sub i64 %24948, 4
  %24950 = load i64, i64* %PC.i93
  %24951 = add i64 %24950, 3
  store i64 %24951, i64* %PC.i93
  %24952 = trunc i64 %24947 to i32
  %24953 = inttoptr i64 %24949 to i32*
  %24954 = load i32, i32* %24953
  %24955 = add i32 %24954, %24952
  %24956 = zext i32 %24955 to i64
  store i64 %24956, i64* %RDX.i94, align 8
  %24957 = icmp ult i32 %24955, %24952
  %24958 = icmp ult i32 %24955, %24954
  %24959 = or i1 %24957, %24958
  %24960 = zext i1 %24959 to i8
  %24961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24960, i8* %24961, align 1
  %24962 = and i32 %24955, 255
  %24963 = call i32 @llvm.ctpop.i32(i32 %24962)
  %24964 = trunc i32 %24963 to i8
  %24965 = and i8 %24964, 1
  %24966 = xor i8 %24965, 1
  %24967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24966, i8* %24967, align 1
  %24968 = xor i32 %24954, %24952
  %24969 = xor i32 %24968, %24955
  %24970 = lshr i32 %24969, 4
  %24971 = trunc i32 %24970 to i8
  %24972 = and i8 %24971, 1
  %24973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24972, i8* %24973, align 1
  %24974 = icmp eq i32 %24955, 0
  %24975 = zext i1 %24974 to i8
  %24976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24975, i8* %24976, align 1
  %24977 = lshr i32 %24955, 31
  %24978 = trunc i32 %24977 to i8
  %24979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24978, i8* %24979, align 1
  %24980 = lshr i32 %24952, 31
  %24981 = lshr i32 %24954, 31
  %24982 = xor i32 %24977, %24980
  %24983 = xor i32 %24977, %24981
  %24984 = add i32 %24982, %24983
  %24985 = icmp eq i32 %24984, 2
  %24986 = zext i1 %24985 to i8
  %24987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24986, i8* %24987, align 1
  store %struct.Memory* %loadMem_407408, %struct.Memory** %MEMORY
  %loadMem_40740b = load %struct.Memory*, %struct.Memory** %MEMORY
  %24988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24989 = getelementptr inbounds %struct.GPR, %struct.GPR* %24988, i32 0, i32 33
  %24990 = getelementptr inbounds %struct.Reg, %struct.Reg* %24989, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %24990 to i64*
  %24991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24992 = getelementptr inbounds %struct.GPR, %struct.GPR* %24991, i32 0, i32 7
  %24993 = getelementptr inbounds %struct.Reg, %struct.Reg* %24992, i32 0, i32 0
  %RDX.i91 = bitcast %union.anon* %24993 to i64*
  %24994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24995 = getelementptr inbounds %struct.GPR, %struct.GPR* %24994, i32 0, i32 15
  %24996 = getelementptr inbounds %struct.Reg, %struct.Reg* %24995, i32 0, i32 0
  %RBP.i92 = bitcast %union.anon* %24996 to i64*
  %24997 = load i64, i64* %RDX.i91
  %24998 = load i64, i64* %RBP.i92
  %24999 = sub i64 %24998, 24
  %25000 = load i64, i64* %PC.i90
  %25001 = add i64 %25000, 3
  store i64 %25001, i64* %PC.i90
  %25002 = trunc i64 %24997 to i32
  %25003 = inttoptr i64 %24999 to i32*
  %25004 = load i32, i32* %25003
  %25005 = add i32 %25004, %25002
  %25006 = zext i32 %25005 to i64
  store i64 %25006, i64* %RDX.i91, align 8
  %25007 = icmp ult i32 %25005, %25002
  %25008 = icmp ult i32 %25005, %25004
  %25009 = or i1 %25007, %25008
  %25010 = zext i1 %25009 to i8
  %25011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25010, i8* %25011, align 1
  %25012 = and i32 %25005, 255
  %25013 = call i32 @llvm.ctpop.i32(i32 %25012)
  %25014 = trunc i32 %25013 to i8
  %25015 = and i8 %25014, 1
  %25016 = xor i8 %25015, 1
  %25017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25016, i8* %25017, align 1
  %25018 = xor i32 %25004, %25002
  %25019 = xor i32 %25018, %25005
  %25020 = lshr i32 %25019, 4
  %25021 = trunc i32 %25020 to i8
  %25022 = and i8 %25021, 1
  %25023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25022, i8* %25023, align 1
  %25024 = icmp eq i32 %25005, 0
  %25025 = zext i1 %25024 to i8
  %25026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25025, i8* %25026, align 1
  %25027 = lshr i32 %25005, 31
  %25028 = trunc i32 %25027 to i8
  %25029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25028, i8* %25029, align 1
  %25030 = lshr i32 %25002, 31
  %25031 = lshr i32 %25004, 31
  %25032 = xor i32 %25027, %25030
  %25033 = xor i32 %25027, %25031
  %25034 = add i32 %25032, %25033
  %25035 = icmp eq i32 %25034, 2
  %25036 = zext i1 %25035 to i8
  %25037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25036, i8* %25037, align 1
  store %struct.Memory* %loadMem_40740b, %struct.Memory** %MEMORY
  %loadMem_40740e = load %struct.Memory*, %struct.Memory** %MEMORY
  %25038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25039 = getelementptr inbounds %struct.GPR, %struct.GPR* %25038, i32 0, i32 33
  %25040 = getelementptr inbounds %struct.Reg, %struct.Reg* %25039, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %25040 to i64*
  %25041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25042 = getelementptr inbounds %struct.GPR, %struct.GPR* %25041, i32 0, i32 7
  %25043 = getelementptr inbounds %struct.Reg, %struct.Reg* %25042, i32 0, i32 0
  %EDX.i88 = bitcast %union.anon* %25043 to i32*
  %25044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25045 = getelementptr inbounds %struct.GPR, %struct.GPR* %25044, i32 0, i32 5
  %25046 = getelementptr inbounds %struct.Reg, %struct.Reg* %25045, i32 0, i32 0
  %RCX.i89 = bitcast %union.anon* %25046 to i64*
  %25047 = load i32, i32* %EDX.i88
  %25048 = zext i32 %25047 to i64
  %25049 = load i64, i64* %PC.i87
  %25050 = add i64 %25049, 3
  store i64 %25050, i64* %PC.i87
  %25051 = shl i64 %25048, 32
  %25052 = ashr exact i64 %25051, 32
  store i64 %25052, i64* %RCX.i89, align 8
  store %struct.Memory* %loadMem_40740e, %struct.Memory** %MEMORY
  %loadMem_407411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25054 = getelementptr inbounds %struct.GPR, %struct.GPR* %25053, i32 0, i32 33
  %25055 = getelementptr inbounds %struct.Reg, %struct.Reg* %25054, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %25055 to i64*
  %25056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25057 = getelementptr inbounds %struct.GPR, %struct.GPR* %25056, i32 0, i32 11
  %25058 = getelementptr inbounds %struct.Reg, %struct.Reg* %25057, i32 0, i32 0
  %DI.i = bitcast %union.anon* %25058 to i16*
  %25059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25060 = getelementptr inbounds %struct.GPR, %struct.GPR* %25059, i32 0, i32 1
  %25061 = getelementptr inbounds %struct.Reg, %struct.Reg* %25060, i32 0, i32 0
  %RAX.i85 = bitcast %union.anon* %25061 to i64*
  %25062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25063 = getelementptr inbounds %struct.GPR, %struct.GPR* %25062, i32 0, i32 5
  %25064 = getelementptr inbounds %struct.Reg, %struct.Reg* %25063, i32 0, i32 0
  %RCX.i86 = bitcast %union.anon* %25064 to i64*
  %25065 = load i64, i64* %RAX.i85
  %25066 = load i64, i64* %RCX.i86
  %25067 = mul i64 %25066, 2
  %25068 = add i64 %25067, %25065
  %25069 = load i16, i16* %DI.i
  %25070 = zext i16 %25069 to i64
  %25071 = load i64, i64* %PC.i84
  %25072 = add i64 %25071, 4
  store i64 %25072, i64* %PC.i84
  %25073 = inttoptr i64 %25068 to i16*
  store i16 %25069, i16* %25073
  store %struct.Memory* %loadMem_407411, %struct.Memory** %MEMORY
  %loadMem_407415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25075 = getelementptr inbounds %struct.GPR, %struct.GPR* %25074, i32 0, i32 33
  %25076 = getelementptr inbounds %struct.Reg, %struct.Reg* %25075, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %25076 to i64*
  %25077 = load i64, i64* %PC.i83
  %25078 = add i64 %25077, 109
  %25079 = load i64, i64* %PC.i83
  %25080 = add i64 %25079, 5
  store i64 %25080, i64* %PC.i83
  %25081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25078, i64* %25081, align 8
  store %struct.Memory* %loadMem_407415, %struct.Memory** %MEMORY
  br label %block_.L_407482

block_.L_40741a:                                  ; preds = %block_407373
  %loadMem_40741a = load %struct.Memory*, %struct.Memory** %MEMORY
  %25082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25083 = getelementptr inbounds %struct.GPR, %struct.GPR* %25082, i32 0, i32 33
  %25084 = getelementptr inbounds %struct.Reg, %struct.Reg* %25083, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %25084 to i64*
  %25085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25086 = getelementptr inbounds %struct.GPR, %struct.GPR* %25085, i32 0, i32 1
  %25087 = getelementptr inbounds %struct.Reg, %struct.Reg* %25086, i32 0, i32 0
  %RAX.i82 = bitcast %union.anon* %25087 to i64*
  %25088 = load i64, i64* %PC.i81
  %25089 = add i64 %25088, 8
  store i64 %25089, i64* %PC.i81
  %25090 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %25090, i64* %RAX.i82, align 8
  store %struct.Memory* %loadMem_40741a, %struct.Memory** %MEMORY
  %loadMem_407422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25092 = getelementptr inbounds %struct.GPR, %struct.GPR* %25091, i32 0, i32 33
  %25093 = getelementptr inbounds %struct.Reg, %struct.Reg* %25092, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %25093 to i64*
  %25094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25095 = getelementptr inbounds %struct.GPR, %struct.GPR* %25094, i32 0, i32 1
  %25096 = getelementptr inbounds %struct.Reg, %struct.Reg* %25095, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %25096 to i64*
  %25097 = load i64, i64* %RAX.i80
  %25098 = load i64, i64* %PC.i79
  %25099 = add i64 %25098, 6
  store i64 %25099, i64* %PC.i79
  %25100 = add i64 13112, %25097
  store i64 %25100, i64* %RAX.i80, align 8
  %25101 = icmp ult i64 %25100, %25097
  %25102 = icmp ult i64 %25100, 13112
  %25103 = or i1 %25101, %25102
  %25104 = zext i1 %25103 to i8
  %25105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25104, i8* %25105, align 1
  %25106 = trunc i64 %25100 to i32
  %25107 = and i32 %25106, 255
  %25108 = call i32 @llvm.ctpop.i32(i32 %25107)
  %25109 = trunc i32 %25108 to i8
  %25110 = and i8 %25109, 1
  %25111 = xor i8 %25110, 1
  %25112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25111, i8* %25112, align 1
  %25113 = xor i64 13112, %25097
  %25114 = xor i64 %25113, %25100
  %25115 = lshr i64 %25114, 4
  %25116 = trunc i64 %25115 to i8
  %25117 = and i8 %25116, 1
  %25118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25117, i8* %25118, align 1
  %25119 = icmp eq i64 %25100, 0
  %25120 = zext i1 %25119 to i8
  %25121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25120, i8* %25121, align 1
  %25122 = lshr i64 %25100, 63
  %25123 = trunc i64 %25122 to i8
  %25124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25123, i8* %25124, align 1
  %25125 = lshr i64 %25097, 63
  %25126 = xor i64 %25122, %25125
  %25127 = add i64 %25126, %25122
  %25128 = icmp eq i64 %25127, 2
  %25129 = zext i1 %25128 to i8
  %25130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25129, i8* %25130, align 1
  store %struct.Memory* %loadMem_407422, %struct.Memory** %MEMORY
  %loadMem_407428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25132 = getelementptr inbounds %struct.GPR, %struct.GPR* %25131, i32 0, i32 33
  %25133 = getelementptr inbounds %struct.Reg, %struct.Reg* %25132, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %25133 to i64*
  %25134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25135 = getelementptr inbounds %struct.GPR, %struct.GPR* %25134, i32 0, i32 5
  %25136 = getelementptr inbounds %struct.Reg, %struct.Reg* %25135, i32 0, i32 0
  %RCX.i77 = bitcast %union.anon* %25136 to i64*
  %25137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25138 = getelementptr inbounds %struct.GPR, %struct.GPR* %25137, i32 0, i32 15
  %25139 = getelementptr inbounds %struct.Reg, %struct.Reg* %25138, i32 0, i32 0
  %RBP.i78 = bitcast %union.anon* %25139 to i64*
  %25140 = load i64, i64* %RBP.i78
  %25141 = sub i64 %25140, 24
  %25142 = load i64, i64* %PC.i76
  %25143 = add i64 %25142, 4
  store i64 %25143, i64* %PC.i76
  %25144 = inttoptr i64 %25141 to i32*
  %25145 = load i32, i32* %25144
  %25146 = sext i32 %25145 to i64
  store i64 %25146, i64* %RCX.i77, align 8
  store %struct.Memory* %loadMem_407428, %struct.Memory** %MEMORY
  %loadMem_40742c = load %struct.Memory*, %struct.Memory** %MEMORY
  %25147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25148 = getelementptr inbounds %struct.GPR, %struct.GPR* %25147, i32 0, i32 33
  %25149 = getelementptr inbounds %struct.Reg, %struct.Reg* %25148, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %25149 to i64*
  %25150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25151 = getelementptr inbounds %struct.GPR, %struct.GPR* %25150, i32 0, i32 5
  %25152 = getelementptr inbounds %struct.Reg, %struct.Reg* %25151, i32 0, i32 0
  %RCX.i75 = bitcast %union.anon* %25152 to i64*
  %25153 = load i64, i64* %RCX.i75
  %25154 = load i64, i64* %PC.i74
  %25155 = add i64 %25154, 4
  store i64 %25155, i64* %PC.i74
  %25156 = shl i64 %25153, 5
  %25157 = icmp slt i64 %25156, 0
  %25158 = shl i64 %25156, 1
  store i64 %25158, i64* %RCX.i75, align 8
  %25159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %25160 = zext i1 %25157 to i8
  store i8 %25160, i8* %25159, align 1
  %25161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25162 = trunc i64 %25158 to i32
  %25163 = and i32 %25162, 254
  %25164 = call i32 @llvm.ctpop.i32(i32 %25163)
  %25165 = trunc i32 %25164 to i8
  %25166 = and i8 %25165, 1
  %25167 = xor i8 %25166, 1
  store i8 %25167, i8* %25161, align 1
  %25168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25168, align 1
  %25169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25170 = icmp eq i64 %25158, 0
  %25171 = zext i1 %25170 to i8
  store i8 %25171, i8* %25169, align 1
  %25172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25173 = lshr i64 %25158, 63
  %25174 = trunc i64 %25173 to i8
  store i8 %25174, i8* %25172, align 1
  %25175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25175, align 1
  store %struct.Memory* %loadMem_40742c, %struct.Memory** %MEMORY
  %loadMem_407430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25177 = getelementptr inbounds %struct.GPR, %struct.GPR* %25176, i32 0, i32 33
  %25178 = getelementptr inbounds %struct.Reg, %struct.Reg* %25177, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %25178 to i64*
  %25179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25180 = getelementptr inbounds %struct.GPR, %struct.GPR* %25179, i32 0, i32 1
  %25181 = getelementptr inbounds %struct.Reg, %struct.Reg* %25180, i32 0, i32 0
  %RAX.i72 = bitcast %union.anon* %25181 to i64*
  %25182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25183 = getelementptr inbounds %struct.GPR, %struct.GPR* %25182, i32 0, i32 5
  %25184 = getelementptr inbounds %struct.Reg, %struct.Reg* %25183, i32 0, i32 0
  %RCX.i73 = bitcast %union.anon* %25184 to i64*
  %25185 = load i64, i64* %RAX.i72
  %25186 = load i64, i64* %RCX.i73
  %25187 = load i64, i64* %PC.i71
  %25188 = add i64 %25187, 3
  store i64 %25188, i64* %PC.i71
  %25189 = add i64 %25186, %25185
  store i64 %25189, i64* %RAX.i72, align 8
  %25190 = icmp ult i64 %25189, %25185
  %25191 = icmp ult i64 %25189, %25186
  %25192 = or i1 %25190, %25191
  %25193 = zext i1 %25192 to i8
  %25194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25193, i8* %25194, align 1
  %25195 = trunc i64 %25189 to i32
  %25196 = and i32 %25195, 255
  %25197 = call i32 @llvm.ctpop.i32(i32 %25196)
  %25198 = trunc i32 %25197 to i8
  %25199 = and i8 %25198, 1
  %25200 = xor i8 %25199, 1
  %25201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25200, i8* %25201, align 1
  %25202 = xor i64 %25186, %25185
  %25203 = xor i64 %25202, %25189
  %25204 = lshr i64 %25203, 4
  %25205 = trunc i64 %25204 to i8
  %25206 = and i8 %25205, 1
  %25207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25206, i8* %25207, align 1
  %25208 = icmp eq i64 %25189, 0
  %25209 = zext i1 %25208 to i8
  %25210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25209, i8* %25210, align 1
  %25211 = lshr i64 %25189, 63
  %25212 = trunc i64 %25211 to i8
  %25213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25212, i8* %25213, align 1
  %25214 = lshr i64 %25185, 63
  %25215 = lshr i64 %25186, 63
  %25216 = xor i64 %25211, %25214
  %25217 = xor i64 %25211, %25215
  %25218 = add i64 %25216, %25217
  %25219 = icmp eq i64 %25218, 2
  %25220 = zext i1 %25219 to i8
  %25221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25220, i8* %25221, align 1
  store %struct.Memory* %loadMem_407430, %struct.Memory** %MEMORY
  %loadMem_407433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25223 = getelementptr inbounds %struct.GPR, %struct.GPR* %25222, i32 0, i32 33
  %25224 = getelementptr inbounds %struct.Reg, %struct.Reg* %25223, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %25224 to i64*
  %25225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25226 = getelementptr inbounds %struct.GPR, %struct.GPR* %25225, i32 0, i32 5
  %25227 = getelementptr inbounds %struct.Reg, %struct.Reg* %25226, i32 0, i32 0
  %RCX.i69 = bitcast %union.anon* %25227 to i64*
  %25228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25229 = getelementptr inbounds %struct.GPR, %struct.GPR* %25228, i32 0, i32 15
  %25230 = getelementptr inbounds %struct.Reg, %struct.Reg* %25229, i32 0, i32 0
  %RBP.i70 = bitcast %union.anon* %25230 to i64*
  %25231 = load i64, i64* %RBP.i70
  %25232 = sub i64 %25231, 28
  %25233 = load i64, i64* %PC.i68
  %25234 = add i64 %25233, 4
  store i64 %25234, i64* %PC.i68
  %25235 = inttoptr i64 %25232 to i32*
  %25236 = load i32, i32* %25235
  %25237 = sext i32 %25236 to i64
  store i64 %25237, i64* %RCX.i69, align 8
  store %struct.Memory* %loadMem_407433, %struct.Memory** %MEMORY
  %loadMem_407437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25239 = getelementptr inbounds %struct.GPR, %struct.GPR* %25238, i32 0, i32 33
  %25240 = getelementptr inbounds %struct.Reg, %struct.Reg* %25239, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %25240 to i64*
  %25241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25242 = getelementptr inbounds %struct.GPR, %struct.GPR* %25241, i32 0, i32 1
  %25243 = getelementptr inbounds %struct.Reg, %struct.Reg* %25242, i32 0, i32 0
  %RAX.i65 = bitcast %union.anon* %25243 to i64*
  %25244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25245 = getelementptr inbounds %struct.GPR, %struct.GPR* %25244, i32 0, i32 5
  %25246 = getelementptr inbounds %struct.Reg, %struct.Reg* %25245, i32 0, i32 0
  %RCX.i66 = bitcast %union.anon* %25246 to i64*
  %25247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25248 = getelementptr inbounds %struct.GPR, %struct.GPR* %25247, i32 0, i32 7
  %25249 = getelementptr inbounds %struct.Reg, %struct.Reg* %25248, i32 0, i32 0
  %RDX.i67 = bitcast %union.anon* %25249 to i64*
  %25250 = load i64, i64* %RAX.i65
  %25251 = load i64, i64* %RCX.i66
  %25252 = mul i64 %25251, 4
  %25253 = add i64 %25252, %25250
  %25254 = load i64, i64* %PC.i64
  %25255 = add i64 %25254, 3
  store i64 %25255, i64* %PC.i64
  %25256 = inttoptr i64 %25253 to i32*
  %25257 = load i32, i32* %25256
  %25258 = zext i32 %25257 to i64
  store i64 %25258, i64* %RDX.i67, align 8
  store %struct.Memory* %loadMem_407437, %struct.Memory** %MEMORY
  %loadMem_40743a = load %struct.Memory*, %struct.Memory** %MEMORY
  %25259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25260 = getelementptr inbounds %struct.GPR, %struct.GPR* %25259, i32 0, i32 33
  %25261 = getelementptr inbounds %struct.Reg, %struct.Reg* %25260, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %25261 to i64*
  %25262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25263 = getelementptr inbounds %struct.GPR, %struct.GPR* %25262, i32 0, i32 7
  %25264 = getelementptr inbounds %struct.Reg, %struct.Reg* %25263, i32 0, i32 0
  %DX.i = bitcast %union.anon* %25264 to i16*
  %25265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25266 = getelementptr inbounds %struct.GPR, %struct.GPR* %25265, i32 0, i32 9
  %25267 = getelementptr inbounds %struct.Reg, %struct.Reg* %25266, i32 0, i32 0
  %SI.i63 = bitcast %union.anon* %25267 to i16*
  %25268 = load i16, i16* %DX.i
  %25269 = zext i16 %25268 to i64
  %25270 = load i64, i64* %PC.i62
  %25271 = add i64 %25270, 3
  store i64 %25271, i64* %PC.i62
  store i16 %25268, i16* %SI.i63, align 2
  store %struct.Memory* %loadMem_40743a, %struct.Memory** %MEMORY
  %loadMem_40743d = load %struct.Memory*, %struct.Memory** %MEMORY
  %25272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25273 = getelementptr inbounds %struct.GPR, %struct.GPR* %25272, i32 0, i32 33
  %25274 = getelementptr inbounds %struct.Reg, %struct.Reg* %25273, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %25274 to i64*
  %25275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25276 = getelementptr inbounds %struct.GPR, %struct.GPR* %25275, i32 0, i32 1
  %25277 = getelementptr inbounds %struct.Reg, %struct.Reg* %25276, i32 0, i32 0
  %RAX.i61 = bitcast %union.anon* %25277 to i64*
  %25278 = load i64, i64* %PC.i60
  %25279 = add i64 %25278, 8
  store i64 %25279, i64* %PC.i60
  %25280 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %25280, i64* %RAX.i61, align 8
  store %struct.Memory* %loadMem_40743d, %struct.Memory** %MEMORY
  %loadMem_407445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25282 = getelementptr inbounds %struct.GPR, %struct.GPR* %25281, i32 0, i32 33
  %25283 = getelementptr inbounds %struct.Reg, %struct.Reg* %25282, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %25283 to i64*
  %25284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25285 = getelementptr inbounds %struct.GPR, %struct.GPR* %25284, i32 0, i32 1
  %25286 = getelementptr inbounds %struct.Reg, %struct.Reg* %25285, i32 0, i32 0
  %RAX.i59 = bitcast %union.anon* %25286 to i64*
  %25287 = load i64, i64* %RAX.i59
  %25288 = add i64 %25287, 6424
  %25289 = load i64, i64* %PC.i58
  %25290 = add i64 %25289, 7
  store i64 %25290, i64* %PC.i58
  %25291 = inttoptr i64 %25288 to i64*
  %25292 = load i64, i64* %25291
  store i64 %25292, i64* %RAX.i59, align 8
  store %struct.Memory* %loadMem_407445, %struct.Memory** %MEMORY
  %loadMem_40744c = load %struct.Memory*, %struct.Memory** %MEMORY
  %25293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25294 = getelementptr inbounds %struct.GPR, %struct.GPR* %25293, i32 0, i32 33
  %25295 = getelementptr inbounds %struct.Reg, %struct.Reg* %25294, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %25295 to i64*
  %25296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25297 = getelementptr inbounds %struct.GPR, %struct.GPR* %25296, i32 0, i32 5
  %25298 = getelementptr inbounds %struct.Reg, %struct.Reg* %25297, i32 0, i32 0
  %RCX.i57 = bitcast %union.anon* %25298 to i64*
  %25299 = load i64, i64* %PC.i56
  %25300 = add i64 %25299, 8
  store i64 %25300, i64* %PC.i56
  %25301 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %25301, i64* %RCX.i57, align 8
  store %struct.Memory* %loadMem_40744c, %struct.Memory** %MEMORY
  %loadMem_407454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25303 = getelementptr inbounds %struct.GPR, %struct.GPR* %25302, i32 0, i32 33
  %25304 = getelementptr inbounds %struct.Reg, %struct.Reg* %25303, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %25304 to i64*
  %25305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25306 = getelementptr inbounds %struct.GPR, %struct.GPR* %25305, i32 0, i32 5
  %25307 = getelementptr inbounds %struct.Reg, %struct.Reg* %25306, i32 0, i32 0
  %RCX.i54 = bitcast %union.anon* %25307 to i64*
  %25308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25309 = getelementptr inbounds %struct.GPR, %struct.GPR* %25308, i32 0, i32 7
  %25310 = getelementptr inbounds %struct.Reg, %struct.Reg* %25309, i32 0, i32 0
  %RDX.i55 = bitcast %union.anon* %25310 to i64*
  %25311 = load i64, i64* %RCX.i54
  %25312 = add i64 %25311, 156
  %25313 = load i64, i64* %PC.i53
  %25314 = add i64 %25313, 6
  store i64 %25314, i64* %PC.i53
  %25315 = inttoptr i64 %25312 to i32*
  %25316 = load i32, i32* %25315
  %25317 = zext i32 %25316 to i64
  store i64 %25317, i64* %RDX.i55, align 8
  store %struct.Memory* %loadMem_407454, %struct.Memory** %MEMORY
  %loadMem_40745a = load %struct.Memory*, %struct.Memory** %MEMORY
  %25318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25319 = getelementptr inbounds %struct.GPR, %struct.GPR* %25318, i32 0, i32 33
  %25320 = getelementptr inbounds %struct.Reg, %struct.Reg* %25319, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %25320 to i64*
  %25321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25322 = getelementptr inbounds %struct.GPR, %struct.GPR* %25321, i32 0, i32 7
  %25323 = getelementptr inbounds %struct.Reg, %struct.Reg* %25322, i32 0, i32 0
  %RDX.i51 = bitcast %union.anon* %25323 to i64*
  %25324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25325 = getelementptr inbounds %struct.GPR, %struct.GPR* %25324, i32 0, i32 15
  %25326 = getelementptr inbounds %struct.Reg, %struct.Reg* %25325, i32 0, i32 0
  %RBP.i52 = bitcast %union.anon* %25326 to i64*
  %25327 = load i64, i64* %RDX.i51
  %25328 = load i64, i64* %RBP.i52
  %25329 = sub i64 %25328, 8
  %25330 = load i64, i64* %PC.i50
  %25331 = add i64 %25330, 3
  store i64 %25331, i64* %PC.i50
  %25332 = trunc i64 %25327 to i32
  %25333 = inttoptr i64 %25329 to i32*
  %25334 = load i32, i32* %25333
  %25335 = add i32 %25334, %25332
  %25336 = zext i32 %25335 to i64
  store i64 %25336, i64* %RDX.i51, align 8
  %25337 = icmp ult i32 %25335, %25332
  %25338 = icmp ult i32 %25335, %25334
  %25339 = or i1 %25337, %25338
  %25340 = zext i1 %25339 to i8
  %25341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25340, i8* %25341, align 1
  %25342 = and i32 %25335, 255
  %25343 = call i32 @llvm.ctpop.i32(i32 %25342)
  %25344 = trunc i32 %25343 to i8
  %25345 = and i8 %25344, 1
  %25346 = xor i8 %25345, 1
  %25347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25346, i8* %25347, align 1
  %25348 = xor i32 %25334, %25332
  %25349 = xor i32 %25348, %25335
  %25350 = lshr i32 %25349, 4
  %25351 = trunc i32 %25350 to i8
  %25352 = and i8 %25351, 1
  %25353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25352, i8* %25353, align 1
  %25354 = icmp eq i32 %25335, 0
  %25355 = zext i1 %25354 to i8
  %25356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25355, i8* %25356, align 1
  %25357 = lshr i32 %25335, 31
  %25358 = trunc i32 %25357 to i8
  %25359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25358, i8* %25359, align 1
  %25360 = lshr i32 %25332, 31
  %25361 = lshr i32 %25334, 31
  %25362 = xor i32 %25357, %25360
  %25363 = xor i32 %25357, %25361
  %25364 = add i32 %25362, %25363
  %25365 = icmp eq i32 %25364, 2
  %25366 = zext i1 %25365 to i8
  %25367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25366, i8* %25367, align 1
  store %struct.Memory* %loadMem_40745a, %struct.Memory** %MEMORY
  %loadMem_40745d = load %struct.Memory*, %struct.Memory** %MEMORY
  %25368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25369 = getelementptr inbounds %struct.GPR, %struct.GPR* %25368, i32 0, i32 33
  %25370 = getelementptr inbounds %struct.Reg, %struct.Reg* %25369, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %25370 to i64*
  %25371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25372 = getelementptr inbounds %struct.GPR, %struct.GPR* %25371, i32 0, i32 7
  %25373 = getelementptr inbounds %struct.Reg, %struct.Reg* %25372, i32 0, i32 0
  %RDX.i48 = bitcast %union.anon* %25373 to i64*
  %25374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25375 = getelementptr inbounds %struct.GPR, %struct.GPR* %25374, i32 0, i32 15
  %25376 = getelementptr inbounds %struct.Reg, %struct.Reg* %25375, i32 0, i32 0
  %RBP.i49 = bitcast %union.anon* %25376 to i64*
  %25377 = load i64, i64* %RDX.i48
  %25378 = load i64, i64* %RBP.i49
  %25379 = sub i64 %25378, 28
  %25380 = load i64, i64* %PC.i47
  %25381 = add i64 %25380, 3
  store i64 %25381, i64* %PC.i47
  %25382 = trunc i64 %25377 to i32
  %25383 = inttoptr i64 %25379 to i32*
  %25384 = load i32, i32* %25383
  %25385 = add i32 %25384, %25382
  %25386 = zext i32 %25385 to i64
  store i64 %25386, i64* %RDX.i48, align 8
  %25387 = icmp ult i32 %25385, %25382
  %25388 = icmp ult i32 %25385, %25384
  %25389 = or i1 %25387, %25388
  %25390 = zext i1 %25389 to i8
  %25391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25390, i8* %25391, align 1
  %25392 = and i32 %25385, 255
  %25393 = call i32 @llvm.ctpop.i32(i32 %25392)
  %25394 = trunc i32 %25393 to i8
  %25395 = and i8 %25394, 1
  %25396 = xor i8 %25395, 1
  %25397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25396, i8* %25397, align 1
  %25398 = xor i32 %25384, %25382
  %25399 = xor i32 %25398, %25385
  %25400 = lshr i32 %25399, 4
  %25401 = trunc i32 %25400 to i8
  %25402 = and i8 %25401, 1
  %25403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25402, i8* %25403, align 1
  %25404 = icmp eq i32 %25385, 0
  %25405 = zext i1 %25404 to i8
  %25406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25405, i8* %25406, align 1
  %25407 = lshr i32 %25385, 31
  %25408 = trunc i32 %25407 to i8
  %25409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25408, i8* %25409, align 1
  %25410 = lshr i32 %25382, 31
  %25411 = lshr i32 %25384, 31
  %25412 = xor i32 %25407, %25410
  %25413 = xor i32 %25407, %25411
  %25414 = add i32 %25412, %25413
  %25415 = icmp eq i32 %25414, 2
  %25416 = zext i1 %25415 to i8
  %25417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25416, i8* %25417, align 1
  store %struct.Memory* %loadMem_40745d, %struct.Memory** %MEMORY
  %loadMem_407460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25419 = getelementptr inbounds %struct.GPR, %struct.GPR* %25418, i32 0, i32 33
  %25420 = getelementptr inbounds %struct.Reg, %struct.Reg* %25419, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %25420 to i64*
  %25421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25422 = getelementptr inbounds %struct.GPR, %struct.GPR* %25421, i32 0, i32 7
  %25423 = getelementptr inbounds %struct.Reg, %struct.Reg* %25422, i32 0, i32 0
  %EDX.i45 = bitcast %union.anon* %25423 to i32*
  %25424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25425 = getelementptr inbounds %struct.GPR, %struct.GPR* %25424, i32 0, i32 5
  %25426 = getelementptr inbounds %struct.Reg, %struct.Reg* %25425, i32 0, i32 0
  %RCX.i46 = bitcast %union.anon* %25426 to i64*
  %25427 = load i32, i32* %EDX.i45
  %25428 = zext i32 %25427 to i64
  %25429 = load i64, i64* %PC.i44
  %25430 = add i64 %25429, 3
  store i64 %25430, i64* %PC.i44
  %25431 = shl i64 %25428, 32
  %25432 = ashr exact i64 %25431, 32
  store i64 %25432, i64* %RCX.i46, align 8
  store %struct.Memory* %loadMem_407460, %struct.Memory** %MEMORY
  %loadMem_407463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25434 = getelementptr inbounds %struct.GPR, %struct.GPR* %25433, i32 0, i32 33
  %25435 = getelementptr inbounds %struct.Reg, %struct.Reg* %25434, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %25435 to i64*
  %25436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25437 = getelementptr inbounds %struct.GPR, %struct.GPR* %25436, i32 0, i32 1
  %25438 = getelementptr inbounds %struct.Reg, %struct.Reg* %25437, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %25438 to i64*
  %25439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25440 = getelementptr inbounds %struct.GPR, %struct.GPR* %25439, i32 0, i32 5
  %25441 = getelementptr inbounds %struct.Reg, %struct.Reg* %25440, i32 0, i32 0
  %RCX.i43 = bitcast %union.anon* %25441 to i64*
  %25442 = load i64, i64* %RAX.i42
  %25443 = load i64, i64* %RCX.i43
  %25444 = mul i64 %25443, 8
  %25445 = add i64 %25444, %25442
  %25446 = load i64, i64* %PC.i41
  %25447 = add i64 %25446, 4
  store i64 %25447, i64* %PC.i41
  %25448 = inttoptr i64 %25445 to i64*
  %25449 = load i64, i64* %25448
  store i64 %25449, i64* %RAX.i42, align 8
  store %struct.Memory* %loadMem_407463, %struct.Memory** %MEMORY
  %loadMem_407467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25451 = getelementptr inbounds %struct.GPR, %struct.GPR* %25450, i32 0, i32 33
  %25452 = getelementptr inbounds %struct.Reg, %struct.Reg* %25451, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %25452 to i64*
  %25453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25454 = getelementptr inbounds %struct.GPR, %struct.GPR* %25453, i32 0, i32 5
  %25455 = getelementptr inbounds %struct.Reg, %struct.Reg* %25454, i32 0, i32 0
  %RCX.i40 = bitcast %union.anon* %25455 to i64*
  %25456 = load i64, i64* %PC.i39
  %25457 = add i64 %25456, 8
  store i64 %25457, i64* %PC.i39
  %25458 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %25458, i64* %RCX.i40, align 8
  store %struct.Memory* %loadMem_407467, %struct.Memory** %MEMORY
  %loadMem_40746f = load %struct.Memory*, %struct.Memory** %MEMORY
  %25459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25460 = getelementptr inbounds %struct.GPR, %struct.GPR* %25459, i32 0, i32 33
  %25461 = getelementptr inbounds %struct.Reg, %struct.Reg* %25460, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %25461 to i64*
  %25462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25463 = getelementptr inbounds %struct.GPR, %struct.GPR* %25462, i32 0, i32 5
  %25464 = getelementptr inbounds %struct.Reg, %struct.Reg* %25463, i32 0, i32 0
  %RCX.i37 = bitcast %union.anon* %25464 to i64*
  %25465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25466 = getelementptr inbounds %struct.GPR, %struct.GPR* %25465, i32 0, i32 7
  %25467 = getelementptr inbounds %struct.Reg, %struct.Reg* %25466, i32 0, i32 0
  %RDX.i38 = bitcast %union.anon* %25467 to i64*
  %25468 = load i64, i64* %RCX.i37
  %25469 = add i64 %25468, 152
  %25470 = load i64, i64* %PC.i36
  %25471 = add i64 %25470, 6
  store i64 %25471, i64* %PC.i36
  %25472 = inttoptr i64 %25469 to i32*
  %25473 = load i32, i32* %25472
  %25474 = zext i32 %25473 to i64
  store i64 %25474, i64* %RDX.i38, align 8
  store %struct.Memory* %loadMem_40746f, %struct.Memory** %MEMORY
  %loadMem_407475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25476 = getelementptr inbounds %struct.GPR, %struct.GPR* %25475, i32 0, i32 33
  %25477 = getelementptr inbounds %struct.Reg, %struct.Reg* %25476, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %25477 to i64*
  %25478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25479 = getelementptr inbounds %struct.GPR, %struct.GPR* %25478, i32 0, i32 7
  %25480 = getelementptr inbounds %struct.Reg, %struct.Reg* %25479, i32 0, i32 0
  %RDX.i34 = bitcast %union.anon* %25480 to i64*
  %25481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25482 = getelementptr inbounds %struct.GPR, %struct.GPR* %25481, i32 0, i32 15
  %25483 = getelementptr inbounds %struct.Reg, %struct.Reg* %25482, i32 0, i32 0
  %RBP.i35 = bitcast %union.anon* %25483 to i64*
  %25484 = load i64, i64* %RDX.i34
  %25485 = load i64, i64* %RBP.i35
  %25486 = sub i64 %25485, 4
  %25487 = load i64, i64* %PC.i33
  %25488 = add i64 %25487, 3
  store i64 %25488, i64* %PC.i33
  %25489 = trunc i64 %25484 to i32
  %25490 = inttoptr i64 %25486 to i32*
  %25491 = load i32, i32* %25490
  %25492 = add i32 %25491, %25489
  %25493 = zext i32 %25492 to i64
  store i64 %25493, i64* %RDX.i34, align 8
  %25494 = icmp ult i32 %25492, %25489
  %25495 = icmp ult i32 %25492, %25491
  %25496 = or i1 %25494, %25495
  %25497 = zext i1 %25496 to i8
  %25498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25497, i8* %25498, align 1
  %25499 = and i32 %25492, 255
  %25500 = call i32 @llvm.ctpop.i32(i32 %25499)
  %25501 = trunc i32 %25500 to i8
  %25502 = and i8 %25501, 1
  %25503 = xor i8 %25502, 1
  %25504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25503, i8* %25504, align 1
  %25505 = xor i32 %25491, %25489
  %25506 = xor i32 %25505, %25492
  %25507 = lshr i32 %25506, 4
  %25508 = trunc i32 %25507 to i8
  %25509 = and i8 %25508, 1
  %25510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25509, i8* %25510, align 1
  %25511 = icmp eq i32 %25492, 0
  %25512 = zext i1 %25511 to i8
  %25513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25512, i8* %25513, align 1
  %25514 = lshr i32 %25492, 31
  %25515 = trunc i32 %25514 to i8
  %25516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25515, i8* %25516, align 1
  %25517 = lshr i32 %25489, 31
  %25518 = lshr i32 %25491, 31
  %25519 = xor i32 %25514, %25517
  %25520 = xor i32 %25514, %25518
  %25521 = add i32 %25519, %25520
  %25522 = icmp eq i32 %25521, 2
  %25523 = zext i1 %25522 to i8
  %25524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25523, i8* %25524, align 1
  store %struct.Memory* %loadMem_407475, %struct.Memory** %MEMORY
  %loadMem_407478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25526 = getelementptr inbounds %struct.GPR, %struct.GPR* %25525, i32 0, i32 33
  %25527 = getelementptr inbounds %struct.Reg, %struct.Reg* %25526, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %25527 to i64*
  %25528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25529 = getelementptr inbounds %struct.GPR, %struct.GPR* %25528, i32 0, i32 7
  %25530 = getelementptr inbounds %struct.Reg, %struct.Reg* %25529, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %25530 to i64*
  %25531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25532 = getelementptr inbounds %struct.GPR, %struct.GPR* %25531, i32 0, i32 15
  %25533 = getelementptr inbounds %struct.Reg, %struct.Reg* %25532, i32 0, i32 0
  %RBP.i32 = bitcast %union.anon* %25533 to i64*
  %25534 = load i64, i64* %RDX.i
  %25535 = load i64, i64* %RBP.i32
  %25536 = sub i64 %25535, 24
  %25537 = load i64, i64* %PC.i31
  %25538 = add i64 %25537, 3
  store i64 %25538, i64* %PC.i31
  %25539 = trunc i64 %25534 to i32
  %25540 = inttoptr i64 %25536 to i32*
  %25541 = load i32, i32* %25540
  %25542 = add i32 %25541, %25539
  %25543 = zext i32 %25542 to i64
  store i64 %25543, i64* %RDX.i, align 8
  %25544 = icmp ult i32 %25542, %25539
  %25545 = icmp ult i32 %25542, %25541
  %25546 = or i1 %25544, %25545
  %25547 = zext i1 %25546 to i8
  %25548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25547, i8* %25548, align 1
  %25549 = and i32 %25542, 255
  %25550 = call i32 @llvm.ctpop.i32(i32 %25549)
  %25551 = trunc i32 %25550 to i8
  %25552 = and i8 %25551, 1
  %25553 = xor i8 %25552, 1
  %25554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25553, i8* %25554, align 1
  %25555 = xor i32 %25541, %25539
  %25556 = xor i32 %25555, %25542
  %25557 = lshr i32 %25556, 4
  %25558 = trunc i32 %25557 to i8
  %25559 = and i8 %25558, 1
  %25560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25559, i8* %25560, align 1
  %25561 = icmp eq i32 %25542, 0
  %25562 = zext i1 %25561 to i8
  %25563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25562, i8* %25563, align 1
  %25564 = lshr i32 %25542, 31
  %25565 = trunc i32 %25564 to i8
  %25566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25565, i8* %25566, align 1
  %25567 = lshr i32 %25539, 31
  %25568 = lshr i32 %25541, 31
  %25569 = xor i32 %25564, %25567
  %25570 = xor i32 %25564, %25568
  %25571 = add i32 %25569, %25570
  %25572 = icmp eq i32 %25571, 2
  %25573 = zext i1 %25572 to i8
  %25574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25573, i8* %25574, align 1
  store %struct.Memory* %loadMem_407478, %struct.Memory** %MEMORY
  %loadMem_40747b = load %struct.Memory*, %struct.Memory** %MEMORY
  %25575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25576 = getelementptr inbounds %struct.GPR, %struct.GPR* %25575, i32 0, i32 33
  %25577 = getelementptr inbounds %struct.Reg, %struct.Reg* %25576, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %25577 to i64*
  %25578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25579 = getelementptr inbounds %struct.GPR, %struct.GPR* %25578, i32 0, i32 7
  %25580 = getelementptr inbounds %struct.Reg, %struct.Reg* %25579, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %25580 to i32*
  %25581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25582 = getelementptr inbounds %struct.GPR, %struct.GPR* %25581, i32 0, i32 5
  %25583 = getelementptr inbounds %struct.Reg, %struct.Reg* %25582, i32 0, i32 0
  %RCX.i30 = bitcast %union.anon* %25583 to i64*
  %25584 = load i32, i32* %EDX.i
  %25585 = zext i32 %25584 to i64
  %25586 = load i64, i64* %PC.i29
  %25587 = add i64 %25586, 3
  store i64 %25587, i64* %PC.i29
  %25588 = shl i64 %25585, 32
  %25589 = ashr exact i64 %25588, 32
  store i64 %25589, i64* %RCX.i30, align 8
  store %struct.Memory* %loadMem_40747b, %struct.Memory** %MEMORY
  %loadMem_40747e = load %struct.Memory*, %struct.Memory** %MEMORY
  %25590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25591 = getelementptr inbounds %struct.GPR, %struct.GPR* %25590, i32 0, i32 33
  %25592 = getelementptr inbounds %struct.Reg, %struct.Reg* %25591, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %25592 to i64*
  %25593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25594 = getelementptr inbounds %struct.GPR, %struct.GPR* %25593, i32 0, i32 9
  %25595 = getelementptr inbounds %struct.Reg, %struct.Reg* %25594, i32 0, i32 0
  %SI.i = bitcast %union.anon* %25595 to i16*
  %25596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25597 = getelementptr inbounds %struct.GPR, %struct.GPR* %25596, i32 0, i32 1
  %25598 = getelementptr inbounds %struct.Reg, %struct.Reg* %25597, i32 0, i32 0
  %RAX.i28 = bitcast %union.anon* %25598 to i64*
  %25599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25600 = getelementptr inbounds %struct.GPR, %struct.GPR* %25599, i32 0, i32 5
  %25601 = getelementptr inbounds %struct.Reg, %struct.Reg* %25600, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %25601 to i64*
  %25602 = load i64, i64* %RAX.i28
  %25603 = load i64, i64* %RCX.i
  %25604 = mul i64 %25603, 2
  %25605 = add i64 %25604, %25602
  %25606 = load i16, i16* %SI.i
  %25607 = zext i16 %25606 to i64
  %25608 = load i64, i64* %PC.i27
  %25609 = add i64 %25608, 4
  store i64 %25609, i64* %PC.i27
  %25610 = inttoptr i64 %25605 to i16*
  store i16 %25606, i16* %25610
  store %struct.Memory* %loadMem_40747e, %struct.Memory** %MEMORY
  br label %block_.L_407482

block_.L_407482:                                  ; preds = %block_.L_40741a, %block_407380
  %loadMem_407482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25612 = getelementptr inbounds %struct.GPR, %struct.GPR* %25611, i32 0, i32 33
  %25613 = getelementptr inbounds %struct.Reg, %struct.Reg* %25612, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %25613 to i64*
  %25614 = load i64, i64* %PC.i26
  %25615 = add i64 %25614, 5
  %25616 = load i64, i64* %PC.i26
  %25617 = add i64 %25616, 5
  store i64 %25617, i64* %PC.i26
  %25618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25615, i64* %25618, align 8
  store %struct.Memory* %loadMem_407482, %struct.Memory** %MEMORY
  br label %block_.L_407487

block_.L_407487:                                  ; preds = %block_.L_407482
  %loadMem_407487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25620 = getelementptr inbounds %struct.GPR, %struct.GPR* %25619, i32 0, i32 33
  %25621 = getelementptr inbounds %struct.Reg, %struct.Reg* %25620, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %25621 to i64*
  %25622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25623 = getelementptr inbounds %struct.GPR, %struct.GPR* %25622, i32 0, i32 1
  %25624 = getelementptr inbounds %struct.Reg, %struct.Reg* %25623, i32 0, i32 0
  %RAX.i24 = bitcast %union.anon* %25624 to i64*
  %25625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25626 = getelementptr inbounds %struct.GPR, %struct.GPR* %25625, i32 0, i32 15
  %25627 = getelementptr inbounds %struct.Reg, %struct.Reg* %25626, i32 0, i32 0
  %RBP.i25 = bitcast %union.anon* %25627 to i64*
  %25628 = load i64, i64* %RBP.i25
  %25629 = sub i64 %25628, 24
  %25630 = load i64, i64* %PC.i23
  %25631 = add i64 %25630, 3
  store i64 %25631, i64* %PC.i23
  %25632 = inttoptr i64 %25629 to i32*
  %25633 = load i32, i32* %25632
  %25634 = zext i32 %25633 to i64
  store i64 %25634, i64* %RAX.i24, align 8
  store %struct.Memory* %loadMem_407487, %struct.Memory** %MEMORY
  %loadMem_40748a = load %struct.Memory*, %struct.Memory** %MEMORY
  %25635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25636 = getelementptr inbounds %struct.GPR, %struct.GPR* %25635, i32 0, i32 33
  %25637 = getelementptr inbounds %struct.Reg, %struct.Reg* %25636, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %25637 to i64*
  %25638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25639 = getelementptr inbounds %struct.GPR, %struct.GPR* %25638, i32 0, i32 1
  %25640 = getelementptr inbounds %struct.Reg, %struct.Reg* %25639, i32 0, i32 0
  %RAX.i22 = bitcast %union.anon* %25640 to i64*
  %25641 = load i64, i64* %RAX.i22
  %25642 = load i64, i64* %PC.i21
  %25643 = add i64 %25642, 3
  store i64 %25643, i64* %PC.i21
  %25644 = trunc i64 %25641 to i32
  %25645 = add i32 1, %25644
  %25646 = zext i32 %25645 to i64
  store i64 %25646, i64* %RAX.i22, align 8
  %25647 = icmp ult i32 %25645, %25644
  %25648 = icmp ult i32 %25645, 1
  %25649 = or i1 %25647, %25648
  %25650 = zext i1 %25649 to i8
  %25651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25650, i8* %25651, align 1
  %25652 = and i32 %25645, 255
  %25653 = call i32 @llvm.ctpop.i32(i32 %25652)
  %25654 = trunc i32 %25653 to i8
  %25655 = and i8 %25654, 1
  %25656 = xor i8 %25655, 1
  %25657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25656, i8* %25657, align 1
  %25658 = xor i64 1, %25641
  %25659 = trunc i64 %25658 to i32
  %25660 = xor i32 %25659, %25645
  %25661 = lshr i32 %25660, 4
  %25662 = trunc i32 %25661 to i8
  %25663 = and i8 %25662, 1
  %25664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25663, i8* %25664, align 1
  %25665 = icmp eq i32 %25645, 0
  %25666 = zext i1 %25665 to i8
  %25667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25666, i8* %25667, align 1
  %25668 = lshr i32 %25645, 31
  %25669 = trunc i32 %25668 to i8
  %25670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25669, i8* %25670, align 1
  %25671 = lshr i32 %25644, 31
  %25672 = xor i32 %25668, %25671
  %25673 = add i32 %25672, %25668
  %25674 = icmp eq i32 %25673, 2
  %25675 = zext i1 %25674 to i8
  %25676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25675, i8* %25676, align 1
  store %struct.Memory* %loadMem_40748a, %struct.Memory** %MEMORY
  %loadMem_40748d = load %struct.Memory*, %struct.Memory** %MEMORY
  %25677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25678 = getelementptr inbounds %struct.GPR, %struct.GPR* %25677, i32 0, i32 33
  %25679 = getelementptr inbounds %struct.Reg, %struct.Reg* %25678, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %25679 to i64*
  %25680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25681 = getelementptr inbounds %struct.GPR, %struct.GPR* %25680, i32 0, i32 1
  %25682 = getelementptr inbounds %struct.Reg, %struct.Reg* %25681, i32 0, i32 0
  %EAX.i19 = bitcast %union.anon* %25682 to i32*
  %25683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25684 = getelementptr inbounds %struct.GPR, %struct.GPR* %25683, i32 0, i32 15
  %25685 = getelementptr inbounds %struct.Reg, %struct.Reg* %25684, i32 0, i32 0
  %RBP.i20 = bitcast %union.anon* %25685 to i64*
  %25686 = load i64, i64* %RBP.i20
  %25687 = sub i64 %25686, 24
  %25688 = load i32, i32* %EAX.i19
  %25689 = zext i32 %25688 to i64
  %25690 = load i64, i64* %PC.i18
  %25691 = add i64 %25690, 3
  store i64 %25691, i64* %PC.i18
  %25692 = inttoptr i64 %25687 to i32*
  store i32 %25688, i32* %25692
  store %struct.Memory* %loadMem_40748d, %struct.Memory** %MEMORY
  %loadMem_407490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25694 = getelementptr inbounds %struct.GPR, %struct.GPR* %25693, i32 0, i32 33
  %25695 = getelementptr inbounds %struct.Reg, %struct.Reg* %25694, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %25695 to i64*
  %25696 = load i64, i64* %PC.i17
  %25697 = add i64 %25696, -295
  %25698 = load i64, i64* %PC.i17
  %25699 = add i64 %25698, 5
  store i64 %25699, i64* %PC.i17
  %25700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25697, i64* %25700, align 8
  store %struct.Memory* %loadMem_407490, %struct.Memory** %MEMORY
  br label %block_.L_407369

block_.L_407495:                                  ; preds = %block_.L_407369
  %loadMem_407495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25702 = getelementptr inbounds %struct.GPR, %struct.GPR* %25701, i32 0, i32 33
  %25703 = getelementptr inbounds %struct.Reg, %struct.Reg* %25702, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %25703 to i64*
  %25704 = load i64, i64* %PC.i16
  %25705 = add i64 %25704, 5
  %25706 = load i64, i64* %PC.i16
  %25707 = add i64 %25706, 5
  store i64 %25707, i64* %PC.i16
  %25708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25705, i64* %25708, align 8
  store %struct.Memory* %loadMem_407495, %struct.Memory** %MEMORY
  br label %block_.L_40749a

block_.L_40749a:                                  ; preds = %block_.L_407495
  %loadMem_40749a = load %struct.Memory*, %struct.Memory** %MEMORY
  %25709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25710 = getelementptr inbounds %struct.GPR, %struct.GPR* %25709, i32 0, i32 33
  %25711 = getelementptr inbounds %struct.Reg, %struct.Reg* %25710, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %25711 to i64*
  %25712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25713 = getelementptr inbounds %struct.GPR, %struct.GPR* %25712, i32 0, i32 1
  %25714 = getelementptr inbounds %struct.Reg, %struct.Reg* %25713, i32 0, i32 0
  %RAX.i14 = bitcast %union.anon* %25714 to i64*
  %25715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25716 = getelementptr inbounds %struct.GPR, %struct.GPR* %25715, i32 0, i32 15
  %25717 = getelementptr inbounds %struct.Reg, %struct.Reg* %25716, i32 0, i32 0
  %RBP.i15 = bitcast %union.anon* %25717 to i64*
  %25718 = load i64, i64* %RBP.i15
  %25719 = sub i64 %25718, 28
  %25720 = load i64, i64* %PC.i13
  %25721 = add i64 %25720, 3
  store i64 %25721, i64* %PC.i13
  %25722 = inttoptr i64 %25719 to i32*
  %25723 = load i32, i32* %25722
  %25724 = zext i32 %25723 to i64
  store i64 %25724, i64* %RAX.i14, align 8
  store %struct.Memory* %loadMem_40749a, %struct.Memory** %MEMORY
  %loadMem_40749d = load %struct.Memory*, %struct.Memory** %MEMORY
  %25725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25726 = getelementptr inbounds %struct.GPR, %struct.GPR* %25725, i32 0, i32 33
  %25727 = getelementptr inbounds %struct.Reg, %struct.Reg* %25726, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %25727 to i64*
  %25728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25729 = getelementptr inbounds %struct.GPR, %struct.GPR* %25728, i32 0, i32 1
  %25730 = getelementptr inbounds %struct.Reg, %struct.Reg* %25729, i32 0, i32 0
  %RAX.i12 = bitcast %union.anon* %25730 to i64*
  %25731 = load i64, i64* %RAX.i12
  %25732 = load i64, i64* %PC.i11
  %25733 = add i64 %25732, 3
  store i64 %25733, i64* %PC.i11
  %25734 = trunc i64 %25731 to i32
  %25735 = add i32 1, %25734
  %25736 = zext i32 %25735 to i64
  store i64 %25736, i64* %RAX.i12, align 8
  %25737 = icmp ult i32 %25735, %25734
  %25738 = icmp ult i32 %25735, 1
  %25739 = or i1 %25737, %25738
  %25740 = zext i1 %25739 to i8
  %25741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25740, i8* %25741, align 1
  %25742 = and i32 %25735, 255
  %25743 = call i32 @llvm.ctpop.i32(i32 %25742)
  %25744 = trunc i32 %25743 to i8
  %25745 = and i8 %25744, 1
  %25746 = xor i8 %25745, 1
  %25747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25746, i8* %25747, align 1
  %25748 = xor i64 1, %25731
  %25749 = trunc i64 %25748 to i32
  %25750 = xor i32 %25749, %25735
  %25751 = lshr i32 %25750, 4
  %25752 = trunc i32 %25751 to i8
  %25753 = and i8 %25752, 1
  %25754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25753, i8* %25754, align 1
  %25755 = icmp eq i32 %25735, 0
  %25756 = zext i1 %25755 to i8
  %25757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25756, i8* %25757, align 1
  %25758 = lshr i32 %25735, 31
  %25759 = trunc i32 %25758 to i8
  %25760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25759, i8* %25760, align 1
  %25761 = lshr i32 %25734, 31
  %25762 = xor i32 %25758, %25761
  %25763 = add i32 %25762, %25758
  %25764 = icmp eq i32 %25763, 2
  %25765 = zext i1 %25764 to i8
  %25766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25765, i8* %25766, align 1
  store %struct.Memory* %loadMem_40749d, %struct.Memory** %MEMORY
  %loadMem_4074a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25768 = getelementptr inbounds %struct.GPR, %struct.GPR* %25767, i32 0, i32 33
  %25769 = getelementptr inbounds %struct.Reg, %struct.Reg* %25768, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %25769 to i64*
  %25770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25771 = getelementptr inbounds %struct.GPR, %struct.GPR* %25770, i32 0, i32 1
  %25772 = getelementptr inbounds %struct.Reg, %struct.Reg* %25771, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %25772 to i32*
  %25773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25774 = getelementptr inbounds %struct.GPR, %struct.GPR* %25773, i32 0, i32 15
  %25775 = getelementptr inbounds %struct.Reg, %struct.Reg* %25774, i32 0, i32 0
  %RBP.i10 = bitcast %union.anon* %25775 to i64*
  %25776 = load i64, i64* %RBP.i10
  %25777 = sub i64 %25776, 28
  %25778 = load i32, i32* %EAX.i
  %25779 = zext i32 %25778 to i64
  %25780 = load i64, i64* %PC.i9
  %25781 = add i64 %25780, 3
  store i64 %25781, i64* %PC.i9
  %25782 = inttoptr i64 %25777 to i32*
  store i32 %25778, i32* %25782
  store %struct.Memory* %loadMem_4074a0, %struct.Memory** %MEMORY
  %loadMem_4074a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25784 = getelementptr inbounds %struct.GPR, %struct.GPR* %25783, i32 0, i32 33
  %25785 = getelementptr inbounds %struct.Reg, %struct.Reg* %25784, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %25785 to i64*
  %25786 = load i64, i64* %PC.i8
  %25787 = add i64 %25786, -331
  %25788 = load i64, i64* %PC.i8
  %25789 = add i64 %25788, 5
  store i64 %25789, i64* %PC.i8
  %25790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25787, i64* %25790, align 8
  store %struct.Memory* %loadMem_4074a3, %struct.Memory** %MEMORY
  br label %block_.L_407358

block_.L_4074a8:                                  ; preds = %block_.L_407358
  %loadMem_4074a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25792 = getelementptr inbounds %struct.GPR, %struct.GPR* %25791, i32 0, i32 33
  %25793 = getelementptr inbounds %struct.Reg, %struct.Reg* %25792, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %25793 to i64*
  %25794 = load i64, i64* %PC.i7
  %25795 = add i64 %25794, 5
  %25796 = load i64, i64* %PC.i7
  %25797 = add i64 %25796, 5
  store i64 %25797, i64* %PC.i7
  %25798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25795, i64* %25798, align 8
  store %struct.Memory* %loadMem_4074a8, %struct.Memory** %MEMORY
  br label %block_.L_4074ad

block_.L_4074ad:                                  ; preds = %block_.L_4074a8, %block_.L_40733c
  %loadMem_4074ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %25799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25800 = getelementptr inbounds %struct.GPR, %struct.GPR* %25799, i32 0, i32 33
  %25801 = getelementptr inbounds %struct.Reg, %struct.Reg* %25800, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %25801 to i64*
  %25802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25803 = getelementptr inbounds %struct.GPR, %struct.GPR* %25802, i32 0, i32 1
  %25804 = getelementptr inbounds %struct.Reg, %struct.Reg* %25803, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %25804 to i64*
  %25805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25806 = getelementptr inbounds %struct.GPR, %struct.GPR* %25805, i32 0, i32 15
  %25807 = getelementptr inbounds %struct.Reg, %struct.Reg* %25806, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %25807 to i64*
  %25808 = load i64, i64* %RBP.i6
  %25809 = sub i64 %25808, 100
  %25810 = load i64, i64* %PC.i5
  %25811 = add i64 %25810, 3
  store i64 %25811, i64* %PC.i5
  %25812 = inttoptr i64 %25809 to i32*
  %25813 = load i32, i32* %25812
  %25814 = zext i32 %25813 to i64
  store i64 %25814, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_4074ad, %struct.Memory** %MEMORY
  %loadMem_4074b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25816 = getelementptr inbounds %struct.GPR, %struct.GPR* %25815, i32 0, i32 33
  %25817 = getelementptr inbounds %struct.Reg, %struct.Reg* %25816, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %25817 to i64*
  %25818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25819 = getelementptr inbounds %struct.GPR, %struct.GPR* %25818, i32 0, i32 13
  %25820 = getelementptr inbounds %struct.Reg, %struct.Reg* %25819, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %25820 to i64*
  %25821 = load i64, i64* %RSP.i
  %25822 = load i64, i64* %PC.i4
  %25823 = add i64 %25822, 7
  store i64 %25823, i64* %PC.i4
  %25824 = add i64 256, %25821
  store i64 %25824, i64* %RSP.i, align 8
  %25825 = icmp ult i64 %25824, %25821
  %25826 = icmp ult i64 %25824, 256
  %25827 = or i1 %25825, %25826
  %25828 = zext i1 %25827 to i8
  %25829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25828, i8* %25829, align 1
  %25830 = trunc i64 %25824 to i32
  %25831 = and i32 %25830, 255
  %25832 = call i32 @llvm.ctpop.i32(i32 %25831)
  %25833 = trunc i32 %25832 to i8
  %25834 = and i8 %25833, 1
  %25835 = xor i8 %25834, 1
  %25836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25835, i8* %25836, align 1
  %25837 = xor i64 256, %25821
  %25838 = xor i64 %25837, %25824
  %25839 = lshr i64 %25838, 4
  %25840 = trunc i64 %25839 to i8
  %25841 = and i8 %25840, 1
  %25842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25841, i8* %25842, align 1
  %25843 = icmp eq i64 %25824, 0
  %25844 = zext i1 %25843 to i8
  %25845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25844, i8* %25845, align 1
  %25846 = lshr i64 %25824, 63
  %25847 = trunc i64 %25846 to i8
  %25848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25847, i8* %25848, align 1
  %25849 = lshr i64 %25821, 63
  %25850 = xor i64 %25846, %25849
  %25851 = add i64 %25850, %25846
  %25852 = icmp eq i64 %25851, 2
  %25853 = zext i1 %25852 to i8
  %25854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25853, i8* %25854, align 1
  store %struct.Memory* %loadMem_4074b0, %struct.Memory** %MEMORY
  %loadMem_4074b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25856 = getelementptr inbounds %struct.GPR, %struct.GPR* %25855, i32 0, i32 33
  %25857 = getelementptr inbounds %struct.Reg, %struct.Reg* %25856, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %25857 to i64*
  %25858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25859 = getelementptr inbounds %struct.GPR, %struct.GPR* %25858, i32 0, i32 15
  %25860 = getelementptr inbounds %struct.Reg, %struct.Reg* %25859, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %25860 to i64*
  %25861 = load i64, i64* %PC.i2
  %25862 = add i64 %25861, 1
  store i64 %25862, i64* %PC.i2
  %25863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %25864 = load i64, i64* %25863, align 8
  %25865 = add i64 %25864, 8
  %25866 = inttoptr i64 %25864 to i64*
  %25867 = load i64, i64* %25866
  store i64 %25867, i64* %RBP.i3, align 8
  store i64 %25865, i64* %25863, align 8
  store %struct.Memory* %loadMem_4074b7, %struct.Memory** %MEMORY
  %loadMem_4074b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25869 = getelementptr inbounds %struct.GPR, %struct.GPR* %25868, i32 0, i32 33
  %25870 = getelementptr inbounds %struct.Reg, %struct.Reg* %25869, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %25870 to i64*
  %25871 = load i64, i64* %PC.i1
  %25872 = add i64 %25871, 1
  store i64 %25872, i64* %PC.i1
  %25873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %25875 = load i64, i64* %25874, align 8
  %25876 = inttoptr i64 %25875 to i64*
  %25877 = load i64, i64* %25876
  store i64 %25877, i64* %25873, align 8
  %25878 = add i64 %25875, 8
  store i64 %25878, i64* %25874, align 8
  store %struct.Memory* %loadMem_4074b8, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4074b8
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x100___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 256
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 256
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 256, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___r8b(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 17
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  store i8 %14, i8* %R8B, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  store i64 4, i64* %9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R9D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x78__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa0__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_shll__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3738__r10____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x7c__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___r10__r11_8____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R11
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x80__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___r10____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r10__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__r10____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r10__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__r10____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__r11____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___r11___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R11, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r11___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R11
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R10, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r10__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x98__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__r10____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11bdc__r10____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %R10
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__r8b__MINUS0xa9__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 169
  %15 = load i8, i8* %R8B
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40639f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11c00__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72704
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sete__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0xa9__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 169
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0xa9__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 169
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 6, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x98__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rsi____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11bdc__rsi____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %RDX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %12, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = trunc i64 %9 to i32
  %22 = xor i32 %21, %12
  %23 = lshr i32 %22, 4
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %12, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %12, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %12, 31
  %34 = xor i32 %30, %33
  %35 = add i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11bdc__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %RAX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %12, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = trunc i64 %9 to i32
  %22 = xor i32 %21, %12
  %23 = lshr i32 %22, 4
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %12, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %12, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %12, 31
  %34 = xor i32 %30, %33
  %35 = add i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xf___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 15, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 15
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 15, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0xaa__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 170
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40642f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 156
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setne__al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorb__0xff___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = xor i64 255, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i8 %15, 7
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0xaa__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 170
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0xaa__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 170
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_406442(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40657a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_406500(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RAX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RAX, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406449(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x3338__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13112
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x33b8__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13240
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x3378__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13176
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x33f8__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13304
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406409(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0xab__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 171
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4065a7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0xab__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 171
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0xab__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 171
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4065ba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406719(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_406678(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4065c1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0xc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406581(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 100
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_406bd6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11afc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72444
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40677d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4067a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x98__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x54__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2380___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924288
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2381___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924289
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4067be(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2360___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924256
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2361___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924257
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_406808(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abs_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406914(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_406893(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x710020___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 7405600, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x70e8f0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x70e8f0_type* @G__0x70e8f0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x6c__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rdx__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x68__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RAX, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40690f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6ccf90___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 7131024, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x70fe80___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x70fe80_type* @G__0x70fe80 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_406b92(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 100
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_40693c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40694f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xf423f___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 999999, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 999999
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 999999, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40697f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b23a0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b23a0_type* @G__0x4b23a0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x9a4__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 2468
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x60__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl___rax__rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = inttoptr i64 %17 to i8*
  %21 = load i8, i8* %20
  %22 = zext i8 %21 to i64
  store i64 %22, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDX, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sign(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x88__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x5c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_406a1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406b8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_406aec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_406a8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x70d010___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x70d010_type* @G__0x70d010 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x6c__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rsi__r8_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RDI, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x68__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb0__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 11
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RDI, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406ae7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d09f0___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d09f0_type* @G__0x6d09f0 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xb4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406b88(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_406b3f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x70d010___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x70d010_type* @G__0x70d010 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x6c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RCX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x4___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 4
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %12, 4
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 4, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 9
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RSI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RSI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RSI, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406b83(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d09f0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d09f0_type* @G__0x6d09f0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406b92(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_406bc3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406bc8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406735(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x88__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x5c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0xbd__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 189
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_406c15(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0xbd__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 189
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0xbd__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 189
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_406c28(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406d3a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_406c6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x40__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406c2f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_406d27(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x50__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x50__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406ca2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406d2c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406bef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0xbe__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 190
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_406d67(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0xbe__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 190
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0xbe__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 190
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_406d7a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40733c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_406dc1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406d81(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_407329(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_407233(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x11bec__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72684
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x50__rbp__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rdi__r8_2____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x20___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 32, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 32
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 32, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = ashr i64 %9, 5
  %13 = trunc i64 %12 to i8
  %14 = and i8 %13, 1
  %15 = ashr i64 %12, 1
  store i64 %15, i64* %RSI, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %15 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %15, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = sub i64 %12, %13
  %17 = icmp ult i64 %12, %13
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i64 %16 to i32
  %21 = and i32 %20, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 %13, %12
  %28 = xor i64 %27, %16
  %29 = lshr i64 %28, 4
  %30 = trunc i64 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i64 %16, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %16, 63
  %37 = trunc i64 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %12, 63
  %40 = lshr i64 %13, 63
  %41 = xor i64 %40, %39
  %42 = xor i64 %36, %39
  %43 = add i64 %42, %41
  %44 = icmp eq i64 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_406ea2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406ef9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x50__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rdx__rsi_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 32, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 32
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 32, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarq__0x6___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = ashr i64 %9, 5
  %13 = trunc i64 %12 to i8
  %14 = and i8 %13, 1
  %15 = ashr i64 %12, 1
  store i64 %15, i64* %RAX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %15 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %15, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xd0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xc8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = sub i64 %12, %13
  %17 = icmp ult i64 %12, %13
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i64 %16 to i32
  %21 = and i32 %20, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 %13, %12
  %28 = xor i64 %27, %16
  %29 = lshr i64 %28, 4
  %30 = trunc i64 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i64 %16, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %16, 63
  %37 = trunc i64 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %12, 63
  %40 = lshr i64 %13, 63
  %41 = xor i64 %40, %39
  %42 = xor i64 %36, %39
  %43 = add i64 %42, %41
  %44 = icmp eq i64 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_406f2b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x11bec__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72684
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406ffd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x50__rbp__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rsi__rdi_2____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x20___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 32, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 32
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 32, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = ashr i64 %9, 5
  %13 = trunc i64 %12 to i8
  %14 = and i8 %13, 1
  %15 = ashr i64 %12, 1
  store i64 %15, i64* %RDX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %15 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %15, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = sub i64 %12, %13
  %17 = icmp ult i64 %12, %13
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i64 %16 to i32
  %21 = and i32 %20, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 %13, %12
  %28 = xor i64 %27, %16
  %29 = lshr i64 %28, 4
  %30 = trunc i64 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i64 %16, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %16, 63
  %37 = trunc i64 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %12, 63
  %40 = lshr i64 %13, 63
  %41 = xor i64 %40, %39
  %42 = xor i64 %36, %39
  %43 = add i64 %42, %41
  %44 = icmp eq i64 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_406f98(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406fef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xe0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xd8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp__rsi_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x50__rbp__rsi_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rdi__r8_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = sub i64 %12, %13
  %17 = icmp ult i64 %12, %13
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i64 %16 to i32
  %21 = and i32 %20, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 %13, %12
  %28 = xor i64 %27, %16
  %29 = lshr i64 %28, 4
  %30 = trunc i64 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i64 %16, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %16, 63
  %37 = trunc i64 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %12, 63
  %40 = lshr i64 %13, 63
  %41 = xor i64 %40, %39
  %42 = xor i64 %36, %39
  %43 = add i64 %42, %41
  %44 = icmp eq i64 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xe8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4070aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0xf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_407101(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x50__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xf0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xe8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_407133(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xf8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_407205(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x50__rbp__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4071a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x100__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4071f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x100__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x100__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xf8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_407316(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4072a5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_407311(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40731b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406df4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40732e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_406d41(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4074ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4074a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_407495(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40741a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx___di(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %DI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x18__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__di____rax__rcx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_407482(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx___si(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %SI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_407487(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_407369(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40749a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_407358(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4074ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x100___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 256, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 256
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 256, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
