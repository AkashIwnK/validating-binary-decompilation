; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6d4690_type = type <{ [8 x i8] }>
%G_0x6d4740_type = type <{ [8 x i8] }>
%G_0x6f9728_type = type <{ [8 x i8] }>
%G_0x70f6d0_type = type <{ [4 x i8] }>
%G_0x70fcf8_type = type <{ [8 x i8] }>
%G_0x7107a0_type = type <{ [4 x i8] }>
%G__0x6cc1b0_type = type <{ [8 x i8] }>
%G__0x6cc1f0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6d4690 = global %G_0x6d4690_type zeroinitializer
@G_0x6d4740 = global %G_0x6d4740_type zeroinitializer
@G_0x6f9728 = global %G_0x6f9728_type zeroinitializer
@G_0x70f6d0 = global %G_0x70f6d0_type zeroinitializer
@G_0x70fcf8 = global %G_0x70fcf8_type zeroinitializer
@G_0x7107a0 = global %G_0x7107a0_type zeroinitializer
@G__0x6cc1b0 = global %G__0x6cc1b0_type zeroinitializer
@G__0x6cc1f0 = global %G__0x6cc1f0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_43d8d0.OneComponentLumaPrediction4x4(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43b6b0.clip1a(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @LumaPrediction4x4(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_43df10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_43df10, %struct.Memory** %MEMORY
  %loadMem_43df11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i211 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i212 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i211
  %27 = load i64, i64* %PC.i210
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i210
  store i64 %26, i64* %RBP.i212, align 8
  store %struct.Memory* %loadMem_43df11, %struct.Memory** %MEMORY
  %loadMem_43df14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 29
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %R14.i918 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %R14.i918
  %36 = load i64, i64* %PC.i917
  %37 = add i64 %36, 2
  store i64 %37, i64* %PC.i917
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -8
  %41 = inttoptr i64 %40 to i64*
  store i64 %35, i64* %41
  store i64 %40, i64* %38, align 8
  store %struct.Memory* %loadMem_43df14, %struct.Memory** %MEMORY
  %loadMem_43df16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 33
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 3
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %RBX.i1126 = bitcast %union.anon* %47 to i64*
  %48 = load i64, i64* %RBX.i1126
  %49 = load i64, i64* %PC.i1125
  %50 = add i64 %49, 1
  store i64 %50, i64* %PC.i1125
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, -8
  %54 = inttoptr i64 %53 to i64*
  store i64 %48, i64* %54
  store i64 %53, i64* %51, align 8
  store %struct.Memory* %loadMem_43df16, %struct.Memory** %MEMORY
  %loadMem_43df17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 33
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %59 = getelementptr inbounds %struct.GPR, %struct.GPR* %58, i32 0, i32 13
  %60 = getelementptr inbounds %struct.Reg, %struct.Reg* %59, i32 0, i32 0
  %RSP.i1124 = bitcast %union.anon* %60 to i64*
  %61 = load i64, i64* %RSP.i1124
  %62 = load i64, i64* %PC.i1123
  %63 = add i64 %62, 7
  store i64 %63, i64* %PC.i1123
  %64 = sub i64 %61, 128
  store i64 %64, i64* %RSP.i1124, align 8
  %65 = icmp ult i64 %61, 128
  %66 = zext i1 %65 to i8
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %66, i8* %67, align 1
  %68 = trunc i64 %64 to i32
  %69 = and i32 %68, 255
  %70 = call i32 @llvm.ctpop.i32(i32 %69)
  %71 = trunc i32 %70 to i8
  %72 = and i8 %71, 1
  %73 = xor i8 %72, 1
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %73, i8* %74, align 1
  %75 = xor i64 128, %61
  %76 = xor i64 %75, %64
  %77 = lshr i64 %76, 4
  %78 = trunc i64 %77 to i8
  %79 = and i8 %78, 1
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %79, i8* %80, align 1
  %81 = icmp eq i64 %64, 0
  %82 = zext i1 %81 to i8
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %82, i8* %83, align 1
  %84 = lshr i64 %64, 63
  %85 = trunc i64 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %85, i8* %86, align 1
  %87 = lshr i64 %61, 63
  %88 = xor i64 %84, %87
  %89 = add i64 %88, %87
  %90 = icmp eq i64 %89, 2
  %91 = zext i1 %90 to i8
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %91, i8* %92, align 1
  store %struct.Memory* %loadMem_43df17, %struct.Memory** %MEMORY
  %loadMem_43df1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 33
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %95 to i64*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 1
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %AX.i1122 = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 19
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %101 to i16*
  %102 = load i16, i16* %R9W.i
  %103 = zext i16 %102 to i64
  %104 = load i64, i64* %PC.i1121
  %105 = add i64 %104, 4
  store i64 %105, i64* %PC.i1121
  store i16 %102, i16* %AX.i1122, align 2
  store %struct.Memory* %loadMem_43df1e, %struct.Memory** %MEMORY
  %loadMem_43df22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 33
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %108 to i64*
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 21
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %R10W.i1119 = bitcast %union.anon* %111 to i16*
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 15
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %RBP.i1120 = bitcast %union.anon* %114 to i64*
  %115 = load i64, i64* %RBP.i1120
  %116 = add i64 %115, 16
  %117 = load i64, i64* %PC.i1118
  %118 = add i64 %117, 5
  store i64 %118, i64* %PC.i1118
  %119 = inttoptr i64 %116 to i16*
  %120 = load i16, i16* %119
  store i16 %120, i16* %R10W.i1119, align 2
  store %struct.Memory* %loadMem_43df22, %struct.Memory** %MEMORY
  %loadMem_43df27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 33
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %123 to i64*
  %124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %125 = getelementptr inbounds %struct.GPR, %struct.GPR* %124, i32 0, i32 23
  %126 = getelementptr inbounds %struct.Reg, %struct.Reg* %125, i32 0, i32 0
  %R11.i1117 = bitcast %union.anon* %126 to i64*
  %127 = load i64, i64* %PC.i1116
  %128 = add i64 %127, 10
  store i64 %128, i64* %PC.i1116
  store i64 ptrtoint (%G__0x6cc1f0_type* @G__0x6cc1f0 to i64), i64* %R11.i1117, align 8
  store %struct.Memory* %loadMem_43df27, %struct.Memory** %MEMORY
  %loadMem_43df31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 33
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %131 to i64*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 3
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %RBX.i1115 = bitcast %union.anon* %134 to i64*
  %135 = load i64, i64* %PC.i1114
  %136 = add i64 %135, 10
  store i64 %136, i64* %PC.i1114
  store i64 ptrtoint (%G__0x6cc1b0_type* @G__0x6cc1b0 to i64), i64* %RBX.i1115, align 8
  store %struct.Memory* %loadMem_43df31, %struct.Memory** %MEMORY
  %loadMem_43df3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %138 = getelementptr inbounds %struct.GPR, %struct.GPR* %137, i32 0, i32 33
  %139 = getelementptr inbounds %struct.Reg, %struct.Reg* %138, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %139 to i64*
  %140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %141 = getelementptr inbounds %struct.GPR, %struct.GPR* %140, i32 0, i32 11
  %142 = getelementptr inbounds %struct.Reg, %struct.Reg* %141, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %142 to i32*
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %144 = getelementptr inbounds %struct.GPR, %struct.GPR* %143, i32 0, i32 15
  %145 = getelementptr inbounds %struct.Reg, %struct.Reg* %144, i32 0, i32 0
  %RBP.i1113 = bitcast %union.anon* %145 to i64*
  %146 = load i64, i64* %RBP.i1113
  %147 = sub i64 %146, 20
  %148 = load i32, i32* %EDI.i
  %149 = zext i32 %148 to i64
  %150 = load i64, i64* %PC.i1112
  %151 = add i64 %150, 3
  store i64 %151, i64* %PC.i1112
  %152 = inttoptr i64 %147 to i32*
  store i32 %148, i32* %152
  store %struct.Memory* %loadMem_43df3b, %struct.Memory** %MEMORY
  %loadMem_43df3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 33
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %155 to i64*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 9
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESI.i1110 = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %RBP.i1111 = bitcast %union.anon* %161 to i64*
  %162 = load i64, i64* %RBP.i1111
  %163 = sub i64 %162, 24
  %164 = load i32, i32* %ESI.i1110
  %165 = zext i32 %164 to i64
  %166 = load i64, i64* %PC.i1109
  %167 = add i64 %166, 3
  store i64 %167, i64* %PC.i1109
  %168 = inttoptr i64 %163 to i32*
  store i32 %164, i32* %168
  store %struct.Memory* %loadMem_43df3e, %struct.Memory** %MEMORY
  %loadMem_43df41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 33
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %171 to i64*
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %173 = getelementptr inbounds %struct.GPR, %struct.GPR* %172, i32 0, i32 7
  %174 = getelementptr inbounds %struct.Reg, %struct.Reg* %173, i32 0, i32 0
  %EDX.i1107 = bitcast %union.anon* %174 to i32*
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %176 = getelementptr inbounds %struct.GPR, %struct.GPR* %175, i32 0, i32 15
  %177 = getelementptr inbounds %struct.Reg, %struct.Reg* %176, i32 0, i32 0
  %RBP.i1108 = bitcast %union.anon* %177 to i64*
  %178 = load i64, i64* %RBP.i1108
  %179 = sub i64 %178, 28
  %180 = load i32, i32* %EDX.i1107
  %181 = zext i32 %180 to i64
  %182 = load i64, i64* %PC.i1106
  %183 = add i64 %182, 3
  store i64 %183, i64* %PC.i1106
  %184 = inttoptr i64 %179 to i32*
  store i32 %180, i32* %184
  store %struct.Memory* %loadMem_43df41, %struct.Memory** %MEMORY
  %loadMem_43df44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %186 = getelementptr inbounds %struct.GPR, %struct.GPR* %185, i32 0, i32 33
  %187 = getelementptr inbounds %struct.Reg, %struct.Reg* %186, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %187 to i64*
  %188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %189 = getelementptr inbounds %struct.GPR, %struct.GPR* %188, i32 0, i32 5
  %190 = getelementptr inbounds %struct.Reg, %struct.Reg* %189, i32 0, i32 0
  %ECX.i1104 = bitcast %union.anon* %190 to i32*
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %192 = getelementptr inbounds %struct.GPR, %struct.GPR* %191, i32 0, i32 15
  %193 = getelementptr inbounds %struct.Reg, %struct.Reg* %192, i32 0, i32 0
  %RBP.i1105 = bitcast %union.anon* %193 to i64*
  %194 = load i64, i64* %RBP.i1105
  %195 = sub i64 %194, 32
  %196 = load i32, i32* %ECX.i1104
  %197 = zext i32 %196 to i64
  %198 = load i64, i64* %PC.i1103
  %199 = add i64 %198, 3
  store i64 %199, i64* %PC.i1103
  %200 = inttoptr i64 %195 to i32*
  store i32 %196, i32* %200
  store %struct.Memory* %loadMem_43df44, %struct.Memory** %MEMORY
  %loadMem_43df47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 33
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 17
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %R8D.i1101 = bitcast %union.anon* %206 to i32*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 15
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %209 to i64*
  %210 = load i64, i64* %RBP.i1102
  %211 = sub i64 %210, 36
  %212 = load i32, i32* %R8D.i1101
  %213 = zext i32 %212 to i64
  %214 = load i64, i64* %PC.i1100
  %215 = add i64 %214, 4
  store i64 %215, i64* %PC.i1100
  %216 = inttoptr i64 %211 to i32*
  store i32 %212, i32* %216
  store %struct.Memory* %loadMem_43df47, %struct.Memory** %MEMORY
  %loadMem_43df4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %218 = getelementptr inbounds %struct.GPR, %struct.GPR* %217, i32 0, i32 33
  %219 = getelementptr inbounds %struct.Reg, %struct.Reg* %218, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %219 to i64*
  %220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %221 = getelementptr inbounds %struct.GPR, %struct.GPR* %220, i32 0, i32 1
  %222 = getelementptr inbounds %struct.Reg, %struct.Reg* %221, i32 0, i32 0
  %AX.i1098 = bitcast %union.anon* %222 to i16*
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %224 = getelementptr inbounds %struct.GPR, %struct.GPR* %223, i32 0, i32 15
  %225 = getelementptr inbounds %struct.Reg, %struct.Reg* %224, i32 0, i32 0
  %RBP.i1099 = bitcast %union.anon* %225 to i64*
  %226 = load i64, i64* %RBP.i1099
  %227 = sub i64 %226, 38
  %228 = load i16, i16* %AX.i1098
  %229 = zext i16 %228 to i64
  %230 = load i64, i64* %PC.i1097
  %231 = add i64 %230, 4
  store i64 %231, i64* %PC.i1097
  %232 = inttoptr i64 %227 to i16*
  store i16 %228, i16* %232
  store %struct.Memory* %loadMem_43df4b, %struct.Memory** %MEMORY
  %loadMem_43df4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %234 = getelementptr inbounds %struct.GPR, %struct.GPR* %233, i32 0, i32 33
  %235 = getelementptr inbounds %struct.Reg, %struct.Reg* %234, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %235 to i64*
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %237 = getelementptr inbounds %struct.GPR, %struct.GPR* %236, i32 0, i32 21
  %238 = getelementptr inbounds %struct.Reg, %struct.Reg* %237, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %238 to i16*
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %240 = getelementptr inbounds %struct.GPR, %struct.GPR* %239, i32 0, i32 15
  %241 = getelementptr inbounds %struct.Reg, %struct.Reg* %240, i32 0, i32 0
  %RBP.i1096 = bitcast %union.anon* %241 to i64*
  %242 = load i64, i64* %RBP.i1096
  %243 = sub i64 %242, 40
  %244 = load i16, i16* %R10W.i
  %245 = zext i16 %244 to i64
  %246 = load i64, i64* %PC.i1095
  %247 = add i64 %246, 5
  store i64 %247, i64* %PC.i1095
  %248 = inttoptr i64 %243 to i16*
  store i16 %244, i16* %248
  store %struct.Memory* %loadMem_43df4f, %struct.Memory** %MEMORY
  %loadMem_43df54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %250 = getelementptr inbounds %struct.GPR, %struct.GPR* %249, i32 0, i32 33
  %251 = getelementptr inbounds %struct.Reg, %struct.Reg* %250, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %251 to i64*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %253 = getelementptr inbounds %struct.GPR, %struct.GPR* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %RCX.i1093 = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %256 = getelementptr inbounds %struct.GPR, %struct.GPR* %255, i32 0, i32 15
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %RBP.i1094 = bitcast %union.anon* %257 to i64*
  %258 = load i64, i64* %RBP.i1094
  %259 = sub i64 %258, 20
  %260 = load i64, i64* %PC.i1092
  %261 = add i64 %260, 3
  store i64 %261, i64* %PC.i1092
  %262 = inttoptr i64 %259 to i32*
  %263 = load i32, i32* %262
  %264 = zext i32 %263 to i64
  store i64 %264, i64* %RCX.i1093, align 8
  store %struct.Memory* %loadMem_43df54, %struct.Memory** %MEMORY
  %loadMem_43df57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 33
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %267 to i64*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %269 = getelementptr inbounds %struct.GPR, %struct.GPR* %268, i32 0, i32 5
  %270 = getelementptr inbounds %struct.Reg, %struct.Reg* %269, i32 0, i32 0
  %RCX.i1091 = bitcast %union.anon* %270 to i64*
  %271 = load i64, i64* %RCX.i1091
  %272 = load i64, i64* %PC.i1090
  %273 = add i64 %272, 3
  store i64 %273, i64* %PC.i1090
  %274 = trunc i64 %271 to i32
  %275 = add i32 4, %274
  %276 = zext i32 %275 to i64
  store i64 %276, i64* %RCX.i1091, align 8
  %277 = icmp ult i32 %275, %274
  %278 = icmp ult i32 %275, 4
  %279 = or i1 %277, %278
  %280 = zext i1 %279 to i8
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %280, i8* %281, align 1
  %282 = and i32 %275, 255
  %283 = call i32 @llvm.ctpop.i32(i32 %282)
  %284 = trunc i32 %283 to i8
  %285 = and i8 %284, 1
  %286 = xor i8 %285, 1
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %286, i8* %287, align 1
  %288 = xor i64 4, %271
  %289 = trunc i64 %288 to i32
  %290 = xor i32 %289, %275
  %291 = lshr i32 %290, 4
  %292 = trunc i32 %291 to i8
  %293 = and i8 %292, 1
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %293, i8* %294, align 1
  %295 = icmp eq i32 %275, 0
  %296 = zext i1 %295 to i8
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %296, i8* %297, align 1
  %298 = lshr i32 %275, 31
  %299 = trunc i32 %298 to i8
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %299, i8* %300, align 1
  %301 = lshr i32 %274, 31
  %302 = xor i32 %298, %301
  %303 = add i32 %302, %298
  %304 = icmp eq i32 %303, 2
  %305 = zext i1 %304 to i8
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %305, i8* %306, align 1
  store %struct.Memory* %loadMem_43df57, %struct.Memory** %MEMORY
  %loadMem_43df5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %308 = getelementptr inbounds %struct.GPR, %struct.GPR* %307, i32 0, i32 33
  %309 = getelementptr inbounds %struct.Reg, %struct.Reg* %308, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %309 to i64*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %311 = getelementptr inbounds %struct.GPR, %struct.GPR* %310, i32 0, i32 5
  %312 = getelementptr inbounds %struct.Reg, %struct.Reg* %311, i32 0, i32 0
  %ECX.i1088 = bitcast %union.anon* %312 to i32*
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %314 = getelementptr inbounds %struct.GPR, %struct.GPR* %313, i32 0, i32 15
  %315 = getelementptr inbounds %struct.Reg, %struct.Reg* %314, i32 0, i32 0
  %RBP.i1089 = bitcast %union.anon* %315 to i64*
  %316 = load i64, i64* %RBP.i1089
  %317 = sub i64 %316, 52
  %318 = load i32, i32* %ECX.i1088
  %319 = zext i32 %318 to i64
  %320 = load i64, i64* %PC.i1087
  %321 = add i64 %320, 3
  store i64 %321, i64* %PC.i1087
  %322 = inttoptr i64 %317 to i32*
  store i32 %318, i32* %322
  store %struct.Memory* %loadMem_43df5a, %struct.Memory** %MEMORY
  %loadMem_43df5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %324 = getelementptr inbounds %struct.GPR, %struct.GPR* %323, i32 0, i32 33
  %325 = getelementptr inbounds %struct.Reg, %struct.Reg* %324, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %325 to i64*
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %327 = getelementptr inbounds %struct.GPR, %struct.GPR* %326, i32 0, i32 5
  %328 = getelementptr inbounds %struct.Reg, %struct.Reg* %327, i32 0, i32 0
  %RCX.i1085 = bitcast %union.anon* %328 to i64*
  %329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %330 = getelementptr inbounds %struct.GPR, %struct.GPR* %329, i32 0, i32 15
  %331 = getelementptr inbounds %struct.Reg, %struct.Reg* %330, i32 0, i32 0
  %RBP.i1086 = bitcast %union.anon* %331 to i64*
  %332 = load i64, i64* %RBP.i1086
  %333 = sub i64 %332, 24
  %334 = load i64, i64* %PC.i1084
  %335 = add i64 %334, 3
  store i64 %335, i64* %PC.i1084
  %336 = inttoptr i64 %333 to i32*
  %337 = load i32, i32* %336
  %338 = zext i32 %337 to i64
  store i64 %338, i64* %RCX.i1085, align 8
  store %struct.Memory* %loadMem_43df5d, %struct.Memory** %MEMORY
  %loadMem_43df60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %340 = getelementptr inbounds %struct.GPR, %struct.GPR* %339, i32 0, i32 33
  %341 = getelementptr inbounds %struct.Reg, %struct.Reg* %340, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %341 to i64*
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %343 = getelementptr inbounds %struct.GPR, %struct.GPR* %342, i32 0, i32 5
  %344 = getelementptr inbounds %struct.Reg, %struct.Reg* %343, i32 0, i32 0
  %RCX.i1083 = bitcast %union.anon* %344 to i64*
  %345 = load i64, i64* %RCX.i1083
  %346 = load i64, i64* %PC.i1082
  %347 = add i64 %346, 3
  store i64 %347, i64* %PC.i1082
  %348 = trunc i64 %345 to i32
  %349 = add i32 4, %348
  %350 = zext i32 %349 to i64
  store i64 %350, i64* %RCX.i1083, align 8
  %351 = icmp ult i32 %349, %348
  %352 = icmp ult i32 %349, 4
  %353 = or i1 %351, %352
  %354 = zext i1 %353 to i8
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %354, i8* %355, align 1
  %356 = and i32 %349, 255
  %357 = call i32 @llvm.ctpop.i32(i32 %356)
  %358 = trunc i32 %357 to i8
  %359 = and i8 %358, 1
  %360 = xor i8 %359, 1
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %360, i8* %361, align 1
  %362 = xor i64 4, %345
  %363 = trunc i64 %362 to i32
  %364 = xor i32 %363, %349
  %365 = lshr i32 %364, 4
  %366 = trunc i32 %365 to i8
  %367 = and i8 %366, 1
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %367, i8* %368, align 1
  %369 = icmp eq i32 %349, 0
  %370 = zext i1 %369 to i8
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %370, i8* %371, align 1
  %372 = lshr i32 %349, 31
  %373 = trunc i32 %372 to i8
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %373, i8* %374, align 1
  %375 = lshr i32 %348, 31
  %376 = xor i32 %372, %375
  %377 = add i32 %376, %372
  %378 = icmp eq i32 %377, 2
  %379 = zext i1 %378 to i8
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %379, i8* %380, align 1
  store %struct.Memory* %loadMem_43df60, %struct.Memory** %MEMORY
  %loadMem_43df63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %382 = getelementptr inbounds %struct.GPR, %struct.GPR* %381, i32 0, i32 33
  %383 = getelementptr inbounds %struct.Reg, %struct.Reg* %382, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %383 to i64*
  %384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %385 = getelementptr inbounds %struct.GPR, %struct.GPR* %384, i32 0, i32 5
  %386 = getelementptr inbounds %struct.Reg, %struct.Reg* %385, i32 0, i32 0
  %ECX.i1080 = bitcast %union.anon* %386 to i32*
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %388 = getelementptr inbounds %struct.GPR, %struct.GPR* %387, i32 0, i32 15
  %389 = getelementptr inbounds %struct.Reg, %struct.Reg* %388, i32 0, i32 0
  %RBP.i1081 = bitcast %union.anon* %389 to i64*
  %390 = load i64, i64* %RBP.i1081
  %391 = sub i64 %390, 56
  %392 = load i32, i32* %ECX.i1080
  %393 = zext i32 %392 to i64
  %394 = load i64, i64* %PC.i1079
  %395 = add i64 %394, 3
  store i64 %395, i64* %PC.i1079
  %396 = inttoptr i64 %391 to i32*
  store i32 %392, i32* %396
  store %struct.Memory* %loadMem_43df63, %struct.Memory** %MEMORY
  %loadMem_43df66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %398 = getelementptr inbounds %struct.GPR, %struct.GPR* %397, i32 0, i32 33
  %399 = getelementptr inbounds %struct.Reg, %struct.Reg* %398, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %399 to i64*
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %401 = getelementptr inbounds %struct.GPR, %struct.GPR* %400, i32 0, i32 29
  %402 = getelementptr inbounds %struct.Reg, %struct.Reg* %401, i32 0, i32 0
  %R14.i1078 = bitcast %union.anon* %402 to i64*
  %403 = load i64, i64* %PC.i1077
  %404 = add i64 %403, 8
  store i64 %404, i64* %PC.i1077
  %405 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %405, i64* %R14.i1078, align 8
  store %struct.Memory* %loadMem_43df66, %struct.Memory** %MEMORY
  %loadMem_43df6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %407 = getelementptr inbounds %struct.GPR, %struct.GPR* %406, i32 0, i32 33
  %408 = getelementptr inbounds %struct.Reg, %struct.Reg* %407, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %408 to i64*
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %410 = getelementptr inbounds %struct.GPR, %struct.GPR* %409, i32 0, i32 5
  %411 = getelementptr inbounds %struct.Reg, %struct.Reg* %410, i32 0, i32 0
  %RCX.i1075 = bitcast %union.anon* %411 to i64*
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %413 = getelementptr inbounds %struct.GPR, %struct.GPR* %412, i32 0, i32 29
  %414 = getelementptr inbounds %struct.Reg, %struct.Reg* %413, i32 0, i32 0
  %R14.i1076 = bitcast %union.anon* %414 to i64*
  %415 = load i64, i64* %R14.i1076
  %416 = add i64 %415, 168
  %417 = load i64, i64* %PC.i1074
  %418 = add i64 %417, 7
  store i64 %418, i64* %PC.i1074
  %419 = inttoptr i64 %416 to i32*
  %420 = load i32, i32* %419
  %421 = zext i32 %420 to i64
  store i64 %421, i64* %RCX.i1075, align 8
  store %struct.Memory* %loadMem_43df6e, %struct.Memory** %MEMORY
  %loadMem_43df75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %423 = getelementptr inbounds %struct.GPR, %struct.GPR* %422, i32 0, i32 33
  %424 = getelementptr inbounds %struct.Reg, %struct.Reg* %423, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %424 to i64*
  %425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %426 = getelementptr inbounds %struct.GPR, %struct.GPR* %425, i32 0, i32 5
  %427 = getelementptr inbounds %struct.Reg, %struct.Reg* %426, i32 0, i32 0
  %RCX.i1072 = bitcast %union.anon* %427 to i64*
  %428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %429 = getelementptr inbounds %struct.GPR, %struct.GPR* %428, i32 0, i32 15
  %430 = getelementptr inbounds %struct.Reg, %struct.Reg* %429, i32 0, i32 0
  %RBP.i1073 = bitcast %union.anon* %430 to i64*
  %431 = load i64, i64* %RCX.i1072
  %432 = load i64, i64* %RBP.i1073
  %433 = sub i64 %432, 20
  %434 = load i64, i64* %PC.i1071
  %435 = add i64 %434, 3
  store i64 %435, i64* %PC.i1071
  %436 = trunc i64 %431 to i32
  %437 = inttoptr i64 %433 to i32*
  %438 = load i32, i32* %437
  %439 = add i32 %438, %436
  %440 = zext i32 %439 to i64
  store i64 %440, i64* %RCX.i1072, align 8
  %441 = icmp ult i32 %439, %436
  %442 = icmp ult i32 %439, %438
  %443 = or i1 %441, %442
  %444 = zext i1 %443 to i8
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %444, i8* %445, align 1
  %446 = and i32 %439, 255
  %447 = call i32 @llvm.ctpop.i32(i32 %446)
  %448 = trunc i32 %447 to i8
  %449 = and i8 %448, 1
  %450 = xor i8 %449, 1
  %451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %450, i8* %451, align 1
  %452 = xor i32 %438, %436
  %453 = xor i32 %452, %439
  %454 = lshr i32 %453, 4
  %455 = trunc i32 %454 to i8
  %456 = and i8 %455, 1
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %456, i8* %457, align 1
  %458 = icmp eq i32 %439, 0
  %459 = zext i1 %458 to i8
  %460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %459, i8* %460, align 1
  %461 = lshr i32 %439, 31
  %462 = trunc i32 %461 to i8
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %462, i8* %463, align 1
  %464 = lshr i32 %436, 31
  %465 = lshr i32 %438, 31
  %466 = xor i32 %461, %464
  %467 = xor i32 %461, %465
  %468 = add i32 %466, %467
  %469 = icmp eq i32 %468, 2
  %470 = zext i1 %469 to i8
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %470, i8* %471, align 1
  store %struct.Memory* %loadMem_43df75, %struct.Memory** %MEMORY
  %loadMem_43df78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %473 = getelementptr inbounds %struct.GPR, %struct.GPR* %472, i32 0, i32 33
  %474 = getelementptr inbounds %struct.Reg, %struct.Reg* %473, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %474 to i64*
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %476 = getelementptr inbounds %struct.GPR, %struct.GPR* %475, i32 0, i32 5
  %477 = getelementptr inbounds %struct.Reg, %struct.Reg* %476, i32 0, i32 0
  %ECX.i1069 = bitcast %union.anon* %477 to i32*
  %478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %479 = getelementptr inbounds %struct.GPR, %struct.GPR* %478, i32 0, i32 15
  %480 = getelementptr inbounds %struct.Reg, %struct.Reg* %479, i32 0, i32 0
  %RBP.i1070 = bitcast %union.anon* %480 to i64*
  %481 = load i64, i64* %RBP.i1070
  %482 = sub i64 %481, 60
  %483 = load i32, i32* %ECX.i1069
  %484 = zext i32 %483 to i64
  %485 = load i64, i64* %PC.i1068
  %486 = add i64 %485, 3
  store i64 %486, i64* %PC.i1068
  %487 = inttoptr i64 %482 to i32*
  store i32 %483, i32* %487
  store %struct.Memory* %loadMem_43df78, %struct.Memory** %MEMORY
  %loadMem_43df7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %489 = getelementptr inbounds %struct.GPR, %struct.GPR* %488, i32 0, i32 33
  %490 = getelementptr inbounds %struct.Reg, %struct.Reg* %489, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %490 to i64*
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 29
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %R14.i1067 = bitcast %union.anon* %493 to i64*
  %494 = load i64, i64* %PC.i1066
  %495 = add i64 %494, 8
  store i64 %495, i64* %PC.i1066
  %496 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %496, i64* %R14.i1067, align 8
  store %struct.Memory* %loadMem_43df7b, %struct.Memory** %MEMORY
  %loadMem_43df83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %498 = getelementptr inbounds %struct.GPR, %struct.GPR* %497, i32 0, i32 33
  %499 = getelementptr inbounds %struct.Reg, %struct.Reg* %498, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %499 to i64*
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %501 = getelementptr inbounds %struct.GPR, %struct.GPR* %500, i32 0, i32 5
  %502 = getelementptr inbounds %struct.Reg, %struct.Reg* %501, i32 0, i32 0
  %RCX.i1064 = bitcast %union.anon* %502 to i64*
  %503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %504 = getelementptr inbounds %struct.GPR, %struct.GPR* %503, i32 0, i32 29
  %505 = getelementptr inbounds %struct.Reg, %struct.Reg* %504, i32 0, i32 0
  %R14.i1065 = bitcast %union.anon* %505 to i64*
  %506 = load i64, i64* %R14.i1065
  %507 = add i64 %506, 172
  %508 = load i64, i64* %PC.i1063
  %509 = add i64 %508, 7
  store i64 %509, i64* %PC.i1063
  %510 = inttoptr i64 %507 to i32*
  %511 = load i32, i32* %510
  %512 = zext i32 %511 to i64
  store i64 %512, i64* %RCX.i1064, align 8
  store %struct.Memory* %loadMem_43df83, %struct.Memory** %MEMORY
  %loadMem_43df8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %514 = getelementptr inbounds %struct.GPR, %struct.GPR* %513, i32 0, i32 33
  %515 = getelementptr inbounds %struct.Reg, %struct.Reg* %514, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %515 to i64*
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %517 = getelementptr inbounds %struct.GPR, %struct.GPR* %516, i32 0, i32 5
  %518 = getelementptr inbounds %struct.Reg, %struct.Reg* %517, i32 0, i32 0
  %RCX.i1061 = bitcast %union.anon* %518 to i64*
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %520 = getelementptr inbounds %struct.GPR, %struct.GPR* %519, i32 0, i32 15
  %521 = getelementptr inbounds %struct.Reg, %struct.Reg* %520, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %521 to i64*
  %522 = load i64, i64* %RCX.i1061
  %523 = load i64, i64* %RBP.i1062
  %524 = sub i64 %523, 24
  %525 = load i64, i64* %PC.i1060
  %526 = add i64 %525, 3
  store i64 %526, i64* %PC.i1060
  %527 = trunc i64 %522 to i32
  %528 = inttoptr i64 %524 to i32*
  %529 = load i32, i32* %528
  %530 = add i32 %529, %527
  %531 = zext i32 %530 to i64
  store i64 %531, i64* %RCX.i1061, align 8
  %532 = icmp ult i32 %530, %527
  %533 = icmp ult i32 %530, %529
  %534 = or i1 %532, %533
  %535 = zext i1 %534 to i8
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %535, i8* %536, align 1
  %537 = and i32 %530, 255
  %538 = call i32 @llvm.ctpop.i32(i32 %537)
  %539 = trunc i32 %538 to i8
  %540 = and i8 %539, 1
  %541 = xor i8 %540, 1
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %541, i8* %542, align 1
  %543 = xor i32 %529, %527
  %544 = xor i32 %543, %530
  %545 = lshr i32 %544, 4
  %546 = trunc i32 %545 to i8
  %547 = and i8 %546, 1
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %547, i8* %548, align 1
  %549 = icmp eq i32 %530, 0
  %550 = zext i1 %549 to i8
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %550, i8* %551, align 1
  %552 = lshr i32 %530, 31
  %553 = trunc i32 %552 to i8
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %553, i8* %554, align 1
  %555 = lshr i32 %527, 31
  %556 = lshr i32 %529, 31
  %557 = xor i32 %552, %555
  %558 = xor i32 %552, %556
  %559 = add i32 %557, %558
  %560 = icmp eq i32 %559, 2
  %561 = zext i1 %560 to i8
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %561, i8* %562, align 1
  store %struct.Memory* %loadMem_43df8a, %struct.Memory** %MEMORY
  %loadMem_43df8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %564 = getelementptr inbounds %struct.GPR, %struct.GPR* %563, i32 0, i32 33
  %565 = getelementptr inbounds %struct.Reg, %struct.Reg* %564, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %565 to i64*
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %567 = getelementptr inbounds %struct.GPR, %struct.GPR* %566, i32 0, i32 5
  %568 = getelementptr inbounds %struct.Reg, %struct.Reg* %567, i32 0, i32 0
  %ECX.i1058 = bitcast %union.anon* %568 to i32*
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %570 = getelementptr inbounds %struct.GPR, %struct.GPR* %569, i32 0, i32 15
  %571 = getelementptr inbounds %struct.Reg, %struct.Reg* %570, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %571 to i64*
  %572 = load i64, i64* %RBP.i1059
  %573 = sub i64 %572, 64
  %574 = load i32, i32* %ECX.i1058
  %575 = zext i32 %574 to i64
  %576 = load i64, i64* %PC.i1057
  %577 = add i64 %576, 3
  store i64 %577, i64* %PC.i1057
  %578 = inttoptr i64 %573 to i32*
  store i32 %574, i32* %578
  store %struct.Memory* %loadMem_43df8d, %struct.Memory** %MEMORY
  %loadMem_43df90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %580 = getelementptr inbounds %struct.GPR, %struct.GPR* %579, i32 0, i32 33
  %581 = getelementptr inbounds %struct.Reg, %struct.Reg* %580, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %581 to i64*
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %583 = getelementptr inbounds %struct.GPR, %struct.GPR* %582, i32 0, i32 5
  %584 = getelementptr inbounds %struct.Reg, %struct.Reg* %583, i32 0, i32 0
  %RCX.i1055 = bitcast %union.anon* %584 to i64*
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %586 = getelementptr inbounds %struct.GPR, %struct.GPR* %585, i32 0, i32 15
  %587 = getelementptr inbounds %struct.Reg, %struct.Reg* %586, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %587 to i64*
  %588 = load i64, i64* %RBP.i1056
  %589 = sub i64 %588, 20
  %590 = load i64, i64* %PC.i1054
  %591 = add i64 %590, 3
  store i64 %591, i64* %PC.i1054
  %592 = inttoptr i64 %589 to i32*
  %593 = load i32, i32* %592
  %594 = zext i32 %593 to i64
  store i64 %594, i64* %RCX.i1055, align 8
  store %struct.Memory* %loadMem_43df90, %struct.Memory** %MEMORY
  %loadMem_43df93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %596 = getelementptr inbounds %struct.GPR, %struct.GPR* %595, i32 0, i32 33
  %597 = getelementptr inbounds %struct.Reg, %struct.Reg* %596, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %597 to i64*
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %599 = getelementptr inbounds %struct.GPR, %struct.GPR* %598, i32 0, i32 5
  %600 = getelementptr inbounds %struct.Reg, %struct.Reg* %599, i32 0, i32 0
  %RCX.i1053 = bitcast %union.anon* %600 to i64*
  %601 = load i64, i64* %RCX.i1053
  %602 = load i64, i64* %PC.i1052
  %603 = add i64 %602, 3
  store i64 %603, i64* %PC.i1052
  %604 = shl i64 %601, 32
  %605 = ashr exact i64 %604, 32
  %606 = ashr i64 %605, 1
  %607 = lshr i64 %606, 1
  %608 = trunc i64 %606 to i8
  %609 = and i8 %608, 1
  %610 = trunc i64 %607 to i32
  %611 = and i64 %607, 4294967295
  store i64 %611, i64* %RCX.i1053, align 8
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %609, i8* %612, align 1
  %613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %614 = and i32 %610, 255
  %615 = call i32 @llvm.ctpop.i32(i32 %614)
  %616 = trunc i32 %615 to i8
  %617 = and i8 %616, 1
  %618 = xor i8 %617, 1
  store i8 %618, i8* %613, align 1
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %619, align 1
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %621 = icmp eq i32 %610, 0
  %622 = zext i1 %621 to i8
  store i8 %622, i8* %620, align 1
  %623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %624 = lshr i32 %610, 31
  %625 = trunc i32 %624 to i8
  store i8 %625, i8* %623, align 1
  %626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %626, align 1
  store %struct.Memory* %loadMem_43df93, %struct.Memory** %MEMORY
  %loadMem_43df96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %628 = getelementptr inbounds %struct.GPR, %struct.GPR* %627, i32 0, i32 33
  %629 = getelementptr inbounds %struct.Reg, %struct.Reg* %628, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %629 to i64*
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %631 = getelementptr inbounds %struct.GPR, %struct.GPR* %630, i32 0, i32 5
  %632 = getelementptr inbounds %struct.Reg, %struct.Reg* %631, i32 0, i32 0
  %ECX.i1050 = bitcast %union.anon* %632 to i32*
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %634 = getelementptr inbounds %struct.GPR, %struct.GPR* %633, i32 0, i32 15
  %635 = getelementptr inbounds %struct.Reg, %struct.Reg* %634, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %635 to i64*
  %636 = load i64, i64* %RBP.i1051
  %637 = sub i64 %636, 68
  %638 = load i32, i32* %ECX.i1050
  %639 = zext i32 %638 to i64
  %640 = load i64, i64* %PC.i1049
  %641 = add i64 %640, 3
  store i64 %641, i64* %PC.i1049
  %642 = inttoptr i64 %637 to i32*
  store i32 %638, i32* %642
  store %struct.Memory* %loadMem_43df96, %struct.Memory** %MEMORY
  %loadMem_43df99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %644 = getelementptr inbounds %struct.GPR, %struct.GPR* %643, i32 0, i32 33
  %645 = getelementptr inbounds %struct.Reg, %struct.Reg* %644, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %645 to i64*
  %646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %647 = getelementptr inbounds %struct.GPR, %struct.GPR* %646, i32 0, i32 5
  %648 = getelementptr inbounds %struct.Reg, %struct.Reg* %647, i32 0, i32 0
  %RCX.i1047 = bitcast %union.anon* %648 to i64*
  %649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %650 = getelementptr inbounds %struct.GPR, %struct.GPR* %649, i32 0, i32 15
  %651 = getelementptr inbounds %struct.Reg, %struct.Reg* %650, i32 0, i32 0
  %RBP.i1048 = bitcast %union.anon* %651 to i64*
  %652 = load i64, i64* %RBP.i1048
  %653 = sub i64 %652, 24
  %654 = load i64, i64* %PC.i1046
  %655 = add i64 %654, 3
  store i64 %655, i64* %PC.i1046
  %656 = inttoptr i64 %653 to i32*
  %657 = load i32, i32* %656
  %658 = zext i32 %657 to i64
  store i64 %658, i64* %RCX.i1047, align 8
  store %struct.Memory* %loadMem_43df99, %struct.Memory** %MEMORY
  %loadMem_43df9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %660 = getelementptr inbounds %struct.GPR, %struct.GPR* %659, i32 0, i32 33
  %661 = getelementptr inbounds %struct.Reg, %struct.Reg* %660, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %661 to i64*
  %662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %663 = getelementptr inbounds %struct.GPR, %struct.GPR* %662, i32 0, i32 5
  %664 = getelementptr inbounds %struct.Reg, %struct.Reg* %663, i32 0, i32 0
  %RCX.i1045 = bitcast %union.anon* %664 to i64*
  %665 = load i64, i64* %RCX.i1045
  %666 = load i64, i64* %PC.i1044
  %667 = add i64 %666, 3
  store i64 %667, i64* %PC.i1044
  %668 = shl i64 %665, 32
  %669 = ashr exact i64 %668, 32
  %670 = ashr i64 %669, 1
  %671 = lshr i64 %670, 1
  %672 = trunc i64 %670 to i8
  %673 = and i8 %672, 1
  %674 = trunc i64 %671 to i32
  %675 = and i64 %671, 4294967295
  store i64 %675, i64* %RCX.i1045, align 8
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %673, i8* %676, align 1
  %677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %678 = and i32 %674, 255
  %679 = call i32 @llvm.ctpop.i32(i32 %678)
  %680 = trunc i32 %679 to i8
  %681 = and i8 %680, 1
  %682 = xor i8 %681, 1
  store i8 %682, i8* %677, align 1
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %683, align 1
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %685 = icmp eq i32 %674, 0
  %686 = zext i1 %685 to i8
  store i8 %686, i8* %684, align 1
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %688 = lshr i32 %674, 31
  %689 = trunc i32 %688 to i8
  store i8 %689, i8* %687, align 1
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %690, align 1
  store %struct.Memory* %loadMem_43df9c, %struct.Memory** %MEMORY
  %loadMem_43df9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %692 = getelementptr inbounds %struct.GPR, %struct.GPR* %691, i32 0, i32 33
  %693 = getelementptr inbounds %struct.Reg, %struct.Reg* %692, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %693 to i64*
  %694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %695 = getelementptr inbounds %struct.GPR, %struct.GPR* %694, i32 0, i32 5
  %696 = getelementptr inbounds %struct.Reg, %struct.Reg* %695, i32 0, i32 0
  %ECX.i1042 = bitcast %union.anon* %696 to i32*
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %698 = getelementptr inbounds %struct.GPR, %struct.GPR* %697, i32 0, i32 15
  %699 = getelementptr inbounds %struct.Reg, %struct.Reg* %698, i32 0, i32 0
  %RBP.i1043 = bitcast %union.anon* %699 to i64*
  %700 = load i64, i64* %RBP.i1043
  %701 = sub i64 %700, 72
  %702 = load i32, i32* %ECX.i1042
  %703 = zext i32 %702 to i64
  %704 = load i64, i64* %PC.i1041
  %705 = add i64 %704, 3
  store i64 %705, i64* %PC.i1041
  %706 = inttoptr i64 %701 to i32*
  store i32 %702, i32* %706
  store %struct.Memory* %loadMem_43df9f, %struct.Memory** %MEMORY
  %loadMem_43dfa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %708 = getelementptr inbounds %struct.GPR, %struct.GPR* %707, i32 0, i32 33
  %709 = getelementptr inbounds %struct.Reg, %struct.Reg* %708, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %709 to i64*
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %711 = getelementptr inbounds %struct.GPR, %struct.GPR* %710, i32 0, i32 3
  %712 = getelementptr inbounds %struct.Reg, %struct.Reg* %711, i32 0, i32 0
  %RBX.i1039 = bitcast %union.anon* %712 to i64*
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %714 = getelementptr inbounds %struct.GPR, %struct.GPR* %713, i32 0, i32 15
  %715 = getelementptr inbounds %struct.Reg, %struct.Reg* %714, i32 0, i32 0
  %RBP.i1040 = bitcast %union.anon* %715 to i64*
  %716 = load i64, i64* %RBP.i1040
  %717 = sub i64 %716, 80
  %718 = load i64, i64* %RBX.i1039
  %719 = load i64, i64* %PC.i1038
  %720 = add i64 %719, 4
  store i64 %720, i64* %PC.i1038
  %721 = inttoptr i64 %717 to i64*
  store i64 %718, i64* %721
  store %struct.Memory* %loadMem_43dfa2, %struct.Memory** %MEMORY
  %loadMem_43dfa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %723 = getelementptr inbounds %struct.GPR, %struct.GPR* %722, i32 0, i32 33
  %724 = getelementptr inbounds %struct.Reg, %struct.Reg* %723, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %724 to i64*
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 15
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %RBP.i1036 = bitcast %union.anon* %727 to i64*
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 23
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %R11.i1037 = bitcast %union.anon* %730 to i64*
  %731 = load i64, i64* %RBP.i1036
  %732 = sub i64 %731, 88
  %733 = load i64, i64* %R11.i1037
  %734 = load i64, i64* %PC.i1035
  %735 = add i64 %734, 4
  store i64 %735, i64* %PC.i1035
  %736 = inttoptr i64 %732 to i64*
  store i64 %733, i64* %736
  store %struct.Memory* %loadMem_43dfa6, %struct.Memory** %MEMORY
  %loadMem_43dfaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %738 = getelementptr inbounds %struct.GPR, %struct.GPR* %737, i32 0, i32 33
  %739 = getelementptr inbounds %struct.Reg, %struct.Reg* %738, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %739 to i64*
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %741 = getelementptr inbounds %struct.GPR, %struct.GPR* %740, i32 0, i32 23
  %742 = getelementptr inbounds %struct.Reg, %struct.Reg* %741, i32 0, i32 0
  %R11.i1034 = bitcast %union.anon* %742 to i64*
  %743 = load i64, i64* %PC.i1033
  %744 = add i64 %743, 8
  store i64 %744, i64* %PC.i1033
  %745 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %745, i64* %R11.i1034, align 8
  store %struct.Memory* %loadMem_43dfaa, %struct.Memory** %MEMORY
  %loadMem_43dfb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %747 = getelementptr inbounds %struct.GPR, %struct.GPR* %746, i32 0, i32 33
  %748 = getelementptr inbounds %struct.Reg, %struct.Reg* %747, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %748 to i64*
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %750 = getelementptr inbounds %struct.GPR, %struct.GPR* %749, i32 0, i32 23
  %751 = getelementptr inbounds %struct.Reg, %struct.Reg* %750, i32 0, i32 0
  %R11.i1032 = bitcast %union.anon* %751 to i64*
  %752 = load i64, i64* %R11.i1032
  %753 = add i64 %752, 14168
  %754 = load i64, i64* %PC.i1031
  %755 = add i64 %754, 7
  store i64 %755, i64* %PC.i1031
  %756 = inttoptr i64 %753 to i64*
  %757 = load i64, i64* %756
  store i64 %757, i64* %R11.i1032, align 8
  store %struct.Memory* %loadMem_43dfb2, %struct.Memory** %MEMORY
  %loadMem_43dfb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %759 = getelementptr inbounds %struct.GPR, %struct.GPR* %758, i32 0, i32 33
  %760 = getelementptr inbounds %struct.Reg, %struct.Reg* %759, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %760 to i64*
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 3
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %RBX.i1030 = bitcast %union.anon* %763 to i64*
  %764 = load i64, i64* %PC.i1029
  %765 = add i64 %764, 8
  store i64 %765, i64* %PC.i1029
  %766 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %766, i64* %RBX.i1030, align 8
  store %struct.Memory* %loadMem_43dfb9, %struct.Memory** %MEMORY
  %loadMem_43dfc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %768 = getelementptr inbounds %struct.GPR, %struct.GPR* %767, i32 0, i32 33
  %769 = getelementptr inbounds %struct.Reg, %struct.Reg* %768, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %769 to i64*
  %770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %771 = getelementptr inbounds %struct.GPR, %struct.GPR* %770, i32 0, i32 3
  %772 = getelementptr inbounds %struct.Reg, %struct.Reg* %771, i32 0, i32 0
  %RBX.i1028 = bitcast %union.anon* %772 to i64*
  %773 = load i64, i64* %RBX.i1028
  %774 = add i64 %773, 12
  %775 = load i64, i64* %PC.i1027
  %776 = add i64 %775, 4
  store i64 %776, i64* %PC.i1027
  %777 = inttoptr i64 %774 to i32*
  %778 = load i32, i32* %777
  %779 = sext i32 %778 to i64
  store i64 %779, i64* %RBX.i1028, align 8
  store %struct.Memory* %loadMem_43dfc1, %struct.Memory** %MEMORY
  %loadMem_43dfc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %781 = getelementptr inbounds %struct.GPR, %struct.GPR* %780, i32 0, i32 33
  %782 = getelementptr inbounds %struct.Reg, %struct.Reg* %781, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %782 to i64*
  %783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %784 = getelementptr inbounds %struct.GPR, %struct.GPR* %783, i32 0, i32 3
  %785 = getelementptr inbounds %struct.Reg, %struct.Reg* %784, i32 0, i32 0
  %RBX.i1026 = bitcast %union.anon* %785 to i64*
  %786 = load i64, i64* %RBX.i1026
  %787 = load i64, i64* %PC.i1025
  %788 = add i64 %787, 7
  store i64 %788, i64* %PC.i1025
  %789 = sext i64 %786 to i128
  %790 = and i128 %789, -18446744073709551616
  %791 = zext i64 %786 to i128
  %792 = or i128 %790, %791
  %793 = mul i128 632, %792
  %794 = trunc i128 %793 to i64
  store i64 %794, i64* %RBX.i1026, align 8
  %795 = sext i64 %794 to i128
  %796 = icmp ne i128 %795, %793
  %797 = zext i1 %796 to i8
  %798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %797, i8* %798, align 1
  %799 = trunc i128 %793 to i32
  %800 = and i32 %799, 255
  %801 = call i32 @llvm.ctpop.i32(i32 %800)
  %802 = trunc i32 %801 to i8
  %803 = and i8 %802, 1
  %804 = xor i8 %803, 1
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %804, i8* %805, align 1
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %806, align 1
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %807, align 1
  %808 = lshr i64 %794, 63
  %809 = trunc i64 %808 to i8
  %810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %809, i8* %810, align 1
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %797, i8* %811, align 1
  store %struct.Memory* %loadMem_43dfc5, %struct.Memory** %MEMORY
  %loadMem_43dfcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 33
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %814 to i64*
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 3
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %RBX.i1023 = bitcast %union.anon* %817 to i64*
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 23
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %R11.i1024 = bitcast %union.anon* %820 to i64*
  %821 = load i64, i64* %R11.i1024
  %822 = load i64, i64* %RBX.i1023
  %823 = load i64, i64* %PC.i1022
  %824 = add i64 %823, 3
  store i64 %824, i64* %PC.i1022
  %825 = add i64 %822, %821
  store i64 %825, i64* %R11.i1024, align 8
  %826 = icmp ult i64 %825, %821
  %827 = icmp ult i64 %825, %822
  %828 = or i1 %826, %827
  %829 = zext i1 %828 to i8
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %829, i8* %830, align 1
  %831 = trunc i64 %825 to i32
  %832 = and i32 %831, 255
  %833 = call i32 @llvm.ctpop.i32(i32 %832)
  %834 = trunc i32 %833 to i8
  %835 = and i8 %834, 1
  %836 = xor i8 %835, 1
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %836, i8* %837, align 1
  %838 = xor i64 %822, %821
  %839 = xor i64 %838, %825
  %840 = lshr i64 %839, 4
  %841 = trunc i64 %840 to i8
  %842 = and i8 %841, 1
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %842, i8* %843, align 1
  %844 = icmp eq i64 %825, 0
  %845 = zext i1 %844 to i8
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %845, i8* %846, align 1
  %847 = lshr i64 %825, 63
  %848 = trunc i64 %847 to i8
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %848, i8* %849, align 1
  %850 = lshr i64 %821, 63
  %851 = lshr i64 %822, 63
  %852 = xor i64 %847, %850
  %853 = xor i64 %847, %851
  %854 = add i64 %852, %853
  %855 = icmp eq i64 %854, 2
  %856 = zext i1 %855 to i8
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %856, i8* %857, align 1
  store %struct.Memory* %loadMem_43dfcc, %struct.Memory** %MEMORY
  %loadMem_43dfcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 33
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %860 to i64*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 15
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %RBP.i1020 = bitcast %union.anon* %863 to i64*
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %865 = getelementptr inbounds %struct.GPR, %struct.GPR* %864, i32 0, i32 23
  %866 = getelementptr inbounds %struct.Reg, %struct.Reg* %865, i32 0, i32 0
  %R11.i1021 = bitcast %union.anon* %866 to i64*
  %867 = load i64, i64* %RBP.i1020
  %868 = sub i64 %867, 96
  %869 = load i64, i64* %R11.i1021
  %870 = load i64, i64* %PC.i1019
  %871 = add i64 %870, 4
  store i64 %871, i64* %PC.i1019
  %872 = inttoptr i64 %868 to i64*
  store i64 %869, i64* %872
  store %struct.Memory* %loadMem_43dfcf, %struct.Memory** %MEMORY
  %loadMem_43dfd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %874 = getelementptr inbounds %struct.GPR, %struct.GPR* %873, i32 0, i32 33
  %875 = getelementptr inbounds %struct.Reg, %struct.Reg* %874, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %875 to i64*
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %877 = getelementptr inbounds %struct.GPR, %struct.GPR* %876, i32 0, i32 23
  %878 = getelementptr inbounds %struct.Reg, %struct.Reg* %877, i32 0, i32 0
  %R11.i1018 = bitcast %union.anon* %878 to i64*
  %879 = load i64, i64* %PC.i1017
  %880 = add i64 %879, 8
  store i64 %880, i64* %PC.i1017
  %881 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %881, i64* %R11.i1018, align 8
  store %struct.Memory* %loadMem_43dfd3, %struct.Memory** %MEMORY
  %loadMem_43dfdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %883 = getelementptr inbounds %struct.GPR, %struct.GPR* %882, i32 0, i32 33
  %884 = getelementptr inbounds %struct.Reg, %struct.Reg* %883, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %884 to i64*
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %886 = getelementptr inbounds %struct.GPR, %struct.GPR* %885, i32 0, i32 23
  %887 = getelementptr inbounds %struct.Reg, %struct.Reg* %886, i32 0, i32 0
  %R11.i = bitcast %union.anon* %887 to i64*
  %888 = load i64, i64* %R11.i
  %889 = add i64 %888, 192
  %890 = load i64, i64* %PC.i1016
  %891 = add i64 %890, 8
  store i64 %891, i64* %PC.i1016
  %892 = inttoptr i64 %889 to i32*
  %893 = load i32, i32* %892
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %894, align 1
  %895 = and i32 %893, 255
  %896 = call i32 @llvm.ctpop.i32(i32 %895)
  %897 = trunc i32 %896 to i8
  %898 = and i8 %897, 1
  %899 = xor i8 %898, 1
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %899, i8* %900, align 1
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %901, align 1
  %902 = icmp eq i32 %893, 0
  %903 = zext i1 %902 to i8
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %903, i8* %904, align 1
  %905 = lshr i32 %893, 31
  %906 = trunc i32 %905 to i8
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %906, i8* %907, align 1
  %908 = lshr i32 %893, 31
  %909 = xor i32 %905, %908
  %910 = add i32 %909, %908
  %911 = icmp eq i32 %910, 2
  %912 = zext i1 %911 to i8
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %912, i8* %913, align 1
  store %struct.Memory* %loadMem_43dfdb, %struct.Memory** %MEMORY
  %loadMem_43dfe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %915 = getelementptr inbounds %struct.GPR, %struct.GPR* %914, i32 0, i32 33
  %916 = getelementptr inbounds %struct.Reg, %struct.Reg* %915, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %916 to i64*
  %917 = load i64, i64* %PC.i1015
  %918 = add i64 %917, 52
  %919 = load i64, i64* %PC.i1015
  %920 = add i64 %919, 6
  %921 = load i64, i64* %PC.i1015
  %922 = add i64 %921, 6
  store i64 %922, i64* %PC.i1015
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %924 = load i8, i8* %923, align 1
  store i8 %924, i8* %BRANCH_TAKEN, align 1
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %926 = icmp ne i8 %924, 0
  %927 = select i1 %926, i64 %918, i64 %920
  store i64 %927, i64* %925, align 8
  store %struct.Memory* %loadMem_43dfe3, %struct.Memory** %MEMORY
  %loadBr_43dfe3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43dfe3 = icmp eq i8 %loadBr_43dfe3, 1
  br i1 %cmpBr_43dfe3, label %block_.L_43e017, label %block_43dfe9

block_43dfe9:                                     ; preds = %entry
  %loadMem_43dfe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %929 = getelementptr inbounds %struct.GPR, %struct.GPR* %928, i32 0, i32 33
  %930 = getelementptr inbounds %struct.Reg, %struct.Reg* %929, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %930 to i64*
  %931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %932 = getelementptr inbounds %struct.GPR, %struct.GPR* %931, i32 0, i32 1
  %933 = getelementptr inbounds %struct.Reg, %struct.Reg* %932, i32 0, i32 0
  %934 = bitcast %union.anon* %933 to %struct.anon.2*
  %AL.i1014 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %934, i32 0, i32 0
  %935 = load i64, i64* %PC.i1013
  %936 = add i64 %935, 2
  store i64 %936, i64* %PC.i1013
  store i8 1, i8* %AL.i1014, align 1
  store %struct.Memory* %loadMem_43dfe9, %struct.Memory** %MEMORY
  %loadMem_43dfeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %938 = getelementptr inbounds %struct.GPR, %struct.GPR* %937, i32 0, i32 33
  %939 = getelementptr inbounds %struct.Reg, %struct.Reg* %938, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %939 to i64*
  %940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %941 = getelementptr inbounds %struct.GPR, %struct.GPR* %940, i32 0, i32 5
  %942 = getelementptr inbounds %struct.Reg, %struct.Reg* %941, i32 0, i32 0
  %RCX.i1012 = bitcast %union.anon* %942 to i64*
  %943 = load i64, i64* %PC.i1011
  %944 = add i64 %943, 8
  store i64 %944, i64* %PC.i1011
  %945 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %945, i64* %RCX.i1012, align 8
  store %struct.Memory* %loadMem_43dfeb, %struct.Memory** %MEMORY
  %loadMem_43dff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %947 = getelementptr inbounds %struct.GPR, %struct.GPR* %946, i32 0, i32 33
  %948 = getelementptr inbounds %struct.Reg, %struct.Reg* %947, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %948 to i64*
  %949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %950 = getelementptr inbounds %struct.GPR, %struct.GPR* %949, i32 0, i32 5
  %951 = getelementptr inbounds %struct.Reg, %struct.Reg* %950, i32 0, i32 0
  %RCX.i1010 = bitcast %union.anon* %951 to i64*
  %952 = load i64, i64* %RCX.i1010
  %953 = add i64 %952, 24
  %954 = load i64, i64* %PC.i1009
  %955 = add i64 %954, 4
  store i64 %955, i64* %PC.i1009
  %956 = inttoptr i64 %953 to i32*
  %957 = load i32, i32* %956
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %958, align 1
  %959 = and i32 %957, 255
  %960 = call i32 @llvm.ctpop.i32(i32 %959)
  %961 = trunc i32 %960 to i8
  %962 = and i8 %961, 1
  %963 = xor i8 %962, 1
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %963, i8* %964, align 1
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %965, align 1
  %966 = icmp eq i32 %957, 0
  %967 = zext i1 %966 to i8
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %967, i8* %968, align 1
  %969 = lshr i32 %957, 31
  %970 = trunc i32 %969 to i8
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %970, i8* %971, align 1
  %972 = lshr i32 %957, 31
  %973 = xor i32 %969, %972
  %974 = add i32 %973, %972
  %975 = icmp eq i32 %974, 2
  %976 = zext i1 %975 to i8
  %977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %976, i8* %977, align 1
  store %struct.Memory* %loadMem_43dff3, %struct.Memory** %MEMORY
  %loadMem_43dff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %979 = getelementptr inbounds %struct.GPR, %struct.GPR* %978, i32 0, i32 33
  %980 = getelementptr inbounds %struct.Reg, %struct.Reg* %979, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %980 to i64*
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %982 = getelementptr inbounds %struct.GPR, %struct.GPR* %981, i32 0, i32 1
  %983 = getelementptr inbounds %struct.Reg, %struct.Reg* %982, i32 0, i32 0
  %984 = bitcast %union.anon* %983 to %struct.anon.2*
  %AL.i1007 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %984, i32 0, i32 0
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %986 = getelementptr inbounds %struct.GPR, %struct.GPR* %985, i32 0, i32 15
  %987 = getelementptr inbounds %struct.Reg, %struct.Reg* %986, i32 0, i32 0
  %RBP.i1008 = bitcast %union.anon* %987 to i64*
  %988 = load i64, i64* %RBP.i1008
  %989 = sub i64 %988, 117
  %990 = load i8, i8* %AL.i1007
  %991 = zext i8 %990 to i64
  %992 = load i64, i64* %PC.i1006
  %993 = add i64 %992, 3
  store i64 %993, i64* %PC.i1006
  %994 = inttoptr i64 %989 to i8*
  store i8 %990, i8* %994
  store %struct.Memory* %loadMem_43dff7, %struct.Memory** %MEMORY
  %loadMem_43dffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %996 = getelementptr inbounds %struct.GPR, %struct.GPR* %995, i32 0, i32 33
  %997 = getelementptr inbounds %struct.Reg, %struct.Reg* %996, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %997 to i64*
  %998 = load i64, i64* %PC.i1005
  %999 = add i64 %998, 81
  %1000 = load i64, i64* %PC.i1005
  %1001 = add i64 %1000, 6
  %1002 = load i64, i64* %PC.i1005
  %1003 = add i64 %1002, 6
  store i64 %1003, i64* %PC.i1005
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1005 = load i8, i8* %1004, align 1
  store i8 %1005, i8* %BRANCH_TAKEN, align 1
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1007 = icmp ne i8 %1005, 0
  %1008 = select i1 %1007, i64 %999, i64 %1001
  store i64 %1008, i64* %1006, align 8
  store %struct.Memory* %loadMem_43dffa, %struct.Memory** %MEMORY
  %loadBr_43dffa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43dffa = icmp eq i8 %loadBr_43dffa, 1
  br i1 %cmpBr_43dffa, label %block_.L_43e04b, label %block_43e000

block_43e000:                                     ; preds = %block_43dfe9
  %loadMem_43e000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1010 = getelementptr inbounds %struct.GPR, %struct.GPR* %1009, i32 0, i32 33
  %1011 = getelementptr inbounds %struct.Reg, %struct.Reg* %1010, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %1011 to i64*
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1013 = getelementptr inbounds %struct.GPR, %struct.GPR* %1012, i32 0, i32 1
  %1014 = getelementptr inbounds %struct.Reg, %struct.Reg* %1013, i32 0, i32 0
  %1015 = bitcast %union.anon* %1014 to %struct.anon.2*
  %AL.i1004 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1015, i32 0, i32 0
  %1016 = load i64, i64* %PC.i1003
  %1017 = add i64 %1016, 2
  store i64 %1017, i64* %PC.i1003
  store i8 1, i8* %AL.i1004, align 1
  store %struct.Memory* %loadMem_43e000, %struct.Memory** %MEMORY
  %loadMem_43e002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1019 = getelementptr inbounds %struct.GPR, %struct.GPR* %1018, i32 0, i32 33
  %1020 = getelementptr inbounds %struct.Reg, %struct.Reg* %1019, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %1020 to i64*
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1022 = getelementptr inbounds %struct.GPR, %struct.GPR* %1021, i32 0, i32 5
  %1023 = getelementptr inbounds %struct.Reg, %struct.Reg* %1022, i32 0, i32 0
  %RCX.i1002 = bitcast %union.anon* %1023 to i64*
  %1024 = load i64, i64* %PC.i1001
  %1025 = add i64 %1024, 8
  store i64 %1025, i64* %PC.i1001
  %1026 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1026, i64* %RCX.i1002, align 8
  store %struct.Memory* %loadMem_43e002, %struct.Memory** %MEMORY
  %loadMem_43e00a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1028 = getelementptr inbounds %struct.GPR, %struct.GPR* %1027, i32 0, i32 33
  %1029 = getelementptr inbounds %struct.Reg, %struct.Reg* %1028, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %1029 to i64*
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1031 = getelementptr inbounds %struct.GPR, %struct.GPR* %1030, i32 0, i32 5
  %1032 = getelementptr inbounds %struct.Reg, %struct.Reg* %1031, i32 0, i32 0
  %RCX.i1000 = bitcast %union.anon* %1032 to i64*
  %1033 = load i64, i64* %RCX.i1000
  %1034 = add i64 %1033, 24
  %1035 = load i64, i64* %PC.i999
  %1036 = add i64 %1035, 4
  store i64 %1036, i64* %PC.i999
  %1037 = inttoptr i64 %1034 to i32*
  %1038 = load i32, i32* %1037
  %1039 = sub i32 %1038, 3
  %1040 = icmp ult i32 %1038, 3
  %1041 = zext i1 %1040 to i8
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1041, i8* %1042, align 1
  %1043 = and i32 %1039, 255
  %1044 = call i32 @llvm.ctpop.i32(i32 %1043)
  %1045 = trunc i32 %1044 to i8
  %1046 = and i8 %1045, 1
  %1047 = xor i8 %1046, 1
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1047, i8* %1048, align 1
  %1049 = xor i32 %1038, 3
  %1050 = xor i32 %1049, %1039
  %1051 = lshr i32 %1050, 4
  %1052 = trunc i32 %1051 to i8
  %1053 = and i8 %1052, 1
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1053, i8* %1054, align 1
  %1055 = icmp eq i32 %1039, 0
  %1056 = zext i1 %1055 to i8
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1056, i8* %1057, align 1
  %1058 = lshr i32 %1039, 31
  %1059 = trunc i32 %1058 to i8
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1059, i8* %1060, align 1
  %1061 = lshr i32 %1038, 31
  %1062 = xor i32 %1058, %1061
  %1063 = add i32 %1062, %1061
  %1064 = icmp eq i32 %1063, 2
  %1065 = zext i1 %1064 to i8
  %1066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1065, i8* %1066, align 1
  store %struct.Memory* %loadMem_43e00a, %struct.Memory** %MEMORY
  %loadMem_43e00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1068 = getelementptr inbounds %struct.GPR, %struct.GPR* %1067, i32 0, i32 33
  %1069 = getelementptr inbounds %struct.Reg, %struct.Reg* %1068, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %1069 to i64*
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1071 = getelementptr inbounds %struct.GPR, %struct.GPR* %1070, i32 0, i32 1
  %1072 = getelementptr inbounds %struct.Reg, %struct.Reg* %1071, i32 0, i32 0
  %1073 = bitcast %union.anon* %1072 to %struct.anon.2*
  %AL.i997 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1073, i32 0, i32 0
  %1074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1075 = getelementptr inbounds %struct.GPR, %struct.GPR* %1074, i32 0, i32 15
  %1076 = getelementptr inbounds %struct.Reg, %struct.Reg* %1075, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %1076 to i64*
  %1077 = load i64, i64* %RBP.i998
  %1078 = sub i64 %1077, 117
  %1079 = load i8, i8* %AL.i997
  %1080 = zext i8 %1079 to i64
  %1081 = load i64, i64* %PC.i996
  %1082 = add i64 %1081, 3
  store i64 %1082, i64* %PC.i996
  %1083 = inttoptr i64 %1078 to i8*
  store i8 %1079, i8* %1083
  store %struct.Memory* %loadMem_43e00e, %struct.Memory** %MEMORY
  %loadMem_43e011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1085 = getelementptr inbounds %struct.GPR, %struct.GPR* %1084, i32 0, i32 33
  %1086 = getelementptr inbounds %struct.Reg, %struct.Reg* %1085, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %1086 to i64*
  %1087 = load i64, i64* %PC.i995
  %1088 = add i64 %1087, 58
  %1089 = load i64, i64* %PC.i995
  %1090 = add i64 %1089, 6
  %1091 = load i64, i64* %PC.i995
  %1092 = add i64 %1091, 6
  store i64 %1092, i64* %PC.i995
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1094 = load i8, i8* %1093, align 1
  store i8 %1094, i8* %BRANCH_TAKEN, align 1
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1096 = icmp ne i8 %1094, 0
  %1097 = select i1 %1096, i64 %1088, i64 %1090
  store i64 %1097, i64* %1095, align 8
  store %struct.Memory* %loadMem_43e011, %struct.Memory** %MEMORY
  %loadBr_43e011 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e011 = icmp eq i8 %loadBr_43e011, 1
  br i1 %cmpBr_43e011, label %block_.L_43e04b, label %block_.L_43e017

block_.L_43e017:                                  ; preds = %block_43e000, %entry
  %loadMem_43e017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1099 = getelementptr inbounds %struct.GPR, %struct.GPR* %1098, i32 0, i32 33
  %1100 = getelementptr inbounds %struct.Reg, %struct.Reg* %1099, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %1100 to i64*
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1102 = getelementptr inbounds %struct.GPR, %struct.GPR* %1101, i32 0, i32 1
  %1103 = getelementptr inbounds %struct.Reg, %struct.Reg* %1102, i32 0, i32 0
  %EAX.i993 = bitcast %union.anon* %1103 to i32*
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1105 = getelementptr inbounds %struct.GPR, %struct.GPR* %1104, i32 0, i32 1
  %1106 = getelementptr inbounds %struct.Reg, %struct.Reg* %1105, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %1106 to i64*
  %1107 = load i64, i64* %RAX.i994
  %1108 = load i32, i32* %EAX.i993
  %1109 = zext i32 %1108 to i64
  %1110 = load i64, i64* %PC.i992
  %1111 = add i64 %1110, 2
  store i64 %1111, i64* %PC.i992
  %1112 = xor i64 %1109, %1107
  %1113 = trunc i64 %1112 to i32
  %1114 = and i64 %1112, 4294967295
  store i64 %1114, i64* %RAX.i994, align 8
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1115, align 1
  %1116 = and i32 %1113, 255
  %1117 = call i32 @llvm.ctpop.i32(i32 %1116)
  %1118 = trunc i32 %1117 to i8
  %1119 = and i8 %1118, 1
  %1120 = xor i8 %1119, 1
  %1121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1120, i8* %1121, align 1
  %1122 = icmp eq i32 %1113, 0
  %1123 = zext i1 %1122 to i8
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1123, i8* %1124, align 1
  %1125 = lshr i32 %1113, 31
  %1126 = trunc i32 %1125 to i8
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1126, i8* %1127, align 1
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1128, align 1
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1129, align 1
  store %struct.Memory* %loadMem_43e017, %struct.Memory** %MEMORY
  %loadMem_43e019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1131 = getelementptr inbounds %struct.GPR, %struct.GPR* %1130, i32 0, i32 33
  %1132 = getelementptr inbounds %struct.Reg, %struct.Reg* %1131, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %1132 to i64*
  %1133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1134 = getelementptr inbounds %struct.GPR, %struct.GPR* %1133, i32 0, i32 1
  %1135 = getelementptr inbounds %struct.Reg, %struct.Reg* %1134, i32 0, i32 0
  %1136 = bitcast %union.anon* %1135 to %struct.anon.2*
  %AL.i990 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1136, i32 0, i32 0
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1138 = getelementptr inbounds %struct.GPR, %struct.GPR* %1137, i32 0, i32 5
  %1139 = getelementptr inbounds %struct.Reg, %struct.Reg* %1138, i32 0, i32 0
  %1140 = bitcast %union.anon* %1139 to %struct.anon.2*
  %CL.i991 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1140, i32 0, i32 0
  %1141 = load i8, i8* %AL.i990
  %1142 = zext i8 %1141 to i64
  %1143 = load i64, i64* %PC.i989
  %1144 = add i64 %1143, 2
  store i64 %1144, i64* %PC.i989
  store i8 %1141, i8* %CL.i991, align 1
  store %struct.Memory* %loadMem_43e019, %struct.Memory** %MEMORY
  %loadMem_43e01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1146 = getelementptr inbounds %struct.GPR, %struct.GPR* %1145, i32 0, i32 33
  %1147 = getelementptr inbounds %struct.Reg, %struct.Reg* %1146, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %1147 to i64*
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1149 = getelementptr inbounds %struct.GPR, %struct.GPR* %1148, i32 0, i32 7
  %1150 = getelementptr inbounds %struct.Reg, %struct.Reg* %1149, i32 0, i32 0
  %RDX.i988 = bitcast %union.anon* %1150 to i64*
  %1151 = load i64, i64* %PC.i987
  %1152 = add i64 %1151, 8
  store i64 %1152, i64* %PC.i987
  %1153 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %1153, i64* %RDX.i988, align 8
  store %struct.Memory* %loadMem_43e01b, %struct.Memory** %MEMORY
  %loadMem_43e023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1155 = getelementptr inbounds %struct.GPR, %struct.GPR* %1154, i32 0, i32 33
  %1156 = getelementptr inbounds %struct.Reg, %struct.Reg* %1155, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %1156 to i64*
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1158 = getelementptr inbounds %struct.GPR, %struct.GPR* %1157, i32 0, i32 7
  %1159 = getelementptr inbounds %struct.Reg, %struct.Reg* %1158, i32 0, i32 0
  %RDX.i986 = bitcast %union.anon* %1159 to i64*
  %1160 = load i64, i64* %RDX.i986
  %1161 = add i64 %1160, 196
  %1162 = load i64, i64* %PC.i985
  %1163 = add i64 %1162, 7
  store i64 %1163, i64* %PC.i985
  %1164 = inttoptr i64 %1161 to i32*
  %1165 = load i32, i32* %1164
  %1166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1166, align 1
  %1167 = and i32 %1165, 255
  %1168 = call i32 @llvm.ctpop.i32(i32 %1167)
  %1169 = trunc i32 %1168 to i8
  %1170 = and i8 %1169, 1
  %1171 = xor i8 %1170, 1
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1171, i8* %1172, align 1
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1173, align 1
  %1174 = icmp eq i32 %1165, 0
  %1175 = zext i1 %1174 to i8
  %1176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1175, i8* %1176, align 1
  %1177 = lshr i32 %1165, 31
  %1178 = trunc i32 %1177 to i8
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1178, i8* %1179, align 1
  %1180 = lshr i32 %1165, 31
  %1181 = xor i32 %1177, %1180
  %1182 = add i32 %1181, %1180
  %1183 = icmp eq i32 %1182, 2
  %1184 = zext i1 %1183 to i8
  %1185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1184, i8* %1185, align 1
  store %struct.Memory* %loadMem_43e023, %struct.Memory** %MEMORY
  %loadMem_43e02a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1187 = getelementptr inbounds %struct.GPR, %struct.GPR* %1186, i32 0, i32 33
  %1188 = getelementptr inbounds %struct.Reg, %struct.Reg* %1187, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %1188 to i64*
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1190 = getelementptr inbounds %struct.GPR, %struct.GPR* %1189, i32 0, i32 5
  %1191 = getelementptr inbounds %struct.Reg, %struct.Reg* %1190, i32 0, i32 0
  %1192 = bitcast %union.anon* %1191 to %struct.anon.2*
  %CL.i983 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1192, i32 0, i32 0
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1194 = getelementptr inbounds %struct.GPR, %struct.GPR* %1193, i32 0, i32 15
  %1195 = getelementptr inbounds %struct.Reg, %struct.Reg* %1194, i32 0, i32 0
  %RBP.i984 = bitcast %union.anon* %1195 to i64*
  %1196 = load i64, i64* %RBP.i984
  %1197 = sub i64 %1196, 118
  %1198 = load i8, i8* %CL.i983
  %1199 = zext i8 %1198 to i64
  %1200 = load i64, i64* %PC.i982
  %1201 = add i64 %1200, 3
  store i64 %1201, i64* %PC.i982
  %1202 = inttoptr i64 %1197 to i8*
  store i8 %1198, i8* %1202
  store %struct.Memory* %loadMem_43e02a, %struct.Memory** %MEMORY
  %loadMem_43e02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1204 = getelementptr inbounds %struct.GPR, %struct.GPR* %1203, i32 0, i32 33
  %1205 = getelementptr inbounds %struct.Reg, %struct.Reg* %1204, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %1205 to i64*
  %1206 = load i64, i64* %PC.i981
  %1207 = add i64 %1206, 24
  %1208 = load i64, i64* %PC.i981
  %1209 = add i64 %1208, 6
  %1210 = load i64, i64* %PC.i981
  %1211 = add i64 %1210, 6
  store i64 %1211, i64* %PC.i981
  %1212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1213 = load i8, i8* %1212, align 1
  store i8 %1213, i8* %BRANCH_TAKEN, align 1
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1215 = icmp ne i8 %1213, 0
  %1216 = select i1 %1215, i64 %1207, i64 %1209
  store i64 %1216, i64* %1214, align 8
  store %struct.Memory* %loadMem_43e02d, %struct.Memory** %MEMORY
  %loadBr_43e02d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e02d = icmp eq i8 %loadBr_43e02d, 1
  br i1 %cmpBr_43e02d, label %block_.L_43e045, label %block_43e033

block_43e033:                                     ; preds = %block_.L_43e017
  %loadMem_43e033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1218 = getelementptr inbounds %struct.GPR, %struct.GPR* %1217, i32 0, i32 33
  %1219 = getelementptr inbounds %struct.Reg, %struct.Reg* %1218, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %1219 to i64*
  %1220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1221 = getelementptr inbounds %struct.GPR, %struct.GPR* %1220, i32 0, i32 1
  %1222 = getelementptr inbounds %struct.Reg, %struct.Reg* %1221, i32 0, i32 0
  %RAX.i980 = bitcast %union.anon* %1222 to i64*
  %1223 = load i64, i64* %PC.i979
  %1224 = add i64 %1223, 8
  store i64 %1224, i64* %PC.i979
  %1225 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1225, i64* %RAX.i980, align 8
  store %struct.Memory* %loadMem_43e033, %struct.Memory** %MEMORY
  %loadMem_43e03b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1227 = getelementptr inbounds %struct.GPR, %struct.GPR* %1226, i32 0, i32 33
  %1228 = getelementptr inbounds %struct.Reg, %struct.Reg* %1227, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %1228 to i64*
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 1
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %RAX.i978 = bitcast %union.anon* %1231 to i64*
  %1232 = load i64, i64* %RAX.i978
  %1233 = add i64 %1232, 24
  %1234 = load i64, i64* %PC.i977
  %1235 = add i64 %1234, 4
  store i64 %1235, i64* %PC.i977
  %1236 = inttoptr i64 %1233 to i32*
  %1237 = load i32, i32* %1236
  %1238 = sub i32 %1237, 1
  %1239 = icmp ult i32 %1237, 1
  %1240 = zext i1 %1239 to i8
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1240, i8* %1241, align 1
  %1242 = and i32 %1238, 255
  %1243 = call i32 @llvm.ctpop.i32(i32 %1242)
  %1244 = trunc i32 %1243 to i8
  %1245 = and i8 %1244, 1
  %1246 = xor i8 %1245, 1
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1246, i8* %1247, align 1
  %1248 = xor i32 %1237, 1
  %1249 = xor i32 %1248, %1238
  %1250 = lshr i32 %1249, 4
  %1251 = trunc i32 %1250 to i8
  %1252 = and i8 %1251, 1
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1252, i8* %1253, align 1
  %1254 = icmp eq i32 %1238, 0
  %1255 = zext i1 %1254 to i8
  %1256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1255, i8* %1256, align 1
  %1257 = lshr i32 %1238, 31
  %1258 = trunc i32 %1257 to i8
  %1259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1258, i8* %1259, align 1
  %1260 = lshr i32 %1237, 31
  %1261 = xor i32 %1257, %1260
  %1262 = add i32 %1261, %1260
  %1263 = icmp eq i32 %1262, 2
  %1264 = zext i1 %1263 to i8
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1264, i8* %1265, align 1
  store %struct.Memory* %loadMem_43e03b, %struct.Memory** %MEMORY
  %loadMem_43e03f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1267 = getelementptr inbounds %struct.GPR, %struct.GPR* %1266, i32 0, i32 33
  %1268 = getelementptr inbounds %struct.Reg, %struct.Reg* %1267, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %1268 to i64*
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1270 = getelementptr inbounds %struct.GPR, %struct.GPR* %1269, i32 0, i32 5
  %1271 = getelementptr inbounds %struct.Reg, %struct.Reg* %1270, i32 0, i32 0
  %1272 = bitcast %union.anon* %1271 to %struct.anon.2*
  %CL.i976 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1272, i32 0, i32 0
  %1273 = load i64, i64* %PC.i975
  %1274 = add i64 %1273, 3
  store i64 %1274, i64* %PC.i975
  %1275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1276 = load i8, i8* %1275, align 1
  store i8 %1276, i8* %CL.i976, align 1
  store %struct.Memory* %loadMem_43e03f, %struct.Memory** %MEMORY
  %loadMem_43e042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 33
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %1279 to i64*
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 5
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %1283 = bitcast %union.anon* %1282 to %struct.anon.2*
  %CL.i973 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1283, i32 0, i32 0
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1285 = getelementptr inbounds %struct.GPR, %struct.GPR* %1284, i32 0, i32 15
  %1286 = getelementptr inbounds %struct.Reg, %struct.Reg* %1285, i32 0, i32 0
  %RBP.i974 = bitcast %union.anon* %1286 to i64*
  %1287 = load i64, i64* %RBP.i974
  %1288 = sub i64 %1287, 118
  %1289 = load i8, i8* %CL.i973
  %1290 = zext i8 %1289 to i64
  %1291 = load i64, i64* %PC.i972
  %1292 = add i64 %1291, 3
  store i64 %1292, i64* %PC.i972
  %1293 = inttoptr i64 %1288 to i8*
  store i8 %1289, i8* %1293
  store %struct.Memory* %loadMem_43e042, %struct.Memory** %MEMORY
  br label %block_.L_43e045

block_.L_43e045:                                  ; preds = %block_43e033, %block_.L_43e017
  %loadMem_43e045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1295 = getelementptr inbounds %struct.GPR, %struct.GPR* %1294, i32 0, i32 33
  %1296 = getelementptr inbounds %struct.Reg, %struct.Reg* %1295, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %1296 to i64*
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1298 = getelementptr inbounds %struct.GPR, %struct.GPR* %1297, i32 0, i32 1
  %1299 = getelementptr inbounds %struct.Reg, %struct.Reg* %1298, i32 0, i32 0
  %1300 = bitcast %union.anon* %1299 to %struct.anon.2*
  %AL.i970 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1300, i32 0, i32 0
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1302 = getelementptr inbounds %struct.GPR, %struct.GPR* %1301, i32 0, i32 15
  %1303 = getelementptr inbounds %struct.Reg, %struct.Reg* %1302, i32 0, i32 0
  %RBP.i971 = bitcast %union.anon* %1303 to i64*
  %1304 = load i64, i64* %RBP.i971
  %1305 = sub i64 %1304, 118
  %1306 = load i64, i64* %PC.i969
  %1307 = add i64 %1306, 3
  store i64 %1307, i64* %PC.i969
  %1308 = inttoptr i64 %1305 to i8*
  %1309 = load i8, i8* %1308
  store i8 %1309, i8* %AL.i970, align 1
  store %struct.Memory* %loadMem_43e045, %struct.Memory** %MEMORY
  %loadMem_43e048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 33
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %1312 to i64*
  %1313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1314 = getelementptr inbounds %struct.GPR, %struct.GPR* %1313, i32 0, i32 1
  %1315 = getelementptr inbounds %struct.Reg, %struct.Reg* %1314, i32 0, i32 0
  %1316 = bitcast %union.anon* %1315 to %struct.anon.2*
  %AL.i967 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1316, i32 0, i32 0
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 15
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %RBP.i968 = bitcast %union.anon* %1319 to i64*
  %1320 = load i64, i64* %RBP.i968
  %1321 = sub i64 %1320, 117
  %1322 = load i8, i8* %AL.i967
  %1323 = zext i8 %1322 to i64
  %1324 = load i64, i64* %PC.i966
  %1325 = add i64 %1324, 3
  store i64 %1325, i64* %PC.i966
  %1326 = inttoptr i64 %1321 to i8*
  store i8 %1322, i8* %1326
  store %struct.Memory* %loadMem_43e048, %struct.Memory** %MEMORY
  br label %block_.L_43e04b

block_.L_43e04b:                                  ; preds = %block_.L_43e045, %block_43e000, %block_43dfe9
  %loadMem_43e04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 33
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %1329 to i64*
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 1
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %1333 = bitcast %union.anon* %1332 to %struct.anon.2*
  %AL.i964 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1333, i32 0, i32 0
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1335 = getelementptr inbounds %struct.GPR, %struct.GPR* %1334, i32 0, i32 15
  %1336 = getelementptr inbounds %struct.Reg, %struct.Reg* %1335, i32 0, i32 0
  %RBP.i965 = bitcast %union.anon* %1336 to i64*
  %1337 = load i64, i64* %RBP.i965
  %1338 = sub i64 %1337, 117
  %1339 = load i64, i64* %PC.i963
  %1340 = add i64 %1339, 3
  store i64 %1340, i64* %PC.i963
  %1341 = inttoptr i64 %1338 to i8*
  %1342 = load i8, i8* %1341
  store i8 %1342, i8* %AL.i964, align 1
  store %struct.Memory* %loadMem_43e04b, %struct.Memory** %MEMORY
  %loadMem_43e04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1344 = getelementptr inbounds %struct.GPR, %struct.GPR* %1343, i32 0, i32 33
  %1345 = getelementptr inbounds %struct.Reg, %struct.Reg* %1344, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %1345 to i64*
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1347 = getelementptr inbounds %struct.GPR, %struct.GPR* %1346, i32 0, i32 1
  %1348 = getelementptr inbounds %struct.Reg, %struct.Reg* %1347, i32 0, i32 0
  %1349 = bitcast %union.anon* %1348 to %struct.anon.2*
  %AL.i962 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1349, i32 0, i32 0
  %1350 = load i8, i8* %AL.i962
  %1351 = zext i8 %1350 to i64
  %1352 = load i64, i64* %PC.i961
  %1353 = add i64 %1352, 2
  store i64 %1353, i64* %PC.i961
  %1354 = and i64 1, %1351
  %1355 = trunc i64 %1354 to i8
  store i8 %1355, i8* %AL.i962, align 1
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1356, align 1
  %1357 = trunc i64 %1354 to i32
  %1358 = and i32 %1357, 255
  %1359 = call i32 @llvm.ctpop.i32(i32 %1358)
  %1360 = trunc i32 %1359 to i8
  %1361 = and i8 %1360, 1
  %1362 = xor i8 %1361, 1
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1362, i8* %1363, align 1
  %1364 = icmp eq i8 %1355, 0
  %1365 = zext i1 %1364 to i8
  %1366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1365, i8* %1366, align 1
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1367, align 1
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1368, align 1
  %1369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1369, align 1
  store %struct.Memory* %loadMem_43e04e, %struct.Memory** %MEMORY
  %loadMem_43e050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1371 = getelementptr inbounds %struct.GPR, %struct.GPR* %1370, i32 0, i32 33
  %1372 = getelementptr inbounds %struct.Reg, %struct.Reg* %1371, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %1372 to i64*
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1374 = getelementptr inbounds %struct.GPR, %struct.GPR* %1373, i32 0, i32 1
  %1375 = getelementptr inbounds %struct.Reg, %struct.Reg* %1374, i32 0, i32 0
  %1376 = bitcast %union.anon* %1375 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1376, i32 0, i32 0
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1378 = getelementptr inbounds %struct.GPR, %struct.GPR* %1377, i32 0, i32 5
  %1379 = getelementptr inbounds %struct.Reg, %struct.Reg* %1378, i32 0, i32 0
  %RCX.i960 = bitcast %union.anon* %1379 to i64*
  %1380 = load i8, i8* %AL.i
  %1381 = zext i8 %1380 to i64
  %1382 = load i64, i64* %PC.i959
  %1383 = add i64 %1382, 3
  store i64 %1383, i64* %PC.i959
  %1384 = and i64 %1381, 255
  store i64 %1384, i64* %RCX.i960, align 8
  store %struct.Memory* %loadMem_43e050, %struct.Memory** %MEMORY
  %loadMem_43e053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1386 = getelementptr inbounds %struct.GPR, %struct.GPR* %1385, i32 0, i32 33
  %1387 = getelementptr inbounds %struct.Reg, %struct.Reg* %1386, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %1387 to i64*
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1389 = getelementptr inbounds %struct.GPR, %struct.GPR* %1388, i32 0, i32 5
  %1390 = getelementptr inbounds %struct.Reg, %struct.Reg* %1389, i32 0, i32 0
  %ECX.i957 = bitcast %union.anon* %1390 to i32*
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1392 = getelementptr inbounds %struct.GPR, %struct.GPR* %1391, i32 0, i32 15
  %1393 = getelementptr inbounds %struct.Reg, %struct.Reg* %1392, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %1393 to i64*
  %1394 = load i64, i64* %RBP.i958
  %1395 = sub i64 %1394, 100
  %1396 = load i32, i32* %ECX.i957
  %1397 = zext i32 %1396 to i64
  %1398 = load i64, i64* %PC.i956
  %1399 = add i64 %1398, 3
  store i64 %1399, i64* %PC.i956
  %1400 = inttoptr i64 %1395 to i32*
  store i32 %1396, i32* %1400
  store %struct.Memory* %loadMem_43e053, %struct.Memory** %MEMORY
  %loadMem_43e056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1402 = getelementptr inbounds %struct.GPR, %struct.GPR* %1401, i32 0, i32 33
  %1403 = getelementptr inbounds %struct.Reg, %struct.Reg* %1402, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %1403 to i64*
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1405 = getelementptr inbounds %struct.GPR, %struct.GPR* %1404, i32 0, i32 7
  %1406 = getelementptr inbounds %struct.Reg, %struct.Reg* %1405, i32 0, i32 0
  %RDX.i955 = bitcast %union.anon* %1406 to i64*
  %1407 = load i64, i64* %PC.i954
  %1408 = add i64 %1407, 8
  store i64 %1408, i64* %PC.i954
  %1409 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1409, i64* %RDX.i955, align 8
  store %struct.Memory* %loadMem_43e056, %struct.Memory** %MEMORY
  %loadMem_43e05e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1411 = getelementptr inbounds %struct.GPR, %struct.GPR* %1410, i32 0, i32 33
  %1412 = getelementptr inbounds %struct.Reg, %struct.Reg* %1411, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %1412 to i64*
  %1413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1414 = getelementptr inbounds %struct.GPR, %struct.GPR* %1413, i32 0, i32 7
  %1415 = getelementptr inbounds %struct.Reg, %struct.Reg* %1414, i32 0, i32 0
  %RDX.i953 = bitcast %union.anon* %1415 to i64*
  %1416 = load i64, i64* %RDX.i953
  %1417 = add i64 %1416, 71928
  %1418 = load i64, i64* %PC.i952
  %1419 = add i64 %1418, 7
  store i64 %1419, i64* %PC.i952
  %1420 = inttoptr i64 %1417 to i64*
  %1421 = load i64, i64* %1420
  store i64 %1421, i64* %RDX.i953, align 8
  store %struct.Memory* %loadMem_43e05e, %struct.Memory** %MEMORY
  %loadMem_43e065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1423 = getelementptr inbounds %struct.GPR, %struct.GPR* %1422, i32 0, i32 33
  %1424 = getelementptr inbounds %struct.Reg, %struct.Reg* %1423, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %1424 to i64*
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1426 = getelementptr inbounds %struct.GPR, %struct.GPR* %1425, i32 0, i32 7
  %1427 = getelementptr inbounds %struct.Reg, %struct.Reg* %1426, i32 0, i32 0
  %RDX.i950 = bitcast %union.anon* %1427 to i64*
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1429 = getelementptr inbounds %struct.GPR, %struct.GPR* %1428, i32 0, i32 15
  %1430 = getelementptr inbounds %struct.Reg, %struct.Reg* %1429, i32 0, i32 0
  %RBP.i951 = bitcast %union.anon* %1430 to i64*
  %1431 = load i64, i64* %RBP.i951
  %1432 = sub i64 %1431, 112
  %1433 = load i64, i64* %RDX.i950
  %1434 = load i64, i64* %PC.i949
  %1435 = add i64 %1434, 4
  store i64 %1435, i64* %PC.i949
  %1436 = inttoptr i64 %1432 to i64*
  store i64 %1433, i64* %1436
  store %struct.Memory* %loadMem_43e065, %struct.Memory** %MEMORY
  %loadMem_43e069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1438 = getelementptr inbounds %struct.GPR, %struct.GPR* %1437, i32 0, i32 33
  %1439 = getelementptr inbounds %struct.Reg, %struct.Reg* %1438, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %1439 to i64*
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1441 = getelementptr inbounds %struct.GPR, %struct.GPR* %1440, i32 0, i32 7
  %1442 = getelementptr inbounds %struct.Reg, %struct.Reg* %1441, i32 0, i32 0
  %RDX.i948 = bitcast %union.anon* %1442 to i64*
  %1443 = load i64, i64* %PC.i947
  %1444 = add i64 %1443, 8
  store i64 %1444, i64* %PC.i947
  %1445 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1445, i64* %RDX.i948, align 8
  store %struct.Memory* %loadMem_43e069, %struct.Memory** %MEMORY
  %loadMem_43e071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1447 = getelementptr inbounds %struct.GPR, %struct.GPR* %1446, i32 0, i32 33
  %1448 = getelementptr inbounds %struct.Reg, %struct.Reg* %1447, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %1448 to i64*
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1450 = getelementptr inbounds %struct.GPR, %struct.GPR* %1449, i32 0, i32 7
  %1451 = getelementptr inbounds %struct.Reg, %struct.Reg* %1450, i32 0, i32 0
  %RDX.i946 = bitcast %union.anon* %1451 to i64*
  %1452 = load i64, i64* %RDX.i946
  %1453 = add i64 %1452, 72400
  %1454 = load i64, i64* %PC.i945
  %1455 = add i64 %1454, 7
  store i64 %1455, i64* %PC.i945
  %1456 = inttoptr i64 %1453 to i32*
  %1457 = load i32, i32* %1456
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1458, align 1
  %1459 = and i32 %1457, 255
  %1460 = call i32 @llvm.ctpop.i32(i32 %1459)
  %1461 = trunc i32 %1460 to i8
  %1462 = and i8 %1461, 1
  %1463 = xor i8 %1462, 1
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1463, i8* %1464, align 1
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1465, align 1
  %1466 = icmp eq i32 %1457, 0
  %1467 = zext i1 %1466 to i8
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1467, i8* %1468, align 1
  %1469 = lshr i32 %1457, 31
  %1470 = trunc i32 %1469 to i8
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1470, i8* %1471, align 1
  %1472 = lshr i32 %1457, 31
  %1473 = xor i32 %1469, %1472
  %1474 = add i32 %1473, %1472
  %1475 = icmp eq i32 %1474, 2
  %1476 = zext i1 %1475 to i8
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1476, i8* %1477, align 1
  store %struct.Memory* %loadMem_43e071, %struct.Memory** %MEMORY
  %loadMem_43e078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 33
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %1480 to i64*
  %1481 = load i64, i64* %PC.i944
  %1482 = add i64 %1481, 69
  %1483 = load i64, i64* %PC.i944
  %1484 = add i64 %1483, 6
  %1485 = load i64, i64* %PC.i944
  %1486 = add i64 %1485, 6
  store i64 %1486, i64* %PC.i944
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1488 = load i8, i8* %1487, align 1
  store i8 %1488, i8* %BRANCH_TAKEN, align 1
  %1489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1490 = icmp ne i8 %1488, 0
  %1491 = select i1 %1490, i64 %1482, i64 %1484
  store i64 %1491, i64* %1489, align 8
  store %struct.Memory* %loadMem_43e078, %struct.Memory** %MEMORY
  %loadBr_43e078 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e078 = icmp eq i8 %loadBr_43e078, 1
  br i1 %cmpBr_43e078, label %block_.L_43e0bd, label %block_43e07e

block_43e07e:                                     ; preds = %block_.L_43e04b
  %loadMem_43e07e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1493 = getelementptr inbounds %struct.GPR, %struct.GPR* %1492, i32 0, i32 33
  %1494 = getelementptr inbounds %struct.Reg, %struct.Reg* %1493, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %1494 to i64*
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 1
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %RAX.i942 = bitcast %union.anon* %1497 to i64*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 15
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %RBP.i943 = bitcast %union.anon* %1500 to i64*
  %1501 = load i64, i64* %RBP.i943
  %1502 = sub i64 %1501, 96
  %1503 = load i64, i64* %PC.i941
  %1504 = add i64 %1503, 4
  store i64 %1504, i64* %PC.i941
  %1505 = inttoptr i64 %1502 to i64*
  %1506 = load i64, i64* %1505
  store i64 %1506, i64* %RAX.i942, align 8
  store %struct.Memory* %loadMem_43e07e, %struct.Memory** %MEMORY
  %loadMem_43e082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1508 = getelementptr inbounds %struct.GPR, %struct.GPR* %1507, i32 0, i32 33
  %1509 = getelementptr inbounds %struct.Reg, %struct.Reg* %1508, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %1509 to i64*
  %1510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1511 = getelementptr inbounds %struct.GPR, %struct.GPR* %1510, i32 0, i32 1
  %1512 = getelementptr inbounds %struct.Reg, %struct.Reg* %1511, i32 0, i32 0
  %RAX.i940 = bitcast %union.anon* %1512 to i64*
  %1513 = load i64, i64* %RAX.i940
  %1514 = add i64 %1513, 532
  %1515 = load i64, i64* %PC.i939
  %1516 = add i64 %1515, 7
  store i64 %1516, i64* %PC.i939
  %1517 = inttoptr i64 %1514 to i32*
  %1518 = load i32, i32* %1517
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1519, align 1
  %1520 = and i32 %1518, 255
  %1521 = call i32 @llvm.ctpop.i32(i32 %1520)
  %1522 = trunc i32 %1521 to i8
  %1523 = and i8 %1522, 1
  %1524 = xor i8 %1523, 1
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1524, i8* %1525, align 1
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1526, align 1
  %1527 = icmp eq i32 %1518, 0
  %1528 = zext i1 %1527 to i8
  %1529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1528, i8* %1529, align 1
  %1530 = lshr i32 %1518, 31
  %1531 = trunc i32 %1530 to i8
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1531, i8* %1532, align 1
  %1533 = lshr i32 %1518, 31
  %1534 = xor i32 %1530, %1533
  %1535 = add i32 %1534, %1533
  %1536 = icmp eq i32 %1535, 2
  %1537 = zext i1 %1536 to i8
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1537, i8* %1538, align 1
  store %struct.Memory* %loadMem_43e082, %struct.Memory** %MEMORY
  %loadMem_43e089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1540 = getelementptr inbounds %struct.GPR, %struct.GPR* %1539, i32 0, i32 33
  %1541 = getelementptr inbounds %struct.Reg, %struct.Reg* %1540, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %1541 to i64*
  %1542 = load i64, i64* %PC.i938
  %1543 = add i64 %1542, 52
  %1544 = load i64, i64* %PC.i938
  %1545 = add i64 %1544, 6
  %1546 = load i64, i64* %PC.i938
  %1547 = add i64 %1546, 6
  store i64 %1547, i64* %PC.i938
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1549 = load i8, i8* %1548, align 1
  store i8 %1549, i8* %BRANCH_TAKEN, align 1
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1551 = icmp ne i8 %1549, 0
  %1552 = select i1 %1551, i64 %1543, i64 %1545
  store i64 %1552, i64* %1550, align 8
  store %struct.Memory* %loadMem_43e089, %struct.Memory** %MEMORY
  %loadBr_43e089 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e089 = icmp eq i8 %loadBr_43e089, 1
  br i1 %cmpBr_43e089, label %block_.L_43e0bd, label %block_43e08f

block_43e08f:                                     ; preds = %block_43e07e
  %loadMem_43e08f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1554 = getelementptr inbounds %struct.GPR, %struct.GPR* %1553, i32 0, i32 33
  %1555 = getelementptr inbounds %struct.Reg, %struct.Reg* %1554, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %1555 to i64*
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 1
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %RAX.i937 = bitcast %union.anon* %1558 to i64*
  %1559 = load i64, i64* %PC.i936
  %1560 = add i64 %1559, 5
  store i64 %1560, i64* %PC.i936
  store i64 2, i64* %RAX.i937, align 8
  store %struct.Memory* %loadMem_43e08f, %struct.Memory** %MEMORY
  %loadMem_43e094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1562 = getelementptr inbounds %struct.GPR, %struct.GPR* %1561, i32 0, i32 33
  %1563 = getelementptr inbounds %struct.Reg, %struct.Reg* %1562, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %1563 to i64*
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1565 = getelementptr inbounds %struct.GPR, %struct.GPR* %1564, i32 0, i32 5
  %1566 = getelementptr inbounds %struct.Reg, %struct.Reg* %1565, i32 0, i32 0
  %RCX.i935 = bitcast %union.anon* %1566 to i64*
  %1567 = load i64, i64* %PC.i934
  %1568 = add i64 %1567, 5
  store i64 %1568, i64* %PC.i934
  store i64 4, i64* %RCX.i935, align 8
  store %struct.Memory* %loadMem_43e094, %struct.Memory** %MEMORY
  %loadMem_43e099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1570 = getelementptr inbounds %struct.GPR, %struct.GPR* %1569, i32 0, i32 33
  %1571 = getelementptr inbounds %struct.Reg, %struct.Reg* %1570, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %1571 to i64*
  %1572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1573 = getelementptr inbounds %struct.GPR, %struct.GPR* %1572, i32 0, i32 7
  %1574 = getelementptr inbounds %struct.Reg, %struct.Reg* %1573, i32 0, i32 0
  %RDX.i933 = bitcast %union.anon* %1574 to i64*
  %1575 = load i64, i64* %PC.i932
  %1576 = add i64 %1575, 8
  store i64 %1576, i64* %PC.i932
  %1577 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1577, i64* %RDX.i933, align 8
  store %struct.Memory* %loadMem_43e099, %struct.Memory** %MEMORY
  %loadMem_43e0a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1579 = getelementptr inbounds %struct.GPR, %struct.GPR* %1578, i32 0, i32 33
  %1580 = getelementptr inbounds %struct.Reg, %struct.Reg* %1579, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %1580 to i64*
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1582 = getelementptr inbounds %struct.GPR, %struct.GPR* %1581, i32 0, i32 7
  %1583 = getelementptr inbounds %struct.Reg, %struct.Reg* %1582, i32 0, i32 0
  %RDX.i930 = bitcast %union.anon* %1583 to i64*
  %1584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1585 = getelementptr inbounds %struct.GPR, %struct.GPR* %1584, i32 0, i32 9
  %1586 = getelementptr inbounds %struct.Reg, %struct.Reg* %1585, i32 0, i32 0
  %RSI.i931 = bitcast %union.anon* %1586 to i64*
  %1587 = load i64, i64* %RDX.i930
  %1588 = add i64 %1587, 12
  %1589 = load i64, i64* %PC.i929
  %1590 = add i64 %1589, 3
  store i64 %1590, i64* %PC.i929
  %1591 = inttoptr i64 %1588 to i32*
  %1592 = load i32, i32* %1591
  %1593 = zext i32 %1592 to i64
  store i64 %1593, i64* %RSI.i931, align 8
  store %struct.Memory* %loadMem_43e0a1, %struct.Memory** %MEMORY
  %loadMem_43e0a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1595 = getelementptr inbounds %struct.GPR, %struct.GPR* %1594, i32 0, i32 33
  %1596 = getelementptr inbounds %struct.Reg, %struct.Reg* %1595, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %1596 to i64*
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1598 = getelementptr inbounds %struct.GPR, %struct.GPR* %1597, i32 0, i32 1
  %1599 = getelementptr inbounds %struct.Reg, %struct.Reg* %1598, i32 0, i32 0
  %EAX.i927 = bitcast %union.anon* %1599 to i32*
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1601 = getelementptr inbounds %struct.GPR, %struct.GPR* %1600, i32 0, i32 15
  %1602 = getelementptr inbounds %struct.Reg, %struct.Reg* %1601, i32 0, i32 0
  %RBP.i928 = bitcast %union.anon* %1602 to i64*
  %1603 = load i64, i64* %RBP.i928
  %1604 = sub i64 %1603, 124
  %1605 = load i32, i32* %EAX.i927
  %1606 = zext i32 %1605 to i64
  %1607 = load i64, i64* %PC.i926
  %1608 = add i64 %1607, 3
  store i64 %1608, i64* %PC.i926
  %1609 = inttoptr i64 %1604 to i32*
  store i32 %1605, i32* %1609
  store %struct.Memory* %loadMem_43e0a4, %struct.Memory** %MEMORY
  %loadMem_43e0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1611 = getelementptr inbounds %struct.GPR, %struct.GPR* %1610, i32 0, i32 33
  %1612 = getelementptr inbounds %struct.Reg, %struct.Reg* %1611, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %1612 to i64*
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1614 = getelementptr inbounds %struct.GPR, %struct.GPR* %1613, i32 0, i32 9
  %1615 = getelementptr inbounds %struct.Reg, %struct.Reg* %1614, i32 0, i32 0
  %ESI.i924 = bitcast %union.anon* %1615 to i32*
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1617 = getelementptr inbounds %struct.GPR, %struct.GPR* %1616, i32 0, i32 1
  %1618 = getelementptr inbounds %struct.Reg, %struct.Reg* %1617, i32 0, i32 0
  %RAX.i925 = bitcast %union.anon* %1618 to i64*
  %1619 = load i32, i32* %ESI.i924
  %1620 = zext i32 %1619 to i64
  %1621 = load i64, i64* %PC.i923
  %1622 = add i64 %1621, 2
  store i64 %1622, i64* %PC.i923
  %1623 = and i64 %1620, 4294967295
  store i64 %1623, i64* %RAX.i925, align 8
  store %struct.Memory* %loadMem_43e0a7, %struct.Memory** %MEMORY
  %loadMem_43e0a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1625 = getelementptr inbounds %struct.GPR, %struct.GPR* %1624, i32 0, i32 33
  %1626 = getelementptr inbounds %struct.Reg, %struct.Reg* %1625, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %1626 to i64*
  %1627 = load i64, i64* %PC.i922
  %1628 = add i64 %1627, 1
  store i64 %1628, i64* %PC.i922
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1631 = bitcast %union.anon* %1630 to i32*
  %1632 = load i32, i32* %1631, align 8
  %1633 = sext i32 %1632 to i64
  %1634 = lshr i64 %1633, 32
  store i64 %1634, i64* %1629, align 8
  store %struct.Memory* %loadMem_43e0a9, %struct.Memory** %MEMORY
  %loadMem_43e0aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1636 = getelementptr inbounds %struct.GPR, %struct.GPR* %1635, i32 0, i32 33
  %1637 = getelementptr inbounds %struct.Reg, %struct.Reg* %1636, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %1637 to i64*
  %1638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1639 = getelementptr inbounds %struct.GPR, %struct.GPR* %1638, i32 0, i32 9
  %1640 = getelementptr inbounds %struct.Reg, %struct.Reg* %1639, i32 0, i32 0
  %RSI.i920 = bitcast %union.anon* %1640 to i64*
  %1641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1642 = getelementptr inbounds %struct.GPR, %struct.GPR* %1641, i32 0, i32 15
  %1643 = getelementptr inbounds %struct.Reg, %struct.Reg* %1642, i32 0, i32 0
  %RBP.i921 = bitcast %union.anon* %1643 to i64*
  %1644 = load i64, i64* %RBP.i921
  %1645 = sub i64 %1644, 124
  %1646 = load i64, i64* %PC.i919
  %1647 = add i64 %1646, 3
  store i64 %1647, i64* %PC.i919
  %1648 = inttoptr i64 %1645 to i32*
  %1649 = load i32, i32* %1648
  %1650 = zext i32 %1649 to i64
  store i64 %1650, i64* %RSI.i920, align 8
  store %struct.Memory* %loadMem_43e0aa, %struct.Memory** %MEMORY
  %loadMem_43e0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %1651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1652 = getelementptr inbounds %struct.GPR, %struct.GPR* %1651, i32 0, i32 33
  %1653 = getelementptr inbounds %struct.Reg, %struct.Reg* %1652, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %1653 to i64*
  %1654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1655 = getelementptr inbounds %struct.GPR, %struct.GPR* %1654, i32 0, i32 9
  %1656 = getelementptr inbounds %struct.Reg, %struct.Reg* %1655, i32 0, i32 0
  %ESI.i915 = bitcast %union.anon* %1656 to i32*
  %1657 = load i32, i32* %ESI.i915
  %1658 = zext i32 %1657 to i64
  %1659 = load i64, i64* %PC.i914
  %1660 = add i64 %1659, 2
  store i64 %1660, i64* %PC.i914
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1662 = bitcast %union.anon* %1661 to i32*
  %1663 = load i32, i32* %1662, align 8
  %1664 = zext i32 %1663 to i64
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1666 = bitcast %union.anon* %1665 to i32*
  %1667 = load i32, i32* %1666, align 8
  %1668 = zext i32 %1667 to i64
  %1669 = shl i64 %1658, 32
  %1670 = ashr exact i64 %1669, 32
  %1671 = shl i64 %1668, 32
  %1672 = or i64 %1671, %1664
  %1673 = sdiv i64 %1672, %1670
  %1674 = shl i64 %1673, 32
  %1675 = ashr exact i64 %1674, 32
  %1676 = icmp eq i64 %1673, %1675
  br i1 %1676, label %1681, label %1677

; <label>:1677:                                   ; preds = %block_43e08f
  %1678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1679 = load i64, i64* %1678, align 8
  %1680 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1679, %struct.Memory* %loadMem_43e0ad)
  br label %routine_idivl__esi.exit916

; <label>:1681:                                   ; preds = %block_43e08f
  %1682 = srem i64 %1672, %1670
  %1683 = getelementptr inbounds %union.anon, %union.anon* %1661, i64 0, i32 0
  %1684 = and i64 %1673, 4294967295
  store i64 %1684, i64* %1683, align 8
  %1685 = getelementptr inbounds %union.anon, %union.anon* %1665, i64 0, i32 0
  %1686 = and i64 %1682, 4294967295
  store i64 %1686, i64* %1685, align 8
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1687, align 1
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1688, align 1
  %1689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1689, align 1
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1690, align 1
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1691, align 1
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1692, align 1
  br label %routine_idivl__esi.exit916

routine_idivl__esi.exit916:                       ; preds = %1677, %1681
  %1693 = phi %struct.Memory* [ %1680, %1677 ], [ %loadMem_43e0ad, %1681 ]
  store %struct.Memory* %1693, %struct.Memory** %MEMORY
  %loadMem_43e0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1695 = getelementptr inbounds %struct.GPR, %struct.GPR* %1694, i32 0, i32 33
  %1696 = getelementptr inbounds %struct.Reg, %struct.Reg* %1695, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %1696 to i64*
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1698 = getelementptr inbounds %struct.GPR, %struct.GPR* %1697, i32 0, i32 7
  %1699 = getelementptr inbounds %struct.Reg, %struct.Reg* %1698, i32 0, i32 0
  %EDX.i913 = bitcast %union.anon* %1699 to i32*
  %1700 = load i32, i32* %EDX.i913
  %1701 = zext i32 %1700 to i64
  %1702 = load i64, i64* %PC.i912
  %1703 = add i64 %1702, 3
  store i64 %1703, i64* %PC.i912
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1704, align 1
  %1705 = and i32 %1700, 255
  %1706 = call i32 @llvm.ctpop.i32(i32 %1705)
  %1707 = trunc i32 %1706 to i8
  %1708 = and i8 %1707, 1
  %1709 = xor i8 %1708, 1
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1709, i8* %1710, align 1
  %1711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1711, align 1
  %1712 = icmp eq i32 %1700, 0
  %1713 = zext i1 %1712 to i8
  %1714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1713, i8* %1714, align 1
  %1715 = lshr i32 %1700, 31
  %1716 = trunc i32 %1715 to i8
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1716, i8* %1717, align 1
  %1718 = lshr i32 %1700, 31
  %1719 = xor i32 %1715, %1718
  %1720 = add i32 %1719, %1718
  %1721 = icmp eq i32 %1720, 2
  %1722 = zext i1 %1721 to i8
  %1723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1722, i8* %1723, align 1
  store %struct.Memory* %loadMem_43e0af, %struct.Memory** %MEMORY
  %loadMem_43e0b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1725 = getelementptr inbounds %struct.GPR, %struct.GPR* %1724, i32 0, i32 33
  %1726 = getelementptr inbounds %struct.Reg, %struct.Reg* %1725, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %1726 to i64*
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1728 = getelementptr inbounds %struct.GPR, %struct.GPR* %1727, i32 0, i32 5
  %1729 = getelementptr inbounds %struct.Reg, %struct.Reg* %1728, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %1729 to i32*
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 9
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %RSI.i911 = bitcast %union.anon* %1732 to i64*
  %1733 = load i32, i32* %ECX.i
  %1734 = zext i32 %1733 to i64
  %1735 = load i64, i64* %PC.i910
  %1736 = add i64 %1735, 3
  store i64 %1736, i64* %PC.i910
  %1737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1738 = load i8, i8* %1737, align 1
  %1739 = icmp eq i8 %1738, 0
  %1740 = load i64, i64* %RSI.i911, align 8
  %1741 = select i1 %1739, i64 %1734, i64 %1740
  %1742 = and i64 %1741, 4294967295
  store i64 %1742, i64* %RSI.i911, align 8
  store %struct.Memory* %loadMem_43e0b2, %struct.Memory** %MEMORY
  %loadMem_43e0b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1744 = getelementptr inbounds %struct.GPR, %struct.GPR* %1743, i32 0, i32 33
  %1745 = getelementptr inbounds %struct.Reg, %struct.Reg* %1744, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %1745 to i64*
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1747 = getelementptr inbounds %struct.GPR, %struct.GPR* %1746, i32 0, i32 9
  %1748 = getelementptr inbounds %struct.Reg, %struct.Reg* %1747, i32 0, i32 0
  %ESI.i908 = bitcast %union.anon* %1748 to i32*
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1750 = getelementptr inbounds %struct.GPR, %struct.GPR* %1749, i32 0, i32 15
  %1751 = getelementptr inbounds %struct.Reg, %struct.Reg* %1750, i32 0, i32 0
  %RBP.i909 = bitcast %union.anon* %1751 to i64*
  %1752 = load i64, i64* %RBP.i909
  %1753 = sub i64 %1752, 128
  %1754 = load i32, i32* %ESI.i908
  %1755 = zext i32 %1754 to i64
  %1756 = load i64, i64* %PC.i907
  %1757 = add i64 %1756, 3
  store i64 %1757, i64* %PC.i907
  %1758 = inttoptr i64 %1753 to i32*
  store i32 %1754, i32* %1758
  store %struct.Memory* %loadMem_43e0b5, %struct.Memory** %MEMORY
  %loadMem_43e0b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 33
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %1761 to i64*
  %1762 = load i64, i64* %PC.i906
  %1763 = add i64 %1762, 15
  %1764 = load i64, i64* %PC.i906
  %1765 = add i64 %1764, 5
  store i64 %1765, i64* %PC.i906
  %1766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1763, i64* %1766, align 8
  store %struct.Memory* %loadMem_43e0b8, %struct.Memory** %MEMORY
  br label %block_.L_43e0c7

block_.L_43e0bd:                                  ; preds = %block_43e07e, %block_.L_43e04b
  %loadMem_43e0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1768 = getelementptr inbounds %struct.GPR, %struct.GPR* %1767, i32 0, i32 33
  %1769 = getelementptr inbounds %struct.Reg, %struct.Reg* %1768, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %1769 to i64*
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1771 = getelementptr inbounds %struct.GPR, %struct.GPR* %1770, i32 0, i32 1
  %1772 = getelementptr inbounds %struct.Reg, %struct.Reg* %1771, i32 0, i32 0
  %EAX.i904 = bitcast %union.anon* %1772 to i32*
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1774 = getelementptr inbounds %struct.GPR, %struct.GPR* %1773, i32 0, i32 1
  %1775 = getelementptr inbounds %struct.Reg, %struct.Reg* %1774, i32 0, i32 0
  %RAX.i905 = bitcast %union.anon* %1775 to i64*
  %1776 = load i64, i64* %RAX.i905
  %1777 = load i32, i32* %EAX.i904
  %1778 = zext i32 %1777 to i64
  %1779 = load i64, i64* %PC.i903
  %1780 = add i64 %1779, 2
  store i64 %1780, i64* %PC.i903
  %1781 = xor i64 %1778, %1776
  %1782 = trunc i64 %1781 to i32
  %1783 = and i64 %1781, 4294967295
  store i64 %1783, i64* %RAX.i905, align 8
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1784, align 1
  %1785 = and i32 %1782, 255
  %1786 = call i32 @llvm.ctpop.i32(i32 %1785)
  %1787 = trunc i32 %1786 to i8
  %1788 = and i8 %1787, 1
  %1789 = xor i8 %1788, 1
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1789, i8* %1790, align 1
  %1791 = icmp eq i32 %1782, 0
  %1792 = zext i1 %1791 to i8
  %1793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1792, i8* %1793, align 1
  %1794 = lshr i32 %1782, 31
  %1795 = trunc i32 %1794 to i8
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1795, i8* %1796, align 1
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1797, align 1
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1798, align 1
  store %struct.Memory* %loadMem_43e0bd, %struct.Memory** %MEMORY
  %loadMem_43e0bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1800 = getelementptr inbounds %struct.GPR, %struct.GPR* %1799, i32 0, i32 33
  %1801 = getelementptr inbounds %struct.Reg, %struct.Reg* %1800, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %1801 to i64*
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1803 = getelementptr inbounds %struct.GPR, %struct.GPR* %1802, i32 0, i32 1
  %1804 = getelementptr inbounds %struct.Reg, %struct.Reg* %1803, i32 0, i32 0
  %EAX.i901 = bitcast %union.anon* %1804 to i32*
  %1805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1806 = getelementptr inbounds %struct.GPR, %struct.GPR* %1805, i32 0, i32 15
  %1807 = getelementptr inbounds %struct.Reg, %struct.Reg* %1806, i32 0, i32 0
  %RBP.i902 = bitcast %union.anon* %1807 to i64*
  %1808 = load i64, i64* %RBP.i902
  %1809 = sub i64 %1808, 128
  %1810 = load i32, i32* %EAX.i901
  %1811 = zext i32 %1810 to i64
  %1812 = load i64, i64* %PC.i900
  %1813 = add i64 %1812, 3
  store i64 %1813, i64* %PC.i900
  %1814 = inttoptr i64 %1809 to i32*
  store i32 %1810, i32* %1814
  store %struct.Memory* %loadMem_43e0bf, %struct.Memory** %MEMORY
  %loadMem_43e0c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1816 = getelementptr inbounds %struct.GPR, %struct.GPR* %1815, i32 0, i32 33
  %1817 = getelementptr inbounds %struct.Reg, %struct.Reg* %1816, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %1817 to i64*
  %1818 = load i64, i64* %PC.i899
  %1819 = add i64 %1818, 5
  %1820 = load i64, i64* %PC.i899
  %1821 = add i64 %1820, 5
  store i64 %1821, i64* %PC.i899
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1819, i64* %1822, align 8
  store %struct.Memory* %loadMem_43e0c2, %struct.Memory** %MEMORY
  br label %block_.L_43e0c7

block_.L_43e0c7:                                  ; preds = %block_.L_43e0bd, %routine_idivl__esi.exit916
  %loadMem_43e0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1824 = getelementptr inbounds %struct.GPR, %struct.GPR* %1823, i32 0, i32 33
  %1825 = getelementptr inbounds %struct.Reg, %struct.Reg* %1824, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %1825 to i64*
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1827 = getelementptr inbounds %struct.GPR, %struct.GPR* %1826, i32 0, i32 1
  %1828 = getelementptr inbounds %struct.Reg, %struct.Reg* %1827, i32 0, i32 0
  %RAX.i897 = bitcast %union.anon* %1828 to i64*
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1830 = getelementptr inbounds %struct.GPR, %struct.GPR* %1829, i32 0, i32 15
  %1831 = getelementptr inbounds %struct.Reg, %struct.Reg* %1830, i32 0, i32 0
  %RBP.i898 = bitcast %union.anon* %1831 to i64*
  %1832 = load i64, i64* %RBP.i898
  %1833 = sub i64 %1832, 128
  %1834 = load i64, i64* %PC.i896
  %1835 = add i64 %1834, 3
  store i64 %1835, i64* %PC.i896
  %1836 = inttoptr i64 %1833 to i32*
  %1837 = load i32, i32* %1836
  %1838 = zext i32 %1837 to i64
  store i64 %1838, i64* %RAX.i897, align 8
  store %struct.Memory* %loadMem_43e0c7, %struct.Memory** %MEMORY
  %loadMem_43e0ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1840 = getelementptr inbounds %struct.GPR, %struct.GPR* %1839, i32 0, i32 33
  %1841 = getelementptr inbounds %struct.Reg, %struct.Reg* %1840, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %1841 to i64*
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1843 = getelementptr inbounds %struct.GPR, %struct.GPR* %1842, i32 0, i32 1
  %1844 = getelementptr inbounds %struct.Reg, %struct.Reg* %1843, i32 0, i32 0
  %EAX.i894 = bitcast %union.anon* %1844 to i32*
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1846 = getelementptr inbounds %struct.GPR, %struct.GPR* %1845, i32 0, i32 15
  %1847 = getelementptr inbounds %struct.Reg, %struct.Reg* %1846, i32 0, i32 0
  %RBP.i895 = bitcast %union.anon* %1847 to i64*
  %1848 = load i64, i64* %RBP.i895
  %1849 = sub i64 %1848, 116
  %1850 = load i32, i32* %EAX.i894
  %1851 = zext i32 %1850 to i64
  %1852 = load i64, i64* %PC.i893
  %1853 = add i64 %1852, 3
  store i64 %1853, i64* %PC.i893
  %1854 = inttoptr i64 %1849 to i32*
  store i32 %1850, i32* %1854
  store %struct.Memory* %loadMem_43e0ca, %struct.Memory** %MEMORY
  %loadMem_43e0cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1856 = getelementptr inbounds %struct.GPR, %struct.GPR* %1855, i32 0, i32 33
  %1857 = getelementptr inbounds %struct.Reg, %struct.Reg* %1856, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %1857 to i64*
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1859 = getelementptr inbounds %struct.GPR, %struct.GPR* %1858, i32 0, i32 5
  %1860 = getelementptr inbounds %struct.Reg, %struct.Reg* %1859, i32 0, i32 0
  %RCX.i891 = bitcast %union.anon* %1860 to i64*
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 15
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %RBP.i892 = bitcast %union.anon* %1863 to i64*
  %1864 = load i64, i64* %RBP.i892
  %1865 = sub i64 %1864, 96
  %1866 = load i64, i64* %PC.i890
  %1867 = add i64 %1866, 4
  store i64 %1867, i64* %PC.i890
  %1868 = inttoptr i64 %1865 to i64*
  %1869 = load i64, i64* %1868
  store i64 %1869, i64* %RCX.i891, align 8
  store %struct.Memory* %loadMem_43e0cd, %struct.Memory** %MEMORY
  %loadMem_43e0d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1871 = getelementptr inbounds %struct.GPR, %struct.GPR* %1870, i32 0, i32 33
  %1872 = getelementptr inbounds %struct.Reg, %struct.Reg* %1871, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %1872 to i64*
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1874 = getelementptr inbounds %struct.GPR, %struct.GPR* %1873, i32 0, i32 5
  %1875 = getelementptr inbounds %struct.Reg, %struct.Reg* %1874, i32 0, i32 0
  %RCX.i889 = bitcast %union.anon* %1875 to i64*
  %1876 = load i64, i64* %RCX.i889
  %1877 = add i64 %1876, 580
  %1878 = load i64, i64* %PC.i888
  %1879 = add i64 %1878, 7
  store i64 %1879, i64* %PC.i888
  %1880 = inttoptr i64 %1877 to i32*
  %1881 = load i32, i32* %1880
  %1882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1882, align 1
  %1883 = and i32 %1881, 255
  %1884 = call i32 @llvm.ctpop.i32(i32 %1883)
  %1885 = trunc i32 %1884 to i8
  %1886 = and i8 %1885, 1
  %1887 = xor i8 %1886, 1
  %1888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1887, i8* %1888, align 1
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1889, align 1
  %1890 = icmp eq i32 %1881, 0
  %1891 = zext i1 %1890 to i8
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1891, i8* %1892, align 1
  %1893 = lshr i32 %1881, 31
  %1894 = trunc i32 %1893 to i8
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1894, i8* %1895, align 1
  %1896 = lshr i32 %1881, 31
  %1897 = xor i32 %1893, %1896
  %1898 = add i32 %1897, %1896
  %1899 = icmp eq i32 %1898, 2
  %1900 = zext i1 %1899 to i8
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1900, i8* %1901, align 1
  store %struct.Memory* %loadMem_43e0d1, %struct.Memory** %MEMORY
  %loadMem_43e0d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1903 = getelementptr inbounds %struct.GPR, %struct.GPR* %1902, i32 0, i32 33
  %1904 = getelementptr inbounds %struct.Reg, %struct.Reg* %1903, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %1904 to i64*
  %1905 = load i64, i64* %PC.i887
  %1906 = add i64 %1905, 139
  %1907 = load i64, i64* %PC.i887
  %1908 = add i64 %1907, 6
  %1909 = load i64, i64* %PC.i887
  %1910 = add i64 %1909, 6
  store i64 %1910, i64* %PC.i887
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1912 = load i8, i8* %1911, align 1
  store i8 %1912, i8* %BRANCH_TAKEN, align 1
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1914 = icmp ne i8 %1912, 0
  %1915 = select i1 %1914, i64 %1906, i64 %1908
  store i64 %1915, i64* %1913, align 8
  store %struct.Memory* %loadMem_43e0d8, %struct.Memory** %MEMORY
  %loadBr_43e0d8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e0d8 = icmp eq i8 %loadBr_43e0d8, 1
  br i1 %cmpBr_43e0d8, label %block_.L_43e163, label %block_43e0de

block_43e0de:                                     ; preds = %block_.L_43e0c7
  %loadMem_43e0de = load %struct.Memory*, %struct.Memory** %MEMORY
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1917 = getelementptr inbounds %struct.GPR, %struct.GPR* %1916, i32 0, i32 33
  %1918 = getelementptr inbounds %struct.Reg, %struct.Reg* %1917, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %1918 to i64*
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1920 = getelementptr inbounds %struct.GPR, %struct.GPR* %1919, i32 0, i32 1
  %1921 = getelementptr inbounds %struct.Reg, %struct.Reg* %1920, i32 0, i32 0
  %RAX.i885 = bitcast %union.anon* %1921 to i64*
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1923 = getelementptr inbounds %struct.GPR, %struct.GPR* %1922, i32 0, i32 15
  %1924 = getelementptr inbounds %struct.Reg, %struct.Reg* %1923, i32 0, i32 0
  %RBP.i886 = bitcast %union.anon* %1924 to i64*
  %1925 = load i64, i64* %RBP.i886
  %1926 = sub i64 %1925, 38
  %1927 = load i64, i64* %PC.i884
  %1928 = add i64 %1927, 4
  store i64 %1928, i64* %PC.i884
  %1929 = inttoptr i64 %1926 to i16*
  %1930 = load i16, i16* %1929
  %1931 = sext i16 %1930 to i64
  %1932 = and i64 %1931, 4294967295
  store i64 %1932, i64* %RAX.i885, align 8
  store %struct.Memory* %loadMem_43e0de, %struct.Memory** %MEMORY
  %loadMem_43e0e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1934 = getelementptr inbounds %struct.GPR, %struct.GPR* %1933, i32 0, i32 33
  %1935 = getelementptr inbounds %struct.Reg, %struct.Reg* %1934, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %1935 to i64*
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1937 = getelementptr inbounds %struct.GPR, %struct.GPR* %1936, i32 0, i32 1
  %1938 = getelementptr inbounds %struct.Reg, %struct.Reg* %1937, i32 0, i32 0
  %EAX.i883 = bitcast %union.anon* %1938 to i32*
  %1939 = load i32, i32* %EAX.i883
  %1940 = zext i32 %1939 to i64
  %1941 = load i64, i64* %PC.i882
  %1942 = add i64 %1941, 3
  store i64 %1942, i64* %PC.i882
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1943, align 1
  %1944 = and i32 %1939, 255
  %1945 = call i32 @llvm.ctpop.i32(i32 %1944)
  %1946 = trunc i32 %1945 to i8
  %1947 = and i8 %1946, 1
  %1948 = xor i8 %1947, 1
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1948, i8* %1949, align 1
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1950, align 1
  %1951 = icmp eq i32 %1939, 0
  %1952 = zext i1 %1951 to i8
  %1953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1952, i8* %1953, align 1
  %1954 = lshr i32 %1939, 31
  %1955 = trunc i32 %1954 to i8
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1955, i8* %1956, align 1
  %1957 = lshr i32 %1939, 31
  %1958 = xor i32 %1954, %1957
  %1959 = add i32 %1958, %1957
  %1960 = icmp eq i32 %1959, 2
  %1961 = zext i1 %1960 to i8
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1961, i8* %1962, align 1
  store %struct.Memory* %loadMem_43e0e2, %struct.Memory** %MEMORY
  %loadMem_43e0e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1964 = getelementptr inbounds %struct.GPR, %struct.GPR* %1963, i32 0, i32 33
  %1965 = getelementptr inbounds %struct.Reg, %struct.Reg* %1964, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %1965 to i64*
  %1966 = load i64, i64* %PC.i881
  %1967 = add i64 %1966, 126
  %1968 = load i64, i64* %PC.i881
  %1969 = add i64 %1968, 6
  %1970 = load i64, i64* %PC.i881
  %1971 = add i64 %1970, 6
  store i64 %1971, i64* %PC.i881
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1973 = load i8, i8* %1972, align 1
  %1974 = icmp eq i8 %1973, 0
  %1975 = zext i1 %1974 to i8
  store i8 %1975, i8* %BRANCH_TAKEN, align 1
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1977 = select i1 %1974, i64 %1967, i64 %1969
  store i64 %1977, i64* %1976, align 8
  store %struct.Memory* %loadMem_43e0e5, %struct.Memory** %MEMORY
  %loadBr_43e0e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e0e5 = icmp eq i8 %loadBr_43e0e5, 1
  br i1 %cmpBr_43e0e5, label %block_.L_43e163, label %block_43e0eb

block_43e0eb:                                     ; preds = %block_43e0de
  %loadMem_43e0eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1979 = getelementptr inbounds %struct.GPR, %struct.GPR* %1978, i32 0, i32 33
  %1980 = getelementptr inbounds %struct.Reg, %struct.Reg* %1979, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %1980 to i64*
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1982 = getelementptr inbounds %struct.GPR, %struct.GPR* %1981, i32 0, i32 1
  %1983 = getelementptr inbounds %struct.Reg, %struct.Reg* %1982, i32 0, i32 0
  %RAX.i879 = bitcast %union.anon* %1983 to i64*
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1985 = getelementptr inbounds %struct.GPR, %struct.GPR* %1984, i32 0, i32 15
  %1986 = getelementptr inbounds %struct.Reg, %struct.Reg* %1985, i32 0, i32 0
  %RBP.i880 = bitcast %union.anon* %1986 to i64*
  %1987 = load i64, i64* %RBP.i880
  %1988 = sub i64 %1987, 40
  %1989 = load i64, i64* %PC.i878
  %1990 = add i64 %1989, 4
  store i64 %1990, i64* %PC.i878
  %1991 = inttoptr i64 %1988 to i16*
  %1992 = load i16, i16* %1991
  %1993 = sext i16 %1992 to i64
  %1994 = and i64 %1993, 4294967295
  store i64 %1994, i64* %RAX.i879, align 8
  store %struct.Memory* %loadMem_43e0eb, %struct.Memory** %MEMORY
  %loadMem_43e0ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1996 = getelementptr inbounds %struct.GPR, %struct.GPR* %1995, i32 0, i32 33
  %1997 = getelementptr inbounds %struct.Reg, %struct.Reg* %1996, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %1997 to i64*
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 1
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %EAX.i877 = bitcast %union.anon* %2000 to i32*
  %2001 = load i32, i32* %EAX.i877
  %2002 = zext i32 %2001 to i64
  %2003 = load i64, i64* %PC.i876
  %2004 = add i64 %2003, 3
  store i64 %2004, i64* %PC.i876
  %2005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2005, align 1
  %2006 = and i32 %2001, 255
  %2007 = call i32 @llvm.ctpop.i32(i32 %2006)
  %2008 = trunc i32 %2007 to i8
  %2009 = and i8 %2008, 1
  %2010 = xor i8 %2009, 1
  %2011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2010, i8* %2011, align 1
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2012, align 1
  %2013 = icmp eq i32 %2001, 0
  %2014 = zext i1 %2013 to i8
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2014, i8* %2015, align 1
  %2016 = lshr i32 %2001, 31
  %2017 = trunc i32 %2016 to i8
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2017, i8* %2018, align 1
  %2019 = lshr i32 %2001, 31
  %2020 = xor i32 %2016, %2019
  %2021 = add i32 %2020, %2019
  %2022 = icmp eq i32 %2021, 2
  %2023 = zext i1 %2022 to i8
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2023, i8* %2024, align 1
  store %struct.Memory* %loadMem_43e0ef, %struct.Memory** %MEMORY
  %loadMem_43e0f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 33
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %2027 to i64*
  %2028 = load i64, i64* %PC.i875
  %2029 = add i64 %2028, 113
  %2030 = load i64, i64* %PC.i875
  %2031 = add i64 %2030, 6
  %2032 = load i64, i64* %PC.i875
  %2033 = add i64 %2032, 6
  store i64 %2033, i64* %PC.i875
  %2034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2035 = load i8, i8* %2034, align 1
  %2036 = icmp eq i8 %2035, 0
  %2037 = zext i1 %2036 to i8
  store i8 %2037, i8* %BRANCH_TAKEN, align 1
  %2038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2039 = select i1 %2036, i64 %2029, i64 %2031
  store i64 %2039, i64* %2038, align 8
  store %struct.Memory* %loadMem_43e0f2, %struct.Memory** %MEMORY
  %loadBr_43e0f2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e0f2 = icmp eq i8 %loadBr_43e0f2, 1
  br i1 %cmpBr_43e0f2, label %block_.L_43e163, label %block_43e0f8

block_43e0f8:                                     ; preds = %block_43e0eb
  %loadMem_43e0f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2041 = getelementptr inbounds %struct.GPR, %struct.GPR* %2040, i32 0, i32 33
  %2042 = getelementptr inbounds %struct.Reg, %struct.Reg* %2041, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %2042 to i64*
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2044 = getelementptr inbounds %struct.GPR, %struct.GPR* %2043, i32 0, i32 15
  %2045 = getelementptr inbounds %struct.Reg, %struct.Reg* %2044, i32 0, i32 0
  %RBP.i874 = bitcast %union.anon* %2045 to i64*
  %2046 = load i64, i64* %RBP.i874
  %2047 = sub i64 %2046, 28
  %2048 = load i64, i64* %PC.i873
  %2049 = add i64 %2048, 4
  store i64 %2049, i64* %PC.i873
  %2050 = inttoptr i64 %2047 to i32*
  %2051 = load i32, i32* %2050
  %2052 = sub i32 %2051, 2
  %2053 = icmp ult i32 %2051, 2
  %2054 = zext i1 %2053 to i8
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2054, i8* %2055, align 1
  %2056 = and i32 %2052, 255
  %2057 = call i32 @llvm.ctpop.i32(i32 %2056)
  %2058 = trunc i32 %2057 to i8
  %2059 = and i8 %2058, 1
  %2060 = xor i8 %2059, 1
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2060, i8* %2061, align 1
  %2062 = xor i32 %2051, 2
  %2063 = xor i32 %2062, %2052
  %2064 = lshr i32 %2063, 4
  %2065 = trunc i32 %2064 to i8
  %2066 = and i8 %2065, 1
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2066, i8* %2067, align 1
  %2068 = icmp eq i32 %2052, 0
  %2069 = zext i1 %2068 to i8
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2069, i8* %2070, align 1
  %2071 = lshr i32 %2052, 31
  %2072 = trunc i32 %2071 to i8
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2072, i8* %2073, align 1
  %2074 = lshr i32 %2051, 31
  %2075 = xor i32 %2071, %2074
  %2076 = add i32 %2075, %2074
  %2077 = icmp eq i32 %2076, 2
  %2078 = zext i1 %2077 to i8
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2078, i8* %2079, align 1
  store %struct.Memory* %loadMem_43e0f8, %struct.Memory** %MEMORY
  %loadMem_43e0fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2081 = getelementptr inbounds %struct.GPR, %struct.GPR* %2080, i32 0, i32 33
  %2082 = getelementptr inbounds %struct.Reg, %struct.Reg* %2081, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %2082 to i64*
  %2083 = load i64, i64* %PC.i872
  %2084 = add i64 %2083, 103
  %2085 = load i64, i64* %PC.i872
  %2086 = add i64 %2085, 6
  %2087 = load i64, i64* %PC.i872
  %2088 = add i64 %2087, 6
  store i64 %2088, i64* %PC.i872
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2090 = load i8, i8* %2089, align 1
  %2091 = icmp eq i8 %2090, 0
  %2092 = zext i1 %2091 to i8
  store i8 %2092, i8* %BRANCH_TAKEN, align 1
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2094 = select i1 %2091, i64 %2084, i64 %2086
  store i64 %2094, i64* %2093, align 8
  store %struct.Memory* %loadMem_43e0fc, %struct.Memory** %MEMORY
  %loadBr_43e0fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e0fc = icmp eq i8 %loadBr_43e0fc, 1
  br i1 %cmpBr_43e0fc, label %block_.L_43e163, label %block_43e102

block_43e102:                                     ; preds = %block_43e0f8
  %loadMem_43e102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2096 = getelementptr inbounds %struct.GPR, %struct.GPR* %2095, i32 0, i32 33
  %2097 = getelementptr inbounds %struct.Reg, %struct.Reg* %2096, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %2097 to i64*
  %2098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2099 = getelementptr inbounds %struct.GPR, %struct.GPR* %2098, i32 0, i32 15
  %2100 = getelementptr inbounds %struct.Reg, %struct.Reg* %2099, i32 0, i32 0
  %RBP.i871 = bitcast %union.anon* %2100 to i64*
  %2101 = load i64, i64* %RBP.i871
  %2102 = sub i64 %2101, 32
  %2103 = load i64, i64* %PC.i870
  %2104 = add i64 %2103, 4
  store i64 %2104, i64* %PC.i870
  %2105 = inttoptr i64 %2102 to i32*
  %2106 = load i32, i32* %2105
  %2107 = sub i32 %2106, 1
  %2108 = icmp ult i32 %2106, 1
  %2109 = zext i1 %2108 to i8
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2109, i8* %2110, align 1
  %2111 = and i32 %2107, 255
  %2112 = call i32 @llvm.ctpop.i32(i32 %2111)
  %2113 = trunc i32 %2112 to i8
  %2114 = and i8 %2113, 1
  %2115 = xor i8 %2114, 1
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2115, i8* %2116, align 1
  %2117 = xor i32 %2106, 1
  %2118 = xor i32 %2117, %2107
  %2119 = lshr i32 %2118, 4
  %2120 = trunc i32 %2119 to i8
  %2121 = and i8 %2120, 1
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2121, i8* %2122, align 1
  %2123 = icmp eq i32 %2107, 0
  %2124 = zext i1 %2123 to i8
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2124, i8* %2125, align 1
  %2126 = lshr i32 %2107, 31
  %2127 = trunc i32 %2126 to i8
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2127, i8* %2128, align 1
  %2129 = lshr i32 %2106, 31
  %2130 = xor i32 %2126, %2129
  %2131 = add i32 %2130, %2129
  %2132 = icmp eq i32 %2131, 2
  %2133 = zext i1 %2132 to i8
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2133, i8* %2134, align 1
  store %struct.Memory* %loadMem_43e102, %struct.Memory** %MEMORY
  %loadMem_43e106 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 33
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %2137 to i64*
  %2138 = load i64, i64* %PC.i869
  %2139 = add i64 %2138, 93
  %2140 = load i64, i64* %PC.i869
  %2141 = add i64 %2140, 6
  %2142 = load i64, i64* %PC.i869
  %2143 = add i64 %2142, 6
  store i64 %2143, i64* %PC.i869
  %2144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2145 = load i8, i8* %2144, align 1
  %2146 = icmp eq i8 %2145, 0
  %2147 = zext i1 %2146 to i8
  store i8 %2147, i8* %BRANCH_TAKEN, align 1
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2149 = select i1 %2146, i64 %2139, i64 %2141
  store i64 %2149, i64* %2148, align 8
  store %struct.Memory* %loadMem_43e106, %struct.Memory** %MEMORY
  %loadBr_43e106 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e106 = icmp eq i8 %loadBr_43e106, 1
  br i1 %cmpBr_43e106, label %block_.L_43e163, label %block_43e10c

block_43e10c:                                     ; preds = %block_43e102
  %loadMem_43e10c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2151 = getelementptr inbounds %struct.GPR, %struct.GPR* %2150, i32 0, i32 33
  %2152 = getelementptr inbounds %struct.Reg, %struct.Reg* %2151, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %2152 to i64*
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2154 = getelementptr inbounds %struct.GPR, %struct.GPR* %2153, i32 0, i32 15
  %2155 = getelementptr inbounds %struct.Reg, %struct.Reg* %2154, i32 0, i32 0
  %RBP.i868 = bitcast %union.anon* %2155 to i64*
  %2156 = load i64, i64* %RBP.i868
  %2157 = sub i64 %2156, 36
  %2158 = load i64, i64* %PC.i867
  %2159 = add i64 %2158, 4
  store i64 %2159, i64* %PC.i867
  %2160 = inttoptr i64 %2157 to i32*
  %2161 = load i32, i32* %2160
  %2162 = sub i32 %2161, 1
  %2163 = icmp ult i32 %2161, 1
  %2164 = zext i1 %2163 to i8
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2164, i8* %2165, align 1
  %2166 = and i32 %2162, 255
  %2167 = call i32 @llvm.ctpop.i32(i32 %2166)
  %2168 = trunc i32 %2167 to i8
  %2169 = and i8 %2168, 1
  %2170 = xor i8 %2169, 1
  %2171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2170, i8* %2171, align 1
  %2172 = xor i32 %2161, 1
  %2173 = xor i32 %2172, %2162
  %2174 = lshr i32 %2173, 4
  %2175 = trunc i32 %2174 to i8
  %2176 = and i8 %2175, 1
  %2177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2176, i8* %2177, align 1
  %2178 = icmp eq i32 %2162, 0
  %2179 = zext i1 %2178 to i8
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2179, i8* %2180, align 1
  %2181 = lshr i32 %2162, 31
  %2182 = trunc i32 %2181 to i8
  %2183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2182, i8* %2183, align 1
  %2184 = lshr i32 %2161, 31
  %2185 = xor i32 %2181, %2184
  %2186 = add i32 %2185, %2184
  %2187 = icmp eq i32 %2186, 2
  %2188 = zext i1 %2187 to i8
  %2189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2188, i8* %2189, align 1
  store %struct.Memory* %loadMem_43e10c, %struct.Memory** %MEMORY
  %loadMem_43e110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2191 = getelementptr inbounds %struct.GPR, %struct.GPR* %2190, i32 0, i32 33
  %2192 = getelementptr inbounds %struct.Reg, %struct.Reg* %2191, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %2192 to i64*
  %2193 = load i64, i64* %PC.i866
  %2194 = add i64 %2193, 83
  %2195 = load i64, i64* %PC.i866
  %2196 = add i64 %2195, 6
  %2197 = load i64, i64* %PC.i866
  %2198 = add i64 %2197, 6
  store i64 %2198, i64* %PC.i866
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2200 = load i8, i8* %2199, align 1
  %2201 = icmp eq i8 %2200, 0
  %2202 = zext i1 %2201 to i8
  store i8 %2202, i8* %BRANCH_TAKEN, align 1
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2204 = select i1 %2201, i64 %2194, i64 %2196
  store i64 %2204, i64* %2203, align 8
  store %struct.Memory* %loadMem_43e110, %struct.Memory** %MEMORY
  %loadBr_43e110 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e110 = icmp eq i8 %loadBr_43e110, 1
  br i1 %cmpBr_43e110, label %block_.L_43e163, label %block_43e116

block_43e116:                                     ; preds = %block_43e10c
  %loadMem_43e116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2206 = getelementptr inbounds %struct.GPR, %struct.GPR* %2205, i32 0, i32 33
  %2207 = getelementptr inbounds %struct.Reg, %struct.Reg* %2206, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %2207 to i64*
  %2208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2209 = getelementptr inbounds %struct.GPR, %struct.GPR* %2208, i32 0, i32 1
  %2210 = getelementptr inbounds %struct.Reg, %struct.Reg* %2209, i32 0, i32 0
  %RAX.i864 = bitcast %union.anon* %2210 to i64*
  %2211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2212 = getelementptr inbounds %struct.GPR, %struct.GPR* %2211, i32 0, i32 15
  %2213 = getelementptr inbounds %struct.Reg, %struct.Reg* %2212, i32 0, i32 0
  %RBP.i865 = bitcast %union.anon* %2213 to i64*
  %2214 = load i64, i64* %RBP.i865
  %2215 = sub i64 %2214, 96
  %2216 = load i64, i64* %PC.i863
  %2217 = add i64 %2216, 4
  store i64 %2217, i64* %PC.i863
  %2218 = inttoptr i64 %2215 to i64*
  %2219 = load i64, i64* %2218
  store i64 %2219, i64* %RAX.i864, align 8
  store %struct.Memory* %loadMem_43e116, %struct.Memory** %MEMORY
  %loadMem_43e11a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2221 = getelementptr inbounds %struct.GPR, %struct.GPR* %2220, i32 0, i32 33
  %2222 = getelementptr inbounds %struct.Reg, %struct.Reg* %2221, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %2222 to i64*
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2224 = getelementptr inbounds %struct.GPR, %struct.GPR* %2223, i32 0, i32 1
  %2225 = getelementptr inbounds %struct.Reg, %struct.Reg* %2224, i32 0, i32 0
  %RAX.i862 = bitcast %union.anon* %2225 to i64*
  %2226 = load i64, i64* %RAX.i862
  %2227 = add i64 %2226, 580
  %2228 = load i64, i64* %PC.i861
  %2229 = add i64 %2228, 7
  store i64 %2229, i64* %PC.i861
  %2230 = inttoptr i64 %2227 to i32*
  %2231 = load i32, i32* %2230
  %2232 = sub i32 %2231, 1
  %2233 = icmp ult i32 %2231, 1
  %2234 = zext i1 %2233 to i8
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2234, i8* %2235, align 1
  %2236 = and i32 %2232, 255
  %2237 = call i32 @llvm.ctpop.i32(i32 %2236)
  %2238 = trunc i32 %2237 to i8
  %2239 = and i8 %2238, 1
  %2240 = xor i8 %2239, 1
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2240, i8* %2241, align 1
  %2242 = xor i32 %2231, 1
  %2243 = xor i32 %2242, %2232
  %2244 = lshr i32 %2243, 4
  %2245 = trunc i32 %2244 to i8
  %2246 = and i8 %2245, 1
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2246, i8* %2247, align 1
  %2248 = icmp eq i32 %2232, 0
  %2249 = zext i1 %2248 to i8
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2249, i8* %2250, align 1
  %2251 = lshr i32 %2232, 31
  %2252 = trunc i32 %2251 to i8
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2252, i8* %2253, align 1
  %2254 = lshr i32 %2231, 31
  %2255 = xor i32 %2251, %2254
  %2256 = add i32 %2255, %2254
  %2257 = icmp eq i32 %2256, 2
  %2258 = zext i1 %2257 to i8
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2258, i8* %2259, align 1
  store %struct.Memory* %loadMem_43e11a, %struct.Memory** %MEMORY
  %loadMem_43e121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2261 = getelementptr inbounds %struct.GPR, %struct.GPR* %2260, i32 0, i32 33
  %2262 = getelementptr inbounds %struct.Reg, %struct.Reg* %2261, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %2262 to i64*
  %2263 = load i64, i64* %PC.i860
  %2264 = add i64 %2263, 33
  %2265 = load i64, i64* %PC.i860
  %2266 = add i64 %2265, 6
  %2267 = load i64, i64* %PC.i860
  %2268 = add i64 %2267, 6
  store i64 %2268, i64* %PC.i860
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2270 = load i8, i8* %2269, align 1
  %2271 = icmp eq i8 %2270, 0
  %2272 = zext i1 %2271 to i8
  store i8 %2272, i8* %BRANCH_TAKEN, align 1
  %2273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2274 = select i1 %2271, i64 %2264, i64 %2266
  store i64 %2274, i64* %2273, align 8
  store %struct.Memory* %loadMem_43e121, %struct.Memory** %MEMORY
  %loadBr_43e121 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e121 = icmp eq i8 %loadBr_43e121, 1
  br i1 %cmpBr_43e121, label %block_.L_43e142, label %block_43e127

block_43e127:                                     ; preds = %block_43e116
  %loadMem_43e127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2276 = getelementptr inbounds %struct.GPR, %struct.GPR* %2275, i32 0, i32 33
  %2277 = getelementptr inbounds %struct.Reg, %struct.Reg* %2276, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %2277 to i64*
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2279 = getelementptr inbounds %struct.GPR, %struct.GPR* %2278, i32 0, i32 1
  %2280 = getelementptr inbounds %struct.Reg, %struct.Reg* %2279, i32 0, i32 0
  %RAX.i859 = bitcast %union.anon* %2280 to i64*
  %2281 = load i64, i64* %PC.i858
  %2282 = add i64 %2281, 8
  store i64 %2282, i64* %PC.i858
  %2283 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2283, i64* %RAX.i859, align 8
  store %struct.Memory* %loadMem_43e127, %struct.Memory** %MEMORY
  %loadMem_43e12f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2285 = getelementptr inbounds %struct.GPR, %struct.GPR* %2284, i32 0, i32 33
  %2286 = getelementptr inbounds %struct.Reg, %struct.Reg* %2285, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %2286 to i64*
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2288 = getelementptr inbounds %struct.GPR, %struct.GPR* %2287, i32 0, i32 1
  %2289 = getelementptr inbounds %struct.Reg, %struct.Reg* %2288, i32 0, i32 0
  %RAX.i857 = bitcast %union.anon* %2289 to i64*
  %2290 = load i64, i64* %RAX.i857
  %2291 = add i64 %2290, 71936
  %2292 = load i64, i64* %PC.i856
  %2293 = add i64 %2292, 7
  store i64 %2293, i64* %PC.i856
  %2294 = inttoptr i64 %2291 to i64*
  %2295 = load i64, i64* %2294
  store i64 %2295, i64* %RAX.i857, align 8
  store %struct.Memory* %loadMem_43e12f, %struct.Memory** %MEMORY
  %loadMem_43e136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 33
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %2298 to i64*
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 1
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %RAX.i854 = bitcast %union.anon* %2301 to i64*
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2303 = getelementptr inbounds %struct.GPR, %struct.GPR* %2302, i32 0, i32 15
  %2304 = getelementptr inbounds %struct.Reg, %struct.Reg* %2303, i32 0, i32 0
  %RBP.i855 = bitcast %union.anon* %2304 to i64*
  %2305 = load i64, i64* %RBP.i855
  %2306 = sub i64 %2305, 136
  %2307 = load i64, i64* %RAX.i854
  %2308 = load i64, i64* %PC.i853
  %2309 = add i64 %2308, 7
  store i64 %2309, i64* %PC.i853
  %2310 = inttoptr i64 %2306 to i64*
  store i64 %2307, i64* %2310
  store %struct.Memory* %loadMem_43e136, %struct.Memory** %MEMORY
  %loadMem_43e13d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 33
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %2313 to i64*
  %2314 = load i64, i64* %PC.i852
  %2315 = add i64 %2314, 27
  %2316 = load i64, i64* %PC.i852
  %2317 = add i64 %2316, 5
  store i64 %2317, i64* %PC.i852
  %2318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2315, i64* %2318, align 8
  store %struct.Memory* %loadMem_43e13d, %struct.Memory** %MEMORY
  br label %block_.L_43e158

block_.L_43e142:                                  ; preds = %block_43e116
  %loadMem_43e142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2320 = getelementptr inbounds %struct.GPR, %struct.GPR* %2319, i32 0, i32 33
  %2321 = getelementptr inbounds %struct.Reg, %struct.Reg* %2320, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %2321 to i64*
  %2322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2323 = getelementptr inbounds %struct.GPR, %struct.GPR* %2322, i32 0, i32 1
  %2324 = getelementptr inbounds %struct.Reg, %struct.Reg* %2323, i32 0, i32 0
  %RAX.i851 = bitcast %union.anon* %2324 to i64*
  %2325 = load i64, i64* %PC.i850
  %2326 = add i64 %2325, 8
  store i64 %2326, i64* %PC.i850
  %2327 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2327, i64* %RAX.i851, align 8
  store %struct.Memory* %loadMem_43e142, %struct.Memory** %MEMORY
  %loadMem_43e14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2329 = getelementptr inbounds %struct.GPR, %struct.GPR* %2328, i32 0, i32 33
  %2330 = getelementptr inbounds %struct.Reg, %struct.Reg* %2329, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %2330 to i64*
  %2331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2332 = getelementptr inbounds %struct.GPR, %struct.GPR* %2331, i32 0, i32 1
  %2333 = getelementptr inbounds %struct.Reg, %struct.Reg* %2332, i32 0, i32 0
  %RAX.i849 = bitcast %union.anon* %2333 to i64*
  %2334 = load i64, i64* %RAX.i849
  %2335 = add i64 %2334, 71944
  %2336 = load i64, i64* %PC.i848
  %2337 = add i64 %2336, 7
  store i64 %2337, i64* %PC.i848
  %2338 = inttoptr i64 %2335 to i64*
  %2339 = load i64, i64* %2338
  store i64 %2339, i64* %RAX.i849, align 8
  store %struct.Memory* %loadMem_43e14a, %struct.Memory** %MEMORY
  %loadMem_43e151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2341 = getelementptr inbounds %struct.GPR, %struct.GPR* %2340, i32 0, i32 33
  %2342 = getelementptr inbounds %struct.Reg, %struct.Reg* %2341, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %2342 to i64*
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 1
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %RAX.i846 = bitcast %union.anon* %2345 to i64*
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2347 = getelementptr inbounds %struct.GPR, %struct.GPR* %2346, i32 0, i32 15
  %2348 = getelementptr inbounds %struct.Reg, %struct.Reg* %2347, i32 0, i32 0
  %RBP.i847 = bitcast %union.anon* %2348 to i64*
  %2349 = load i64, i64* %RBP.i847
  %2350 = sub i64 %2349, 136
  %2351 = load i64, i64* %RAX.i846
  %2352 = load i64, i64* %PC.i845
  %2353 = add i64 %2352, 7
  store i64 %2353, i64* %PC.i845
  %2354 = inttoptr i64 %2350 to i64*
  store i64 %2351, i64* %2354
  store %struct.Memory* %loadMem_43e151, %struct.Memory** %MEMORY
  br label %block_.L_43e158

block_.L_43e158:                                  ; preds = %block_.L_43e142, %block_43e127
  %loadMem_43e158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2356 = getelementptr inbounds %struct.GPR, %struct.GPR* %2355, i32 0, i32 33
  %2357 = getelementptr inbounds %struct.Reg, %struct.Reg* %2356, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %2357 to i64*
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2359 = getelementptr inbounds %struct.GPR, %struct.GPR* %2358, i32 0, i32 1
  %2360 = getelementptr inbounds %struct.Reg, %struct.Reg* %2359, i32 0, i32 0
  %RAX.i843 = bitcast %union.anon* %2360 to i64*
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2362 = getelementptr inbounds %struct.GPR, %struct.GPR* %2361, i32 0, i32 15
  %2363 = getelementptr inbounds %struct.Reg, %struct.Reg* %2362, i32 0, i32 0
  %RBP.i844 = bitcast %union.anon* %2363 to i64*
  %2364 = load i64, i64* %RBP.i844
  %2365 = sub i64 %2364, 136
  %2366 = load i64, i64* %PC.i842
  %2367 = add i64 %2366, 7
  store i64 %2367, i64* %PC.i842
  %2368 = inttoptr i64 %2365 to i64*
  %2369 = load i64, i64* %2368
  store i64 %2369, i64* %RAX.i843, align 8
  store %struct.Memory* %loadMem_43e158, %struct.Memory** %MEMORY
  %loadMem_43e15f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2371 = getelementptr inbounds %struct.GPR, %struct.GPR* %2370, i32 0, i32 33
  %2372 = getelementptr inbounds %struct.Reg, %struct.Reg* %2371, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %2372 to i64*
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 1
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %RAX.i840 = bitcast %union.anon* %2375 to i64*
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 15
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %RBP.i841 = bitcast %union.anon* %2378 to i64*
  %2379 = load i64, i64* %RBP.i841
  %2380 = sub i64 %2379, 112
  %2381 = load i64, i64* %RAX.i840
  %2382 = load i64, i64* %PC.i839
  %2383 = add i64 %2382, 4
  store i64 %2383, i64* %PC.i839
  %2384 = inttoptr i64 %2380 to i64*
  store i64 %2381, i64* %2384
  store %struct.Memory* %loadMem_43e15f, %struct.Memory** %MEMORY
  br label %block_.L_43e163

block_.L_43e163:                                  ; preds = %block_.L_43e158, %block_43e10c, %block_43e102, %block_43e0f8, %block_43e0eb, %block_43e0de, %block_.L_43e0c7
  %loadMem_43e163 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2386 = getelementptr inbounds %struct.GPR, %struct.GPR* %2385, i32 0, i32 33
  %2387 = getelementptr inbounds %struct.Reg, %struct.Reg* %2386, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %2387 to i64*
  %2388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2389 = getelementptr inbounds %struct.GPR, %struct.GPR* %2388, i32 0, i32 15
  %2390 = getelementptr inbounds %struct.Reg, %struct.Reg* %2389, i32 0, i32 0
  %RBP.i838 = bitcast %union.anon* %2390 to i64*
  %2391 = load i64, i64* %RBP.i838
  %2392 = sub i64 %2391, 28
  %2393 = load i64, i64* %PC.i837
  %2394 = add i64 %2393, 4
  store i64 %2394, i64* %PC.i837
  %2395 = inttoptr i64 %2392 to i32*
  %2396 = load i32, i32* %2395
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2397, align 1
  %2398 = and i32 %2396, 255
  %2399 = call i32 @llvm.ctpop.i32(i32 %2398)
  %2400 = trunc i32 %2399 to i8
  %2401 = and i8 %2400, 1
  %2402 = xor i8 %2401, 1
  %2403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2402, i8* %2403, align 1
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2404, align 1
  %2405 = icmp eq i32 %2396, 0
  %2406 = zext i1 %2405 to i8
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2406, i8* %2407, align 1
  %2408 = lshr i32 %2396, 31
  %2409 = trunc i32 %2408 to i8
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2409, i8* %2410, align 1
  %2411 = lshr i32 %2396, 31
  %2412 = xor i32 %2408, %2411
  %2413 = add i32 %2412, %2411
  %2414 = icmp eq i32 %2413, 2
  %2415 = zext i1 %2414 to i8
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2415, i8* %2416, align 1
  store %struct.Memory* %loadMem_43e163, %struct.Memory** %MEMORY
  %loadMem_43e167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2418 = getelementptr inbounds %struct.GPR, %struct.GPR* %2417, i32 0, i32 33
  %2419 = getelementptr inbounds %struct.Reg, %struct.Reg* %2418, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %2419 to i64*
  %2420 = load i64, i64* %PC.i836
  %2421 = add i64 %2420, 16
  %2422 = load i64, i64* %PC.i836
  %2423 = add i64 %2422, 6
  %2424 = load i64, i64* %PC.i836
  %2425 = add i64 %2424, 6
  store i64 %2425, i64* %PC.i836
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2427 = load i8, i8* %2426, align 1
  store i8 %2427, i8* %BRANCH_TAKEN, align 1
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2429 = icmp ne i8 %2427, 0
  %2430 = select i1 %2429, i64 %2421, i64 %2423
  store i64 %2430, i64* %2428, align 8
  store %struct.Memory* %loadMem_43e167, %struct.Memory** %MEMORY
  %loadBr_43e167 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e167 = icmp eq i8 %loadBr_43e167, 1
  br i1 %cmpBr_43e167, label %block_.L_43e177, label %block_43e16d

block_43e16d:                                     ; preds = %block_.L_43e163
  %loadMem_43e16d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2432 = getelementptr inbounds %struct.GPR, %struct.GPR* %2431, i32 0, i32 33
  %2433 = getelementptr inbounds %struct.Reg, %struct.Reg* %2432, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %2433 to i64*
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2435 = getelementptr inbounds %struct.GPR, %struct.GPR* %2434, i32 0, i32 15
  %2436 = getelementptr inbounds %struct.Reg, %struct.Reg* %2435, i32 0, i32 0
  %RBP.i835 = bitcast %union.anon* %2436 to i64*
  %2437 = load i64, i64* %RBP.i835
  %2438 = sub i64 %2437, 28
  %2439 = load i64, i64* %PC.i834
  %2440 = add i64 %2439, 4
  store i64 %2440, i64* %PC.i834
  %2441 = inttoptr i64 %2438 to i32*
  %2442 = load i32, i32* %2441
  %2443 = sub i32 %2442, 2
  %2444 = icmp ult i32 %2442, 2
  %2445 = zext i1 %2444 to i8
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2445, i8* %2446, align 1
  %2447 = and i32 %2443, 255
  %2448 = call i32 @llvm.ctpop.i32(i32 %2447)
  %2449 = trunc i32 %2448 to i8
  %2450 = and i8 %2449, 1
  %2451 = xor i8 %2450, 1
  %2452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2451, i8* %2452, align 1
  %2453 = xor i32 %2442, 2
  %2454 = xor i32 %2453, %2443
  %2455 = lshr i32 %2454, 4
  %2456 = trunc i32 %2455 to i8
  %2457 = and i8 %2456, 1
  %2458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2457, i8* %2458, align 1
  %2459 = icmp eq i32 %2443, 0
  %2460 = zext i1 %2459 to i8
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2460, i8* %2461, align 1
  %2462 = lshr i32 %2443, 31
  %2463 = trunc i32 %2462 to i8
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2463, i8* %2464, align 1
  %2465 = lshr i32 %2442, 31
  %2466 = xor i32 %2462, %2465
  %2467 = add i32 %2466, %2465
  %2468 = icmp eq i32 %2467, 2
  %2469 = zext i1 %2468 to i8
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2469, i8* %2470, align 1
  store %struct.Memory* %loadMem_43e16d, %struct.Memory** %MEMORY
  %loadMem_43e171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2472 = getelementptr inbounds %struct.GPR, %struct.GPR* %2471, i32 0, i32 33
  %2473 = getelementptr inbounds %struct.Reg, %struct.Reg* %2472, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %2473 to i64*
  %2474 = load i64, i64* %PC.i833
  %2475 = add i64 %2474, 95
  %2476 = load i64, i64* %PC.i833
  %2477 = add i64 %2476, 6
  %2478 = load i64, i64* %PC.i833
  %2479 = add i64 %2478, 6
  store i64 %2479, i64* %PC.i833
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2481 = load i8, i8* %2480, align 1
  %2482 = icmp eq i8 %2481, 0
  %2483 = zext i1 %2482 to i8
  store i8 %2483, i8* %BRANCH_TAKEN, align 1
  %2484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2485 = select i1 %2482, i64 %2475, i64 %2477
  store i64 %2485, i64* %2484, align 8
  store %struct.Memory* %loadMem_43e171, %struct.Memory** %MEMORY
  %loadBr_43e171 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e171 = icmp eq i8 %loadBr_43e171, 1
  br i1 %cmpBr_43e171, label %block_.L_43e1d0, label %block_.L_43e177

block_.L_43e177:                                  ; preds = %block_43e16d, %block_.L_43e163
  %loadMem_43e177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2487 = getelementptr inbounds %struct.GPR, %struct.GPR* %2486, i32 0, i32 33
  %2488 = getelementptr inbounds %struct.Reg, %struct.Reg* %2487, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %2488 to i64*
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2490 = getelementptr inbounds %struct.GPR, %struct.GPR* %2489, i32 0, i32 11
  %2491 = getelementptr inbounds %struct.Reg, %struct.Reg* %2490, i32 0, i32 0
  %RDI.i832 = bitcast %union.anon* %2491 to i64*
  %2492 = load i64, i64* %PC.i831
  %2493 = add i64 %2492, 10
  store i64 %2493, i64* %PC.i831
  store i64 ptrtoint (%G__0x6cc1b0_type* @G__0x6cc1b0 to i64), i64* %RDI.i832, align 8
  store %struct.Memory* %loadMem_43e177, %struct.Memory** %MEMORY
  %loadMem_43e181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2495 = getelementptr inbounds %struct.GPR, %struct.GPR* %2494, i32 0, i32 33
  %2496 = getelementptr inbounds %struct.Reg, %struct.Reg* %2495, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %2496 to i64*
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2498 = getelementptr inbounds %struct.GPR, %struct.GPR* %2497, i32 0, i32 9
  %2499 = getelementptr inbounds %struct.Reg, %struct.Reg* %2498, i32 0, i32 0
  %RSI.i829 = bitcast %union.anon* %2499 to i64*
  %2500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2501 = getelementptr inbounds %struct.GPR, %struct.GPR* %2500, i32 0, i32 15
  %2502 = getelementptr inbounds %struct.Reg, %struct.Reg* %2501, i32 0, i32 0
  %RBP.i830 = bitcast %union.anon* %2502 to i64*
  %2503 = load i64, i64* %RBP.i830
  %2504 = sub i64 %2503, 60
  %2505 = load i64, i64* %PC.i828
  %2506 = add i64 %2505, 3
  store i64 %2506, i64* %PC.i828
  %2507 = inttoptr i64 %2504 to i32*
  %2508 = load i32, i32* %2507
  %2509 = zext i32 %2508 to i64
  store i64 %2509, i64* %RSI.i829, align 8
  store %struct.Memory* %loadMem_43e181, %struct.Memory** %MEMORY
  %loadMem_43e184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2511 = getelementptr inbounds %struct.GPR, %struct.GPR* %2510, i32 0, i32 33
  %2512 = getelementptr inbounds %struct.Reg, %struct.Reg* %2511, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %2512 to i64*
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2514 = getelementptr inbounds %struct.GPR, %struct.GPR* %2513, i32 0, i32 7
  %2515 = getelementptr inbounds %struct.Reg, %struct.Reg* %2514, i32 0, i32 0
  %RDX.i826 = bitcast %union.anon* %2515 to i64*
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2517 = getelementptr inbounds %struct.GPR, %struct.GPR* %2516, i32 0, i32 15
  %2518 = getelementptr inbounds %struct.Reg, %struct.Reg* %2517, i32 0, i32 0
  %RBP.i827 = bitcast %union.anon* %2518 to i64*
  %2519 = load i64, i64* %RBP.i827
  %2520 = sub i64 %2519, 64
  %2521 = load i64, i64* %PC.i825
  %2522 = add i64 %2521, 3
  store i64 %2522, i64* %PC.i825
  %2523 = inttoptr i64 %2520 to i32*
  %2524 = load i32, i32* %2523
  %2525 = zext i32 %2524 to i64
  store i64 %2525, i64* %RDX.i826, align 8
  store %struct.Memory* %loadMem_43e184, %struct.Memory** %MEMORY
  %loadMem_43e187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2527 = getelementptr inbounds %struct.GPR, %struct.GPR* %2526, i32 0, i32 33
  %2528 = getelementptr inbounds %struct.Reg, %struct.Reg* %2527, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %2528 to i64*
  %2529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2530 = getelementptr inbounds %struct.GPR, %struct.GPR* %2529, i32 0, i32 1
  %2531 = getelementptr inbounds %struct.Reg, %struct.Reg* %2530, i32 0, i32 0
  %RAX.i823 = bitcast %union.anon* %2531 to i64*
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2533 = getelementptr inbounds %struct.GPR, %struct.GPR* %2532, i32 0, i32 15
  %2534 = getelementptr inbounds %struct.Reg, %struct.Reg* %2533, i32 0, i32 0
  %RBP.i824 = bitcast %union.anon* %2534 to i64*
  %2535 = load i64, i64* %RBP.i824
  %2536 = sub i64 %2535, 112
  %2537 = load i64, i64* %PC.i822
  %2538 = add i64 %2537, 4
  store i64 %2538, i64* %PC.i822
  %2539 = inttoptr i64 %2536 to i64*
  %2540 = load i64, i64* %2539
  store i64 %2540, i64* %RAX.i823, align 8
  store %struct.Memory* %loadMem_43e187, %struct.Memory** %MEMORY
  %loadMem_43e18b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2542 = getelementptr inbounds %struct.GPR, %struct.GPR* %2541, i32 0, i32 33
  %2543 = getelementptr inbounds %struct.Reg, %struct.Reg* %2542, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %2543 to i64*
  %2544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2545 = getelementptr inbounds %struct.GPR, %struct.GPR* %2544, i32 0, i32 5
  %2546 = getelementptr inbounds %struct.Reg, %struct.Reg* %2545, i32 0, i32 0
  %RCX.i820 = bitcast %union.anon* %2546 to i64*
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2548 = getelementptr inbounds %struct.GPR, %struct.GPR* %2547, i32 0, i32 15
  %2549 = getelementptr inbounds %struct.Reg, %struct.Reg* %2548, i32 0, i32 0
  %RBP.i821 = bitcast %union.anon* %2549 to i64*
  %2550 = load i64, i64* %RBP.i821
  %2551 = sub i64 %2550, 68
  %2552 = load i64, i64* %PC.i819
  %2553 = add i64 %2552, 4
  store i64 %2553, i64* %PC.i819
  %2554 = inttoptr i64 %2551 to i32*
  %2555 = load i32, i32* %2554
  %2556 = sext i32 %2555 to i64
  store i64 %2556, i64* %RCX.i820, align 8
  store %struct.Memory* %loadMem_43e18b, %struct.Memory** %MEMORY
  %loadMem_43e18f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2558 = getelementptr inbounds %struct.GPR, %struct.GPR* %2557, i32 0, i32 33
  %2559 = getelementptr inbounds %struct.Reg, %struct.Reg* %2558, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %2559 to i64*
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 1
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %RAX.i817 = bitcast %union.anon* %2562 to i64*
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2564 = getelementptr inbounds %struct.GPR, %struct.GPR* %2563, i32 0, i32 5
  %2565 = getelementptr inbounds %struct.Reg, %struct.Reg* %2564, i32 0, i32 0
  %RCX.i818 = bitcast %union.anon* %2565 to i64*
  %2566 = load i64, i64* %RAX.i817
  %2567 = load i64, i64* %RCX.i818
  %2568 = mul i64 %2567, 8
  %2569 = add i64 %2568, %2566
  %2570 = load i64, i64* %PC.i816
  %2571 = add i64 %2570, 4
  store i64 %2571, i64* %PC.i816
  %2572 = inttoptr i64 %2569 to i64*
  %2573 = load i64, i64* %2572
  store i64 %2573, i64* %RAX.i817, align 8
  store %struct.Memory* %loadMem_43e18f, %struct.Memory** %MEMORY
  %loadMem_43e193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2575 = getelementptr inbounds %struct.GPR, %struct.GPR* %2574, i32 0, i32 33
  %2576 = getelementptr inbounds %struct.Reg, %struct.Reg* %2575, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %2576 to i64*
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2578 = getelementptr inbounds %struct.GPR, %struct.GPR* %2577, i32 0, i32 5
  %2579 = getelementptr inbounds %struct.Reg, %struct.Reg* %2578, i32 0, i32 0
  %RCX.i814 = bitcast %union.anon* %2579 to i64*
  %2580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2581 = getelementptr inbounds %struct.GPR, %struct.GPR* %2580, i32 0, i32 15
  %2582 = getelementptr inbounds %struct.Reg, %struct.Reg* %2581, i32 0, i32 0
  %RBP.i815 = bitcast %union.anon* %2582 to i64*
  %2583 = load i64, i64* %RBP.i815
  %2584 = sub i64 %2583, 72
  %2585 = load i64, i64* %PC.i813
  %2586 = add i64 %2585, 4
  store i64 %2586, i64* %PC.i813
  %2587 = inttoptr i64 %2584 to i32*
  %2588 = load i32, i32* %2587
  %2589 = sext i32 %2588 to i64
  store i64 %2589, i64* %RCX.i814, align 8
  store %struct.Memory* %loadMem_43e193, %struct.Memory** %MEMORY
  %loadMem_43e197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2591 = getelementptr inbounds %struct.GPR, %struct.GPR* %2590, i32 0, i32 33
  %2592 = getelementptr inbounds %struct.Reg, %struct.Reg* %2591, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %2592 to i64*
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2594 = getelementptr inbounds %struct.GPR, %struct.GPR* %2593, i32 0, i32 1
  %2595 = getelementptr inbounds %struct.Reg, %struct.Reg* %2594, i32 0, i32 0
  %RAX.i811 = bitcast %union.anon* %2595 to i64*
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2597 = getelementptr inbounds %struct.GPR, %struct.GPR* %2596, i32 0, i32 5
  %2598 = getelementptr inbounds %struct.Reg, %struct.Reg* %2597, i32 0, i32 0
  %RCX.i812 = bitcast %union.anon* %2598 to i64*
  %2599 = load i64, i64* %RAX.i811
  %2600 = load i64, i64* %RCX.i812
  %2601 = mul i64 %2600, 8
  %2602 = add i64 %2601, %2599
  %2603 = load i64, i64* %PC.i810
  %2604 = add i64 %2603, 4
  store i64 %2604, i64* %PC.i810
  %2605 = inttoptr i64 %2602 to i64*
  %2606 = load i64, i64* %2605
  store i64 %2606, i64* %RAX.i811, align 8
  store %struct.Memory* %loadMem_43e197, %struct.Memory** %MEMORY
  %loadMem_43e19b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2608 = getelementptr inbounds %struct.GPR, %struct.GPR* %2607, i32 0, i32 33
  %2609 = getelementptr inbounds %struct.Reg, %struct.Reg* %2608, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %2609 to i64*
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2611 = getelementptr inbounds %struct.GPR, %struct.GPR* %2610, i32 0, i32 1
  %2612 = getelementptr inbounds %struct.Reg, %struct.Reg* %2611, i32 0, i32 0
  %RAX.i809 = bitcast %union.anon* %2612 to i64*
  %2613 = load i64, i64* %RAX.i809
  %2614 = load i64, i64* %PC.i808
  %2615 = add i64 %2614, 3
  store i64 %2615, i64* %PC.i808
  %2616 = inttoptr i64 %2613 to i64*
  %2617 = load i64, i64* %2616
  store i64 %2617, i64* %RAX.i809, align 8
  store %struct.Memory* %loadMem_43e19b, %struct.Memory** %MEMORY
  %loadMem_43e19e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2619 = getelementptr inbounds %struct.GPR, %struct.GPR* %2618, i32 0, i32 33
  %2620 = getelementptr inbounds %struct.Reg, %struct.Reg* %2619, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %2620 to i64*
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2622 = getelementptr inbounds %struct.GPR, %struct.GPR* %2621, i32 0, i32 5
  %2623 = getelementptr inbounds %struct.Reg, %struct.Reg* %2622, i32 0, i32 0
  %RCX.i806 = bitcast %union.anon* %2623 to i64*
  %2624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2625 = getelementptr inbounds %struct.GPR, %struct.GPR* %2624, i32 0, i32 15
  %2626 = getelementptr inbounds %struct.Reg, %struct.Reg* %2625, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %2626 to i64*
  %2627 = load i64, i64* %RBP.i807
  %2628 = sub i64 %2627, 38
  %2629 = load i64, i64* %PC.i805
  %2630 = add i64 %2629, 5
  store i64 %2630, i64* %PC.i805
  %2631 = inttoptr i64 %2628 to i16*
  %2632 = load i16, i16* %2631
  %2633 = sext i16 %2632 to i64
  store i64 %2633, i64* %RCX.i806, align 8
  store %struct.Memory* %loadMem_43e19e, %struct.Memory** %MEMORY
  %loadMem_43e1a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2635 = getelementptr inbounds %struct.GPR, %struct.GPR* %2634, i32 0, i32 33
  %2636 = getelementptr inbounds %struct.Reg, %struct.Reg* %2635, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %2636 to i64*
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2638 = getelementptr inbounds %struct.GPR, %struct.GPR* %2637, i32 0, i32 1
  %2639 = getelementptr inbounds %struct.Reg, %struct.Reg* %2638, i32 0, i32 0
  %RAX.i803 = bitcast %union.anon* %2639 to i64*
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2641 = getelementptr inbounds %struct.GPR, %struct.GPR* %2640, i32 0, i32 5
  %2642 = getelementptr inbounds %struct.Reg, %struct.Reg* %2641, i32 0, i32 0
  %RCX.i804 = bitcast %union.anon* %2642 to i64*
  %2643 = load i64, i64* %RAX.i803
  %2644 = load i64, i64* %RCX.i804
  %2645 = mul i64 %2644, 8
  %2646 = add i64 %2645, %2643
  %2647 = load i64, i64* %PC.i802
  %2648 = add i64 %2647, 4
  store i64 %2648, i64* %PC.i802
  %2649 = inttoptr i64 %2646 to i64*
  %2650 = load i64, i64* %2649
  store i64 %2650, i64* %RAX.i803, align 8
  store %struct.Memory* %loadMem_43e1a3, %struct.Memory** %MEMORY
  %loadMem_43e1a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2652 = getelementptr inbounds %struct.GPR, %struct.GPR* %2651, i32 0, i32 33
  %2653 = getelementptr inbounds %struct.Reg, %struct.Reg* %2652, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %2653 to i64*
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2655 = getelementptr inbounds %struct.GPR, %struct.GPR* %2654, i32 0, i32 5
  %2656 = getelementptr inbounds %struct.Reg, %struct.Reg* %2655, i32 0, i32 0
  %RCX.i800 = bitcast %union.anon* %2656 to i64*
  %2657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2658 = getelementptr inbounds %struct.GPR, %struct.GPR* %2657, i32 0, i32 15
  %2659 = getelementptr inbounds %struct.Reg, %struct.Reg* %2658, i32 0, i32 0
  %RBP.i801 = bitcast %union.anon* %2659 to i64*
  %2660 = load i64, i64* %RBP.i801
  %2661 = sub i64 %2660, 32
  %2662 = load i64, i64* %PC.i799
  %2663 = add i64 %2662, 4
  store i64 %2663, i64* %PC.i799
  %2664 = inttoptr i64 %2661 to i32*
  %2665 = load i32, i32* %2664
  %2666 = sext i32 %2665 to i64
  store i64 %2666, i64* %RCX.i800, align 8
  store %struct.Memory* %loadMem_43e1a7, %struct.Memory** %MEMORY
  %loadMem_43e1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %2667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2668 = getelementptr inbounds %struct.GPR, %struct.GPR* %2667, i32 0, i32 33
  %2669 = getelementptr inbounds %struct.Reg, %struct.Reg* %2668, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %2669 to i64*
  %2670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2671 = getelementptr inbounds %struct.GPR, %struct.GPR* %2670, i32 0, i32 1
  %2672 = getelementptr inbounds %struct.Reg, %struct.Reg* %2671, i32 0, i32 0
  %RAX.i797 = bitcast %union.anon* %2672 to i64*
  %2673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2674 = getelementptr inbounds %struct.GPR, %struct.GPR* %2673, i32 0, i32 5
  %2675 = getelementptr inbounds %struct.Reg, %struct.Reg* %2674, i32 0, i32 0
  %RCX.i798 = bitcast %union.anon* %2675 to i64*
  %2676 = load i64, i64* %RAX.i797
  %2677 = load i64, i64* %RCX.i798
  %2678 = mul i64 %2677, 8
  %2679 = add i64 %2678, %2676
  %2680 = load i64, i64* %PC.i796
  %2681 = add i64 %2680, 4
  store i64 %2681, i64* %PC.i796
  %2682 = inttoptr i64 %2679 to i64*
  %2683 = load i64, i64* %2682
  store i64 %2683, i64* %RCX.i798, align 8
  store %struct.Memory* %loadMem_43e1ab, %struct.Memory** %MEMORY
  %loadMem_43e1af = load %struct.Memory*, %struct.Memory** %MEMORY
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2685 = getelementptr inbounds %struct.GPR, %struct.GPR* %2684, i32 0, i32 33
  %2686 = getelementptr inbounds %struct.Reg, %struct.Reg* %2685, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %2686 to i64*
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2688 = getelementptr inbounds %struct.GPR, %struct.GPR* %2687, i32 0, i32 17
  %2689 = getelementptr inbounds %struct.Reg, %struct.Reg* %2688, i32 0, i32 0
  %R8W.i794 = bitcast %union.anon* %2689 to i16*
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2691 = getelementptr inbounds %struct.GPR, %struct.GPR* %2690, i32 0, i32 15
  %2692 = getelementptr inbounds %struct.Reg, %struct.Reg* %2691, i32 0, i32 0
  %RBP.i795 = bitcast %union.anon* %2692 to i64*
  %2693 = load i64, i64* %RBP.i795
  %2694 = sub i64 %2693, 38
  %2695 = load i64, i64* %PC.i793
  %2696 = add i64 %2695, 5
  store i64 %2696, i64* %PC.i793
  %2697 = inttoptr i64 %2694 to i16*
  %2698 = load i16, i16* %2697
  store i16 %2698, i16* %R8W.i794, align 2
  store %struct.Memory* %loadMem_43e1af, %struct.Memory** %MEMORY
  %loadMem_43e1b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 33
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %2701 to i64*
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2703 = getelementptr inbounds %struct.GPR, %struct.GPR* %2702, i32 0, i32 19
  %2704 = getelementptr inbounds %struct.Reg, %struct.Reg* %2703, i32 0, i32 0
  %R9D.i791 = bitcast %union.anon* %2704 to i32*
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2706 = getelementptr inbounds %struct.GPR, %struct.GPR* %2705, i32 0, i32 15
  %2707 = getelementptr inbounds %struct.Reg, %struct.Reg* %2706, i32 0, i32 0
  %RBP.i792 = bitcast %union.anon* %2707 to i64*
  %2708 = bitcast i32* %R9D.i791 to i64*
  %2709 = load i64, i64* %RBP.i792
  %2710 = sub i64 %2709, 116
  %2711 = load i64, i64* %PC.i790
  %2712 = add i64 %2711, 4
  store i64 %2712, i64* %PC.i790
  %2713 = inttoptr i64 %2710 to i32*
  %2714 = load i32, i32* %2713
  %2715 = zext i32 %2714 to i64
  store i64 %2715, i64* %2708, align 8
  store %struct.Memory* %loadMem_43e1b4, %struct.Memory** %MEMORY
  %loadMem_43e1b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2717 = getelementptr inbounds %struct.GPR, %struct.GPR* %2716, i32 0, i32 33
  %2718 = getelementptr inbounds %struct.Reg, %struct.Reg* %2717, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %2718 to i64*
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2720 = getelementptr inbounds %struct.GPR, %struct.GPR* %2719, i32 0, i32 19
  %2721 = getelementptr inbounds %struct.Reg, %struct.Reg* %2720, i32 0, i32 0
  %R9D.i789 = bitcast %union.anon* %2721 to i32*
  %2722 = bitcast i32* %R9D.i789 to i64*
  %2723 = load i32, i32* %R9D.i789
  %2724 = zext i32 %2723 to i64
  %2725 = load i64, i64* %PC.i788
  %2726 = add i64 %2725, 4
  store i64 %2726, i64* %PC.i788
  %2727 = zext i32 %2723 to i64
  store i64 %2727, i64* %2722, align 8
  %2728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2728, align 1
  %2729 = and i32 %2723, 255
  %2730 = call i32 @llvm.ctpop.i32(i32 %2729)
  %2731 = trunc i32 %2730 to i8
  %2732 = and i8 %2731, 1
  %2733 = xor i8 %2732, 1
  %2734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2733, i8* %2734, align 1
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2735, align 1
  %2736 = icmp eq i32 %2723, 0
  %2737 = zext i1 %2736 to i8
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2737, i8* %2738, align 1
  %2739 = lshr i32 %2723, 31
  %2740 = trunc i32 %2739 to i8
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2740, i8* %2741, align 1
  %2742 = lshr i32 %2723, 31
  %2743 = xor i32 %2739, %2742
  %2744 = add i32 %2743, %2739
  %2745 = icmp eq i32 %2744, 2
  %2746 = zext i1 %2745 to i8
  %2747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2746, i8* %2747, align 1
  store %struct.Memory* %loadMem_43e1b8, %struct.Memory** %MEMORY
  %loadMem_43e1bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2749 = getelementptr inbounds %struct.GPR, %struct.GPR* %2748, i32 0, i32 33
  %2750 = getelementptr inbounds %struct.Reg, %struct.Reg* %2749, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %2750 to i64*
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2752 = getelementptr inbounds %struct.GPR, %struct.GPR* %2751, i32 0, i32 19
  %2753 = getelementptr inbounds %struct.Reg, %struct.Reg* %2752, i32 0, i32 0
  %R9D.i786 = bitcast %union.anon* %2753 to i32*
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2755 = getelementptr inbounds %struct.GPR, %struct.GPR* %2754, i32 0, i32 1
  %2756 = getelementptr inbounds %struct.Reg, %struct.Reg* %2755, i32 0, i32 0
  %RAX.i787 = bitcast %union.anon* %2756 to i64*
  %2757 = load i32, i32* %R9D.i786
  %2758 = zext i32 %2757 to i64
  %2759 = load i64, i64* %PC.i785
  %2760 = add i64 %2759, 3
  store i64 %2760, i64* %PC.i785
  %2761 = shl i64 %2758, 32
  %2762 = ashr exact i64 %2761, 32
  store i64 %2762, i64* %RAX.i787, align 8
  store %struct.Memory* %loadMem_43e1bc, %struct.Memory** %MEMORY
  %loadMem_43e1bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2764 = getelementptr inbounds %struct.GPR, %struct.GPR* %2763, i32 0, i32 33
  %2765 = getelementptr inbounds %struct.Reg, %struct.Reg* %2764, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %2765 to i64*
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2767 = getelementptr inbounds %struct.GPR, %struct.GPR* %2766, i32 0, i32 1
  %2768 = getelementptr inbounds %struct.Reg, %struct.Reg* %2767, i32 0, i32 0
  %RAX.i783 = bitcast %union.anon* %2768 to i64*
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2770 = getelementptr inbounds %struct.GPR, %struct.GPR* %2769, i32 0, i32 19
  %2771 = getelementptr inbounds %struct.Reg, %struct.Reg* %2770, i32 0, i32 0
  %R9.i784 = bitcast %union.anon* %2771 to i64*
  %2772 = load i64, i64* %RAX.i783
  %2773 = mul i64 %2772, 8
  %2774 = add i64 %2773, 7482144
  %2775 = load i64, i64* %PC.i782
  %2776 = add i64 %2775, 8
  store i64 %2776, i64* %PC.i782
  %2777 = inttoptr i64 %2774 to i64*
  %2778 = load i64, i64* %2777
  store i64 %2778, i64* %R9.i784, align 8
  store %struct.Memory* %loadMem_43e1bf, %struct.Memory** %MEMORY
  %loadMem_43e1c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2780 = getelementptr inbounds %struct.GPR, %struct.GPR* %2779, i32 0, i32 33
  %2781 = getelementptr inbounds %struct.Reg, %struct.Reg* %2780, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %2781 to i64*
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2783 = getelementptr inbounds %struct.GPR, %struct.GPR* %2782, i32 0, i32 17
  %2784 = getelementptr inbounds %struct.Reg, %struct.Reg* %2783, i32 0, i32 0
  %R8W.i780 = bitcast %union.anon* %2784 to i16*
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2786 = getelementptr inbounds %struct.GPR, %struct.GPR* %2785, i32 0, i32 17
  %2787 = getelementptr inbounds %struct.Reg, %struct.Reg* %2786, i32 0, i32 0
  %R8D.i781 = bitcast %union.anon* %2787 to i32*
  %2788 = bitcast i32* %R8D.i781 to i64*
  %2789 = load i16, i16* %R8W.i780
  %2790 = zext i16 %2789 to i64
  %2791 = load i64, i64* %PC.i779
  %2792 = add i64 %2791, 4
  store i64 %2792, i64* %PC.i779
  %2793 = trunc i64 %2790 to i32
  %2794 = shl i32 %2793, 16
  %2795 = ashr exact i32 %2794, 16
  %2796 = zext i32 %2795 to i64
  store i64 %2796, i64* %2788, align 8
  store %struct.Memory* %loadMem_43e1c7, %struct.Memory** %MEMORY
  %loadMem1_43e1cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 33
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %2799 to i64*
  %2800 = load i64, i64* %PC.i778
  %2801 = add i64 %2800, -2299
  %2802 = load i64, i64* %PC.i778
  %2803 = add i64 %2802, 5
  %2804 = load i64, i64* %PC.i778
  %2805 = add i64 %2804, 5
  store i64 %2805, i64* %PC.i778
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2807 = load i64, i64* %2806, align 8
  %2808 = add i64 %2807, -8
  %2809 = inttoptr i64 %2808 to i64*
  store i64 %2803, i64* %2809
  store i64 %2808, i64* %2806, align 8
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2801, i64* %2810, align 8
  store %struct.Memory* %loadMem1_43e1cb, %struct.Memory** %MEMORY
  %loadMem2_43e1cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43e1cb = load i64, i64* %3
  %call2_43e1cb = call %struct.Memory* @sub_43d8d0.OneComponentLumaPrediction4x4(%struct.State* %0, i64 %loadPC_43e1cb, %struct.Memory* %loadMem2_43e1cb)
  store %struct.Memory* %call2_43e1cb, %struct.Memory** %MEMORY
  br label %block_.L_43e1d0

block_.L_43e1d0:                                  ; preds = %block_.L_43e177, %block_43e16d
  %loadMem_43e1d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2812 = getelementptr inbounds %struct.GPR, %struct.GPR* %2811, i32 0, i32 33
  %2813 = getelementptr inbounds %struct.Reg, %struct.Reg* %2812, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %2813 to i64*
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2815 = getelementptr inbounds %struct.GPR, %struct.GPR* %2814, i32 0, i32 15
  %2816 = getelementptr inbounds %struct.Reg, %struct.Reg* %2815, i32 0, i32 0
  %RBP.i777 = bitcast %union.anon* %2816 to i64*
  %2817 = load i64, i64* %RBP.i777
  %2818 = sub i64 %2817, 28
  %2819 = load i64, i64* %PC.i776
  %2820 = add i64 %2819, 4
  store i64 %2820, i64* %PC.i776
  %2821 = inttoptr i64 %2818 to i32*
  %2822 = load i32, i32* %2821
  %2823 = sub i32 %2822, 1
  %2824 = icmp ult i32 %2822, 1
  %2825 = zext i1 %2824 to i8
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2825, i8* %2826, align 1
  %2827 = and i32 %2823, 255
  %2828 = call i32 @llvm.ctpop.i32(i32 %2827)
  %2829 = trunc i32 %2828 to i8
  %2830 = and i8 %2829, 1
  %2831 = xor i8 %2830, 1
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2831, i8* %2832, align 1
  %2833 = xor i32 %2822, 1
  %2834 = xor i32 %2833, %2823
  %2835 = lshr i32 %2834, 4
  %2836 = trunc i32 %2835 to i8
  %2837 = and i8 %2836, 1
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2837, i8* %2838, align 1
  %2839 = icmp eq i32 %2823, 0
  %2840 = zext i1 %2839 to i8
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2840, i8* %2841, align 1
  %2842 = lshr i32 %2823, 31
  %2843 = trunc i32 %2842 to i8
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2843, i8* %2844, align 1
  %2845 = lshr i32 %2822, 31
  %2846 = xor i32 %2842, %2845
  %2847 = add i32 %2846, %2845
  %2848 = icmp eq i32 %2847, 2
  %2849 = zext i1 %2848 to i8
  %2850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2849, i8* %2850, align 1
  store %struct.Memory* %loadMem_43e1d0, %struct.Memory** %MEMORY
  %loadMem_43e1d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 33
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %2853 to i64*
  %2854 = load i64, i64* %PC.i775
  %2855 = add i64 %2854, 16
  %2856 = load i64, i64* %PC.i775
  %2857 = add i64 %2856, 6
  %2858 = load i64, i64* %PC.i775
  %2859 = add i64 %2858, 6
  store i64 %2859, i64* %PC.i775
  %2860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2861 = load i8, i8* %2860, align 1
  store i8 %2861, i8* %BRANCH_TAKEN, align 1
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2863 = icmp ne i8 %2861, 0
  %2864 = select i1 %2863, i64 %2855, i64 %2857
  store i64 %2864, i64* %2862, align 8
  store %struct.Memory* %loadMem_43e1d4, %struct.Memory** %MEMORY
  %loadBr_43e1d4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e1d4 = icmp eq i8 %loadBr_43e1d4, 1
  br i1 %cmpBr_43e1d4, label %block_.L_43e1e4, label %block_43e1da

block_43e1da:                                     ; preds = %block_.L_43e1d0
  %loadMem_43e1da = load %struct.Memory*, %struct.Memory** %MEMORY
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2866 = getelementptr inbounds %struct.GPR, %struct.GPR* %2865, i32 0, i32 33
  %2867 = getelementptr inbounds %struct.Reg, %struct.Reg* %2866, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %2867 to i64*
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2869 = getelementptr inbounds %struct.GPR, %struct.GPR* %2868, i32 0, i32 15
  %2870 = getelementptr inbounds %struct.Reg, %struct.Reg* %2869, i32 0, i32 0
  %RBP.i774 = bitcast %union.anon* %2870 to i64*
  %2871 = load i64, i64* %RBP.i774
  %2872 = sub i64 %2871, 28
  %2873 = load i64, i64* %PC.i773
  %2874 = add i64 %2873, 4
  store i64 %2874, i64* %PC.i773
  %2875 = inttoptr i64 %2872 to i32*
  %2876 = load i32, i32* %2875
  %2877 = sub i32 %2876, 2
  %2878 = icmp ult i32 %2876, 2
  %2879 = zext i1 %2878 to i8
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2879, i8* %2880, align 1
  %2881 = and i32 %2877, 255
  %2882 = call i32 @llvm.ctpop.i32(i32 %2881)
  %2883 = trunc i32 %2882 to i8
  %2884 = and i8 %2883, 1
  %2885 = xor i8 %2884, 1
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2885, i8* %2886, align 1
  %2887 = xor i32 %2876, 2
  %2888 = xor i32 %2887, %2877
  %2889 = lshr i32 %2888, 4
  %2890 = trunc i32 %2889 to i8
  %2891 = and i8 %2890, 1
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2891, i8* %2892, align 1
  %2893 = icmp eq i32 %2877, 0
  %2894 = zext i1 %2893 to i8
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2894, i8* %2895, align 1
  %2896 = lshr i32 %2877, 31
  %2897 = trunc i32 %2896 to i8
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2897, i8* %2898, align 1
  %2899 = lshr i32 %2876, 31
  %2900 = xor i32 %2896, %2899
  %2901 = add i32 %2900, %2899
  %2902 = icmp eq i32 %2901, 2
  %2903 = zext i1 %2902 to i8
  %2904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2903, i8* %2904, align 1
  store %struct.Memory* %loadMem_43e1da, %struct.Memory** %MEMORY
  %loadMem_43e1de = load %struct.Memory*, %struct.Memory** %MEMORY
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 33
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %2907 to i64*
  %2908 = load i64, i64* %PC.i772
  %2909 = add i64 %2908, 96
  %2910 = load i64, i64* %PC.i772
  %2911 = add i64 %2910, 6
  %2912 = load i64, i64* %PC.i772
  %2913 = add i64 %2912, 6
  store i64 %2913, i64* %PC.i772
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2915 = load i8, i8* %2914, align 1
  %2916 = icmp eq i8 %2915, 0
  %2917 = zext i1 %2916 to i8
  store i8 %2917, i8* %BRANCH_TAKEN, align 1
  %2918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2919 = select i1 %2916, i64 %2909, i64 %2911
  store i64 %2919, i64* %2918, align 8
  store %struct.Memory* %loadMem_43e1de, %struct.Memory** %MEMORY
  %loadBr_43e1de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e1de = icmp eq i8 %loadBr_43e1de, 1
  br i1 %cmpBr_43e1de, label %block_.L_43e23e, label %block_.L_43e1e4

block_.L_43e1e4:                                  ; preds = %block_43e1da, %block_.L_43e1d0
  %loadMem_43e1e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2921 = getelementptr inbounds %struct.GPR, %struct.GPR* %2920, i32 0, i32 33
  %2922 = getelementptr inbounds %struct.Reg, %struct.Reg* %2921, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %2922 to i64*
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2924 = getelementptr inbounds %struct.GPR, %struct.GPR* %2923, i32 0, i32 11
  %2925 = getelementptr inbounds %struct.Reg, %struct.Reg* %2924, i32 0, i32 0
  %RDI.i771 = bitcast %union.anon* %2925 to i64*
  %2926 = load i64, i64* %PC.i770
  %2927 = add i64 %2926, 10
  store i64 %2927, i64* %PC.i770
  store i64 ptrtoint (%G__0x6cc1f0_type* @G__0x6cc1f0 to i64), i64* %RDI.i771, align 8
  store %struct.Memory* %loadMem_43e1e4, %struct.Memory** %MEMORY
  %loadMem_43e1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2929 = getelementptr inbounds %struct.GPR, %struct.GPR* %2928, i32 0, i32 33
  %2930 = getelementptr inbounds %struct.Reg, %struct.Reg* %2929, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %2930 to i64*
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2932 = getelementptr inbounds %struct.GPR, %struct.GPR* %2931, i32 0, i32 9
  %2933 = getelementptr inbounds %struct.Reg, %struct.Reg* %2932, i32 0, i32 0
  %RSI.i768 = bitcast %union.anon* %2933 to i64*
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2935 = getelementptr inbounds %struct.GPR, %struct.GPR* %2934, i32 0, i32 15
  %2936 = getelementptr inbounds %struct.Reg, %struct.Reg* %2935, i32 0, i32 0
  %RBP.i769 = bitcast %union.anon* %2936 to i64*
  %2937 = load i64, i64* %RBP.i769
  %2938 = sub i64 %2937, 60
  %2939 = load i64, i64* %PC.i767
  %2940 = add i64 %2939, 3
  store i64 %2940, i64* %PC.i767
  %2941 = inttoptr i64 %2938 to i32*
  %2942 = load i32, i32* %2941
  %2943 = zext i32 %2942 to i64
  store i64 %2943, i64* %RSI.i768, align 8
  store %struct.Memory* %loadMem_43e1ee, %struct.Memory** %MEMORY
  %loadMem_43e1f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2945 = getelementptr inbounds %struct.GPR, %struct.GPR* %2944, i32 0, i32 33
  %2946 = getelementptr inbounds %struct.Reg, %struct.Reg* %2945, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %2946 to i64*
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2948 = getelementptr inbounds %struct.GPR, %struct.GPR* %2947, i32 0, i32 7
  %2949 = getelementptr inbounds %struct.Reg, %struct.Reg* %2948, i32 0, i32 0
  %RDX.i765 = bitcast %union.anon* %2949 to i64*
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2951 = getelementptr inbounds %struct.GPR, %struct.GPR* %2950, i32 0, i32 15
  %2952 = getelementptr inbounds %struct.Reg, %struct.Reg* %2951, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %2952 to i64*
  %2953 = load i64, i64* %RBP.i766
  %2954 = sub i64 %2953, 64
  %2955 = load i64, i64* %PC.i764
  %2956 = add i64 %2955, 3
  store i64 %2956, i64* %PC.i764
  %2957 = inttoptr i64 %2954 to i32*
  %2958 = load i32, i32* %2957
  %2959 = zext i32 %2958 to i64
  store i64 %2959, i64* %RDX.i765, align 8
  store %struct.Memory* %loadMem_43e1f1, %struct.Memory** %MEMORY
  %loadMem_43e1f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2961 = getelementptr inbounds %struct.GPR, %struct.GPR* %2960, i32 0, i32 33
  %2962 = getelementptr inbounds %struct.Reg, %struct.Reg* %2961, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %2962 to i64*
  %2963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2964 = getelementptr inbounds %struct.GPR, %struct.GPR* %2963, i32 0, i32 1
  %2965 = getelementptr inbounds %struct.Reg, %struct.Reg* %2964, i32 0, i32 0
  %RAX.i762 = bitcast %union.anon* %2965 to i64*
  %2966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2967 = getelementptr inbounds %struct.GPR, %struct.GPR* %2966, i32 0, i32 15
  %2968 = getelementptr inbounds %struct.Reg, %struct.Reg* %2967, i32 0, i32 0
  %RBP.i763 = bitcast %union.anon* %2968 to i64*
  %2969 = load i64, i64* %RBP.i763
  %2970 = sub i64 %2969, 112
  %2971 = load i64, i64* %PC.i761
  %2972 = add i64 %2971, 4
  store i64 %2972, i64* %PC.i761
  %2973 = inttoptr i64 %2970 to i64*
  %2974 = load i64, i64* %2973
  store i64 %2974, i64* %RAX.i762, align 8
  store %struct.Memory* %loadMem_43e1f4, %struct.Memory** %MEMORY
  %loadMem_43e1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2976 = getelementptr inbounds %struct.GPR, %struct.GPR* %2975, i32 0, i32 33
  %2977 = getelementptr inbounds %struct.Reg, %struct.Reg* %2976, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %2977 to i64*
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2979 = getelementptr inbounds %struct.GPR, %struct.GPR* %2978, i32 0, i32 5
  %2980 = getelementptr inbounds %struct.Reg, %struct.Reg* %2979, i32 0, i32 0
  %RCX.i759 = bitcast %union.anon* %2980 to i64*
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2982 = getelementptr inbounds %struct.GPR, %struct.GPR* %2981, i32 0, i32 15
  %2983 = getelementptr inbounds %struct.Reg, %struct.Reg* %2982, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %2983 to i64*
  %2984 = load i64, i64* %RBP.i760
  %2985 = sub i64 %2984, 68
  %2986 = load i64, i64* %PC.i758
  %2987 = add i64 %2986, 4
  store i64 %2987, i64* %PC.i758
  %2988 = inttoptr i64 %2985 to i32*
  %2989 = load i32, i32* %2988
  %2990 = sext i32 %2989 to i64
  store i64 %2990, i64* %RCX.i759, align 8
  store %struct.Memory* %loadMem_43e1f8, %struct.Memory** %MEMORY
  %loadMem_43e1fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2992 = getelementptr inbounds %struct.GPR, %struct.GPR* %2991, i32 0, i32 33
  %2993 = getelementptr inbounds %struct.Reg, %struct.Reg* %2992, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %2993 to i64*
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2995 = getelementptr inbounds %struct.GPR, %struct.GPR* %2994, i32 0, i32 1
  %2996 = getelementptr inbounds %struct.Reg, %struct.Reg* %2995, i32 0, i32 0
  %RAX.i756 = bitcast %union.anon* %2996 to i64*
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2998 = getelementptr inbounds %struct.GPR, %struct.GPR* %2997, i32 0, i32 5
  %2999 = getelementptr inbounds %struct.Reg, %struct.Reg* %2998, i32 0, i32 0
  %RCX.i757 = bitcast %union.anon* %2999 to i64*
  %3000 = load i64, i64* %RAX.i756
  %3001 = load i64, i64* %RCX.i757
  %3002 = mul i64 %3001, 8
  %3003 = add i64 %3002, %3000
  %3004 = load i64, i64* %PC.i755
  %3005 = add i64 %3004, 4
  store i64 %3005, i64* %PC.i755
  %3006 = inttoptr i64 %3003 to i64*
  %3007 = load i64, i64* %3006
  store i64 %3007, i64* %RAX.i756, align 8
  store %struct.Memory* %loadMem_43e1fc, %struct.Memory** %MEMORY
  %loadMem_43e200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3009 = getelementptr inbounds %struct.GPR, %struct.GPR* %3008, i32 0, i32 33
  %3010 = getelementptr inbounds %struct.Reg, %struct.Reg* %3009, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %3010 to i64*
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3012 = getelementptr inbounds %struct.GPR, %struct.GPR* %3011, i32 0, i32 5
  %3013 = getelementptr inbounds %struct.Reg, %struct.Reg* %3012, i32 0, i32 0
  %RCX.i753 = bitcast %union.anon* %3013 to i64*
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3015 = getelementptr inbounds %struct.GPR, %struct.GPR* %3014, i32 0, i32 15
  %3016 = getelementptr inbounds %struct.Reg, %struct.Reg* %3015, i32 0, i32 0
  %RBP.i754 = bitcast %union.anon* %3016 to i64*
  %3017 = load i64, i64* %RBP.i754
  %3018 = sub i64 %3017, 72
  %3019 = load i64, i64* %PC.i752
  %3020 = add i64 %3019, 4
  store i64 %3020, i64* %PC.i752
  %3021 = inttoptr i64 %3018 to i32*
  %3022 = load i32, i32* %3021
  %3023 = sext i32 %3022 to i64
  store i64 %3023, i64* %RCX.i753, align 8
  store %struct.Memory* %loadMem_43e200, %struct.Memory** %MEMORY
  %loadMem_43e204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3025 = getelementptr inbounds %struct.GPR, %struct.GPR* %3024, i32 0, i32 33
  %3026 = getelementptr inbounds %struct.Reg, %struct.Reg* %3025, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %3026 to i64*
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3028 = getelementptr inbounds %struct.GPR, %struct.GPR* %3027, i32 0, i32 1
  %3029 = getelementptr inbounds %struct.Reg, %struct.Reg* %3028, i32 0, i32 0
  %RAX.i750 = bitcast %union.anon* %3029 to i64*
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3031 = getelementptr inbounds %struct.GPR, %struct.GPR* %3030, i32 0, i32 5
  %3032 = getelementptr inbounds %struct.Reg, %struct.Reg* %3031, i32 0, i32 0
  %RCX.i751 = bitcast %union.anon* %3032 to i64*
  %3033 = load i64, i64* %RAX.i750
  %3034 = load i64, i64* %RCX.i751
  %3035 = mul i64 %3034, 8
  %3036 = add i64 %3035, %3033
  %3037 = load i64, i64* %PC.i749
  %3038 = add i64 %3037, 4
  store i64 %3038, i64* %PC.i749
  %3039 = inttoptr i64 %3036 to i64*
  %3040 = load i64, i64* %3039
  store i64 %3040, i64* %RAX.i750, align 8
  store %struct.Memory* %loadMem_43e204, %struct.Memory** %MEMORY
  %loadMem_43e208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3042 = getelementptr inbounds %struct.GPR, %struct.GPR* %3041, i32 0, i32 33
  %3043 = getelementptr inbounds %struct.Reg, %struct.Reg* %3042, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %3043 to i64*
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3045 = getelementptr inbounds %struct.GPR, %struct.GPR* %3044, i32 0, i32 1
  %3046 = getelementptr inbounds %struct.Reg, %struct.Reg* %3045, i32 0, i32 0
  %RAX.i748 = bitcast %union.anon* %3046 to i64*
  %3047 = load i64, i64* %RAX.i748
  %3048 = add i64 %3047, 8
  %3049 = load i64, i64* %PC.i747
  %3050 = add i64 %3049, 4
  store i64 %3050, i64* %PC.i747
  %3051 = inttoptr i64 %3048 to i64*
  %3052 = load i64, i64* %3051
  store i64 %3052, i64* %RAX.i748, align 8
  store %struct.Memory* %loadMem_43e208, %struct.Memory** %MEMORY
  %loadMem_43e20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3054 = getelementptr inbounds %struct.GPR, %struct.GPR* %3053, i32 0, i32 33
  %3055 = getelementptr inbounds %struct.Reg, %struct.Reg* %3054, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %3055 to i64*
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3057 = getelementptr inbounds %struct.GPR, %struct.GPR* %3056, i32 0, i32 5
  %3058 = getelementptr inbounds %struct.Reg, %struct.Reg* %3057, i32 0, i32 0
  %RCX.i745 = bitcast %union.anon* %3058 to i64*
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3060 = getelementptr inbounds %struct.GPR, %struct.GPR* %3059, i32 0, i32 15
  %3061 = getelementptr inbounds %struct.Reg, %struct.Reg* %3060, i32 0, i32 0
  %RBP.i746 = bitcast %union.anon* %3061 to i64*
  %3062 = load i64, i64* %RBP.i746
  %3063 = sub i64 %3062, 40
  %3064 = load i64, i64* %PC.i744
  %3065 = add i64 %3064, 5
  store i64 %3065, i64* %PC.i744
  %3066 = inttoptr i64 %3063 to i16*
  %3067 = load i16, i16* %3066
  %3068 = sext i16 %3067 to i64
  store i64 %3068, i64* %RCX.i745, align 8
  store %struct.Memory* %loadMem_43e20c, %struct.Memory** %MEMORY
  %loadMem_43e211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 33
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %3071 to i64*
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3073 = getelementptr inbounds %struct.GPR, %struct.GPR* %3072, i32 0, i32 1
  %3074 = getelementptr inbounds %struct.Reg, %struct.Reg* %3073, i32 0, i32 0
  %RAX.i742 = bitcast %union.anon* %3074 to i64*
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 5
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %RCX.i743 = bitcast %union.anon* %3077 to i64*
  %3078 = load i64, i64* %RAX.i742
  %3079 = load i64, i64* %RCX.i743
  %3080 = mul i64 %3079, 8
  %3081 = add i64 %3080, %3078
  %3082 = load i64, i64* %PC.i741
  %3083 = add i64 %3082, 4
  store i64 %3083, i64* %PC.i741
  %3084 = inttoptr i64 %3081 to i64*
  %3085 = load i64, i64* %3084
  store i64 %3085, i64* %RAX.i742, align 8
  store %struct.Memory* %loadMem_43e211, %struct.Memory** %MEMORY
  %loadMem_43e215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3087 = getelementptr inbounds %struct.GPR, %struct.GPR* %3086, i32 0, i32 33
  %3088 = getelementptr inbounds %struct.Reg, %struct.Reg* %3087, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %3088 to i64*
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3090 = getelementptr inbounds %struct.GPR, %struct.GPR* %3089, i32 0, i32 5
  %3091 = getelementptr inbounds %struct.Reg, %struct.Reg* %3090, i32 0, i32 0
  %RCX.i739 = bitcast %union.anon* %3091 to i64*
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3093 = getelementptr inbounds %struct.GPR, %struct.GPR* %3092, i32 0, i32 15
  %3094 = getelementptr inbounds %struct.Reg, %struct.Reg* %3093, i32 0, i32 0
  %RBP.i740 = bitcast %union.anon* %3094 to i64*
  %3095 = load i64, i64* %RBP.i740
  %3096 = sub i64 %3095, 36
  %3097 = load i64, i64* %PC.i738
  %3098 = add i64 %3097, 4
  store i64 %3098, i64* %PC.i738
  %3099 = inttoptr i64 %3096 to i32*
  %3100 = load i32, i32* %3099
  %3101 = sext i32 %3100 to i64
  store i64 %3101, i64* %RCX.i739, align 8
  store %struct.Memory* %loadMem_43e215, %struct.Memory** %MEMORY
  %loadMem_43e219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3103 = getelementptr inbounds %struct.GPR, %struct.GPR* %3102, i32 0, i32 33
  %3104 = getelementptr inbounds %struct.Reg, %struct.Reg* %3103, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %3104 to i64*
  %3105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3106 = getelementptr inbounds %struct.GPR, %struct.GPR* %3105, i32 0, i32 1
  %3107 = getelementptr inbounds %struct.Reg, %struct.Reg* %3106, i32 0, i32 0
  %RAX.i736 = bitcast %union.anon* %3107 to i64*
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3109 = getelementptr inbounds %struct.GPR, %struct.GPR* %3108, i32 0, i32 5
  %3110 = getelementptr inbounds %struct.Reg, %struct.Reg* %3109, i32 0, i32 0
  %RCX.i737 = bitcast %union.anon* %3110 to i64*
  %3111 = load i64, i64* %RAX.i736
  %3112 = load i64, i64* %RCX.i737
  %3113 = mul i64 %3112, 8
  %3114 = add i64 %3113, %3111
  %3115 = load i64, i64* %PC.i735
  %3116 = add i64 %3115, 4
  store i64 %3116, i64* %PC.i735
  %3117 = inttoptr i64 %3114 to i64*
  %3118 = load i64, i64* %3117
  store i64 %3118, i64* %RCX.i737, align 8
  store %struct.Memory* %loadMem_43e219, %struct.Memory** %MEMORY
  %loadMem_43e21d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3120 = getelementptr inbounds %struct.GPR, %struct.GPR* %3119, i32 0, i32 33
  %3121 = getelementptr inbounds %struct.Reg, %struct.Reg* %3120, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %3121 to i64*
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3123 = getelementptr inbounds %struct.GPR, %struct.GPR* %3122, i32 0, i32 17
  %3124 = getelementptr inbounds %struct.Reg, %struct.Reg* %3123, i32 0, i32 0
  %R8W.i733 = bitcast %union.anon* %3124 to i16*
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3126 = getelementptr inbounds %struct.GPR, %struct.GPR* %3125, i32 0, i32 15
  %3127 = getelementptr inbounds %struct.Reg, %struct.Reg* %3126, i32 0, i32 0
  %RBP.i734 = bitcast %union.anon* %3127 to i64*
  %3128 = load i64, i64* %RBP.i734
  %3129 = sub i64 %3128, 40
  %3130 = load i64, i64* %PC.i732
  %3131 = add i64 %3130, 5
  store i64 %3131, i64* %PC.i732
  %3132 = inttoptr i64 %3129 to i16*
  %3133 = load i16, i16* %3132
  store i16 %3133, i16* %R8W.i733, align 2
  store %struct.Memory* %loadMem_43e21d, %struct.Memory** %MEMORY
  %loadMem_43e222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3135 = getelementptr inbounds %struct.GPR, %struct.GPR* %3134, i32 0, i32 33
  %3136 = getelementptr inbounds %struct.Reg, %struct.Reg* %3135, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %3136 to i64*
  %3137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3138 = getelementptr inbounds %struct.GPR, %struct.GPR* %3137, i32 0, i32 19
  %3139 = getelementptr inbounds %struct.Reg, %struct.Reg* %3138, i32 0, i32 0
  %R9D.i730 = bitcast %union.anon* %3139 to i32*
  %3140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3141 = getelementptr inbounds %struct.GPR, %struct.GPR* %3140, i32 0, i32 15
  %3142 = getelementptr inbounds %struct.Reg, %struct.Reg* %3141, i32 0, i32 0
  %RBP.i731 = bitcast %union.anon* %3142 to i64*
  %3143 = bitcast i32* %R9D.i730 to i64*
  %3144 = load i64, i64* %RBP.i731
  %3145 = sub i64 %3144, 116
  %3146 = load i64, i64* %PC.i729
  %3147 = add i64 %3146, 4
  store i64 %3147, i64* %PC.i729
  %3148 = inttoptr i64 %3145 to i32*
  %3149 = load i32, i32* %3148
  %3150 = zext i32 %3149 to i64
  store i64 %3150, i64* %3143, align 8
  store %struct.Memory* %loadMem_43e222, %struct.Memory** %MEMORY
  %loadMem_43e226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 33
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %3153 to i64*
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3155 = getelementptr inbounds %struct.GPR, %struct.GPR* %3154, i32 0, i32 19
  %3156 = getelementptr inbounds %struct.Reg, %struct.Reg* %3155, i32 0, i32 0
  %R9D.i728 = bitcast %union.anon* %3156 to i32*
  %3157 = bitcast i32* %R9D.i728 to i64*
  %3158 = load i32, i32* %R9D.i728
  %3159 = zext i32 %3158 to i64
  %3160 = load i64, i64* %PC.i727
  %3161 = add i64 %3160, 4
  store i64 %3161, i64* %PC.i727
  %3162 = add i32 1, %3158
  %3163 = zext i32 %3162 to i64
  store i64 %3163, i64* %3157, align 8
  %3164 = icmp ult i32 %3162, %3158
  %3165 = icmp ult i32 %3162, 1
  %3166 = or i1 %3164, %3165
  %3167 = zext i1 %3166 to i8
  %3168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3167, i8* %3168, align 1
  %3169 = and i32 %3162, 255
  %3170 = call i32 @llvm.ctpop.i32(i32 %3169)
  %3171 = trunc i32 %3170 to i8
  %3172 = and i8 %3171, 1
  %3173 = xor i8 %3172, 1
  %3174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3173, i8* %3174, align 1
  %3175 = xor i64 1, %3159
  %3176 = trunc i64 %3175 to i32
  %3177 = xor i32 %3176, %3162
  %3178 = lshr i32 %3177, 4
  %3179 = trunc i32 %3178 to i8
  %3180 = and i8 %3179, 1
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3180, i8* %3181, align 1
  %3182 = icmp eq i32 %3162, 0
  %3183 = zext i1 %3182 to i8
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3183, i8* %3184, align 1
  %3185 = lshr i32 %3162, 31
  %3186 = trunc i32 %3185 to i8
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3186, i8* %3187, align 1
  %3188 = lshr i32 %3158, 31
  %3189 = xor i32 %3185, %3188
  %3190 = add i32 %3189, %3185
  %3191 = icmp eq i32 %3190, 2
  %3192 = zext i1 %3191 to i8
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3192, i8* %3193, align 1
  store %struct.Memory* %loadMem_43e226, %struct.Memory** %MEMORY
  %loadMem_43e22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3195 = getelementptr inbounds %struct.GPR, %struct.GPR* %3194, i32 0, i32 33
  %3196 = getelementptr inbounds %struct.Reg, %struct.Reg* %3195, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %3196 to i64*
  %3197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3198 = getelementptr inbounds %struct.GPR, %struct.GPR* %3197, i32 0, i32 19
  %3199 = getelementptr inbounds %struct.Reg, %struct.Reg* %3198, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %3199 to i32*
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3201 = getelementptr inbounds %struct.GPR, %struct.GPR* %3200, i32 0, i32 1
  %3202 = getelementptr inbounds %struct.Reg, %struct.Reg* %3201, i32 0, i32 0
  %RAX.i726 = bitcast %union.anon* %3202 to i64*
  %3203 = load i32, i32* %R9D.i
  %3204 = zext i32 %3203 to i64
  %3205 = load i64, i64* %PC.i725
  %3206 = add i64 %3205, 3
  store i64 %3206, i64* %PC.i725
  %3207 = shl i64 %3204, 32
  %3208 = ashr exact i64 %3207, 32
  store i64 %3208, i64* %RAX.i726, align 8
  store %struct.Memory* %loadMem_43e22a, %struct.Memory** %MEMORY
  %loadMem_43e22d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3210 = getelementptr inbounds %struct.GPR, %struct.GPR* %3209, i32 0, i32 33
  %3211 = getelementptr inbounds %struct.Reg, %struct.Reg* %3210, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %3211 to i64*
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3213 = getelementptr inbounds %struct.GPR, %struct.GPR* %3212, i32 0, i32 1
  %3214 = getelementptr inbounds %struct.Reg, %struct.Reg* %3213, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %3214 to i64*
  %3215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3216 = getelementptr inbounds %struct.GPR, %struct.GPR* %3215, i32 0, i32 19
  %3217 = getelementptr inbounds %struct.Reg, %struct.Reg* %3216, i32 0, i32 0
  %R9.i724 = bitcast %union.anon* %3217 to i64*
  %3218 = load i64, i64* %RAX.i723
  %3219 = mul i64 %3218, 8
  %3220 = add i64 %3219, 7482144
  %3221 = load i64, i64* %PC.i722
  %3222 = add i64 %3221, 8
  store i64 %3222, i64* %PC.i722
  %3223 = inttoptr i64 %3220 to i64*
  %3224 = load i64, i64* %3223
  store i64 %3224, i64* %R9.i724, align 8
  store %struct.Memory* %loadMem_43e22d, %struct.Memory** %MEMORY
  %loadMem_43e235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3226 = getelementptr inbounds %struct.GPR, %struct.GPR* %3225, i32 0, i32 33
  %3227 = getelementptr inbounds %struct.Reg, %struct.Reg* %3226, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %3227 to i64*
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3229 = getelementptr inbounds %struct.GPR, %struct.GPR* %3228, i32 0, i32 17
  %3230 = getelementptr inbounds %struct.Reg, %struct.Reg* %3229, i32 0, i32 0
  %R8W.i721 = bitcast %union.anon* %3230 to i16*
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3232 = getelementptr inbounds %struct.GPR, %struct.GPR* %3231, i32 0, i32 17
  %3233 = getelementptr inbounds %struct.Reg, %struct.Reg* %3232, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %3233 to i32*
  %3234 = bitcast i32* %R8D.i to i64*
  %3235 = load i16, i16* %R8W.i721
  %3236 = zext i16 %3235 to i64
  %3237 = load i64, i64* %PC.i720
  %3238 = add i64 %3237, 4
  store i64 %3238, i64* %PC.i720
  %3239 = trunc i64 %3236 to i32
  %3240 = shl i32 %3239, 16
  %3241 = ashr exact i32 %3240, 16
  %3242 = zext i32 %3241 to i64
  store i64 %3242, i64* %3234, align 8
  store %struct.Memory* %loadMem_43e235, %struct.Memory** %MEMORY
  %loadMem1_43e239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3244 = getelementptr inbounds %struct.GPR, %struct.GPR* %3243, i32 0, i32 33
  %3245 = getelementptr inbounds %struct.Reg, %struct.Reg* %3244, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %3245 to i64*
  %3246 = load i64, i64* %PC.i719
  %3247 = add i64 %3246, -2409
  %3248 = load i64, i64* %PC.i719
  %3249 = add i64 %3248, 5
  %3250 = load i64, i64* %PC.i719
  %3251 = add i64 %3250, 5
  store i64 %3251, i64* %PC.i719
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3253 = load i64, i64* %3252, align 8
  %3254 = add i64 %3253, -8
  %3255 = inttoptr i64 %3254 to i64*
  store i64 %3249, i64* %3255
  store i64 %3254, i64* %3252, align 8
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3247, i64* %3256, align 8
  store %struct.Memory* %loadMem1_43e239, %struct.Memory** %MEMORY
  %loadMem2_43e239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43e239 = load i64, i64* %3
  %call2_43e239 = call %struct.Memory* @sub_43d8d0.OneComponentLumaPrediction4x4(%struct.State* %0, i64 %loadPC_43e239, %struct.Memory* %loadMem2_43e239)
  store %struct.Memory* %call2_43e239, %struct.Memory** %MEMORY
  br label %block_.L_43e23e

block_.L_43e23e:                                  ; preds = %block_.L_43e1e4, %block_43e1da
  %loadMem_43e23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3258 = getelementptr inbounds %struct.GPR, %struct.GPR* %3257, i32 0, i32 33
  %3259 = getelementptr inbounds %struct.Reg, %struct.Reg* %3258, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %3259 to i64*
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3261 = getelementptr inbounds %struct.GPR, %struct.GPR* %3260, i32 0, i32 15
  %3262 = getelementptr inbounds %struct.Reg, %struct.Reg* %3261, i32 0, i32 0
  %RBP.i718 = bitcast %union.anon* %3262 to i64*
  %3263 = load i64, i64* %RBP.i718
  %3264 = sub i64 %3263, 100
  %3265 = load i64, i64* %PC.i717
  %3266 = add i64 %3265, 4
  store i64 %3266, i64* %PC.i717
  %3267 = inttoptr i64 %3264 to i32*
  %3268 = load i32, i32* %3267
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3269, align 1
  %3270 = and i32 %3268, 255
  %3271 = call i32 @llvm.ctpop.i32(i32 %3270)
  %3272 = trunc i32 %3271 to i8
  %3273 = and i8 %3272, 1
  %3274 = xor i8 %3273, 1
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3274, i8* %3275, align 1
  %3276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3276, align 1
  %3277 = icmp eq i32 %3268, 0
  %3278 = zext i1 %3277 to i8
  %3279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3278, i8* %3279, align 1
  %3280 = lshr i32 %3268, 31
  %3281 = trunc i32 %3280 to i8
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3281, i8* %3282, align 1
  %3283 = lshr i32 %3268, 31
  %3284 = xor i32 %3280, %3283
  %3285 = add i32 %3284, %3283
  %3286 = icmp eq i32 %3285, 2
  %3287 = zext i1 %3286 to i8
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3287, i8* %3288, align 1
  store %struct.Memory* %loadMem_43e23e, %struct.Memory** %MEMORY
  %loadMem_43e242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3290 = getelementptr inbounds %struct.GPR, %struct.GPR* %3289, i32 0, i32 33
  %3291 = getelementptr inbounds %struct.Reg, %struct.Reg* %3290, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %3291 to i64*
  %3292 = load i64, i64* %PC.i716
  %3293 = add i64 %3292, 734
  %3294 = load i64, i64* %PC.i716
  %3295 = add i64 %3294, 6
  %3296 = load i64, i64* %PC.i716
  %3297 = add i64 %3296, 6
  store i64 %3297, i64* %PC.i716
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3299 = load i8, i8* %3298, align 1
  store i8 %3299, i8* %BRANCH_TAKEN, align 1
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3301 = icmp ne i8 %3299, 0
  %3302 = select i1 %3301, i64 %3293, i64 %3295
  store i64 %3302, i64* %3300, align 8
  store %struct.Memory* %loadMem_43e242, %struct.Memory** %MEMORY
  %loadBr_43e242 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e242 = icmp eq i8 %loadBr_43e242, 1
  br i1 %cmpBr_43e242, label %block_.L_43e520, label %block_43e248

block_43e248:                                     ; preds = %block_.L_43e23e
  %loadMem_43e248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3304 = getelementptr inbounds %struct.GPR, %struct.GPR* %3303, i32 0, i32 33
  %3305 = getelementptr inbounds %struct.Reg, %struct.Reg* %3304, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %3305 to i64*
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3307 = getelementptr inbounds %struct.GPR, %struct.GPR* %3306, i32 0, i32 15
  %3308 = getelementptr inbounds %struct.Reg, %struct.Reg* %3307, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %3308 to i64*
  %3309 = load i64, i64* %RBP.i715
  %3310 = sub i64 %3309, 28
  %3311 = load i64, i64* %PC.i714
  %3312 = add i64 %3311, 4
  store i64 %3312, i64* %PC.i714
  %3313 = inttoptr i64 %3310 to i32*
  %3314 = load i32, i32* %3313
  %3315 = sub i32 %3314, 2
  %3316 = icmp ult i32 %3314, 2
  %3317 = zext i1 %3316 to i8
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3317, i8* %3318, align 1
  %3319 = and i32 %3315, 255
  %3320 = call i32 @llvm.ctpop.i32(i32 %3319)
  %3321 = trunc i32 %3320 to i8
  %3322 = and i8 %3321, 1
  %3323 = xor i8 %3322, 1
  %3324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3323, i8* %3324, align 1
  %3325 = xor i32 %3314, 2
  %3326 = xor i32 %3325, %3315
  %3327 = lshr i32 %3326, 4
  %3328 = trunc i32 %3327 to i8
  %3329 = and i8 %3328, 1
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3329, i8* %3330, align 1
  %3331 = icmp eq i32 %3315, 0
  %3332 = zext i1 %3331 to i8
  %3333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3332, i8* %3333, align 1
  %3334 = lshr i32 %3315, 31
  %3335 = trunc i32 %3334 to i8
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3335, i8* %3336, align 1
  %3337 = lshr i32 %3314, 31
  %3338 = xor i32 %3334, %3337
  %3339 = add i32 %3338, %3337
  %3340 = icmp eq i32 %3339, 2
  %3341 = zext i1 %3340 to i8
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3341, i8* %3342, align 1
  store %struct.Memory* %loadMem_43e248, %struct.Memory** %MEMORY
  %loadMem_43e24c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3344 = getelementptr inbounds %struct.GPR, %struct.GPR* %3343, i32 0, i32 33
  %3345 = getelementptr inbounds %struct.Reg, %struct.Reg* %3344, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %3345 to i64*
  %3346 = load i64, i64* %PC.i713
  %3347 = add i64 %3346, 306
  %3348 = load i64, i64* %PC.i713
  %3349 = add i64 %3348, 6
  %3350 = load i64, i64* %PC.i713
  %3351 = add i64 %3350, 6
  store i64 %3351, i64* %PC.i713
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3353 = load i8, i8* %3352, align 1
  %3354 = icmp eq i8 %3353, 0
  %3355 = zext i1 %3354 to i8
  store i8 %3355, i8* %BRANCH_TAKEN, align 1
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3357 = select i1 %3354, i64 %3347, i64 %3349
  store i64 %3357, i64* %3356, align 8
  store %struct.Memory* %loadMem_43e24c, %struct.Memory** %MEMORY
  %loadBr_43e24c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e24c = icmp eq i8 %loadBr_43e24c, 1
  br i1 %cmpBr_43e24c, label %block_.L_43e37e, label %block_43e252

block_43e252:                                     ; preds = %block_43e248
  %loadMem_43e252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3359 = getelementptr inbounds %struct.GPR, %struct.GPR* %3358, i32 0, i32 33
  %3360 = getelementptr inbounds %struct.Reg, %struct.Reg* %3359, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %3360 to i64*
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3362 = getelementptr inbounds %struct.GPR, %struct.GPR* %3361, i32 0, i32 1
  %3363 = getelementptr inbounds %struct.Reg, %struct.Reg* %3362, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %3363 to i64*
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3365 = getelementptr inbounds %struct.GPR, %struct.GPR* %3364, i32 0, i32 15
  %3366 = getelementptr inbounds %struct.Reg, %struct.Reg* %3365, i32 0, i32 0
  %RBP.i712 = bitcast %union.anon* %3366 to i64*
  %3367 = load i64, i64* %RBP.i712
  %3368 = sub i64 %3367, 24
  %3369 = load i64, i64* %PC.i710
  %3370 = add i64 %3369, 3
  store i64 %3370, i64* %PC.i710
  %3371 = inttoptr i64 %3368 to i32*
  %3372 = load i32, i32* %3371
  %3373 = zext i32 %3372 to i64
  store i64 %3373, i64* %RAX.i711, align 8
  store %struct.Memory* %loadMem_43e252, %struct.Memory** %MEMORY
  %loadMem_43e255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3375 = getelementptr inbounds %struct.GPR, %struct.GPR* %3374, i32 0, i32 33
  %3376 = getelementptr inbounds %struct.Reg, %struct.Reg* %3375, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %3376 to i64*
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3378 = getelementptr inbounds %struct.GPR, %struct.GPR* %3377, i32 0, i32 1
  %3379 = getelementptr inbounds %struct.Reg, %struct.Reg* %3378, i32 0, i32 0
  %EAX.i708 = bitcast %union.anon* %3379 to i32*
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3381 = getelementptr inbounds %struct.GPR, %struct.GPR* %3380, i32 0, i32 15
  %3382 = getelementptr inbounds %struct.Reg, %struct.Reg* %3381, i32 0, i32 0
  %RBP.i709 = bitcast %union.anon* %3382 to i64*
  %3383 = load i64, i64* %RBP.i709
  %3384 = sub i64 %3383, 48
  %3385 = load i32, i32* %EAX.i708
  %3386 = zext i32 %3385 to i64
  %3387 = load i64, i64* %PC.i707
  %3388 = add i64 %3387, 3
  store i64 %3388, i64* %PC.i707
  %3389 = inttoptr i64 %3384 to i32*
  store i32 %3385, i32* %3389
  store %struct.Memory* %loadMem_43e255, %struct.Memory** %MEMORY
  br label %block_.L_43e258

block_.L_43e258:                                  ; preds = %block_.L_43e36b, %block_43e252
  %loadMem_43e258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3391 = getelementptr inbounds %struct.GPR, %struct.GPR* %3390, i32 0, i32 33
  %3392 = getelementptr inbounds %struct.Reg, %struct.Reg* %3391, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %3392 to i64*
  %3393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3394 = getelementptr inbounds %struct.GPR, %struct.GPR* %3393, i32 0, i32 1
  %3395 = getelementptr inbounds %struct.Reg, %struct.Reg* %3394, i32 0, i32 0
  %RAX.i705 = bitcast %union.anon* %3395 to i64*
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3397 = getelementptr inbounds %struct.GPR, %struct.GPR* %3396, i32 0, i32 15
  %3398 = getelementptr inbounds %struct.Reg, %struct.Reg* %3397, i32 0, i32 0
  %RBP.i706 = bitcast %union.anon* %3398 to i64*
  %3399 = load i64, i64* %RBP.i706
  %3400 = sub i64 %3399, 48
  %3401 = load i64, i64* %PC.i704
  %3402 = add i64 %3401, 3
  store i64 %3402, i64* %PC.i704
  %3403 = inttoptr i64 %3400 to i32*
  %3404 = load i32, i32* %3403
  %3405 = zext i32 %3404 to i64
  store i64 %3405, i64* %RAX.i705, align 8
  store %struct.Memory* %loadMem_43e258, %struct.Memory** %MEMORY
  %loadMem_43e25b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3407 = getelementptr inbounds %struct.GPR, %struct.GPR* %3406, i32 0, i32 33
  %3408 = getelementptr inbounds %struct.Reg, %struct.Reg* %3407, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %3408 to i64*
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3410 = getelementptr inbounds %struct.GPR, %struct.GPR* %3409, i32 0, i32 1
  %3411 = getelementptr inbounds %struct.Reg, %struct.Reg* %3410, i32 0, i32 0
  %EAX.i702 = bitcast %union.anon* %3411 to i32*
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3413 = getelementptr inbounds %struct.GPR, %struct.GPR* %3412, i32 0, i32 15
  %3414 = getelementptr inbounds %struct.Reg, %struct.Reg* %3413, i32 0, i32 0
  %RBP.i703 = bitcast %union.anon* %3414 to i64*
  %3415 = load i32, i32* %EAX.i702
  %3416 = zext i32 %3415 to i64
  %3417 = load i64, i64* %RBP.i703
  %3418 = sub i64 %3417, 56
  %3419 = load i64, i64* %PC.i701
  %3420 = add i64 %3419, 3
  store i64 %3420, i64* %PC.i701
  %3421 = inttoptr i64 %3418 to i32*
  %3422 = load i32, i32* %3421
  %3423 = sub i32 %3415, %3422
  %3424 = icmp ult i32 %3415, %3422
  %3425 = zext i1 %3424 to i8
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3425, i8* %3426, align 1
  %3427 = and i32 %3423, 255
  %3428 = call i32 @llvm.ctpop.i32(i32 %3427)
  %3429 = trunc i32 %3428 to i8
  %3430 = and i8 %3429, 1
  %3431 = xor i8 %3430, 1
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3431, i8* %3432, align 1
  %3433 = xor i32 %3422, %3415
  %3434 = xor i32 %3433, %3423
  %3435 = lshr i32 %3434, 4
  %3436 = trunc i32 %3435 to i8
  %3437 = and i8 %3436, 1
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3437, i8* %3438, align 1
  %3439 = icmp eq i32 %3423, 0
  %3440 = zext i1 %3439 to i8
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3440, i8* %3441, align 1
  %3442 = lshr i32 %3423, 31
  %3443 = trunc i32 %3442 to i8
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3443, i8* %3444, align 1
  %3445 = lshr i32 %3415, 31
  %3446 = lshr i32 %3422, 31
  %3447 = xor i32 %3446, %3445
  %3448 = xor i32 %3442, %3445
  %3449 = add i32 %3448, %3447
  %3450 = icmp eq i32 %3449, 2
  %3451 = zext i1 %3450 to i8
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3451, i8* %3452, align 1
  store %struct.Memory* %loadMem_43e25b, %struct.Memory** %MEMORY
  %loadMem_43e25e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3454 = getelementptr inbounds %struct.GPR, %struct.GPR* %3453, i32 0, i32 33
  %3455 = getelementptr inbounds %struct.Reg, %struct.Reg* %3454, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %3455 to i64*
  %3456 = load i64, i64* %PC.i700
  %3457 = add i64 %3456, 283
  %3458 = load i64, i64* %PC.i700
  %3459 = add i64 %3458, 6
  %3460 = load i64, i64* %PC.i700
  %3461 = add i64 %3460, 6
  store i64 %3461, i64* %PC.i700
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3463 = load i8, i8* %3462, align 1
  %3464 = icmp ne i8 %3463, 0
  %3465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3466 = load i8, i8* %3465, align 1
  %3467 = icmp ne i8 %3466, 0
  %3468 = xor i1 %3464, %3467
  %3469 = xor i1 %3468, true
  %3470 = zext i1 %3469 to i8
  store i8 %3470, i8* %BRANCH_TAKEN, align 1
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3472 = select i1 %3468, i64 %3459, i64 %3457
  store i64 %3472, i64* %3471, align 8
  store %struct.Memory* %loadMem_43e25e, %struct.Memory** %MEMORY
  %loadBr_43e25e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e25e = icmp eq i8 %loadBr_43e25e, 1
  br i1 %cmpBr_43e25e, label %block_.L_43e379, label %block_43e264

block_43e264:                                     ; preds = %block_.L_43e258
  %loadMem_43e264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3474 = getelementptr inbounds %struct.GPR, %struct.GPR* %3473, i32 0, i32 33
  %3475 = getelementptr inbounds %struct.Reg, %struct.Reg* %3474, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %3475 to i64*
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3477 = getelementptr inbounds %struct.GPR, %struct.GPR* %3476, i32 0, i32 1
  %3478 = getelementptr inbounds %struct.Reg, %struct.Reg* %3477, i32 0, i32 0
  %RAX.i698 = bitcast %union.anon* %3478 to i64*
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3480 = getelementptr inbounds %struct.GPR, %struct.GPR* %3479, i32 0, i32 15
  %3481 = getelementptr inbounds %struct.Reg, %struct.Reg* %3480, i32 0, i32 0
  %RBP.i699 = bitcast %union.anon* %3481 to i64*
  %3482 = load i64, i64* %RBP.i699
  %3483 = sub i64 %3482, 20
  %3484 = load i64, i64* %PC.i697
  %3485 = add i64 %3484, 3
  store i64 %3485, i64* %PC.i697
  %3486 = inttoptr i64 %3483 to i32*
  %3487 = load i32, i32* %3486
  %3488 = zext i32 %3487 to i64
  store i64 %3488, i64* %RAX.i698, align 8
  store %struct.Memory* %loadMem_43e264, %struct.Memory** %MEMORY
  %loadMem_43e267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3490 = getelementptr inbounds %struct.GPR, %struct.GPR* %3489, i32 0, i32 33
  %3491 = getelementptr inbounds %struct.Reg, %struct.Reg* %3490, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %3491 to i64*
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 1
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %EAX.i695 = bitcast %union.anon* %3494 to i32*
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 15
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %3497 to i64*
  %3498 = load i64, i64* %RBP.i696
  %3499 = sub i64 %3498, 44
  %3500 = load i32, i32* %EAX.i695
  %3501 = zext i32 %3500 to i64
  %3502 = load i64, i64* %PC.i694
  %3503 = add i64 %3502, 3
  store i64 %3503, i64* %PC.i694
  %3504 = inttoptr i64 %3499 to i32*
  store i32 %3500, i32* %3504
  store %struct.Memory* %loadMem_43e267, %struct.Memory** %MEMORY
  br label %block_.L_43e26a

block_.L_43e26a:                                  ; preds = %routine_sarl__cl___edx.exit603, %block_43e264
  %loadMem_43e26a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 33
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %3507 to i64*
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 1
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %RAX.i692 = bitcast %union.anon* %3510 to i64*
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3512 = getelementptr inbounds %struct.GPR, %struct.GPR* %3511, i32 0, i32 15
  %3513 = getelementptr inbounds %struct.Reg, %struct.Reg* %3512, i32 0, i32 0
  %RBP.i693 = bitcast %union.anon* %3513 to i64*
  %3514 = load i64, i64* %RBP.i693
  %3515 = sub i64 %3514, 44
  %3516 = load i64, i64* %PC.i691
  %3517 = add i64 %3516, 3
  store i64 %3517, i64* %PC.i691
  %3518 = inttoptr i64 %3515 to i32*
  %3519 = load i32, i32* %3518
  %3520 = zext i32 %3519 to i64
  store i64 %3520, i64* %RAX.i692, align 8
  store %struct.Memory* %loadMem_43e26a, %struct.Memory** %MEMORY
  %loadMem_43e26d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3522 = getelementptr inbounds %struct.GPR, %struct.GPR* %3521, i32 0, i32 33
  %3523 = getelementptr inbounds %struct.Reg, %struct.Reg* %3522, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %3523 to i64*
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3525 = getelementptr inbounds %struct.GPR, %struct.GPR* %3524, i32 0, i32 1
  %3526 = getelementptr inbounds %struct.Reg, %struct.Reg* %3525, i32 0, i32 0
  %EAX.i689 = bitcast %union.anon* %3526 to i32*
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3528 = getelementptr inbounds %struct.GPR, %struct.GPR* %3527, i32 0, i32 15
  %3529 = getelementptr inbounds %struct.Reg, %struct.Reg* %3528, i32 0, i32 0
  %RBP.i690 = bitcast %union.anon* %3529 to i64*
  %3530 = load i32, i32* %EAX.i689
  %3531 = zext i32 %3530 to i64
  %3532 = load i64, i64* %RBP.i690
  %3533 = sub i64 %3532, 52
  %3534 = load i64, i64* %PC.i688
  %3535 = add i64 %3534, 3
  store i64 %3535, i64* %PC.i688
  %3536 = inttoptr i64 %3533 to i32*
  %3537 = load i32, i32* %3536
  %3538 = sub i32 %3530, %3537
  %3539 = icmp ult i32 %3530, %3537
  %3540 = zext i1 %3539 to i8
  %3541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3540, i8* %3541, align 1
  %3542 = and i32 %3538, 255
  %3543 = call i32 @llvm.ctpop.i32(i32 %3542)
  %3544 = trunc i32 %3543 to i8
  %3545 = and i8 %3544, 1
  %3546 = xor i8 %3545, 1
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3546, i8* %3547, align 1
  %3548 = xor i32 %3537, %3530
  %3549 = xor i32 %3548, %3538
  %3550 = lshr i32 %3549, 4
  %3551 = trunc i32 %3550 to i8
  %3552 = and i8 %3551, 1
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3552, i8* %3553, align 1
  %3554 = icmp eq i32 %3538, 0
  %3555 = zext i1 %3554 to i8
  %3556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3555, i8* %3556, align 1
  %3557 = lshr i32 %3538, 31
  %3558 = trunc i32 %3557 to i8
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3558, i8* %3559, align 1
  %3560 = lshr i32 %3530, 31
  %3561 = lshr i32 %3537, 31
  %3562 = xor i32 %3561, %3560
  %3563 = xor i32 %3557, %3560
  %3564 = add i32 %3563, %3562
  %3565 = icmp eq i32 %3564, 2
  %3566 = zext i1 %3565 to i8
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3566, i8* %3567, align 1
  store %struct.Memory* %loadMem_43e26d, %struct.Memory** %MEMORY
  %loadMem_43e270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3569 = getelementptr inbounds %struct.GPR, %struct.GPR* %3568, i32 0, i32 33
  %3570 = getelementptr inbounds %struct.Reg, %struct.Reg* %3569, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %3570 to i64*
  %3571 = load i64, i64* %PC.i687
  %3572 = add i64 %3571, 246
  %3573 = load i64, i64* %PC.i687
  %3574 = add i64 %3573, 6
  %3575 = load i64, i64* %PC.i687
  %3576 = add i64 %3575, 6
  store i64 %3576, i64* %PC.i687
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3578 = load i8, i8* %3577, align 1
  %3579 = icmp ne i8 %3578, 0
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3581 = load i8, i8* %3580, align 1
  %3582 = icmp ne i8 %3581, 0
  %3583 = xor i1 %3579, %3582
  %3584 = xor i1 %3583, true
  %3585 = zext i1 %3584 to i8
  store i8 %3585, i8* %BRANCH_TAKEN, align 1
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3587 = select i1 %3583, i64 %3574, i64 %3572
  store i64 %3587, i64* %3586, align 8
  store %struct.Memory* %loadMem_43e270, %struct.Memory** %MEMORY
  %loadBr_43e270 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e270 = icmp eq i8 %loadBr_43e270, 1
  br i1 %cmpBr_43e270, label %block_.L_43e366, label %block_43e276

block_43e276:                                     ; preds = %block_.L_43e26a
  %loadMem_43e276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3589 = getelementptr inbounds %struct.GPR, %struct.GPR* %3588, i32 0, i32 33
  %3590 = getelementptr inbounds %struct.Reg, %struct.Reg* %3589, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %3590 to i64*
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3592 = getelementptr inbounds %struct.GPR, %struct.GPR* %3591, i32 0, i32 1
  %3593 = getelementptr inbounds %struct.Reg, %struct.Reg* %3592, i32 0, i32 0
  %RAX.i686 = bitcast %union.anon* %3593 to i64*
  %3594 = load i64, i64* %PC.i685
  %3595 = add i64 %3594, 8
  store i64 %3595, i64* %PC.i685
  %3596 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %3596, i64* %RAX.i686, align 8
  store %struct.Memory* %loadMem_43e276, %struct.Memory** %MEMORY
  %loadMem_43e27e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 33
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %3599 to i64*
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3601 = getelementptr inbounds %struct.GPR, %struct.GPR* %3600, i32 0, i32 1
  %3602 = getelementptr inbounds %struct.Reg, %struct.Reg* %3601, i32 0, i32 0
  %RAX.i684 = bitcast %union.anon* %3602 to i64*
  %3603 = load i64, i64* %RAX.i684
  %3604 = load i64, i64* %PC.i683
  %3605 = add i64 %3604, 3
  store i64 %3605, i64* %PC.i683
  %3606 = inttoptr i64 %3603 to i64*
  %3607 = load i64, i64* %3606
  store i64 %3607, i64* %RAX.i684, align 8
  store %struct.Memory* %loadMem_43e27e, %struct.Memory** %MEMORY
  %loadMem_43e281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3609 = getelementptr inbounds %struct.GPR, %struct.GPR* %3608, i32 0, i32 33
  %3610 = getelementptr inbounds %struct.Reg, %struct.Reg* %3609, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %3610 to i64*
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3612 = getelementptr inbounds %struct.GPR, %struct.GPR* %3611, i32 0, i32 5
  %3613 = getelementptr inbounds %struct.Reg, %struct.Reg* %3612, i32 0, i32 0
  %RCX.i681 = bitcast %union.anon* %3613 to i64*
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3615 = getelementptr inbounds %struct.GPR, %struct.GPR* %3614, i32 0, i32 15
  %3616 = getelementptr inbounds %struct.Reg, %struct.Reg* %3615, i32 0, i32 0
  %RBP.i682 = bitcast %union.anon* %3616 to i64*
  %3617 = load i64, i64* %RBP.i682
  %3618 = sub i64 %3617, 38
  %3619 = load i64, i64* %PC.i680
  %3620 = add i64 %3619, 5
  store i64 %3620, i64* %PC.i680
  %3621 = inttoptr i64 %3618 to i16*
  %3622 = load i16, i16* %3621
  %3623 = sext i16 %3622 to i64
  store i64 %3623, i64* %RCX.i681, align 8
  store %struct.Memory* %loadMem_43e281, %struct.Memory** %MEMORY
  %loadMem_43e286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3625 = getelementptr inbounds %struct.GPR, %struct.GPR* %3624, i32 0, i32 33
  %3626 = getelementptr inbounds %struct.Reg, %struct.Reg* %3625, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %3626 to i64*
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3628 = getelementptr inbounds %struct.GPR, %struct.GPR* %3627, i32 0, i32 1
  %3629 = getelementptr inbounds %struct.Reg, %struct.Reg* %3628, i32 0, i32 0
  %RAX.i678 = bitcast %union.anon* %3629 to i64*
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3631 = getelementptr inbounds %struct.GPR, %struct.GPR* %3630, i32 0, i32 5
  %3632 = getelementptr inbounds %struct.Reg, %struct.Reg* %3631, i32 0, i32 0
  %RCX.i679 = bitcast %union.anon* %3632 to i64*
  %3633 = load i64, i64* %RAX.i678
  %3634 = load i64, i64* %RCX.i679
  %3635 = mul i64 %3634, 8
  %3636 = add i64 %3635, %3633
  %3637 = load i64, i64* %PC.i677
  %3638 = add i64 %3637, 4
  store i64 %3638, i64* %PC.i677
  %3639 = inttoptr i64 %3636 to i64*
  %3640 = load i64, i64* %3639
  store i64 %3640, i64* %RAX.i678, align 8
  store %struct.Memory* %loadMem_43e286, %struct.Memory** %MEMORY
  %loadMem_43e28a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3642 = getelementptr inbounds %struct.GPR, %struct.GPR* %3641, i32 0, i32 33
  %3643 = getelementptr inbounds %struct.Reg, %struct.Reg* %3642, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %3643 to i64*
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3645 = getelementptr inbounds %struct.GPR, %struct.GPR* %3644, i32 0, i32 5
  %3646 = getelementptr inbounds %struct.Reg, %struct.Reg* %3645, i32 0, i32 0
  %RCX.i675 = bitcast %union.anon* %3646 to i64*
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3648 = getelementptr inbounds %struct.GPR, %struct.GPR* %3647, i32 0, i32 15
  %3649 = getelementptr inbounds %struct.Reg, %struct.Reg* %3648, i32 0, i32 0
  %RBP.i676 = bitcast %union.anon* %3649 to i64*
  %3650 = load i64, i64* %RBP.i676
  %3651 = sub i64 %3650, 40
  %3652 = load i64, i64* %PC.i674
  %3653 = add i64 %3652, 5
  store i64 %3653, i64* %PC.i674
  %3654 = inttoptr i64 %3651 to i16*
  %3655 = load i16, i16* %3654
  %3656 = sext i16 %3655 to i64
  store i64 %3656, i64* %RCX.i675, align 8
  store %struct.Memory* %loadMem_43e28a, %struct.Memory** %MEMORY
  %loadMem_43e28f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3658 = getelementptr inbounds %struct.GPR, %struct.GPR* %3657, i32 0, i32 33
  %3659 = getelementptr inbounds %struct.Reg, %struct.Reg* %3658, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %3659 to i64*
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3661 = getelementptr inbounds %struct.GPR, %struct.GPR* %3660, i32 0, i32 1
  %3662 = getelementptr inbounds %struct.Reg, %struct.Reg* %3661, i32 0, i32 0
  %RAX.i672 = bitcast %union.anon* %3662 to i64*
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3664 = getelementptr inbounds %struct.GPR, %struct.GPR* %3663, i32 0, i32 5
  %3665 = getelementptr inbounds %struct.Reg, %struct.Reg* %3664, i32 0, i32 0
  %RCX.i673 = bitcast %union.anon* %3665 to i64*
  %3666 = load i64, i64* %RAX.i672
  %3667 = load i64, i64* %RCX.i673
  %3668 = mul i64 %3667, 8
  %3669 = add i64 %3668, %3666
  %3670 = load i64, i64* %PC.i671
  %3671 = add i64 %3670, 4
  store i64 %3671, i64* %PC.i671
  %3672 = inttoptr i64 %3669 to i64*
  %3673 = load i64, i64* %3672
  store i64 %3673, i64* %RAX.i672, align 8
  store %struct.Memory* %loadMem_43e28f, %struct.Memory** %MEMORY
  %loadMem_43e293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3675 = getelementptr inbounds %struct.GPR, %struct.GPR* %3674, i32 0, i32 33
  %3676 = getelementptr inbounds %struct.Reg, %struct.Reg* %3675, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %3676 to i64*
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3678 = getelementptr inbounds %struct.GPR, %struct.GPR* %3677, i32 0, i32 1
  %3679 = getelementptr inbounds %struct.Reg, %struct.Reg* %3678, i32 0, i32 0
  %RAX.i669 = bitcast %union.anon* %3679 to i64*
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3681 = getelementptr inbounds %struct.GPR, %struct.GPR* %3680, i32 0, i32 7
  %3682 = getelementptr inbounds %struct.Reg, %struct.Reg* %3681, i32 0, i32 0
  %RDX.i670 = bitcast %union.anon* %3682 to i64*
  %3683 = load i64, i64* %RAX.i669
  %3684 = load i64, i64* %PC.i668
  %3685 = add i64 %3684, 2
  store i64 %3685, i64* %PC.i668
  %3686 = inttoptr i64 %3683 to i32*
  %3687 = load i32, i32* %3686
  %3688 = zext i32 %3687 to i64
  store i64 %3688, i64* %RDX.i670, align 8
  store %struct.Memory* %loadMem_43e293, %struct.Memory** %MEMORY
  %loadMem_43e295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3690 = getelementptr inbounds %struct.GPR, %struct.GPR* %3689, i32 0, i32 33
  %3691 = getelementptr inbounds %struct.Reg, %struct.Reg* %3690, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %3691 to i64*
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3693 = getelementptr inbounds %struct.GPR, %struct.GPR* %3692, i32 0, i32 1
  %3694 = getelementptr inbounds %struct.Reg, %struct.Reg* %3693, i32 0, i32 0
  %RAX.i666 = bitcast %union.anon* %3694 to i64*
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3696 = getelementptr inbounds %struct.GPR, %struct.GPR* %3695, i32 0, i32 15
  %3697 = getelementptr inbounds %struct.Reg, %struct.Reg* %3696, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %3697 to i64*
  %3698 = load i64, i64* %RBP.i667
  %3699 = sub i64 %3698, 80
  %3700 = load i64, i64* %PC.i665
  %3701 = add i64 %3700, 4
  store i64 %3701, i64* %PC.i665
  %3702 = inttoptr i64 %3699 to i64*
  %3703 = load i64, i64* %3702
  store i64 %3703, i64* %RAX.i666, align 8
  store %struct.Memory* %loadMem_43e295, %struct.Memory** %MEMORY
  %loadMem_43e299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3705 = getelementptr inbounds %struct.GPR, %struct.GPR* %3704, i32 0, i32 33
  %3706 = getelementptr inbounds %struct.Reg, %struct.Reg* %3705, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %3706 to i64*
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 1
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %RAX.i663 = bitcast %union.anon* %3709 to i64*
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3711 = getelementptr inbounds %struct.GPR, %struct.GPR* %3710, i32 0, i32 5
  %3712 = getelementptr inbounds %struct.Reg, %struct.Reg* %3711, i32 0, i32 0
  %RCX.i664 = bitcast %union.anon* %3712 to i64*
  %3713 = load i64, i64* %RAX.i663
  %3714 = load i64, i64* %PC.i662
  %3715 = add i64 %3714, 3
  store i64 %3715, i64* %PC.i662
  store i64 %3713, i64* %RCX.i664, align 8
  store %struct.Memory* %loadMem_43e299, %struct.Memory** %MEMORY
  %loadMem_43e29c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3717 = getelementptr inbounds %struct.GPR, %struct.GPR* %3716, i32 0, i32 33
  %3718 = getelementptr inbounds %struct.Reg, %struct.Reg* %3717, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %3718 to i64*
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3720 = getelementptr inbounds %struct.GPR, %struct.GPR* %3719, i32 0, i32 5
  %3721 = getelementptr inbounds %struct.Reg, %struct.Reg* %3720, i32 0, i32 0
  %RCX.i661 = bitcast %union.anon* %3721 to i64*
  %3722 = load i64, i64* %RCX.i661
  %3723 = load i64, i64* %PC.i660
  %3724 = add i64 %3723, 4
  store i64 %3724, i64* %PC.i660
  %3725 = add i64 4, %3722
  store i64 %3725, i64* %RCX.i661, align 8
  %3726 = icmp ult i64 %3725, %3722
  %3727 = icmp ult i64 %3725, 4
  %3728 = or i1 %3726, %3727
  %3729 = zext i1 %3728 to i8
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3729, i8* %3730, align 1
  %3731 = trunc i64 %3725 to i32
  %3732 = and i32 %3731, 255
  %3733 = call i32 @llvm.ctpop.i32(i32 %3732)
  %3734 = trunc i32 %3733 to i8
  %3735 = and i8 %3734, 1
  %3736 = xor i8 %3735, 1
  %3737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3736, i8* %3737, align 1
  %3738 = xor i64 4, %3722
  %3739 = xor i64 %3738, %3725
  %3740 = lshr i64 %3739, 4
  %3741 = trunc i64 %3740 to i8
  %3742 = and i8 %3741, 1
  %3743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3742, i8* %3743, align 1
  %3744 = icmp eq i64 %3725, 0
  %3745 = zext i1 %3744 to i8
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3745, i8* %3746, align 1
  %3747 = lshr i64 %3725, 63
  %3748 = trunc i64 %3747 to i8
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3748, i8* %3749, align 1
  %3750 = lshr i64 %3722, 63
  %3751 = xor i64 %3747, %3750
  %3752 = add i64 %3751, %3747
  %3753 = icmp eq i64 %3752, 2
  %3754 = zext i1 %3753 to i8
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3754, i8* %3755, align 1
  store %struct.Memory* %loadMem_43e29c, %struct.Memory** %MEMORY
  %loadMem_43e2a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3757 = getelementptr inbounds %struct.GPR, %struct.GPR* %3756, i32 0, i32 33
  %3758 = getelementptr inbounds %struct.Reg, %struct.Reg* %3757, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %3758 to i64*
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3760 = getelementptr inbounds %struct.GPR, %struct.GPR* %3759, i32 0, i32 5
  %3761 = getelementptr inbounds %struct.Reg, %struct.Reg* %3760, i32 0, i32 0
  %RCX.i658 = bitcast %union.anon* %3761 to i64*
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3763 = getelementptr inbounds %struct.GPR, %struct.GPR* %3762, i32 0, i32 15
  %3764 = getelementptr inbounds %struct.Reg, %struct.Reg* %3763, i32 0, i32 0
  %RBP.i659 = bitcast %union.anon* %3764 to i64*
  %3765 = load i64, i64* %RBP.i659
  %3766 = sub i64 %3765, 80
  %3767 = load i64, i64* %RCX.i658
  %3768 = load i64, i64* %PC.i657
  %3769 = add i64 %3768, 4
  store i64 %3769, i64* %PC.i657
  %3770 = inttoptr i64 %3766 to i64*
  store i64 %3767, i64* %3770
  store %struct.Memory* %loadMem_43e2a0, %struct.Memory** %MEMORY
  %loadMem_43e2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3772 = getelementptr inbounds %struct.GPR, %struct.GPR* %3771, i32 0, i32 33
  %3773 = getelementptr inbounds %struct.Reg, %struct.Reg* %3772, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %3773 to i64*
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3775 = getelementptr inbounds %struct.GPR, %struct.GPR* %3774, i32 0, i32 1
  %3776 = getelementptr inbounds %struct.Reg, %struct.Reg* %3775, i32 0, i32 0
  %RAX.i655 = bitcast %union.anon* %3776 to i64*
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3778 = getelementptr inbounds %struct.GPR, %struct.GPR* %3777, i32 0, i32 7
  %3779 = getelementptr inbounds %struct.Reg, %struct.Reg* %3778, i32 0, i32 0
  %RDX.i656 = bitcast %union.anon* %3779 to i64*
  %3780 = load i64, i64* %RDX.i656
  %3781 = load i64, i64* %RAX.i655
  %3782 = load i64, i64* %PC.i654
  %3783 = add i64 %3782, 3
  store i64 %3783, i64* %PC.i654
  %3784 = inttoptr i64 %3781 to i32*
  %3785 = load i32, i32* %3784
  %3786 = shl i64 %3780, 32
  %3787 = ashr exact i64 %3786, 32
  %3788 = sext i32 %3785 to i64
  %3789 = mul i64 %3788, %3787
  %3790 = trunc i64 %3789 to i32
  %3791 = and i64 %3789, 4294967295
  store i64 %3791, i64* %RDX.i656, align 8
  %3792 = shl i64 %3789, 32
  %3793 = ashr exact i64 %3792, 32
  %3794 = icmp ne i64 %3793, %3789
  %3795 = zext i1 %3794 to i8
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3795, i8* %3796, align 1
  %3797 = and i32 %3790, 255
  %3798 = call i32 @llvm.ctpop.i32(i32 %3797)
  %3799 = trunc i32 %3798 to i8
  %3800 = and i8 %3799, 1
  %3801 = xor i8 %3800, 1
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3801, i8* %3802, align 1
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3803, align 1
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3804, align 1
  %3805 = lshr i32 %3790, 31
  %3806 = trunc i32 %3805 to i8
  %3807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3806, i8* %3807, align 1
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3795, i8* %3808, align 1
  store %struct.Memory* %loadMem_43e2a4, %struct.Memory** %MEMORY
  %loadMem_43e2a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3810 = getelementptr inbounds %struct.GPR, %struct.GPR* %3809, i32 0, i32 33
  %3811 = getelementptr inbounds %struct.Reg, %struct.Reg* %3810, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %3811 to i64*
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3813 = getelementptr inbounds %struct.GPR, %struct.GPR* %3812, i32 0, i32 1
  %3814 = getelementptr inbounds %struct.Reg, %struct.Reg* %3813, i32 0, i32 0
  %RAX.i653 = bitcast %union.anon* %3814 to i64*
  %3815 = load i64, i64* %PC.i652
  %3816 = add i64 %3815, 8
  store i64 %3816, i64* %PC.i652
  %3817 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %3817, i64* %RAX.i653, align 8
  store %struct.Memory* %loadMem_43e2a7, %struct.Memory** %MEMORY
  %loadMem_43e2af = load %struct.Memory*, %struct.Memory** %MEMORY
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3819 = getelementptr inbounds %struct.GPR, %struct.GPR* %3818, i32 0, i32 33
  %3820 = getelementptr inbounds %struct.Reg, %struct.Reg* %3819, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %3820 to i64*
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3822 = getelementptr inbounds %struct.GPR, %struct.GPR* %3821, i32 0, i32 1
  %3823 = getelementptr inbounds %struct.Reg, %struct.Reg* %3822, i32 0, i32 0
  %RAX.i651 = bitcast %union.anon* %3823 to i64*
  %3824 = load i64, i64* %RAX.i651
  %3825 = add i64 %3824, 8
  %3826 = load i64, i64* %PC.i650
  %3827 = add i64 %3826, 4
  store i64 %3827, i64* %PC.i650
  %3828 = inttoptr i64 %3825 to i64*
  %3829 = load i64, i64* %3828
  store i64 %3829, i64* %RAX.i651, align 8
  store %struct.Memory* %loadMem_43e2af, %struct.Memory** %MEMORY
  %loadMem_43e2b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 33
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %3832 to i64*
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3834 = getelementptr inbounds %struct.GPR, %struct.GPR* %3833, i32 0, i32 5
  %3835 = getelementptr inbounds %struct.Reg, %struct.Reg* %3834, i32 0, i32 0
  %RCX.i648 = bitcast %union.anon* %3835 to i64*
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3837 = getelementptr inbounds %struct.GPR, %struct.GPR* %3836, i32 0, i32 15
  %3838 = getelementptr inbounds %struct.Reg, %struct.Reg* %3837, i32 0, i32 0
  %RBP.i649 = bitcast %union.anon* %3838 to i64*
  %3839 = load i64, i64* %RBP.i649
  %3840 = sub i64 %3839, 38
  %3841 = load i64, i64* %PC.i647
  %3842 = add i64 %3841, 5
  store i64 %3842, i64* %PC.i647
  %3843 = inttoptr i64 %3840 to i16*
  %3844 = load i16, i16* %3843
  %3845 = sext i16 %3844 to i64
  store i64 %3845, i64* %RCX.i648, align 8
  store %struct.Memory* %loadMem_43e2b3, %struct.Memory** %MEMORY
  %loadMem_43e2b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3847 = getelementptr inbounds %struct.GPR, %struct.GPR* %3846, i32 0, i32 33
  %3848 = getelementptr inbounds %struct.Reg, %struct.Reg* %3847, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %3848 to i64*
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3850 = getelementptr inbounds %struct.GPR, %struct.GPR* %3849, i32 0, i32 1
  %3851 = getelementptr inbounds %struct.Reg, %struct.Reg* %3850, i32 0, i32 0
  %RAX.i645 = bitcast %union.anon* %3851 to i64*
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3853 = getelementptr inbounds %struct.GPR, %struct.GPR* %3852, i32 0, i32 5
  %3854 = getelementptr inbounds %struct.Reg, %struct.Reg* %3853, i32 0, i32 0
  %RCX.i646 = bitcast %union.anon* %3854 to i64*
  %3855 = load i64, i64* %RAX.i645
  %3856 = load i64, i64* %RCX.i646
  %3857 = mul i64 %3856, 8
  %3858 = add i64 %3857, %3855
  %3859 = load i64, i64* %PC.i644
  %3860 = add i64 %3859, 4
  store i64 %3860, i64* %PC.i644
  %3861 = inttoptr i64 %3858 to i64*
  %3862 = load i64, i64* %3861
  store i64 %3862, i64* %RAX.i645, align 8
  store %struct.Memory* %loadMem_43e2b8, %struct.Memory** %MEMORY
  %loadMem_43e2bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3864 = getelementptr inbounds %struct.GPR, %struct.GPR* %3863, i32 0, i32 33
  %3865 = getelementptr inbounds %struct.Reg, %struct.Reg* %3864, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %3865 to i64*
  %3866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3867 = getelementptr inbounds %struct.GPR, %struct.GPR* %3866, i32 0, i32 5
  %3868 = getelementptr inbounds %struct.Reg, %struct.Reg* %3867, i32 0, i32 0
  %RCX.i642 = bitcast %union.anon* %3868 to i64*
  %3869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3870 = getelementptr inbounds %struct.GPR, %struct.GPR* %3869, i32 0, i32 15
  %3871 = getelementptr inbounds %struct.Reg, %struct.Reg* %3870, i32 0, i32 0
  %RBP.i643 = bitcast %union.anon* %3871 to i64*
  %3872 = load i64, i64* %RBP.i643
  %3873 = sub i64 %3872, 40
  %3874 = load i64, i64* %PC.i641
  %3875 = add i64 %3874, 5
  store i64 %3875, i64* %PC.i641
  %3876 = inttoptr i64 %3873 to i16*
  %3877 = load i16, i16* %3876
  %3878 = sext i16 %3877 to i64
  store i64 %3878, i64* %RCX.i642, align 8
  store %struct.Memory* %loadMem_43e2bc, %struct.Memory** %MEMORY
  %loadMem_43e2c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3880 = getelementptr inbounds %struct.GPR, %struct.GPR* %3879, i32 0, i32 33
  %3881 = getelementptr inbounds %struct.Reg, %struct.Reg* %3880, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %3881 to i64*
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3883 = getelementptr inbounds %struct.GPR, %struct.GPR* %3882, i32 0, i32 1
  %3884 = getelementptr inbounds %struct.Reg, %struct.Reg* %3883, i32 0, i32 0
  %RAX.i639 = bitcast %union.anon* %3884 to i64*
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3886 = getelementptr inbounds %struct.GPR, %struct.GPR* %3885, i32 0, i32 5
  %3887 = getelementptr inbounds %struct.Reg, %struct.Reg* %3886, i32 0, i32 0
  %RCX.i640 = bitcast %union.anon* %3887 to i64*
  %3888 = load i64, i64* %RAX.i639
  %3889 = load i64, i64* %RCX.i640
  %3890 = mul i64 %3889, 8
  %3891 = add i64 %3890, %3888
  %3892 = load i64, i64* %PC.i638
  %3893 = add i64 %3892, 4
  store i64 %3893, i64* %PC.i638
  %3894 = inttoptr i64 %3891 to i64*
  %3895 = load i64, i64* %3894
  store i64 %3895, i64* %RAX.i639, align 8
  store %struct.Memory* %loadMem_43e2c1, %struct.Memory** %MEMORY
  %loadMem_43e2c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3897 = getelementptr inbounds %struct.GPR, %struct.GPR* %3896, i32 0, i32 33
  %3898 = getelementptr inbounds %struct.Reg, %struct.Reg* %3897, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %3898 to i64*
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3900 = getelementptr inbounds %struct.GPR, %struct.GPR* %3899, i32 0, i32 1
  %3901 = getelementptr inbounds %struct.Reg, %struct.Reg* %3900, i32 0, i32 0
  %RAX.i636 = bitcast %union.anon* %3901 to i64*
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3903 = getelementptr inbounds %struct.GPR, %struct.GPR* %3902, i32 0, i32 9
  %3904 = getelementptr inbounds %struct.Reg, %struct.Reg* %3903, i32 0, i32 0
  %RSI.i637 = bitcast %union.anon* %3904 to i64*
  %3905 = load i64, i64* %RAX.i636
  %3906 = load i64, i64* %PC.i635
  %3907 = add i64 %3906, 2
  store i64 %3907, i64* %PC.i635
  %3908 = inttoptr i64 %3905 to i32*
  %3909 = load i32, i32* %3908
  %3910 = zext i32 %3909 to i64
  store i64 %3910, i64* %RSI.i637, align 8
  store %struct.Memory* %loadMem_43e2c5, %struct.Memory** %MEMORY
  %loadMem_43e2c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3912 = getelementptr inbounds %struct.GPR, %struct.GPR* %3911, i32 0, i32 33
  %3913 = getelementptr inbounds %struct.Reg, %struct.Reg* %3912, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %3913 to i64*
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3915 = getelementptr inbounds %struct.GPR, %struct.GPR* %3914, i32 0, i32 1
  %3916 = getelementptr inbounds %struct.Reg, %struct.Reg* %3915, i32 0, i32 0
  %RAX.i633 = bitcast %union.anon* %3916 to i64*
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3918 = getelementptr inbounds %struct.GPR, %struct.GPR* %3917, i32 0, i32 15
  %3919 = getelementptr inbounds %struct.Reg, %struct.Reg* %3918, i32 0, i32 0
  %RBP.i634 = bitcast %union.anon* %3919 to i64*
  %3920 = load i64, i64* %RBP.i634
  %3921 = sub i64 %3920, 88
  %3922 = load i64, i64* %PC.i632
  %3923 = add i64 %3922, 4
  store i64 %3923, i64* %PC.i632
  %3924 = inttoptr i64 %3921 to i64*
  %3925 = load i64, i64* %3924
  store i64 %3925, i64* %RAX.i633, align 8
  store %struct.Memory* %loadMem_43e2c7, %struct.Memory** %MEMORY
  %loadMem_43e2cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3927 = getelementptr inbounds %struct.GPR, %struct.GPR* %3926, i32 0, i32 33
  %3928 = getelementptr inbounds %struct.Reg, %struct.Reg* %3927, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %3928 to i64*
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3930 = getelementptr inbounds %struct.GPR, %struct.GPR* %3929, i32 0, i32 1
  %3931 = getelementptr inbounds %struct.Reg, %struct.Reg* %3930, i32 0, i32 0
  %RAX.i630 = bitcast %union.anon* %3931 to i64*
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3933 = getelementptr inbounds %struct.GPR, %struct.GPR* %3932, i32 0, i32 5
  %3934 = getelementptr inbounds %struct.Reg, %struct.Reg* %3933, i32 0, i32 0
  %RCX.i631 = bitcast %union.anon* %3934 to i64*
  %3935 = load i64, i64* %RAX.i630
  %3936 = load i64, i64* %PC.i629
  %3937 = add i64 %3936, 3
  store i64 %3937, i64* %PC.i629
  store i64 %3935, i64* %RCX.i631, align 8
  store %struct.Memory* %loadMem_43e2cb, %struct.Memory** %MEMORY
  %loadMem_43e2ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3939 = getelementptr inbounds %struct.GPR, %struct.GPR* %3938, i32 0, i32 33
  %3940 = getelementptr inbounds %struct.Reg, %struct.Reg* %3939, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %3940 to i64*
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3942 = getelementptr inbounds %struct.GPR, %struct.GPR* %3941, i32 0, i32 5
  %3943 = getelementptr inbounds %struct.Reg, %struct.Reg* %3942, i32 0, i32 0
  %RCX.i628 = bitcast %union.anon* %3943 to i64*
  %3944 = load i64, i64* %RCX.i628
  %3945 = load i64, i64* %PC.i627
  %3946 = add i64 %3945, 4
  store i64 %3946, i64* %PC.i627
  %3947 = add i64 4, %3944
  store i64 %3947, i64* %RCX.i628, align 8
  %3948 = icmp ult i64 %3947, %3944
  %3949 = icmp ult i64 %3947, 4
  %3950 = or i1 %3948, %3949
  %3951 = zext i1 %3950 to i8
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3951, i8* %3952, align 1
  %3953 = trunc i64 %3947 to i32
  %3954 = and i32 %3953, 255
  %3955 = call i32 @llvm.ctpop.i32(i32 %3954)
  %3956 = trunc i32 %3955 to i8
  %3957 = and i8 %3956, 1
  %3958 = xor i8 %3957, 1
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3958, i8* %3959, align 1
  %3960 = xor i64 4, %3944
  %3961 = xor i64 %3960, %3947
  %3962 = lshr i64 %3961, 4
  %3963 = trunc i64 %3962 to i8
  %3964 = and i8 %3963, 1
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3964, i8* %3965, align 1
  %3966 = icmp eq i64 %3947, 0
  %3967 = zext i1 %3966 to i8
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3967, i8* %3968, align 1
  %3969 = lshr i64 %3947, 63
  %3970 = trunc i64 %3969 to i8
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3970, i8* %3971, align 1
  %3972 = lshr i64 %3944, 63
  %3973 = xor i64 %3969, %3972
  %3974 = add i64 %3973, %3969
  %3975 = icmp eq i64 %3974, 2
  %3976 = zext i1 %3975 to i8
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3976, i8* %3977, align 1
  store %struct.Memory* %loadMem_43e2ce, %struct.Memory** %MEMORY
  %loadMem_43e2d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3979 = getelementptr inbounds %struct.GPR, %struct.GPR* %3978, i32 0, i32 33
  %3980 = getelementptr inbounds %struct.Reg, %struct.Reg* %3979, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %3980 to i64*
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3982 = getelementptr inbounds %struct.GPR, %struct.GPR* %3981, i32 0, i32 5
  %3983 = getelementptr inbounds %struct.Reg, %struct.Reg* %3982, i32 0, i32 0
  %RCX.i625 = bitcast %union.anon* %3983 to i64*
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3985 = getelementptr inbounds %struct.GPR, %struct.GPR* %3984, i32 0, i32 15
  %3986 = getelementptr inbounds %struct.Reg, %struct.Reg* %3985, i32 0, i32 0
  %RBP.i626 = bitcast %union.anon* %3986 to i64*
  %3987 = load i64, i64* %RBP.i626
  %3988 = sub i64 %3987, 88
  %3989 = load i64, i64* %RCX.i625
  %3990 = load i64, i64* %PC.i624
  %3991 = add i64 %3990, 4
  store i64 %3991, i64* %PC.i624
  %3992 = inttoptr i64 %3988 to i64*
  store i64 %3989, i64* %3992
  store %struct.Memory* %loadMem_43e2d2, %struct.Memory** %MEMORY
  %loadMem_43e2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3994 = getelementptr inbounds %struct.GPR, %struct.GPR* %3993, i32 0, i32 33
  %3995 = getelementptr inbounds %struct.Reg, %struct.Reg* %3994, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %3995 to i64*
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3997 = getelementptr inbounds %struct.GPR, %struct.GPR* %3996, i32 0, i32 1
  %3998 = getelementptr inbounds %struct.Reg, %struct.Reg* %3997, i32 0, i32 0
  %RAX.i622 = bitcast %union.anon* %3998 to i64*
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 9
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %RSI.i623 = bitcast %union.anon* %4001 to i64*
  %4002 = load i64, i64* %RSI.i623
  %4003 = load i64, i64* %RAX.i622
  %4004 = load i64, i64* %PC.i621
  %4005 = add i64 %4004, 3
  store i64 %4005, i64* %PC.i621
  %4006 = inttoptr i64 %4003 to i32*
  %4007 = load i32, i32* %4006
  %4008 = shl i64 %4002, 32
  %4009 = ashr exact i64 %4008, 32
  %4010 = sext i32 %4007 to i64
  %4011 = mul i64 %4010, %4009
  %4012 = trunc i64 %4011 to i32
  %4013 = and i64 %4011, 4294967295
  store i64 %4013, i64* %RSI.i623, align 8
  %4014 = shl i64 %4011, 32
  %4015 = ashr exact i64 %4014, 32
  %4016 = icmp ne i64 %4015, %4011
  %4017 = zext i1 %4016 to i8
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4017, i8* %4018, align 1
  %4019 = and i32 %4012, 255
  %4020 = call i32 @llvm.ctpop.i32(i32 %4019)
  %4021 = trunc i32 %4020 to i8
  %4022 = and i8 %4021, 1
  %4023 = xor i8 %4022, 1
  %4024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4023, i8* %4024, align 1
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4025, align 1
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4026, align 1
  %4027 = lshr i32 %4012, 31
  %4028 = trunc i32 %4027 to i8
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4028, i8* %4029, align 1
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4017, i8* %4030, align 1
  store %struct.Memory* %loadMem_43e2d6, %struct.Memory** %MEMORY
  %loadMem_43e2d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4032 = getelementptr inbounds %struct.GPR, %struct.GPR* %4031, i32 0, i32 33
  %4033 = getelementptr inbounds %struct.Reg, %struct.Reg* %4032, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %4033 to i64*
  %4034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4035 = getelementptr inbounds %struct.GPR, %struct.GPR* %4034, i32 0, i32 9
  %4036 = getelementptr inbounds %struct.Reg, %struct.Reg* %4035, i32 0, i32 0
  %ESI.i619 = bitcast %union.anon* %4036 to i32*
  %4037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4038 = getelementptr inbounds %struct.GPR, %struct.GPR* %4037, i32 0, i32 7
  %4039 = getelementptr inbounds %struct.Reg, %struct.Reg* %4038, i32 0, i32 0
  %RDX.i620 = bitcast %union.anon* %4039 to i64*
  %4040 = load i64, i64* %RDX.i620
  %4041 = load i32, i32* %ESI.i619
  %4042 = zext i32 %4041 to i64
  %4043 = load i64, i64* %PC.i618
  %4044 = add i64 %4043, 2
  store i64 %4044, i64* %PC.i618
  %4045 = trunc i64 %4040 to i32
  %4046 = add i32 %4041, %4045
  %4047 = zext i32 %4046 to i64
  store i64 %4047, i64* %RDX.i620, align 8
  %4048 = icmp ult i32 %4046, %4045
  %4049 = icmp ult i32 %4046, %4041
  %4050 = or i1 %4048, %4049
  %4051 = zext i1 %4050 to i8
  %4052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4051, i8* %4052, align 1
  %4053 = and i32 %4046, 255
  %4054 = call i32 @llvm.ctpop.i32(i32 %4053)
  %4055 = trunc i32 %4054 to i8
  %4056 = and i8 %4055, 1
  %4057 = xor i8 %4056, 1
  %4058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4057, i8* %4058, align 1
  %4059 = xor i64 %4042, %4040
  %4060 = trunc i64 %4059 to i32
  %4061 = xor i32 %4060, %4046
  %4062 = lshr i32 %4061, 4
  %4063 = trunc i32 %4062 to i8
  %4064 = and i8 %4063, 1
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4064, i8* %4065, align 1
  %4066 = icmp eq i32 %4046, 0
  %4067 = zext i1 %4066 to i8
  %4068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4067, i8* %4068, align 1
  %4069 = lshr i32 %4046, 31
  %4070 = trunc i32 %4069 to i8
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4070, i8* %4071, align 1
  %4072 = lshr i32 %4045, 31
  %4073 = lshr i32 %4041, 31
  %4074 = xor i32 %4069, %4072
  %4075 = xor i32 %4069, %4073
  %4076 = add i32 %4074, %4075
  %4077 = icmp eq i32 %4076, 2
  %4078 = zext i1 %4077 to i8
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4078, i8* %4079, align 1
  store %struct.Memory* %loadMem_43e2d9, %struct.Memory** %MEMORY
  %loadMem_43e2db = load %struct.Memory*, %struct.Memory** %MEMORY
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4081 = getelementptr inbounds %struct.GPR, %struct.GPR* %4080, i32 0, i32 33
  %4082 = getelementptr inbounds %struct.Reg, %struct.Reg* %4081, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %4082 to i64*
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4084 = getelementptr inbounds %struct.GPR, %struct.GPR* %4083, i32 0, i32 9
  %4085 = getelementptr inbounds %struct.Reg, %struct.Reg* %4084, i32 0, i32 0
  %RSI.i617 = bitcast %union.anon* %4085 to i64*
  %4086 = load i64, i64* %PC.i616
  %4087 = add i64 %4086, 7
  store i64 %4087, i64* %PC.i616
  %4088 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %4089 = zext i32 %4088 to i64
  store i64 %4089, i64* %RSI.i617, align 8
  store %struct.Memory* %loadMem_43e2db, %struct.Memory** %MEMORY
  %loadMem_43e2e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4091 = getelementptr inbounds %struct.GPR, %struct.GPR* %4090, i32 0, i32 33
  %4092 = getelementptr inbounds %struct.Reg, %struct.Reg* %4091, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %4092 to i64*
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4094 = getelementptr inbounds %struct.GPR, %struct.GPR* %4093, i32 0, i32 9
  %4095 = getelementptr inbounds %struct.Reg, %struct.Reg* %4094, i32 0, i32 0
  %RSI.i615 = bitcast %union.anon* %4095 to i64*
  %4096 = load i64, i64* %RSI.i615
  %4097 = load i64, i64* %PC.i614
  %4098 = add i64 %4097, 2
  store i64 %4098, i64* %PC.i614
  %4099 = trunc i64 %4096 to i32
  %4100 = shl i32 %4099, 1
  %4101 = icmp slt i32 %4099, 0
  %4102 = icmp slt i32 %4100, 0
  %4103 = xor i1 %4101, %4102
  %4104 = zext i32 %4100 to i64
  store i64 %4104, i64* %RSI.i615, align 8
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4106 = zext i1 %4101 to i8
  store i8 %4106, i8* %4105, align 1
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4108 = and i32 %4100, 254
  %4109 = call i32 @llvm.ctpop.i32(i32 %4108)
  %4110 = trunc i32 %4109 to i8
  %4111 = and i8 %4110, 1
  %4112 = xor i8 %4111, 1
  store i8 %4112, i8* %4107, align 1
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4113, align 1
  %4114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4115 = icmp eq i32 %4100, 0
  %4116 = zext i1 %4115 to i8
  store i8 %4116, i8* %4114, align 1
  %4117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4118 = lshr i32 %4100, 31
  %4119 = trunc i32 %4118 to i8
  store i8 %4119, i8* %4117, align 1
  %4120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4121 = zext i1 %4103 to i8
  store i8 %4121, i8* %4120, align 1
  store %struct.Memory* %loadMem_43e2e2, %struct.Memory** %MEMORY
  %loadMem_43e2e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4123 = getelementptr inbounds %struct.GPR, %struct.GPR* %4122, i32 0, i32 33
  %4124 = getelementptr inbounds %struct.Reg, %struct.Reg* %4123, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %4124 to i64*
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4126 = getelementptr inbounds %struct.GPR, %struct.GPR* %4125, i32 0, i32 9
  %4127 = getelementptr inbounds %struct.Reg, %struct.Reg* %4126, i32 0, i32 0
  %ESI.i612 = bitcast %union.anon* %4127 to i32*
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 7
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %RDX.i613 = bitcast %union.anon* %4130 to i64*
  %4131 = load i64, i64* %RDX.i613
  %4132 = load i32, i32* %ESI.i612
  %4133 = zext i32 %4132 to i64
  %4134 = load i64, i64* %PC.i611
  %4135 = add i64 %4134, 2
  store i64 %4135, i64* %PC.i611
  %4136 = trunc i64 %4131 to i32
  %4137 = add i32 %4132, %4136
  %4138 = zext i32 %4137 to i64
  store i64 %4138, i64* %RDX.i613, align 8
  %4139 = icmp ult i32 %4137, %4136
  %4140 = icmp ult i32 %4137, %4132
  %4141 = or i1 %4139, %4140
  %4142 = zext i1 %4141 to i8
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4142, i8* %4143, align 1
  %4144 = and i32 %4137, 255
  %4145 = call i32 @llvm.ctpop.i32(i32 %4144)
  %4146 = trunc i32 %4145 to i8
  %4147 = and i8 %4146, 1
  %4148 = xor i8 %4147, 1
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4148, i8* %4149, align 1
  %4150 = xor i64 %4133, %4131
  %4151 = trunc i64 %4150 to i32
  %4152 = xor i32 %4151, %4137
  %4153 = lshr i32 %4152, 4
  %4154 = trunc i32 %4153 to i8
  %4155 = and i8 %4154, 1
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4155, i8* %4156, align 1
  %4157 = icmp eq i32 %4137, 0
  %4158 = zext i1 %4157 to i8
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4158, i8* %4159, align 1
  %4160 = lshr i32 %4137, 31
  %4161 = trunc i32 %4160 to i8
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4161, i8* %4162, align 1
  %4163 = lshr i32 %4136, 31
  %4164 = lshr i32 %4132, 31
  %4165 = xor i32 %4160, %4163
  %4166 = xor i32 %4160, %4164
  %4167 = add i32 %4165, %4166
  %4168 = icmp eq i32 %4167, 2
  %4169 = zext i1 %4168 to i8
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4169, i8* %4170, align 1
  store %struct.Memory* %loadMem_43e2e5, %struct.Memory** %MEMORY
  %loadMem_43e2e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4172 = getelementptr inbounds %struct.GPR, %struct.GPR* %4171, i32 0, i32 33
  %4173 = getelementptr inbounds %struct.Reg, %struct.Reg* %4172, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %4173 to i64*
  %4174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4175 = getelementptr inbounds %struct.GPR, %struct.GPR* %4174, i32 0, i32 9
  %4176 = getelementptr inbounds %struct.Reg, %struct.Reg* %4175, i32 0, i32 0
  %RSI.i610 = bitcast %union.anon* %4176 to i64*
  %4177 = load i64, i64* %PC.i609
  %4178 = add i64 %4177, 7
  store i64 %4178, i64* %PC.i609
  %4179 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %4180 = zext i32 %4179 to i64
  store i64 %4180, i64* %RSI.i610, align 8
  store %struct.Memory* %loadMem_43e2e7, %struct.Memory** %MEMORY
  %loadMem_43e2ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %4181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4182 = getelementptr inbounds %struct.GPR, %struct.GPR* %4181, i32 0, i32 33
  %4183 = getelementptr inbounds %struct.Reg, %struct.Reg* %4182, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %4183 to i64*
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4185 = getelementptr inbounds %struct.GPR, %struct.GPR* %4184, i32 0, i32 9
  %4186 = getelementptr inbounds %struct.Reg, %struct.Reg* %4185, i32 0, i32 0
  %RSI.i608 = bitcast %union.anon* %4186 to i64*
  %4187 = load i64, i64* %RSI.i608
  %4188 = load i64, i64* %PC.i607
  %4189 = add i64 %4188, 3
  store i64 %4189, i64* %PC.i607
  %4190 = trunc i64 %4187 to i32
  %4191 = add i32 1, %4190
  %4192 = zext i32 %4191 to i64
  store i64 %4192, i64* %RSI.i608, align 8
  %4193 = icmp ult i32 %4191, %4190
  %4194 = icmp ult i32 %4191, 1
  %4195 = or i1 %4193, %4194
  %4196 = zext i1 %4195 to i8
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4196, i8* %4197, align 1
  %4198 = and i32 %4191, 255
  %4199 = call i32 @llvm.ctpop.i32(i32 %4198)
  %4200 = trunc i32 %4199 to i8
  %4201 = and i8 %4200, 1
  %4202 = xor i8 %4201, 1
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4202, i8* %4203, align 1
  %4204 = xor i64 1, %4187
  %4205 = trunc i64 %4204 to i32
  %4206 = xor i32 %4205, %4191
  %4207 = lshr i32 %4206, 4
  %4208 = trunc i32 %4207 to i8
  %4209 = and i8 %4208, 1
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4209, i8* %4210, align 1
  %4211 = icmp eq i32 %4191, 0
  %4212 = zext i1 %4211 to i8
  %4213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4212, i8* %4213, align 1
  %4214 = lshr i32 %4191, 31
  %4215 = trunc i32 %4214 to i8
  %4216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4215, i8* %4216, align 1
  %4217 = lshr i32 %4190, 31
  %4218 = xor i32 %4214, %4217
  %4219 = add i32 %4218, %4214
  %4220 = icmp eq i32 %4219, 2
  %4221 = zext i1 %4220 to i8
  %4222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4221, i8* %4222, align 1
  store %struct.Memory* %loadMem_43e2ee, %struct.Memory** %MEMORY
  %loadMem_43e2f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4224 = getelementptr inbounds %struct.GPR, %struct.GPR* %4223, i32 0, i32 33
  %4225 = getelementptr inbounds %struct.Reg, %struct.Reg* %4224, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %4225 to i64*
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 9
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %ESI.i605 = bitcast %union.anon* %4228 to i32*
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4230 = getelementptr inbounds %struct.GPR, %struct.GPR* %4229, i32 0, i32 5
  %4231 = getelementptr inbounds %struct.Reg, %struct.Reg* %4230, i32 0, i32 0
  %RCX.i606 = bitcast %union.anon* %4231 to i64*
  %4232 = load i32, i32* %ESI.i605
  %4233 = zext i32 %4232 to i64
  %4234 = load i64, i64* %PC.i604
  %4235 = add i64 %4234, 2
  store i64 %4235, i64* %PC.i604
  %4236 = and i64 %4233, 4294967295
  store i64 %4236, i64* %RCX.i606, align 8
  store %struct.Memory* %loadMem_43e2f1, %struct.Memory** %MEMORY
  %loadMem_43e2f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4238 = getelementptr inbounds %struct.GPR, %struct.GPR* %4237, i32 0, i32 33
  %4239 = getelementptr inbounds %struct.Reg, %struct.Reg* %4238, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %4239 to i64*
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4241 = getelementptr inbounds %struct.GPR, %struct.GPR* %4240, i32 0, i32 5
  %4242 = getelementptr inbounds %struct.Reg, %struct.Reg* %4241, i32 0, i32 0
  %4243 = bitcast %union.anon* %4242 to %struct.anon.2*
  %CL.i601 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4243, i32 0, i32 0
  %4244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4245 = getelementptr inbounds %struct.GPR, %struct.GPR* %4244, i32 0, i32 7
  %4246 = getelementptr inbounds %struct.Reg, %struct.Reg* %4245, i32 0, i32 0
  %RDX.i602 = bitcast %union.anon* %4246 to i64*
  %4247 = load i64, i64* %RDX.i602
  %4248 = load i8, i8* %CL.i601
  %4249 = zext i8 %4248 to i64
  %4250 = load i64, i64* %PC.i600
  %4251 = add i64 %4250, 2
  store i64 %4251, i64* %PC.i600
  %4252 = trunc i64 %4249 to i5
  switch i5 %4252, label %4256 [
    i5 0, label %routine_sarl__cl___edx.exit603
    i5 1, label %4253
  ]

; <label>:4253:                                   ; preds = %block_43e276
  %4254 = shl i64 %4247, 32
  %4255 = ashr i64 %4254, 33
  br label %4263

; <label>:4256:                                   ; preds = %block_43e276
  %4257 = and i64 %4249, 31
  %4258 = add i64 %4257, -1
  %4259 = shl i64 %4247, 32
  %4260 = ashr exact i64 %4259, 32
  %4261 = ashr i64 %4260, %4258
  %4262 = lshr i64 %4261, 1
  br label %4263

; <label>:4263:                                   ; preds = %4256, %4253
  %4264 = phi i64 [ %4262, %4256 ], [ %4255, %4253 ]
  %4265 = phi i64 [ %4261, %4256 ], [ %4247, %4253 ]
  %4266 = trunc i64 %4265 to i8
  %4267 = and i8 %4266, 1
  %4268 = trunc i64 %4264 to i32
  %4269 = and i64 %4264, 4294967295
  store i64 %4269, i64* %RDX.i602, align 8
  %4270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4267, i8* %4270, align 1
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4272 = and i32 %4268, 255
  %4273 = call i32 @llvm.ctpop.i32(i32 %4272)
  %4274 = trunc i32 %4273 to i8
  %4275 = and i8 %4274, 1
  %4276 = xor i8 %4275, 1
  store i8 %4276, i8* %4271, align 1
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4277, align 1
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4279 = icmp eq i32 %4268, 0
  %4280 = zext i1 %4279 to i8
  store i8 %4280, i8* %4278, align 1
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4282 = lshr i32 %4268, 31
  %4283 = trunc i32 %4282 to i8
  store i8 %4283, i8* %4281, align 1
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4284, align 1
  br label %routine_sarl__cl___edx.exit603

routine_sarl__cl___edx.exit603:                   ; preds = %block_43e276, %4263
  store %struct.Memory* %loadMem_43e2f3, %struct.Memory** %MEMORY
  %loadMem_43e2f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4286 = getelementptr inbounds %struct.GPR, %struct.GPR* %4285, i32 0, i32 33
  %4287 = getelementptr inbounds %struct.Reg, %struct.Reg* %4286, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %4287 to i64*
  %4288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4289 = getelementptr inbounds %struct.GPR, %struct.GPR* %4288, i32 0, i32 1
  %4290 = getelementptr inbounds %struct.Reg, %struct.Reg* %4289, i32 0, i32 0
  %RAX.i599 = bitcast %union.anon* %4290 to i64*
  %4291 = load i64, i64* %PC.i598
  %4292 = add i64 %4291, 8
  store i64 %4292, i64* %PC.i598
  %4293 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %4293, i64* %RAX.i599, align 8
  store %struct.Memory* %loadMem_43e2f5, %struct.Memory** %MEMORY
  %loadMem_43e2fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4295 = getelementptr inbounds %struct.GPR, %struct.GPR* %4294, i32 0, i32 33
  %4296 = getelementptr inbounds %struct.Reg, %struct.Reg* %4295, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %4296 to i64*
  %4297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4298 = getelementptr inbounds %struct.GPR, %struct.GPR* %4297, i32 0, i32 1
  %4299 = getelementptr inbounds %struct.Reg, %struct.Reg* %4298, i32 0, i32 0
  %RAX.i597 = bitcast %union.anon* %4299 to i64*
  %4300 = load i64, i64* %RAX.i597
  %4301 = load i64, i64* %PC.i596
  %4302 = add i64 %4301, 3
  store i64 %4302, i64* %PC.i596
  %4303 = inttoptr i64 %4300 to i64*
  %4304 = load i64, i64* %4303
  store i64 %4304, i64* %RAX.i597, align 8
  store %struct.Memory* %loadMem_43e2fd, %struct.Memory** %MEMORY
  %loadMem_43e300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4306 = getelementptr inbounds %struct.GPR, %struct.GPR* %4305, i32 0, i32 33
  %4307 = getelementptr inbounds %struct.Reg, %struct.Reg* %4306, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %4307 to i64*
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4309 = getelementptr inbounds %struct.GPR, %struct.GPR* %4308, i32 0, i32 11
  %4310 = getelementptr inbounds %struct.Reg, %struct.Reg* %4309, i32 0, i32 0
  %RDI.i594 = bitcast %union.anon* %4310 to i64*
  %4311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4312 = getelementptr inbounds %struct.GPR, %struct.GPR* %4311, i32 0, i32 15
  %4313 = getelementptr inbounds %struct.Reg, %struct.Reg* %4312, i32 0, i32 0
  %RBP.i595 = bitcast %union.anon* %4313 to i64*
  %4314 = load i64, i64* %RBP.i595
  %4315 = sub i64 %4314, 38
  %4316 = load i64, i64* %PC.i593
  %4317 = add i64 %4316, 5
  store i64 %4317, i64* %PC.i593
  %4318 = inttoptr i64 %4315 to i16*
  %4319 = load i16, i16* %4318
  %4320 = sext i16 %4319 to i64
  store i64 %4320, i64* %RDI.i594, align 8
  store %struct.Memory* %loadMem_43e300, %struct.Memory** %MEMORY
  %loadMem_43e305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4322 = getelementptr inbounds %struct.GPR, %struct.GPR* %4321, i32 0, i32 33
  %4323 = getelementptr inbounds %struct.Reg, %struct.Reg* %4322, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %4323 to i64*
  %4324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4325 = getelementptr inbounds %struct.GPR, %struct.GPR* %4324, i32 0, i32 1
  %4326 = getelementptr inbounds %struct.Reg, %struct.Reg* %4325, i32 0, i32 0
  %RAX.i591 = bitcast %union.anon* %4326 to i64*
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4328 = getelementptr inbounds %struct.GPR, %struct.GPR* %4327, i32 0, i32 11
  %4329 = getelementptr inbounds %struct.Reg, %struct.Reg* %4328, i32 0, i32 0
  %RDI.i592 = bitcast %union.anon* %4329 to i64*
  %4330 = load i64, i64* %RAX.i591
  %4331 = load i64, i64* %RDI.i592
  %4332 = mul i64 %4331, 8
  %4333 = add i64 %4332, %4330
  %4334 = load i64, i64* %PC.i590
  %4335 = add i64 %4334, 4
  store i64 %4335, i64* %PC.i590
  %4336 = inttoptr i64 %4333 to i64*
  %4337 = load i64, i64* %4336
  store i64 %4337, i64* %RAX.i591, align 8
  store %struct.Memory* %loadMem_43e305, %struct.Memory** %MEMORY
  %loadMem_43e309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4339 = getelementptr inbounds %struct.GPR, %struct.GPR* %4338, i32 0, i32 33
  %4340 = getelementptr inbounds %struct.Reg, %struct.Reg* %4339, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %4340 to i64*
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4342 = getelementptr inbounds %struct.GPR, %struct.GPR* %4341, i32 0, i32 1
  %4343 = getelementptr inbounds %struct.Reg, %struct.Reg* %4342, i32 0, i32 0
  %RAX.i588 = bitcast %union.anon* %4343 to i64*
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4345 = getelementptr inbounds %struct.GPR, %struct.GPR* %4344, i32 0, i32 9
  %4346 = getelementptr inbounds %struct.Reg, %struct.Reg* %4345, i32 0, i32 0
  %RSI.i589 = bitcast %union.anon* %4346 to i64*
  %4347 = load i64, i64* %RAX.i588
  %4348 = load i64, i64* %PC.i587
  %4349 = add i64 %4348, 2
  store i64 %4349, i64* %PC.i587
  %4350 = inttoptr i64 %4347 to i32*
  %4351 = load i32, i32* %4350
  %4352 = zext i32 %4351 to i64
  store i64 %4352, i64* %RSI.i589, align 8
  store %struct.Memory* %loadMem_43e309, %struct.Memory** %MEMORY
  %loadMem_43e30b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4354 = getelementptr inbounds %struct.GPR, %struct.GPR* %4353, i32 0, i32 33
  %4355 = getelementptr inbounds %struct.Reg, %struct.Reg* %4354, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %4355 to i64*
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4357 = getelementptr inbounds %struct.GPR, %struct.GPR* %4356, i32 0, i32 1
  %4358 = getelementptr inbounds %struct.Reg, %struct.Reg* %4357, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %4358 to i64*
  %4359 = load i64, i64* %PC.i585
  %4360 = add i64 %4359, 8
  store i64 %4360, i64* %PC.i585
  %4361 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %4361, i64* %RAX.i586, align 8
  store %struct.Memory* %loadMem_43e30b, %struct.Memory** %MEMORY
  %loadMem_43e313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4363 = getelementptr inbounds %struct.GPR, %struct.GPR* %4362, i32 0, i32 33
  %4364 = getelementptr inbounds %struct.Reg, %struct.Reg* %4363, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %4364 to i64*
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4366 = getelementptr inbounds %struct.GPR, %struct.GPR* %4365, i32 0, i32 1
  %4367 = getelementptr inbounds %struct.Reg, %struct.Reg* %4366, i32 0, i32 0
  %RAX.i584 = bitcast %union.anon* %4367 to i64*
  %4368 = load i64, i64* %RAX.i584
  %4369 = add i64 %4368, 8
  %4370 = load i64, i64* %PC.i583
  %4371 = add i64 %4370, 4
  store i64 %4371, i64* %PC.i583
  %4372 = inttoptr i64 %4369 to i64*
  %4373 = load i64, i64* %4372
  store i64 %4373, i64* %RAX.i584, align 8
  store %struct.Memory* %loadMem_43e313, %struct.Memory** %MEMORY
  %loadMem_43e317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4375 = getelementptr inbounds %struct.GPR, %struct.GPR* %4374, i32 0, i32 33
  %4376 = getelementptr inbounds %struct.Reg, %struct.Reg* %4375, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %4376 to i64*
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4378 = getelementptr inbounds %struct.GPR, %struct.GPR* %4377, i32 0, i32 11
  %4379 = getelementptr inbounds %struct.Reg, %struct.Reg* %4378, i32 0, i32 0
  %RDI.i581 = bitcast %union.anon* %4379 to i64*
  %4380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4381 = getelementptr inbounds %struct.GPR, %struct.GPR* %4380, i32 0, i32 15
  %4382 = getelementptr inbounds %struct.Reg, %struct.Reg* %4381, i32 0, i32 0
  %RBP.i582 = bitcast %union.anon* %4382 to i64*
  %4383 = load i64, i64* %RBP.i582
  %4384 = sub i64 %4383, 40
  %4385 = load i64, i64* %PC.i580
  %4386 = add i64 %4385, 5
  store i64 %4386, i64* %PC.i580
  %4387 = inttoptr i64 %4384 to i16*
  %4388 = load i16, i16* %4387
  %4389 = sext i16 %4388 to i64
  store i64 %4389, i64* %RDI.i581, align 8
  store %struct.Memory* %loadMem_43e317, %struct.Memory** %MEMORY
  %loadMem_43e31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 33
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %4392 to i64*
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4394 = getelementptr inbounds %struct.GPR, %struct.GPR* %4393, i32 0, i32 1
  %4395 = getelementptr inbounds %struct.Reg, %struct.Reg* %4394, i32 0, i32 0
  %RAX.i578 = bitcast %union.anon* %4395 to i64*
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4397 = getelementptr inbounds %struct.GPR, %struct.GPR* %4396, i32 0, i32 11
  %4398 = getelementptr inbounds %struct.Reg, %struct.Reg* %4397, i32 0, i32 0
  %RDI.i579 = bitcast %union.anon* %4398 to i64*
  %4399 = load i64, i64* %RAX.i578
  %4400 = load i64, i64* %RDI.i579
  %4401 = mul i64 %4400, 8
  %4402 = add i64 %4401, %4399
  %4403 = load i64, i64* %PC.i577
  %4404 = add i64 %4403, 4
  store i64 %4404, i64* %PC.i577
  %4405 = inttoptr i64 %4402 to i64*
  %4406 = load i64, i64* %4405
  store i64 %4406, i64* %RAX.i578, align 8
  store %struct.Memory* %loadMem_43e31c, %struct.Memory** %MEMORY
  %loadMem_43e320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4408 = getelementptr inbounds %struct.GPR, %struct.GPR* %4407, i32 0, i32 33
  %4409 = getelementptr inbounds %struct.Reg, %struct.Reg* %4408, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %4409 to i64*
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4411 = getelementptr inbounds %struct.GPR, %struct.GPR* %4410, i32 0, i32 1
  %4412 = getelementptr inbounds %struct.Reg, %struct.Reg* %4411, i32 0, i32 0
  %RAX.i575 = bitcast %union.anon* %4412 to i64*
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4414 = getelementptr inbounds %struct.GPR, %struct.GPR* %4413, i32 0, i32 9
  %4415 = getelementptr inbounds %struct.Reg, %struct.Reg* %4414, i32 0, i32 0
  %RSI.i576 = bitcast %union.anon* %4415 to i64*
  %4416 = load i64, i64* %RSI.i576
  %4417 = load i64, i64* %RAX.i575
  %4418 = load i64, i64* %PC.i574
  %4419 = add i64 %4418, 2
  store i64 %4419, i64* %PC.i574
  %4420 = trunc i64 %4416 to i32
  %4421 = inttoptr i64 %4417 to i32*
  %4422 = load i32, i32* %4421
  %4423 = add i32 %4422, %4420
  %4424 = zext i32 %4423 to i64
  store i64 %4424, i64* %RSI.i576, align 8
  %4425 = icmp ult i32 %4423, %4420
  %4426 = icmp ult i32 %4423, %4422
  %4427 = or i1 %4425, %4426
  %4428 = zext i1 %4427 to i8
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4428, i8* %4429, align 1
  %4430 = and i32 %4423, 255
  %4431 = call i32 @llvm.ctpop.i32(i32 %4430)
  %4432 = trunc i32 %4431 to i8
  %4433 = and i8 %4432, 1
  %4434 = xor i8 %4433, 1
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4434, i8* %4435, align 1
  %4436 = xor i32 %4422, %4420
  %4437 = xor i32 %4436, %4423
  %4438 = lshr i32 %4437, 4
  %4439 = trunc i32 %4438 to i8
  %4440 = and i8 %4439, 1
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4440, i8* %4441, align 1
  %4442 = icmp eq i32 %4423, 0
  %4443 = zext i1 %4442 to i8
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4443, i8* %4444, align 1
  %4445 = lshr i32 %4423, 31
  %4446 = trunc i32 %4445 to i8
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4446, i8* %4447, align 1
  %4448 = lshr i32 %4420, 31
  %4449 = lshr i32 %4422, 31
  %4450 = xor i32 %4445, %4448
  %4451 = xor i32 %4445, %4449
  %4452 = add i32 %4450, %4451
  %4453 = icmp eq i32 %4452, 2
  %4454 = zext i1 %4453 to i8
  %4455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4454, i8* %4455, align 1
  store %struct.Memory* %loadMem_43e320, %struct.Memory** %MEMORY
  %loadMem_43e322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4457 = getelementptr inbounds %struct.GPR, %struct.GPR* %4456, i32 0, i32 33
  %4458 = getelementptr inbounds %struct.Reg, %struct.Reg* %4457, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %4458 to i64*
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4460 = getelementptr inbounds %struct.GPR, %struct.GPR* %4459, i32 0, i32 9
  %4461 = getelementptr inbounds %struct.Reg, %struct.Reg* %4460, i32 0, i32 0
  %RSI.i573 = bitcast %union.anon* %4461 to i64*
  %4462 = load i64, i64* %RSI.i573
  %4463 = load i64, i64* %PC.i572
  %4464 = add i64 %4463, 3
  store i64 %4464, i64* %PC.i572
  %4465 = trunc i64 %4462 to i32
  %4466 = add i32 1, %4465
  %4467 = zext i32 %4466 to i64
  store i64 %4467, i64* %RSI.i573, align 8
  %4468 = icmp ult i32 %4466, %4465
  %4469 = icmp ult i32 %4466, 1
  %4470 = or i1 %4468, %4469
  %4471 = zext i1 %4470 to i8
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4471, i8* %4472, align 1
  %4473 = and i32 %4466, 255
  %4474 = call i32 @llvm.ctpop.i32(i32 %4473)
  %4475 = trunc i32 %4474 to i8
  %4476 = and i8 %4475, 1
  %4477 = xor i8 %4476, 1
  %4478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4477, i8* %4478, align 1
  %4479 = xor i64 1, %4462
  %4480 = trunc i64 %4479 to i32
  %4481 = xor i32 %4480, %4466
  %4482 = lshr i32 %4481, 4
  %4483 = trunc i32 %4482 to i8
  %4484 = and i8 %4483, 1
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4484, i8* %4485, align 1
  %4486 = icmp eq i32 %4466, 0
  %4487 = zext i1 %4486 to i8
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4487, i8* %4488, align 1
  %4489 = lshr i32 %4466, 31
  %4490 = trunc i32 %4489 to i8
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4490, i8* %4491, align 1
  %4492 = lshr i32 %4465, 31
  %4493 = xor i32 %4489, %4492
  %4494 = add i32 %4493, %4489
  %4495 = icmp eq i32 %4494, 2
  %4496 = zext i1 %4495 to i8
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4496, i8* %4497, align 1
  store %struct.Memory* %loadMem_43e322, %struct.Memory** %MEMORY
  %loadMem_43e325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4499 = getelementptr inbounds %struct.GPR, %struct.GPR* %4498, i32 0, i32 33
  %4500 = getelementptr inbounds %struct.Reg, %struct.Reg* %4499, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %4500 to i64*
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4502 = getelementptr inbounds %struct.GPR, %struct.GPR* %4501, i32 0, i32 9
  %4503 = getelementptr inbounds %struct.Reg, %struct.Reg* %4502, i32 0, i32 0
  %RSI.i571 = bitcast %union.anon* %4503 to i64*
  %4504 = load i64, i64* %RSI.i571
  %4505 = load i64, i64* %PC.i570
  %4506 = add i64 %4505, 2
  store i64 %4506, i64* %PC.i570
  %4507 = shl i64 %4504, 32
  %4508 = ashr i64 %4507, 33
  %4509 = trunc i64 %4504 to i8
  %4510 = and i8 %4509, 1
  %4511 = trunc i64 %4508 to i32
  %4512 = and i64 %4508, 4294967295
  store i64 %4512, i64* %RSI.i571, align 8
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4510, i8* %4513, align 1
  %4514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4515 = and i32 %4511, 255
  %4516 = call i32 @llvm.ctpop.i32(i32 %4515)
  %4517 = trunc i32 %4516 to i8
  %4518 = and i8 %4517, 1
  %4519 = xor i8 %4518, 1
  store i8 %4519, i8* %4514, align 1
  %4520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4520, align 1
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4522 = icmp eq i32 %4511, 0
  %4523 = zext i1 %4522 to i8
  store i8 %4523, i8* %4521, align 1
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4525 = lshr i32 %4511, 31
  %4526 = trunc i32 %4525 to i8
  store i8 %4526, i8* %4524, align 1
  %4527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4527, align 1
  store %struct.Memory* %loadMem_43e325, %struct.Memory** %MEMORY
  %loadMem_43e328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4529 = getelementptr inbounds %struct.GPR, %struct.GPR* %4528, i32 0, i32 33
  %4530 = getelementptr inbounds %struct.Reg, %struct.Reg* %4529, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %4530 to i64*
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4532 = getelementptr inbounds %struct.GPR, %struct.GPR* %4531, i32 0, i32 9
  %4533 = getelementptr inbounds %struct.Reg, %struct.Reg* %4532, i32 0, i32 0
  %ESI.i568 = bitcast %union.anon* %4533 to i32*
  %4534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4535 = getelementptr inbounds %struct.GPR, %struct.GPR* %4534, i32 0, i32 7
  %4536 = getelementptr inbounds %struct.Reg, %struct.Reg* %4535, i32 0, i32 0
  %RDX.i569 = bitcast %union.anon* %4536 to i64*
  %4537 = load i64, i64* %RDX.i569
  %4538 = load i32, i32* %ESI.i568
  %4539 = zext i32 %4538 to i64
  %4540 = load i64, i64* %PC.i567
  %4541 = add i64 %4540, 2
  store i64 %4541, i64* %PC.i567
  %4542 = trunc i64 %4537 to i32
  %4543 = add i32 %4538, %4542
  %4544 = zext i32 %4543 to i64
  store i64 %4544, i64* %RDX.i569, align 8
  %4545 = icmp ult i32 %4543, %4542
  %4546 = icmp ult i32 %4543, %4538
  %4547 = or i1 %4545, %4546
  %4548 = zext i1 %4547 to i8
  %4549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4548, i8* %4549, align 1
  %4550 = and i32 %4543, 255
  %4551 = call i32 @llvm.ctpop.i32(i32 %4550)
  %4552 = trunc i32 %4551 to i8
  %4553 = and i8 %4552, 1
  %4554 = xor i8 %4553, 1
  %4555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4554, i8* %4555, align 1
  %4556 = xor i64 %4539, %4537
  %4557 = trunc i64 %4556 to i32
  %4558 = xor i32 %4557, %4543
  %4559 = lshr i32 %4558, 4
  %4560 = trunc i32 %4559 to i8
  %4561 = and i8 %4560, 1
  %4562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4561, i8* %4562, align 1
  %4563 = icmp eq i32 %4543, 0
  %4564 = zext i1 %4563 to i8
  %4565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4564, i8* %4565, align 1
  %4566 = lshr i32 %4543, 31
  %4567 = trunc i32 %4566 to i8
  %4568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4567, i8* %4568, align 1
  %4569 = lshr i32 %4542, 31
  %4570 = lshr i32 %4538, 31
  %4571 = xor i32 %4566, %4569
  %4572 = xor i32 %4566, %4570
  %4573 = add i32 %4571, %4572
  %4574 = icmp eq i32 %4573, 2
  %4575 = zext i1 %4574 to i8
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4575, i8* %4576, align 1
  store %struct.Memory* %loadMem_43e328, %struct.Memory** %MEMORY
  %loadMem_43e32a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 33
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %4579 to i64*
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4581 = getelementptr inbounds %struct.GPR, %struct.GPR* %4580, i32 0, i32 7
  %4582 = getelementptr inbounds %struct.Reg, %struct.Reg* %4581, i32 0, i32 0
  %EDX.i565 = bitcast %union.anon* %4582 to i32*
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4584 = getelementptr inbounds %struct.GPR, %struct.GPR* %4583, i32 0, i32 11
  %4585 = getelementptr inbounds %struct.Reg, %struct.Reg* %4584, i32 0, i32 0
  %RDI.i566 = bitcast %union.anon* %4585 to i64*
  %4586 = load i32, i32* %EDX.i565
  %4587 = zext i32 %4586 to i64
  %4588 = load i64, i64* %PC.i564
  %4589 = add i64 %4588, 2
  store i64 %4589, i64* %PC.i564
  %4590 = and i64 %4587, 4294967295
  store i64 %4590, i64* %RDI.i566, align 8
  store %struct.Memory* %loadMem_43e32a, %struct.Memory** %MEMORY
  %loadMem1_43e32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4592 = getelementptr inbounds %struct.GPR, %struct.GPR* %4591, i32 0, i32 33
  %4593 = getelementptr inbounds %struct.Reg, %struct.Reg* %4592, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %4593 to i64*
  %4594 = load i64, i64* %PC.i563
  %4595 = add i64 %4594, -11388
  %4596 = load i64, i64* %PC.i563
  %4597 = add i64 %4596, 5
  %4598 = load i64, i64* %PC.i563
  %4599 = add i64 %4598, 5
  store i64 %4599, i64* %PC.i563
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4601 = load i64, i64* %4600, align 8
  %4602 = add i64 %4601, -8
  %4603 = inttoptr i64 %4602 to i64*
  store i64 %4597, i64* %4603
  store i64 %4602, i64* %4600, align 8
  %4604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4595, i64* %4604, align 8
  store %struct.Memory* %loadMem1_43e32c, %struct.Memory** %MEMORY
  %loadMem2_43e32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43e32c = load i64, i64* %3
  %call2_43e32c = call %struct.Memory* @sub_43b6b0.clip1a(%struct.State* %0, i64 %loadPC_43e32c, %struct.Memory* %loadMem2_43e32c)
  store %struct.Memory* %call2_43e32c, %struct.Memory** %MEMORY
  %loadMem_43e331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4606 = getelementptr inbounds %struct.GPR, %struct.GPR* %4605, i32 0, i32 33
  %4607 = getelementptr inbounds %struct.Reg, %struct.Reg* %4606, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %4607 to i64*
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4609 = getelementptr inbounds %struct.GPR, %struct.GPR* %4608, i32 0, i32 1
  %4610 = getelementptr inbounds %struct.Reg, %struct.Reg* %4609, i32 0, i32 0
  %AX.i561 = bitcast %union.anon* %4610 to i16*
  %4611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4612 = getelementptr inbounds %struct.GPR, %struct.GPR* %4611, i32 0, i32 17
  %4613 = getelementptr inbounds %struct.Reg, %struct.Reg* %4612, i32 0, i32 0
  %R8W.i562 = bitcast %union.anon* %4613 to i16*
  %4614 = load i16, i16* %AX.i561
  %4615 = zext i16 %4614 to i64
  %4616 = load i64, i64* %PC.i560
  %4617 = add i64 %4616, 4
  store i64 %4617, i64* %PC.i560
  store i16 %4614, i16* %R8W.i562, align 2
  store %struct.Memory* %loadMem_43e331, %struct.Memory** %MEMORY
  %loadMem_43e335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4619 = getelementptr inbounds %struct.GPR, %struct.GPR* %4618, i32 0, i32 33
  %4620 = getelementptr inbounds %struct.Reg, %struct.Reg* %4619, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %4620 to i64*
  %4621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4622 = getelementptr inbounds %struct.GPR, %struct.GPR* %4621, i32 0, i32 19
  %4623 = getelementptr inbounds %struct.Reg, %struct.Reg* %4622, i32 0, i32 0
  %R9.i559 = bitcast %union.anon* %4623 to i64*
  %4624 = load i64, i64* %PC.i558
  %4625 = add i64 %4624, 8
  store i64 %4625, i64* %PC.i558
  %4626 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4626, i64* %R9.i559, align 8
  store %struct.Memory* %loadMem_43e335, %struct.Memory** %MEMORY
  %loadMem_43e33d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4628 = getelementptr inbounds %struct.GPR, %struct.GPR* %4627, i32 0, i32 33
  %4629 = getelementptr inbounds %struct.Reg, %struct.Reg* %4628, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %4629 to i64*
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4631 = getelementptr inbounds %struct.GPR, %struct.GPR* %4630, i32 0, i32 19
  %4632 = getelementptr inbounds %struct.Reg, %struct.Reg* %4631, i32 0, i32 0
  %R9.i557 = bitcast %union.anon* %4632 to i64*
  %4633 = load i64, i64* %R9.i557
  %4634 = load i64, i64* %PC.i556
  %4635 = add i64 %4634, 7
  store i64 %4635, i64* %PC.i556
  %4636 = add i64 12600, %4633
  store i64 %4636, i64* %R9.i557, align 8
  %4637 = icmp ult i64 %4636, %4633
  %4638 = icmp ult i64 %4636, 12600
  %4639 = or i1 %4637, %4638
  %4640 = zext i1 %4639 to i8
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4640, i8* %4641, align 1
  %4642 = trunc i64 %4636 to i32
  %4643 = and i32 %4642, 255
  %4644 = call i32 @llvm.ctpop.i32(i32 %4643)
  %4645 = trunc i32 %4644 to i8
  %4646 = and i8 %4645, 1
  %4647 = xor i8 %4646, 1
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4647, i8* %4648, align 1
  %4649 = xor i64 12600, %4633
  %4650 = xor i64 %4649, %4636
  %4651 = lshr i64 %4650, 4
  %4652 = trunc i64 %4651 to i8
  %4653 = and i8 %4652, 1
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4653, i8* %4654, align 1
  %4655 = icmp eq i64 %4636, 0
  %4656 = zext i1 %4655 to i8
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4656, i8* %4657, align 1
  %4658 = lshr i64 %4636, 63
  %4659 = trunc i64 %4658 to i8
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4659, i8* %4660, align 1
  %4661 = lshr i64 %4633, 63
  %4662 = xor i64 %4658, %4661
  %4663 = add i64 %4662, %4658
  %4664 = icmp eq i64 %4663, 2
  %4665 = zext i1 %4664 to i8
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4665, i8* %4666, align 1
  store %struct.Memory* %loadMem_43e33d, %struct.Memory** %MEMORY
  %loadMem_43e344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4668 = getelementptr inbounds %struct.GPR, %struct.GPR* %4667, i32 0, i32 33
  %4669 = getelementptr inbounds %struct.Reg, %struct.Reg* %4668, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %4669 to i64*
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4671 = getelementptr inbounds %struct.GPR, %struct.GPR* %4670, i32 0, i32 15
  %4672 = getelementptr inbounds %struct.Reg, %struct.Reg* %4671, i32 0, i32 0
  %RBP.i554 = bitcast %union.anon* %4672 to i64*
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4674 = getelementptr inbounds %struct.GPR, %struct.GPR* %4673, i32 0, i32 21
  %4675 = getelementptr inbounds %struct.Reg, %struct.Reg* %4674, i32 0, i32 0
  %R10.i555 = bitcast %union.anon* %4675 to i64*
  %4676 = load i64, i64* %RBP.i554
  %4677 = sub i64 %4676, 44
  %4678 = load i64, i64* %PC.i553
  %4679 = add i64 %4678, 4
  store i64 %4679, i64* %PC.i553
  %4680 = inttoptr i64 %4677 to i32*
  %4681 = load i32, i32* %4680
  %4682 = sext i32 %4681 to i64
  store i64 %4682, i64* %R10.i555, align 8
  store %struct.Memory* %loadMem_43e344, %struct.Memory** %MEMORY
  %loadMem_43e348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 33
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %4685 to i64*
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4687 = getelementptr inbounds %struct.GPR, %struct.GPR* %4686, i32 0, i32 21
  %4688 = getelementptr inbounds %struct.Reg, %struct.Reg* %4687, i32 0, i32 0
  %R10.i552 = bitcast %union.anon* %4688 to i64*
  %4689 = load i64, i64* %R10.i552
  %4690 = load i64, i64* %PC.i551
  %4691 = add i64 %4690, 4
  store i64 %4691, i64* %PC.i551
  %4692 = shl i64 %4689, 4
  %4693 = icmp slt i64 %4692, 0
  %4694 = shl i64 %4692, 1
  store i64 %4694, i64* %R10.i552, align 8
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4696 = zext i1 %4693 to i8
  store i8 %4696, i8* %4695, align 1
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4698 = trunc i64 %4694 to i32
  %4699 = and i32 %4698, 254
  %4700 = call i32 @llvm.ctpop.i32(i32 %4699)
  %4701 = trunc i32 %4700 to i8
  %4702 = and i8 %4701, 1
  %4703 = xor i8 %4702, 1
  store i8 %4703, i8* %4697, align 1
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4704, align 1
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4706 = icmp eq i64 %4694, 0
  %4707 = zext i1 %4706 to i8
  store i8 %4707, i8* %4705, align 1
  %4708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4709 = lshr i64 %4694, 63
  %4710 = trunc i64 %4709 to i8
  store i8 %4710, i8* %4708, align 1
  %4711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4711, align 1
  store %struct.Memory* %loadMem_43e348, %struct.Memory** %MEMORY
  %loadMem_43e34c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4713 = getelementptr inbounds %struct.GPR, %struct.GPR* %4712, i32 0, i32 33
  %4714 = getelementptr inbounds %struct.Reg, %struct.Reg* %4713, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %4714 to i64*
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4716 = getelementptr inbounds %struct.GPR, %struct.GPR* %4715, i32 0, i32 19
  %4717 = getelementptr inbounds %struct.Reg, %struct.Reg* %4716, i32 0, i32 0
  %R9.i549 = bitcast %union.anon* %4717 to i64*
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4719 = getelementptr inbounds %struct.GPR, %struct.GPR* %4718, i32 0, i32 21
  %4720 = getelementptr inbounds %struct.Reg, %struct.Reg* %4719, i32 0, i32 0
  %R10.i550 = bitcast %union.anon* %4720 to i64*
  %4721 = load i64, i64* %R9.i549
  %4722 = load i64, i64* %R10.i550
  %4723 = load i64, i64* %PC.i548
  %4724 = add i64 %4723, 3
  store i64 %4724, i64* %PC.i548
  %4725 = add i64 %4722, %4721
  store i64 %4725, i64* %R9.i549, align 8
  %4726 = icmp ult i64 %4725, %4721
  %4727 = icmp ult i64 %4725, %4722
  %4728 = or i1 %4726, %4727
  %4729 = zext i1 %4728 to i8
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4729, i8* %4730, align 1
  %4731 = trunc i64 %4725 to i32
  %4732 = and i32 %4731, 255
  %4733 = call i32 @llvm.ctpop.i32(i32 %4732)
  %4734 = trunc i32 %4733 to i8
  %4735 = and i8 %4734, 1
  %4736 = xor i8 %4735, 1
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4736, i8* %4737, align 1
  %4738 = xor i64 %4722, %4721
  %4739 = xor i64 %4738, %4725
  %4740 = lshr i64 %4739, 4
  %4741 = trunc i64 %4740 to i8
  %4742 = and i8 %4741, 1
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4742, i8* %4743, align 1
  %4744 = icmp eq i64 %4725, 0
  %4745 = zext i1 %4744 to i8
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4745, i8* %4746, align 1
  %4747 = lshr i64 %4725, 63
  %4748 = trunc i64 %4747 to i8
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4748, i8* %4749, align 1
  %4750 = lshr i64 %4721, 63
  %4751 = lshr i64 %4722, 63
  %4752 = xor i64 %4747, %4750
  %4753 = xor i64 %4747, %4751
  %4754 = add i64 %4752, %4753
  %4755 = icmp eq i64 %4754, 2
  %4756 = zext i1 %4755 to i8
  %4757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4756, i8* %4757, align 1
  store %struct.Memory* %loadMem_43e34c, %struct.Memory** %MEMORY
  %loadMem_43e34f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4759 = getelementptr inbounds %struct.GPR, %struct.GPR* %4758, i32 0, i32 33
  %4760 = getelementptr inbounds %struct.Reg, %struct.Reg* %4759, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %4760 to i64*
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 15
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %4763 to i64*
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4765 = getelementptr inbounds %struct.GPR, %struct.GPR* %4764, i32 0, i32 21
  %4766 = getelementptr inbounds %struct.Reg, %struct.Reg* %4765, i32 0, i32 0
  %R10.i547 = bitcast %union.anon* %4766 to i64*
  %4767 = load i64, i64* %RBP.i546
  %4768 = sub i64 %4767, 48
  %4769 = load i64, i64* %PC.i545
  %4770 = add i64 %4769, 4
  store i64 %4770, i64* %PC.i545
  %4771 = inttoptr i64 %4768 to i32*
  %4772 = load i32, i32* %4771
  %4773 = sext i32 %4772 to i64
  store i64 %4773, i64* %R10.i547, align 8
  store %struct.Memory* %loadMem_43e34f, %struct.Memory** %MEMORY
  %loadMem_43e353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4775 = getelementptr inbounds %struct.GPR, %struct.GPR* %4774, i32 0, i32 33
  %4776 = getelementptr inbounds %struct.Reg, %struct.Reg* %4775, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %4776 to i64*
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4778 = getelementptr inbounds %struct.GPR, %struct.GPR* %4777, i32 0, i32 17
  %4779 = getelementptr inbounds %struct.Reg, %struct.Reg* %4778, i32 0, i32 0
  %R8W.i543 = bitcast %union.anon* %4779 to i16*
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4781 = getelementptr inbounds %struct.GPR, %struct.GPR* %4780, i32 0, i32 19
  %4782 = getelementptr inbounds %struct.Reg, %struct.Reg* %4781, i32 0, i32 0
  %R9.i544 = bitcast %union.anon* %4782 to i64*
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4784 = getelementptr inbounds %struct.GPR, %struct.GPR* %4783, i32 0, i32 21
  %4785 = getelementptr inbounds %struct.Reg, %struct.Reg* %4784, i32 0, i32 0
  %R10.i = bitcast %union.anon* %4785 to i64*
  %4786 = load i64, i64* %R9.i544
  %4787 = load i64, i64* %R10.i
  %4788 = mul i64 %4787, 2
  %4789 = add i64 %4788, %4786
  %4790 = load i16, i16* %R8W.i543
  %4791 = zext i16 %4790 to i64
  %4792 = load i64, i64* %PC.i542
  %4793 = add i64 %4792, 5
  store i64 %4793, i64* %PC.i542
  %4794 = inttoptr i64 %4789 to i16*
  store i16 %4790, i16* %4794
  store %struct.Memory* %loadMem_43e353, %struct.Memory** %MEMORY
  %loadMem_43e358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4796 = getelementptr inbounds %struct.GPR, %struct.GPR* %4795, i32 0, i32 33
  %4797 = getelementptr inbounds %struct.Reg, %struct.Reg* %4796, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %4797 to i64*
  %4798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4799 = getelementptr inbounds %struct.GPR, %struct.GPR* %4798, i32 0, i32 1
  %4800 = getelementptr inbounds %struct.Reg, %struct.Reg* %4799, i32 0, i32 0
  %RAX.i540 = bitcast %union.anon* %4800 to i64*
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4802 = getelementptr inbounds %struct.GPR, %struct.GPR* %4801, i32 0, i32 15
  %4803 = getelementptr inbounds %struct.Reg, %struct.Reg* %4802, i32 0, i32 0
  %RBP.i541 = bitcast %union.anon* %4803 to i64*
  %4804 = load i64, i64* %RBP.i541
  %4805 = sub i64 %4804, 44
  %4806 = load i64, i64* %PC.i539
  %4807 = add i64 %4806, 3
  store i64 %4807, i64* %PC.i539
  %4808 = inttoptr i64 %4805 to i32*
  %4809 = load i32, i32* %4808
  %4810 = zext i32 %4809 to i64
  store i64 %4810, i64* %RAX.i540, align 8
  store %struct.Memory* %loadMem_43e358, %struct.Memory** %MEMORY
  %loadMem_43e35b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4812 = getelementptr inbounds %struct.GPR, %struct.GPR* %4811, i32 0, i32 33
  %4813 = getelementptr inbounds %struct.Reg, %struct.Reg* %4812, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %4813 to i64*
  %4814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4815 = getelementptr inbounds %struct.GPR, %struct.GPR* %4814, i32 0, i32 1
  %4816 = getelementptr inbounds %struct.Reg, %struct.Reg* %4815, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %4816 to i64*
  %4817 = load i64, i64* %RAX.i538
  %4818 = load i64, i64* %PC.i537
  %4819 = add i64 %4818, 3
  store i64 %4819, i64* %PC.i537
  %4820 = trunc i64 %4817 to i32
  %4821 = add i32 1, %4820
  %4822 = zext i32 %4821 to i64
  store i64 %4822, i64* %RAX.i538, align 8
  %4823 = icmp ult i32 %4821, %4820
  %4824 = icmp ult i32 %4821, 1
  %4825 = or i1 %4823, %4824
  %4826 = zext i1 %4825 to i8
  %4827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4826, i8* %4827, align 1
  %4828 = and i32 %4821, 255
  %4829 = call i32 @llvm.ctpop.i32(i32 %4828)
  %4830 = trunc i32 %4829 to i8
  %4831 = and i8 %4830, 1
  %4832 = xor i8 %4831, 1
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4832, i8* %4833, align 1
  %4834 = xor i64 1, %4817
  %4835 = trunc i64 %4834 to i32
  %4836 = xor i32 %4835, %4821
  %4837 = lshr i32 %4836, 4
  %4838 = trunc i32 %4837 to i8
  %4839 = and i8 %4838, 1
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4839, i8* %4840, align 1
  %4841 = icmp eq i32 %4821, 0
  %4842 = zext i1 %4841 to i8
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4842, i8* %4843, align 1
  %4844 = lshr i32 %4821, 31
  %4845 = trunc i32 %4844 to i8
  %4846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4845, i8* %4846, align 1
  %4847 = lshr i32 %4820, 31
  %4848 = xor i32 %4844, %4847
  %4849 = add i32 %4848, %4844
  %4850 = icmp eq i32 %4849, 2
  %4851 = zext i1 %4850 to i8
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4851, i8* %4852, align 1
  store %struct.Memory* %loadMem_43e35b, %struct.Memory** %MEMORY
  %loadMem_43e35e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4854 = getelementptr inbounds %struct.GPR, %struct.GPR* %4853, i32 0, i32 33
  %4855 = getelementptr inbounds %struct.Reg, %struct.Reg* %4854, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %4855 to i64*
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4857 = getelementptr inbounds %struct.GPR, %struct.GPR* %4856, i32 0, i32 1
  %4858 = getelementptr inbounds %struct.Reg, %struct.Reg* %4857, i32 0, i32 0
  %EAX.i535 = bitcast %union.anon* %4858 to i32*
  %4859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4860 = getelementptr inbounds %struct.GPR, %struct.GPR* %4859, i32 0, i32 15
  %4861 = getelementptr inbounds %struct.Reg, %struct.Reg* %4860, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %4861 to i64*
  %4862 = load i64, i64* %RBP.i536
  %4863 = sub i64 %4862, 44
  %4864 = load i32, i32* %EAX.i535
  %4865 = zext i32 %4864 to i64
  %4866 = load i64, i64* %PC.i534
  %4867 = add i64 %4866, 3
  store i64 %4867, i64* %PC.i534
  %4868 = inttoptr i64 %4863 to i32*
  store i32 %4864, i32* %4868
  store %struct.Memory* %loadMem_43e35e, %struct.Memory** %MEMORY
  %loadMem_43e361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4870 = getelementptr inbounds %struct.GPR, %struct.GPR* %4869, i32 0, i32 33
  %4871 = getelementptr inbounds %struct.Reg, %struct.Reg* %4870, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %4871 to i64*
  %4872 = load i64, i64* %PC.i533
  %4873 = add i64 %4872, -247
  %4874 = load i64, i64* %PC.i533
  %4875 = add i64 %4874, 5
  store i64 %4875, i64* %PC.i533
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4873, i64* %4876, align 8
  store %struct.Memory* %loadMem_43e361, %struct.Memory** %MEMORY
  br label %block_.L_43e26a

block_.L_43e366:                                  ; preds = %block_.L_43e26a
  %loadMem_43e366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4878 = getelementptr inbounds %struct.GPR, %struct.GPR* %4877, i32 0, i32 33
  %4879 = getelementptr inbounds %struct.Reg, %struct.Reg* %4878, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %4879 to i64*
  %4880 = load i64, i64* %PC.i532
  %4881 = add i64 %4880, 5
  %4882 = load i64, i64* %PC.i532
  %4883 = add i64 %4882, 5
  store i64 %4883, i64* %PC.i532
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4881, i64* %4884, align 8
  store %struct.Memory* %loadMem_43e366, %struct.Memory** %MEMORY
  br label %block_.L_43e36b

block_.L_43e36b:                                  ; preds = %block_.L_43e366
  %loadMem_43e36b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4886 = getelementptr inbounds %struct.GPR, %struct.GPR* %4885, i32 0, i32 33
  %4887 = getelementptr inbounds %struct.Reg, %struct.Reg* %4886, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %4887 to i64*
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4889 = getelementptr inbounds %struct.GPR, %struct.GPR* %4888, i32 0, i32 1
  %4890 = getelementptr inbounds %struct.Reg, %struct.Reg* %4889, i32 0, i32 0
  %RAX.i530 = bitcast %union.anon* %4890 to i64*
  %4891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4892 = getelementptr inbounds %struct.GPR, %struct.GPR* %4891, i32 0, i32 15
  %4893 = getelementptr inbounds %struct.Reg, %struct.Reg* %4892, i32 0, i32 0
  %RBP.i531 = bitcast %union.anon* %4893 to i64*
  %4894 = load i64, i64* %RBP.i531
  %4895 = sub i64 %4894, 48
  %4896 = load i64, i64* %PC.i529
  %4897 = add i64 %4896, 3
  store i64 %4897, i64* %PC.i529
  %4898 = inttoptr i64 %4895 to i32*
  %4899 = load i32, i32* %4898
  %4900 = zext i32 %4899 to i64
  store i64 %4900, i64* %RAX.i530, align 8
  store %struct.Memory* %loadMem_43e36b, %struct.Memory** %MEMORY
  %loadMem_43e36e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4902 = getelementptr inbounds %struct.GPR, %struct.GPR* %4901, i32 0, i32 33
  %4903 = getelementptr inbounds %struct.Reg, %struct.Reg* %4902, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %4903 to i64*
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4905 = getelementptr inbounds %struct.GPR, %struct.GPR* %4904, i32 0, i32 1
  %4906 = getelementptr inbounds %struct.Reg, %struct.Reg* %4905, i32 0, i32 0
  %RAX.i528 = bitcast %union.anon* %4906 to i64*
  %4907 = load i64, i64* %RAX.i528
  %4908 = load i64, i64* %PC.i527
  %4909 = add i64 %4908, 3
  store i64 %4909, i64* %PC.i527
  %4910 = trunc i64 %4907 to i32
  %4911 = add i32 1, %4910
  %4912 = zext i32 %4911 to i64
  store i64 %4912, i64* %RAX.i528, align 8
  %4913 = icmp ult i32 %4911, %4910
  %4914 = icmp ult i32 %4911, 1
  %4915 = or i1 %4913, %4914
  %4916 = zext i1 %4915 to i8
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4916, i8* %4917, align 1
  %4918 = and i32 %4911, 255
  %4919 = call i32 @llvm.ctpop.i32(i32 %4918)
  %4920 = trunc i32 %4919 to i8
  %4921 = and i8 %4920, 1
  %4922 = xor i8 %4921, 1
  %4923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4922, i8* %4923, align 1
  %4924 = xor i64 1, %4907
  %4925 = trunc i64 %4924 to i32
  %4926 = xor i32 %4925, %4911
  %4927 = lshr i32 %4926, 4
  %4928 = trunc i32 %4927 to i8
  %4929 = and i8 %4928, 1
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4929, i8* %4930, align 1
  %4931 = icmp eq i32 %4911, 0
  %4932 = zext i1 %4931 to i8
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4932, i8* %4933, align 1
  %4934 = lshr i32 %4911, 31
  %4935 = trunc i32 %4934 to i8
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4935, i8* %4936, align 1
  %4937 = lshr i32 %4910, 31
  %4938 = xor i32 %4934, %4937
  %4939 = add i32 %4938, %4934
  %4940 = icmp eq i32 %4939, 2
  %4941 = zext i1 %4940 to i8
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4941, i8* %4942, align 1
  store %struct.Memory* %loadMem_43e36e, %struct.Memory** %MEMORY
  %loadMem_43e371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4944 = getelementptr inbounds %struct.GPR, %struct.GPR* %4943, i32 0, i32 33
  %4945 = getelementptr inbounds %struct.Reg, %struct.Reg* %4944, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %4945 to i64*
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4947 = getelementptr inbounds %struct.GPR, %struct.GPR* %4946, i32 0, i32 1
  %4948 = getelementptr inbounds %struct.Reg, %struct.Reg* %4947, i32 0, i32 0
  %EAX.i525 = bitcast %union.anon* %4948 to i32*
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4950 = getelementptr inbounds %struct.GPR, %struct.GPR* %4949, i32 0, i32 15
  %4951 = getelementptr inbounds %struct.Reg, %struct.Reg* %4950, i32 0, i32 0
  %RBP.i526 = bitcast %union.anon* %4951 to i64*
  %4952 = load i64, i64* %RBP.i526
  %4953 = sub i64 %4952, 48
  %4954 = load i32, i32* %EAX.i525
  %4955 = zext i32 %4954 to i64
  %4956 = load i64, i64* %PC.i524
  %4957 = add i64 %4956, 3
  store i64 %4957, i64* %PC.i524
  %4958 = inttoptr i64 %4953 to i32*
  store i32 %4954, i32* %4958
  store %struct.Memory* %loadMem_43e371, %struct.Memory** %MEMORY
  %loadMem_43e374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4960 = getelementptr inbounds %struct.GPR, %struct.GPR* %4959, i32 0, i32 33
  %4961 = getelementptr inbounds %struct.Reg, %struct.Reg* %4960, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %4961 to i64*
  %4962 = load i64, i64* %PC.i523
  %4963 = add i64 %4962, -284
  %4964 = load i64, i64* %PC.i523
  %4965 = add i64 %4964, 5
  store i64 %4965, i64* %PC.i523
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4963, i64* %4966, align 8
  store %struct.Memory* %loadMem_43e374, %struct.Memory** %MEMORY
  br label %block_.L_43e258

block_.L_43e379:                                  ; preds = %block_.L_43e258
  %loadMem_43e379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4968 = getelementptr inbounds %struct.GPR, %struct.GPR* %4967, i32 0, i32 33
  %4969 = getelementptr inbounds %struct.Reg, %struct.Reg* %4968, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %4969 to i64*
  %4970 = load i64, i64* %PC.i522
  %4971 = add i64 %4970, 418
  %4972 = load i64, i64* %PC.i522
  %4973 = add i64 %4972, 5
  store i64 %4973, i64* %PC.i522
  %4974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4971, i64* %4974, align 8
  store %struct.Memory* %loadMem_43e379, %struct.Memory** %MEMORY
  br label %block_.L_43e51b

block_.L_43e37e:                                  ; preds = %block_43e248
  %loadMem_43e37e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4976 = getelementptr inbounds %struct.GPR, %struct.GPR* %4975, i32 0, i32 33
  %4977 = getelementptr inbounds %struct.Reg, %struct.Reg* %4976, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %4977 to i64*
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4979 = getelementptr inbounds %struct.GPR, %struct.GPR* %4978, i32 0, i32 15
  %4980 = getelementptr inbounds %struct.Reg, %struct.Reg* %4979, i32 0, i32 0
  %RBP.i521 = bitcast %union.anon* %4980 to i64*
  %4981 = load i64, i64* %RBP.i521
  %4982 = sub i64 %4981, 28
  %4983 = load i64, i64* %PC.i520
  %4984 = add i64 %4983, 4
  store i64 %4984, i64* %PC.i520
  %4985 = inttoptr i64 %4982 to i32*
  %4986 = load i32, i32* %4985
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4987, align 1
  %4988 = and i32 %4986, 255
  %4989 = call i32 @llvm.ctpop.i32(i32 %4988)
  %4990 = trunc i32 %4989 to i8
  %4991 = and i8 %4990, 1
  %4992 = xor i8 %4991, 1
  %4993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4992, i8* %4993, align 1
  %4994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4994, align 1
  %4995 = icmp eq i32 %4986, 0
  %4996 = zext i1 %4995 to i8
  %4997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4996, i8* %4997, align 1
  %4998 = lshr i32 %4986, 31
  %4999 = trunc i32 %4998 to i8
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4999, i8* %5000, align 1
  %5001 = lshr i32 %4986, 31
  %5002 = xor i32 %4998, %5001
  %5003 = add i32 %5002, %5001
  %5004 = icmp eq i32 %5003, 2
  %5005 = zext i1 %5004 to i8
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5005, i8* %5006, align 1
  store %struct.Memory* %loadMem_43e37e, %struct.Memory** %MEMORY
  %loadMem_43e382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5008 = getelementptr inbounds %struct.GPR, %struct.GPR* %5007, i32 0, i32 33
  %5009 = getelementptr inbounds %struct.Reg, %struct.Reg* %5008, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %5009 to i64*
  %5010 = load i64, i64* %PC.i519
  %5011 = add i64 %5010, 204
  %5012 = load i64, i64* %PC.i519
  %5013 = add i64 %5012, 6
  %5014 = load i64, i64* %PC.i519
  %5015 = add i64 %5014, 6
  store i64 %5015, i64* %PC.i519
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5017 = load i8, i8* %5016, align 1
  %5018 = icmp eq i8 %5017, 0
  %5019 = zext i1 %5018 to i8
  store i8 %5019, i8* %BRANCH_TAKEN, align 1
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5021 = select i1 %5018, i64 %5011, i64 %5013
  store i64 %5021, i64* %5020, align 8
  store %struct.Memory* %loadMem_43e382, %struct.Memory** %MEMORY
  %loadBr_43e382 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e382 = icmp eq i8 %loadBr_43e382, 1
  br i1 %cmpBr_43e382, label %block_.L_43e44e, label %block_43e388

block_43e388:                                     ; preds = %block_.L_43e37e
  %loadMem_43e388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 33
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %5024 to i64*
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5026 = getelementptr inbounds %struct.GPR, %struct.GPR* %5025, i32 0, i32 1
  %5027 = getelementptr inbounds %struct.Reg, %struct.Reg* %5026, i32 0, i32 0
  %RAX.i517 = bitcast %union.anon* %5027 to i64*
  %5028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5029 = getelementptr inbounds %struct.GPR, %struct.GPR* %5028, i32 0, i32 15
  %5030 = getelementptr inbounds %struct.Reg, %struct.Reg* %5029, i32 0, i32 0
  %RBP.i518 = bitcast %union.anon* %5030 to i64*
  %5031 = load i64, i64* %RBP.i518
  %5032 = sub i64 %5031, 24
  %5033 = load i64, i64* %PC.i516
  %5034 = add i64 %5033, 3
  store i64 %5034, i64* %PC.i516
  %5035 = inttoptr i64 %5032 to i32*
  %5036 = load i32, i32* %5035
  %5037 = zext i32 %5036 to i64
  store i64 %5037, i64* %RAX.i517, align 8
  store %struct.Memory* %loadMem_43e388, %struct.Memory** %MEMORY
  %loadMem_43e38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5039 = getelementptr inbounds %struct.GPR, %struct.GPR* %5038, i32 0, i32 33
  %5040 = getelementptr inbounds %struct.Reg, %struct.Reg* %5039, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %5040 to i64*
  %5041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5042 = getelementptr inbounds %struct.GPR, %struct.GPR* %5041, i32 0, i32 1
  %5043 = getelementptr inbounds %struct.Reg, %struct.Reg* %5042, i32 0, i32 0
  %EAX.i514 = bitcast %union.anon* %5043 to i32*
  %5044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5045 = getelementptr inbounds %struct.GPR, %struct.GPR* %5044, i32 0, i32 15
  %5046 = getelementptr inbounds %struct.Reg, %struct.Reg* %5045, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %5046 to i64*
  %5047 = load i64, i64* %RBP.i515
  %5048 = sub i64 %5047, 48
  %5049 = load i32, i32* %EAX.i514
  %5050 = zext i32 %5049 to i64
  %5051 = load i64, i64* %PC.i513
  %5052 = add i64 %5051, 3
  store i64 %5052, i64* %PC.i513
  %5053 = inttoptr i64 %5048 to i32*
  store i32 %5049, i32* %5053
  store %struct.Memory* %loadMem_43e38b, %struct.Memory** %MEMORY
  br label %block_.L_43e38e

block_.L_43e38e:                                  ; preds = %block_.L_43e43b, %block_43e388
  %loadMem_43e38e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5055 = getelementptr inbounds %struct.GPR, %struct.GPR* %5054, i32 0, i32 33
  %5056 = getelementptr inbounds %struct.Reg, %struct.Reg* %5055, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %5056 to i64*
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5058 = getelementptr inbounds %struct.GPR, %struct.GPR* %5057, i32 0, i32 1
  %5059 = getelementptr inbounds %struct.Reg, %struct.Reg* %5058, i32 0, i32 0
  %RAX.i511 = bitcast %union.anon* %5059 to i64*
  %5060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5061 = getelementptr inbounds %struct.GPR, %struct.GPR* %5060, i32 0, i32 15
  %5062 = getelementptr inbounds %struct.Reg, %struct.Reg* %5061, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %5062 to i64*
  %5063 = load i64, i64* %RBP.i512
  %5064 = sub i64 %5063, 48
  %5065 = load i64, i64* %PC.i510
  %5066 = add i64 %5065, 3
  store i64 %5066, i64* %PC.i510
  %5067 = inttoptr i64 %5064 to i32*
  %5068 = load i32, i32* %5067
  %5069 = zext i32 %5068 to i64
  store i64 %5069, i64* %RAX.i511, align 8
  store %struct.Memory* %loadMem_43e38e, %struct.Memory** %MEMORY
  %loadMem_43e391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5071 = getelementptr inbounds %struct.GPR, %struct.GPR* %5070, i32 0, i32 33
  %5072 = getelementptr inbounds %struct.Reg, %struct.Reg* %5071, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %5072 to i64*
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5074 = getelementptr inbounds %struct.GPR, %struct.GPR* %5073, i32 0, i32 1
  %5075 = getelementptr inbounds %struct.Reg, %struct.Reg* %5074, i32 0, i32 0
  %EAX.i508 = bitcast %union.anon* %5075 to i32*
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5077 = getelementptr inbounds %struct.GPR, %struct.GPR* %5076, i32 0, i32 15
  %5078 = getelementptr inbounds %struct.Reg, %struct.Reg* %5077, i32 0, i32 0
  %RBP.i509 = bitcast %union.anon* %5078 to i64*
  %5079 = load i32, i32* %EAX.i508
  %5080 = zext i32 %5079 to i64
  %5081 = load i64, i64* %RBP.i509
  %5082 = sub i64 %5081, 56
  %5083 = load i64, i64* %PC.i507
  %5084 = add i64 %5083, 3
  store i64 %5084, i64* %PC.i507
  %5085 = inttoptr i64 %5082 to i32*
  %5086 = load i32, i32* %5085
  %5087 = sub i32 %5079, %5086
  %5088 = icmp ult i32 %5079, %5086
  %5089 = zext i1 %5088 to i8
  %5090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5089, i8* %5090, align 1
  %5091 = and i32 %5087, 255
  %5092 = call i32 @llvm.ctpop.i32(i32 %5091)
  %5093 = trunc i32 %5092 to i8
  %5094 = and i8 %5093, 1
  %5095 = xor i8 %5094, 1
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5095, i8* %5096, align 1
  %5097 = xor i32 %5086, %5079
  %5098 = xor i32 %5097, %5087
  %5099 = lshr i32 %5098, 4
  %5100 = trunc i32 %5099 to i8
  %5101 = and i8 %5100, 1
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5101, i8* %5102, align 1
  %5103 = icmp eq i32 %5087, 0
  %5104 = zext i1 %5103 to i8
  %5105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5104, i8* %5105, align 1
  %5106 = lshr i32 %5087, 31
  %5107 = trunc i32 %5106 to i8
  %5108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5107, i8* %5108, align 1
  %5109 = lshr i32 %5079, 31
  %5110 = lshr i32 %5086, 31
  %5111 = xor i32 %5110, %5109
  %5112 = xor i32 %5106, %5109
  %5113 = add i32 %5112, %5111
  %5114 = icmp eq i32 %5113, 2
  %5115 = zext i1 %5114 to i8
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5115, i8* %5116, align 1
  store %struct.Memory* %loadMem_43e391, %struct.Memory** %MEMORY
  %loadMem_43e394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5118 = getelementptr inbounds %struct.GPR, %struct.GPR* %5117, i32 0, i32 33
  %5119 = getelementptr inbounds %struct.Reg, %struct.Reg* %5118, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %5119 to i64*
  %5120 = load i64, i64* %PC.i506
  %5121 = add i64 %5120, 181
  %5122 = load i64, i64* %PC.i506
  %5123 = add i64 %5122, 6
  %5124 = load i64, i64* %PC.i506
  %5125 = add i64 %5124, 6
  store i64 %5125, i64* %PC.i506
  %5126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5127 = load i8, i8* %5126, align 1
  %5128 = icmp ne i8 %5127, 0
  %5129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5130 = load i8, i8* %5129, align 1
  %5131 = icmp ne i8 %5130, 0
  %5132 = xor i1 %5128, %5131
  %5133 = xor i1 %5132, true
  %5134 = zext i1 %5133 to i8
  store i8 %5134, i8* %BRANCH_TAKEN, align 1
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5136 = select i1 %5132, i64 %5123, i64 %5121
  store i64 %5136, i64* %5135, align 8
  store %struct.Memory* %loadMem_43e394, %struct.Memory** %MEMORY
  %loadBr_43e394 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e394 = icmp eq i8 %loadBr_43e394, 1
  br i1 %cmpBr_43e394, label %block_.L_43e449, label %block_43e39a

block_43e39a:                                     ; preds = %block_.L_43e38e
  %loadMem_43e39a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5138 = getelementptr inbounds %struct.GPR, %struct.GPR* %5137, i32 0, i32 33
  %5139 = getelementptr inbounds %struct.Reg, %struct.Reg* %5138, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %5139 to i64*
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5141 = getelementptr inbounds %struct.GPR, %struct.GPR* %5140, i32 0, i32 1
  %5142 = getelementptr inbounds %struct.Reg, %struct.Reg* %5141, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %5142 to i64*
  %5143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5144 = getelementptr inbounds %struct.GPR, %struct.GPR* %5143, i32 0, i32 15
  %5145 = getelementptr inbounds %struct.Reg, %struct.Reg* %5144, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %5145 to i64*
  %5146 = load i64, i64* %RBP.i505
  %5147 = sub i64 %5146, 20
  %5148 = load i64, i64* %PC.i503
  %5149 = add i64 %5148, 3
  store i64 %5149, i64* %PC.i503
  %5150 = inttoptr i64 %5147 to i32*
  %5151 = load i32, i32* %5150
  %5152 = zext i32 %5151 to i64
  store i64 %5152, i64* %RAX.i504, align 8
  store %struct.Memory* %loadMem_43e39a, %struct.Memory** %MEMORY
  %loadMem_43e39d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 33
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %5155 to i64*
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5157 = getelementptr inbounds %struct.GPR, %struct.GPR* %5156, i32 0, i32 1
  %5158 = getelementptr inbounds %struct.Reg, %struct.Reg* %5157, i32 0, i32 0
  %EAX.i501 = bitcast %union.anon* %5158 to i32*
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5160 = getelementptr inbounds %struct.GPR, %struct.GPR* %5159, i32 0, i32 15
  %5161 = getelementptr inbounds %struct.Reg, %struct.Reg* %5160, i32 0, i32 0
  %RBP.i502 = bitcast %union.anon* %5161 to i64*
  %5162 = load i64, i64* %RBP.i502
  %5163 = sub i64 %5162, 44
  %5164 = load i32, i32* %EAX.i501
  %5165 = zext i32 %5164 to i64
  %5166 = load i64, i64* %PC.i500
  %5167 = add i64 %5166, 3
  store i64 %5167, i64* %PC.i500
  %5168 = inttoptr i64 %5163 to i32*
  store i32 %5164, i32* %5168
  store %struct.Memory* %loadMem_43e39d, %struct.Memory** %MEMORY
  br label %block_.L_43e3a0

block_.L_43e3a0:                                  ; preds = %routine_sarl__cl___edx.exit461, %block_43e39a
  %loadMem_43e3a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5170 = getelementptr inbounds %struct.GPR, %struct.GPR* %5169, i32 0, i32 33
  %5171 = getelementptr inbounds %struct.Reg, %struct.Reg* %5170, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %5171 to i64*
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5173 = getelementptr inbounds %struct.GPR, %struct.GPR* %5172, i32 0, i32 1
  %5174 = getelementptr inbounds %struct.Reg, %struct.Reg* %5173, i32 0, i32 0
  %RAX.i498 = bitcast %union.anon* %5174 to i64*
  %5175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5176 = getelementptr inbounds %struct.GPR, %struct.GPR* %5175, i32 0, i32 15
  %5177 = getelementptr inbounds %struct.Reg, %struct.Reg* %5176, i32 0, i32 0
  %RBP.i499 = bitcast %union.anon* %5177 to i64*
  %5178 = load i64, i64* %RBP.i499
  %5179 = sub i64 %5178, 44
  %5180 = load i64, i64* %PC.i497
  %5181 = add i64 %5180, 3
  store i64 %5181, i64* %PC.i497
  %5182 = inttoptr i64 %5179 to i32*
  %5183 = load i32, i32* %5182
  %5184 = zext i32 %5183 to i64
  store i64 %5184, i64* %RAX.i498, align 8
  store %struct.Memory* %loadMem_43e3a0, %struct.Memory** %MEMORY
  %loadMem_43e3a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 33
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %5187 to i64*
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5189 = getelementptr inbounds %struct.GPR, %struct.GPR* %5188, i32 0, i32 1
  %5190 = getelementptr inbounds %struct.Reg, %struct.Reg* %5189, i32 0, i32 0
  %EAX.i495 = bitcast %union.anon* %5190 to i32*
  %5191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5192 = getelementptr inbounds %struct.GPR, %struct.GPR* %5191, i32 0, i32 15
  %5193 = getelementptr inbounds %struct.Reg, %struct.Reg* %5192, i32 0, i32 0
  %RBP.i496 = bitcast %union.anon* %5193 to i64*
  %5194 = load i32, i32* %EAX.i495
  %5195 = zext i32 %5194 to i64
  %5196 = load i64, i64* %RBP.i496
  %5197 = sub i64 %5196, 52
  %5198 = load i64, i64* %PC.i494
  %5199 = add i64 %5198, 3
  store i64 %5199, i64* %PC.i494
  %5200 = inttoptr i64 %5197 to i32*
  %5201 = load i32, i32* %5200
  %5202 = sub i32 %5194, %5201
  %5203 = icmp ult i32 %5194, %5201
  %5204 = zext i1 %5203 to i8
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5204, i8* %5205, align 1
  %5206 = and i32 %5202, 255
  %5207 = call i32 @llvm.ctpop.i32(i32 %5206)
  %5208 = trunc i32 %5207 to i8
  %5209 = and i8 %5208, 1
  %5210 = xor i8 %5209, 1
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5210, i8* %5211, align 1
  %5212 = xor i32 %5201, %5194
  %5213 = xor i32 %5212, %5202
  %5214 = lshr i32 %5213, 4
  %5215 = trunc i32 %5214 to i8
  %5216 = and i8 %5215, 1
  %5217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5216, i8* %5217, align 1
  %5218 = icmp eq i32 %5202, 0
  %5219 = zext i1 %5218 to i8
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5219, i8* %5220, align 1
  %5221 = lshr i32 %5202, 31
  %5222 = trunc i32 %5221 to i8
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5222, i8* %5223, align 1
  %5224 = lshr i32 %5194, 31
  %5225 = lshr i32 %5201, 31
  %5226 = xor i32 %5225, %5224
  %5227 = xor i32 %5221, %5224
  %5228 = add i32 %5227, %5226
  %5229 = icmp eq i32 %5228, 2
  %5230 = zext i1 %5229 to i8
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5230, i8* %5231, align 1
  store %struct.Memory* %loadMem_43e3a3, %struct.Memory** %MEMORY
  %loadMem_43e3a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5233 = getelementptr inbounds %struct.GPR, %struct.GPR* %5232, i32 0, i32 33
  %5234 = getelementptr inbounds %struct.Reg, %struct.Reg* %5233, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %5234 to i64*
  %5235 = load i64, i64* %PC.i493
  %5236 = add i64 %5235, 144
  %5237 = load i64, i64* %PC.i493
  %5238 = add i64 %5237, 6
  %5239 = load i64, i64* %PC.i493
  %5240 = add i64 %5239, 6
  store i64 %5240, i64* %PC.i493
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5242 = load i8, i8* %5241, align 1
  %5243 = icmp ne i8 %5242, 0
  %5244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5245 = load i8, i8* %5244, align 1
  %5246 = icmp ne i8 %5245, 0
  %5247 = xor i1 %5243, %5246
  %5248 = xor i1 %5247, true
  %5249 = zext i1 %5248 to i8
  store i8 %5249, i8* %BRANCH_TAKEN, align 1
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5251 = select i1 %5247, i64 %5238, i64 %5236
  store i64 %5251, i64* %5250, align 8
  store %struct.Memory* %loadMem_43e3a6, %struct.Memory** %MEMORY
  %loadBr_43e3a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e3a6 = icmp eq i8 %loadBr_43e3a6, 1
  br i1 %cmpBr_43e3a6, label %block_.L_43e436, label %block_43e3ac

block_43e3ac:                                     ; preds = %block_.L_43e3a0
  %loadMem_43e3ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5253 = getelementptr inbounds %struct.GPR, %struct.GPR* %5252, i32 0, i32 33
  %5254 = getelementptr inbounds %struct.Reg, %struct.Reg* %5253, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %5254 to i64*
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 1
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %RAX.i492 = bitcast %union.anon* %5257 to i64*
  %5258 = load i64, i64* %PC.i491
  %5259 = add i64 %5258, 8
  store i64 %5259, i64* %PC.i491
  %5260 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %5260, i64* %RAX.i492, align 8
  store %struct.Memory* %loadMem_43e3ac, %struct.Memory** %MEMORY
  %loadMem_43e3b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5262 = getelementptr inbounds %struct.GPR, %struct.GPR* %5261, i32 0, i32 33
  %5263 = getelementptr inbounds %struct.Reg, %struct.Reg* %5262, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %5263 to i64*
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5265 = getelementptr inbounds %struct.GPR, %struct.GPR* %5264, i32 0, i32 1
  %5266 = getelementptr inbounds %struct.Reg, %struct.Reg* %5265, i32 0, i32 0
  %RAX.i490 = bitcast %union.anon* %5266 to i64*
  %5267 = load i64, i64* %RAX.i490
  %5268 = load i64, i64* %PC.i489
  %5269 = add i64 %5268, 3
  store i64 %5269, i64* %PC.i489
  %5270 = inttoptr i64 %5267 to i64*
  %5271 = load i64, i64* %5270
  store i64 %5271, i64* %RAX.i490, align 8
  store %struct.Memory* %loadMem_43e3b4, %struct.Memory** %MEMORY
  %loadMem_43e3b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5273 = getelementptr inbounds %struct.GPR, %struct.GPR* %5272, i32 0, i32 33
  %5274 = getelementptr inbounds %struct.Reg, %struct.Reg* %5273, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %5274 to i64*
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5276 = getelementptr inbounds %struct.GPR, %struct.GPR* %5275, i32 0, i32 5
  %5277 = getelementptr inbounds %struct.Reg, %struct.Reg* %5276, i32 0, i32 0
  %RCX.i487 = bitcast %union.anon* %5277 to i64*
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5279 = getelementptr inbounds %struct.GPR, %struct.GPR* %5278, i32 0, i32 15
  %5280 = getelementptr inbounds %struct.Reg, %struct.Reg* %5279, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %5280 to i64*
  %5281 = load i64, i64* %RBP.i488
  %5282 = sub i64 %5281, 38
  %5283 = load i64, i64* %PC.i486
  %5284 = add i64 %5283, 5
  store i64 %5284, i64* %PC.i486
  %5285 = inttoptr i64 %5282 to i16*
  %5286 = load i16, i16* %5285
  %5287 = sext i16 %5286 to i64
  store i64 %5287, i64* %RCX.i487, align 8
  store %struct.Memory* %loadMem_43e3b7, %struct.Memory** %MEMORY
  %loadMem_43e3bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5289 = getelementptr inbounds %struct.GPR, %struct.GPR* %5288, i32 0, i32 33
  %5290 = getelementptr inbounds %struct.Reg, %struct.Reg* %5289, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %5290 to i64*
  %5291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5292 = getelementptr inbounds %struct.GPR, %struct.GPR* %5291, i32 0, i32 1
  %5293 = getelementptr inbounds %struct.Reg, %struct.Reg* %5292, i32 0, i32 0
  %RAX.i484 = bitcast %union.anon* %5293 to i64*
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5295 = getelementptr inbounds %struct.GPR, %struct.GPR* %5294, i32 0, i32 5
  %5296 = getelementptr inbounds %struct.Reg, %struct.Reg* %5295, i32 0, i32 0
  %RCX.i485 = bitcast %union.anon* %5296 to i64*
  %5297 = load i64, i64* %RAX.i484
  %5298 = load i64, i64* %RCX.i485
  %5299 = mul i64 %5298, 8
  %5300 = add i64 %5299, %5297
  %5301 = load i64, i64* %PC.i483
  %5302 = add i64 %5301, 4
  store i64 %5302, i64* %PC.i483
  %5303 = inttoptr i64 %5300 to i64*
  %5304 = load i64, i64* %5303
  store i64 %5304, i64* %RAX.i484, align 8
  store %struct.Memory* %loadMem_43e3bc, %struct.Memory** %MEMORY
  %loadMem_43e3c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5306 = getelementptr inbounds %struct.GPR, %struct.GPR* %5305, i32 0, i32 33
  %5307 = getelementptr inbounds %struct.Reg, %struct.Reg* %5306, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %5307 to i64*
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5309 = getelementptr inbounds %struct.GPR, %struct.GPR* %5308, i32 0, i32 1
  %5310 = getelementptr inbounds %struct.Reg, %struct.Reg* %5309, i32 0, i32 0
  %RAX.i481 = bitcast %union.anon* %5310 to i64*
  %5311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5312 = getelementptr inbounds %struct.GPR, %struct.GPR* %5311, i32 0, i32 7
  %5313 = getelementptr inbounds %struct.Reg, %struct.Reg* %5312, i32 0, i32 0
  %RDX.i482 = bitcast %union.anon* %5313 to i64*
  %5314 = load i64, i64* %RAX.i481
  %5315 = load i64, i64* %PC.i480
  %5316 = add i64 %5315, 2
  store i64 %5316, i64* %PC.i480
  %5317 = inttoptr i64 %5314 to i32*
  %5318 = load i32, i32* %5317
  %5319 = zext i32 %5318 to i64
  store i64 %5319, i64* %RDX.i482, align 8
  store %struct.Memory* %loadMem_43e3c0, %struct.Memory** %MEMORY
  %loadMem_43e3c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5321 = getelementptr inbounds %struct.GPR, %struct.GPR* %5320, i32 0, i32 33
  %5322 = getelementptr inbounds %struct.Reg, %struct.Reg* %5321, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %5322 to i64*
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5324 = getelementptr inbounds %struct.GPR, %struct.GPR* %5323, i32 0, i32 1
  %5325 = getelementptr inbounds %struct.Reg, %struct.Reg* %5324, i32 0, i32 0
  %RAX.i478 = bitcast %union.anon* %5325 to i64*
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5327 = getelementptr inbounds %struct.GPR, %struct.GPR* %5326, i32 0, i32 15
  %5328 = getelementptr inbounds %struct.Reg, %struct.Reg* %5327, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %5328 to i64*
  %5329 = load i64, i64* %RBP.i479
  %5330 = sub i64 %5329, 80
  %5331 = load i64, i64* %PC.i477
  %5332 = add i64 %5331, 4
  store i64 %5332, i64* %PC.i477
  %5333 = inttoptr i64 %5330 to i64*
  %5334 = load i64, i64* %5333
  store i64 %5334, i64* %RAX.i478, align 8
  store %struct.Memory* %loadMem_43e3c2, %struct.Memory** %MEMORY
  %loadMem_43e3c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5336 = getelementptr inbounds %struct.GPR, %struct.GPR* %5335, i32 0, i32 33
  %5337 = getelementptr inbounds %struct.Reg, %struct.Reg* %5336, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %5337 to i64*
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5339 = getelementptr inbounds %struct.GPR, %struct.GPR* %5338, i32 0, i32 1
  %5340 = getelementptr inbounds %struct.Reg, %struct.Reg* %5339, i32 0, i32 0
  %RAX.i475 = bitcast %union.anon* %5340 to i64*
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 5
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %RCX.i476 = bitcast %union.anon* %5343 to i64*
  %5344 = load i64, i64* %RAX.i475
  %5345 = load i64, i64* %PC.i474
  %5346 = add i64 %5345, 3
  store i64 %5346, i64* %PC.i474
  store i64 %5344, i64* %RCX.i476, align 8
  store %struct.Memory* %loadMem_43e3c6, %struct.Memory** %MEMORY
  %loadMem_43e3c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5348 = getelementptr inbounds %struct.GPR, %struct.GPR* %5347, i32 0, i32 33
  %5349 = getelementptr inbounds %struct.Reg, %struct.Reg* %5348, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %5349 to i64*
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5351 = getelementptr inbounds %struct.GPR, %struct.GPR* %5350, i32 0, i32 5
  %5352 = getelementptr inbounds %struct.Reg, %struct.Reg* %5351, i32 0, i32 0
  %RCX.i473 = bitcast %union.anon* %5352 to i64*
  %5353 = load i64, i64* %RCX.i473
  %5354 = load i64, i64* %PC.i472
  %5355 = add i64 %5354, 4
  store i64 %5355, i64* %PC.i472
  %5356 = add i64 4, %5353
  store i64 %5356, i64* %RCX.i473, align 8
  %5357 = icmp ult i64 %5356, %5353
  %5358 = icmp ult i64 %5356, 4
  %5359 = or i1 %5357, %5358
  %5360 = zext i1 %5359 to i8
  %5361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5360, i8* %5361, align 1
  %5362 = trunc i64 %5356 to i32
  %5363 = and i32 %5362, 255
  %5364 = call i32 @llvm.ctpop.i32(i32 %5363)
  %5365 = trunc i32 %5364 to i8
  %5366 = and i8 %5365, 1
  %5367 = xor i8 %5366, 1
  %5368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5367, i8* %5368, align 1
  %5369 = xor i64 4, %5353
  %5370 = xor i64 %5369, %5356
  %5371 = lshr i64 %5370, 4
  %5372 = trunc i64 %5371 to i8
  %5373 = and i8 %5372, 1
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5373, i8* %5374, align 1
  %5375 = icmp eq i64 %5356, 0
  %5376 = zext i1 %5375 to i8
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5376, i8* %5377, align 1
  %5378 = lshr i64 %5356, 63
  %5379 = trunc i64 %5378 to i8
  %5380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5379, i8* %5380, align 1
  %5381 = lshr i64 %5353, 63
  %5382 = xor i64 %5378, %5381
  %5383 = add i64 %5382, %5378
  %5384 = icmp eq i64 %5383, 2
  %5385 = zext i1 %5384 to i8
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5385, i8* %5386, align 1
  store %struct.Memory* %loadMem_43e3c9, %struct.Memory** %MEMORY
  %loadMem_43e3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 33
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %5389 to i64*
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5391 = getelementptr inbounds %struct.GPR, %struct.GPR* %5390, i32 0, i32 5
  %5392 = getelementptr inbounds %struct.Reg, %struct.Reg* %5391, i32 0, i32 0
  %RCX.i470 = bitcast %union.anon* %5392 to i64*
  %5393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5394 = getelementptr inbounds %struct.GPR, %struct.GPR* %5393, i32 0, i32 15
  %5395 = getelementptr inbounds %struct.Reg, %struct.Reg* %5394, i32 0, i32 0
  %RBP.i471 = bitcast %union.anon* %5395 to i64*
  %5396 = load i64, i64* %RBP.i471
  %5397 = sub i64 %5396, 80
  %5398 = load i64, i64* %RCX.i470
  %5399 = load i64, i64* %PC.i469
  %5400 = add i64 %5399, 4
  store i64 %5400, i64* %PC.i469
  %5401 = inttoptr i64 %5397 to i64*
  store i64 %5398, i64* %5401
  store %struct.Memory* %loadMem_43e3cd, %struct.Memory** %MEMORY
  %loadMem_43e3d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5403 = getelementptr inbounds %struct.GPR, %struct.GPR* %5402, i32 0, i32 33
  %5404 = getelementptr inbounds %struct.Reg, %struct.Reg* %5403, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %5404 to i64*
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5406 = getelementptr inbounds %struct.GPR, %struct.GPR* %5405, i32 0, i32 1
  %5407 = getelementptr inbounds %struct.Reg, %struct.Reg* %5406, i32 0, i32 0
  %RAX.i467 = bitcast %union.anon* %5407 to i64*
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5409 = getelementptr inbounds %struct.GPR, %struct.GPR* %5408, i32 0, i32 7
  %5410 = getelementptr inbounds %struct.Reg, %struct.Reg* %5409, i32 0, i32 0
  %RDX.i468 = bitcast %union.anon* %5410 to i64*
  %5411 = load i64, i64* %RDX.i468
  %5412 = load i64, i64* %RAX.i467
  %5413 = load i64, i64* %PC.i466
  %5414 = add i64 %5413, 3
  store i64 %5414, i64* %PC.i466
  %5415 = inttoptr i64 %5412 to i32*
  %5416 = load i32, i32* %5415
  %5417 = shl i64 %5411, 32
  %5418 = ashr exact i64 %5417, 32
  %5419 = sext i32 %5416 to i64
  %5420 = mul i64 %5419, %5418
  %5421 = trunc i64 %5420 to i32
  %5422 = and i64 %5420, 4294967295
  store i64 %5422, i64* %RDX.i468, align 8
  %5423 = shl i64 %5420, 32
  %5424 = ashr exact i64 %5423, 32
  %5425 = icmp ne i64 %5424, %5420
  %5426 = zext i1 %5425 to i8
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5426, i8* %5427, align 1
  %5428 = and i32 %5421, 255
  %5429 = call i32 @llvm.ctpop.i32(i32 %5428)
  %5430 = trunc i32 %5429 to i8
  %5431 = and i8 %5430, 1
  %5432 = xor i8 %5431, 1
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5432, i8* %5433, align 1
  %5434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5434, align 1
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5435, align 1
  %5436 = lshr i32 %5421, 31
  %5437 = trunc i32 %5436 to i8
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5437, i8* %5438, align 1
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5426, i8* %5439, align 1
  store %struct.Memory* %loadMem_43e3d1, %struct.Memory** %MEMORY
  %loadMem_43e3d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5441 = getelementptr inbounds %struct.GPR, %struct.GPR* %5440, i32 0, i32 33
  %5442 = getelementptr inbounds %struct.Reg, %struct.Reg* %5441, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %5442 to i64*
  %5443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5444 = getelementptr inbounds %struct.GPR, %struct.GPR* %5443, i32 0, i32 7
  %5445 = getelementptr inbounds %struct.Reg, %struct.Reg* %5444, i32 0, i32 0
  %RDX.i465 = bitcast %union.anon* %5445 to i64*
  %5446 = load i64, i64* %RDX.i465
  %5447 = load i64, i64* %PC.i464
  %5448 = add i64 %5447, 7
  store i64 %5448, i64* %PC.i464
  %5449 = trunc i64 %5446 to i32
  %5450 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %5451 = add i32 %5450, %5449
  %5452 = zext i32 %5451 to i64
  store i64 %5452, i64* %RDX.i465, align 8
  %5453 = icmp ult i32 %5451, %5449
  %5454 = icmp ult i32 %5451, %5450
  %5455 = or i1 %5453, %5454
  %5456 = zext i1 %5455 to i8
  %5457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5456, i8* %5457, align 1
  %5458 = and i32 %5451, 255
  %5459 = call i32 @llvm.ctpop.i32(i32 %5458)
  %5460 = trunc i32 %5459 to i8
  %5461 = and i8 %5460, 1
  %5462 = xor i8 %5461, 1
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5462, i8* %5463, align 1
  %5464 = xor i32 %5450, %5449
  %5465 = xor i32 %5464, %5451
  %5466 = lshr i32 %5465, 4
  %5467 = trunc i32 %5466 to i8
  %5468 = and i8 %5467, 1
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5468, i8* %5469, align 1
  %5470 = icmp eq i32 %5451, 0
  %5471 = zext i1 %5470 to i8
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5471, i8* %5472, align 1
  %5473 = lshr i32 %5451, 31
  %5474 = trunc i32 %5473 to i8
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5474, i8* %5475, align 1
  %5476 = lshr i32 %5449, 31
  %5477 = lshr i32 %5450, 31
  %5478 = xor i32 %5473, %5476
  %5479 = xor i32 %5473, %5477
  %5480 = add i32 %5478, %5479
  %5481 = icmp eq i32 %5480, 2
  %5482 = zext i1 %5481 to i8
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5482, i8* %5483, align 1
  store %struct.Memory* %loadMem_43e3d4, %struct.Memory** %MEMORY
  %loadMem_43e3db = load %struct.Memory*, %struct.Memory** %MEMORY
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5485 = getelementptr inbounds %struct.GPR, %struct.GPR* %5484, i32 0, i32 33
  %5486 = getelementptr inbounds %struct.Reg, %struct.Reg* %5485, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %5486 to i64*
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5488 = getelementptr inbounds %struct.GPR, %struct.GPR* %5487, i32 0, i32 5
  %5489 = getelementptr inbounds %struct.Reg, %struct.Reg* %5488, i32 0, i32 0
  %RCX.i463 = bitcast %union.anon* %5489 to i64*
  %5490 = load i64, i64* %PC.i462
  %5491 = add i64 %5490, 7
  store i64 %5491, i64* %PC.i462
  %5492 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %5493 = zext i32 %5492 to i64
  store i64 %5493, i64* %RCX.i463, align 8
  store %struct.Memory* %loadMem_43e3db, %struct.Memory** %MEMORY
  %loadMem_43e3e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5495 = getelementptr inbounds %struct.GPR, %struct.GPR* %5494, i32 0, i32 33
  %5496 = getelementptr inbounds %struct.Reg, %struct.Reg* %5495, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %5496 to i64*
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5498 = getelementptr inbounds %struct.GPR, %struct.GPR* %5497, i32 0, i32 5
  %5499 = getelementptr inbounds %struct.Reg, %struct.Reg* %5498, i32 0, i32 0
  %5500 = bitcast %union.anon* %5499 to %struct.anon.2*
  %CL.i459 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5500, i32 0, i32 0
  %5501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5502 = getelementptr inbounds %struct.GPR, %struct.GPR* %5501, i32 0, i32 7
  %5503 = getelementptr inbounds %struct.Reg, %struct.Reg* %5502, i32 0, i32 0
  %RDX.i460 = bitcast %union.anon* %5503 to i64*
  %5504 = load i64, i64* %RDX.i460
  %5505 = load i8, i8* %CL.i459
  %5506 = zext i8 %5505 to i64
  %5507 = load i64, i64* %PC.i458
  %5508 = add i64 %5507, 2
  store i64 %5508, i64* %PC.i458
  %5509 = trunc i64 %5506 to i5
  switch i5 %5509, label %5513 [
    i5 0, label %routine_sarl__cl___edx.exit461
    i5 1, label %5510
  ]

; <label>:5510:                                   ; preds = %block_43e3ac
  %5511 = shl i64 %5504, 32
  %5512 = ashr i64 %5511, 33
  br label %5520

; <label>:5513:                                   ; preds = %block_43e3ac
  %5514 = and i64 %5506, 31
  %5515 = add i64 %5514, -1
  %5516 = shl i64 %5504, 32
  %5517 = ashr exact i64 %5516, 32
  %5518 = ashr i64 %5517, %5515
  %5519 = lshr i64 %5518, 1
  br label %5520

; <label>:5520:                                   ; preds = %5513, %5510
  %5521 = phi i64 [ %5519, %5513 ], [ %5512, %5510 ]
  %5522 = phi i64 [ %5518, %5513 ], [ %5504, %5510 ]
  %5523 = trunc i64 %5522 to i8
  %5524 = and i8 %5523, 1
  %5525 = trunc i64 %5521 to i32
  %5526 = and i64 %5521, 4294967295
  store i64 %5526, i64* %RDX.i460, align 8
  %5527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5524, i8* %5527, align 1
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5529 = and i32 %5525, 255
  %5530 = call i32 @llvm.ctpop.i32(i32 %5529)
  %5531 = trunc i32 %5530 to i8
  %5532 = and i8 %5531, 1
  %5533 = xor i8 %5532, 1
  store i8 %5533, i8* %5528, align 1
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5534, align 1
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5536 = icmp eq i32 %5525, 0
  %5537 = zext i1 %5536 to i8
  store i8 %5537, i8* %5535, align 1
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5539 = lshr i32 %5525, 31
  %5540 = trunc i32 %5539 to i8
  store i8 %5540, i8* %5538, align 1
  %5541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5541, align 1
  br label %routine_sarl__cl___edx.exit461

routine_sarl__cl___edx.exit461:                   ; preds = %block_43e3ac, %5520
  store %struct.Memory* %loadMem_43e3e2, %struct.Memory** %MEMORY
  %loadMem_43e3e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5543 = getelementptr inbounds %struct.GPR, %struct.GPR* %5542, i32 0, i32 33
  %5544 = getelementptr inbounds %struct.Reg, %struct.Reg* %5543, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %5544 to i64*
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5546 = getelementptr inbounds %struct.GPR, %struct.GPR* %5545, i32 0, i32 1
  %5547 = getelementptr inbounds %struct.Reg, %struct.Reg* %5546, i32 0, i32 0
  %RAX.i457 = bitcast %union.anon* %5547 to i64*
  %5548 = load i64, i64* %PC.i456
  %5549 = add i64 %5548, 8
  store i64 %5549, i64* %PC.i456
  %5550 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %5550, i64* %RAX.i457, align 8
  store %struct.Memory* %loadMem_43e3e4, %struct.Memory** %MEMORY
  %loadMem_43e3ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5552 = getelementptr inbounds %struct.GPR, %struct.GPR* %5551, i32 0, i32 33
  %5553 = getelementptr inbounds %struct.Reg, %struct.Reg* %5552, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %5553 to i64*
  %5554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5555 = getelementptr inbounds %struct.GPR, %struct.GPR* %5554, i32 0, i32 1
  %5556 = getelementptr inbounds %struct.Reg, %struct.Reg* %5555, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %5556 to i64*
  %5557 = load i64, i64* %RAX.i455
  %5558 = load i64, i64* %PC.i454
  %5559 = add i64 %5558, 3
  store i64 %5559, i64* %PC.i454
  %5560 = inttoptr i64 %5557 to i64*
  %5561 = load i64, i64* %5560
  store i64 %5561, i64* %RAX.i455, align 8
  store %struct.Memory* %loadMem_43e3ec, %struct.Memory** %MEMORY
  %loadMem_43e3ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5563 = getelementptr inbounds %struct.GPR, %struct.GPR* %5562, i32 0, i32 33
  %5564 = getelementptr inbounds %struct.Reg, %struct.Reg* %5563, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %5564 to i64*
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5566 = getelementptr inbounds %struct.GPR, %struct.GPR* %5565, i32 0, i32 9
  %5567 = getelementptr inbounds %struct.Reg, %struct.Reg* %5566, i32 0, i32 0
  %RSI.i452 = bitcast %union.anon* %5567 to i64*
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5569 = getelementptr inbounds %struct.GPR, %struct.GPR* %5568, i32 0, i32 15
  %5570 = getelementptr inbounds %struct.Reg, %struct.Reg* %5569, i32 0, i32 0
  %RBP.i453 = bitcast %union.anon* %5570 to i64*
  %5571 = load i64, i64* %RBP.i453
  %5572 = sub i64 %5571, 38
  %5573 = load i64, i64* %PC.i451
  %5574 = add i64 %5573, 5
  store i64 %5574, i64* %PC.i451
  %5575 = inttoptr i64 %5572 to i16*
  %5576 = load i16, i16* %5575
  %5577 = sext i16 %5576 to i64
  store i64 %5577, i64* %RSI.i452, align 8
  store %struct.Memory* %loadMem_43e3ef, %struct.Memory** %MEMORY
  %loadMem_43e3f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5579 = getelementptr inbounds %struct.GPR, %struct.GPR* %5578, i32 0, i32 33
  %5580 = getelementptr inbounds %struct.Reg, %struct.Reg* %5579, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %5580 to i64*
  %5581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5582 = getelementptr inbounds %struct.GPR, %struct.GPR* %5581, i32 0, i32 1
  %5583 = getelementptr inbounds %struct.Reg, %struct.Reg* %5582, i32 0, i32 0
  %RAX.i449 = bitcast %union.anon* %5583 to i64*
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5585 = getelementptr inbounds %struct.GPR, %struct.GPR* %5584, i32 0, i32 9
  %5586 = getelementptr inbounds %struct.Reg, %struct.Reg* %5585, i32 0, i32 0
  %RSI.i450 = bitcast %union.anon* %5586 to i64*
  %5587 = load i64, i64* %RAX.i449
  %5588 = load i64, i64* %RSI.i450
  %5589 = mul i64 %5588, 8
  %5590 = add i64 %5589, %5587
  %5591 = load i64, i64* %PC.i448
  %5592 = add i64 %5591, 4
  store i64 %5592, i64* %PC.i448
  %5593 = inttoptr i64 %5590 to i64*
  %5594 = load i64, i64* %5593
  store i64 %5594, i64* %RAX.i449, align 8
  store %struct.Memory* %loadMem_43e3f4, %struct.Memory** %MEMORY
  %loadMem_43e3f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5596 = getelementptr inbounds %struct.GPR, %struct.GPR* %5595, i32 0, i32 33
  %5597 = getelementptr inbounds %struct.Reg, %struct.Reg* %5596, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %5597 to i64*
  %5598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5599 = getelementptr inbounds %struct.GPR, %struct.GPR* %5598, i32 0, i32 1
  %5600 = getelementptr inbounds %struct.Reg, %struct.Reg* %5599, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %5600 to i64*
  %5601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5602 = getelementptr inbounds %struct.GPR, %struct.GPR* %5601, i32 0, i32 7
  %5603 = getelementptr inbounds %struct.Reg, %struct.Reg* %5602, i32 0, i32 0
  %RDX.i447 = bitcast %union.anon* %5603 to i64*
  %5604 = load i64, i64* %RDX.i447
  %5605 = load i64, i64* %RAX.i446
  %5606 = load i64, i64* %PC.i445
  %5607 = add i64 %5606, 2
  store i64 %5607, i64* %PC.i445
  %5608 = trunc i64 %5604 to i32
  %5609 = inttoptr i64 %5605 to i32*
  %5610 = load i32, i32* %5609
  %5611 = add i32 %5610, %5608
  %5612 = zext i32 %5611 to i64
  store i64 %5612, i64* %RDX.i447, align 8
  %5613 = icmp ult i32 %5611, %5608
  %5614 = icmp ult i32 %5611, %5610
  %5615 = or i1 %5613, %5614
  %5616 = zext i1 %5615 to i8
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5616, i8* %5617, align 1
  %5618 = and i32 %5611, 255
  %5619 = call i32 @llvm.ctpop.i32(i32 %5618)
  %5620 = trunc i32 %5619 to i8
  %5621 = and i8 %5620, 1
  %5622 = xor i8 %5621, 1
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5622, i8* %5623, align 1
  %5624 = xor i32 %5610, %5608
  %5625 = xor i32 %5624, %5611
  %5626 = lshr i32 %5625, 4
  %5627 = trunc i32 %5626 to i8
  %5628 = and i8 %5627, 1
  %5629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5628, i8* %5629, align 1
  %5630 = icmp eq i32 %5611, 0
  %5631 = zext i1 %5630 to i8
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5631, i8* %5632, align 1
  %5633 = lshr i32 %5611, 31
  %5634 = trunc i32 %5633 to i8
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5634, i8* %5635, align 1
  %5636 = lshr i32 %5608, 31
  %5637 = lshr i32 %5610, 31
  %5638 = xor i32 %5633, %5636
  %5639 = xor i32 %5633, %5637
  %5640 = add i32 %5638, %5639
  %5641 = icmp eq i32 %5640, 2
  %5642 = zext i1 %5641 to i8
  %5643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5642, i8* %5643, align 1
  store %struct.Memory* %loadMem_43e3f8, %struct.Memory** %MEMORY
  %loadMem_43e3fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 33
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %5646 to i64*
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5648 = getelementptr inbounds %struct.GPR, %struct.GPR* %5647, i32 0, i32 7
  %5649 = getelementptr inbounds %struct.Reg, %struct.Reg* %5648, i32 0, i32 0
  %EDX.i443 = bitcast %union.anon* %5649 to i32*
  %5650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5651 = getelementptr inbounds %struct.GPR, %struct.GPR* %5650, i32 0, i32 11
  %5652 = getelementptr inbounds %struct.Reg, %struct.Reg* %5651, i32 0, i32 0
  %RDI.i444 = bitcast %union.anon* %5652 to i64*
  %5653 = load i32, i32* %EDX.i443
  %5654 = zext i32 %5653 to i64
  %5655 = load i64, i64* %PC.i442
  %5656 = add i64 %5655, 2
  store i64 %5656, i64* %PC.i442
  %5657 = and i64 %5654, 4294967295
  store i64 %5657, i64* %RDI.i444, align 8
  store %struct.Memory* %loadMem_43e3fa, %struct.Memory** %MEMORY
  %loadMem1_43e3fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5659 = getelementptr inbounds %struct.GPR, %struct.GPR* %5658, i32 0, i32 33
  %5660 = getelementptr inbounds %struct.Reg, %struct.Reg* %5659, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %5660 to i64*
  %5661 = load i64, i64* %PC.i441
  %5662 = add i64 %5661, -11596
  %5663 = load i64, i64* %PC.i441
  %5664 = add i64 %5663, 5
  %5665 = load i64, i64* %PC.i441
  %5666 = add i64 %5665, 5
  store i64 %5666, i64* %PC.i441
  %5667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5668 = load i64, i64* %5667, align 8
  %5669 = add i64 %5668, -8
  %5670 = inttoptr i64 %5669 to i64*
  store i64 %5664, i64* %5670
  store i64 %5669, i64* %5667, align 8
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5662, i64* %5671, align 8
  store %struct.Memory* %loadMem1_43e3fc, %struct.Memory** %MEMORY
  %loadMem2_43e3fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43e3fc = load i64, i64* %3
  %call2_43e3fc = call %struct.Memory* @sub_43b6b0.clip1a(%struct.State* %0, i64 %loadPC_43e3fc, %struct.Memory* %loadMem2_43e3fc)
  store %struct.Memory* %call2_43e3fc, %struct.Memory** %MEMORY
  %loadMem_43e401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5673 = getelementptr inbounds %struct.GPR, %struct.GPR* %5672, i32 0, i32 33
  %5674 = getelementptr inbounds %struct.Reg, %struct.Reg* %5673, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %5674 to i64*
  %5675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5676 = getelementptr inbounds %struct.GPR, %struct.GPR* %5675, i32 0, i32 1
  %5677 = getelementptr inbounds %struct.Reg, %struct.Reg* %5676, i32 0, i32 0
  %AX.i439 = bitcast %union.anon* %5677 to i16*
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5679 = getelementptr inbounds %struct.GPR, %struct.GPR* %5678, i32 0, i32 17
  %5680 = getelementptr inbounds %struct.Reg, %struct.Reg* %5679, i32 0, i32 0
  %R8W.i440 = bitcast %union.anon* %5680 to i16*
  %5681 = load i16, i16* %AX.i439
  %5682 = zext i16 %5681 to i64
  %5683 = load i64, i64* %PC.i438
  %5684 = add i64 %5683, 4
  store i64 %5684, i64* %PC.i438
  store i16 %5681, i16* %R8W.i440, align 2
  store %struct.Memory* %loadMem_43e401, %struct.Memory** %MEMORY
  %loadMem_43e405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5686 = getelementptr inbounds %struct.GPR, %struct.GPR* %5685, i32 0, i32 33
  %5687 = getelementptr inbounds %struct.Reg, %struct.Reg* %5686, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %5687 to i64*
  %5688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5689 = getelementptr inbounds %struct.GPR, %struct.GPR* %5688, i32 0, i32 9
  %5690 = getelementptr inbounds %struct.Reg, %struct.Reg* %5689, i32 0, i32 0
  %RSI.i437 = bitcast %union.anon* %5690 to i64*
  %5691 = load i64, i64* %PC.i436
  %5692 = add i64 %5691, 8
  store i64 %5692, i64* %PC.i436
  %5693 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5693, i64* %RSI.i437, align 8
  store %struct.Memory* %loadMem_43e405, %struct.Memory** %MEMORY
  %loadMem_43e40d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5695 = getelementptr inbounds %struct.GPR, %struct.GPR* %5694, i32 0, i32 33
  %5696 = getelementptr inbounds %struct.Reg, %struct.Reg* %5695, i32 0, i32 0
  %PC.i434 = bitcast %union.anon* %5696 to i64*
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5698 = getelementptr inbounds %struct.GPR, %struct.GPR* %5697, i32 0, i32 9
  %5699 = getelementptr inbounds %struct.Reg, %struct.Reg* %5698, i32 0, i32 0
  %RSI.i435 = bitcast %union.anon* %5699 to i64*
  %5700 = load i64, i64* %RSI.i435
  %5701 = load i64, i64* %PC.i434
  %5702 = add i64 %5701, 7
  store i64 %5702, i64* %PC.i434
  %5703 = add i64 12600, %5700
  store i64 %5703, i64* %RSI.i435, align 8
  %5704 = icmp ult i64 %5703, %5700
  %5705 = icmp ult i64 %5703, 12600
  %5706 = or i1 %5704, %5705
  %5707 = zext i1 %5706 to i8
  %5708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5707, i8* %5708, align 1
  %5709 = trunc i64 %5703 to i32
  %5710 = and i32 %5709, 255
  %5711 = call i32 @llvm.ctpop.i32(i32 %5710)
  %5712 = trunc i32 %5711 to i8
  %5713 = and i8 %5712, 1
  %5714 = xor i8 %5713, 1
  %5715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5714, i8* %5715, align 1
  %5716 = xor i64 12600, %5700
  %5717 = xor i64 %5716, %5703
  %5718 = lshr i64 %5717, 4
  %5719 = trunc i64 %5718 to i8
  %5720 = and i8 %5719, 1
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5720, i8* %5721, align 1
  %5722 = icmp eq i64 %5703, 0
  %5723 = zext i1 %5722 to i8
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5723, i8* %5724, align 1
  %5725 = lshr i64 %5703, 63
  %5726 = trunc i64 %5725 to i8
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5726, i8* %5727, align 1
  %5728 = lshr i64 %5700, 63
  %5729 = xor i64 %5725, %5728
  %5730 = add i64 %5729, %5725
  %5731 = icmp eq i64 %5730, 2
  %5732 = zext i1 %5731 to i8
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5732, i8* %5733, align 1
  store %struct.Memory* %loadMem_43e40d, %struct.Memory** %MEMORY
  %loadMem_43e414 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5735 = getelementptr inbounds %struct.GPR, %struct.GPR* %5734, i32 0, i32 33
  %5736 = getelementptr inbounds %struct.Reg, %struct.Reg* %5735, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %5736 to i64*
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5738 = getelementptr inbounds %struct.GPR, %struct.GPR* %5737, i32 0, i32 15
  %5739 = getelementptr inbounds %struct.Reg, %struct.Reg* %5738, i32 0, i32 0
  %RBP.i432 = bitcast %union.anon* %5739 to i64*
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5741 = getelementptr inbounds %struct.GPR, %struct.GPR* %5740, i32 0, i32 19
  %5742 = getelementptr inbounds %struct.Reg, %struct.Reg* %5741, i32 0, i32 0
  %R9.i433 = bitcast %union.anon* %5742 to i64*
  %5743 = load i64, i64* %RBP.i432
  %5744 = sub i64 %5743, 44
  %5745 = load i64, i64* %PC.i431
  %5746 = add i64 %5745, 4
  store i64 %5746, i64* %PC.i431
  %5747 = inttoptr i64 %5744 to i32*
  %5748 = load i32, i32* %5747
  %5749 = sext i32 %5748 to i64
  store i64 %5749, i64* %R9.i433, align 8
  store %struct.Memory* %loadMem_43e414, %struct.Memory** %MEMORY
  %loadMem_43e418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 33
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %5752 to i64*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5754 = getelementptr inbounds %struct.GPR, %struct.GPR* %5753, i32 0, i32 19
  %5755 = getelementptr inbounds %struct.Reg, %struct.Reg* %5754, i32 0, i32 0
  %R9.i430 = bitcast %union.anon* %5755 to i64*
  %5756 = load i64, i64* %R9.i430
  %5757 = load i64, i64* %PC.i429
  %5758 = add i64 %5757, 4
  store i64 %5758, i64* %PC.i429
  %5759 = shl i64 %5756, 4
  %5760 = icmp slt i64 %5759, 0
  %5761 = shl i64 %5759, 1
  store i64 %5761, i64* %R9.i430, align 8
  %5762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5763 = zext i1 %5760 to i8
  store i8 %5763, i8* %5762, align 1
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5765 = trunc i64 %5761 to i32
  %5766 = and i32 %5765, 254
  %5767 = call i32 @llvm.ctpop.i32(i32 %5766)
  %5768 = trunc i32 %5767 to i8
  %5769 = and i8 %5768, 1
  %5770 = xor i8 %5769, 1
  store i8 %5770, i8* %5764, align 1
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5771, align 1
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5773 = icmp eq i64 %5761, 0
  %5774 = zext i1 %5773 to i8
  store i8 %5774, i8* %5772, align 1
  %5775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5776 = lshr i64 %5761, 63
  %5777 = trunc i64 %5776 to i8
  store i8 %5777, i8* %5775, align 1
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5778, align 1
  store %struct.Memory* %loadMem_43e418, %struct.Memory** %MEMORY
  %loadMem_43e41c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5780 = getelementptr inbounds %struct.GPR, %struct.GPR* %5779, i32 0, i32 33
  %5781 = getelementptr inbounds %struct.Reg, %struct.Reg* %5780, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %5781 to i64*
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5783 = getelementptr inbounds %struct.GPR, %struct.GPR* %5782, i32 0, i32 9
  %5784 = getelementptr inbounds %struct.Reg, %struct.Reg* %5783, i32 0, i32 0
  %RSI.i427 = bitcast %union.anon* %5784 to i64*
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5786 = getelementptr inbounds %struct.GPR, %struct.GPR* %5785, i32 0, i32 19
  %5787 = getelementptr inbounds %struct.Reg, %struct.Reg* %5786, i32 0, i32 0
  %R9.i428 = bitcast %union.anon* %5787 to i64*
  %5788 = load i64, i64* %RSI.i427
  %5789 = load i64, i64* %R9.i428
  %5790 = load i64, i64* %PC.i426
  %5791 = add i64 %5790, 3
  store i64 %5791, i64* %PC.i426
  %5792 = add i64 %5789, %5788
  store i64 %5792, i64* %RSI.i427, align 8
  %5793 = icmp ult i64 %5792, %5788
  %5794 = icmp ult i64 %5792, %5789
  %5795 = or i1 %5793, %5794
  %5796 = zext i1 %5795 to i8
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5796, i8* %5797, align 1
  %5798 = trunc i64 %5792 to i32
  %5799 = and i32 %5798, 255
  %5800 = call i32 @llvm.ctpop.i32(i32 %5799)
  %5801 = trunc i32 %5800 to i8
  %5802 = and i8 %5801, 1
  %5803 = xor i8 %5802, 1
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5803, i8* %5804, align 1
  %5805 = xor i64 %5789, %5788
  %5806 = xor i64 %5805, %5792
  %5807 = lshr i64 %5806, 4
  %5808 = trunc i64 %5807 to i8
  %5809 = and i8 %5808, 1
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5809, i8* %5810, align 1
  %5811 = icmp eq i64 %5792, 0
  %5812 = zext i1 %5811 to i8
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5812, i8* %5813, align 1
  %5814 = lshr i64 %5792, 63
  %5815 = trunc i64 %5814 to i8
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5815, i8* %5816, align 1
  %5817 = lshr i64 %5788, 63
  %5818 = lshr i64 %5789, 63
  %5819 = xor i64 %5814, %5817
  %5820 = xor i64 %5814, %5818
  %5821 = add i64 %5819, %5820
  %5822 = icmp eq i64 %5821, 2
  %5823 = zext i1 %5822 to i8
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5823, i8* %5824, align 1
  store %struct.Memory* %loadMem_43e41c, %struct.Memory** %MEMORY
  %loadMem_43e41f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5826 = getelementptr inbounds %struct.GPR, %struct.GPR* %5825, i32 0, i32 33
  %5827 = getelementptr inbounds %struct.Reg, %struct.Reg* %5826, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %5827 to i64*
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5829 = getelementptr inbounds %struct.GPR, %struct.GPR* %5828, i32 0, i32 15
  %5830 = getelementptr inbounds %struct.Reg, %struct.Reg* %5829, i32 0, i32 0
  %RBP.i424 = bitcast %union.anon* %5830 to i64*
  %5831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5832 = getelementptr inbounds %struct.GPR, %struct.GPR* %5831, i32 0, i32 19
  %5833 = getelementptr inbounds %struct.Reg, %struct.Reg* %5832, i32 0, i32 0
  %R9.i425 = bitcast %union.anon* %5833 to i64*
  %5834 = load i64, i64* %RBP.i424
  %5835 = sub i64 %5834, 48
  %5836 = load i64, i64* %PC.i423
  %5837 = add i64 %5836, 4
  store i64 %5837, i64* %PC.i423
  %5838 = inttoptr i64 %5835 to i32*
  %5839 = load i32, i32* %5838
  %5840 = sext i32 %5839 to i64
  store i64 %5840, i64* %R9.i425, align 8
  store %struct.Memory* %loadMem_43e41f, %struct.Memory** %MEMORY
  %loadMem_43e423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5842 = getelementptr inbounds %struct.GPR, %struct.GPR* %5841, i32 0, i32 33
  %5843 = getelementptr inbounds %struct.Reg, %struct.Reg* %5842, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %5843 to i64*
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5845 = getelementptr inbounds %struct.GPR, %struct.GPR* %5844, i32 0, i32 17
  %5846 = getelementptr inbounds %struct.Reg, %struct.Reg* %5845, i32 0, i32 0
  %R8W.i420 = bitcast %union.anon* %5846 to i16*
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 9
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %RSI.i421 = bitcast %union.anon* %5849 to i64*
  %5850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5851 = getelementptr inbounds %struct.GPR, %struct.GPR* %5850, i32 0, i32 19
  %5852 = getelementptr inbounds %struct.Reg, %struct.Reg* %5851, i32 0, i32 0
  %R9.i422 = bitcast %union.anon* %5852 to i64*
  %5853 = load i64, i64* %RSI.i421
  %5854 = load i64, i64* %R9.i422
  %5855 = mul i64 %5854, 2
  %5856 = add i64 %5855, %5853
  %5857 = load i16, i16* %R8W.i420
  %5858 = zext i16 %5857 to i64
  %5859 = load i64, i64* %PC.i419
  %5860 = add i64 %5859, 5
  store i64 %5860, i64* %PC.i419
  %5861 = inttoptr i64 %5856 to i16*
  store i16 %5857, i16* %5861
  store %struct.Memory* %loadMem_43e423, %struct.Memory** %MEMORY
  %loadMem_43e428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5863 = getelementptr inbounds %struct.GPR, %struct.GPR* %5862, i32 0, i32 33
  %5864 = getelementptr inbounds %struct.Reg, %struct.Reg* %5863, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %5864 to i64*
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5866 = getelementptr inbounds %struct.GPR, %struct.GPR* %5865, i32 0, i32 1
  %5867 = getelementptr inbounds %struct.Reg, %struct.Reg* %5866, i32 0, i32 0
  %RAX.i417 = bitcast %union.anon* %5867 to i64*
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5869 = getelementptr inbounds %struct.GPR, %struct.GPR* %5868, i32 0, i32 15
  %5870 = getelementptr inbounds %struct.Reg, %struct.Reg* %5869, i32 0, i32 0
  %RBP.i418 = bitcast %union.anon* %5870 to i64*
  %5871 = load i64, i64* %RBP.i418
  %5872 = sub i64 %5871, 44
  %5873 = load i64, i64* %PC.i416
  %5874 = add i64 %5873, 3
  store i64 %5874, i64* %PC.i416
  %5875 = inttoptr i64 %5872 to i32*
  %5876 = load i32, i32* %5875
  %5877 = zext i32 %5876 to i64
  store i64 %5877, i64* %RAX.i417, align 8
  store %struct.Memory* %loadMem_43e428, %struct.Memory** %MEMORY
  %loadMem_43e42b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5879 = getelementptr inbounds %struct.GPR, %struct.GPR* %5878, i32 0, i32 33
  %5880 = getelementptr inbounds %struct.Reg, %struct.Reg* %5879, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %5880 to i64*
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5882 = getelementptr inbounds %struct.GPR, %struct.GPR* %5881, i32 0, i32 1
  %5883 = getelementptr inbounds %struct.Reg, %struct.Reg* %5882, i32 0, i32 0
  %RAX.i415 = bitcast %union.anon* %5883 to i64*
  %5884 = load i64, i64* %RAX.i415
  %5885 = load i64, i64* %PC.i414
  %5886 = add i64 %5885, 3
  store i64 %5886, i64* %PC.i414
  %5887 = trunc i64 %5884 to i32
  %5888 = add i32 1, %5887
  %5889 = zext i32 %5888 to i64
  store i64 %5889, i64* %RAX.i415, align 8
  %5890 = icmp ult i32 %5888, %5887
  %5891 = icmp ult i32 %5888, 1
  %5892 = or i1 %5890, %5891
  %5893 = zext i1 %5892 to i8
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5893, i8* %5894, align 1
  %5895 = and i32 %5888, 255
  %5896 = call i32 @llvm.ctpop.i32(i32 %5895)
  %5897 = trunc i32 %5896 to i8
  %5898 = and i8 %5897, 1
  %5899 = xor i8 %5898, 1
  %5900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5899, i8* %5900, align 1
  %5901 = xor i64 1, %5884
  %5902 = trunc i64 %5901 to i32
  %5903 = xor i32 %5902, %5888
  %5904 = lshr i32 %5903, 4
  %5905 = trunc i32 %5904 to i8
  %5906 = and i8 %5905, 1
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5906, i8* %5907, align 1
  %5908 = icmp eq i32 %5888, 0
  %5909 = zext i1 %5908 to i8
  %5910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5909, i8* %5910, align 1
  %5911 = lshr i32 %5888, 31
  %5912 = trunc i32 %5911 to i8
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5912, i8* %5913, align 1
  %5914 = lshr i32 %5887, 31
  %5915 = xor i32 %5911, %5914
  %5916 = add i32 %5915, %5911
  %5917 = icmp eq i32 %5916, 2
  %5918 = zext i1 %5917 to i8
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5918, i8* %5919, align 1
  store %struct.Memory* %loadMem_43e42b, %struct.Memory** %MEMORY
  %loadMem_43e42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5921 = getelementptr inbounds %struct.GPR, %struct.GPR* %5920, i32 0, i32 33
  %5922 = getelementptr inbounds %struct.Reg, %struct.Reg* %5921, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %5922 to i64*
  %5923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5924 = getelementptr inbounds %struct.GPR, %struct.GPR* %5923, i32 0, i32 1
  %5925 = getelementptr inbounds %struct.Reg, %struct.Reg* %5924, i32 0, i32 0
  %EAX.i412 = bitcast %union.anon* %5925 to i32*
  %5926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5927 = getelementptr inbounds %struct.GPR, %struct.GPR* %5926, i32 0, i32 15
  %5928 = getelementptr inbounds %struct.Reg, %struct.Reg* %5927, i32 0, i32 0
  %RBP.i413 = bitcast %union.anon* %5928 to i64*
  %5929 = load i64, i64* %RBP.i413
  %5930 = sub i64 %5929, 44
  %5931 = load i32, i32* %EAX.i412
  %5932 = zext i32 %5931 to i64
  %5933 = load i64, i64* %PC.i411
  %5934 = add i64 %5933, 3
  store i64 %5934, i64* %PC.i411
  %5935 = inttoptr i64 %5930 to i32*
  store i32 %5931, i32* %5935
  store %struct.Memory* %loadMem_43e42e, %struct.Memory** %MEMORY
  %loadMem_43e431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5937 = getelementptr inbounds %struct.GPR, %struct.GPR* %5936, i32 0, i32 33
  %5938 = getelementptr inbounds %struct.Reg, %struct.Reg* %5937, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %5938 to i64*
  %5939 = load i64, i64* %PC.i410
  %5940 = add i64 %5939, -145
  %5941 = load i64, i64* %PC.i410
  %5942 = add i64 %5941, 5
  store i64 %5942, i64* %PC.i410
  %5943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5940, i64* %5943, align 8
  store %struct.Memory* %loadMem_43e431, %struct.Memory** %MEMORY
  br label %block_.L_43e3a0

block_.L_43e436:                                  ; preds = %block_.L_43e3a0
  %loadMem_43e436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5945 = getelementptr inbounds %struct.GPR, %struct.GPR* %5944, i32 0, i32 33
  %5946 = getelementptr inbounds %struct.Reg, %struct.Reg* %5945, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %5946 to i64*
  %5947 = load i64, i64* %PC.i409
  %5948 = add i64 %5947, 5
  %5949 = load i64, i64* %PC.i409
  %5950 = add i64 %5949, 5
  store i64 %5950, i64* %PC.i409
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5948, i64* %5951, align 8
  store %struct.Memory* %loadMem_43e436, %struct.Memory** %MEMORY
  br label %block_.L_43e43b

block_.L_43e43b:                                  ; preds = %block_.L_43e436
  %loadMem_43e43b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5953 = getelementptr inbounds %struct.GPR, %struct.GPR* %5952, i32 0, i32 33
  %5954 = getelementptr inbounds %struct.Reg, %struct.Reg* %5953, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %5954 to i64*
  %5955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5956 = getelementptr inbounds %struct.GPR, %struct.GPR* %5955, i32 0, i32 1
  %5957 = getelementptr inbounds %struct.Reg, %struct.Reg* %5956, i32 0, i32 0
  %RAX.i407 = bitcast %union.anon* %5957 to i64*
  %5958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5959 = getelementptr inbounds %struct.GPR, %struct.GPR* %5958, i32 0, i32 15
  %5960 = getelementptr inbounds %struct.Reg, %struct.Reg* %5959, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %5960 to i64*
  %5961 = load i64, i64* %RBP.i408
  %5962 = sub i64 %5961, 48
  %5963 = load i64, i64* %PC.i406
  %5964 = add i64 %5963, 3
  store i64 %5964, i64* %PC.i406
  %5965 = inttoptr i64 %5962 to i32*
  %5966 = load i32, i32* %5965
  %5967 = zext i32 %5966 to i64
  store i64 %5967, i64* %RAX.i407, align 8
  store %struct.Memory* %loadMem_43e43b, %struct.Memory** %MEMORY
  %loadMem_43e43e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5969 = getelementptr inbounds %struct.GPR, %struct.GPR* %5968, i32 0, i32 33
  %5970 = getelementptr inbounds %struct.Reg, %struct.Reg* %5969, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %5970 to i64*
  %5971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5972 = getelementptr inbounds %struct.GPR, %struct.GPR* %5971, i32 0, i32 1
  %5973 = getelementptr inbounds %struct.Reg, %struct.Reg* %5972, i32 0, i32 0
  %RAX.i405 = bitcast %union.anon* %5973 to i64*
  %5974 = load i64, i64* %RAX.i405
  %5975 = load i64, i64* %PC.i404
  %5976 = add i64 %5975, 3
  store i64 %5976, i64* %PC.i404
  %5977 = trunc i64 %5974 to i32
  %5978 = add i32 1, %5977
  %5979 = zext i32 %5978 to i64
  store i64 %5979, i64* %RAX.i405, align 8
  %5980 = icmp ult i32 %5978, %5977
  %5981 = icmp ult i32 %5978, 1
  %5982 = or i1 %5980, %5981
  %5983 = zext i1 %5982 to i8
  %5984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5983, i8* %5984, align 1
  %5985 = and i32 %5978, 255
  %5986 = call i32 @llvm.ctpop.i32(i32 %5985)
  %5987 = trunc i32 %5986 to i8
  %5988 = and i8 %5987, 1
  %5989 = xor i8 %5988, 1
  %5990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5989, i8* %5990, align 1
  %5991 = xor i64 1, %5974
  %5992 = trunc i64 %5991 to i32
  %5993 = xor i32 %5992, %5978
  %5994 = lshr i32 %5993, 4
  %5995 = trunc i32 %5994 to i8
  %5996 = and i8 %5995, 1
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5996, i8* %5997, align 1
  %5998 = icmp eq i32 %5978, 0
  %5999 = zext i1 %5998 to i8
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5999, i8* %6000, align 1
  %6001 = lshr i32 %5978, 31
  %6002 = trunc i32 %6001 to i8
  %6003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6002, i8* %6003, align 1
  %6004 = lshr i32 %5977, 31
  %6005 = xor i32 %6001, %6004
  %6006 = add i32 %6005, %6001
  %6007 = icmp eq i32 %6006, 2
  %6008 = zext i1 %6007 to i8
  %6009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6008, i8* %6009, align 1
  store %struct.Memory* %loadMem_43e43e, %struct.Memory** %MEMORY
  %loadMem_43e441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6011 = getelementptr inbounds %struct.GPR, %struct.GPR* %6010, i32 0, i32 33
  %6012 = getelementptr inbounds %struct.Reg, %struct.Reg* %6011, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %6012 to i64*
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6014 = getelementptr inbounds %struct.GPR, %struct.GPR* %6013, i32 0, i32 1
  %6015 = getelementptr inbounds %struct.Reg, %struct.Reg* %6014, i32 0, i32 0
  %EAX.i402 = bitcast %union.anon* %6015 to i32*
  %6016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6017 = getelementptr inbounds %struct.GPR, %struct.GPR* %6016, i32 0, i32 15
  %6018 = getelementptr inbounds %struct.Reg, %struct.Reg* %6017, i32 0, i32 0
  %RBP.i403 = bitcast %union.anon* %6018 to i64*
  %6019 = load i64, i64* %RBP.i403
  %6020 = sub i64 %6019, 48
  %6021 = load i32, i32* %EAX.i402
  %6022 = zext i32 %6021 to i64
  %6023 = load i64, i64* %PC.i401
  %6024 = add i64 %6023, 3
  store i64 %6024, i64* %PC.i401
  %6025 = inttoptr i64 %6020 to i32*
  store i32 %6021, i32* %6025
  store %struct.Memory* %loadMem_43e441, %struct.Memory** %MEMORY
  %loadMem_43e444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 33
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %6028 to i64*
  %6029 = load i64, i64* %PC.i400
  %6030 = add i64 %6029, -182
  %6031 = load i64, i64* %PC.i400
  %6032 = add i64 %6031, 5
  store i64 %6032, i64* %PC.i400
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6030, i64* %6033, align 8
  store %struct.Memory* %loadMem_43e444, %struct.Memory** %MEMORY
  br label %block_.L_43e38e

block_.L_43e449:                                  ; preds = %block_.L_43e38e
  %loadMem_43e449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6035 = getelementptr inbounds %struct.GPR, %struct.GPR* %6034, i32 0, i32 33
  %6036 = getelementptr inbounds %struct.Reg, %struct.Reg* %6035, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %6036 to i64*
  %6037 = load i64, i64* %PC.i399
  %6038 = add i64 %6037, 205
  %6039 = load i64, i64* %PC.i399
  %6040 = add i64 %6039, 5
  store i64 %6040, i64* %PC.i399
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6038, i64* %6041, align 8
  store %struct.Memory* %loadMem_43e449, %struct.Memory** %MEMORY
  br label %block_.L_43e516

block_.L_43e44e:                                  ; preds = %block_.L_43e37e
  %loadMem_43e44e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6043 = getelementptr inbounds %struct.GPR, %struct.GPR* %6042, i32 0, i32 33
  %6044 = getelementptr inbounds %struct.Reg, %struct.Reg* %6043, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %6044 to i64*
  %6045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6046 = getelementptr inbounds %struct.GPR, %struct.GPR* %6045, i32 0, i32 1
  %6047 = getelementptr inbounds %struct.Reg, %struct.Reg* %6046, i32 0, i32 0
  %RAX.i397 = bitcast %union.anon* %6047 to i64*
  %6048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6049 = getelementptr inbounds %struct.GPR, %struct.GPR* %6048, i32 0, i32 15
  %6050 = getelementptr inbounds %struct.Reg, %struct.Reg* %6049, i32 0, i32 0
  %RBP.i398 = bitcast %union.anon* %6050 to i64*
  %6051 = load i64, i64* %RBP.i398
  %6052 = sub i64 %6051, 24
  %6053 = load i64, i64* %PC.i396
  %6054 = add i64 %6053, 3
  store i64 %6054, i64* %PC.i396
  %6055 = inttoptr i64 %6052 to i32*
  %6056 = load i32, i32* %6055
  %6057 = zext i32 %6056 to i64
  store i64 %6057, i64* %RAX.i397, align 8
  store %struct.Memory* %loadMem_43e44e, %struct.Memory** %MEMORY
  %loadMem_43e451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6059 = getelementptr inbounds %struct.GPR, %struct.GPR* %6058, i32 0, i32 33
  %6060 = getelementptr inbounds %struct.Reg, %struct.Reg* %6059, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %6060 to i64*
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6062 = getelementptr inbounds %struct.GPR, %struct.GPR* %6061, i32 0, i32 1
  %6063 = getelementptr inbounds %struct.Reg, %struct.Reg* %6062, i32 0, i32 0
  %EAX.i394 = bitcast %union.anon* %6063 to i32*
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6065 = getelementptr inbounds %struct.GPR, %struct.GPR* %6064, i32 0, i32 15
  %6066 = getelementptr inbounds %struct.Reg, %struct.Reg* %6065, i32 0, i32 0
  %RBP.i395 = bitcast %union.anon* %6066 to i64*
  %6067 = load i64, i64* %RBP.i395
  %6068 = sub i64 %6067, 48
  %6069 = load i32, i32* %EAX.i394
  %6070 = zext i32 %6069 to i64
  %6071 = load i64, i64* %PC.i393
  %6072 = add i64 %6071, 3
  store i64 %6072, i64* %PC.i393
  %6073 = inttoptr i64 %6068 to i32*
  store i32 %6069, i32* %6073
  store %struct.Memory* %loadMem_43e451, %struct.Memory** %MEMORY
  br label %block_.L_43e454

block_.L_43e454:                                  ; preds = %block_.L_43e503, %block_.L_43e44e
  %loadMem_43e454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6075 = getelementptr inbounds %struct.GPR, %struct.GPR* %6074, i32 0, i32 33
  %6076 = getelementptr inbounds %struct.Reg, %struct.Reg* %6075, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %6076 to i64*
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6078 = getelementptr inbounds %struct.GPR, %struct.GPR* %6077, i32 0, i32 1
  %6079 = getelementptr inbounds %struct.Reg, %struct.Reg* %6078, i32 0, i32 0
  %RAX.i391 = bitcast %union.anon* %6079 to i64*
  %6080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6081 = getelementptr inbounds %struct.GPR, %struct.GPR* %6080, i32 0, i32 15
  %6082 = getelementptr inbounds %struct.Reg, %struct.Reg* %6081, i32 0, i32 0
  %RBP.i392 = bitcast %union.anon* %6082 to i64*
  %6083 = load i64, i64* %RBP.i392
  %6084 = sub i64 %6083, 48
  %6085 = load i64, i64* %PC.i390
  %6086 = add i64 %6085, 3
  store i64 %6086, i64* %PC.i390
  %6087 = inttoptr i64 %6084 to i32*
  %6088 = load i32, i32* %6087
  %6089 = zext i32 %6088 to i64
  store i64 %6089, i64* %RAX.i391, align 8
  store %struct.Memory* %loadMem_43e454, %struct.Memory** %MEMORY
  %loadMem_43e457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6091 = getelementptr inbounds %struct.GPR, %struct.GPR* %6090, i32 0, i32 33
  %6092 = getelementptr inbounds %struct.Reg, %struct.Reg* %6091, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %6092 to i64*
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6094 = getelementptr inbounds %struct.GPR, %struct.GPR* %6093, i32 0, i32 1
  %6095 = getelementptr inbounds %struct.Reg, %struct.Reg* %6094, i32 0, i32 0
  %EAX.i388 = bitcast %union.anon* %6095 to i32*
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6097 = getelementptr inbounds %struct.GPR, %struct.GPR* %6096, i32 0, i32 15
  %6098 = getelementptr inbounds %struct.Reg, %struct.Reg* %6097, i32 0, i32 0
  %RBP.i389 = bitcast %union.anon* %6098 to i64*
  %6099 = load i32, i32* %EAX.i388
  %6100 = zext i32 %6099 to i64
  %6101 = load i64, i64* %RBP.i389
  %6102 = sub i64 %6101, 56
  %6103 = load i64, i64* %PC.i387
  %6104 = add i64 %6103, 3
  store i64 %6104, i64* %PC.i387
  %6105 = inttoptr i64 %6102 to i32*
  %6106 = load i32, i32* %6105
  %6107 = sub i32 %6099, %6106
  %6108 = icmp ult i32 %6099, %6106
  %6109 = zext i1 %6108 to i8
  %6110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6109, i8* %6110, align 1
  %6111 = and i32 %6107, 255
  %6112 = call i32 @llvm.ctpop.i32(i32 %6111)
  %6113 = trunc i32 %6112 to i8
  %6114 = and i8 %6113, 1
  %6115 = xor i8 %6114, 1
  %6116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6115, i8* %6116, align 1
  %6117 = xor i32 %6106, %6099
  %6118 = xor i32 %6117, %6107
  %6119 = lshr i32 %6118, 4
  %6120 = trunc i32 %6119 to i8
  %6121 = and i8 %6120, 1
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6121, i8* %6122, align 1
  %6123 = icmp eq i32 %6107, 0
  %6124 = zext i1 %6123 to i8
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6124, i8* %6125, align 1
  %6126 = lshr i32 %6107, 31
  %6127 = trunc i32 %6126 to i8
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6127, i8* %6128, align 1
  %6129 = lshr i32 %6099, 31
  %6130 = lshr i32 %6106, 31
  %6131 = xor i32 %6130, %6129
  %6132 = xor i32 %6126, %6129
  %6133 = add i32 %6132, %6131
  %6134 = icmp eq i32 %6133, 2
  %6135 = zext i1 %6134 to i8
  %6136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6135, i8* %6136, align 1
  store %struct.Memory* %loadMem_43e457, %struct.Memory** %MEMORY
  %loadMem_43e45a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6138 = getelementptr inbounds %struct.GPR, %struct.GPR* %6137, i32 0, i32 33
  %6139 = getelementptr inbounds %struct.Reg, %struct.Reg* %6138, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %6139 to i64*
  %6140 = load i64, i64* %PC.i386
  %6141 = add i64 %6140, 183
  %6142 = load i64, i64* %PC.i386
  %6143 = add i64 %6142, 6
  %6144 = load i64, i64* %PC.i386
  %6145 = add i64 %6144, 6
  store i64 %6145, i64* %PC.i386
  %6146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6147 = load i8, i8* %6146, align 1
  %6148 = icmp ne i8 %6147, 0
  %6149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6150 = load i8, i8* %6149, align 1
  %6151 = icmp ne i8 %6150, 0
  %6152 = xor i1 %6148, %6151
  %6153 = xor i1 %6152, true
  %6154 = zext i1 %6153 to i8
  store i8 %6154, i8* %BRANCH_TAKEN, align 1
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6156 = select i1 %6152, i64 %6143, i64 %6141
  store i64 %6156, i64* %6155, align 8
  store %struct.Memory* %loadMem_43e45a, %struct.Memory** %MEMORY
  %loadBr_43e45a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e45a = icmp eq i8 %loadBr_43e45a, 1
  br i1 %cmpBr_43e45a, label %block_.L_43e511, label %block_43e460

block_43e460:                                     ; preds = %block_.L_43e454
  %loadMem_43e460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6158 = getelementptr inbounds %struct.GPR, %struct.GPR* %6157, i32 0, i32 33
  %6159 = getelementptr inbounds %struct.Reg, %struct.Reg* %6158, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %6159 to i64*
  %6160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6161 = getelementptr inbounds %struct.GPR, %struct.GPR* %6160, i32 0, i32 1
  %6162 = getelementptr inbounds %struct.Reg, %struct.Reg* %6161, i32 0, i32 0
  %RAX.i384 = bitcast %union.anon* %6162 to i64*
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6164 = getelementptr inbounds %struct.GPR, %struct.GPR* %6163, i32 0, i32 15
  %6165 = getelementptr inbounds %struct.Reg, %struct.Reg* %6164, i32 0, i32 0
  %RBP.i385 = bitcast %union.anon* %6165 to i64*
  %6166 = load i64, i64* %RBP.i385
  %6167 = sub i64 %6166, 20
  %6168 = load i64, i64* %PC.i383
  %6169 = add i64 %6168, 3
  store i64 %6169, i64* %PC.i383
  %6170 = inttoptr i64 %6167 to i32*
  %6171 = load i32, i32* %6170
  %6172 = zext i32 %6171 to i64
  store i64 %6172, i64* %RAX.i384, align 8
  store %struct.Memory* %loadMem_43e460, %struct.Memory** %MEMORY
  %loadMem_43e463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6174 = getelementptr inbounds %struct.GPR, %struct.GPR* %6173, i32 0, i32 33
  %6175 = getelementptr inbounds %struct.Reg, %struct.Reg* %6174, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %6175 to i64*
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6177 = getelementptr inbounds %struct.GPR, %struct.GPR* %6176, i32 0, i32 1
  %6178 = getelementptr inbounds %struct.Reg, %struct.Reg* %6177, i32 0, i32 0
  %EAX.i381 = bitcast %union.anon* %6178 to i32*
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6180 = getelementptr inbounds %struct.GPR, %struct.GPR* %6179, i32 0, i32 15
  %6181 = getelementptr inbounds %struct.Reg, %struct.Reg* %6180, i32 0, i32 0
  %RBP.i382 = bitcast %union.anon* %6181 to i64*
  %6182 = load i64, i64* %RBP.i382
  %6183 = sub i64 %6182, 44
  %6184 = load i32, i32* %EAX.i381
  %6185 = zext i32 %6184 to i64
  %6186 = load i64, i64* %PC.i380
  %6187 = add i64 %6186, 3
  store i64 %6187, i64* %PC.i380
  %6188 = inttoptr i64 %6183 to i32*
  store i32 %6184, i32* %6188
  store %struct.Memory* %loadMem_43e463, %struct.Memory** %MEMORY
  br label %block_.L_43e466

block_.L_43e466:                                  ; preds = %routine_sarl__cl___edx.exit, %block_43e460
  %loadMem_43e466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6190 = getelementptr inbounds %struct.GPR, %struct.GPR* %6189, i32 0, i32 33
  %6191 = getelementptr inbounds %struct.Reg, %struct.Reg* %6190, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %6191 to i64*
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6193 = getelementptr inbounds %struct.GPR, %struct.GPR* %6192, i32 0, i32 1
  %6194 = getelementptr inbounds %struct.Reg, %struct.Reg* %6193, i32 0, i32 0
  %RAX.i378 = bitcast %union.anon* %6194 to i64*
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6196 = getelementptr inbounds %struct.GPR, %struct.GPR* %6195, i32 0, i32 15
  %6197 = getelementptr inbounds %struct.Reg, %struct.Reg* %6196, i32 0, i32 0
  %RBP.i379 = bitcast %union.anon* %6197 to i64*
  %6198 = load i64, i64* %RBP.i379
  %6199 = sub i64 %6198, 44
  %6200 = load i64, i64* %PC.i377
  %6201 = add i64 %6200, 3
  store i64 %6201, i64* %PC.i377
  %6202 = inttoptr i64 %6199 to i32*
  %6203 = load i32, i32* %6202
  %6204 = zext i32 %6203 to i64
  store i64 %6204, i64* %RAX.i378, align 8
  store %struct.Memory* %loadMem_43e466, %struct.Memory** %MEMORY
  %loadMem_43e469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6206 = getelementptr inbounds %struct.GPR, %struct.GPR* %6205, i32 0, i32 33
  %6207 = getelementptr inbounds %struct.Reg, %struct.Reg* %6206, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %6207 to i64*
  %6208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6209 = getelementptr inbounds %struct.GPR, %struct.GPR* %6208, i32 0, i32 1
  %6210 = getelementptr inbounds %struct.Reg, %struct.Reg* %6209, i32 0, i32 0
  %EAX.i375 = bitcast %union.anon* %6210 to i32*
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6212 = getelementptr inbounds %struct.GPR, %struct.GPR* %6211, i32 0, i32 15
  %6213 = getelementptr inbounds %struct.Reg, %struct.Reg* %6212, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %6213 to i64*
  %6214 = load i32, i32* %EAX.i375
  %6215 = zext i32 %6214 to i64
  %6216 = load i64, i64* %RBP.i376
  %6217 = sub i64 %6216, 52
  %6218 = load i64, i64* %PC.i374
  %6219 = add i64 %6218, 3
  store i64 %6219, i64* %PC.i374
  %6220 = inttoptr i64 %6217 to i32*
  %6221 = load i32, i32* %6220
  %6222 = sub i32 %6214, %6221
  %6223 = icmp ult i32 %6214, %6221
  %6224 = zext i1 %6223 to i8
  %6225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6224, i8* %6225, align 1
  %6226 = and i32 %6222, 255
  %6227 = call i32 @llvm.ctpop.i32(i32 %6226)
  %6228 = trunc i32 %6227 to i8
  %6229 = and i8 %6228, 1
  %6230 = xor i8 %6229, 1
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6230, i8* %6231, align 1
  %6232 = xor i32 %6221, %6214
  %6233 = xor i32 %6232, %6222
  %6234 = lshr i32 %6233, 4
  %6235 = trunc i32 %6234 to i8
  %6236 = and i8 %6235, 1
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6236, i8* %6237, align 1
  %6238 = icmp eq i32 %6222, 0
  %6239 = zext i1 %6238 to i8
  %6240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6239, i8* %6240, align 1
  %6241 = lshr i32 %6222, 31
  %6242 = trunc i32 %6241 to i8
  %6243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6242, i8* %6243, align 1
  %6244 = lshr i32 %6214, 31
  %6245 = lshr i32 %6221, 31
  %6246 = xor i32 %6245, %6244
  %6247 = xor i32 %6241, %6244
  %6248 = add i32 %6247, %6246
  %6249 = icmp eq i32 %6248, 2
  %6250 = zext i1 %6249 to i8
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6250, i8* %6251, align 1
  store %struct.Memory* %loadMem_43e469, %struct.Memory** %MEMORY
  %loadMem_43e46c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6253 = getelementptr inbounds %struct.GPR, %struct.GPR* %6252, i32 0, i32 33
  %6254 = getelementptr inbounds %struct.Reg, %struct.Reg* %6253, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %6254 to i64*
  %6255 = load i64, i64* %PC.i373
  %6256 = add i64 %6255, 146
  %6257 = load i64, i64* %PC.i373
  %6258 = add i64 %6257, 6
  %6259 = load i64, i64* %PC.i373
  %6260 = add i64 %6259, 6
  store i64 %6260, i64* %PC.i373
  %6261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6262 = load i8, i8* %6261, align 1
  %6263 = icmp ne i8 %6262, 0
  %6264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6265 = load i8, i8* %6264, align 1
  %6266 = icmp ne i8 %6265, 0
  %6267 = xor i1 %6263, %6266
  %6268 = xor i1 %6267, true
  %6269 = zext i1 %6268 to i8
  store i8 %6269, i8* %BRANCH_TAKEN, align 1
  %6270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6271 = select i1 %6267, i64 %6258, i64 %6256
  store i64 %6271, i64* %6270, align 8
  store %struct.Memory* %loadMem_43e46c, %struct.Memory** %MEMORY
  %loadBr_43e46c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e46c = icmp eq i8 %loadBr_43e46c, 1
  br i1 %cmpBr_43e46c, label %block_.L_43e4fe, label %block_43e472

block_43e472:                                     ; preds = %block_.L_43e466
  %loadMem_43e472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6273 = getelementptr inbounds %struct.GPR, %struct.GPR* %6272, i32 0, i32 33
  %6274 = getelementptr inbounds %struct.Reg, %struct.Reg* %6273, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %6274 to i64*
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6276 = getelementptr inbounds %struct.GPR, %struct.GPR* %6275, i32 0, i32 1
  %6277 = getelementptr inbounds %struct.Reg, %struct.Reg* %6276, i32 0, i32 0
  %RAX.i372 = bitcast %union.anon* %6277 to i64*
  %6278 = load i64, i64* %PC.i371
  %6279 = add i64 %6278, 8
  store i64 %6279, i64* %PC.i371
  %6280 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %6280, i64* %RAX.i372, align 8
  store %struct.Memory* %loadMem_43e472, %struct.Memory** %MEMORY
  %loadMem_43e47a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6282 = getelementptr inbounds %struct.GPR, %struct.GPR* %6281, i32 0, i32 33
  %6283 = getelementptr inbounds %struct.Reg, %struct.Reg* %6282, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %6283 to i64*
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6285 = getelementptr inbounds %struct.GPR, %struct.GPR* %6284, i32 0, i32 1
  %6286 = getelementptr inbounds %struct.Reg, %struct.Reg* %6285, i32 0, i32 0
  %RAX.i370 = bitcast %union.anon* %6286 to i64*
  %6287 = load i64, i64* %RAX.i370
  %6288 = add i64 %6287, 8
  %6289 = load i64, i64* %PC.i369
  %6290 = add i64 %6289, 4
  store i64 %6290, i64* %PC.i369
  %6291 = inttoptr i64 %6288 to i64*
  %6292 = load i64, i64* %6291
  store i64 %6292, i64* %RAX.i370, align 8
  store %struct.Memory* %loadMem_43e47a, %struct.Memory** %MEMORY
  %loadMem_43e47e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6294 = getelementptr inbounds %struct.GPR, %struct.GPR* %6293, i32 0, i32 33
  %6295 = getelementptr inbounds %struct.Reg, %struct.Reg* %6294, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %6295 to i64*
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6297 = getelementptr inbounds %struct.GPR, %struct.GPR* %6296, i32 0, i32 5
  %6298 = getelementptr inbounds %struct.Reg, %struct.Reg* %6297, i32 0, i32 0
  %RCX.i367 = bitcast %union.anon* %6298 to i64*
  %6299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6300 = getelementptr inbounds %struct.GPR, %struct.GPR* %6299, i32 0, i32 15
  %6301 = getelementptr inbounds %struct.Reg, %struct.Reg* %6300, i32 0, i32 0
  %RBP.i368 = bitcast %union.anon* %6301 to i64*
  %6302 = load i64, i64* %RBP.i368
  %6303 = sub i64 %6302, 40
  %6304 = load i64, i64* %PC.i366
  %6305 = add i64 %6304, 5
  store i64 %6305, i64* %PC.i366
  %6306 = inttoptr i64 %6303 to i16*
  %6307 = load i16, i16* %6306
  %6308 = sext i16 %6307 to i64
  store i64 %6308, i64* %RCX.i367, align 8
  store %struct.Memory* %loadMem_43e47e, %struct.Memory** %MEMORY
  %loadMem_43e483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6310 = getelementptr inbounds %struct.GPR, %struct.GPR* %6309, i32 0, i32 33
  %6311 = getelementptr inbounds %struct.Reg, %struct.Reg* %6310, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %6311 to i64*
  %6312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6313 = getelementptr inbounds %struct.GPR, %struct.GPR* %6312, i32 0, i32 1
  %6314 = getelementptr inbounds %struct.Reg, %struct.Reg* %6313, i32 0, i32 0
  %RAX.i364 = bitcast %union.anon* %6314 to i64*
  %6315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6316 = getelementptr inbounds %struct.GPR, %struct.GPR* %6315, i32 0, i32 5
  %6317 = getelementptr inbounds %struct.Reg, %struct.Reg* %6316, i32 0, i32 0
  %RCX.i365 = bitcast %union.anon* %6317 to i64*
  %6318 = load i64, i64* %RAX.i364
  %6319 = load i64, i64* %RCX.i365
  %6320 = mul i64 %6319, 8
  %6321 = add i64 %6320, %6318
  %6322 = load i64, i64* %PC.i363
  %6323 = add i64 %6322, 4
  store i64 %6323, i64* %PC.i363
  %6324 = inttoptr i64 %6321 to i64*
  %6325 = load i64, i64* %6324
  store i64 %6325, i64* %RAX.i364, align 8
  store %struct.Memory* %loadMem_43e483, %struct.Memory** %MEMORY
  %loadMem_43e487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6327 = getelementptr inbounds %struct.GPR, %struct.GPR* %6326, i32 0, i32 33
  %6328 = getelementptr inbounds %struct.Reg, %struct.Reg* %6327, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %6328 to i64*
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6330 = getelementptr inbounds %struct.GPR, %struct.GPR* %6329, i32 0, i32 1
  %6331 = getelementptr inbounds %struct.Reg, %struct.Reg* %6330, i32 0, i32 0
  %RAX.i361 = bitcast %union.anon* %6331 to i64*
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6333 = getelementptr inbounds %struct.GPR, %struct.GPR* %6332, i32 0, i32 7
  %6334 = getelementptr inbounds %struct.Reg, %struct.Reg* %6333, i32 0, i32 0
  %RDX.i362 = bitcast %union.anon* %6334 to i64*
  %6335 = load i64, i64* %RAX.i361
  %6336 = load i64, i64* %PC.i360
  %6337 = add i64 %6336, 2
  store i64 %6337, i64* %PC.i360
  %6338 = inttoptr i64 %6335 to i32*
  %6339 = load i32, i32* %6338
  %6340 = zext i32 %6339 to i64
  store i64 %6340, i64* %RDX.i362, align 8
  store %struct.Memory* %loadMem_43e487, %struct.Memory** %MEMORY
  %loadMem_43e489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6342 = getelementptr inbounds %struct.GPR, %struct.GPR* %6341, i32 0, i32 33
  %6343 = getelementptr inbounds %struct.Reg, %struct.Reg* %6342, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %6343 to i64*
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6345 = getelementptr inbounds %struct.GPR, %struct.GPR* %6344, i32 0, i32 1
  %6346 = getelementptr inbounds %struct.Reg, %struct.Reg* %6345, i32 0, i32 0
  %RAX.i358 = bitcast %union.anon* %6346 to i64*
  %6347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6348 = getelementptr inbounds %struct.GPR, %struct.GPR* %6347, i32 0, i32 15
  %6349 = getelementptr inbounds %struct.Reg, %struct.Reg* %6348, i32 0, i32 0
  %RBP.i359 = bitcast %union.anon* %6349 to i64*
  %6350 = load i64, i64* %RBP.i359
  %6351 = sub i64 %6350, 88
  %6352 = load i64, i64* %PC.i357
  %6353 = add i64 %6352, 4
  store i64 %6353, i64* %PC.i357
  %6354 = inttoptr i64 %6351 to i64*
  %6355 = load i64, i64* %6354
  store i64 %6355, i64* %RAX.i358, align 8
  store %struct.Memory* %loadMem_43e489, %struct.Memory** %MEMORY
  %loadMem_43e48d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6357 = getelementptr inbounds %struct.GPR, %struct.GPR* %6356, i32 0, i32 33
  %6358 = getelementptr inbounds %struct.Reg, %struct.Reg* %6357, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %6358 to i64*
  %6359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6360 = getelementptr inbounds %struct.GPR, %struct.GPR* %6359, i32 0, i32 1
  %6361 = getelementptr inbounds %struct.Reg, %struct.Reg* %6360, i32 0, i32 0
  %RAX.i355 = bitcast %union.anon* %6361 to i64*
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6363 = getelementptr inbounds %struct.GPR, %struct.GPR* %6362, i32 0, i32 5
  %6364 = getelementptr inbounds %struct.Reg, %struct.Reg* %6363, i32 0, i32 0
  %RCX.i356 = bitcast %union.anon* %6364 to i64*
  %6365 = load i64, i64* %RAX.i355
  %6366 = load i64, i64* %PC.i354
  %6367 = add i64 %6366, 3
  store i64 %6367, i64* %PC.i354
  store i64 %6365, i64* %RCX.i356, align 8
  store %struct.Memory* %loadMem_43e48d, %struct.Memory** %MEMORY
  %loadMem_43e490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6369 = getelementptr inbounds %struct.GPR, %struct.GPR* %6368, i32 0, i32 33
  %6370 = getelementptr inbounds %struct.Reg, %struct.Reg* %6369, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %6370 to i64*
  %6371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6372 = getelementptr inbounds %struct.GPR, %struct.GPR* %6371, i32 0, i32 5
  %6373 = getelementptr inbounds %struct.Reg, %struct.Reg* %6372, i32 0, i32 0
  %RCX.i353 = bitcast %union.anon* %6373 to i64*
  %6374 = load i64, i64* %RCX.i353
  %6375 = load i64, i64* %PC.i352
  %6376 = add i64 %6375, 4
  store i64 %6376, i64* %PC.i352
  %6377 = add i64 4, %6374
  store i64 %6377, i64* %RCX.i353, align 8
  %6378 = icmp ult i64 %6377, %6374
  %6379 = icmp ult i64 %6377, 4
  %6380 = or i1 %6378, %6379
  %6381 = zext i1 %6380 to i8
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6381, i8* %6382, align 1
  %6383 = trunc i64 %6377 to i32
  %6384 = and i32 %6383, 255
  %6385 = call i32 @llvm.ctpop.i32(i32 %6384)
  %6386 = trunc i32 %6385 to i8
  %6387 = and i8 %6386, 1
  %6388 = xor i8 %6387, 1
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6388, i8* %6389, align 1
  %6390 = xor i64 4, %6374
  %6391 = xor i64 %6390, %6377
  %6392 = lshr i64 %6391, 4
  %6393 = trunc i64 %6392 to i8
  %6394 = and i8 %6393, 1
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6394, i8* %6395, align 1
  %6396 = icmp eq i64 %6377, 0
  %6397 = zext i1 %6396 to i8
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6397, i8* %6398, align 1
  %6399 = lshr i64 %6377, 63
  %6400 = trunc i64 %6399 to i8
  %6401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6400, i8* %6401, align 1
  %6402 = lshr i64 %6374, 63
  %6403 = xor i64 %6399, %6402
  %6404 = add i64 %6403, %6399
  %6405 = icmp eq i64 %6404, 2
  %6406 = zext i1 %6405 to i8
  %6407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6406, i8* %6407, align 1
  store %struct.Memory* %loadMem_43e490, %struct.Memory** %MEMORY
  %loadMem_43e494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6409 = getelementptr inbounds %struct.GPR, %struct.GPR* %6408, i32 0, i32 33
  %6410 = getelementptr inbounds %struct.Reg, %struct.Reg* %6409, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %6410 to i64*
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6412 = getelementptr inbounds %struct.GPR, %struct.GPR* %6411, i32 0, i32 5
  %6413 = getelementptr inbounds %struct.Reg, %struct.Reg* %6412, i32 0, i32 0
  %RCX.i350 = bitcast %union.anon* %6413 to i64*
  %6414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6415 = getelementptr inbounds %struct.GPR, %struct.GPR* %6414, i32 0, i32 15
  %6416 = getelementptr inbounds %struct.Reg, %struct.Reg* %6415, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %6416 to i64*
  %6417 = load i64, i64* %RBP.i351
  %6418 = sub i64 %6417, 88
  %6419 = load i64, i64* %RCX.i350
  %6420 = load i64, i64* %PC.i349
  %6421 = add i64 %6420, 4
  store i64 %6421, i64* %PC.i349
  %6422 = inttoptr i64 %6418 to i64*
  store i64 %6419, i64* %6422
  store %struct.Memory* %loadMem_43e494, %struct.Memory** %MEMORY
  %loadMem_43e498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 33
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %6425 to i64*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6427 = getelementptr inbounds %struct.GPR, %struct.GPR* %6426, i32 0, i32 1
  %6428 = getelementptr inbounds %struct.Reg, %struct.Reg* %6427, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %6428 to i64*
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6430 = getelementptr inbounds %struct.GPR, %struct.GPR* %6429, i32 0, i32 7
  %6431 = getelementptr inbounds %struct.Reg, %struct.Reg* %6430, i32 0, i32 0
  %RDX.i348 = bitcast %union.anon* %6431 to i64*
  %6432 = load i64, i64* %RDX.i348
  %6433 = load i64, i64* %RAX.i347
  %6434 = load i64, i64* %PC.i346
  %6435 = add i64 %6434, 3
  store i64 %6435, i64* %PC.i346
  %6436 = inttoptr i64 %6433 to i32*
  %6437 = load i32, i32* %6436
  %6438 = shl i64 %6432, 32
  %6439 = ashr exact i64 %6438, 32
  %6440 = sext i32 %6437 to i64
  %6441 = mul i64 %6440, %6439
  %6442 = trunc i64 %6441 to i32
  %6443 = and i64 %6441, 4294967295
  store i64 %6443, i64* %RDX.i348, align 8
  %6444 = shl i64 %6441, 32
  %6445 = ashr exact i64 %6444, 32
  %6446 = icmp ne i64 %6445, %6441
  %6447 = zext i1 %6446 to i8
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6447, i8* %6448, align 1
  %6449 = and i32 %6442, 255
  %6450 = call i32 @llvm.ctpop.i32(i32 %6449)
  %6451 = trunc i32 %6450 to i8
  %6452 = and i8 %6451, 1
  %6453 = xor i8 %6452, 1
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6453, i8* %6454, align 1
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6455, align 1
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6456, align 1
  %6457 = lshr i32 %6442, 31
  %6458 = trunc i32 %6457 to i8
  %6459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6458, i8* %6459, align 1
  %6460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6447, i8* %6460, align 1
  store %struct.Memory* %loadMem_43e498, %struct.Memory** %MEMORY
  %loadMem_43e49b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6462 = getelementptr inbounds %struct.GPR, %struct.GPR* %6461, i32 0, i32 33
  %6463 = getelementptr inbounds %struct.Reg, %struct.Reg* %6462, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %6463 to i64*
  %6464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6465 = getelementptr inbounds %struct.GPR, %struct.GPR* %6464, i32 0, i32 7
  %6466 = getelementptr inbounds %struct.Reg, %struct.Reg* %6465, i32 0, i32 0
  %RDX.i345 = bitcast %union.anon* %6466 to i64*
  %6467 = load i64, i64* %RDX.i345
  %6468 = load i64, i64* %PC.i344
  %6469 = add i64 %6468, 7
  store i64 %6469, i64* %PC.i344
  %6470 = trunc i64 %6467 to i32
  %6471 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %6472 = add i32 %6471, %6470
  %6473 = zext i32 %6472 to i64
  store i64 %6473, i64* %RDX.i345, align 8
  %6474 = icmp ult i32 %6472, %6470
  %6475 = icmp ult i32 %6472, %6471
  %6476 = or i1 %6474, %6475
  %6477 = zext i1 %6476 to i8
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6477, i8* %6478, align 1
  %6479 = and i32 %6472, 255
  %6480 = call i32 @llvm.ctpop.i32(i32 %6479)
  %6481 = trunc i32 %6480 to i8
  %6482 = and i8 %6481, 1
  %6483 = xor i8 %6482, 1
  %6484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6483, i8* %6484, align 1
  %6485 = xor i32 %6471, %6470
  %6486 = xor i32 %6485, %6472
  %6487 = lshr i32 %6486, 4
  %6488 = trunc i32 %6487 to i8
  %6489 = and i8 %6488, 1
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6489, i8* %6490, align 1
  %6491 = icmp eq i32 %6472, 0
  %6492 = zext i1 %6491 to i8
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6492, i8* %6493, align 1
  %6494 = lshr i32 %6472, 31
  %6495 = trunc i32 %6494 to i8
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6495, i8* %6496, align 1
  %6497 = lshr i32 %6470, 31
  %6498 = lshr i32 %6471, 31
  %6499 = xor i32 %6494, %6497
  %6500 = xor i32 %6494, %6498
  %6501 = add i32 %6499, %6500
  %6502 = icmp eq i32 %6501, 2
  %6503 = zext i1 %6502 to i8
  %6504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6503, i8* %6504, align 1
  store %struct.Memory* %loadMem_43e49b, %struct.Memory** %MEMORY
  %loadMem_43e4a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6506 = getelementptr inbounds %struct.GPR, %struct.GPR* %6505, i32 0, i32 33
  %6507 = getelementptr inbounds %struct.Reg, %struct.Reg* %6506, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %6507 to i64*
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6509 = getelementptr inbounds %struct.GPR, %struct.GPR* %6508, i32 0, i32 5
  %6510 = getelementptr inbounds %struct.Reg, %struct.Reg* %6509, i32 0, i32 0
  %RCX.i343 = bitcast %union.anon* %6510 to i64*
  %6511 = load i64, i64* %PC.i342
  %6512 = add i64 %6511, 7
  store i64 %6512, i64* %PC.i342
  %6513 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %6514 = zext i32 %6513 to i64
  store i64 %6514, i64* %RCX.i343, align 8
  store %struct.Memory* %loadMem_43e4a2, %struct.Memory** %MEMORY
  %loadMem_43e4a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6516 = getelementptr inbounds %struct.GPR, %struct.GPR* %6515, i32 0, i32 33
  %6517 = getelementptr inbounds %struct.Reg, %struct.Reg* %6516, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %6517 to i64*
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6519 = getelementptr inbounds %struct.GPR, %struct.GPR* %6518, i32 0, i32 5
  %6520 = getelementptr inbounds %struct.Reg, %struct.Reg* %6519, i32 0, i32 0
  %6521 = bitcast %union.anon* %6520 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6521, i32 0, i32 0
  %6522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6523 = getelementptr inbounds %struct.GPR, %struct.GPR* %6522, i32 0, i32 7
  %6524 = getelementptr inbounds %struct.Reg, %struct.Reg* %6523, i32 0, i32 0
  %RDX.i341 = bitcast %union.anon* %6524 to i64*
  %6525 = load i64, i64* %RDX.i341
  %6526 = load i8, i8* %CL.i
  %6527 = zext i8 %6526 to i64
  %6528 = load i64, i64* %PC.i340
  %6529 = add i64 %6528, 2
  store i64 %6529, i64* %PC.i340
  %6530 = trunc i64 %6527 to i5
  switch i5 %6530, label %6534 [
    i5 0, label %routine_sarl__cl___edx.exit
    i5 1, label %6531
  ]

; <label>:6531:                                   ; preds = %block_43e472
  %6532 = shl i64 %6525, 32
  %6533 = ashr i64 %6532, 33
  br label %6541

; <label>:6534:                                   ; preds = %block_43e472
  %6535 = and i64 %6527, 31
  %6536 = add i64 %6535, -1
  %6537 = shl i64 %6525, 32
  %6538 = ashr exact i64 %6537, 32
  %6539 = ashr i64 %6538, %6536
  %6540 = lshr i64 %6539, 1
  br label %6541

; <label>:6541:                                   ; preds = %6534, %6531
  %6542 = phi i64 [ %6540, %6534 ], [ %6533, %6531 ]
  %6543 = phi i64 [ %6539, %6534 ], [ %6525, %6531 ]
  %6544 = trunc i64 %6543 to i8
  %6545 = and i8 %6544, 1
  %6546 = trunc i64 %6542 to i32
  %6547 = and i64 %6542, 4294967295
  store i64 %6547, i64* %RDX.i341, align 8
  %6548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6545, i8* %6548, align 1
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6550 = and i32 %6546, 255
  %6551 = call i32 @llvm.ctpop.i32(i32 %6550)
  %6552 = trunc i32 %6551 to i8
  %6553 = and i8 %6552, 1
  %6554 = xor i8 %6553, 1
  store i8 %6554, i8* %6549, align 1
  %6555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6555, align 1
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6557 = icmp eq i32 %6546, 0
  %6558 = zext i1 %6557 to i8
  store i8 %6558, i8* %6556, align 1
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6560 = lshr i32 %6546, 31
  %6561 = trunc i32 %6560 to i8
  store i8 %6561, i8* %6559, align 1
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6562, align 1
  br label %routine_sarl__cl___edx.exit

routine_sarl__cl___edx.exit:                      ; preds = %block_43e472, %6541
  store %struct.Memory* %loadMem_43e4a9, %struct.Memory** %MEMORY
  %loadMem_43e4ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6564 = getelementptr inbounds %struct.GPR, %struct.GPR* %6563, i32 0, i32 33
  %6565 = getelementptr inbounds %struct.Reg, %struct.Reg* %6564, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %6565 to i64*
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6567 = getelementptr inbounds %struct.GPR, %struct.GPR* %6566, i32 0, i32 1
  %6568 = getelementptr inbounds %struct.Reg, %struct.Reg* %6567, i32 0, i32 0
  %RAX.i339 = bitcast %union.anon* %6568 to i64*
  %6569 = load i64, i64* %PC.i338
  %6570 = add i64 %6569, 8
  store i64 %6570, i64* %PC.i338
  %6571 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %6571, i64* %RAX.i339, align 8
  store %struct.Memory* %loadMem_43e4ab, %struct.Memory** %MEMORY
  %loadMem_43e4b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6573 = getelementptr inbounds %struct.GPR, %struct.GPR* %6572, i32 0, i32 33
  %6574 = getelementptr inbounds %struct.Reg, %struct.Reg* %6573, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %6574 to i64*
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6576 = getelementptr inbounds %struct.GPR, %struct.GPR* %6575, i32 0, i32 1
  %6577 = getelementptr inbounds %struct.Reg, %struct.Reg* %6576, i32 0, i32 0
  %RAX.i337 = bitcast %union.anon* %6577 to i64*
  %6578 = load i64, i64* %RAX.i337
  %6579 = add i64 %6578, 8
  %6580 = load i64, i64* %PC.i336
  %6581 = add i64 %6580, 4
  store i64 %6581, i64* %PC.i336
  %6582 = inttoptr i64 %6579 to i64*
  %6583 = load i64, i64* %6582
  store i64 %6583, i64* %RAX.i337, align 8
  store %struct.Memory* %loadMem_43e4b3, %struct.Memory** %MEMORY
  %loadMem_43e4b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6585 = getelementptr inbounds %struct.GPR, %struct.GPR* %6584, i32 0, i32 33
  %6586 = getelementptr inbounds %struct.Reg, %struct.Reg* %6585, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %6586 to i64*
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6588 = getelementptr inbounds %struct.GPR, %struct.GPR* %6587, i32 0, i32 9
  %6589 = getelementptr inbounds %struct.Reg, %struct.Reg* %6588, i32 0, i32 0
  %RSI.i334 = bitcast %union.anon* %6589 to i64*
  %6590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6591 = getelementptr inbounds %struct.GPR, %struct.GPR* %6590, i32 0, i32 15
  %6592 = getelementptr inbounds %struct.Reg, %struct.Reg* %6591, i32 0, i32 0
  %RBP.i335 = bitcast %union.anon* %6592 to i64*
  %6593 = load i64, i64* %RBP.i335
  %6594 = sub i64 %6593, 40
  %6595 = load i64, i64* %PC.i333
  %6596 = add i64 %6595, 5
  store i64 %6596, i64* %PC.i333
  %6597 = inttoptr i64 %6594 to i16*
  %6598 = load i16, i16* %6597
  %6599 = sext i16 %6598 to i64
  store i64 %6599, i64* %RSI.i334, align 8
  store %struct.Memory* %loadMem_43e4b7, %struct.Memory** %MEMORY
  %loadMem_43e4bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6601 = getelementptr inbounds %struct.GPR, %struct.GPR* %6600, i32 0, i32 33
  %6602 = getelementptr inbounds %struct.Reg, %struct.Reg* %6601, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %6602 to i64*
  %6603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6604 = getelementptr inbounds %struct.GPR, %struct.GPR* %6603, i32 0, i32 1
  %6605 = getelementptr inbounds %struct.Reg, %struct.Reg* %6604, i32 0, i32 0
  %RAX.i331 = bitcast %union.anon* %6605 to i64*
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6607 = getelementptr inbounds %struct.GPR, %struct.GPR* %6606, i32 0, i32 9
  %6608 = getelementptr inbounds %struct.Reg, %struct.Reg* %6607, i32 0, i32 0
  %RSI.i332 = bitcast %union.anon* %6608 to i64*
  %6609 = load i64, i64* %RAX.i331
  %6610 = load i64, i64* %RSI.i332
  %6611 = mul i64 %6610, 8
  %6612 = add i64 %6611, %6609
  %6613 = load i64, i64* %PC.i330
  %6614 = add i64 %6613, 4
  store i64 %6614, i64* %PC.i330
  %6615 = inttoptr i64 %6612 to i64*
  %6616 = load i64, i64* %6615
  store i64 %6616, i64* %RAX.i331, align 8
  store %struct.Memory* %loadMem_43e4bc, %struct.Memory** %MEMORY
  %loadMem_43e4c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6618 = getelementptr inbounds %struct.GPR, %struct.GPR* %6617, i32 0, i32 33
  %6619 = getelementptr inbounds %struct.Reg, %struct.Reg* %6618, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %6619 to i64*
  %6620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6621 = getelementptr inbounds %struct.GPR, %struct.GPR* %6620, i32 0, i32 1
  %6622 = getelementptr inbounds %struct.Reg, %struct.Reg* %6621, i32 0, i32 0
  %RAX.i328 = bitcast %union.anon* %6622 to i64*
  %6623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6624 = getelementptr inbounds %struct.GPR, %struct.GPR* %6623, i32 0, i32 7
  %6625 = getelementptr inbounds %struct.Reg, %struct.Reg* %6624, i32 0, i32 0
  %RDX.i329 = bitcast %union.anon* %6625 to i64*
  %6626 = load i64, i64* %RDX.i329
  %6627 = load i64, i64* %RAX.i328
  %6628 = load i64, i64* %PC.i327
  %6629 = add i64 %6628, 2
  store i64 %6629, i64* %PC.i327
  %6630 = trunc i64 %6626 to i32
  %6631 = inttoptr i64 %6627 to i32*
  %6632 = load i32, i32* %6631
  %6633 = add i32 %6632, %6630
  %6634 = zext i32 %6633 to i64
  store i64 %6634, i64* %RDX.i329, align 8
  %6635 = icmp ult i32 %6633, %6630
  %6636 = icmp ult i32 %6633, %6632
  %6637 = or i1 %6635, %6636
  %6638 = zext i1 %6637 to i8
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6638, i8* %6639, align 1
  %6640 = and i32 %6633, 255
  %6641 = call i32 @llvm.ctpop.i32(i32 %6640)
  %6642 = trunc i32 %6641 to i8
  %6643 = and i8 %6642, 1
  %6644 = xor i8 %6643, 1
  %6645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6644, i8* %6645, align 1
  %6646 = xor i32 %6632, %6630
  %6647 = xor i32 %6646, %6633
  %6648 = lshr i32 %6647, 4
  %6649 = trunc i32 %6648 to i8
  %6650 = and i8 %6649, 1
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6650, i8* %6651, align 1
  %6652 = icmp eq i32 %6633, 0
  %6653 = zext i1 %6652 to i8
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6653, i8* %6654, align 1
  %6655 = lshr i32 %6633, 31
  %6656 = trunc i32 %6655 to i8
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6656, i8* %6657, align 1
  %6658 = lshr i32 %6630, 31
  %6659 = lshr i32 %6632, 31
  %6660 = xor i32 %6655, %6658
  %6661 = xor i32 %6655, %6659
  %6662 = add i32 %6660, %6661
  %6663 = icmp eq i32 %6662, 2
  %6664 = zext i1 %6663 to i8
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6664, i8* %6665, align 1
  store %struct.Memory* %loadMem_43e4c0, %struct.Memory** %MEMORY
  %loadMem_43e4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6667 = getelementptr inbounds %struct.GPR, %struct.GPR* %6666, i32 0, i32 33
  %6668 = getelementptr inbounds %struct.Reg, %struct.Reg* %6667, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %6668 to i64*
  %6669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6670 = getelementptr inbounds %struct.GPR, %struct.GPR* %6669, i32 0, i32 7
  %6671 = getelementptr inbounds %struct.Reg, %struct.Reg* %6670, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %6671 to i32*
  %6672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6673 = getelementptr inbounds %struct.GPR, %struct.GPR* %6672, i32 0, i32 11
  %6674 = getelementptr inbounds %struct.Reg, %struct.Reg* %6673, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %6674 to i64*
  %6675 = load i32, i32* %EDX.i
  %6676 = zext i32 %6675 to i64
  %6677 = load i64, i64* %PC.i326
  %6678 = add i64 %6677, 2
  store i64 %6678, i64* %PC.i326
  %6679 = and i64 %6676, 4294967295
  store i64 %6679, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_43e4c2, %struct.Memory** %MEMORY
  %loadMem1_43e4c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6681 = getelementptr inbounds %struct.GPR, %struct.GPR* %6680, i32 0, i32 33
  %6682 = getelementptr inbounds %struct.Reg, %struct.Reg* %6681, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %6682 to i64*
  %6683 = load i64, i64* %PC.i325
  %6684 = add i64 %6683, -11796
  %6685 = load i64, i64* %PC.i325
  %6686 = add i64 %6685, 5
  %6687 = load i64, i64* %PC.i325
  %6688 = add i64 %6687, 5
  store i64 %6688, i64* %PC.i325
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6690 = load i64, i64* %6689, align 8
  %6691 = add i64 %6690, -8
  %6692 = inttoptr i64 %6691 to i64*
  store i64 %6686, i64* %6692
  store i64 %6691, i64* %6689, align 8
  %6693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6684, i64* %6693, align 8
  store %struct.Memory* %loadMem1_43e4c4, %struct.Memory** %MEMORY
  %loadMem2_43e4c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43e4c4 = load i64, i64* %3
  %call2_43e4c4 = call %struct.Memory* @sub_43b6b0.clip1a(%struct.State* %0, i64 %loadPC_43e4c4, %struct.Memory* %loadMem2_43e4c4)
  store %struct.Memory* %call2_43e4c4, %struct.Memory** %MEMORY
  %loadMem_43e4c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6695 = getelementptr inbounds %struct.GPR, %struct.GPR* %6694, i32 0, i32 33
  %6696 = getelementptr inbounds %struct.Reg, %struct.Reg* %6695, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %6696 to i64*
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 1
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %AX.i323 = bitcast %union.anon* %6699 to i16*
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6701 = getelementptr inbounds %struct.GPR, %struct.GPR* %6700, i32 0, i32 17
  %6702 = getelementptr inbounds %struct.Reg, %struct.Reg* %6701, i32 0, i32 0
  %R8W.i324 = bitcast %union.anon* %6702 to i16*
  %6703 = load i16, i16* %AX.i323
  %6704 = zext i16 %6703 to i64
  %6705 = load i64, i64* %PC.i322
  %6706 = add i64 %6705, 4
  store i64 %6706, i64* %PC.i322
  store i16 %6703, i16* %R8W.i324, align 2
  store %struct.Memory* %loadMem_43e4c9, %struct.Memory** %MEMORY
  %loadMem_43e4cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6708 = getelementptr inbounds %struct.GPR, %struct.GPR* %6707, i32 0, i32 33
  %6709 = getelementptr inbounds %struct.Reg, %struct.Reg* %6708, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %6709 to i64*
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 9
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %RSI.i321 = bitcast %union.anon* %6712 to i64*
  %6713 = load i64, i64* %PC.i320
  %6714 = add i64 %6713, 8
  store i64 %6714, i64* %PC.i320
  %6715 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6715, i64* %RSI.i321, align 8
  store %struct.Memory* %loadMem_43e4cd, %struct.Memory** %MEMORY
  %loadMem_43e4d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6717 = getelementptr inbounds %struct.GPR, %struct.GPR* %6716, i32 0, i32 33
  %6718 = getelementptr inbounds %struct.Reg, %struct.Reg* %6717, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %6718 to i64*
  %6719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6720 = getelementptr inbounds %struct.GPR, %struct.GPR* %6719, i32 0, i32 9
  %6721 = getelementptr inbounds %struct.Reg, %struct.Reg* %6720, i32 0, i32 0
  %RSI.i319 = bitcast %union.anon* %6721 to i64*
  %6722 = load i64, i64* %RSI.i319
  %6723 = load i64, i64* %PC.i318
  %6724 = add i64 %6723, 7
  store i64 %6724, i64* %PC.i318
  %6725 = add i64 12600, %6722
  store i64 %6725, i64* %RSI.i319, align 8
  %6726 = icmp ult i64 %6725, %6722
  %6727 = icmp ult i64 %6725, 12600
  %6728 = or i1 %6726, %6727
  %6729 = zext i1 %6728 to i8
  %6730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6729, i8* %6730, align 1
  %6731 = trunc i64 %6725 to i32
  %6732 = and i32 %6731, 255
  %6733 = call i32 @llvm.ctpop.i32(i32 %6732)
  %6734 = trunc i32 %6733 to i8
  %6735 = and i8 %6734, 1
  %6736 = xor i8 %6735, 1
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6736, i8* %6737, align 1
  %6738 = xor i64 12600, %6722
  %6739 = xor i64 %6738, %6725
  %6740 = lshr i64 %6739, 4
  %6741 = trunc i64 %6740 to i8
  %6742 = and i8 %6741, 1
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6742, i8* %6743, align 1
  %6744 = icmp eq i64 %6725, 0
  %6745 = zext i1 %6744 to i8
  %6746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6745, i8* %6746, align 1
  %6747 = lshr i64 %6725, 63
  %6748 = trunc i64 %6747 to i8
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6748, i8* %6749, align 1
  %6750 = lshr i64 %6722, 63
  %6751 = xor i64 %6747, %6750
  %6752 = add i64 %6751, %6747
  %6753 = icmp eq i64 %6752, 2
  %6754 = zext i1 %6753 to i8
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6754, i8* %6755, align 1
  store %struct.Memory* %loadMem_43e4d5, %struct.Memory** %MEMORY
  %loadMem_43e4dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6757 = getelementptr inbounds %struct.GPR, %struct.GPR* %6756, i32 0, i32 33
  %6758 = getelementptr inbounds %struct.Reg, %struct.Reg* %6757, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %6758 to i64*
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6760 = getelementptr inbounds %struct.GPR, %struct.GPR* %6759, i32 0, i32 15
  %6761 = getelementptr inbounds %struct.Reg, %struct.Reg* %6760, i32 0, i32 0
  %RBP.i316 = bitcast %union.anon* %6761 to i64*
  %6762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6763 = getelementptr inbounds %struct.GPR, %struct.GPR* %6762, i32 0, i32 19
  %6764 = getelementptr inbounds %struct.Reg, %struct.Reg* %6763, i32 0, i32 0
  %R9.i317 = bitcast %union.anon* %6764 to i64*
  %6765 = load i64, i64* %RBP.i316
  %6766 = sub i64 %6765, 44
  %6767 = load i64, i64* %PC.i315
  %6768 = add i64 %6767, 4
  store i64 %6768, i64* %PC.i315
  %6769 = inttoptr i64 %6766 to i32*
  %6770 = load i32, i32* %6769
  %6771 = sext i32 %6770 to i64
  store i64 %6771, i64* %R9.i317, align 8
  store %struct.Memory* %loadMem_43e4dc, %struct.Memory** %MEMORY
  %loadMem_43e4e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6773 = getelementptr inbounds %struct.GPR, %struct.GPR* %6772, i32 0, i32 33
  %6774 = getelementptr inbounds %struct.Reg, %struct.Reg* %6773, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %6774 to i64*
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6776 = getelementptr inbounds %struct.GPR, %struct.GPR* %6775, i32 0, i32 19
  %6777 = getelementptr inbounds %struct.Reg, %struct.Reg* %6776, i32 0, i32 0
  %R9.i314 = bitcast %union.anon* %6777 to i64*
  %6778 = load i64, i64* %R9.i314
  %6779 = load i64, i64* %PC.i313
  %6780 = add i64 %6779, 4
  store i64 %6780, i64* %PC.i313
  %6781 = shl i64 %6778, 4
  %6782 = icmp slt i64 %6781, 0
  %6783 = shl i64 %6781, 1
  store i64 %6783, i64* %R9.i314, align 8
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6785 = zext i1 %6782 to i8
  store i8 %6785, i8* %6784, align 1
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6787 = trunc i64 %6783 to i32
  %6788 = and i32 %6787, 254
  %6789 = call i32 @llvm.ctpop.i32(i32 %6788)
  %6790 = trunc i32 %6789 to i8
  %6791 = and i8 %6790, 1
  %6792 = xor i8 %6791, 1
  store i8 %6792, i8* %6786, align 1
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6793, align 1
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6795 = icmp eq i64 %6783, 0
  %6796 = zext i1 %6795 to i8
  store i8 %6796, i8* %6794, align 1
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6798 = lshr i64 %6783, 63
  %6799 = trunc i64 %6798 to i8
  store i8 %6799, i8* %6797, align 1
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6800, align 1
  store %struct.Memory* %loadMem_43e4e0, %struct.Memory** %MEMORY
  %loadMem_43e4e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6802 = getelementptr inbounds %struct.GPR, %struct.GPR* %6801, i32 0, i32 33
  %6803 = getelementptr inbounds %struct.Reg, %struct.Reg* %6802, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %6803 to i64*
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6805 = getelementptr inbounds %struct.GPR, %struct.GPR* %6804, i32 0, i32 9
  %6806 = getelementptr inbounds %struct.Reg, %struct.Reg* %6805, i32 0, i32 0
  %RSI.i311 = bitcast %union.anon* %6806 to i64*
  %6807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6808 = getelementptr inbounds %struct.GPR, %struct.GPR* %6807, i32 0, i32 19
  %6809 = getelementptr inbounds %struct.Reg, %struct.Reg* %6808, i32 0, i32 0
  %R9.i312 = bitcast %union.anon* %6809 to i64*
  %6810 = load i64, i64* %RSI.i311
  %6811 = load i64, i64* %R9.i312
  %6812 = load i64, i64* %PC.i310
  %6813 = add i64 %6812, 3
  store i64 %6813, i64* %PC.i310
  %6814 = add i64 %6811, %6810
  store i64 %6814, i64* %RSI.i311, align 8
  %6815 = icmp ult i64 %6814, %6810
  %6816 = icmp ult i64 %6814, %6811
  %6817 = or i1 %6815, %6816
  %6818 = zext i1 %6817 to i8
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6818, i8* %6819, align 1
  %6820 = trunc i64 %6814 to i32
  %6821 = and i32 %6820, 255
  %6822 = call i32 @llvm.ctpop.i32(i32 %6821)
  %6823 = trunc i32 %6822 to i8
  %6824 = and i8 %6823, 1
  %6825 = xor i8 %6824, 1
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6825, i8* %6826, align 1
  %6827 = xor i64 %6811, %6810
  %6828 = xor i64 %6827, %6814
  %6829 = lshr i64 %6828, 4
  %6830 = trunc i64 %6829 to i8
  %6831 = and i8 %6830, 1
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6831, i8* %6832, align 1
  %6833 = icmp eq i64 %6814, 0
  %6834 = zext i1 %6833 to i8
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6834, i8* %6835, align 1
  %6836 = lshr i64 %6814, 63
  %6837 = trunc i64 %6836 to i8
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6837, i8* %6838, align 1
  %6839 = lshr i64 %6810, 63
  %6840 = lshr i64 %6811, 63
  %6841 = xor i64 %6836, %6839
  %6842 = xor i64 %6836, %6840
  %6843 = add i64 %6841, %6842
  %6844 = icmp eq i64 %6843, 2
  %6845 = zext i1 %6844 to i8
  %6846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6845, i8* %6846, align 1
  store %struct.Memory* %loadMem_43e4e4, %struct.Memory** %MEMORY
  %loadMem_43e4e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6848 = getelementptr inbounds %struct.GPR, %struct.GPR* %6847, i32 0, i32 33
  %6849 = getelementptr inbounds %struct.Reg, %struct.Reg* %6848, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %6849 to i64*
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6851 = getelementptr inbounds %struct.GPR, %struct.GPR* %6850, i32 0, i32 15
  %6852 = getelementptr inbounds %struct.Reg, %struct.Reg* %6851, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %6852 to i64*
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6854 = getelementptr inbounds %struct.GPR, %struct.GPR* %6853, i32 0, i32 19
  %6855 = getelementptr inbounds %struct.Reg, %struct.Reg* %6854, i32 0, i32 0
  %R9.i309 = bitcast %union.anon* %6855 to i64*
  %6856 = load i64, i64* %RBP.i308
  %6857 = sub i64 %6856, 48
  %6858 = load i64, i64* %PC.i307
  %6859 = add i64 %6858, 4
  store i64 %6859, i64* %PC.i307
  %6860 = inttoptr i64 %6857 to i32*
  %6861 = load i32, i32* %6860
  %6862 = sext i32 %6861 to i64
  store i64 %6862, i64* %R9.i309, align 8
  store %struct.Memory* %loadMem_43e4e7, %struct.Memory** %MEMORY
  %loadMem_43e4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6864 = getelementptr inbounds %struct.GPR, %struct.GPR* %6863, i32 0, i32 33
  %6865 = getelementptr inbounds %struct.Reg, %struct.Reg* %6864, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %6865 to i64*
  %6866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6867 = getelementptr inbounds %struct.GPR, %struct.GPR* %6866, i32 0, i32 17
  %6868 = getelementptr inbounds %struct.Reg, %struct.Reg* %6867, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %6868 to i16*
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6870 = getelementptr inbounds %struct.GPR, %struct.GPR* %6869, i32 0, i32 9
  %6871 = getelementptr inbounds %struct.Reg, %struct.Reg* %6870, i32 0, i32 0
  %RSI.i306 = bitcast %union.anon* %6871 to i64*
  %6872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6873 = getelementptr inbounds %struct.GPR, %struct.GPR* %6872, i32 0, i32 19
  %6874 = getelementptr inbounds %struct.Reg, %struct.Reg* %6873, i32 0, i32 0
  %R9.i = bitcast %union.anon* %6874 to i64*
  %6875 = load i64, i64* %RSI.i306
  %6876 = load i64, i64* %R9.i
  %6877 = mul i64 %6876, 2
  %6878 = add i64 %6877, %6875
  %6879 = load i16, i16* %R8W.i
  %6880 = zext i16 %6879 to i64
  %6881 = load i64, i64* %PC.i305
  %6882 = add i64 %6881, 5
  store i64 %6882, i64* %PC.i305
  %6883 = inttoptr i64 %6878 to i16*
  store i16 %6879, i16* %6883
  store %struct.Memory* %loadMem_43e4eb, %struct.Memory** %MEMORY
  %loadMem_43e4f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 33
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %6886 to i64*
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6888 = getelementptr inbounds %struct.GPR, %struct.GPR* %6887, i32 0, i32 1
  %6889 = getelementptr inbounds %struct.Reg, %struct.Reg* %6888, i32 0, i32 0
  %RAX.i303 = bitcast %union.anon* %6889 to i64*
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6891 = getelementptr inbounds %struct.GPR, %struct.GPR* %6890, i32 0, i32 15
  %6892 = getelementptr inbounds %struct.Reg, %struct.Reg* %6891, i32 0, i32 0
  %RBP.i304 = bitcast %union.anon* %6892 to i64*
  %6893 = load i64, i64* %RBP.i304
  %6894 = sub i64 %6893, 44
  %6895 = load i64, i64* %PC.i302
  %6896 = add i64 %6895, 3
  store i64 %6896, i64* %PC.i302
  %6897 = inttoptr i64 %6894 to i32*
  %6898 = load i32, i32* %6897
  %6899 = zext i32 %6898 to i64
  store i64 %6899, i64* %RAX.i303, align 8
  store %struct.Memory* %loadMem_43e4f0, %struct.Memory** %MEMORY
  %loadMem_43e4f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6901 = getelementptr inbounds %struct.GPR, %struct.GPR* %6900, i32 0, i32 33
  %6902 = getelementptr inbounds %struct.Reg, %struct.Reg* %6901, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %6902 to i64*
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6904 = getelementptr inbounds %struct.GPR, %struct.GPR* %6903, i32 0, i32 1
  %6905 = getelementptr inbounds %struct.Reg, %struct.Reg* %6904, i32 0, i32 0
  %RAX.i301 = bitcast %union.anon* %6905 to i64*
  %6906 = load i64, i64* %RAX.i301
  %6907 = load i64, i64* %PC.i300
  %6908 = add i64 %6907, 3
  store i64 %6908, i64* %PC.i300
  %6909 = trunc i64 %6906 to i32
  %6910 = add i32 1, %6909
  %6911 = zext i32 %6910 to i64
  store i64 %6911, i64* %RAX.i301, align 8
  %6912 = icmp ult i32 %6910, %6909
  %6913 = icmp ult i32 %6910, 1
  %6914 = or i1 %6912, %6913
  %6915 = zext i1 %6914 to i8
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6915, i8* %6916, align 1
  %6917 = and i32 %6910, 255
  %6918 = call i32 @llvm.ctpop.i32(i32 %6917)
  %6919 = trunc i32 %6918 to i8
  %6920 = and i8 %6919, 1
  %6921 = xor i8 %6920, 1
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6921, i8* %6922, align 1
  %6923 = xor i64 1, %6906
  %6924 = trunc i64 %6923 to i32
  %6925 = xor i32 %6924, %6910
  %6926 = lshr i32 %6925, 4
  %6927 = trunc i32 %6926 to i8
  %6928 = and i8 %6927, 1
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6928, i8* %6929, align 1
  %6930 = icmp eq i32 %6910, 0
  %6931 = zext i1 %6930 to i8
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6931, i8* %6932, align 1
  %6933 = lshr i32 %6910, 31
  %6934 = trunc i32 %6933 to i8
  %6935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6934, i8* %6935, align 1
  %6936 = lshr i32 %6909, 31
  %6937 = xor i32 %6933, %6936
  %6938 = add i32 %6937, %6933
  %6939 = icmp eq i32 %6938, 2
  %6940 = zext i1 %6939 to i8
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6940, i8* %6941, align 1
  store %struct.Memory* %loadMem_43e4f3, %struct.Memory** %MEMORY
  %loadMem_43e4f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6943 = getelementptr inbounds %struct.GPR, %struct.GPR* %6942, i32 0, i32 33
  %6944 = getelementptr inbounds %struct.Reg, %struct.Reg* %6943, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %6944 to i64*
  %6945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6946 = getelementptr inbounds %struct.GPR, %struct.GPR* %6945, i32 0, i32 1
  %6947 = getelementptr inbounds %struct.Reg, %struct.Reg* %6946, i32 0, i32 0
  %EAX.i298 = bitcast %union.anon* %6947 to i32*
  %6948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6949 = getelementptr inbounds %struct.GPR, %struct.GPR* %6948, i32 0, i32 15
  %6950 = getelementptr inbounds %struct.Reg, %struct.Reg* %6949, i32 0, i32 0
  %RBP.i299 = bitcast %union.anon* %6950 to i64*
  %6951 = load i64, i64* %RBP.i299
  %6952 = sub i64 %6951, 44
  %6953 = load i32, i32* %EAX.i298
  %6954 = zext i32 %6953 to i64
  %6955 = load i64, i64* %PC.i297
  %6956 = add i64 %6955, 3
  store i64 %6956, i64* %PC.i297
  %6957 = inttoptr i64 %6952 to i32*
  store i32 %6953, i32* %6957
  store %struct.Memory* %loadMem_43e4f6, %struct.Memory** %MEMORY
  %loadMem_43e4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6959 = getelementptr inbounds %struct.GPR, %struct.GPR* %6958, i32 0, i32 33
  %6960 = getelementptr inbounds %struct.Reg, %struct.Reg* %6959, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %6960 to i64*
  %6961 = load i64, i64* %PC.i296
  %6962 = add i64 %6961, -147
  %6963 = load i64, i64* %PC.i296
  %6964 = add i64 %6963, 5
  store i64 %6964, i64* %PC.i296
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6962, i64* %6965, align 8
  store %struct.Memory* %loadMem_43e4f9, %struct.Memory** %MEMORY
  br label %block_.L_43e466

block_.L_43e4fe:                                  ; preds = %block_.L_43e466
  %loadMem_43e4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6967 = getelementptr inbounds %struct.GPR, %struct.GPR* %6966, i32 0, i32 33
  %6968 = getelementptr inbounds %struct.Reg, %struct.Reg* %6967, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %6968 to i64*
  %6969 = load i64, i64* %PC.i295
  %6970 = add i64 %6969, 5
  %6971 = load i64, i64* %PC.i295
  %6972 = add i64 %6971, 5
  store i64 %6972, i64* %PC.i295
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6970, i64* %6973, align 8
  store %struct.Memory* %loadMem_43e4fe, %struct.Memory** %MEMORY
  br label %block_.L_43e503

block_.L_43e503:                                  ; preds = %block_.L_43e4fe
  %loadMem_43e503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6975 = getelementptr inbounds %struct.GPR, %struct.GPR* %6974, i32 0, i32 33
  %6976 = getelementptr inbounds %struct.Reg, %struct.Reg* %6975, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %6976 to i64*
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6978 = getelementptr inbounds %struct.GPR, %struct.GPR* %6977, i32 0, i32 1
  %6979 = getelementptr inbounds %struct.Reg, %struct.Reg* %6978, i32 0, i32 0
  %RAX.i293 = bitcast %union.anon* %6979 to i64*
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 15
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %6982 to i64*
  %6983 = load i64, i64* %RBP.i294
  %6984 = sub i64 %6983, 48
  %6985 = load i64, i64* %PC.i292
  %6986 = add i64 %6985, 3
  store i64 %6986, i64* %PC.i292
  %6987 = inttoptr i64 %6984 to i32*
  %6988 = load i32, i32* %6987
  %6989 = zext i32 %6988 to i64
  store i64 %6989, i64* %RAX.i293, align 8
  store %struct.Memory* %loadMem_43e503, %struct.Memory** %MEMORY
  %loadMem_43e506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6991 = getelementptr inbounds %struct.GPR, %struct.GPR* %6990, i32 0, i32 33
  %6992 = getelementptr inbounds %struct.Reg, %struct.Reg* %6991, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %6992 to i64*
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6994 = getelementptr inbounds %struct.GPR, %struct.GPR* %6993, i32 0, i32 1
  %6995 = getelementptr inbounds %struct.Reg, %struct.Reg* %6994, i32 0, i32 0
  %RAX.i291 = bitcast %union.anon* %6995 to i64*
  %6996 = load i64, i64* %RAX.i291
  %6997 = load i64, i64* %PC.i290
  %6998 = add i64 %6997, 3
  store i64 %6998, i64* %PC.i290
  %6999 = trunc i64 %6996 to i32
  %7000 = add i32 1, %6999
  %7001 = zext i32 %7000 to i64
  store i64 %7001, i64* %RAX.i291, align 8
  %7002 = icmp ult i32 %7000, %6999
  %7003 = icmp ult i32 %7000, 1
  %7004 = or i1 %7002, %7003
  %7005 = zext i1 %7004 to i8
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7005, i8* %7006, align 1
  %7007 = and i32 %7000, 255
  %7008 = call i32 @llvm.ctpop.i32(i32 %7007)
  %7009 = trunc i32 %7008 to i8
  %7010 = and i8 %7009, 1
  %7011 = xor i8 %7010, 1
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7011, i8* %7012, align 1
  %7013 = xor i64 1, %6996
  %7014 = trunc i64 %7013 to i32
  %7015 = xor i32 %7014, %7000
  %7016 = lshr i32 %7015, 4
  %7017 = trunc i32 %7016 to i8
  %7018 = and i8 %7017, 1
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7018, i8* %7019, align 1
  %7020 = icmp eq i32 %7000, 0
  %7021 = zext i1 %7020 to i8
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7021, i8* %7022, align 1
  %7023 = lshr i32 %7000, 31
  %7024 = trunc i32 %7023 to i8
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7024, i8* %7025, align 1
  %7026 = lshr i32 %6999, 31
  %7027 = xor i32 %7023, %7026
  %7028 = add i32 %7027, %7023
  %7029 = icmp eq i32 %7028, 2
  %7030 = zext i1 %7029 to i8
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7030, i8* %7031, align 1
  store %struct.Memory* %loadMem_43e506, %struct.Memory** %MEMORY
  %loadMem_43e509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7033 = getelementptr inbounds %struct.GPR, %struct.GPR* %7032, i32 0, i32 33
  %7034 = getelementptr inbounds %struct.Reg, %struct.Reg* %7033, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %7034 to i64*
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7036 = getelementptr inbounds %struct.GPR, %struct.GPR* %7035, i32 0, i32 1
  %7037 = getelementptr inbounds %struct.Reg, %struct.Reg* %7036, i32 0, i32 0
  %EAX.i288 = bitcast %union.anon* %7037 to i32*
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7039 = getelementptr inbounds %struct.GPR, %struct.GPR* %7038, i32 0, i32 15
  %7040 = getelementptr inbounds %struct.Reg, %struct.Reg* %7039, i32 0, i32 0
  %RBP.i289 = bitcast %union.anon* %7040 to i64*
  %7041 = load i64, i64* %RBP.i289
  %7042 = sub i64 %7041, 48
  %7043 = load i32, i32* %EAX.i288
  %7044 = zext i32 %7043 to i64
  %7045 = load i64, i64* %PC.i287
  %7046 = add i64 %7045, 3
  store i64 %7046, i64* %PC.i287
  %7047 = inttoptr i64 %7042 to i32*
  store i32 %7043, i32* %7047
  store %struct.Memory* %loadMem_43e509, %struct.Memory** %MEMORY
  %loadMem_43e50c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7049 = getelementptr inbounds %struct.GPR, %struct.GPR* %7048, i32 0, i32 33
  %7050 = getelementptr inbounds %struct.Reg, %struct.Reg* %7049, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %7050 to i64*
  %7051 = load i64, i64* %PC.i286
  %7052 = add i64 %7051, -184
  %7053 = load i64, i64* %PC.i286
  %7054 = add i64 %7053, 5
  store i64 %7054, i64* %PC.i286
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7052, i64* %7055, align 8
  store %struct.Memory* %loadMem_43e50c, %struct.Memory** %MEMORY
  br label %block_.L_43e454

block_.L_43e511:                                  ; preds = %block_.L_43e454
  %loadMem_43e511 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7057 = getelementptr inbounds %struct.GPR, %struct.GPR* %7056, i32 0, i32 33
  %7058 = getelementptr inbounds %struct.Reg, %struct.Reg* %7057, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %7058 to i64*
  %7059 = load i64, i64* %PC.i285
  %7060 = add i64 %7059, 5
  %7061 = load i64, i64* %PC.i285
  %7062 = add i64 %7061, 5
  store i64 %7062, i64* %PC.i285
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7060, i64* %7063, align 8
  store %struct.Memory* %loadMem_43e511, %struct.Memory** %MEMORY
  br label %block_.L_43e516

block_.L_43e516:                                  ; preds = %block_.L_43e511, %block_.L_43e449
  %loadMem_43e516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7065 = getelementptr inbounds %struct.GPR, %struct.GPR* %7064, i32 0, i32 33
  %7066 = getelementptr inbounds %struct.Reg, %struct.Reg* %7065, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %7066 to i64*
  %7067 = load i64, i64* %PC.i284
  %7068 = add i64 %7067, 5
  %7069 = load i64, i64* %PC.i284
  %7070 = add i64 %7069, 5
  store i64 %7070, i64* %PC.i284
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7068, i64* %7071, align 8
  store %struct.Memory* %loadMem_43e516, %struct.Memory** %MEMORY
  br label %block_.L_43e51b

block_.L_43e51b:                                  ; preds = %block_.L_43e516, %block_.L_43e379
  %loadMem_43e51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7073 = getelementptr inbounds %struct.GPR, %struct.GPR* %7072, i32 0, i32 33
  %7074 = getelementptr inbounds %struct.Reg, %struct.Reg* %7073, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %7074 to i64*
  %7075 = load i64, i64* %PC.i283
  %7076 = add i64 %7075, 460
  %7077 = load i64, i64* %PC.i283
  %7078 = add i64 %7077, 5
  store i64 %7078, i64* %PC.i283
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7076, i64* %7079, align 8
  store %struct.Memory* %loadMem_43e51b, %struct.Memory** %MEMORY
  br label %block_.L_43e6e7

block_.L_43e520:                                  ; preds = %block_.L_43e23e
  %loadMem_43e520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7081 = getelementptr inbounds %struct.GPR, %struct.GPR* %7080, i32 0, i32 33
  %7082 = getelementptr inbounds %struct.Reg, %struct.Reg* %7081, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %7082 to i64*
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7084 = getelementptr inbounds %struct.GPR, %struct.GPR* %7083, i32 0, i32 15
  %7085 = getelementptr inbounds %struct.Reg, %struct.Reg* %7084, i32 0, i32 0
  %RBP.i282 = bitcast %union.anon* %7085 to i64*
  %7086 = load i64, i64* %RBP.i282
  %7087 = sub i64 %7086, 28
  %7088 = load i64, i64* %PC.i281
  %7089 = add i64 %7088, 4
  store i64 %7089, i64* %PC.i281
  %7090 = inttoptr i64 %7087 to i32*
  %7091 = load i32, i32* %7090
  %7092 = sub i32 %7091, 2
  %7093 = icmp ult i32 %7091, 2
  %7094 = zext i1 %7093 to i8
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7094, i8* %7095, align 1
  %7096 = and i32 %7092, 255
  %7097 = call i32 @llvm.ctpop.i32(i32 %7096)
  %7098 = trunc i32 %7097 to i8
  %7099 = and i8 %7098, 1
  %7100 = xor i8 %7099, 1
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7100, i8* %7101, align 1
  %7102 = xor i32 %7091, 2
  %7103 = xor i32 %7102, %7092
  %7104 = lshr i32 %7103, 4
  %7105 = trunc i32 %7104 to i8
  %7106 = and i8 %7105, 1
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7106, i8* %7107, align 1
  %7108 = icmp eq i32 %7092, 0
  %7109 = zext i1 %7108 to i8
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7109, i8* %7110, align 1
  %7111 = lshr i32 %7092, 31
  %7112 = trunc i32 %7111 to i8
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7112, i8* %7113, align 1
  %7114 = lshr i32 %7091, 31
  %7115 = xor i32 %7111, %7114
  %7116 = add i32 %7115, %7114
  %7117 = icmp eq i32 %7116, 2
  %7118 = zext i1 %7117 to i8
  %7119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7118, i8* %7119, align 1
  store %struct.Memory* %loadMem_43e520, %struct.Memory** %MEMORY
  %loadMem_43e524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7121 = getelementptr inbounds %struct.GPR, %struct.GPR* %7120, i32 0, i32 33
  %7122 = getelementptr inbounds %struct.Reg, %struct.Reg* %7121, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %7122 to i64*
  %7123 = load i64, i64* %PC.i280
  %7124 = add i64 %7123, 177
  %7125 = load i64, i64* %PC.i280
  %7126 = add i64 %7125, 6
  %7127 = load i64, i64* %PC.i280
  %7128 = add i64 %7127, 6
  store i64 %7128, i64* %PC.i280
  %7129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7130 = load i8, i8* %7129, align 1
  %7131 = icmp eq i8 %7130, 0
  %7132 = zext i1 %7131 to i8
  store i8 %7132, i8* %BRANCH_TAKEN, align 1
  %7133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7134 = select i1 %7131, i64 %7124, i64 %7126
  store i64 %7134, i64* %7133, align 8
  store %struct.Memory* %loadMem_43e524, %struct.Memory** %MEMORY
  %loadBr_43e524 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e524 = icmp eq i8 %loadBr_43e524, 1
  br i1 %cmpBr_43e524, label %block_.L_43e5d5, label %block_43e52a

block_43e52a:                                     ; preds = %block_.L_43e520
  %loadMem_43e52a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7136 = getelementptr inbounds %struct.GPR, %struct.GPR* %7135, i32 0, i32 33
  %7137 = getelementptr inbounds %struct.Reg, %struct.Reg* %7136, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %7137 to i64*
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7139 = getelementptr inbounds %struct.GPR, %struct.GPR* %7138, i32 0, i32 1
  %7140 = getelementptr inbounds %struct.Reg, %struct.Reg* %7139, i32 0, i32 0
  %RAX.i278 = bitcast %union.anon* %7140 to i64*
  %7141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7142 = getelementptr inbounds %struct.GPR, %struct.GPR* %7141, i32 0, i32 15
  %7143 = getelementptr inbounds %struct.Reg, %struct.Reg* %7142, i32 0, i32 0
  %RBP.i279 = bitcast %union.anon* %7143 to i64*
  %7144 = load i64, i64* %RBP.i279
  %7145 = sub i64 %7144, 24
  %7146 = load i64, i64* %PC.i277
  %7147 = add i64 %7146, 3
  store i64 %7147, i64* %PC.i277
  %7148 = inttoptr i64 %7145 to i32*
  %7149 = load i32, i32* %7148
  %7150 = zext i32 %7149 to i64
  store i64 %7150, i64* %RAX.i278, align 8
  store %struct.Memory* %loadMem_43e52a, %struct.Memory** %MEMORY
  %loadMem_43e52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7152 = getelementptr inbounds %struct.GPR, %struct.GPR* %7151, i32 0, i32 33
  %7153 = getelementptr inbounds %struct.Reg, %struct.Reg* %7152, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %7153 to i64*
  %7154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7155 = getelementptr inbounds %struct.GPR, %struct.GPR* %7154, i32 0, i32 1
  %7156 = getelementptr inbounds %struct.Reg, %struct.Reg* %7155, i32 0, i32 0
  %EAX.i275 = bitcast %union.anon* %7156 to i32*
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7158 = getelementptr inbounds %struct.GPR, %struct.GPR* %7157, i32 0, i32 15
  %7159 = getelementptr inbounds %struct.Reg, %struct.Reg* %7158, i32 0, i32 0
  %RBP.i276 = bitcast %union.anon* %7159 to i64*
  %7160 = load i64, i64* %RBP.i276
  %7161 = sub i64 %7160, 48
  %7162 = load i32, i32* %EAX.i275
  %7163 = zext i32 %7162 to i64
  %7164 = load i64, i64* %PC.i274
  %7165 = add i64 %7164, 3
  store i64 %7165, i64* %PC.i274
  %7166 = inttoptr i64 %7161 to i32*
  store i32 %7162, i32* %7166
  store %struct.Memory* %loadMem_43e52d, %struct.Memory** %MEMORY
  br label %block_.L_43e530

block_.L_43e530:                                  ; preds = %block_.L_43e5c2, %block_43e52a
  %loadMem_43e530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7168 = getelementptr inbounds %struct.GPR, %struct.GPR* %7167, i32 0, i32 33
  %7169 = getelementptr inbounds %struct.Reg, %struct.Reg* %7168, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %7169 to i64*
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7171 = getelementptr inbounds %struct.GPR, %struct.GPR* %7170, i32 0, i32 1
  %7172 = getelementptr inbounds %struct.Reg, %struct.Reg* %7171, i32 0, i32 0
  %RAX.i272 = bitcast %union.anon* %7172 to i64*
  %7173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7174 = getelementptr inbounds %struct.GPR, %struct.GPR* %7173, i32 0, i32 15
  %7175 = getelementptr inbounds %struct.Reg, %struct.Reg* %7174, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %7175 to i64*
  %7176 = load i64, i64* %RBP.i273
  %7177 = sub i64 %7176, 48
  %7178 = load i64, i64* %PC.i271
  %7179 = add i64 %7178, 3
  store i64 %7179, i64* %PC.i271
  %7180 = inttoptr i64 %7177 to i32*
  %7181 = load i32, i32* %7180
  %7182 = zext i32 %7181 to i64
  store i64 %7182, i64* %RAX.i272, align 8
  store %struct.Memory* %loadMem_43e530, %struct.Memory** %MEMORY
  %loadMem_43e533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7184 = getelementptr inbounds %struct.GPR, %struct.GPR* %7183, i32 0, i32 33
  %7185 = getelementptr inbounds %struct.Reg, %struct.Reg* %7184, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %7185 to i64*
  %7186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7187 = getelementptr inbounds %struct.GPR, %struct.GPR* %7186, i32 0, i32 1
  %7188 = getelementptr inbounds %struct.Reg, %struct.Reg* %7187, i32 0, i32 0
  %EAX.i269 = bitcast %union.anon* %7188 to i32*
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7190 = getelementptr inbounds %struct.GPR, %struct.GPR* %7189, i32 0, i32 15
  %7191 = getelementptr inbounds %struct.Reg, %struct.Reg* %7190, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %7191 to i64*
  %7192 = load i32, i32* %EAX.i269
  %7193 = zext i32 %7192 to i64
  %7194 = load i64, i64* %RBP.i270
  %7195 = sub i64 %7194, 56
  %7196 = load i64, i64* %PC.i268
  %7197 = add i64 %7196, 3
  store i64 %7197, i64* %PC.i268
  %7198 = inttoptr i64 %7195 to i32*
  %7199 = load i32, i32* %7198
  %7200 = sub i32 %7192, %7199
  %7201 = icmp ult i32 %7192, %7199
  %7202 = zext i1 %7201 to i8
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7202, i8* %7203, align 1
  %7204 = and i32 %7200, 255
  %7205 = call i32 @llvm.ctpop.i32(i32 %7204)
  %7206 = trunc i32 %7205 to i8
  %7207 = and i8 %7206, 1
  %7208 = xor i8 %7207, 1
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7208, i8* %7209, align 1
  %7210 = xor i32 %7199, %7192
  %7211 = xor i32 %7210, %7200
  %7212 = lshr i32 %7211, 4
  %7213 = trunc i32 %7212 to i8
  %7214 = and i8 %7213, 1
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7214, i8* %7215, align 1
  %7216 = icmp eq i32 %7200, 0
  %7217 = zext i1 %7216 to i8
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7217, i8* %7218, align 1
  %7219 = lshr i32 %7200, 31
  %7220 = trunc i32 %7219 to i8
  %7221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7220, i8* %7221, align 1
  %7222 = lshr i32 %7192, 31
  %7223 = lshr i32 %7199, 31
  %7224 = xor i32 %7223, %7222
  %7225 = xor i32 %7219, %7222
  %7226 = add i32 %7225, %7224
  %7227 = icmp eq i32 %7226, 2
  %7228 = zext i1 %7227 to i8
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7228, i8* %7229, align 1
  store %struct.Memory* %loadMem_43e533, %struct.Memory** %MEMORY
  %loadMem_43e536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7231 = getelementptr inbounds %struct.GPR, %struct.GPR* %7230, i32 0, i32 33
  %7232 = getelementptr inbounds %struct.Reg, %struct.Reg* %7231, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %7232 to i64*
  %7233 = load i64, i64* %PC.i267
  %7234 = add i64 %7233, 154
  %7235 = load i64, i64* %PC.i267
  %7236 = add i64 %7235, 6
  %7237 = load i64, i64* %PC.i267
  %7238 = add i64 %7237, 6
  store i64 %7238, i64* %PC.i267
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7240 = load i8, i8* %7239, align 1
  %7241 = icmp ne i8 %7240, 0
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7243 = load i8, i8* %7242, align 1
  %7244 = icmp ne i8 %7243, 0
  %7245 = xor i1 %7241, %7244
  %7246 = xor i1 %7245, true
  %7247 = zext i1 %7246 to i8
  store i8 %7247, i8* %BRANCH_TAKEN, align 1
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7249 = select i1 %7245, i64 %7236, i64 %7234
  store i64 %7249, i64* %7248, align 8
  store %struct.Memory* %loadMem_43e536, %struct.Memory** %MEMORY
  %loadBr_43e536 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e536 = icmp eq i8 %loadBr_43e536, 1
  br i1 %cmpBr_43e536, label %block_.L_43e5d0, label %block_43e53c

block_43e53c:                                     ; preds = %block_.L_43e530
  %loadMem_43e53c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7251 = getelementptr inbounds %struct.GPR, %struct.GPR* %7250, i32 0, i32 33
  %7252 = getelementptr inbounds %struct.Reg, %struct.Reg* %7251, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %7252 to i64*
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7254 = getelementptr inbounds %struct.GPR, %struct.GPR* %7253, i32 0, i32 1
  %7255 = getelementptr inbounds %struct.Reg, %struct.Reg* %7254, i32 0, i32 0
  %RAX.i265 = bitcast %union.anon* %7255 to i64*
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7257 = getelementptr inbounds %struct.GPR, %struct.GPR* %7256, i32 0, i32 15
  %7258 = getelementptr inbounds %struct.Reg, %struct.Reg* %7257, i32 0, i32 0
  %RBP.i266 = bitcast %union.anon* %7258 to i64*
  %7259 = load i64, i64* %RBP.i266
  %7260 = sub i64 %7259, 20
  %7261 = load i64, i64* %PC.i264
  %7262 = add i64 %7261, 3
  store i64 %7262, i64* %PC.i264
  %7263 = inttoptr i64 %7260 to i32*
  %7264 = load i32, i32* %7263
  %7265 = zext i32 %7264 to i64
  store i64 %7265, i64* %RAX.i265, align 8
  store %struct.Memory* %loadMem_43e53c, %struct.Memory** %MEMORY
  %loadMem_43e53f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7267 = getelementptr inbounds %struct.GPR, %struct.GPR* %7266, i32 0, i32 33
  %7268 = getelementptr inbounds %struct.Reg, %struct.Reg* %7267, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %7268 to i64*
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7270 = getelementptr inbounds %struct.GPR, %struct.GPR* %7269, i32 0, i32 1
  %7271 = getelementptr inbounds %struct.Reg, %struct.Reg* %7270, i32 0, i32 0
  %EAX.i262 = bitcast %union.anon* %7271 to i32*
  %7272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7273 = getelementptr inbounds %struct.GPR, %struct.GPR* %7272, i32 0, i32 15
  %7274 = getelementptr inbounds %struct.Reg, %struct.Reg* %7273, i32 0, i32 0
  %RBP.i263 = bitcast %union.anon* %7274 to i64*
  %7275 = load i64, i64* %RBP.i263
  %7276 = sub i64 %7275, 44
  %7277 = load i32, i32* %EAX.i262
  %7278 = zext i32 %7277 to i64
  %7279 = load i64, i64* %PC.i261
  %7280 = add i64 %7279, 3
  store i64 %7280, i64* %PC.i261
  %7281 = inttoptr i64 %7276 to i32*
  store i32 %7277, i32* %7281
  store %struct.Memory* %loadMem_43e53f, %struct.Memory** %MEMORY
  br label %block_.L_43e542

block_.L_43e542:                                  ; preds = %routine_idivl__esi.exit, %block_43e53c
  %loadMem_43e542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7283 = getelementptr inbounds %struct.GPR, %struct.GPR* %7282, i32 0, i32 33
  %7284 = getelementptr inbounds %struct.Reg, %struct.Reg* %7283, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %7284 to i64*
  %7285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7286 = getelementptr inbounds %struct.GPR, %struct.GPR* %7285, i32 0, i32 1
  %7287 = getelementptr inbounds %struct.Reg, %struct.Reg* %7286, i32 0, i32 0
  %RAX.i259 = bitcast %union.anon* %7287 to i64*
  %7288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7289 = getelementptr inbounds %struct.GPR, %struct.GPR* %7288, i32 0, i32 15
  %7290 = getelementptr inbounds %struct.Reg, %struct.Reg* %7289, i32 0, i32 0
  %RBP.i260 = bitcast %union.anon* %7290 to i64*
  %7291 = load i64, i64* %RBP.i260
  %7292 = sub i64 %7291, 44
  %7293 = load i64, i64* %PC.i258
  %7294 = add i64 %7293, 3
  store i64 %7294, i64* %PC.i258
  %7295 = inttoptr i64 %7292 to i32*
  %7296 = load i32, i32* %7295
  %7297 = zext i32 %7296 to i64
  store i64 %7297, i64* %RAX.i259, align 8
  store %struct.Memory* %loadMem_43e542, %struct.Memory** %MEMORY
  %loadMem_43e545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7299 = getelementptr inbounds %struct.GPR, %struct.GPR* %7298, i32 0, i32 33
  %7300 = getelementptr inbounds %struct.Reg, %struct.Reg* %7299, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %7300 to i64*
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7302 = getelementptr inbounds %struct.GPR, %struct.GPR* %7301, i32 0, i32 1
  %7303 = getelementptr inbounds %struct.Reg, %struct.Reg* %7302, i32 0, i32 0
  %EAX.i256 = bitcast %union.anon* %7303 to i32*
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7305 = getelementptr inbounds %struct.GPR, %struct.GPR* %7304, i32 0, i32 15
  %7306 = getelementptr inbounds %struct.Reg, %struct.Reg* %7305, i32 0, i32 0
  %RBP.i257 = bitcast %union.anon* %7306 to i64*
  %7307 = load i32, i32* %EAX.i256
  %7308 = zext i32 %7307 to i64
  %7309 = load i64, i64* %RBP.i257
  %7310 = sub i64 %7309, 52
  %7311 = load i64, i64* %PC.i255
  %7312 = add i64 %7311, 3
  store i64 %7312, i64* %PC.i255
  %7313 = inttoptr i64 %7310 to i32*
  %7314 = load i32, i32* %7313
  %7315 = sub i32 %7307, %7314
  %7316 = icmp ult i32 %7307, %7314
  %7317 = zext i1 %7316 to i8
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7317, i8* %7318, align 1
  %7319 = and i32 %7315, 255
  %7320 = call i32 @llvm.ctpop.i32(i32 %7319)
  %7321 = trunc i32 %7320 to i8
  %7322 = and i8 %7321, 1
  %7323 = xor i8 %7322, 1
  %7324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7323, i8* %7324, align 1
  %7325 = xor i32 %7314, %7307
  %7326 = xor i32 %7325, %7315
  %7327 = lshr i32 %7326, 4
  %7328 = trunc i32 %7327 to i8
  %7329 = and i8 %7328, 1
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7329, i8* %7330, align 1
  %7331 = icmp eq i32 %7315, 0
  %7332 = zext i1 %7331 to i8
  %7333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7332, i8* %7333, align 1
  %7334 = lshr i32 %7315, 31
  %7335 = trunc i32 %7334 to i8
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7335, i8* %7336, align 1
  %7337 = lshr i32 %7307, 31
  %7338 = lshr i32 %7314, 31
  %7339 = xor i32 %7338, %7337
  %7340 = xor i32 %7334, %7337
  %7341 = add i32 %7340, %7339
  %7342 = icmp eq i32 %7341, 2
  %7343 = zext i1 %7342 to i8
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7343, i8* %7344, align 1
  store %struct.Memory* %loadMem_43e545, %struct.Memory** %MEMORY
  %loadMem_43e548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7346 = getelementptr inbounds %struct.GPR, %struct.GPR* %7345, i32 0, i32 33
  %7347 = getelementptr inbounds %struct.Reg, %struct.Reg* %7346, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %7347 to i64*
  %7348 = load i64, i64* %PC.i254
  %7349 = add i64 %7348, 117
  %7350 = load i64, i64* %PC.i254
  %7351 = add i64 %7350, 6
  %7352 = load i64, i64* %PC.i254
  %7353 = add i64 %7352, 6
  store i64 %7353, i64* %PC.i254
  %7354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7355 = load i8, i8* %7354, align 1
  %7356 = icmp ne i8 %7355, 0
  %7357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7358 = load i8, i8* %7357, align 1
  %7359 = icmp ne i8 %7358, 0
  %7360 = xor i1 %7356, %7359
  %7361 = xor i1 %7360, true
  %7362 = zext i1 %7361 to i8
  store i8 %7362, i8* %BRANCH_TAKEN, align 1
  %7363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7364 = select i1 %7360, i64 %7351, i64 %7349
  store i64 %7364, i64* %7363, align 8
  store %struct.Memory* %loadMem_43e548, %struct.Memory** %MEMORY
  %loadBr_43e548 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e548 = icmp eq i8 %loadBr_43e548, 1
  br i1 %cmpBr_43e548, label %block_.L_43e5bd, label %block_43e54e

block_43e54e:                                     ; preds = %block_.L_43e542
  %loadMem_43e54e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7366 = getelementptr inbounds %struct.GPR, %struct.GPR* %7365, i32 0, i32 33
  %7367 = getelementptr inbounds %struct.Reg, %struct.Reg* %7366, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %7367 to i64*
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7369 = getelementptr inbounds %struct.GPR, %struct.GPR* %7368, i32 0, i32 1
  %7370 = getelementptr inbounds %struct.Reg, %struct.Reg* %7369, i32 0, i32 0
  %RAX.i253 = bitcast %union.anon* %7370 to i64*
  %7371 = load i64, i64* %PC.i252
  %7372 = add i64 %7371, 5
  store i64 %7372, i64* %PC.i252
  store i64 2, i64* %RAX.i253, align 8
  store %struct.Memory* %loadMem_43e54e, %struct.Memory** %MEMORY
  %loadMem_43e553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7374 = getelementptr inbounds %struct.GPR, %struct.GPR* %7373, i32 0, i32 33
  %7375 = getelementptr inbounds %struct.Reg, %struct.Reg* %7374, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %7375 to i64*
  %7376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7377 = getelementptr inbounds %struct.GPR, %struct.GPR* %7376, i32 0, i32 5
  %7378 = getelementptr inbounds %struct.Reg, %struct.Reg* %7377, i32 0, i32 0
  %RCX.i250 = bitcast %union.anon* %7378 to i64*
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7380 = getelementptr inbounds %struct.GPR, %struct.GPR* %7379, i32 0, i32 15
  %7381 = getelementptr inbounds %struct.Reg, %struct.Reg* %7380, i32 0, i32 0
  %RBP.i251 = bitcast %union.anon* %7381 to i64*
  %7382 = load i64, i64* %RBP.i251
  %7383 = sub i64 %7382, 80
  %7384 = load i64, i64* %PC.i249
  %7385 = add i64 %7384, 4
  store i64 %7385, i64* %PC.i249
  %7386 = inttoptr i64 %7383 to i64*
  %7387 = load i64, i64* %7386
  store i64 %7387, i64* %RCX.i250, align 8
  store %struct.Memory* %loadMem_43e553, %struct.Memory** %MEMORY
  %loadMem_43e557 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7389 = getelementptr inbounds %struct.GPR, %struct.GPR* %7388, i32 0, i32 33
  %7390 = getelementptr inbounds %struct.Reg, %struct.Reg* %7389, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %7390 to i64*
  %7391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7392 = getelementptr inbounds %struct.GPR, %struct.GPR* %7391, i32 0, i32 5
  %7393 = getelementptr inbounds %struct.Reg, %struct.Reg* %7392, i32 0, i32 0
  %RCX.i247 = bitcast %union.anon* %7393 to i64*
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7395 = getelementptr inbounds %struct.GPR, %struct.GPR* %7394, i32 0, i32 7
  %7396 = getelementptr inbounds %struct.Reg, %struct.Reg* %7395, i32 0, i32 0
  %RDX.i248 = bitcast %union.anon* %7396 to i64*
  %7397 = load i64, i64* %RCX.i247
  %7398 = load i64, i64* %PC.i246
  %7399 = add i64 %7398, 3
  store i64 %7399, i64* %PC.i246
  store i64 %7397, i64* %RDX.i248, align 8
  store %struct.Memory* %loadMem_43e557, %struct.Memory** %MEMORY
  %loadMem_43e55a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 33
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %7402 to i64*
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7404 = getelementptr inbounds %struct.GPR, %struct.GPR* %7403, i32 0, i32 7
  %7405 = getelementptr inbounds %struct.Reg, %struct.Reg* %7404, i32 0, i32 0
  %RDX.i245 = bitcast %union.anon* %7405 to i64*
  %7406 = load i64, i64* %RDX.i245
  %7407 = load i64, i64* %PC.i244
  %7408 = add i64 %7407, 4
  store i64 %7408, i64* %PC.i244
  %7409 = add i64 4, %7406
  store i64 %7409, i64* %RDX.i245, align 8
  %7410 = icmp ult i64 %7409, %7406
  %7411 = icmp ult i64 %7409, 4
  %7412 = or i1 %7410, %7411
  %7413 = zext i1 %7412 to i8
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7413, i8* %7414, align 1
  %7415 = trunc i64 %7409 to i32
  %7416 = and i32 %7415, 255
  %7417 = call i32 @llvm.ctpop.i32(i32 %7416)
  %7418 = trunc i32 %7417 to i8
  %7419 = and i8 %7418, 1
  %7420 = xor i8 %7419, 1
  %7421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7420, i8* %7421, align 1
  %7422 = xor i64 4, %7406
  %7423 = xor i64 %7422, %7409
  %7424 = lshr i64 %7423, 4
  %7425 = trunc i64 %7424 to i8
  %7426 = and i8 %7425, 1
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7426, i8* %7427, align 1
  %7428 = icmp eq i64 %7409, 0
  %7429 = zext i1 %7428 to i8
  %7430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7429, i8* %7430, align 1
  %7431 = lshr i64 %7409, 63
  %7432 = trunc i64 %7431 to i8
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7432, i8* %7433, align 1
  %7434 = lshr i64 %7406, 63
  %7435 = xor i64 %7431, %7434
  %7436 = add i64 %7435, %7431
  %7437 = icmp eq i64 %7436, 2
  %7438 = zext i1 %7437 to i8
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7438, i8* %7439, align 1
  store %struct.Memory* %loadMem_43e55a, %struct.Memory** %MEMORY
  %loadMem_43e55e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7441 = getelementptr inbounds %struct.GPR, %struct.GPR* %7440, i32 0, i32 33
  %7442 = getelementptr inbounds %struct.Reg, %struct.Reg* %7441, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %7442 to i64*
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7444 = getelementptr inbounds %struct.GPR, %struct.GPR* %7443, i32 0, i32 7
  %7445 = getelementptr inbounds %struct.Reg, %struct.Reg* %7444, i32 0, i32 0
  %RDX.i242 = bitcast %union.anon* %7445 to i64*
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7447 = getelementptr inbounds %struct.GPR, %struct.GPR* %7446, i32 0, i32 15
  %7448 = getelementptr inbounds %struct.Reg, %struct.Reg* %7447, i32 0, i32 0
  %RBP.i243 = bitcast %union.anon* %7448 to i64*
  %7449 = load i64, i64* %RBP.i243
  %7450 = sub i64 %7449, 80
  %7451 = load i64, i64* %RDX.i242
  %7452 = load i64, i64* %PC.i241
  %7453 = add i64 %7452, 4
  store i64 %7453, i64* %PC.i241
  %7454 = inttoptr i64 %7450 to i64*
  store i64 %7451, i64* %7454
  store %struct.Memory* %loadMem_43e55e, %struct.Memory** %MEMORY
  %loadMem_43e562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7456 = getelementptr inbounds %struct.GPR, %struct.GPR* %7455, i32 0, i32 33
  %7457 = getelementptr inbounds %struct.Reg, %struct.Reg* %7456, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %7457 to i64*
  %7458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7459 = getelementptr inbounds %struct.GPR, %struct.GPR* %7458, i32 0, i32 5
  %7460 = getelementptr inbounds %struct.Reg, %struct.Reg* %7459, i32 0, i32 0
  %RCX.i239 = bitcast %union.anon* %7460 to i64*
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7462 = getelementptr inbounds %struct.GPR, %struct.GPR* %7461, i32 0, i32 9
  %7463 = getelementptr inbounds %struct.Reg, %struct.Reg* %7462, i32 0, i32 0
  %RSI.i240 = bitcast %union.anon* %7463 to i64*
  %7464 = load i64, i64* %RCX.i239
  %7465 = load i64, i64* %PC.i238
  %7466 = add i64 %7465, 2
  store i64 %7466, i64* %PC.i238
  %7467 = inttoptr i64 %7464 to i32*
  %7468 = load i32, i32* %7467
  %7469 = zext i32 %7468 to i64
  store i64 %7469, i64* %RSI.i240, align 8
  store %struct.Memory* %loadMem_43e562, %struct.Memory** %MEMORY
  %loadMem_43e564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7471 = getelementptr inbounds %struct.GPR, %struct.GPR* %7470, i32 0, i32 33
  %7472 = getelementptr inbounds %struct.Reg, %struct.Reg* %7471, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %7472 to i64*
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7474 = getelementptr inbounds %struct.GPR, %struct.GPR* %7473, i32 0, i32 5
  %7475 = getelementptr inbounds %struct.Reg, %struct.Reg* %7474, i32 0, i32 0
  %RCX.i236 = bitcast %union.anon* %7475 to i64*
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7477 = getelementptr inbounds %struct.GPR, %struct.GPR* %7476, i32 0, i32 15
  %7478 = getelementptr inbounds %struct.Reg, %struct.Reg* %7477, i32 0, i32 0
  %RBP.i237 = bitcast %union.anon* %7478 to i64*
  %7479 = load i64, i64* %RBP.i237
  %7480 = sub i64 %7479, 88
  %7481 = load i64, i64* %PC.i235
  %7482 = add i64 %7481, 4
  store i64 %7482, i64* %PC.i235
  %7483 = inttoptr i64 %7480 to i64*
  %7484 = load i64, i64* %7483
  store i64 %7484, i64* %RCX.i236, align 8
  store %struct.Memory* %loadMem_43e564, %struct.Memory** %MEMORY
  %loadMem_43e568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7486 = getelementptr inbounds %struct.GPR, %struct.GPR* %7485, i32 0, i32 33
  %7487 = getelementptr inbounds %struct.Reg, %struct.Reg* %7486, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %7487 to i64*
  %7488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7489 = getelementptr inbounds %struct.GPR, %struct.GPR* %7488, i32 0, i32 5
  %7490 = getelementptr inbounds %struct.Reg, %struct.Reg* %7489, i32 0, i32 0
  %RCX.i233 = bitcast %union.anon* %7490 to i64*
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7492 = getelementptr inbounds %struct.GPR, %struct.GPR* %7491, i32 0, i32 7
  %7493 = getelementptr inbounds %struct.Reg, %struct.Reg* %7492, i32 0, i32 0
  %RDX.i234 = bitcast %union.anon* %7493 to i64*
  %7494 = load i64, i64* %RCX.i233
  %7495 = load i64, i64* %PC.i232
  %7496 = add i64 %7495, 3
  store i64 %7496, i64* %PC.i232
  store i64 %7494, i64* %RDX.i234, align 8
  store %struct.Memory* %loadMem_43e568, %struct.Memory** %MEMORY
  %loadMem_43e56b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7498 = getelementptr inbounds %struct.GPR, %struct.GPR* %7497, i32 0, i32 33
  %7499 = getelementptr inbounds %struct.Reg, %struct.Reg* %7498, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %7499 to i64*
  %7500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7501 = getelementptr inbounds %struct.GPR, %struct.GPR* %7500, i32 0, i32 7
  %7502 = getelementptr inbounds %struct.Reg, %struct.Reg* %7501, i32 0, i32 0
  %RDX.i231 = bitcast %union.anon* %7502 to i64*
  %7503 = load i64, i64* %RDX.i231
  %7504 = load i64, i64* %PC.i230
  %7505 = add i64 %7504, 4
  store i64 %7505, i64* %PC.i230
  %7506 = add i64 4, %7503
  store i64 %7506, i64* %RDX.i231, align 8
  %7507 = icmp ult i64 %7506, %7503
  %7508 = icmp ult i64 %7506, 4
  %7509 = or i1 %7507, %7508
  %7510 = zext i1 %7509 to i8
  %7511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7510, i8* %7511, align 1
  %7512 = trunc i64 %7506 to i32
  %7513 = and i32 %7512, 255
  %7514 = call i32 @llvm.ctpop.i32(i32 %7513)
  %7515 = trunc i32 %7514 to i8
  %7516 = and i8 %7515, 1
  %7517 = xor i8 %7516, 1
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7517, i8* %7518, align 1
  %7519 = xor i64 4, %7503
  %7520 = xor i64 %7519, %7506
  %7521 = lshr i64 %7520, 4
  %7522 = trunc i64 %7521 to i8
  %7523 = and i8 %7522, 1
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7523, i8* %7524, align 1
  %7525 = icmp eq i64 %7506, 0
  %7526 = zext i1 %7525 to i8
  %7527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7526, i8* %7527, align 1
  %7528 = lshr i64 %7506, 63
  %7529 = trunc i64 %7528 to i8
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7529, i8* %7530, align 1
  %7531 = lshr i64 %7503, 63
  %7532 = xor i64 %7528, %7531
  %7533 = add i64 %7532, %7528
  %7534 = icmp eq i64 %7533, 2
  %7535 = zext i1 %7534 to i8
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7535, i8* %7536, align 1
  store %struct.Memory* %loadMem_43e56b, %struct.Memory** %MEMORY
  %loadMem_43e56f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7538 = getelementptr inbounds %struct.GPR, %struct.GPR* %7537, i32 0, i32 33
  %7539 = getelementptr inbounds %struct.Reg, %struct.Reg* %7538, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %7539 to i64*
  %7540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7541 = getelementptr inbounds %struct.GPR, %struct.GPR* %7540, i32 0, i32 7
  %7542 = getelementptr inbounds %struct.Reg, %struct.Reg* %7541, i32 0, i32 0
  %RDX.i228 = bitcast %union.anon* %7542 to i64*
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7544 = getelementptr inbounds %struct.GPR, %struct.GPR* %7543, i32 0, i32 15
  %7545 = getelementptr inbounds %struct.Reg, %struct.Reg* %7544, i32 0, i32 0
  %RBP.i229 = bitcast %union.anon* %7545 to i64*
  %7546 = load i64, i64* %RBP.i229
  %7547 = sub i64 %7546, 88
  %7548 = load i64, i64* %RDX.i228
  %7549 = load i64, i64* %PC.i227
  %7550 = add i64 %7549, 4
  store i64 %7550, i64* %PC.i227
  %7551 = inttoptr i64 %7547 to i64*
  store i64 %7548, i64* %7551
  store %struct.Memory* %loadMem_43e56f, %struct.Memory** %MEMORY
  %loadMem_43e573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7553 = getelementptr inbounds %struct.GPR, %struct.GPR* %7552, i32 0, i32 33
  %7554 = getelementptr inbounds %struct.Reg, %struct.Reg* %7553, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %7554 to i64*
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7556 = getelementptr inbounds %struct.GPR, %struct.GPR* %7555, i32 0, i32 5
  %7557 = getelementptr inbounds %struct.Reg, %struct.Reg* %7556, i32 0, i32 0
  %RCX.i225 = bitcast %union.anon* %7557 to i64*
  %7558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7559 = getelementptr inbounds %struct.GPR, %struct.GPR* %7558, i32 0, i32 9
  %7560 = getelementptr inbounds %struct.Reg, %struct.Reg* %7559, i32 0, i32 0
  %RSI.i226 = bitcast %union.anon* %7560 to i64*
  %7561 = load i64, i64* %RSI.i226
  %7562 = load i64, i64* %RCX.i225
  %7563 = load i64, i64* %PC.i224
  %7564 = add i64 %7563, 2
  store i64 %7564, i64* %PC.i224
  %7565 = trunc i64 %7561 to i32
  %7566 = inttoptr i64 %7562 to i32*
  %7567 = load i32, i32* %7566
  %7568 = add i32 %7567, %7565
  %7569 = zext i32 %7568 to i64
  store i64 %7569, i64* %RSI.i226, align 8
  %7570 = icmp ult i32 %7568, %7565
  %7571 = icmp ult i32 %7568, %7567
  %7572 = or i1 %7570, %7571
  %7573 = zext i1 %7572 to i8
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7573, i8* %7574, align 1
  %7575 = and i32 %7568, 255
  %7576 = call i32 @llvm.ctpop.i32(i32 %7575)
  %7577 = trunc i32 %7576 to i8
  %7578 = and i8 %7577, 1
  %7579 = xor i8 %7578, 1
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7579, i8* %7580, align 1
  %7581 = xor i32 %7567, %7565
  %7582 = xor i32 %7581, %7568
  %7583 = lshr i32 %7582, 4
  %7584 = trunc i32 %7583 to i8
  %7585 = and i8 %7584, 1
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7585, i8* %7586, align 1
  %7587 = icmp eq i32 %7568, 0
  %7588 = zext i1 %7587 to i8
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7588, i8* %7589, align 1
  %7590 = lshr i32 %7568, 31
  %7591 = trunc i32 %7590 to i8
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7591, i8* %7592, align 1
  %7593 = lshr i32 %7565, 31
  %7594 = lshr i32 %7567, 31
  %7595 = xor i32 %7590, %7593
  %7596 = xor i32 %7590, %7594
  %7597 = add i32 %7595, %7596
  %7598 = icmp eq i32 %7597, 2
  %7599 = zext i1 %7598 to i8
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7599, i8* %7600, align 1
  store %struct.Memory* %loadMem_43e573, %struct.Memory** %MEMORY
  %loadMem_43e575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 33
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %7603 to i64*
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7605 = getelementptr inbounds %struct.GPR, %struct.GPR* %7604, i32 0, i32 9
  %7606 = getelementptr inbounds %struct.Reg, %struct.Reg* %7605, i32 0, i32 0
  %RSI.i223 = bitcast %union.anon* %7606 to i64*
  %7607 = load i64, i64* %RSI.i223
  %7608 = load i64, i64* %PC.i222
  %7609 = add i64 %7608, 3
  store i64 %7609, i64* %PC.i222
  %7610 = trunc i64 %7607 to i32
  %7611 = add i32 1, %7610
  %7612 = zext i32 %7611 to i64
  store i64 %7612, i64* %RSI.i223, align 8
  %7613 = icmp ult i32 %7611, %7610
  %7614 = icmp ult i32 %7611, 1
  %7615 = or i1 %7613, %7614
  %7616 = zext i1 %7615 to i8
  %7617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7616, i8* %7617, align 1
  %7618 = and i32 %7611, 255
  %7619 = call i32 @llvm.ctpop.i32(i32 %7618)
  %7620 = trunc i32 %7619 to i8
  %7621 = and i8 %7620, 1
  %7622 = xor i8 %7621, 1
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7622, i8* %7623, align 1
  %7624 = xor i64 1, %7607
  %7625 = trunc i64 %7624 to i32
  %7626 = xor i32 %7625, %7611
  %7627 = lshr i32 %7626, 4
  %7628 = trunc i32 %7627 to i8
  %7629 = and i8 %7628, 1
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7629, i8* %7630, align 1
  %7631 = icmp eq i32 %7611, 0
  %7632 = zext i1 %7631 to i8
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7632, i8* %7633, align 1
  %7634 = lshr i32 %7611, 31
  %7635 = trunc i32 %7634 to i8
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7635, i8* %7636, align 1
  %7637 = lshr i32 %7610, 31
  %7638 = xor i32 %7634, %7637
  %7639 = add i32 %7638, %7634
  %7640 = icmp eq i32 %7639, 2
  %7641 = zext i1 %7640 to i8
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7641, i8* %7642, align 1
  store %struct.Memory* %loadMem_43e575, %struct.Memory** %MEMORY
  %loadMem_43e578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7644 = getelementptr inbounds %struct.GPR, %struct.GPR* %7643, i32 0, i32 33
  %7645 = getelementptr inbounds %struct.Reg, %struct.Reg* %7644, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %7645 to i64*
  %7646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7647 = getelementptr inbounds %struct.GPR, %struct.GPR* %7646, i32 0, i32 1
  %7648 = getelementptr inbounds %struct.Reg, %struct.Reg* %7647, i32 0, i32 0
  %EAX.i220 = bitcast %union.anon* %7648 to i32*
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7650 = getelementptr inbounds %struct.GPR, %struct.GPR* %7649, i32 0, i32 15
  %7651 = getelementptr inbounds %struct.Reg, %struct.Reg* %7650, i32 0, i32 0
  %RBP.i221 = bitcast %union.anon* %7651 to i64*
  %7652 = load i64, i64* %RBP.i221
  %7653 = sub i64 %7652, 140
  %7654 = load i32, i32* %EAX.i220
  %7655 = zext i32 %7654 to i64
  %7656 = load i64, i64* %PC.i219
  %7657 = add i64 %7656, 6
  store i64 %7657, i64* %PC.i219
  %7658 = inttoptr i64 %7653 to i32*
  store i32 %7654, i32* %7658
  store %struct.Memory* %loadMem_43e578, %struct.Memory** %MEMORY
  %loadMem_43e57e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7660 = getelementptr inbounds %struct.GPR, %struct.GPR* %7659, i32 0, i32 33
  %7661 = getelementptr inbounds %struct.Reg, %struct.Reg* %7660, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %7661 to i64*
  %7662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7663 = getelementptr inbounds %struct.GPR, %struct.GPR* %7662, i32 0, i32 9
  %7664 = getelementptr inbounds %struct.Reg, %struct.Reg* %7663, i32 0, i32 0
  %ESI.i217 = bitcast %union.anon* %7664 to i32*
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7666 = getelementptr inbounds %struct.GPR, %struct.GPR* %7665, i32 0, i32 1
  %7667 = getelementptr inbounds %struct.Reg, %struct.Reg* %7666, i32 0, i32 0
  %RAX.i218 = bitcast %union.anon* %7667 to i64*
  %7668 = load i32, i32* %ESI.i217
  %7669 = zext i32 %7668 to i64
  %7670 = load i64, i64* %PC.i216
  %7671 = add i64 %7670, 2
  store i64 %7671, i64* %PC.i216
  %7672 = and i64 %7669, 4294967295
  store i64 %7672, i64* %RAX.i218, align 8
  store %struct.Memory* %loadMem_43e57e, %struct.Memory** %MEMORY
  %loadMem_43e580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7674 = getelementptr inbounds %struct.GPR, %struct.GPR* %7673, i32 0, i32 33
  %7675 = getelementptr inbounds %struct.Reg, %struct.Reg* %7674, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %7675 to i64*
  %7676 = load i64, i64* %PC.i215
  %7677 = add i64 %7676, 1
  store i64 %7677, i64* %PC.i215
  %7678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7680 = bitcast %union.anon* %7679 to i32*
  %7681 = load i32, i32* %7680, align 8
  %7682 = sext i32 %7681 to i64
  %7683 = lshr i64 %7682, 32
  store i64 %7683, i64* %7678, align 8
  store %struct.Memory* %loadMem_43e580, %struct.Memory** %MEMORY
  %loadMem_43e581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7685 = getelementptr inbounds %struct.GPR, %struct.GPR* %7684, i32 0, i32 33
  %7686 = getelementptr inbounds %struct.Reg, %struct.Reg* %7685, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %7686 to i64*
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7688 = getelementptr inbounds %struct.GPR, %struct.GPR* %7687, i32 0, i32 9
  %7689 = getelementptr inbounds %struct.Reg, %struct.Reg* %7688, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %7689 to i64*
  %7690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7691 = getelementptr inbounds %struct.GPR, %struct.GPR* %7690, i32 0, i32 15
  %7692 = getelementptr inbounds %struct.Reg, %struct.Reg* %7691, i32 0, i32 0
  %RBP.i214 = bitcast %union.anon* %7692 to i64*
  %7693 = load i64, i64* %RBP.i214
  %7694 = sub i64 %7693, 140
  %7695 = load i64, i64* %PC.i213
  %7696 = add i64 %7695, 6
  store i64 %7696, i64* %PC.i213
  %7697 = inttoptr i64 %7694 to i32*
  %7698 = load i32, i32* %7697
  %7699 = zext i32 %7698 to i64
  store i64 %7699, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_43e581, %struct.Memory** %MEMORY
  %loadMem_43e587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7701 = getelementptr inbounds %struct.GPR, %struct.GPR* %7700, i32 0, i32 33
  %7702 = getelementptr inbounds %struct.Reg, %struct.Reg* %7701, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %7702 to i64*
  %7703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7704 = getelementptr inbounds %struct.GPR, %struct.GPR* %7703, i32 0, i32 9
  %7705 = getelementptr inbounds %struct.Reg, %struct.Reg* %7704, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %7705 to i32*
  %7706 = load i32, i32* %ESI.i
  %7707 = zext i32 %7706 to i64
  %7708 = load i64, i64* %PC.i209
  %7709 = add i64 %7708, 2
  store i64 %7709, i64* %PC.i209
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7711 = bitcast %union.anon* %7710 to i32*
  %7712 = load i32, i32* %7711, align 8
  %7713 = zext i32 %7712 to i64
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7715 = bitcast %union.anon* %7714 to i32*
  %7716 = load i32, i32* %7715, align 8
  %7717 = zext i32 %7716 to i64
  %7718 = shl i64 %7707, 32
  %7719 = ashr exact i64 %7718, 32
  %7720 = shl i64 %7717, 32
  %7721 = or i64 %7720, %7713
  %7722 = sdiv i64 %7721, %7719
  %7723 = shl i64 %7722, 32
  %7724 = ashr exact i64 %7723, 32
  %7725 = icmp eq i64 %7722, %7724
  br i1 %7725, label %7730, label %7726

; <label>:7726:                                   ; preds = %block_43e54e
  %7727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7728 = load i64, i64* %7727, align 8
  %7729 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7728, %struct.Memory* %loadMem_43e587)
  br label %routine_idivl__esi.exit

; <label>:7730:                                   ; preds = %block_43e54e
  %7731 = srem i64 %7721, %7719
  %7732 = getelementptr inbounds %union.anon, %union.anon* %7710, i64 0, i32 0
  %7733 = and i64 %7722, 4294967295
  store i64 %7733, i64* %7732, align 8
  %7734 = getelementptr inbounds %union.anon, %union.anon* %7714, i64 0, i32 0
  %7735 = and i64 %7731, 4294967295
  store i64 %7735, i64* %7734, align 8
  %7736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7736, align 1
  %7737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7737, align 1
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7738, align 1
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7739, align 1
  %7740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7740, align 1
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7741, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %7726, %7730
  %7742 = phi %struct.Memory* [ %7729, %7726 ], [ %loadMem_43e587, %7730 ]
  store %struct.Memory* %7742, %struct.Memory** %MEMORY
  %loadMem_43e589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7744 = getelementptr inbounds %struct.GPR, %struct.GPR* %7743, i32 0, i32 33
  %7745 = getelementptr inbounds %struct.Reg, %struct.Reg* %7744, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %7745 to i64*
  %7746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7747 = getelementptr inbounds %struct.GPR, %struct.GPR* %7746, i32 0, i32 1
  %7748 = getelementptr inbounds %struct.Reg, %struct.Reg* %7747, i32 0, i32 0
  %AX.i = bitcast %union.anon* %7748 to i16*
  %7749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7750 = getelementptr inbounds %struct.GPR, %struct.GPR* %7749, i32 0, i32 11
  %7751 = getelementptr inbounds %struct.Reg, %struct.Reg* %7750, i32 0, i32 0
  %DI.i208 = bitcast %union.anon* %7751 to i16*
  %7752 = load i16, i16* %AX.i
  %7753 = zext i16 %7752 to i64
  %7754 = load i64, i64* %PC.i207
  %7755 = add i64 %7754, 3
  store i64 %7755, i64* %PC.i207
  store i16 %7752, i16* %DI.i208, align 2
  store %struct.Memory* %loadMem_43e589, %struct.Memory** %MEMORY
  %loadMem_43e58c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7757 = getelementptr inbounds %struct.GPR, %struct.GPR* %7756, i32 0, i32 33
  %7758 = getelementptr inbounds %struct.Reg, %struct.Reg* %7757, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %7758 to i64*
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7760 = getelementptr inbounds %struct.GPR, %struct.GPR* %7759, i32 0, i32 5
  %7761 = getelementptr inbounds %struct.Reg, %struct.Reg* %7760, i32 0, i32 0
  %RCX.i206 = bitcast %union.anon* %7761 to i64*
  %7762 = load i64, i64* %PC.i205
  %7763 = add i64 %7762, 8
  store i64 %7763, i64* %PC.i205
  %7764 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7764, i64* %RCX.i206, align 8
  store %struct.Memory* %loadMem_43e58c, %struct.Memory** %MEMORY
  %loadMem_43e594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7766 = getelementptr inbounds %struct.GPR, %struct.GPR* %7765, i32 0, i32 33
  %7767 = getelementptr inbounds %struct.Reg, %struct.Reg* %7766, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %7767 to i64*
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7769 = getelementptr inbounds %struct.GPR, %struct.GPR* %7768, i32 0, i32 5
  %7770 = getelementptr inbounds %struct.Reg, %struct.Reg* %7769, i32 0, i32 0
  %RCX.i204 = bitcast %union.anon* %7770 to i64*
  %7771 = load i64, i64* %RCX.i204
  %7772 = load i64, i64* %PC.i203
  %7773 = add i64 %7772, 7
  store i64 %7773, i64* %PC.i203
  %7774 = add i64 12600, %7771
  store i64 %7774, i64* %RCX.i204, align 8
  %7775 = icmp ult i64 %7774, %7771
  %7776 = icmp ult i64 %7774, 12600
  %7777 = or i1 %7775, %7776
  %7778 = zext i1 %7777 to i8
  %7779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7778, i8* %7779, align 1
  %7780 = trunc i64 %7774 to i32
  %7781 = and i32 %7780, 255
  %7782 = call i32 @llvm.ctpop.i32(i32 %7781)
  %7783 = trunc i32 %7782 to i8
  %7784 = and i8 %7783, 1
  %7785 = xor i8 %7784, 1
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7785, i8* %7786, align 1
  %7787 = xor i64 12600, %7771
  %7788 = xor i64 %7787, %7774
  %7789 = lshr i64 %7788, 4
  %7790 = trunc i64 %7789 to i8
  %7791 = and i8 %7790, 1
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7791, i8* %7792, align 1
  %7793 = icmp eq i64 %7774, 0
  %7794 = zext i1 %7793 to i8
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7794, i8* %7795, align 1
  %7796 = lshr i64 %7774, 63
  %7797 = trunc i64 %7796 to i8
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7797, i8* %7798, align 1
  %7799 = lshr i64 %7771, 63
  %7800 = xor i64 %7796, %7799
  %7801 = add i64 %7800, %7796
  %7802 = icmp eq i64 %7801, 2
  %7803 = zext i1 %7802 to i8
  %7804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7803, i8* %7804, align 1
  store %struct.Memory* %loadMem_43e594, %struct.Memory** %MEMORY
  %loadMem_43e59b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7806 = getelementptr inbounds %struct.GPR, %struct.GPR* %7805, i32 0, i32 33
  %7807 = getelementptr inbounds %struct.Reg, %struct.Reg* %7806, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %7807 to i64*
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7809 = getelementptr inbounds %struct.GPR, %struct.GPR* %7808, i32 0, i32 15
  %7810 = getelementptr inbounds %struct.Reg, %struct.Reg* %7809, i32 0, i32 0
  %RBP.i201 = bitcast %union.anon* %7810 to i64*
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7812 = getelementptr inbounds %struct.GPR, %struct.GPR* %7811, i32 0, i32 17
  %7813 = getelementptr inbounds %struct.Reg, %struct.Reg* %7812, i32 0, i32 0
  %R8.i202 = bitcast %union.anon* %7813 to i64*
  %7814 = load i64, i64* %RBP.i201
  %7815 = sub i64 %7814, 44
  %7816 = load i64, i64* %PC.i200
  %7817 = add i64 %7816, 4
  store i64 %7817, i64* %PC.i200
  %7818 = inttoptr i64 %7815 to i32*
  %7819 = load i32, i32* %7818
  %7820 = sext i32 %7819 to i64
  store i64 %7820, i64* %R8.i202, align 8
  store %struct.Memory* %loadMem_43e59b, %struct.Memory** %MEMORY
  %loadMem_43e59f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7822 = getelementptr inbounds %struct.GPR, %struct.GPR* %7821, i32 0, i32 33
  %7823 = getelementptr inbounds %struct.Reg, %struct.Reg* %7822, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %7823 to i64*
  %7824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7825 = getelementptr inbounds %struct.GPR, %struct.GPR* %7824, i32 0, i32 17
  %7826 = getelementptr inbounds %struct.Reg, %struct.Reg* %7825, i32 0, i32 0
  %R8.i199 = bitcast %union.anon* %7826 to i64*
  %7827 = load i64, i64* %R8.i199
  %7828 = load i64, i64* %PC.i198
  %7829 = add i64 %7828, 4
  store i64 %7829, i64* %PC.i198
  %7830 = shl i64 %7827, 4
  %7831 = icmp slt i64 %7830, 0
  %7832 = shl i64 %7830, 1
  store i64 %7832, i64* %R8.i199, align 8
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7834 = zext i1 %7831 to i8
  store i8 %7834, i8* %7833, align 1
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7836 = trunc i64 %7832 to i32
  %7837 = and i32 %7836, 254
  %7838 = call i32 @llvm.ctpop.i32(i32 %7837)
  %7839 = trunc i32 %7838 to i8
  %7840 = and i8 %7839, 1
  %7841 = xor i8 %7840, 1
  store i8 %7841, i8* %7835, align 1
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7842, align 1
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7844 = icmp eq i64 %7832, 0
  %7845 = zext i1 %7844 to i8
  store i8 %7845, i8* %7843, align 1
  %7846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7847 = lshr i64 %7832, 63
  %7848 = trunc i64 %7847 to i8
  store i8 %7848, i8* %7846, align 1
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7849, align 1
  store %struct.Memory* %loadMem_43e59f, %struct.Memory** %MEMORY
  %loadMem_43e5a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7851 = getelementptr inbounds %struct.GPR, %struct.GPR* %7850, i32 0, i32 33
  %7852 = getelementptr inbounds %struct.Reg, %struct.Reg* %7851, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %7852 to i64*
  %7853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7854 = getelementptr inbounds %struct.GPR, %struct.GPR* %7853, i32 0, i32 5
  %7855 = getelementptr inbounds %struct.Reg, %struct.Reg* %7854, i32 0, i32 0
  %RCX.i196 = bitcast %union.anon* %7855 to i64*
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7857 = getelementptr inbounds %struct.GPR, %struct.GPR* %7856, i32 0, i32 17
  %7858 = getelementptr inbounds %struct.Reg, %struct.Reg* %7857, i32 0, i32 0
  %R8.i197 = bitcast %union.anon* %7858 to i64*
  %7859 = load i64, i64* %RCX.i196
  %7860 = load i64, i64* %R8.i197
  %7861 = load i64, i64* %PC.i195
  %7862 = add i64 %7861, 3
  store i64 %7862, i64* %PC.i195
  %7863 = add i64 %7860, %7859
  store i64 %7863, i64* %RCX.i196, align 8
  %7864 = icmp ult i64 %7863, %7859
  %7865 = icmp ult i64 %7863, %7860
  %7866 = or i1 %7864, %7865
  %7867 = zext i1 %7866 to i8
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7867, i8* %7868, align 1
  %7869 = trunc i64 %7863 to i32
  %7870 = and i32 %7869, 255
  %7871 = call i32 @llvm.ctpop.i32(i32 %7870)
  %7872 = trunc i32 %7871 to i8
  %7873 = and i8 %7872, 1
  %7874 = xor i8 %7873, 1
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7874, i8* %7875, align 1
  %7876 = xor i64 %7860, %7859
  %7877 = xor i64 %7876, %7863
  %7878 = lshr i64 %7877, 4
  %7879 = trunc i64 %7878 to i8
  %7880 = and i8 %7879, 1
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7880, i8* %7881, align 1
  %7882 = icmp eq i64 %7863, 0
  %7883 = zext i1 %7882 to i8
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7883, i8* %7884, align 1
  %7885 = lshr i64 %7863, 63
  %7886 = trunc i64 %7885 to i8
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7886, i8* %7887, align 1
  %7888 = lshr i64 %7859, 63
  %7889 = lshr i64 %7860, 63
  %7890 = xor i64 %7885, %7888
  %7891 = xor i64 %7885, %7889
  %7892 = add i64 %7890, %7891
  %7893 = icmp eq i64 %7892, 2
  %7894 = zext i1 %7893 to i8
  %7895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7894, i8* %7895, align 1
  store %struct.Memory* %loadMem_43e5a3, %struct.Memory** %MEMORY
  %loadMem_43e5a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7897 = getelementptr inbounds %struct.GPR, %struct.GPR* %7896, i32 0, i32 33
  %7898 = getelementptr inbounds %struct.Reg, %struct.Reg* %7897, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %7898 to i64*
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7900 = getelementptr inbounds %struct.GPR, %struct.GPR* %7899, i32 0, i32 15
  %7901 = getelementptr inbounds %struct.Reg, %struct.Reg* %7900, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %7901 to i64*
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 17
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %R8.i194 = bitcast %union.anon* %7904 to i64*
  %7905 = load i64, i64* %RBP.i193
  %7906 = sub i64 %7905, 48
  %7907 = load i64, i64* %PC.i192
  %7908 = add i64 %7907, 4
  store i64 %7908, i64* %PC.i192
  %7909 = inttoptr i64 %7906 to i32*
  %7910 = load i32, i32* %7909
  %7911 = sext i32 %7910 to i64
  store i64 %7911, i64* %R8.i194, align 8
  store %struct.Memory* %loadMem_43e5a6, %struct.Memory** %MEMORY
  %loadMem_43e5aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 33
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %7914 to i64*
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 11
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %DI.i = bitcast %union.anon* %7917 to i16*
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 5
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %RCX.i191 = bitcast %union.anon* %7920 to i64*
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7922 = getelementptr inbounds %struct.GPR, %struct.GPR* %7921, i32 0, i32 17
  %7923 = getelementptr inbounds %struct.Reg, %struct.Reg* %7922, i32 0, i32 0
  %R8.i = bitcast %union.anon* %7923 to i64*
  %7924 = load i64, i64* %RCX.i191
  %7925 = load i64, i64* %R8.i
  %7926 = mul i64 %7925, 2
  %7927 = add i64 %7926, %7924
  %7928 = load i16, i16* %DI.i
  %7929 = zext i16 %7928 to i64
  %7930 = load i64, i64* %PC.i190
  %7931 = add i64 %7930, 5
  store i64 %7931, i64* %PC.i190
  %7932 = inttoptr i64 %7927 to i16*
  store i16 %7928, i16* %7932
  store %struct.Memory* %loadMem_43e5aa, %struct.Memory** %MEMORY
  %loadMem_43e5af = load %struct.Memory*, %struct.Memory** %MEMORY
  %7933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7934 = getelementptr inbounds %struct.GPR, %struct.GPR* %7933, i32 0, i32 33
  %7935 = getelementptr inbounds %struct.Reg, %struct.Reg* %7934, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %7935 to i64*
  %7936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7937 = getelementptr inbounds %struct.GPR, %struct.GPR* %7936, i32 0, i32 1
  %7938 = getelementptr inbounds %struct.Reg, %struct.Reg* %7937, i32 0, i32 0
  %RAX.i188 = bitcast %union.anon* %7938 to i64*
  %7939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7940 = getelementptr inbounds %struct.GPR, %struct.GPR* %7939, i32 0, i32 15
  %7941 = getelementptr inbounds %struct.Reg, %struct.Reg* %7940, i32 0, i32 0
  %RBP.i189 = bitcast %union.anon* %7941 to i64*
  %7942 = load i64, i64* %RBP.i189
  %7943 = sub i64 %7942, 44
  %7944 = load i64, i64* %PC.i187
  %7945 = add i64 %7944, 3
  store i64 %7945, i64* %PC.i187
  %7946 = inttoptr i64 %7943 to i32*
  %7947 = load i32, i32* %7946
  %7948 = zext i32 %7947 to i64
  store i64 %7948, i64* %RAX.i188, align 8
  store %struct.Memory* %loadMem_43e5af, %struct.Memory** %MEMORY
  %loadMem_43e5b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7950 = getelementptr inbounds %struct.GPR, %struct.GPR* %7949, i32 0, i32 33
  %7951 = getelementptr inbounds %struct.Reg, %struct.Reg* %7950, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %7951 to i64*
  %7952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7953 = getelementptr inbounds %struct.GPR, %struct.GPR* %7952, i32 0, i32 1
  %7954 = getelementptr inbounds %struct.Reg, %struct.Reg* %7953, i32 0, i32 0
  %RAX.i186 = bitcast %union.anon* %7954 to i64*
  %7955 = load i64, i64* %RAX.i186
  %7956 = load i64, i64* %PC.i185
  %7957 = add i64 %7956, 3
  store i64 %7957, i64* %PC.i185
  %7958 = trunc i64 %7955 to i32
  %7959 = add i32 1, %7958
  %7960 = zext i32 %7959 to i64
  store i64 %7960, i64* %RAX.i186, align 8
  %7961 = icmp ult i32 %7959, %7958
  %7962 = icmp ult i32 %7959, 1
  %7963 = or i1 %7961, %7962
  %7964 = zext i1 %7963 to i8
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7964, i8* %7965, align 1
  %7966 = and i32 %7959, 255
  %7967 = call i32 @llvm.ctpop.i32(i32 %7966)
  %7968 = trunc i32 %7967 to i8
  %7969 = and i8 %7968, 1
  %7970 = xor i8 %7969, 1
  %7971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7970, i8* %7971, align 1
  %7972 = xor i64 1, %7955
  %7973 = trunc i64 %7972 to i32
  %7974 = xor i32 %7973, %7959
  %7975 = lshr i32 %7974, 4
  %7976 = trunc i32 %7975 to i8
  %7977 = and i8 %7976, 1
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7977, i8* %7978, align 1
  %7979 = icmp eq i32 %7959, 0
  %7980 = zext i1 %7979 to i8
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7980, i8* %7981, align 1
  %7982 = lshr i32 %7959, 31
  %7983 = trunc i32 %7982 to i8
  %7984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7983, i8* %7984, align 1
  %7985 = lshr i32 %7958, 31
  %7986 = xor i32 %7982, %7985
  %7987 = add i32 %7986, %7982
  %7988 = icmp eq i32 %7987, 2
  %7989 = zext i1 %7988 to i8
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7989, i8* %7990, align 1
  store %struct.Memory* %loadMem_43e5b2, %struct.Memory** %MEMORY
  %loadMem_43e5b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7992 = getelementptr inbounds %struct.GPR, %struct.GPR* %7991, i32 0, i32 33
  %7993 = getelementptr inbounds %struct.Reg, %struct.Reg* %7992, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %7993 to i64*
  %7994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7995 = getelementptr inbounds %struct.GPR, %struct.GPR* %7994, i32 0, i32 1
  %7996 = getelementptr inbounds %struct.Reg, %struct.Reg* %7995, i32 0, i32 0
  %EAX.i183 = bitcast %union.anon* %7996 to i32*
  %7997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7998 = getelementptr inbounds %struct.GPR, %struct.GPR* %7997, i32 0, i32 15
  %7999 = getelementptr inbounds %struct.Reg, %struct.Reg* %7998, i32 0, i32 0
  %RBP.i184 = bitcast %union.anon* %7999 to i64*
  %8000 = load i64, i64* %RBP.i184
  %8001 = sub i64 %8000, 44
  %8002 = load i32, i32* %EAX.i183
  %8003 = zext i32 %8002 to i64
  %8004 = load i64, i64* %PC.i182
  %8005 = add i64 %8004, 3
  store i64 %8005, i64* %PC.i182
  %8006 = inttoptr i64 %8001 to i32*
  store i32 %8002, i32* %8006
  store %struct.Memory* %loadMem_43e5b5, %struct.Memory** %MEMORY
  %loadMem_43e5b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8008 = getelementptr inbounds %struct.GPR, %struct.GPR* %8007, i32 0, i32 33
  %8009 = getelementptr inbounds %struct.Reg, %struct.Reg* %8008, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %8009 to i64*
  %8010 = load i64, i64* %PC.i181
  %8011 = add i64 %8010, -118
  %8012 = load i64, i64* %PC.i181
  %8013 = add i64 %8012, 5
  store i64 %8013, i64* %PC.i181
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8011, i64* %8014, align 8
  store %struct.Memory* %loadMem_43e5b8, %struct.Memory** %MEMORY
  br label %block_.L_43e542

block_.L_43e5bd:                                  ; preds = %block_.L_43e542
  %loadMem_43e5bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8016 = getelementptr inbounds %struct.GPR, %struct.GPR* %8015, i32 0, i32 33
  %8017 = getelementptr inbounds %struct.Reg, %struct.Reg* %8016, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %8017 to i64*
  %8018 = load i64, i64* %PC.i180
  %8019 = add i64 %8018, 5
  %8020 = load i64, i64* %PC.i180
  %8021 = add i64 %8020, 5
  store i64 %8021, i64* %PC.i180
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8019, i64* %8022, align 8
  store %struct.Memory* %loadMem_43e5bd, %struct.Memory** %MEMORY
  br label %block_.L_43e5c2

block_.L_43e5c2:                                  ; preds = %block_.L_43e5bd
  %loadMem_43e5c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8024 = getelementptr inbounds %struct.GPR, %struct.GPR* %8023, i32 0, i32 33
  %8025 = getelementptr inbounds %struct.Reg, %struct.Reg* %8024, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %8025 to i64*
  %8026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8027 = getelementptr inbounds %struct.GPR, %struct.GPR* %8026, i32 0, i32 1
  %8028 = getelementptr inbounds %struct.Reg, %struct.Reg* %8027, i32 0, i32 0
  %RAX.i178 = bitcast %union.anon* %8028 to i64*
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8030 = getelementptr inbounds %struct.GPR, %struct.GPR* %8029, i32 0, i32 15
  %8031 = getelementptr inbounds %struct.Reg, %struct.Reg* %8030, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %8031 to i64*
  %8032 = load i64, i64* %RBP.i179
  %8033 = sub i64 %8032, 48
  %8034 = load i64, i64* %PC.i177
  %8035 = add i64 %8034, 3
  store i64 %8035, i64* %PC.i177
  %8036 = inttoptr i64 %8033 to i32*
  %8037 = load i32, i32* %8036
  %8038 = zext i32 %8037 to i64
  store i64 %8038, i64* %RAX.i178, align 8
  store %struct.Memory* %loadMem_43e5c2, %struct.Memory** %MEMORY
  %loadMem_43e5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8040 = getelementptr inbounds %struct.GPR, %struct.GPR* %8039, i32 0, i32 33
  %8041 = getelementptr inbounds %struct.Reg, %struct.Reg* %8040, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %8041 to i64*
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8043 = getelementptr inbounds %struct.GPR, %struct.GPR* %8042, i32 0, i32 1
  %8044 = getelementptr inbounds %struct.Reg, %struct.Reg* %8043, i32 0, i32 0
  %RAX.i176 = bitcast %union.anon* %8044 to i64*
  %8045 = load i64, i64* %RAX.i176
  %8046 = load i64, i64* %PC.i175
  %8047 = add i64 %8046, 3
  store i64 %8047, i64* %PC.i175
  %8048 = trunc i64 %8045 to i32
  %8049 = add i32 1, %8048
  %8050 = zext i32 %8049 to i64
  store i64 %8050, i64* %RAX.i176, align 8
  %8051 = icmp ult i32 %8049, %8048
  %8052 = icmp ult i32 %8049, 1
  %8053 = or i1 %8051, %8052
  %8054 = zext i1 %8053 to i8
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8054, i8* %8055, align 1
  %8056 = and i32 %8049, 255
  %8057 = call i32 @llvm.ctpop.i32(i32 %8056)
  %8058 = trunc i32 %8057 to i8
  %8059 = and i8 %8058, 1
  %8060 = xor i8 %8059, 1
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8060, i8* %8061, align 1
  %8062 = xor i64 1, %8045
  %8063 = trunc i64 %8062 to i32
  %8064 = xor i32 %8063, %8049
  %8065 = lshr i32 %8064, 4
  %8066 = trunc i32 %8065 to i8
  %8067 = and i8 %8066, 1
  %8068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8067, i8* %8068, align 1
  %8069 = icmp eq i32 %8049, 0
  %8070 = zext i1 %8069 to i8
  %8071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8070, i8* %8071, align 1
  %8072 = lshr i32 %8049, 31
  %8073 = trunc i32 %8072 to i8
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8073, i8* %8074, align 1
  %8075 = lshr i32 %8048, 31
  %8076 = xor i32 %8072, %8075
  %8077 = add i32 %8076, %8072
  %8078 = icmp eq i32 %8077, 2
  %8079 = zext i1 %8078 to i8
  %8080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8079, i8* %8080, align 1
  store %struct.Memory* %loadMem_43e5c5, %struct.Memory** %MEMORY
  %loadMem_43e5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8082 = getelementptr inbounds %struct.GPR, %struct.GPR* %8081, i32 0, i32 33
  %8083 = getelementptr inbounds %struct.Reg, %struct.Reg* %8082, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %8083 to i64*
  %8084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8085 = getelementptr inbounds %struct.GPR, %struct.GPR* %8084, i32 0, i32 1
  %8086 = getelementptr inbounds %struct.Reg, %struct.Reg* %8085, i32 0, i32 0
  %EAX.i173 = bitcast %union.anon* %8086 to i32*
  %8087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8088 = getelementptr inbounds %struct.GPR, %struct.GPR* %8087, i32 0, i32 15
  %8089 = getelementptr inbounds %struct.Reg, %struct.Reg* %8088, i32 0, i32 0
  %RBP.i174 = bitcast %union.anon* %8089 to i64*
  %8090 = load i64, i64* %RBP.i174
  %8091 = sub i64 %8090, 48
  %8092 = load i32, i32* %EAX.i173
  %8093 = zext i32 %8092 to i64
  %8094 = load i64, i64* %PC.i172
  %8095 = add i64 %8094, 3
  store i64 %8095, i64* %PC.i172
  %8096 = inttoptr i64 %8091 to i32*
  store i32 %8092, i32* %8096
  store %struct.Memory* %loadMem_43e5c8, %struct.Memory** %MEMORY
  %loadMem_43e5cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8098 = getelementptr inbounds %struct.GPR, %struct.GPR* %8097, i32 0, i32 33
  %8099 = getelementptr inbounds %struct.Reg, %struct.Reg* %8098, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %8099 to i64*
  %8100 = load i64, i64* %PC.i171
  %8101 = add i64 %8100, -155
  %8102 = load i64, i64* %PC.i171
  %8103 = add i64 %8102, 5
  store i64 %8103, i64* %PC.i171
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8101, i64* %8104, align 8
  store %struct.Memory* %loadMem_43e5cb, %struct.Memory** %MEMORY
  br label %block_.L_43e530

block_.L_43e5d0:                                  ; preds = %block_.L_43e530
  %loadMem_43e5d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8106 = getelementptr inbounds %struct.GPR, %struct.GPR* %8105, i32 0, i32 33
  %8107 = getelementptr inbounds %struct.Reg, %struct.Reg* %8106, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %8107 to i64*
  %8108 = load i64, i64* %PC.i170
  %8109 = add i64 %8108, 274
  %8110 = load i64, i64* %PC.i170
  %8111 = add i64 %8110, 5
  store i64 %8111, i64* %PC.i170
  %8112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8109, i64* %8112, align 8
  store %struct.Memory* %loadMem_43e5d0, %struct.Memory** %MEMORY
  br label %block_.L_43e6e2

block_.L_43e5d5:                                  ; preds = %block_.L_43e520
  %loadMem_43e5d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8114 = getelementptr inbounds %struct.GPR, %struct.GPR* %8113, i32 0, i32 33
  %8115 = getelementptr inbounds %struct.Reg, %struct.Reg* %8114, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %8115 to i64*
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8117 = getelementptr inbounds %struct.GPR, %struct.GPR* %8116, i32 0, i32 15
  %8118 = getelementptr inbounds %struct.Reg, %struct.Reg* %8117, i32 0, i32 0
  %RBP.i169 = bitcast %union.anon* %8118 to i64*
  %8119 = load i64, i64* %RBP.i169
  %8120 = sub i64 %8119, 28
  %8121 = load i64, i64* %PC.i168
  %8122 = add i64 %8121, 4
  store i64 %8122, i64* %PC.i168
  %8123 = inttoptr i64 %8120 to i32*
  %8124 = load i32, i32* %8123
  %8125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8125, align 1
  %8126 = and i32 %8124, 255
  %8127 = call i32 @llvm.ctpop.i32(i32 %8126)
  %8128 = trunc i32 %8127 to i8
  %8129 = and i8 %8128, 1
  %8130 = xor i8 %8129, 1
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8130, i8* %8131, align 1
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8132, align 1
  %8133 = icmp eq i32 %8124, 0
  %8134 = zext i1 %8133 to i8
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8134, i8* %8135, align 1
  %8136 = lshr i32 %8124, 31
  %8137 = trunc i32 %8136 to i8
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8137, i8* %8138, align 1
  %8139 = lshr i32 %8124, 31
  %8140 = xor i32 %8136, %8139
  %8141 = add i32 %8140, %8139
  %8142 = icmp eq i32 %8141, 2
  %8143 = zext i1 %8142 to i8
  %8144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8143, i8* %8144, align 1
  store %struct.Memory* %loadMem_43e5d5, %struct.Memory** %MEMORY
  %loadMem_43e5d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8146 = getelementptr inbounds %struct.GPR, %struct.GPR* %8145, i32 0, i32 33
  %8147 = getelementptr inbounds %struct.Reg, %struct.Reg* %8146, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %8147 to i64*
  %8148 = load i64, i64* %PC.i167
  %8149 = add i64 %8148, 133
  %8150 = load i64, i64* %PC.i167
  %8151 = add i64 %8150, 6
  %8152 = load i64, i64* %PC.i167
  %8153 = add i64 %8152, 6
  store i64 %8153, i64* %PC.i167
  %8154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8155 = load i8, i8* %8154, align 1
  %8156 = icmp eq i8 %8155, 0
  %8157 = zext i1 %8156 to i8
  store i8 %8157, i8* %BRANCH_TAKEN, align 1
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8159 = select i1 %8156, i64 %8149, i64 %8151
  store i64 %8159, i64* %8158, align 8
  store %struct.Memory* %loadMem_43e5d9, %struct.Memory** %MEMORY
  %loadBr_43e5d9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e5d9 = icmp eq i8 %loadBr_43e5d9, 1
  br i1 %cmpBr_43e5d9, label %block_.L_43e65e, label %block_43e5df

block_43e5df:                                     ; preds = %block_.L_43e5d5
  %loadMem_43e5df = load %struct.Memory*, %struct.Memory** %MEMORY
  %8160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8161 = getelementptr inbounds %struct.GPR, %struct.GPR* %8160, i32 0, i32 33
  %8162 = getelementptr inbounds %struct.Reg, %struct.Reg* %8161, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %8162 to i64*
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8164 = getelementptr inbounds %struct.GPR, %struct.GPR* %8163, i32 0, i32 1
  %8165 = getelementptr inbounds %struct.Reg, %struct.Reg* %8164, i32 0, i32 0
  %RAX.i165 = bitcast %union.anon* %8165 to i64*
  %8166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8167 = getelementptr inbounds %struct.GPR, %struct.GPR* %8166, i32 0, i32 15
  %8168 = getelementptr inbounds %struct.Reg, %struct.Reg* %8167, i32 0, i32 0
  %RBP.i166 = bitcast %union.anon* %8168 to i64*
  %8169 = load i64, i64* %RBP.i166
  %8170 = sub i64 %8169, 24
  %8171 = load i64, i64* %PC.i164
  %8172 = add i64 %8171, 3
  store i64 %8172, i64* %PC.i164
  %8173 = inttoptr i64 %8170 to i32*
  %8174 = load i32, i32* %8173
  %8175 = zext i32 %8174 to i64
  store i64 %8175, i64* %RAX.i165, align 8
  store %struct.Memory* %loadMem_43e5df, %struct.Memory** %MEMORY
  %loadMem_43e5e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8177 = getelementptr inbounds %struct.GPR, %struct.GPR* %8176, i32 0, i32 33
  %8178 = getelementptr inbounds %struct.Reg, %struct.Reg* %8177, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %8178 to i64*
  %8179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8180 = getelementptr inbounds %struct.GPR, %struct.GPR* %8179, i32 0, i32 1
  %8181 = getelementptr inbounds %struct.Reg, %struct.Reg* %8180, i32 0, i32 0
  %EAX.i162 = bitcast %union.anon* %8181 to i32*
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8183 = getelementptr inbounds %struct.GPR, %struct.GPR* %8182, i32 0, i32 15
  %8184 = getelementptr inbounds %struct.Reg, %struct.Reg* %8183, i32 0, i32 0
  %RBP.i163 = bitcast %union.anon* %8184 to i64*
  %8185 = load i64, i64* %RBP.i163
  %8186 = sub i64 %8185, 48
  %8187 = load i32, i32* %EAX.i162
  %8188 = zext i32 %8187 to i64
  %8189 = load i64, i64* %PC.i161
  %8190 = add i64 %8189, 3
  store i64 %8190, i64* %PC.i161
  %8191 = inttoptr i64 %8186 to i32*
  store i32 %8187, i32* %8191
  store %struct.Memory* %loadMem_43e5e2, %struct.Memory** %MEMORY
  br label %block_.L_43e5e5

block_.L_43e5e5:                                  ; preds = %block_.L_43e64b, %block_43e5df
  %loadMem_43e5e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8193 = getelementptr inbounds %struct.GPR, %struct.GPR* %8192, i32 0, i32 33
  %8194 = getelementptr inbounds %struct.Reg, %struct.Reg* %8193, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %8194 to i64*
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8196 = getelementptr inbounds %struct.GPR, %struct.GPR* %8195, i32 0, i32 1
  %8197 = getelementptr inbounds %struct.Reg, %struct.Reg* %8196, i32 0, i32 0
  %RAX.i159 = bitcast %union.anon* %8197 to i64*
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8199 = getelementptr inbounds %struct.GPR, %struct.GPR* %8198, i32 0, i32 15
  %8200 = getelementptr inbounds %struct.Reg, %struct.Reg* %8199, i32 0, i32 0
  %RBP.i160 = bitcast %union.anon* %8200 to i64*
  %8201 = load i64, i64* %RBP.i160
  %8202 = sub i64 %8201, 48
  %8203 = load i64, i64* %PC.i158
  %8204 = add i64 %8203, 3
  store i64 %8204, i64* %PC.i158
  %8205 = inttoptr i64 %8202 to i32*
  %8206 = load i32, i32* %8205
  %8207 = zext i32 %8206 to i64
  store i64 %8207, i64* %RAX.i159, align 8
  store %struct.Memory* %loadMem_43e5e5, %struct.Memory** %MEMORY
  %loadMem_43e5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8209 = getelementptr inbounds %struct.GPR, %struct.GPR* %8208, i32 0, i32 33
  %8210 = getelementptr inbounds %struct.Reg, %struct.Reg* %8209, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %8210 to i64*
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8212 = getelementptr inbounds %struct.GPR, %struct.GPR* %8211, i32 0, i32 1
  %8213 = getelementptr inbounds %struct.Reg, %struct.Reg* %8212, i32 0, i32 0
  %EAX.i156 = bitcast %union.anon* %8213 to i32*
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8215 = getelementptr inbounds %struct.GPR, %struct.GPR* %8214, i32 0, i32 15
  %8216 = getelementptr inbounds %struct.Reg, %struct.Reg* %8215, i32 0, i32 0
  %RBP.i157 = bitcast %union.anon* %8216 to i64*
  %8217 = load i32, i32* %EAX.i156
  %8218 = zext i32 %8217 to i64
  %8219 = load i64, i64* %RBP.i157
  %8220 = sub i64 %8219, 56
  %8221 = load i64, i64* %PC.i155
  %8222 = add i64 %8221, 3
  store i64 %8222, i64* %PC.i155
  %8223 = inttoptr i64 %8220 to i32*
  %8224 = load i32, i32* %8223
  %8225 = sub i32 %8217, %8224
  %8226 = icmp ult i32 %8217, %8224
  %8227 = zext i1 %8226 to i8
  %8228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8227, i8* %8228, align 1
  %8229 = and i32 %8225, 255
  %8230 = call i32 @llvm.ctpop.i32(i32 %8229)
  %8231 = trunc i32 %8230 to i8
  %8232 = and i8 %8231, 1
  %8233 = xor i8 %8232, 1
  %8234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8233, i8* %8234, align 1
  %8235 = xor i32 %8224, %8217
  %8236 = xor i32 %8235, %8225
  %8237 = lshr i32 %8236, 4
  %8238 = trunc i32 %8237 to i8
  %8239 = and i8 %8238, 1
  %8240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8239, i8* %8240, align 1
  %8241 = icmp eq i32 %8225, 0
  %8242 = zext i1 %8241 to i8
  %8243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8242, i8* %8243, align 1
  %8244 = lshr i32 %8225, 31
  %8245 = trunc i32 %8244 to i8
  %8246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8245, i8* %8246, align 1
  %8247 = lshr i32 %8217, 31
  %8248 = lshr i32 %8224, 31
  %8249 = xor i32 %8248, %8247
  %8250 = xor i32 %8244, %8247
  %8251 = add i32 %8250, %8249
  %8252 = icmp eq i32 %8251, 2
  %8253 = zext i1 %8252 to i8
  %8254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8253, i8* %8254, align 1
  store %struct.Memory* %loadMem_43e5e8, %struct.Memory** %MEMORY
  %loadMem_43e5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8256 = getelementptr inbounds %struct.GPR, %struct.GPR* %8255, i32 0, i32 33
  %8257 = getelementptr inbounds %struct.Reg, %struct.Reg* %8256, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %8257 to i64*
  %8258 = load i64, i64* %PC.i154
  %8259 = add i64 %8258, 110
  %8260 = load i64, i64* %PC.i154
  %8261 = add i64 %8260, 6
  %8262 = load i64, i64* %PC.i154
  %8263 = add i64 %8262, 6
  store i64 %8263, i64* %PC.i154
  %8264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8265 = load i8, i8* %8264, align 1
  %8266 = icmp ne i8 %8265, 0
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8268 = load i8, i8* %8267, align 1
  %8269 = icmp ne i8 %8268, 0
  %8270 = xor i1 %8266, %8269
  %8271 = xor i1 %8270, true
  %8272 = zext i1 %8271 to i8
  store i8 %8272, i8* %BRANCH_TAKEN, align 1
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8274 = select i1 %8270, i64 %8261, i64 %8259
  store i64 %8274, i64* %8273, align 8
  store %struct.Memory* %loadMem_43e5eb, %struct.Memory** %MEMORY
  %loadBr_43e5eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e5eb = icmp eq i8 %loadBr_43e5eb, 1
  br i1 %cmpBr_43e5eb, label %block_.L_43e659, label %block_43e5f1

block_43e5f1:                                     ; preds = %block_.L_43e5e5
  %loadMem_43e5f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8276 = getelementptr inbounds %struct.GPR, %struct.GPR* %8275, i32 0, i32 33
  %8277 = getelementptr inbounds %struct.Reg, %struct.Reg* %8276, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %8277 to i64*
  %8278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8279 = getelementptr inbounds %struct.GPR, %struct.GPR* %8278, i32 0, i32 1
  %8280 = getelementptr inbounds %struct.Reg, %struct.Reg* %8279, i32 0, i32 0
  %RAX.i152 = bitcast %union.anon* %8280 to i64*
  %8281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8282 = getelementptr inbounds %struct.GPR, %struct.GPR* %8281, i32 0, i32 15
  %8283 = getelementptr inbounds %struct.Reg, %struct.Reg* %8282, i32 0, i32 0
  %RBP.i153 = bitcast %union.anon* %8283 to i64*
  %8284 = load i64, i64* %RBP.i153
  %8285 = sub i64 %8284, 20
  %8286 = load i64, i64* %PC.i151
  %8287 = add i64 %8286, 3
  store i64 %8287, i64* %PC.i151
  %8288 = inttoptr i64 %8285 to i32*
  %8289 = load i32, i32* %8288
  %8290 = zext i32 %8289 to i64
  store i64 %8290, i64* %RAX.i152, align 8
  store %struct.Memory* %loadMem_43e5f1, %struct.Memory** %MEMORY
  %loadMem_43e5f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8292 = getelementptr inbounds %struct.GPR, %struct.GPR* %8291, i32 0, i32 33
  %8293 = getelementptr inbounds %struct.Reg, %struct.Reg* %8292, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %8293 to i64*
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8295 = getelementptr inbounds %struct.GPR, %struct.GPR* %8294, i32 0, i32 1
  %8296 = getelementptr inbounds %struct.Reg, %struct.Reg* %8295, i32 0, i32 0
  %EAX.i149 = bitcast %union.anon* %8296 to i32*
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8298 = getelementptr inbounds %struct.GPR, %struct.GPR* %8297, i32 0, i32 15
  %8299 = getelementptr inbounds %struct.Reg, %struct.Reg* %8298, i32 0, i32 0
  %RBP.i150 = bitcast %union.anon* %8299 to i64*
  %8300 = load i64, i64* %RBP.i150
  %8301 = sub i64 %8300, 44
  %8302 = load i32, i32* %EAX.i149
  %8303 = zext i32 %8302 to i64
  %8304 = load i64, i64* %PC.i148
  %8305 = add i64 %8304, 3
  store i64 %8305, i64* %PC.i148
  %8306 = inttoptr i64 %8301 to i32*
  store i32 %8302, i32* %8306
  store %struct.Memory* %loadMem_43e5f4, %struct.Memory** %MEMORY
  br label %block_.L_43e5f7

block_.L_43e5f7:                                  ; preds = %block_43e603, %block_43e5f1
  %loadMem_43e5f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8308 = getelementptr inbounds %struct.GPR, %struct.GPR* %8307, i32 0, i32 33
  %8309 = getelementptr inbounds %struct.Reg, %struct.Reg* %8308, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %8309 to i64*
  %8310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8311 = getelementptr inbounds %struct.GPR, %struct.GPR* %8310, i32 0, i32 1
  %8312 = getelementptr inbounds %struct.Reg, %struct.Reg* %8311, i32 0, i32 0
  %RAX.i146 = bitcast %union.anon* %8312 to i64*
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8314 = getelementptr inbounds %struct.GPR, %struct.GPR* %8313, i32 0, i32 15
  %8315 = getelementptr inbounds %struct.Reg, %struct.Reg* %8314, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %8315 to i64*
  %8316 = load i64, i64* %RBP.i147
  %8317 = sub i64 %8316, 44
  %8318 = load i64, i64* %PC.i145
  %8319 = add i64 %8318, 3
  store i64 %8319, i64* %PC.i145
  %8320 = inttoptr i64 %8317 to i32*
  %8321 = load i32, i32* %8320
  %8322 = zext i32 %8321 to i64
  store i64 %8322, i64* %RAX.i146, align 8
  store %struct.Memory* %loadMem_43e5f7, %struct.Memory** %MEMORY
  %loadMem_43e5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8324 = getelementptr inbounds %struct.GPR, %struct.GPR* %8323, i32 0, i32 33
  %8325 = getelementptr inbounds %struct.Reg, %struct.Reg* %8324, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %8325 to i64*
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8327 = getelementptr inbounds %struct.GPR, %struct.GPR* %8326, i32 0, i32 1
  %8328 = getelementptr inbounds %struct.Reg, %struct.Reg* %8327, i32 0, i32 0
  %EAX.i143 = bitcast %union.anon* %8328 to i32*
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8330 = getelementptr inbounds %struct.GPR, %struct.GPR* %8329, i32 0, i32 15
  %8331 = getelementptr inbounds %struct.Reg, %struct.Reg* %8330, i32 0, i32 0
  %RBP.i144 = bitcast %union.anon* %8331 to i64*
  %8332 = load i32, i32* %EAX.i143
  %8333 = zext i32 %8332 to i64
  %8334 = load i64, i64* %RBP.i144
  %8335 = sub i64 %8334, 52
  %8336 = load i64, i64* %PC.i142
  %8337 = add i64 %8336, 3
  store i64 %8337, i64* %PC.i142
  %8338 = inttoptr i64 %8335 to i32*
  %8339 = load i32, i32* %8338
  %8340 = sub i32 %8332, %8339
  %8341 = icmp ult i32 %8332, %8339
  %8342 = zext i1 %8341 to i8
  %8343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8342, i8* %8343, align 1
  %8344 = and i32 %8340, 255
  %8345 = call i32 @llvm.ctpop.i32(i32 %8344)
  %8346 = trunc i32 %8345 to i8
  %8347 = and i8 %8346, 1
  %8348 = xor i8 %8347, 1
  %8349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8348, i8* %8349, align 1
  %8350 = xor i32 %8339, %8332
  %8351 = xor i32 %8350, %8340
  %8352 = lshr i32 %8351, 4
  %8353 = trunc i32 %8352 to i8
  %8354 = and i8 %8353, 1
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8354, i8* %8355, align 1
  %8356 = icmp eq i32 %8340, 0
  %8357 = zext i1 %8356 to i8
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8357, i8* %8358, align 1
  %8359 = lshr i32 %8340, 31
  %8360 = trunc i32 %8359 to i8
  %8361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8360, i8* %8361, align 1
  %8362 = lshr i32 %8332, 31
  %8363 = lshr i32 %8339, 31
  %8364 = xor i32 %8363, %8362
  %8365 = xor i32 %8359, %8362
  %8366 = add i32 %8365, %8364
  %8367 = icmp eq i32 %8366, 2
  %8368 = zext i1 %8367 to i8
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8368, i8* %8369, align 1
  store %struct.Memory* %loadMem_43e5fa, %struct.Memory** %MEMORY
  %loadMem_43e5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8371 = getelementptr inbounds %struct.GPR, %struct.GPR* %8370, i32 0, i32 33
  %8372 = getelementptr inbounds %struct.Reg, %struct.Reg* %8371, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %8372 to i64*
  %8373 = load i64, i64* %PC.i141
  %8374 = add i64 %8373, 73
  %8375 = load i64, i64* %PC.i141
  %8376 = add i64 %8375, 6
  %8377 = load i64, i64* %PC.i141
  %8378 = add i64 %8377, 6
  store i64 %8378, i64* %PC.i141
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8380 = load i8, i8* %8379, align 1
  %8381 = icmp ne i8 %8380, 0
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8383 = load i8, i8* %8382, align 1
  %8384 = icmp ne i8 %8383, 0
  %8385 = xor i1 %8381, %8384
  %8386 = xor i1 %8385, true
  %8387 = zext i1 %8386 to i8
  store i8 %8387, i8* %BRANCH_TAKEN, align 1
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8389 = select i1 %8385, i64 %8376, i64 %8374
  store i64 %8389, i64* %8388, align 8
  store %struct.Memory* %loadMem_43e5fd, %struct.Memory** %MEMORY
  %loadBr_43e5fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e5fd = icmp eq i8 %loadBr_43e5fd, 1
  br i1 %cmpBr_43e5fd, label %block_.L_43e646, label %block_43e603

block_43e603:                                     ; preds = %block_.L_43e5f7
  %loadMem_43e603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8391 = getelementptr inbounds %struct.GPR, %struct.GPR* %8390, i32 0, i32 33
  %8392 = getelementptr inbounds %struct.Reg, %struct.Reg* %8391, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %8392 to i64*
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8394 = getelementptr inbounds %struct.GPR, %struct.GPR* %8393, i32 0, i32 1
  %8395 = getelementptr inbounds %struct.Reg, %struct.Reg* %8394, i32 0, i32 0
  %RAX.i139 = bitcast %union.anon* %8395 to i64*
  %8396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8397 = getelementptr inbounds %struct.GPR, %struct.GPR* %8396, i32 0, i32 15
  %8398 = getelementptr inbounds %struct.Reg, %struct.Reg* %8397, i32 0, i32 0
  %RBP.i140 = bitcast %union.anon* %8398 to i64*
  %8399 = load i64, i64* %RBP.i140
  %8400 = sub i64 %8399, 80
  %8401 = load i64, i64* %PC.i138
  %8402 = add i64 %8401, 4
  store i64 %8402, i64* %PC.i138
  %8403 = inttoptr i64 %8400 to i64*
  %8404 = load i64, i64* %8403
  store i64 %8404, i64* %RAX.i139, align 8
  store %struct.Memory* %loadMem_43e603, %struct.Memory** %MEMORY
  %loadMem_43e607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8406 = getelementptr inbounds %struct.GPR, %struct.GPR* %8405, i32 0, i32 33
  %8407 = getelementptr inbounds %struct.Reg, %struct.Reg* %8406, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %8407 to i64*
  %8408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8409 = getelementptr inbounds %struct.GPR, %struct.GPR* %8408, i32 0, i32 1
  %8410 = getelementptr inbounds %struct.Reg, %struct.Reg* %8409, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %8410 to i64*
  %8411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8412 = getelementptr inbounds %struct.GPR, %struct.GPR* %8411, i32 0, i32 5
  %8413 = getelementptr inbounds %struct.Reg, %struct.Reg* %8412, i32 0, i32 0
  %RCX.i137 = bitcast %union.anon* %8413 to i64*
  %8414 = load i64, i64* %RAX.i136
  %8415 = load i64, i64* %PC.i135
  %8416 = add i64 %8415, 3
  store i64 %8416, i64* %PC.i135
  store i64 %8414, i64* %RCX.i137, align 8
  store %struct.Memory* %loadMem_43e607, %struct.Memory** %MEMORY
  %loadMem_43e60a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8418 = getelementptr inbounds %struct.GPR, %struct.GPR* %8417, i32 0, i32 33
  %8419 = getelementptr inbounds %struct.Reg, %struct.Reg* %8418, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %8419 to i64*
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8421 = getelementptr inbounds %struct.GPR, %struct.GPR* %8420, i32 0, i32 5
  %8422 = getelementptr inbounds %struct.Reg, %struct.Reg* %8421, i32 0, i32 0
  %RCX.i134 = bitcast %union.anon* %8422 to i64*
  %8423 = load i64, i64* %RCX.i134
  %8424 = load i64, i64* %PC.i133
  %8425 = add i64 %8424, 4
  store i64 %8425, i64* %PC.i133
  %8426 = add i64 4, %8423
  store i64 %8426, i64* %RCX.i134, align 8
  %8427 = icmp ult i64 %8426, %8423
  %8428 = icmp ult i64 %8426, 4
  %8429 = or i1 %8427, %8428
  %8430 = zext i1 %8429 to i8
  %8431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8430, i8* %8431, align 1
  %8432 = trunc i64 %8426 to i32
  %8433 = and i32 %8432, 255
  %8434 = call i32 @llvm.ctpop.i32(i32 %8433)
  %8435 = trunc i32 %8434 to i8
  %8436 = and i8 %8435, 1
  %8437 = xor i8 %8436, 1
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8437, i8* %8438, align 1
  %8439 = xor i64 4, %8423
  %8440 = xor i64 %8439, %8426
  %8441 = lshr i64 %8440, 4
  %8442 = trunc i64 %8441 to i8
  %8443 = and i8 %8442, 1
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8443, i8* %8444, align 1
  %8445 = icmp eq i64 %8426, 0
  %8446 = zext i1 %8445 to i8
  %8447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8446, i8* %8447, align 1
  %8448 = lshr i64 %8426, 63
  %8449 = trunc i64 %8448 to i8
  %8450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8449, i8* %8450, align 1
  %8451 = lshr i64 %8423, 63
  %8452 = xor i64 %8448, %8451
  %8453 = add i64 %8452, %8448
  %8454 = icmp eq i64 %8453, 2
  %8455 = zext i1 %8454 to i8
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8455, i8* %8456, align 1
  store %struct.Memory* %loadMem_43e60a, %struct.Memory** %MEMORY
  %loadMem_43e60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8458 = getelementptr inbounds %struct.GPR, %struct.GPR* %8457, i32 0, i32 33
  %8459 = getelementptr inbounds %struct.Reg, %struct.Reg* %8458, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %8459 to i64*
  %8460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8461 = getelementptr inbounds %struct.GPR, %struct.GPR* %8460, i32 0, i32 5
  %8462 = getelementptr inbounds %struct.Reg, %struct.Reg* %8461, i32 0, i32 0
  %RCX.i131 = bitcast %union.anon* %8462 to i64*
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8464 = getelementptr inbounds %struct.GPR, %struct.GPR* %8463, i32 0, i32 15
  %8465 = getelementptr inbounds %struct.Reg, %struct.Reg* %8464, i32 0, i32 0
  %RBP.i132 = bitcast %union.anon* %8465 to i64*
  %8466 = load i64, i64* %RBP.i132
  %8467 = sub i64 %8466, 80
  %8468 = load i64, i64* %RCX.i131
  %8469 = load i64, i64* %PC.i130
  %8470 = add i64 %8469, 4
  store i64 %8470, i64* %PC.i130
  %8471 = inttoptr i64 %8467 to i64*
  store i64 %8468, i64* %8471
  store %struct.Memory* %loadMem_43e60e, %struct.Memory** %MEMORY
  %loadMem_43e612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8473 = getelementptr inbounds %struct.GPR, %struct.GPR* %8472, i32 0, i32 33
  %8474 = getelementptr inbounds %struct.Reg, %struct.Reg* %8473, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %8474 to i64*
  %8475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8476 = getelementptr inbounds %struct.GPR, %struct.GPR* %8475, i32 0, i32 1
  %8477 = getelementptr inbounds %struct.Reg, %struct.Reg* %8476, i32 0, i32 0
  %RAX.i128 = bitcast %union.anon* %8477 to i64*
  %8478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8479 = getelementptr inbounds %struct.GPR, %struct.GPR* %8478, i32 0, i32 7
  %8480 = getelementptr inbounds %struct.Reg, %struct.Reg* %8479, i32 0, i32 0
  %RDX.i129 = bitcast %union.anon* %8480 to i64*
  %8481 = load i64, i64* %RAX.i128
  %8482 = load i64, i64* %PC.i127
  %8483 = add i64 %8482, 2
  store i64 %8483, i64* %PC.i127
  %8484 = inttoptr i64 %8481 to i32*
  %8485 = load i32, i32* %8484
  %8486 = zext i32 %8485 to i64
  store i64 %8486, i64* %RDX.i129, align 8
  store %struct.Memory* %loadMem_43e612, %struct.Memory** %MEMORY
  %loadMem_43e614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 33
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %8489 to i64*
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8491 = getelementptr inbounds %struct.GPR, %struct.GPR* %8490, i32 0, i32 7
  %8492 = getelementptr inbounds %struct.Reg, %struct.Reg* %8491, i32 0, i32 0
  %DX.i125 = bitcast %union.anon* %8492 to i16*
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 9
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %SI.i126 = bitcast %union.anon* %8495 to i16*
  %8496 = load i16, i16* %DX.i125
  %8497 = zext i16 %8496 to i64
  %8498 = load i64, i64* %PC.i124
  %8499 = add i64 %8498, 3
  store i64 %8499, i64* %PC.i124
  store i16 %8496, i16* %SI.i126, align 2
  store %struct.Memory* %loadMem_43e614, %struct.Memory** %MEMORY
  %loadMem_43e617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8501 = getelementptr inbounds %struct.GPR, %struct.GPR* %8500, i32 0, i32 33
  %8502 = getelementptr inbounds %struct.Reg, %struct.Reg* %8501, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %8502 to i64*
  %8503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8504 = getelementptr inbounds %struct.GPR, %struct.GPR* %8503, i32 0, i32 1
  %8505 = getelementptr inbounds %struct.Reg, %struct.Reg* %8504, i32 0, i32 0
  %RAX.i123 = bitcast %union.anon* %8505 to i64*
  %8506 = load i64, i64* %PC.i122
  %8507 = add i64 %8506, 8
  store i64 %8507, i64* %PC.i122
  %8508 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8508, i64* %RAX.i123, align 8
  store %struct.Memory* %loadMem_43e617, %struct.Memory** %MEMORY
  %loadMem_43e61f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8510 = getelementptr inbounds %struct.GPR, %struct.GPR* %8509, i32 0, i32 33
  %8511 = getelementptr inbounds %struct.Reg, %struct.Reg* %8510, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %8511 to i64*
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8513 = getelementptr inbounds %struct.GPR, %struct.GPR* %8512, i32 0, i32 1
  %8514 = getelementptr inbounds %struct.Reg, %struct.Reg* %8513, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %8514 to i64*
  %8515 = load i64, i64* %RAX.i121
  %8516 = load i64, i64* %PC.i120
  %8517 = add i64 %8516, 6
  store i64 %8517, i64* %PC.i120
  %8518 = add i64 12600, %8515
  store i64 %8518, i64* %RAX.i121, align 8
  %8519 = icmp ult i64 %8518, %8515
  %8520 = icmp ult i64 %8518, 12600
  %8521 = or i1 %8519, %8520
  %8522 = zext i1 %8521 to i8
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8522, i8* %8523, align 1
  %8524 = trunc i64 %8518 to i32
  %8525 = and i32 %8524, 255
  %8526 = call i32 @llvm.ctpop.i32(i32 %8525)
  %8527 = trunc i32 %8526 to i8
  %8528 = and i8 %8527, 1
  %8529 = xor i8 %8528, 1
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8529, i8* %8530, align 1
  %8531 = xor i64 12600, %8515
  %8532 = xor i64 %8531, %8518
  %8533 = lshr i64 %8532, 4
  %8534 = trunc i64 %8533 to i8
  %8535 = and i8 %8534, 1
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8535, i8* %8536, align 1
  %8537 = icmp eq i64 %8518, 0
  %8538 = zext i1 %8537 to i8
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8538, i8* %8539, align 1
  %8540 = lshr i64 %8518, 63
  %8541 = trunc i64 %8540 to i8
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8541, i8* %8542, align 1
  %8543 = lshr i64 %8515, 63
  %8544 = xor i64 %8540, %8543
  %8545 = add i64 %8544, %8540
  %8546 = icmp eq i64 %8545, 2
  %8547 = zext i1 %8546 to i8
  %8548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8547, i8* %8548, align 1
  store %struct.Memory* %loadMem_43e61f, %struct.Memory** %MEMORY
  %loadMem_43e625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8550 = getelementptr inbounds %struct.GPR, %struct.GPR* %8549, i32 0, i32 33
  %8551 = getelementptr inbounds %struct.Reg, %struct.Reg* %8550, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %8551 to i64*
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8553 = getelementptr inbounds %struct.GPR, %struct.GPR* %8552, i32 0, i32 5
  %8554 = getelementptr inbounds %struct.Reg, %struct.Reg* %8553, i32 0, i32 0
  %RCX.i118 = bitcast %union.anon* %8554 to i64*
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8556 = getelementptr inbounds %struct.GPR, %struct.GPR* %8555, i32 0, i32 15
  %8557 = getelementptr inbounds %struct.Reg, %struct.Reg* %8556, i32 0, i32 0
  %RBP.i119 = bitcast %union.anon* %8557 to i64*
  %8558 = load i64, i64* %RBP.i119
  %8559 = sub i64 %8558, 44
  %8560 = load i64, i64* %PC.i117
  %8561 = add i64 %8560, 4
  store i64 %8561, i64* %PC.i117
  %8562 = inttoptr i64 %8559 to i32*
  %8563 = load i32, i32* %8562
  %8564 = sext i32 %8563 to i64
  store i64 %8564, i64* %RCX.i118, align 8
  store %struct.Memory* %loadMem_43e625, %struct.Memory** %MEMORY
  %loadMem_43e629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8566 = getelementptr inbounds %struct.GPR, %struct.GPR* %8565, i32 0, i32 33
  %8567 = getelementptr inbounds %struct.Reg, %struct.Reg* %8566, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %8567 to i64*
  %8568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8569 = getelementptr inbounds %struct.GPR, %struct.GPR* %8568, i32 0, i32 5
  %8570 = getelementptr inbounds %struct.Reg, %struct.Reg* %8569, i32 0, i32 0
  %RCX.i116 = bitcast %union.anon* %8570 to i64*
  %8571 = load i64, i64* %RCX.i116
  %8572 = load i64, i64* %PC.i115
  %8573 = add i64 %8572, 4
  store i64 %8573, i64* %PC.i115
  %8574 = shl i64 %8571, 4
  %8575 = icmp slt i64 %8574, 0
  %8576 = shl i64 %8574, 1
  store i64 %8576, i64* %RCX.i116, align 8
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8578 = zext i1 %8575 to i8
  store i8 %8578, i8* %8577, align 1
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8580 = trunc i64 %8576 to i32
  %8581 = and i32 %8580, 254
  %8582 = call i32 @llvm.ctpop.i32(i32 %8581)
  %8583 = trunc i32 %8582 to i8
  %8584 = and i8 %8583, 1
  %8585 = xor i8 %8584, 1
  store i8 %8585, i8* %8579, align 1
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8586, align 1
  %8587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8588 = icmp eq i64 %8576, 0
  %8589 = zext i1 %8588 to i8
  store i8 %8589, i8* %8587, align 1
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8591 = lshr i64 %8576, 63
  %8592 = trunc i64 %8591 to i8
  store i8 %8592, i8* %8590, align 1
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8593, align 1
  store %struct.Memory* %loadMem_43e629, %struct.Memory** %MEMORY
  %loadMem_43e62d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8595 = getelementptr inbounds %struct.GPR, %struct.GPR* %8594, i32 0, i32 33
  %8596 = getelementptr inbounds %struct.Reg, %struct.Reg* %8595, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %8596 to i64*
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8598 = getelementptr inbounds %struct.GPR, %struct.GPR* %8597, i32 0, i32 1
  %8599 = getelementptr inbounds %struct.Reg, %struct.Reg* %8598, i32 0, i32 0
  %RAX.i113 = bitcast %union.anon* %8599 to i64*
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8601 = getelementptr inbounds %struct.GPR, %struct.GPR* %8600, i32 0, i32 5
  %8602 = getelementptr inbounds %struct.Reg, %struct.Reg* %8601, i32 0, i32 0
  %RCX.i114 = bitcast %union.anon* %8602 to i64*
  %8603 = load i64, i64* %RAX.i113
  %8604 = load i64, i64* %RCX.i114
  %8605 = load i64, i64* %PC.i112
  %8606 = add i64 %8605, 3
  store i64 %8606, i64* %PC.i112
  %8607 = add i64 %8604, %8603
  store i64 %8607, i64* %RAX.i113, align 8
  %8608 = icmp ult i64 %8607, %8603
  %8609 = icmp ult i64 %8607, %8604
  %8610 = or i1 %8608, %8609
  %8611 = zext i1 %8610 to i8
  %8612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8611, i8* %8612, align 1
  %8613 = trunc i64 %8607 to i32
  %8614 = and i32 %8613, 255
  %8615 = call i32 @llvm.ctpop.i32(i32 %8614)
  %8616 = trunc i32 %8615 to i8
  %8617 = and i8 %8616, 1
  %8618 = xor i8 %8617, 1
  %8619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8618, i8* %8619, align 1
  %8620 = xor i64 %8604, %8603
  %8621 = xor i64 %8620, %8607
  %8622 = lshr i64 %8621, 4
  %8623 = trunc i64 %8622 to i8
  %8624 = and i8 %8623, 1
  %8625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8624, i8* %8625, align 1
  %8626 = icmp eq i64 %8607, 0
  %8627 = zext i1 %8626 to i8
  %8628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8627, i8* %8628, align 1
  %8629 = lshr i64 %8607, 63
  %8630 = trunc i64 %8629 to i8
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8630, i8* %8631, align 1
  %8632 = lshr i64 %8603, 63
  %8633 = lshr i64 %8604, 63
  %8634 = xor i64 %8629, %8632
  %8635 = xor i64 %8629, %8633
  %8636 = add i64 %8634, %8635
  %8637 = icmp eq i64 %8636, 2
  %8638 = zext i1 %8637 to i8
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8638, i8* %8639, align 1
  store %struct.Memory* %loadMem_43e62d, %struct.Memory** %MEMORY
  %loadMem_43e630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8641 = getelementptr inbounds %struct.GPR, %struct.GPR* %8640, i32 0, i32 33
  %8642 = getelementptr inbounds %struct.Reg, %struct.Reg* %8641, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %8642 to i64*
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8644 = getelementptr inbounds %struct.GPR, %struct.GPR* %8643, i32 0, i32 5
  %8645 = getelementptr inbounds %struct.Reg, %struct.Reg* %8644, i32 0, i32 0
  %RCX.i110 = bitcast %union.anon* %8645 to i64*
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8647 = getelementptr inbounds %struct.GPR, %struct.GPR* %8646, i32 0, i32 15
  %8648 = getelementptr inbounds %struct.Reg, %struct.Reg* %8647, i32 0, i32 0
  %RBP.i111 = bitcast %union.anon* %8648 to i64*
  %8649 = load i64, i64* %RBP.i111
  %8650 = sub i64 %8649, 48
  %8651 = load i64, i64* %PC.i109
  %8652 = add i64 %8651, 4
  store i64 %8652, i64* %PC.i109
  %8653 = inttoptr i64 %8650 to i32*
  %8654 = load i32, i32* %8653
  %8655 = sext i32 %8654 to i64
  store i64 %8655, i64* %RCX.i110, align 8
  store %struct.Memory* %loadMem_43e630, %struct.Memory** %MEMORY
  %loadMem_43e634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8657 = getelementptr inbounds %struct.GPR, %struct.GPR* %8656, i32 0, i32 33
  %8658 = getelementptr inbounds %struct.Reg, %struct.Reg* %8657, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %8658 to i64*
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8660 = getelementptr inbounds %struct.GPR, %struct.GPR* %8659, i32 0, i32 9
  %8661 = getelementptr inbounds %struct.Reg, %struct.Reg* %8660, i32 0, i32 0
  %SI.i106 = bitcast %union.anon* %8661 to i16*
  %8662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8663 = getelementptr inbounds %struct.GPR, %struct.GPR* %8662, i32 0, i32 1
  %8664 = getelementptr inbounds %struct.Reg, %struct.Reg* %8663, i32 0, i32 0
  %RAX.i107 = bitcast %union.anon* %8664 to i64*
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8666 = getelementptr inbounds %struct.GPR, %struct.GPR* %8665, i32 0, i32 5
  %8667 = getelementptr inbounds %struct.Reg, %struct.Reg* %8666, i32 0, i32 0
  %RCX.i108 = bitcast %union.anon* %8667 to i64*
  %8668 = load i64, i64* %RAX.i107
  %8669 = load i64, i64* %RCX.i108
  %8670 = mul i64 %8669, 2
  %8671 = add i64 %8670, %8668
  %8672 = load i16, i16* %SI.i106
  %8673 = zext i16 %8672 to i64
  %8674 = load i64, i64* %PC.i105
  %8675 = add i64 %8674, 4
  store i64 %8675, i64* %PC.i105
  %8676 = inttoptr i64 %8671 to i16*
  store i16 %8672, i16* %8676
  store %struct.Memory* %loadMem_43e634, %struct.Memory** %MEMORY
  %loadMem_43e638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8678 = getelementptr inbounds %struct.GPR, %struct.GPR* %8677, i32 0, i32 33
  %8679 = getelementptr inbounds %struct.Reg, %struct.Reg* %8678, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %8679 to i64*
  %8680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8681 = getelementptr inbounds %struct.GPR, %struct.GPR* %8680, i32 0, i32 1
  %8682 = getelementptr inbounds %struct.Reg, %struct.Reg* %8681, i32 0, i32 0
  %RAX.i103 = bitcast %union.anon* %8682 to i64*
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8684 = getelementptr inbounds %struct.GPR, %struct.GPR* %8683, i32 0, i32 15
  %8685 = getelementptr inbounds %struct.Reg, %struct.Reg* %8684, i32 0, i32 0
  %RBP.i104 = bitcast %union.anon* %8685 to i64*
  %8686 = load i64, i64* %RBP.i104
  %8687 = sub i64 %8686, 44
  %8688 = load i64, i64* %PC.i102
  %8689 = add i64 %8688, 3
  store i64 %8689, i64* %PC.i102
  %8690 = inttoptr i64 %8687 to i32*
  %8691 = load i32, i32* %8690
  %8692 = zext i32 %8691 to i64
  store i64 %8692, i64* %RAX.i103, align 8
  store %struct.Memory* %loadMem_43e638, %struct.Memory** %MEMORY
  %loadMem_43e63b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8694 = getelementptr inbounds %struct.GPR, %struct.GPR* %8693, i32 0, i32 33
  %8695 = getelementptr inbounds %struct.Reg, %struct.Reg* %8694, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %8695 to i64*
  %8696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8697 = getelementptr inbounds %struct.GPR, %struct.GPR* %8696, i32 0, i32 1
  %8698 = getelementptr inbounds %struct.Reg, %struct.Reg* %8697, i32 0, i32 0
  %RAX.i101 = bitcast %union.anon* %8698 to i64*
  %8699 = load i64, i64* %RAX.i101
  %8700 = load i64, i64* %PC.i100
  %8701 = add i64 %8700, 3
  store i64 %8701, i64* %PC.i100
  %8702 = trunc i64 %8699 to i32
  %8703 = add i32 1, %8702
  %8704 = zext i32 %8703 to i64
  store i64 %8704, i64* %RAX.i101, align 8
  %8705 = icmp ult i32 %8703, %8702
  %8706 = icmp ult i32 %8703, 1
  %8707 = or i1 %8705, %8706
  %8708 = zext i1 %8707 to i8
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8708, i8* %8709, align 1
  %8710 = and i32 %8703, 255
  %8711 = call i32 @llvm.ctpop.i32(i32 %8710)
  %8712 = trunc i32 %8711 to i8
  %8713 = and i8 %8712, 1
  %8714 = xor i8 %8713, 1
  %8715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8714, i8* %8715, align 1
  %8716 = xor i64 1, %8699
  %8717 = trunc i64 %8716 to i32
  %8718 = xor i32 %8717, %8703
  %8719 = lshr i32 %8718, 4
  %8720 = trunc i32 %8719 to i8
  %8721 = and i8 %8720, 1
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8721, i8* %8722, align 1
  %8723 = icmp eq i32 %8703, 0
  %8724 = zext i1 %8723 to i8
  %8725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8724, i8* %8725, align 1
  %8726 = lshr i32 %8703, 31
  %8727 = trunc i32 %8726 to i8
  %8728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8727, i8* %8728, align 1
  %8729 = lshr i32 %8702, 31
  %8730 = xor i32 %8726, %8729
  %8731 = add i32 %8730, %8726
  %8732 = icmp eq i32 %8731, 2
  %8733 = zext i1 %8732 to i8
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8733, i8* %8734, align 1
  store %struct.Memory* %loadMem_43e63b, %struct.Memory** %MEMORY
  %loadMem_43e63e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8736 = getelementptr inbounds %struct.GPR, %struct.GPR* %8735, i32 0, i32 33
  %8737 = getelementptr inbounds %struct.Reg, %struct.Reg* %8736, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %8737 to i64*
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8739 = getelementptr inbounds %struct.GPR, %struct.GPR* %8738, i32 0, i32 1
  %8740 = getelementptr inbounds %struct.Reg, %struct.Reg* %8739, i32 0, i32 0
  %EAX.i98 = bitcast %union.anon* %8740 to i32*
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8742 = getelementptr inbounds %struct.GPR, %struct.GPR* %8741, i32 0, i32 15
  %8743 = getelementptr inbounds %struct.Reg, %struct.Reg* %8742, i32 0, i32 0
  %RBP.i99 = bitcast %union.anon* %8743 to i64*
  %8744 = load i64, i64* %RBP.i99
  %8745 = sub i64 %8744, 44
  %8746 = load i32, i32* %EAX.i98
  %8747 = zext i32 %8746 to i64
  %8748 = load i64, i64* %PC.i97
  %8749 = add i64 %8748, 3
  store i64 %8749, i64* %PC.i97
  %8750 = inttoptr i64 %8745 to i32*
  store i32 %8746, i32* %8750
  store %struct.Memory* %loadMem_43e63e, %struct.Memory** %MEMORY
  %loadMem_43e641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8752 = getelementptr inbounds %struct.GPR, %struct.GPR* %8751, i32 0, i32 33
  %8753 = getelementptr inbounds %struct.Reg, %struct.Reg* %8752, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %8753 to i64*
  %8754 = load i64, i64* %PC.i96
  %8755 = add i64 %8754, -74
  %8756 = load i64, i64* %PC.i96
  %8757 = add i64 %8756, 5
  store i64 %8757, i64* %PC.i96
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8755, i64* %8758, align 8
  store %struct.Memory* %loadMem_43e641, %struct.Memory** %MEMORY
  br label %block_.L_43e5f7

block_.L_43e646:                                  ; preds = %block_.L_43e5f7
  %loadMem_43e646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8760 = getelementptr inbounds %struct.GPR, %struct.GPR* %8759, i32 0, i32 33
  %8761 = getelementptr inbounds %struct.Reg, %struct.Reg* %8760, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %8761 to i64*
  %8762 = load i64, i64* %PC.i95
  %8763 = add i64 %8762, 5
  %8764 = load i64, i64* %PC.i95
  %8765 = add i64 %8764, 5
  store i64 %8765, i64* %PC.i95
  %8766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8763, i64* %8766, align 8
  store %struct.Memory* %loadMem_43e646, %struct.Memory** %MEMORY
  br label %block_.L_43e64b

block_.L_43e64b:                                  ; preds = %block_.L_43e646
  %loadMem_43e64b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8768 = getelementptr inbounds %struct.GPR, %struct.GPR* %8767, i32 0, i32 33
  %8769 = getelementptr inbounds %struct.Reg, %struct.Reg* %8768, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %8769 to i64*
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8771 = getelementptr inbounds %struct.GPR, %struct.GPR* %8770, i32 0, i32 1
  %8772 = getelementptr inbounds %struct.Reg, %struct.Reg* %8771, i32 0, i32 0
  %RAX.i93 = bitcast %union.anon* %8772 to i64*
  %8773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8774 = getelementptr inbounds %struct.GPR, %struct.GPR* %8773, i32 0, i32 15
  %8775 = getelementptr inbounds %struct.Reg, %struct.Reg* %8774, i32 0, i32 0
  %RBP.i94 = bitcast %union.anon* %8775 to i64*
  %8776 = load i64, i64* %RBP.i94
  %8777 = sub i64 %8776, 48
  %8778 = load i64, i64* %PC.i92
  %8779 = add i64 %8778, 3
  store i64 %8779, i64* %PC.i92
  %8780 = inttoptr i64 %8777 to i32*
  %8781 = load i32, i32* %8780
  %8782 = zext i32 %8781 to i64
  store i64 %8782, i64* %RAX.i93, align 8
  store %struct.Memory* %loadMem_43e64b, %struct.Memory** %MEMORY
  %loadMem_43e64e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8784 = getelementptr inbounds %struct.GPR, %struct.GPR* %8783, i32 0, i32 33
  %8785 = getelementptr inbounds %struct.Reg, %struct.Reg* %8784, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %8785 to i64*
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8787 = getelementptr inbounds %struct.GPR, %struct.GPR* %8786, i32 0, i32 1
  %8788 = getelementptr inbounds %struct.Reg, %struct.Reg* %8787, i32 0, i32 0
  %RAX.i91 = bitcast %union.anon* %8788 to i64*
  %8789 = load i64, i64* %RAX.i91
  %8790 = load i64, i64* %PC.i90
  %8791 = add i64 %8790, 3
  store i64 %8791, i64* %PC.i90
  %8792 = trunc i64 %8789 to i32
  %8793 = add i32 1, %8792
  %8794 = zext i32 %8793 to i64
  store i64 %8794, i64* %RAX.i91, align 8
  %8795 = icmp ult i32 %8793, %8792
  %8796 = icmp ult i32 %8793, 1
  %8797 = or i1 %8795, %8796
  %8798 = zext i1 %8797 to i8
  %8799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8798, i8* %8799, align 1
  %8800 = and i32 %8793, 255
  %8801 = call i32 @llvm.ctpop.i32(i32 %8800)
  %8802 = trunc i32 %8801 to i8
  %8803 = and i8 %8802, 1
  %8804 = xor i8 %8803, 1
  %8805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8804, i8* %8805, align 1
  %8806 = xor i64 1, %8789
  %8807 = trunc i64 %8806 to i32
  %8808 = xor i32 %8807, %8793
  %8809 = lshr i32 %8808, 4
  %8810 = trunc i32 %8809 to i8
  %8811 = and i8 %8810, 1
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8811, i8* %8812, align 1
  %8813 = icmp eq i32 %8793, 0
  %8814 = zext i1 %8813 to i8
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8814, i8* %8815, align 1
  %8816 = lshr i32 %8793, 31
  %8817 = trunc i32 %8816 to i8
  %8818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8817, i8* %8818, align 1
  %8819 = lshr i32 %8792, 31
  %8820 = xor i32 %8816, %8819
  %8821 = add i32 %8820, %8816
  %8822 = icmp eq i32 %8821, 2
  %8823 = zext i1 %8822 to i8
  %8824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8823, i8* %8824, align 1
  store %struct.Memory* %loadMem_43e64e, %struct.Memory** %MEMORY
  %loadMem_43e651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8826 = getelementptr inbounds %struct.GPR, %struct.GPR* %8825, i32 0, i32 33
  %8827 = getelementptr inbounds %struct.Reg, %struct.Reg* %8826, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %8827 to i64*
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 1
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %EAX.i88 = bitcast %union.anon* %8830 to i32*
  %8831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8832 = getelementptr inbounds %struct.GPR, %struct.GPR* %8831, i32 0, i32 15
  %8833 = getelementptr inbounds %struct.Reg, %struct.Reg* %8832, i32 0, i32 0
  %RBP.i89 = bitcast %union.anon* %8833 to i64*
  %8834 = load i64, i64* %RBP.i89
  %8835 = sub i64 %8834, 48
  %8836 = load i32, i32* %EAX.i88
  %8837 = zext i32 %8836 to i64
  %8838 = load i64, i64* %PC.i87
  %8839 = add i64 %8838, 3
  store i64 %8839, i64* %PC.i87
  %8840 = inttoptr i64 %8835 to i32*
  store i32 %8836, i32* %8840
  store %struct.Memory* %loadMem_43e651, %struct.Memory** %MEMORY
  %loadMem_43e654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8842 = getelementptr inbounds %struct.GPR, %struct.GPR* %8841, i32 0, i32 33
  %8843 = getelementptr inbounds %struct.Reg, %struct.Reg* %8842, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %8843 to i64*
  %8844 = load i64, i64* %PC.i86
  %8845 = add i64 %8844, -111
  %8846 = load i64, i64* %PC.i86
  %8847 = add i64 %8846, 5
  store i64 %8847, i64* %PC.i86
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8845, i64* %8848, align 8
  store %struct.Memory* %loadMem_43e654, %struct.Memory** %MEMORY
  br label %block_.L_43e5e5

block_.L_43e659:                                  ; preds = %block_.L_43e5e5
  %loadMem_43e659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8850 = getelementptr inbounds %struct.GPR, %struct.GPR* %8849, i32 0, i32 33
  %8851 = getelementptr inbounds %struct.Reg, %struct.Reg* %8850, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %8851 to i64*
  %8852 = load i64, i64* %PC.i85
  %8853 = add i64 %8852, 132
  %8854 = load i64, i64* %PC.i85
  %8855 = add i64 %8854, 5
  store i64 %8855, i64* %PC.i85
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8853, i64* %8856, align 8
  store %struct.Memory* %loadMem_43e659, %struct.Memory** %MEMORY
  br label %block_.L_43e6dd

block_.L_43e65e:                                  ; preds = %block_.L_43e5d5
  %loadMem_43e65e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8858 = getelementptr inbounds %struct.GPR, %struct.GPR* %8857, i32 0, i32 33
  %8859 = getelementptr inbounds %struct.Reg, %struct.Reg* %8858, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %8859 to i64*
  %8860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8861 = getelementptr inbounds %struct.GPR, %struct.GPR* %8860, i32 0, i32 1
  %8862 = getelementptr inbounds %struct.Reg, %struct.Reg* %8861, i32 0, i32 0
  %RAX.i83 = bitcast %union.anon* %8862 to i64*
  %8863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8864 = getelementptr inbounds %struct.GPR, %struct.GPR* %8863, i32 0, i32 15
  %8865 = getelementptr inbounds %struct.Reg, %struct.Reg* %8864, i32 0, i32 0
  %RBP.i84 = bitcast %union.anon* %8865 to i64*
  %8866 = load i64, i64* %RBP.i84
  %8867 = sub i64 %8866, 24
  %8868 = load i64, i64* %PC.i82
  %8869 = add i64 %8868, 3
  store i64 %8869, i64* %PC.i82
  %8870 = inttoptr i64 %8867 to i32*
  %8871 = load i32, i32* %8870
  %8872 = zext i32 %8871 to i64
  store i64 %8872, i64* %RAX.i83, align 8
  store %struct.Memory* %loadMem_43e65e, %struct.Memory** %MEMORY
  %loadMem_43e661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8874 = getelementptr inbounds %struct.GPR, %struct.GPR* %8873, i32 0, i32 33
  %8875 = getelementptr inbounds %struct.Reg, %struct.Reg* %8874, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %8875 to i64*
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8877 = getelementptr inbounds %struct.GPR, %struct.GPR* %8876, i32 0, i32 1
  %8878 = getelementptr inbounds %struct.Reg, %struct.Reg* %8877, i32 0, i32 0
  %EAX.i80 = bitcast %union.anon* %8878 to i32*
  %8879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8880 = getelementptr inbounds %struct.GPR, %struct.GPR* %8879, i32 0, i32 15
  %8881 = getelementptr inbounds %struct.Reg, %struct.Reg* %8880, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %8881 to i64*
  %8882 = load i64, i64* %RBP.i81
  %8883 = sub i64 %8882, 48
  %8884 = load i32, i32* %EAX.i80
  %8885 = zext i32 %8884 to i64
  %8886 = load i64, i64* %PC.i79
  %8887 = add i64 %8886, 3
  store i64 %8887, i64* %PC.i79
  %8888 = inttoptr i64 %8883 to i32*
  store i32 %8884, i32* %8888
  store %struct.Memory* %loadMem_43e661, %struct.Memory** %MEMORY
  br label %block_.L_43e664

block_.L_43e664:                                  ; preds = %block_.L_43e6ca, %block_.L_43e65e
  %loadMem_43e664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8890 = getelementptr inbounds %struct.GPR, %struct.GPR* %8889, i32 0, i32 33
  %8891 = getelementptr inbounds %struct.Reg, %struct.Reg* %8890, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %8891 to i64*
  %8892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8893 = getelementptr inbounds %struct.GPR, %struct.GPR* %8892, i32 0, i32 1
  %8894 = getelementptr inbounds %struct.Reg, %struct.Reg* %8893, i32 0, i32 0
  %RAX.i77 = bitcast %union.anon* %8894 to i64*
  %8895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8896 = getelementptr inbounds %struct.GPR, %struct.GPR* %8895, i32 0, i32 15
  %8897 = getelementptr inbounds %struct.Reg, %struct.Reg* %8896, i32 0, i32 0
  %RBP.i78 = bitcast %union.anon* %8897 to i64*
  %8898 = load i64, i64* %RBP.i78
  %8899 = sub i64 %8898, 48
  %8900 = load i64, i64* %PC.i76
  %8901 = add i64 %8900, 3
  store i64 %8901, i64* %PC.i76
  %8902 = inttoptr i64 %8899 to i32*
  %8903 = load i32, i32* %8902
  %8904 = zext i32 %8903 to i64
  store i64 %8904, i64* %RAX.i77, align 8
  store %struct.Memory* %loadMem_43e664, %struct.Memory** %MEMORY
  %loadMem_43e667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8906 = getelementptr inbounds %struct.GPR, %struct.GPR* %8905, i32 0, i32 33
  %8907 = getelementptr inbounds %struct.Reg, %struct.Reg* %8906, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %8907 to i64*
  %8908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8909 = getelementptr inbounds %struct.GPR, %struct.GPR* %8908, i32 0, i32 1
  %8910 = getelementptr inbounds %struct.Reg, %struct.Reg* %8909, i32 0, i32 0
  %EAX.i74 = bitcast %union.anon* %8910 to i32*
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8912 = getelementptr inbounds %struct.GPR, %struct.GPR* %8911, i32 0, i32 15
  %8913 = getelementptr inbounds %struct.Reg, %struct.Reg* %8912, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %8913 to i64*
  %8914 = load i32, i32* %EAX.i74
  %8915 = zext i32 %8914 to i64
  %8916 = load i64, i64* %RBP.i75
  %8917 = sub i64 %8916, 56
  %8918 = load i64, i64* %PC.i73
  %8919 = add i64 %8918, 3
  store i64 %8919, i64* %PC.i73
  %8920 = inttoptr i64 %8917 to i32*
  %8921 = load i32, i32* %8920
  %8922 = sub i32 %8914, %8921
  %8923 = icmp ult i32 %8914, %8921
  %8924 = zext i1 %8923 to i8
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8924, i8* %8925, align 1
  %8926 = and i32 %8922, 255
  %8927 = call i32 @llvm.ctpop.i32(i32 %8926)
  %8928 = trunc i32 %8927 to i8
  %8929 = and i8 %8928, 1
  %8930 = xor i8 %8929, 1
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8930, i8* %8931, align 1
  %8932 = xor i32 %8921, %8914
  %8933 = xor i32 %8932, %8922
  %8934 = lshr i32 %8933, 4
  %8935 = trunc i32 %8934 to i8
  %8936 = and i8 %8935, 1
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8936, i8* %8937, align 1
  %8938 = icmp eq i32 %8922, 0
  %8939 = zext i1 %8938 to i8
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8939, i8* %8940, align 1
  %8941 = lshr i32 %8922, 31
  %8942 = trunc i32 %8941 to i8
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8942, i8* %8943, align 1
  %8944 = lshr i32 %8914, 31
  %8945 = lshr i32 %8921, 31
  %8946 = xor i32 %8945, %8944
  %8947 = xor i32 %8941, %8944
  %8948 = add i32 %8947, %8946
  %8949 = icmp eq i32 %8948, 2
  %8950 = zext i1 %8949 to i8
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8950, i8* %8951, align 1
  store %struct.Memory* %loadMem_43e667, %struct.Memory** %MEMORY
  %loadMem_43e66a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8953 = getelementptr inbounds %struct.GPR, %struct.GPR* %8952, i32 0, i32 33
  %8954 = getelementptr inbounds %struct.Reg, %struct.Reg* %8953, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %8954 to i64*
  %8955 = load i64, i64* %PC.i72
  %8956 = add i64 %8955, 110
  %8957 = load i64, i64* %PC.i72
  %8958 = add i64 %8957, 6
  %8959 = load i64, i64* %PC.i72
  %8960 = add i64 %8959, 6
  store i64 %8960, i64* %PC.i72
  %8961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8962 = load i8, i8* %8961, align 1
  %8963 = icmp ne i8 %8962, 0
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8965 = load i8, i8* %8964, align 1
  %8966 = icmp ne i8 %8965, 0
  %8967 = xor i1 %8963, %8966
  %8968 = xor i1 %8967, true
  %8969 = zext i1 %8968 to i8
  store i8 %8969, i8* %BRANCH_TAKEN, align 1
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8971 = select i1 %8967, i64 %8958, i64 %8956
  store i64 %8971, i64* %8970, align 8
  store %struct.Memory* %loadMem_43e66a, %struct.Memory** %MEMORY
  %loadBr_43e66a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e66a = icmp eq i8 %loadBr_43e66a, 1
  br i1 %cmpBr_43e66a, label %block_.L_43e6d8, label %block_43e670

block_43e670:                                     ; preds = %block_.L_43e664
  %loadMem_43e670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8973 = getelementptr inbounds %struct.GPR, %struct.GPR* %8972, i32 0, i32 33
  %8974 = getelementptr inbounds %struct.Reg, %struct.Reg* %8973, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %8974 to i64*
  %8975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8976 = getelementptr inbounds %struct.GPR, %struct.GPR* %8975, i32 0, i32 1
  %8977 = getelementptr inbounds %struct.Reg, %struct.Reg* %8976, i32 0, i32 0
  %RAX.i70 = bitcast %union.anon* %8977 to i64*
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8979 = getelementptr inbounds %struct.GPR, %struct.GPR* %8978, i32 0, i32 15
  %8980 = getelementptr inbounds %struct.Reg, %struct.Reg* %8979, i32 0, i32 0
  %RBP.i71 = bitcast %union.anon* %8980 to i64*
  %8981 = load i64, i64* %RBP.i71
  %8982 = sub i64 %8981, 20
  %8983 = load i64, i64* %PC.i69
  %8984 = add i64 %8983, 3
  store i64 %8984, i64* %PC.i69
  %8985 = inttoptr i64 %8982 to i32*
  %8986 = load i32, i32* %8985
  %8987 = zext i32 %8986 to i64
  store i64 %8987, i64* %RAX.i70, align 8
  store %struct.Memory* %loadMem_43e670, %struct.Memory** %MEMORY
  %loadMem_43e673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8989 = getelementptr inbounds %struct.GPR, %struct.GPR* %8988, i32 0, i32 33
  %8990 = getelementptr inbounds %struct.Reg, %struct.Reg* %8989, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %8990 to i64*
  %8991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8992 = getelementptr inbounds %struct.GPR, %struct.GPR* %8991, i32 0, i32 1
  %8993 = getelementptr inbounds %struct.Reg, %struct.Reg* %8992, i32 0, i32 0
  %EAX.i67 = bitcast %union.anon* %8993 to i32*
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8995 = getelementptr inbounds %struct.GPR, %struct.GPR* %8994, i32 0, i32 15
  %8996 = getelementptr inbounds %struct.Reg, %struct.Reg* %8995, i32 0, i32 0
  %RBP.i68 = bitcast %union.anon* %8996 to i64*
  %8997 = load i64, i64* %RBP.i68
  %8998 = sub i64 %8997, 44
  %8999 = load i32, i32* %EAX.i67
  %9000 = zext i32 %8999 to i64
  %9001 = load i64, i64* %PC.i66
  %9002 = add i64 %9001, 3
  store i64 %9002, i64* %PC.i66
  %9003 = inttoptr i64 %8998 to i32*
  store i32 %8999, i32* %9003
  store %struct.Memory* %loadMem_43e673, %struct.Memory** %MEMORY
  br label %block_.L_43e676

block_.L_43e676:                                  ; preds = %block_43e682, %block_43e670
  %loadMem_43e676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9005 = getelementptr inbounds %struct.GPR, %struct.GPR* %9004, i32 0, i32 33
  %9006 = getelementptr inbounds %struct.Reg, %struct.Reg* %9005, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %9006 to i64*
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9008 = getelementptr inbounds %struct.GPR, %struct.GPR* %9007, i32 0, i32 1
  %9009 = getelementptr inbounds %struct.Reg, %struct.Reg* %9008, i32 0, i32 0
  %RAX.i64 = bitcast %union.anon* %9009 to i64*
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9011 = getelementptr inbounds %struct.GPR, %struct.GPR* %9010, i32 0, i32 15
  %9012 = getelementptr inbounds %struct.Reg, %struct.Reg* %9011, i32 0, i32 0
  %RBP.i65 = bitcast %union.anon* %9012 to i64*
  %9013 = load i64, i64* %RBP.i65
  %9014 = sub i64 %9013, 44
  %9015 = load i64, i64* %PC.i63
  %9016 = add i64 %9015, 3
  store i64 %9016, i64* %PC.i63
  %9017 = inttoptr i64 %9014 to i32*
  %9018 = load i32, i32* %9017
  %9019 = zext i32 %9018 to i64
  store i64 %9019, i64* %RAX.i64, align 8
  store %struct.Memory* %loadMem_43e676, %struct.Memory** %MEMORY
  %loadMem_43e679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9021 = getelementptr inbounds %struct.GPR, %struct.GPR* %9020, i32 0, i32 33
  %9022 = getelementptr inbounds %struct.Reg, %struct.Reg* %9021, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %9022 to i64*
  %9023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9024 = getelementptr inbounds %struct.GPR, %struct.GPR* %9023, i32 0, i32 1
  %9025 = getelementptr inbounds %struct.Reg, %struct.Reg* %9024, i32 0, i32 0
  %EAX.i61 = bitcast %union.anon* %9025 to i32*
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 15
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %RBP.i62 = bitcast %union.anon* %9028 to i64*
  %9029 = load i32, i32* %EAX.i61
  %9030 = zext i32 %9029 to i64
  %9031 = load i64, i64* %RBP.i62
  %9032 = sub i64 %9031, 52
  %9033 = load i64, i64* %PC.i60
  %9034 = add i64 %9033, 3
  store i64 %9034, i64* %PC.i60
  %9035 = inttoptr i64 %9032 to i32*
  %9036 = load i32, i32* %9035
  %9037 = sub i32 %9029, %9036
  %9038 = icmp ult i32 %9029, %9036
  %9039 = zext i1 %9038 to i8
  %9040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9039, i8* %9040, align 1
  %9041 = and i32 %9037, 255
  %9042 = call i32 @llvm.ctpop.i32(i32 %9041)
  %9043 = trunc i32 %9042 to i8
  %9044 = and i8 %9043, 1
  %9045 = xor i8 %9044, 1
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9045, i8* %9046, align 1
  %9047 = xor i32 %9036, %9029
  %9048 = xor i32 %9047, %9037
  %9049 = lshr i32 %9048, 4
  %9050 = trunc i32 %9049 to i8
  %9051 = and i8 %9050, 1
  %9052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9051, i8* %9052, align 1
  %9053 = icmp eq i32 %9037, 0
  %9054 = zext i1 %9053 to i8
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9054, i8* %9055, align 1
  %9056 = lshr i32 %9037, 31
  %9057 = trunc i32 %9056 to i8
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9057, i8* %9058, align 1
  %9059 = lshr i32 %9029, 31
  %9060 = lshr i32 %9036, 31
  %9061 = xor i32 %9060, %9059
  %9062 = xor i32 %9056, %9059
  %9063 = add i32 %9062, %9061
  %9064 = icmp eq i32 %9063, 2
  %9065 = zext i1 %9064 to i8
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9065, i8* %9066, align 1
  store %struct.Memory* %loadMem_43e679, %struct.Memory** %MEMORY
  %loadMem_43e67c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9068 = getelementptr inbounds %struct.GPR, %struct.GPR* %9067, i32 0, i32 33
  %9069 = getelementptr inbounds %struct.Reg, %struct.Reg* %9068, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %9069 to i64*
  %9070 = load i64, i64* %PC.i59
  %9071 = add i64 %9070, 73
  %9072 = load i64, i64* %PC.i59
  %9073 = add i64 %9072, 6
  %9074 = load i64, i64* %PC.i59
  %9075 = add i64 %9074, 6
  store i64 %9075, i64* %PC.i59
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9077 = load i8, i8* %9076, align 1
  %9078 = icmp ne i8 %9077, 0
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9080 = load i8, i8* %9079, align 1
  %9081 = icmp ne i8 %9080, 0
  %9082 = xor i1 %9078, %9081
  %9083 = xor i1 %9082, true
  %9084 = zext i1 %9083 to i8
  store i8 %9084, i8* %BRANCH_TAKEN, align 1
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9086 = select i1 %9082, i64 %9073, i64 %9071
  store i64 %9086, i64* %9085, align 8
  store %struct.Memory* %loadMem_43e67c, %struct.Memory** %MEMORY
  %loadBr_43e67c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43e67c = icmp eq i8 %loadBr_43e67c, 1
  br i1 %cmpBr_43e67c, label %block_.L_43e6c5, label %block_43e682

block_43e682:                                     ; preds = %block_.L_43e676
  %loadMem_43e682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9088 = getelementptr inbounds %struct.GPR, %struct.GPR* %9087, i32 0, i32 33
  %9089 = getelementptr inbounds %struct.Reg, %struct.Reg* %9088, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %9089 to i64*
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9091 = getelementptr inbounds %struct.GPR, %struct.GPR* %9090, i32 0, i32 1
  %9092 = getelementptr inbounds %struct.Reg, %struct.Reg* %9091, i32 0, i32 0
  %RAX.i57 = bitcast %union.anon* %9092 to i64*
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9094 = getelementptr inbounds %struct.GPR, %struct.GPR* %9093, i32 0, i32 15
  %9095 = getelementptr inbounds %struct.Reg, %struct.Reg* %9094, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %9095 to i64*
  %9096 = load i64, i64* %RBP.i58
  %9097 = sub i64 %9096, 88
  %9098 = load i64, i64* %PC.i56
  %9099 = add i64 %9098, 4
  store i64 %9099, i64* %PC.i56
  %9100 = inttoptr i64 %9097 to i64*
  %9101 = load i64, i64* %9100
  store i64 %9101, i64* %RAX.i57, align 8
  store %struct.Memory* %loadMem_43e682, %struct.Memory** %MEMORY
  %loadMem_43e686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9103 = getelementptr inbounds %struct.GPR, %struct.GPR* %9102, i32 0, i32 33
  %9104 = getelementptr inbounds %struct.Reg, %struct.Reg* %9103, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %9104 to i64*
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9106 = getelementptr inbounds %struct.GPR, %struct.GPR* %9105, i32 0, i32 1
  %9107 = getelementptr inbounds %struct.Reg, %struct.Reg* %9106, i32 0, i32 0
  %RAX.i54 = bitcast %union.anon* %9107 to i64*
  %9108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9109 = getelementptr inbounds %struct.GPR, %struct.GPR* %9108, i32 0, i32 5
  %9110 = getelementptr inbounds %struct.Reg, %struct.Reg* %9109, i32 0, i32 0
  %RCX.i55 = bitcast %union.anon* %9110 to i64*
  %9111 = load i64, i64* %RAX.i54
  %9112 = load i64, i64* %PC.i53
  %9113 = add i64 %9112, 3
  store i64 %9113, i64* %PC.i53
  store i64 %9111, i64* %RCX.i55, align 8
  store %struct.Memory* %loadMem_43e686, %struct.Memory** %MEMORY
  %loadMem_43e689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9115 = getelementptr inbounds %struct.GPR, %struct.GPR* %9114, i32 0, i32 33
  %9116 = getelementptr inbounds %struct.Reg, %struct.Reg* %9115, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %9116 to i64*
  %9117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9118 = getelementptr inbounds %struct.GPR, %struct.GPR* %9117, i32 0, i32 5
  %9119 = getelementptr inbounds %struct.Reg, %struct.Reg* %9118, i32 0, i32 0
  %RCX.i52 = bitcast %union.anon* %9119 to i64*
  %9120 = load i64, i64* %RCX.i52
  %9121 = load i64, i64* %PC.i51
  %9122 = add i64 %9121, 4
  store i64 %9122, i64* %PC.i51
  %9123 = add i64 4, %9120
  store i64 %9123, i64* %RCX.i52, align 8
  %9124 = icmp ult i64 %9123, %9120
  %9125 = icmp ult i64 %9123, 4
  %9126 = or i1 %9124, %9125
  %9127 = zext i1 %9126 to i8
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9127, i8* %9128, align 1
  %9129 = trunc i64 %9123 to i32
  %9130 = and i32 %9129, 255
  %9131 = call i32 @llvm.ctpop.i32(i32 %9130)
  %9132 = trunc i32 %9131 to i8
  %9133 = and i8 %9132, 1
  %9134 = xor i8 %9133, 1
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9134, i8* %9135, align 1
  %9136 = xor i64 4, %9120
  %9137 = xor i64 %9136, %9123
  %9138 = lshr i64 %9137, 4
  %9139 = trunc i64 %9138 to i8
  %9140 = and i8 %9139, 1
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9140, i8* %9141, align 1
  %9142 = icmp eq i64 %9123, 0
  %9143 = zext i1 %9142 to i8
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9143, i8* %9144, align 1
  %9145 = lshr i64 %9123, 63
  %9146 = trunc i64 %9145 to i8
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9146, i8* %9147, align 1
  %9148 = lshr i64 %9120, 63
  %9149 = xor i64 %9145, %9148
  %9150 = add i64 %9149, %9145
  %9151 = icmp eq i64 %9150, 2
  %9152 = zext i1 %9151 to i8
  %9153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9152, i8* %9153, align 1
  store %struct.Memory* %loadMem_43e689, %struct.Memory** %MEMORY
  %loadMem_43e68d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9155 = getelementptr inbounds %struct.GPR, %struct.GPR* %9154, i32 0, i32 33
  %9156 = getelementptr inbounds %struct.Reg, %struct.Reg* %9155, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %9156 to i64*
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9158 = getelementptr inbounds %struct.GPR, %struct.GPR* %9157, i32 0, i32 5
  %9159 = getelementptr inbounds %struct.Reg, %struct.Reg* %9158, i32 0, i32 0
  %RCX.i49 = bitcast %union.anon* %9159 to i64*
  %9160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9161 = getelementptr inbounds %struct.GPR, %struct.GPR* %9160, i32 0, i32 15
  %9162 = getelementptr inbounds %struct.Reg, %struct.Reg* %9161, i32 0, i32 0
  %RBP.i50 = bitcast %union.anon* %9162 to i64*
  %9163 = load i64, i64* %RBP.i50
  %9164 = sub i64 %9163, 88
  %9165 = load i64, i64* %RCX.i49
  %9166 = load i64, i64* %PC.i48
  %9167 = add i64 %9166, 4
  store i64 %9167, i64* %PC.i48
  %9168 = inttoptr i64 %9164 to i64*
  store i64 %9165, i64* %9168
  store %struct.Memory* %loadMem_43e68d, %struct.Memory** %MEMORY
  %loadMem_43e691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9170 = getelementptr inbounds %struct.GPR, %struct.GPR* %9169, i32 0, i32 33
  %9171 = getelementptr inbounds %struct.Reg, %struct.Reg* %9170, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %9171 to i64*
  %9172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9173 = getelementptr inbounds %struct.GPR, %struct.GPR* %9172, i32 0, i32 1
  %9174 = getelementptr inbounds %struct.Reg, %struct.Reg* %9173, i32 0, i32 0
  %RAX.i47 = bitcast %union.anon* %9174 to i64*
  %9175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9176 = getelementptr inbounds %struct.GPR, %struct.GPR* %9175, i32 0, i32 7
  %9177 = getelementptr inbounds %struct.Reg, %struct.Reg* %9176, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9177 to i64*
  %9178 = load i64, i64* %RAX.i47
  %9179 = load i64, i64* %PC.i46
  %9180 = add i64 %9179, 2
  store i64 %9180, i64* %PC.i46
  %9181 = inttoptr i64 %9178 to i32*
  %9182 = load i32, i32* %9181
  %9183 = zext i32 %9182 to i64
  store i64 %9183, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_43e691, %struct.Memory** %MEMORY
  %loadMem_43e693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9185 = getelementptr inbounds %struct.GPR, %struct.GPR* %9184, i32 0, i32 33
  %9186 = getelementptr inbounds %struct.Reg, %struct.Reg* %9185, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %9186 to i64*
  %9187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9188 = getelementptr inbounds %struct.GPR, %struct.GPR* %9187, i32 0, i32 7
  %9189 = getelementptr inbounds %struct.Reg, %struct.Reg* %9188, i32 0, i32 0
  %DX.i = bitcast %union.anon* %9189 to i16*
  %9190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9191 = getelementptr inbounds %struct.GPR, %struct.GPR* %9190, i32 0, i32 9
  %9192 = getelementptr inbounds %struct.Reg, %struct.Reg* %9191, i32 0, i32 0
  %SI.i45 = bitcast %union.anon* %9192 to i16*
  %9193 = load i16, i16* %DX.i
  %9194 = zext i16 %9193 to i64
  %9195 = load i64, i64* %PC.i44
  %9196 = add i64 %9195, 3
  store i64 %9196, i64* %PC.i44
  store i16 %9193, i16* %SI.i45, align 2
  store %struct.Memory* %loadMem_43e693, %struct.Memory** %MEMORY
  %loadMem_43e696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9198 = getelementptr inbounds %struct.GPR, %struct.GPR* %9197, i32 0, i32 33
  %9199 = getelementptr inbounds %struct.Reg, %struct.Reg* %9198, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %9199 to i64*
  %9200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9201 = getelementptr inbounds %struct.GPR, %struct.GPR* %9200, i32 0, i32 1
  %9202 = getelementptr inbounds %struct.Reg, %struct.Reg* %9201, i32 0, i32 0
  %RAX.i43 = bitcast %union.anon* %9202 to i64*
  %9203 = load i64, i64* %PC.i42
  %9204 = add i64 %9203, 8
  store i64 %9204, i64* %PC.i42
  %9205 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9205, i64* %RAX.i43, align 8
  store %struct.Memory* %loadMem_43e696, %struct.Memory** %MEMORY
  %loadMem_43e69e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9207 = getelementptr inbounds %struct.GPR, %struct.GPR* %9206, i32 0, i32 33
  %9208 = getelementptr inbounds %struct.Reg, %struct.Reg* %9207, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %9208 to i64*
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9210 = getelementptr inbounds %struct.GPR, %struct.GPR* %9209, i32 0, i32 1
  %9211 = getelementptr inbounds %struct.Reg, %struct.Reg* %9210, i32 0, i32 0
  %RAX.i41 = bitcast %union.anon* %9211 to i64*
  %9212 = load i64, i64* %RAX.i41
  %9213 = load i64, i64* %PC.i40
  %9214 = add i64 %9213, 6
  store i64 %9214, i64* %PC.i40
  %9215 = add i64 12600, %9212
  store i64 %9215, i64* %RAX.i41, align 8
  %9216 = icmp ult i64 %9215, %9212
  %9217 = icmp ult i64 %9215, 12600
  %9218 = or i1 %9216, %9217
  %9219 = zext i1 %9218 to i8
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9219, i8* %9220, align 1
  %9221 = trunc i64 %9215 to i32
  %9222 = and i32 %9221, 255
  %9223 = call i32 @llvm.ctpop.i32(i32 %9222)
  %9224 = trunc i32 %9223 to i8
  %9225 = and i8 %9224, 1
  %9226 = xor i8 %9225, 1
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9226, i8* %9227, align 1
  %9228 = xor i64 12600, %9212
  %9229 = xor i64 %9228, %9215
  %9230 = lshr i64 %9229, 4
  %9231 = trunc i64 %9230 to i8
  %9232 = and i8 %9231, 1
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9232, i8* %9233, align 1
  %9234 = icmp eq i64 %9215, 0
  %9235 = zext i1 %9234 to i8
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9235, i8* %9236, align 1
  %9237 = lshr i64 %9215, 63
  %9238 = trunc i64 %9237 to i8
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9238, i8* %9239, align 1
  %9240 = lshr i64 %9212, 63
  %9241 = xor i64 %9237, %9240
  %9242 = add i64 %9241, %9237
  %9243 = icmp eq i64 %9242, 2
  %9244 = zext i1 %9243 to i8
  %9245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9244, i8* %9245, align 1
  store %struct.Memory* %loadMem_43e69e, %struct.Memory** %MEMORY
  %loadMem_43e6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9247 = getelementptr inbounds %struct.GPR, %struct.GPR* %9246, i32 0, i32 33
  %9248 = getelementptr inbounds %struct.Reg, %struct.Reg* %9247, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %9248 to i64*
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9250 = getelementptr inbounds %struct.GPR, %struct.GPR* %9249, i32 0, i32 5
  %9251 = getelementptr inbounds %struct.Reg, %struct.Reg* %9250, i32 0, i32 0
  %RCX.i38 = bitcast %union.anon* %9251 to i64*
  %9252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9253 = getelementptr inbounds %struct.GPR, %struct.GPR* %9252, i32 0, i32 15
  %9254 = getelementptr inbounds %struct.Reg, %struct.Reg* %9253, i32 0, i32 0
  %RBP.i39 = bitcast %union.anon* %9254 to i64*
  %9255 = load i64, i64* %RBP.i39
  %9256 = sub i64 %9255, 44
  %9257 = load i64, i64* %PC.i37
  %9258 = add i64 %9257, 4
  store i64 %9258, i64* %PC.i37
  %9259 = inttoptr i64 %9256 to i32*
  %9260 = load i32, i32* %9259
  %9261 = sext i32 %9260 to i64
  store i64 %9261, i64* %RCX.i38, align 8
  store %struct.Memory* %loadMem_43e6a4, %struct.Memory** %MEMORY
  %loadMem_43e6a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9263 = getelementptr inbounds %struct.GPR, %struct.GPR* %9262, i32 0, i32 33
  %9264 = getelementptr inbounds %struct.Reg, %struct.Reg* %9263, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %9264 to i64*
  %9265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9266 = getelementptr inbounds %struct.GPR, %struct.GPR* %9265, i32 0, i32 5
  %9267 = getelementptr inbounds %struct.Reg, %struct.Reg* %9266, i32 0, i32 0
  %RCX.i36 = bitcast %union.anon* %9267 to i64*
  %9268 = load i64, i64* %RCX.i36
  %9269 = load i64, i64* %PC.i35
  %9270 = add i64 %9269, 4
  store i64 %9270, i64* %PC.i35
  %9271 = shl i64 %9268, 4
  %9272 = icmp slt i64 %9271, 0
  %9273 = shl i64 %9271, 1
  store i64 %9273, i64* %RCX.i36, align 8
  %9274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9275 = zext i1 %9272 to i8
  store i8 %9275, i8* %9274, align 1
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9277 = trunc i64 %9273 to i32
  %9278 = and i32 %9277, 254
  %9279 = call i32 @llvm.ctpop.i32(i32 %9278)
  %9280 = trunc i32 %9279 to i8
  %9281 = and i8 %9280, 1
  %9282 = xor i8 %9281, 1
  store i8 %9282, i8* %9276, align 1
  %9283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9283, align 1
  %9284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9285 = icmp eq i64 %9273, 0
  %9286 = zext i1 %9285 to i8
  store i8 %9286, i8* %9284, align 1
  %9287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9288 = lshr i64 %9273, 63
  %9289 = trunc i64 %9288 to i8
  store i8 %9289, i8* %9287, align 1
  %9290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9290, align 1
  store %struct.Memory* %loadMem_43e6a8, %struct.Memory** %MEMORY
  %loadMem_43e6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9292 = getelementptr inbounds %struct.GPR, %struct.GPR* %9291, i32 0, i32 33
  %9293 = getelementptr inbounds %struct.Reg, %struct.Reg* %9292, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %9293 to i64*
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9295 = getelementptr inbounds %struct.GPR, %struct.GPR* %9294, i32 0, i32 1
  %9296 = getelementptr inbounds %struct.Reg, %struct.Reg* %9295, i32 0, i32 0
  %RAX.i33 = bitcast %union.anon* %9296 to i64*
  %9297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9298 = getelementptr inbounds %struct.GPR, %struct.GPR* %9297, i32 0, i32 5
  %9299 = getelementptr inbounds %struct.Reg, %struct.Reg* %9298, i32 0, i32 0
  %RCX.i34 = bitcast %union.anon* %9299 to i64*
  %9300 = load i64, i64* %RAX.i33
  %9301 = load i64, i64* %RCX.i34
  %9302 = load i64, i64* %PC.i32
  %9303 = add i64 %9302, 3
  store i64 %9303, i64* %PC.i32
  %9304 = add i64 %9301, %9300
  store i64 %9304, i64* %RAX.i33, align 8
  %9305 = icmp ult i64 %9304, %9300
  %9306 = icmp ult i64 %9304, %9301
  %9307 = or i1 %9305, %9306
  %9308 = zext i1 %9307 to i8
  %9309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9308, i8* %9309, align 1
  %9310 = trunc i64 %9304 to i32
  %9311 = and i32 %9310, 255
  %9312 = call i32 @llvm.ctpop.i32(i32 %9311)
  %9313 = trunc i32 %9312 to i8
  %9314 = and i8 %9313, 1
  %9315 = xor i8 %9314, 1
  %9316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9315, i8* %9316, align 1
  %9317 = xor i64 %9301, %9300
  %9318 = xor i64 %9317, %9304
  %9319 = lshr i64 %9318, 4
  %9320 = trunc i64 %9319 to i8
  %9321 = and i8 %9320, 1
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9321, i8* %9322, align 1
  %9323 = icmp eq i64 %9304, 0
  %9324 = zext i1 %9323 to i8
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9324, i8* %9325, align 1
  %9326 = lshr i64 %9304, 63
  %9327 = trunc i64 %9326 to i8
  %9328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9327, i8* %9328, align 1
  %9329 = lshr i64 %9300, 63
  %9330 = lshr i64 %9301, 63
  %9331 = xor i64 %9326, %9329
  %9332 = xor i64 %9326, %9330
  %9333 = add i64 %9331, %9332
  %9334 = icmp eq i64 %9333, 2
  %9335 = zext i1 %9334 to i8
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9335, i8* %9336, align 1
  store %struct.Memory* %loadMem_43e6ac, %struct.Memory** %MEMORY
  %loadMem_43e6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9338 = getelementptr inbounds %struct.GPR, %struct.GPR* %9337, i32 0, i32 33
  %9339 = getelementptr inbounds %struct.Reg, %struct.Reg* %9338, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %9339 to i64*
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9341 = getelementptr inbounds %struct.GPR, %struct.GPR* %9340, i32 0, i32 5
  %9342 = getelementptr inbounds %struct.Reg, %struct.Reg* %9341, i32 0, i32 0
  %RCX.i30 = bitcast %union.anon* %9342 to i64*
  %9343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9344 = getelementptr inbounds %struct.GPR, %struct.GPR* %9343, i32 0, i32 15
  %9345 = getelementptr inbounds %struct.Reg, %struct.Reg* %9344, i32 0, i32 0
  %RBP.i31 = bitcast %union.anon* %9345 to i64*
  %9346 = load i64, i64* %RBP.i31
  %9347 = sub i64 %9346, 48
  %9348 = load i64, i64* %PC.i29
  %9349 = add i64 %9348, 4
  store i64 %9349, i64* %PC.i29
  %9350 = inttoptr i64 %9347 to i32*
  %9351 = load i32, i32* %9350
  %9352 = sext i32 %9351 to i64
  store i64 %9352, i64* %RCX.i30, align 8
  store %struct.Memory* %loadMem_43e6af, %struct.Memory** %MEMORY
  %loadMem_43e6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9354 = getelementptr inbounds %struct.GPR, %struct.GPR* %9353, i32 0, i32 33
  %9355 = getelementptr inbounds %struct.Reg, %struct.Reg* %9354, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %9355 to i64*
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9357 = getelementptr inbounds %struct.GPR, %struct.GPR* %9356, i32 0, i32 9
  %9358 = getelementptr inbounds %struct.Reg, %struct.Reg* %9357, i32 0, i32 0
  %SI.i = bitcast %union.anon* %9358 to i16*
  %9359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9360 = getelementptr inbounds %struct.GPR, %struct.GPR* %9359, i32 0, i32 1
  %9361 = getelementptr inbounds %struct.Reg, %struct.Reg* %9360, i32 0, i32 0
  %RAX.i28 = bitcast %union.anon* %9361 to i64*
  %9362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9363 = getelementptr inbounds %struct.GPR, %struct.GPR* %9362, i32 0, i32 5
  %9364 = getelementptr inbounds %struct.Reg, %struct.Reg* %9363, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %9364 to i64*
  %9365 = load i64, i64* %RAX.i28
  %9366 = load i64, i64* %RCX.i
  %9367 = mul i64 %9366, 2
  %9368 = add i64 %9367, %9365
  %9369 = load i16, i16* %SI.i
  %9370 = zext i16 %9369 to i64
  %9371 = load i64, i64* %PC.i27
  %9372 = add i64 %9371, 4
  store i64 %9372, i64* %PC.i27
  %9373 = inttoptr i64 %9368 to i16*
  store i16 %9369, i16* %9373
  store %struct.Memory* %loadMem_43e6b3, %struct.Memory** %MEMORY
  %loadMem_43e6b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9375 = getelementptr inbounds %struct.GPR, %struct.GPR* %9374, i32 0, i32 33
  %9376 = getelementptr inbounds %struct.Reg, %struct.Reg* %9375, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %9376 to i64*
  %9377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9378 = getelementptr inbounds %struct.GPR, %struct.GPR* %9377, i32 0, i32 1
  %9379 = getelementptr inbounds %struct.Reg, %struct.Reg* %9378, i32 0, i32 0
  %RAX.i25 = bitcast %union.anon* %9379 to i64*
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9381 = getelementptr inbounds %struct.GPR, %struct.GPR* %9380, i32 0, i32 15
  %9382 = getelementptr inbounds %struct.Reg, %struct.Reg* %9381, i32 0, i32 0
  %RBP.i26 = bitcast %union.anon* %9382 to i64*
  %9383 = load i64, i64* %RBP.i26
  %9384 = sub i64 %9383, 44
  %9385 = load i64, i64* %PC.i24
  %9386 = add i64 %9385, 3
  store i64 %9386, i64* %PC.i24
  %9387 = inttoptr i64 %9384 to i32*
  %9388 = load i32, i32* %9387
  %9389 = zext i32 %9388 to i64
  store i64 %9389, i64* %RAX.i25, align 8
  store %struct.Memory* %loadMem_43e6b7, %struct.Memory** %MEMORY
  %loadMem_43e6ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9391 = getelementptr inbounds %struct.GPR, %struct.GPR* %9390, i32 0, i32 33
  %9392 = getelementptr inbounds %struct.Reg, %struct.Reg* %9391, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %9392 to i64*
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9394 = getelementptr inbounds %struct.GPR, %struct.GPR* %9393, i32 0, i32 1
  %9395 = getelementptr inbounds %struct.Reg, %struct.Reg* %9394, i32 0, i32 0
  %RAX.i23 = bitcast %union.anon* %9395 to i64*
  %9396 = load i64, i64* %RAX.i23
  %9397 = load i64, i64* %PC.i22
  %9398 = add i64 %9397, 3
  store i64 %9398, i64* %PC.i22
  %9399 = trunc i64 %9396 to i32
  %9400 = add i32 1, %9399
  %9401 = zext i32 %9400 to i64
  store i64 %9401, i64* %RAX.i23, align 8
  %9402 = icmp ult i32 %9400, %9399
  %9403 = icmp ult i32 %9400, 1
  %9404 = or i1 %9402, %9403
  %9405 = zext i1 %9404 to i8
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9405, i8* %9406, align 1
  %9407 = and i32 %9400, 255
  %9408 = call i32 @llvm.ctpop.i32(i32 %9407)
  %9409 = trunc i32 %9408 to i8
  %9410 = and i8 %9409, 1
  %9411 = xor i8 %9410, 1
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9411, i8* %9412, align 1
  %9413 = xor i64 1, %9396
  %9414 = trunc i64 %9413 to i32
  %9415 = xor i32 %9414, %9400
  %9416 = lshr i32 %9415, 4
  %9417 = trunc i32 %9416 to i8
  %9418 = and i8 %9417, 1
  %9419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9418, i8* %9419, align 1
  %9420 = icmp eq i32 %9400, 0
  %9421 = zext i1 %9420 to i8
  %9422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9421, i8* %9422, align 1
  %9423 = lshr i32 %9400, 31
  %9424 = trunc i32 %9423 to i8
  %9425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9424, i8* %9425, align 1
  %9426 = lshr i32 %9399, 31
  %9427 = xor i32 %9423, %9426
  %9428 = add i32 %9427, %9423
  %9429 = icmp eq i32 %9428, 2
  %9430 = zext i1 %9429 to i8
  %9431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9430, i8* %9431, align 1
  store %struct.Memory* %loadMem_43e6ba, %struct.Memory** %MEMORY
  %loadMem_43e6bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 33
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %9434 to i64*
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9436 = getelementptr inbounds %struct.GPR, %struct.GPR* %9435, i32 0, i32 1
  %9437 = getelementptr inbounds %struct.Reg, %struct.Reg* %9436, i32 0, i32 0
  %EAX.i20 = bitcast %union.anon* %9437 to i32*
  %9438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9439 = getelementptr inbounds %struct.GPR, %struct.GPR* %9438, i32 0, i32 15
  %9440 = getelementptr inbounds %struct.Reg, %struct.Reg* %9439, i32 0, i32 0
  %RBP.i21 = bitcast %union.anon* %9440 to i64*
  %9441 = load i64, i64* %RBP.i21
  %9442 = sub i64 %9441, 44
  %9443 = load i32, i32* %EAX.i20
  %9444 = zext i32 %9443 to i64
  %9445 = load i64, i64* %PC.i19
  %9446 = add i64 %9445, 3
  store i64 %9446, i64* %PC.i19
  %9447 = inttoptr i64 %9442 to i32*
  store i32 %9443, i32* %9447
  store %struct.Memory* %loadMem_43e6bd, %struct.Memory** %MEMORY
  %loadMem_43e6c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9449 = getelementptr inbounds %struct.GPR, %struct.GPR* %9448, i32 0, i32 33
  %9450 = getelementptr inbounds %struct.Reg, %struct.Reg* %9449, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %9450 to i64*
  %9451 = load i64, i64* %PC.i18
  %9452 = add i64 %9451, -74
  %9453 = load i64, i64* %PC.i18
  %9454 = add i64 %9453, 5
  store i64 %9454, i64* %PC.i18
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9452, i64* %9455, align 8
  store %struct.Memory* %loadMem_43e6c0, %struct.Memory** %MEMORY
  br label %block_.L_43e676

block_.L_43e6c5:                                  ; preds = %block_.L_43e676
  %loadMem_43e6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9457 = getelementptr inbounds %struct.GPR, %struct.GPR* %9456, i32 0, i32 33
  %9458 = getelementptr inbounds %struct.Reg, %struct.Reg* %9457, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %9458 to i64*
  %9459 = load i64, i64* %PC.i17
  %9460 = add i64 %9459, 5
  %9461 = load i64, i64* %PC.i17
  %9462 = add i64 %9461, 5
  store i64 %9462, i64* %PC.i17
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9460, i64* %9463, align 8
  store %struct.Memory* %loadMem_43e6c5, %struct.Memory** %MEMORY
  br label %block_.L_43e6ca

block_.L_43e6ca:                                  ; preds = %block_.L_43e6c5
  %loadMem_43e6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9465 = getelementptr inbounds %struct.GPR, %struct.GPR* %9464, i32 0, i32 33
  %9466 = getelementptr inbounds %struct.Reg, %struct.Reg* %9465, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %9466 to i64*
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9468 = getelementptr inbounds %struct.GPR, %struct.GPR* %9467, i32 0, i32 1
  %9469 = getelementptr inbounds %struct.Reg, %struct.Reg* %9468, i32 0, i32 0
  %RAX.i15 = bitcast %union.anon* %9469 to i64*
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9471 = getelementptr inbounds %struct.GPR, %struct.GPR* %9470, i32 0, i32 15
  %9472 = getelementptr inbounds %struct.Reg, %struct.Reg* %9471, i32 0, i32 0
  %RBP.i16 = bitcast %union.anon* %9472 to i64*
  %9473 = load i64, i64* %RBP.i16
  %9474 = sub i64 %9473, 48
  %9475 = load i64, i64* %PC.i14
  %9476 = add i64 %9475, 3
  store i64 %9476, i64* %PC.i14
  %9477 = inttoptr i64 %9474 to i32*
  %9478 = load i32, i32* %9477
  %9479 = zext i32 %9478 to i64
  store i64 %9479, i64* %RAX.i15, align 8
  store %struct.Memory* %loadMem_43e6ca, %struct.Memory** %MEMORY
  %loadMem_43e6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9481 = getelementptr inbounds %struct.GPR, %struct.GPR* %9480, i32 0, i32 33
  %9482 = getelementptr inbounds %struct.Reg, %struct.Reg* %9481, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %9482 to i64*
  %9483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9484 = getelementptr inbounds %struct.GPR, %struct.GPR* %9483, i32 0, i32 1
  %9485 = getelementptr inbounds %struct.Reg, %struct.Reg* %9484, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %9485 to i64*
  %9486 = load i64, i64* %RAX.i
  %9487 = load i64, i64* %PC.i13
  %9488 = add i64 %9487, 3
  store i64 %9488, i64* %PC.i13
  %9489 = trunc i64 %9486 to i32
  %9490 = add i32 1, %9489
  %9491 = zext i32 %9490 to i64
  store i64 %9491, i64* %RAX.i, align 8
  %9492 = icmp ult i32 %9490, %9489
  %9493 = icmp ult i32 %9490, 1
  %9494 = or i1 %9492, %9493
  %9495 = zext i1 %9494 to i8
  %9496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9495, i8* %9496, align 1
  %9497 = and i32 %9490, 255
  %9498 = call i32 @llvm.ctpop.i32(i32 %9497)
  %9499 = trunc i32 %9498 to i8
  %9500 = and i8 %9499, 1
  %9501 = xor i8 %9500, 1
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9501, i8* %9502, align 1
  %9503 = xor i64 1, %9486
  %9504 = trunc i64 %9503 to i32
  %9505 = xor i32 %9504, %9490
  %9506 = lshr i32 %9505, 4
  %9507 = trunc i32 %9506 to i8
  %9508 = and i8 %9507, 1
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9508, i8* %9509, align 1
  %9510 = icmp eq i32 %9490, 0
  %9511 = zext i1 %9510 to i8
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9511, i8* %9512, align 1
  %9513 = lshr i32 %9490, 31
  %9514 = trunc i32 %9513 to i8
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9514, i8* %9515, align 1
  %9516 = lshr i32 %9489, 31
  %9517 = xor i32 %9513, %9516
  %9518 = add i32 %9517, %9513
  %9519 = icmp eq i32 %9518, 2
  %9520 = zext i1 %9519 to i8
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9520, i8* %9521, align 1
  store %struct.Memory* %loadMem_43e6cd, %struct.Memory** %MEMORY
  %loadMem_43e6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9523 = getelementptr inbounds %struct.GPR, %struct.GPR* %9522, i32 0, i32 33
  %9524 = getelementptr inbounds %struct.Reg, %struct.Reg* %9523, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %9524 to i64*
  %9525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9526 = getelementptr inbounds %struct.GPR, %struct.GPR* %9525, i32 0, i32 1
  %9527 = getelementptr inbounds %struct.Reg, %struct.Reg* %9526, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %9527 to i32*
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9529 = getelementptr inbounds %struct.GPR, %struct.GPR* %9528, i32 0, i32 15
  %9530 = getelementptr inbounds %struct.Reg, %struct.Reg* %9529, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %9530 to i64*
  %9531 = load i64, i64* %RBP.i12
  %9532 = sub i64 %9531, 48
  %9533 = load i32, i32* %EAX.i
  %9534 = zext i32 %9533 to i64
  %9535 = load i64, i64* %PC.i11
  %9536 = add i64 %9535, 3
  store i64 %9536, i64* %PC.i11
  %9537 = inttoptr i64 %9532 to i32*
  store i32 %9533, i32* %9537
  store %struct.Memory* %loadMem_43e6d0, %struct.Memory** %MEMORY
  %loadMem_43e6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9539 = getelementptr inbounds %struct.GPR, %struct.GPR* %9538, i32 0, i32 33
  %9540 = getelementptr inbounds %struct.Reg, %struct.Reg* %9539, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %9540 to i64*
  %9541 = load i64, i64* %PC.i10
  %9542 = add i64 %9541, -111
  %9543 = load i64, i64* %PC.i10
  %9544 = add i64 %9543, 5
  store i64 %9544, i64* %PC.i10
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9542, i64* %9545, align 8
  store %struct.Memory* %loadMem_43e6d3, %struct.Memory** %MEMORY
  br label %block_.L_43e664

block_.L_43e6d8:                                  ; preds = %block_.L_43e664
  %loadMem_43e6d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9547 = getelementptr inbounds %struct.GPR, %struct.GPR* %9546, i32 0, i32 33
  %9548 = getelementptr inbounds %struct.Reg, %struct.Reg* %9547, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %9548 to i64*
  %9549 = load i64, i64* %PC.i9
  %9550 = add i64 %9549, 5
  %9551 = load i64, i64* %PC.i9
  %9552 = add i64 %9551, 5
  store i64 %9552, i64* %PC.i9
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9550, i64* %9553, align 8
  store %struct.Memory* %loadMem_43e6d8, %struct.Memory** %MEMORY
  br label %block_.L_43e6dd

block_.L_43e6dd:                                  ; preds = %block_.L_43e6d8, %block_.L_43e659
  %loadMem_43e6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9555 = getelementptr inbounds %struct.GPR, %struct.GPR* %9554, i32 0, i32 33
  %9556 = getelementptr inbounds %struct.Reg, %struct.Reg* %9555, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %9556 to i64*
  %9557 = load i64, i64* %PC.i8
  %9558 = add i64 %9557, 5
  %9559 = load i64, i64* %PC.i8
  %9560 = add i64 %9559, 5
  store i64 %9560, i64* %PC.i8
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9558, i64* %9561, align 8
  store %struct.Memory* %loadMem_43e6dd, %struct.Memory** %MEMORY
  br label %block_.L_43e6e2

block_.L_43e6e2:                                  ; preds = %block_.L_43e6dd, %block_.L_43e5d0
  %loadMem_43e6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9563 = getelementptr inbounds %struct.GPR, %struct.GPR* %9562, i32 0, i32 33
  %9564 = getelementptr inbounds %struct.Reg, %struct.Reg* %9563, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %9564 to i64*
  %9565 = load i64, i64* %PC.i7
  %9566 = add i64 %9565, 5
  %9567 = load i64, i64* %PC.i7
  %9568 = add i64 %9567, 5
  store i64 %9568, i64* %PC.i7
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9566, i64* %9569, align 8
  store %struct.Memory* %loadMem_43e6e2, %struct.Memory** %MEMORY
  br label %block_.L_43e6e7

block_.L_43e6e7:                                  ; preds = %block_.L_43e6e2, %block_.L_43e51b
  %loadMem_43e6e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9571 = getelementptr inbounds %struct.GPR, %struct.GPR* %9570, i32 0, i32 33
  %9572 = getelementptr inbounds %struct.Reg, %struct.Reg* %9571, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %9572 to i64*
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9574 = getelementptr inbounds %struct.GPR, %struct.GPR* %9573, i32 0, i32 13
  %9575 = getelementptr inbounds %struct.Reg, %struct.Reg* %9574, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %9575 to i64*
  %9576 = load i64, i64* %RSP.i
  %9577 = load i64, i64* %PC.i6
  %9578 = add i64 %9577, 7
  store i64 %9578, i64* %PC.i6
  %9579 = add i64 128, %9576
  store i64 %9579, i64* %RSP.i, align 8
  %9580 = icmp ult i64 %9579, %9576
  %9581 = icmp ult i64 %9579, 128
  %9582 = or i1 %9580, %9581
  %9583 = zext i1 %9582 to i8
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9583, i8* %9584, align 1
  %9585 = trunc i64 %9579 to i32
  %9586 = and i32 %9585, 255
  %9587 = call i32 @llvm.ctpop.i32(i32 %9586)
  %9588 = trunc i32 %9587 to i8
  %9589 = and i8 %9588, 1
  %9590 = xor i8 %9589, 1
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9590, i8* %9591, align 1
  %9592 = xor i64 128, %9576
  %9593 = xor i64 %9592, %9579
  %9594 = lshr i64 %9593, 4
  %9595 = trunc i64 %9594 to i8
  %9596 = and i8 %9595, 1
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9596, i8* %9597, align 1
  %9598 = icmp eq i64 %9579, 0
  %9599 = zext i1 %9598 to i8
  %9600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9599, i8* %9600, align 1
  %9601 = lshr i64 %9579, 63
  %9602 = trunc i64 %9601 to i8
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9602, i8* %9603, align 1
  %9604 = lshr i64 %9576, 63
  %9605 = xor i64 %9601, %9604
  %9606 = add i64 %9605, %9601
  %9607 = icmp eq i64 %9606, 2
  %9608 = zext i1 %9607 to i8
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9608, i8* %9609, align 1
  store %struct.Memory* %loadMem_43e6e7, %struct.Memory** %MEMORY
  %loadMem_43e6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9611 = getelementptr inbounds %struct.GPR, %struct.GPR* %9610, i32 0, i32 33
  %9612 = getelementptr inbounds %struct.Reg, %struct.Reg* %9611, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %9612 to i64*
  %9613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9614 = getelementptr inbounds %struct.GPR, %struct.GPR* %9613, i32 0, i32 3
  %9615 = getelementptr inbounds %struct.Reg, %struct.Reg* %9614, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %9615 to i64*
  %9616 = load i64, i64* %PC.i5
  %9617 = add i64 %9616, 1
  store i64 %9617, i64* %PC.i5
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9619 = load i64, i64* %9618, align 8
  %9620 = add i64 %9619, 8
  %9621 = inttoptr i64 %9619 to i64*
  %9622 = load i64, i64* %9621
  store i64 %9622, i64* %RBX.i, align 8
  store i64 %9620, i64* %9618, align 8
  store %struct.Memory* %loadMem_43e6ee, %struct.Memory** %MEMORY
  %loadMem_43e6ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9624 = getelementptr inbounds %struct.GPR, %struct.GPR* %9623, i32 0, i32 33
  %9625 = getelementptr inbounds %struct.Reg, %struct.Reg* %9624, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %9625 to i64*
  %9626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9627 = getelementptr inbounds %struct.GPR, %struct.GPR* %9626, i32 0, i32 29
  %9628 = getelementptr inbounds %struct.Reg, %struct.Reg* %9627, i32 0, i32 0
  %R14.i = bitcast %union.anon* %9628 to i64*
  %9629 = load i64, i64* %PC.i4
  %9630 = add i64 %9629, 2
  store i64 %9630, i64* %PC.i4
  %9631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9632 = load i64, i64* %9631, align 8
  %9633 = add i64 %9632, 8
  %9634 = inttoptr i64 %9632 to i64*
  %9635 = load i64, i64* %9634
  store i64 %9635, i64* %R14.i, align 8
  store i64 %9633, i64* %9631, align 8
  store %struct.Memory* %loadMem_43e6ef, %struct.Memory** %MEMORY
  %loadMem_43e6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9637 = getelementptr inbounds %struct.GPR, %struct.GPR* %9636, i32 0, i32 33
  %9638 = getelementptr inbounds %struct.Reg, %struct.Reg* %9637, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %9638 to i64*
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9640 = getelementptr inbounds %struct.GPR, %struct.GPR* %9639, i32 0, i32 15
  %9641 = getelementptr inbounds %struct.Reg, %struct.Reg* %9640, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %9641 to i64*
  %9642 = load i64, i64* %PC.i2
  %9643 = add i64 %9642, 1
  store i64 %9643, i64* %PC.i2
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9645 = load i64, i64* %9644, align 8
  %9646 = add i64 %9645, 8
  %9647 = inttoptr i64 %9645 to i64*
  %9648 = load i64, i64* %9647
  store i64 %9648, i64* %RBP.i3, align 8
  store i64 %9646, i64* %9644, align 8
  store %struct.Memory* %loadMem_43e6f1, %struct.Memory** %MEMORY
  %loadMem_43e6f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9650 = getelementptr inbounds %struct.GPR, %struct.GPR* %9649, i32 0, i32 33
  %9651 = getelementptr inbounds %struct.Reg, %struct.Reg* %9650, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %9651 to i64*
  %9652 = load i64, i64* %PC.i1
  %9653 = add i64 %9652, 1
  store i64 %9653, i64* %PC.i1
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9656 = load i64, i64* %9655, align 8
  %9657 = inttoptr i64 %9656 to i64*
  %9658 = load i64, i64* %9657
  store i64 %9658, i64* %9654, align 8
  %9659 = add i64 %9656, 8
  store i64 %9659, i64* %9655, align 8
  store %struct.Memory* %loadMem_43e6f2, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_43e6f2
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x80___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 128
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 128
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 128, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r9w___ax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9W = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %R9W
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i16 %12, i16* %AX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_0x10__rbp____r10w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %R10W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cc1f0___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cc1f0_type* @G__0x6cc1f0 to i64), i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cc1b0___rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cc1b0_type* @G__0x6cc1b0 to i64), i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax__MINUS0x26__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 38
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i16*
  store i16 %14, i16* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r10w__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i16, i16* %R10W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i16*
  store i16 %14, i16* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xa8__r14____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R14
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x14__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xac__r14____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R14
  %13 = add i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x18__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rbx__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RBX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r11__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__r11____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rbx____rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rbx___rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RBX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rbx___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = load i64, i64* %RBX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R11, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r11__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xc0__r11_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = add i64 %9, 192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43e017(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x18__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x75__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 117
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43e04b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x18__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xc4__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x76__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 118
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43e045(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sete__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x76__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 118
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x75__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 117
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x118f8__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 71928
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43e0bd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RSI, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e0c7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x244__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 580
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43e163(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x26__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 38
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43e163(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x244__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 580
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43e142(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x11900__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71936
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e158(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x11908__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71944
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x88__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43e177(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43e1d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cc1b0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cc1b0_type* @G__0x6cc1b0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x70__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x44__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x48__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x26__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 38
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_MINUS0x26__rbp____r8w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 38
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %R8W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 116
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x0___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = zext i32 %10 to i64
  store i64 %14, i64* %9, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %10, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %10, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %10, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %10, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %26
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r9d___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rax_8____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 8
  %14 = add i64 %13, 7482144
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl__r8w___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i16, i16* %R8W
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = trunc i64 %14 to i32
  %18 = shl i32 %17, 16
  %19 = ashr exact i32 %18, 16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.OneComponentLumaPrediction4x4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43e1e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43e23e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cc1f0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cc1f0_type* @G__0x6cc1f0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_MINUS0x28__rbp____r8w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %R8W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 1, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 1
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 1, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 100
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43e520(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43e37e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 56
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e379(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 52
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e366(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 4, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = sext i32 %17 to i64
  %21 = mul i64 %20, %19
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RDX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = sext i32 %17 to i64
  %21 = mul i64 %20, %19
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RSI, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7107a0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x70f6d0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RDX, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9728___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x26__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 38
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rdi_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x28__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RSI, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.clip1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___r8w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8W = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i16 %12, i16* %R8W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %R9, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R10, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r10___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R10
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R9, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x30__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r8w____r9__r10_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R9
  %16 = load i64, i64* %R10
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %R8W
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 5
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e26a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e36b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e258(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e51b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43e44e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e449(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e436(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4740___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x7107a0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x70f6d0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x26__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 38
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rsi_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDX, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R9, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r9___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x30__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r8w____rsi__r9_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R9
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %R8W
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 5
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e3a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e43b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e38e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e516(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e511(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e4fe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x28__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e466(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e503(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e454(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e6e7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43e5d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e5d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e5bd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x4___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 4, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RSI, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___di(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %DI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__di____rcx__r8_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 5
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e542(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e5c2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e530(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e6e2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43e65e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e659(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e646(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx___si(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %SI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e5f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e64b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e5e5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e6dd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e6d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43e6c5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e676(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e6ca(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43e664(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x80___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 128, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 128
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 128, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBX, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R14, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
