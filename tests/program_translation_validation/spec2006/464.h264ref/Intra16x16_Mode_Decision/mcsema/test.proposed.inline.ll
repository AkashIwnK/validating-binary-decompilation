; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6f6f90_type = type <{ [8 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%G_0x726418_type = type <{ [8 x i8] }>
%G__0x6d2ec0_type = type <{ [8 x i8] }>
%G__0x6d40f0_type = type <{ [8 x i8] }>
%G__0x6f6fa0_type = type <{ [8 x i8] }>
%G__0x6f8f20_type = type <{ [8 x i8] }>
%G__0x722ff0_type = type <{ [8 x i8] }>
%G__0x723720_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6f6f90 = global %G_0x6f6f90_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G_0x726418 = global %G_0x726418_type zeroinitializer
@G__0x6d2ec0 = global %G__0x6d2ec0_type zeroinitializer
@G__0x6d40f0 = global %G__0x6d40f0_type zeroinitializer
@G__0x6f6fa0 = global %G__0x6f6fa0_type zeroinitializer
@G__0x6f8f20 = global %G__0x6f8f20_type zeroinitializer
@G__0x722ff0 = global %G__0x722ff0_type zeroinitializer
@G__0x723720 = global %G__0x723720_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_403980.intrapred_luma_16x16(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_448f10.find_sad_16x16(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4043e0.dct_luma_16x16(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4074c0.dct_chroma(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @Intra16x16_Mode_Decision(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_489010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_489010, %struct.Memory** %MEMORY
  %loadMem_489011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1628 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1629 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1630 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1629
  %27 = load i64, i64* %PC.i1628
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1628
  store i64 %26, i64* %RBP.i1630, align 8
  store %struct.Memory* %loadMem_489011, %struct.Memory** %MEMORY
  %loadMem_489014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1626 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1627 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1627
  %36 = load i64, i64* %PC.i1626
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1626
  %38 = sub i64 %35, 128
  store i64 %38, i64* %RSP.i1627, align 8
  %39 = icmp ult i64 %35, 128
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 128, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_489014, %struct.Memory** %MEMORY
  %loadMem_48901b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1623 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RDI.i1624 = bitcast %union.anon* %72 to i64*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i1625 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i1625
  %77 = sub i64 %76, 8
  %78 = load i64, i64* %RDI.i1624
  %79 = load i64, i64* %PC.i1623
  %80 = add i64 %79, 4
  store i64 %80, i64* %PC.i1623
  %81 = inttoptr i64 %77 to i64*
  store i64 %78, i64* %81
  store %struct.Memory* %loadMem_48901b, %struct.Memory** %MEMORY
  %loadMem_48901f = load %struct.Memory*, %struct.Memory** %MEMORY
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 33
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %PC.i1620 = bitcast %union.anon* %84 to i64*
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %86 = getelementptr inbounds %struct.GPR, %struct.GPR* %85, i32 0, i32 9
  %87 = getelementptr inbounds %struct.Reg, %struct.Reg* %86, i32 0, i32 0
  %RSI.i1621 = bitcast %union.anon* %87 to i64*
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %89 = getelementptr inbounds %struct.GPR, %struct.GPR* %88, i32 0, i32 15
  %90 = getelementptr inbounds %struct.Reg, %struct.Reg* %89, i32 0, i32 0
  %RBP.i1622 = bitcast %union.anon* %90 to i64*
  %91 = load i64, i64* %RBP.i1622
  %92 = sub i64 %91, 16
  %93 = load i64, i64* %RSI.i1621
  %94 = load i64, i64* %PC.i1620
  %95 = add i64 %94, 4
  store i64 %95, i64* %PC.i1620
  %96 = inttoptr i64 %92 to i64*
  store i64 %93, i64* %96
  store %struct.Memory* %loadMem_48901f, %struct.Memory** %MEMORY
  %loadMem_489023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 33
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %PC.i1618 = bitcast %union.anon* %99 to i64*
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %101 = getelementptr inbounds %struct.GPR, %struct.GPR* %100, i32 0, i32 9
  %102 = getelementptr inbounds %struct.Reg, %struct.Reg* %101, i32 0, i32 0
  %RSI.i1619 = bitcast %union.anon* %102 to i64*
  %103 = load i64, i64* %PC.i1618
  %104 = add i64 %103, 8
  store i64 %104, i64* %PC.i1618
  %105 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %105, i64* %RSI.i1619, align 8
  store %struct.Memory* %loadMem_489023, %struct.Memory** %MEMORY
  %loadMem_48902b = load %struct.Memory*, %struct.Memory** %MEMORY
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 33
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %PC.i1616 = bitcast %union.anon* %108 to i64*
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 9
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %RSI.i1617 = bitcast %union.anon* %111 to i64*
  %112 = load i64, i64* %RSI.i1617
  %113 = add i64 %112, 14168
  %114 = load i64, i64* %PC.i1616
  %115 = add i64 %114, 7
  store i64 %115, i64* %PC.i1616
  %116 = inttoptr i64 %113 to i64*
  %117 = load i64, i64* %116
  store i64 %117, i64* %RSI.i1617, align 8
  store %struct.Memory* %loadMem_48902b, %struct.Memory** %MEMORY
  %loadMem_489032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %119 = getelementptr inbounds %struct.GPR, %struct.GPR* %118, i32 0, i32 33
  %120 = getelementptr inbounds %struct.Reg, %struct.Reg* %119, i32 0, i32 0
  %PC.i1614 = bitcast %union.anon* %120 to i64*
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 11
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %RDI.i1615 = bitcast %union.anon* %123 to i64*
  %124 = load i64, i64* %PC.i1614
  %125 = add i64 %124, 8
  store i64 %125, i64* %PC.i1614
  %126 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %126, i64* %RDI.i1615, align 8
  store %struct.Memory* %loadMem_489032, %struct.Memory** %MEMORY
  %loadMem_48903a = load %struct.Memory*, %struct.Memory** %MEMORY
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %128 = getelementptr inbounds %struct.GPR, %struct.GPR* %127, i32 0, i32 33
  %129 = getelementptr inbounds %struct.Reg, %struct.Reg* %128, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %129 to i64*
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %131 = getelementptr inbounds %struct.GPR, %struct.GPR* %130, i32 0, i32 11
  %132 = getelementptr inbounds %struct.Reg, %struct.Reg* %131, i32 0, i32 0
  %RDI.i1613 = bitcast %union.anon* %132 to i64*
  %133 = load i64, i64* %RDI.i1613
  %134 = add i64 %133, 12
  %135 = load i64, i64* %PC.i1612
  %136 = add i64 %135, 4
  store i64 %136, i64* %PC.i1612
  %137 = inttoptr i64 %134 to i32*
  %138 = load i32, i32* %137
  %139 = sext i32 %138 to i64
  store i64 %139, i64* %RDI.i1613, align 8
  store %struct.Memory* %loadMem_48903a, %struct.Memory** %MEMORY
  %loadMem_48903e = load %struct.Memory*, %struct.Memory** %MEMORY
  %140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %141 = getelementptr inbounds %struct.GPR, %struct.GPR* %140, i32 0, i32 33
  %142 = getelementptr inbounds %struct.Reg, %struct.Reg* %141, i32 0, i32 0
  %PC.i1610 = bitcast %union.anon* %142 to i64*
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %144 = getelementptr inbounds %struct.GPR, %struct.GPR* %143, i32 0, i32 11
  %145 = getelementptr inbounds %struct.Reg, %struct.Reg* %144, i32 0, i32 0
  %RDI.i1611 = bitcast %union.anon* %145 to i64*
  %146 = load i64, i64* %RDI.i1611
  %147 = load i64, i64* %PC.i1610
  %148 = add i64 %147, 7
  store i64 %148, i64* %PC.i1610
  %149 = sext i64 %146 to i128
  %150 = and i128 %149, -18446744073709551616
  %151 = zext i64 %146 to i128
  %152 = or i128 %150, %151
  %153 = mul i128 632, %152
  %154 = trunc i128 %153 to i64
  store i64 %154, i64* %RDI.i1611, align 8
  %155 = sext i64 %154 to i128
  %156 = icmp ne i128 %155, %153
  %157 = zext i1 %156 to i8
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %157, i8* %158, align 1
  %159 = trunc i128 %153 to i32
  %160 = and i32 %159, 255
  %161 = call i32 @llvm.ctpop.i32(i32 %160)
  %162 = trunc i32 %161 to i8
  %163 = and i8 %162, 1
  %164 = xor i8 %163, 1
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %164, i8* %165, align 1
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %166, align 1
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %167, align 1
  %168 = lshr i64 %154, 63
  %169 = trunc i64 %168 to i8
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %169, i8* %170, align 1
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %157, i8* %171, align 1
  store %struct.Memory* %loadMem_48903e, %struct.Memory** %MEMORY
  %loadMem_489045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %173 = getelementptr inbounds %struct.GPR, %struct.GPR* %172, i32 0, i32 33
  %174 = getelementptr inbounds %struct.Reg, %struct.Reg* %173, i32 0, i32 0
  %PC.i1607 = bitcast %union.anon* %174 to i64*
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %176 = getelementptr inbounds %struct.GPR, %struct.GPR* %175, i32 0, i32 9
  %177 = getelementptr inbounds %struct.Reg, %struct.Reg* %176, i32 0, i32 0
  %RSI.i1608 = bitcast %union.anon* %177 to i64*
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %179 = getelementptr inbounds %struct.GPR, %struct.GPR* %178, i32 0, i32 11
  %180 = getelementptr inbounds %struct.Reg, %struct.Reg* %179, i32 0, i32 0
  %RDI.i1609 = bitcast %union.anon* %180 to i64*
  %181 = load i64, i64* %RSI.i1608
  %182 = load i64, i64* %RDI.i1609
  %183 = load i64, i64* %PC.i1607
  %184 = add i64 %183, 3
  store i64 %184, i64* %PC.i1607
  %185 = add i64 %182, %181
  store i64 %185, i64* %RSI.i1608, align 8
  %186 = icmp ult i64 %185, %181
  %187 = icmp ult i64 %185, %182
  %188 = or i1 %186, %187
  %189 = zext i1 %188 to i8
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %189, i8* %190, align 1
  %191 = trunc i64 %185 to i32
  %192 = and i32 %191, 255
  %193 = call i32 @llvm.ctpop.i32(i32 %192)
  %194 = trunc i32 %193 to i8
  %195 = and i8 %194, 1
  %196 = xor i8 %195, 1
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %196, i8* %197, align 1
  %198 = xor i64 %182, %181
  %199 = xor i64 %198, %185
  %200 = lshr i64 %199, 4
  %201 = trunc i64 %200 to i8
  %202 = and i8 %201, 1
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %202, i8* %203, align 1
  %204 = icmp eq i64 %185, 0
  %205 = zext i1 %204 to i8
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %205, i8* %206, align 1
  %207 = lshr i64 %185, 63
  %208 = trunc i64 %207 to i8
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %208, i8* %209, align 1
  %210 = lshr i64 %181, 63
  %211 = lshr i64 %182, 63
  %212 = xor i64 %207, %210
  %213 = xor i64 %207, %211
  %214 = add i64 %212, %213
  %215 = icmp eq i64 %214, 2
  %216 = zext i1 %215 to i8
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %216, i8* %217, align 1
  store %struct.Memory* %loadMem_489045, %struct.Memory** %MEMORY
  %loadMem_489048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %219 = getelementptr inbounds %struct.GPR, %struct.GPR* %218, i32 0, i32 33
  %220 = getelementptr inbounds %struct.Reg, %struct.Reg* %219, i32 0, i32 0
  %PC.i1604 = bitcast %union.anon* %220 to i64*
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 1
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %RAX.i1605 = bitcast %union.anon* %223 to i64*
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %225 = getelementptr inbounds %struct.GPR, %struct.GPR* %224, i32 0, i32 9
  %226 = getelementptr inbounds %struct.Reg, %struct.Reg* %225, i32 0, i32 0
  %RSI.i1606 = bitcast %union.anon* %226 to i64*
  %227 = load i64, i64* %RSI.i1606
  %228 = add i64 %227, 524
  %229 = load i64, i64* %PC.i1604
  %230 = add i64 %229, 6
  store i64 %230, i64* %PC.i1604
  %231 = inttoptr i64 %228 to i32*
  %232 = load i32, i32* %231
  %233 = zext i32 %232 to i64
  store i64 %233, i64* %RAX.i1605, align 8
  store %struct.Memory* %loadMem_489048, %struct.Memory** %MEMORY
  %loadMem_48904e = load %struct.Memory*, %struct.Memory** %MEMORY
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 33
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 1
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %EAX.i1602 = bitcast %union.anon* %239 to i32*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %241 = getelementptr inbounds %struct.GPR, %struct.GPR* %240, i32 0, i32 15
  %242 = getelementptr inbounds %struct.Reg, %struct.Reg* %241, i32 0, i32 0
  %RBP.i1603 = bitcast %union.anon* %242 to i64*
  %243 = load i64, i64* %RBP.i1603
  %244 = sub i64 %243, 32
  %245 = load i32, i32* %EAX.i1602
  %246 = zext i32 %245 to i64
  %247 = load i64, i64* %PC.i1601
  %248 = add i64 %247, 3
  store i64 %248, i64* %PC.i1601
  %249 = inttoptr i64 %244 to i32*
  store i32 %245, i32* %249
  store %struct.Memory* %loadMem_48904e, %struct.Memory** %MEMORY
  %loadMem_489051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %251 = getelementptr inbounds %struct.GPR, %struct.GPR* %250, i32 0, i32 33
  %252 = getelementptr inbounds %struct.Reg, %struct.Reg* %251, i32 0, i32 0
  %PC.i1599 = bitcast %union.anon* %252 to i64*
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %254 = getelementptr inbounds %struct.GPR, %struct.GPR* %253, i32 0, i32 9
  %255 = getelementptr inbounds %struct.Reg, %struct.Reg* %254, i32 0, i32 0
  %RSI.i1600 = bitcast %union.anon* %255 to i64*
  %256 = load i64, i64* %PC.i1599
  %257 = add i64 %256, 8
  store i64 %257, i64* %PC.i1599
  %258 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %258, i64* %RSI.i1600, align 8
  store %struct.Memory* %loadMem_489051, %struct.Memory** %MEMORY
  %loadMem_489059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %260 = getelementptr inbounds %struct.GPR, %struct.GPR* %259, i32 0, i32 33
  %261 = getelementptr inbounds %struct.Reg, %struct.Reg* %260, i32 0, i32 0
  %PC.i1596 = bitcast %union.anon* %261 to i64*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 1
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %RAX.i1597 = bitcast %union.anon* %264 to i64*
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 9
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %RSI.i1598 = bitcast %union.anon* %267 to i64*
  %268 = load i64, i64* %RSI.i1598
  %269 = add i64 %268, 152
  %270 = load i64, i64* %PC.i1596
  %271 = add i64 %270, 6
  store i64 %271, i64* %PC.i1596
  %272 = inttoptr i64 %269 to i32*
  %273 = load i32, i32* %272
  %274 = zext i32 %273 to i64
  store i64 %274, i64* %RAX.i1597, align 8
  store %struct.Memory* %loadMem_489059, %struct.Memory** %MEMORY
  %loadMem_48905f = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %277 to i64*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 1
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %EAX.i1594 = bitcast %union.anon* %280 to i32*
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %282 = getelementptr inbounds %struct.GPR, %struct.GPR* %281, i32 0, i32 15
  %283 = getelementptr inbounds %struct.Reg, %struct.Reg* %282, i32 0, i32 0
  %RBP.i1595 = bitcast %union.anon* %283 to i64*
  %284 = load i64, i64* %RBP.i1595
  %285 = sub i64 %284, 48
  %286 = load i32, i32* %EAX.i1594
  %287 = zext i32 %286 to i64
  %288 = load i64, i64* %PC.i1593
  %289 = add i64 %288, 3
  store i64 %289, i64* %PC.i1593
  %290 = inttoptr i64 %285 to i32*
  store i32 %286, i32* %290
  store %struct.Memory* %loadMem_48905f, %struct.Memory** %MEMORY
  %loadMem_489062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %292 = getelementptr inbounds %struct.GPR, %struct.GPR* %291, i32 0, i32 33
  %293 = getelementptr inbounds %struct.Reg, %struct.Reg* %292, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %293 to i64*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 9
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %RSI.i1592 = bitcast %union.anon* %296 to i64*
  %297 = load i64, i64* %PC.i1591
  %298 = add i64 %297, 8
  store i64 %298, i64* %PC.i1591
  %299 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %299, i64* %RSI.i1592, align 8
  store %struct.Memory* %loadMem_489062, %struct.Memory** %MEMORY
  %loadMem_48906a = load %struct.Memory*, %struct.Memory** %MEMORY
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %301 = getelementptr inbounds %struct.GPR, %struct.GPR* %300, i32 0, i32 33
  %302 = getelementptr inbounds %struct.Reg, %struct.Reg* %301, i32 0, i32 0
  %PC.i1588 = bitcast %union.anon* %302 to i64*
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %304 = getelementptr inbounds %struct.GPR, %struct.GPR* %303, i32 0, i32 1
  %305 = getelementptr inbounds %struct.Reg, %struct.Reg* %304, i32 0, i32 0
  %RAX.i1589 = bitcast %union.anon* %305 to i64*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %307 = getelementptr inbounds %struct.GPR, %struct.GPR* %306, i32 0, i32 9
  %308 = getelementptr inbounds %struct.Reg, %struct.Reg* %307, i32 0, i32 0
  %RSI.i1590 = bitcast %union.anon* %308 to i64*
  %309 = load i64, i64* %RSI.i1590
  %310 = add i64 %309, 156
  %311 = load i64, i64* %PC.i1588
  %312 = add i64 %311, 6
  store i64 %312, i64* %PC.i1588
  %313 = inttoptr i64 %310 to i32*
  %314 = load i32, i32* %313
  %315 = zext i32 %314 to i64
  store i64 %315, i64* %RAX.i1589, align 8
  store %struct.Memory* %loadMem_48906a, %struct.Memory** %MEMORY
  %loadMem_489070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %317 = getelementptr inbounds %struct.GPR, %struct.GPR* %316, i32 0, i32 33
  %318 = getelementptr inbounds %struct.Reg, %struct.Reg* %317, i32 0, i32 0
  %PC.i1585 = bitcast %union.anon* %318 to i64*
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %320 = getelementptr inbounds %struct.GPR, %struct.GPR* %319, i32 0, i32 1
  %321 = getelementptr inbounds %struct.Reg, %struct.Reg* %320, i32 0, i32 0
  %EAX.i1586 = bitcast %union.anon* %321 to i32*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %323 = getelementptr inbounds %struct.GPR, %struct.GPR* %322, i32 0, i32 15
  %324 = getelementptr inbounds %struct.Reg, %struct.Reg* %323, i32 0, i32 0
  %RBP.i1587 = bitcast %union.anon* %324 to i64*
  %325 = load i64, i64* %RBP.i1587
  %326 = sub i64 %325, 52
  %327 = load i32, i32* %EAX.i1586
  %328 = zext i32 %327 to i64
  %329 = load i64, i64* %PC.i1585
  %330 = add i64 %329, 3
  store i64 %330, i64* %PC.i1585
  %331 = inttoptr i64 %326 to i32*
  store i32 %327, i32* %331
  store %struct.Memory* %loadMem_489070, %struct.Memory** %MEMORY
  %loadMem_489073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %333 = getelementptr inbounds %struct.GPR, %struct.GPR* %332, i32 0, i32 33
  %334 = getelementptr inbounds %struct.Reg, %struct.Reg* %333, i32 0, i32 0
  %PC.i1583 = bitcast %union.anon* %334 to i64*
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %336 = getelementptr inbounds %struct.GPR, %struct.GPR* %335, i32 0, i32 9
  %337 = getelementptr inbounds %struct.Reg, %struct.Reg* %336, i32 0, i32 0
  %RSI.i1584 = bitcast %union.anon* %337 to i64*
  %338 = load i64, i64* %PC.i1583
  %339 = add i64 %338, 8
  store i64 %339, i64* %PC.i1583
  %340 = load i64, i64* bitcast (%G_0x726418_type* @G_0x726418 to i64*)
  store i64 %340, i64* %RSI.i1584, align 8
  store %struct.Memory* %loadMem_489073, %struct.Memory** %MEMORY
  %loadMem_48907b = load %struct.Memory*, %struct.Memory** %MEMORY
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %342 = getelementptr inbounds %struct.GPR, %struct.GPR* %341, i32 0, i32 33
  %343 = getelementptr inbounds %struct.Reg, %struct.Reg* %342, i32 0, i32 0
  %PC.i1580 = bitcast %union.anon* %343 to i64*
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %345 = getelementptr inbounds %struct.GPR, %struct.GPR* %344, i32 0, i32 9
  %346 = getelementptr inbounds %struct.Reg, %struct.Reg* %345, i32 0, i32 0
  %RSI.i1581 = bitcast %union.anon* %346 to i64*
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %348 = getelementptr inbounds %struct.GPR, %struct.GPR* %347, i32 0, i32 15
  %349 = getelementptr inbounds %struct.Reg, %struct.Reg* %348, i32 0, i32 0
  %RBP.i1582 = bitcast %union.anon* %349 to i64*
  %350 = load i64, i64* %RBP.i1582
  %351 = sub i64 %350, 64
  %352 = load i64, i64* %RSI.i1581
  %353 = load i64, i64* %PC.i1580
  %354 = add i64 %353, 4
  store i64 %354, i64* %PC.i1580
  %355 = inttoptr i64 %351 to i64*
  store i64 %352, i64* %355
  store %struct.Memory* %loadMem_48907b, %struct.Memory** %MEMORY
  %loadMem_48907f = load %struct.Memory*, %struct.Memory** %MEMORY
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %357 = getelementptr inbounds %struct.GPR, %struct.GPR* %356, i32 0, i32 33
  %358 = getelementptr inbounds %struct.Reg, %struct.Reg* %357, i32 0, i32 0
  %PC.i1578 = bitcast %union.anon* %358 to i64*
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %360 = getelementptr inbounds %struct.GPR, %struct.GPR* %359, i32 0, i32 9
  %361 = getelementptr inbounds %struct.Reg, %struct.Reg* %360, i32 0, i32 0
  %RSI.i1579 = bitcast %union.anon* %361 to i64*
  %362 = load i64, i64* %PC.i1578
  %363 = add i64 %362, 8
  store i64 %363, i64* %PC.i1578
  %364 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %364, i64* %RSI.i1579, align 8
  store %struct.Memory* %loadMem_48907f, %struct.Memory** %MEMORY
  %loadMem_489087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %366 = getelementptr inbounds %struct.GPR, %struct.GPR* %365, i32 0, i32 33
  %367 = getelementptr inbounds %struct.Reg, %struct.Reg* %366, i32 0, i32 0
  %PC.i1575 = bitcast %union.anon* %367 to i64*
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %369 = getelementptr inbounds %struct.GPR, %struct.GPR* %368, i32 0, i32 9
  %370 = getelementptr inbounds %struct.Reg, %struct.Reg* %369, i32 0, i32 0
  %RSI.i1576 = bitcast %union.anon* %370 to i64*
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %372 = getelementptr inbounds %struct.GPR, %struct.GPR* %371, i32 0, i32 15
  %373 = getelementptr inbounds %struct.Reg, %struct.Reg* %372, i32 0, i32 0
  %RBP.i1577 = bitcast %union.anon* %373 to i64*
  %374 = load i64, i64* %RBP.i1577
  %375 = sub i64 %374, 72
  %376 = load i64, i64* %RSI.i1576
  %377 = load i64, i64* %PC.i1575
  %378 = add i64 %377, 4
  store i64 %378, i64* %PC.i1575
  %379 = inttoptr i64 %375 to i64*
  store i64 %376, i64* %379
  store %struct.Memory* %loadMem_489087, %struct.Memory** %MEMORY
  %loadMem_48908b = load %struct.Memory*, %struct.Memory** %MEMORY
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %381 = getelementptr inbounds %struct.GPR, %struct.GPR* %380, i32 0, i32 33
  %382 = getelementptr inbounds %struct.Reg, %struct.Reg* %381, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %382 to i64*
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 1
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %386 = bitcast %union.anon* %385 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %386, i32 0, i32 0
  %387 = load i64, i64* %PC.i1574
  %388 = add i64 %387, 2
  store i64 %388, i64* %PC.i1574
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_48908b, %struct.Memory** %MEMORY
  %loadMem1_48908d = load %struct.Memory*, %struct.Memory** %MEMORY
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %390 = getelementptr inbounds %struct.GPR, %struct.GPR* %389, i32 0, i32 33
  %391 = getelementptr inbounds %struct.Reg, %struct.Reg* %390, i32 0, i32 0
  %PC.i1573 = bitcast %union.anon* %391 to i64*
  %392 = load i64, i64* %PC.i1573
  %393 = add i64 %392, -546573
  %394 = load i64, i64* %PC.i1573
  %395 = add i64 %394, 5
  %396 = load i64, i64* %PC.i1573
  %397 = add i64 %396, 5
  store i64 %397, i64* %PC.i1573
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %399 = load i64, i64* %398, align 8
  %400 = add i64 %399, -8
  %401 = inttoptr i64 %400 to i64*
  store i64 %395, i64* %401
  store i64 %400, i64* %398, align 8
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %393, i64* %402, align 8
  store %struct.Memory* %loadMem1_48908d, %struct.Memory** %MEMORY
  %loadMem2_48908d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48908d = load i64, i64* %3
  %call2_48908d = call %struct.Memory* @sub_403980.intrapred_luma_16x16(%struct.State* %0, i64 %loadPC_48908d, %struct.Memory* %loadMem2_48908d)
  store %struct.Memory* %call2_48908d, %struct.Memory** %MEMORY
  %loadMem_489092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %404 = getelementptr inbounds %struct.GPR, %struct.GPR* %403, i32 0, i32 33
  %405 = getelementptr inbounds %struct.Reg, %struct.Reg* %404, i32 0, i32 0
  %PC.i1571 = bitcast %union.anon* %405 to i64*
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %407 = getelementptr inbounds %struct.GPR, %struct.GPR* %406, i32 0, i32 9
  %408 = getelementptr inbounds %struct.Reg, %struct.Reg* %407, i32 0, i32 0
  %RSI.i1572 = bitcast %union.anon* %408 to i64*
  %409 = load i64, i64* %PC.i1571
  %410 = add i64 %409, 8
  store i64 %410, i64* %PC.i1571
  %411 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %411, i64* %RSI.i1572, align 8
  store %struct.Memory* %loadMem_489092, %struct.Memory** %MEMORY
  %loadMem_48909a = load %struct.Memory*, %struct.Memory** %MEMORY
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %413 = getelementptr inbounds %struct.GPR, %struct.GPR* %412, i32 0, i32 33
  %414 = getelementptr inbounds %struct.Reg, %struct.Reg* %413, i32 0, i32 0
  %PC.i1569 = bitcast %union.anon* %414 to i64*
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %416 = getelementptr inbounds %struct.GPR, %struct.GPR* %415, i32 0, i32 9
  %417 = getelementptr inbounds %struct.Reg, %struct.Reg* %416, i32 0, i32 0
  %RSI.i1570 = bitcast %union.anon* %417 to i64*
  %418 = load i64, i64* %RSI.i1570
  %419 = add i64 %418, 72724
  %420 = load i64, i64* %PC.i1569
  %421 = add i64 %420, 7
  store i64 %421, i64* %PC.i1569
  %422 = inttoptr i64 %419 to i32*
  %423 = load i32, i32* %422
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %424, align 1
  %425 = and i32 %423, 255
  %426 = call i32 @llvm.ctpop.i32(i32 %425)
  %427 = trunc i32 %426 to i8
  %428 = and i8 %427, 1
  %429 = xor i8 %428, 1
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %429, i8* %430, align 1
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %431, align 1
  %432 = icmp eq i32 %423, 0
  %433 = zext i1 %432 to i8
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %433, i8* %434, align 1
  %435 = lshr i32 %423, 31
  %436 = trunc i32 %435 to i8
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %436, i8* %437, align 1
  %438 = lshr i32 %423, 31
  %439 = xor i32 %435, %438
  %440 = add i32 %439, %438
  %441 = icmp eq i32 %440, 2
  %442 = zext i1 %441 to i8
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %442, i8* %443, align 1
  store %struct.Memory* %loadMem_48909a, %struct.Memory** %MEMORY
  %loadMem_4890a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 33
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %446 to i64*
  %447 = load i64, i64* %PC.i1568
  %448 = add i64 %447, 18
  %449 = load i64, i64* %PC.i1568
  %450 = add i64 %449, 6
  %451 = load i64, i64* %PC.i1568
  %452 = add i64 %451, 6
  store i64 %452, i64* %PC.i1568
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %454 = load i8, i8* %453, align 1
  %455 = icmp eq i8 %454, 0
  %456 = zext i1 %455 to i8
  store i8 %456, i8* %BRANCH_TAKEN, align 1
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %458 = select i1 %455, i64 %448, i64 %450
  store i64 %458, i64* %457, align 8
  store %struct.Memory* %loadMem_4890a1, %struct.Memory** %MEMORY
  %loadBr_4890a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4890a1 = icmp eq i8 %loadBr_4890a1, 1
  br i1 %cmpBr_4890a1, label %block_.L_4890b3, label %block_4890a7

block_4890a7:                                     ; preds = %entry
  %loadMem_4890a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 33
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %PC.i1565 = bitcast %union.anon* %461 to i64*
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %463 = getelementptr inbounds %struct.GPR, %struct.GPR* %462, i32 0, i32 11
  %464 = getelementptr inbounds %struct.Reg, %struct.Reg* %463, i32 0, i32 0
  %RDI.i1566 = bitcast %union.anon* %464 to i64*
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %466 = getelementptr inbounds %struct.GPR, %struct.GPR* %465, i32 0, i32 15
  %467 = getelementptr inbounds %struct.Reg, %struct.Reg* %466, i32 0, i32 0
  %RBP.i1567 = bitcast %union.anon* %467 to i64*
  %468 = load i64, i64* %RBP.i1567
  %469 = sub i64 %468, 16
  %470 = load i64, i64* %PC.i1565
  %471 = add i64 %470, 4
  store i64 %471, i64* %PC.i1565
  %472 = inttoptr i64 %469 to i64*
  %473 = load i64, i64* %472
  store i64 %473, i64* %RDI.i1566, align 8
  store %struct.Memory* %loadMem_4890a7, %struct.Memory** %MEMORY
  %loadMem1_4890ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %475 = getelementptr inbounds %struct.GPR, %struct.GPR* %474, i32 0, i32 33
  %476 = getelementptr inbounds %struct.Reg, %struct.Reg* %475, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %476 to i64*
  %477 = load i64, i64* %PC.i1564
  %478 = add i64 %477, -262555
  %479 = load i64, i64* %PC.i1564
  %480 = add i64 %479, 5
  %481 = load i64, i64* %PC.i1564
  %482 = add i64 %481, 5
  store i64 %482, i64* %PC.i1564
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %484 = load i64, i64* %483, align 8
  %485 = add i64 %484, -8
  %486 = inttoptr i64 %485 to i64*
  store i64 %480, i64* %486
  store i64 %485, i64* %483, align 8
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %478, i64* %487, align 8
  store %struct.Memory* %loadMem1_4890ab, %struct.Memory** %MEMORY
  %loadMem2_4890ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4890ab = load i64, i64* %3
  %call2_4890ab = call %struct.Memory* @sub_448f10.find_sad_16x16(%struct.State* %0, i64 %loadPC_4890ab, %struct.Memory* %loadMem2_4890ab)
  store %struct.Memory* %call2_4890ab, %struct.Memory** %MEMORY
  %loadMem_4890b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %489 = getelementptr inbounds %struct.GPR, %struct.GPR* %488, i32 0, i32 33
  %490 = getelementptr inbounds %struct.Reg, %struct.Reg* %489, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %490 to i64*
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 1
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %EAX.i1562 = bitcast %union.anon* %493 to i32*
  %494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %495 = getelementptr inbounds %struct.GPR, %struct.GPR* %494, i32 0, i32 15
  %496 = getelementptr inbounds %struct.Reg, %struct.Reg* %495, i32 0, i32 0
  %RBP.i1563 = bitcast %union.anon* %496 to i64*
  %497 = load i64, i64* %RBP.i1563
  %498 = sub i64 %497, 80
  %499 = load i32, i32* %EAX.i1562
  %500 = zext i32 %499 to i64
  %501 = load i64, i64* %PC.i1561
  %502 = add i64 %501, 3
  store i64 %502, i64* %PC.i1561
  %503 = inttoptr i64 %498 to i32*
  store i32 %499, i32* %503
  store %struct.Memory* %loadMem_4890b0, %struct.Memory** %MEMORY
  br label %block_.L_4890b3

block_.L_4890b3:                                  ; preds = %block_4890a7, %entry
  %loadMem_4890b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %505 = getelementptr inbounds %struct.GPR, %struct.GPR* %504, i32 0, i32 33
  %506 = getelementptr inbounds %struct.Reg, %struct.Reg* %505, i32 0, i32 0
  %PC.i1559 = bitcast %union.anon* %506 to i64*
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %508 = getelementptr inbounds %struct.GPR, %struct.GPR* %507, i32 0, i32 1
  %509 = getelementptr inbounds %struct.Reg, %struct.Reg* %508, i32 0, i32 0
  %RAX.i1560 = bitcast %union.anon* %509 to i64*
  %510 = load i64, i64* %PC.i1559
  %511 = add i64 %510, 8
  store i64 %511, i64* %PC.i1559
  %512 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %512, i64* %RAX.i1560, align 8
  store %struct.Memory* %loadMem_4890b3, %struct.Memory** %MEMORY
  %loadMem_4890bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %514 = getelementptr inbounds %struct.GPR, %struct.GPR* %513, i32 0, i32 33
  %515 = getelementptr inbounds %struct.Reg, %struct.Reg* %514, i32 0, i32 0
  %PC.i1557 = bitcast %union.anon* %515 to i64*
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %517 = getelementptr inbounds %struct.GPR, %struct.GPR* %516, i32 0, i32 1
  %518 = getelementptr inbounds %struct.Reg, %struct.Reg* %517, i32 0, i32 0
  %RAX.i1558 = bitcast %union.anon* %518 to i64*
  %519 = load i64, i64* %RAX.i1558
  %520 = add i64 %519, 72724
  %521 = load i64, i64* %PC.i1557
  %522 = add i64 %521, 7
  store i64 %522, i64* %PC.i1557
  %523 = inttoptr i64 %520 to i32*
  %524 = load i32, i32* %523
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %525, align 1
  %526 = and i32 %524, 255
  %527 = call i32 @llvm.ctpop.i32(i32 %526)
  %528 = trunc i32 %527 to i8
  %529 = and i8 %528, 1
  %530 = xor i8 %529, 1
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %530, i8* %531, align 1
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %532, align 1
  %533 = icmp eq i32 %524, 0
  %534 = zext i1 %533 to i8
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %534, i8* %535, align 1
  %536 = lshr i32 %524, 31
  %537 = trunc i32 %536 to i8
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %537, i8* %538, align 1
  %539 = lshr i32 %524, 31
  %540 = xor i32 %536, %539
  %541 = add i32 %540, %539
  %542 = icmp eq i32 %541, 2
  %543 = zext i1 %542 to i8
  %544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %543, i8* %544, align 1
  store %struct.Memory* %loadMem_4890bb, %struct.Memory** %MEMORY
  %loadMem_4890c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %546 = getelementptr inbounds %struct.GPR, %struct.GPR* %545, i32 0, i32 33
  %547 = getelementptr inbounds %struct.Reg, %struct.Reg* %546, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %547 to i64*
  %548 = load i64, i64* %PC.i1556
  %549 = add i64 %548, 561
  %550 = load i64, i64* %PC.i1556
  %551 = add i64 %550, 6
  %552 = load i64, i64* %PC.i1556
  %553 = add i64 %552, 6
  store i64 %553, i64* %PC.i1556
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %555 = load i8, i8* %554, align 1
  store i8 %555, i8* %BRANCH_TAKEN, align 1
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %557 = icmp ne i8 %555, 0
  %558 = select i1 %557, i64 %549, i64 %551
  store i64 %558, i64* %556, align 8
  store %struct.Memory* %loadMem_4890c2, %struct.Memory** %MEMORY
  %loadBr_4890c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4890c2 = icmp eq i8 %loadBr_4890c2, 1
  br i1 %cmpBr_4890c2, label %block_.L_4892f3, label %block_4890c8

block_4890c8:                                     ; preds = %block_.L_4890b3
  %loadMem_4890c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %560 = getelementptr inbounds %struct.GPR, %struct.GPR* %559, i32 0, i32 33
  %561 = getelementptr inbounds %struct.Reg, %struct.Reg* %560, i32 0, i32 0
  %PC.i1554 = bitcast %union.anon* %561 to i64*
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %563 = getelementptr inbounds %struct.GPR, %struct.GPR* %562, i32 0, i32 15
  %564 = getelementptr inbounds %struct.Reg, %struct.Reg* %563, i32 0, i32 0
  %RBP.i1555 = bitcast %union.anon* %564 to i64*
  %565 = load i64, i64* %RBP.i1555
  %566 = sub i64 %565, 40
  %567 = load i64, i64* %PC.i1554
  %568 = add i64 %567, 7
  store i64 %568, i64* %PC.i1554
  %569 = inttoptr i64 %566 to i32*
  store i32 0, i32* %569
  store %struct.Memory* %loadMem_4890c8, %struct.Memory** %MEMORY
  br label %block_.L_4890cf

block_.L_4890cf:                                  ; preds = %block_.L_4892e0, %block_4890c8
  %loadMem_4890cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %571 = getelementptr inbounds %struct.GPR, %struct.GPR* %570, i32 0, i32 33
  %572 = getelementptr inbounds %struct.Reg, %struct.Reg* %571, i32 0, i32 0
  %PC.i1552 = bitcast %union.anon* %572 to i64*
  %573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %574 = getelementptr inbounds %struct.GPR, %struct.GPR* %573, i32 0, i32 15
  %575 = getelementptr inbounds %struct.Reg, %struct.Reg* %574, i32 0, i32 0
  %RBP.i1553 = bitcast %union.anon* %575 to i64*
  %576 = load i64, i64* %RBP.i1553
  %577 = sub i64 %576, 40
  %578 = load i64, i64* %PC.i1552
  %579 = add i64 %578, 4
  store i64 %579, i64* %PC.i1552
  %580 = inttoptr i64 %577 to i32*
  %581 = load i32, i32* %580
  %582 = sub i32 %581, 16
  %583 = icmp ult i32 %581, 16
  %584 = zext i1 %583 to i8
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %584, i8* %585, align 1
  %586 = and i32 %582, 255
  %587 = call i32 @llvm.ctpop.i32(i32 %586)
  %588 = trunc i32 %587 to i8
  %589 = and i8 %588, 1
  %590 = xor i8 %589, 1
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %590, i8* %591, align 1
  %592 = xor i32 %581, 16
  %593 = xor i32 %592, %582
  %594 = lshr i32 %593, 4
  %595 = trunc i32 %594 to i8
  %596 = and i8 %595, 1
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %596, i8* %597, align 1
  %598 = icmp eq i32 %582, 0
  %599 = zext i1 %598 to i8
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %599, i8* %600, align 1
  %601 = lshr i32 %582, 31
  %602 = trunc i32 %601 to i8
  %603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %602, i8* %603, align 1
  %604 = lshr i32 %581, 31
  %605 = xor i32 %601, %604
  %606 = add i32 %605, %604
  %607 = icmp eq i32 %606, 2
  %608 = zext i1 %607 to i8
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %608, i8* %609, align 1
  store %struct.Memory* %loadMem_4890cf, %struct.Memory** %MEMORY
  %loadMem_4890d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %611 = getelementptr inbounds %struct.GPR, %struct.GPR* %610, i32 0, i32 33
  %612 = getelementptr inbounds %struct.Reg, %struct.Reg* %611, i32 0, i32 0
  %PC.i1551 = bitcast %union.anon* %612 to i64*
  %613 = load i64, i64* %PC.i1551
  %614 = add i64 %613, 539
  %615 = load i64, i64* %PC.i1551
  %616 = add i64 %615, 6
  %617 = load i64, i64* %PC.i1551
  %618 = add i64 %617, 6
  store i64 %618, i64* %PC.i1551
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %620 = load i8, i8* %619, align 1
  %621 = icmp ne i8 %620, 0
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %623 = load i8, i8* %622, align 1
  %624 = icmp ne i8 %623, 0
  %625 = xor i1 %621, %624
  %626 = xor i1 %625, true
  %627 = zext i1 %626 to i8
  store i8 %627, i8* %BRANCH_TAKEN, align 1
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %629 = select i1 %625, i64 %616, i64 %614
  store i64 %629, i64* %628, align 8
  store %struct.Memory* %loadMem_4890d3, %struct.Memory** %MEMORY
  %loadBr_4890d3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4890d3 = icmp eq i8 %loadBr_4890d3, 1
  br i1 %cmpBr_4890d3, label %block_.L_4892ee, label %block_4890d9

block_4890d9:                                     ; preds = %block_.L_4890cf
  %loadMem_4890d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %631 = getelementptr inbounds %struct.GPR, %struct.GPR* %630, i32 0, i32 33
  %632 = getelementptr inbounds %struct.Reg, %struct.Reg* %631, i32 0, i32 0
  %PC.i1549 = bitcast %union.anon* %632 to i64*
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %634 = getelementptr inbounds %struct.GPR, %struct.GPR* %633, i32 0, i32 15
  %635 = getelementptr inbounds %struct.Reg, %struct.Reg* %634, i32 0, i32 0
  %RBP.i1550 = bitcast %union.anon* %635 to i64*
  %636 = load i64, i64* %RBP.i1550
  %637 = sub i64 %636, 36
  %638 = load i64, i64* %PC.i1549
  %639 = add i64 %638, 7
  store i64 %639, i64* %PC.i1549
  %640 = inttoptr i64 %637 to i32*
  store i32 0, i32* %640
  store %struct.Memory* %loadMem_4890d9, %struct.Memory** %MEMORY
  br label %block_.L_4890e0

block_.L_4890e0:                                  ; preds = %block_4890ea, %block_4890d9
  %loadMem_4890e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %642 = getelementptr inbounds %struct.GPR, %struct.GPR* %641, i32 0, i32 33
  %643 = getelementptr inbounds %struct.Reg, %struct.Reg* %642, i32 0, i32 0
  %PC.i1547 = bitcast %union.anon* %643 to i64*
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %645 = getelementptr inbounds %struct.GPR, %struct.GPR* %644, i32 0, i32 15
  %646 = getelementptr inbounds %struct.Reg, %struct.Reg* %645, i32 0, i32 0
  %RBP.i1548 = bitcast %union.anon* %646 to i64*
  %647 = load i64, i64* %RBP.i1548
  %648 = sub i64 %647, 36
  %649 = load i64, i64* %PC.i1547
  %650 = add i64 %649, 4
  store i64 %650, i64* %PC.i1547
  %651 = inttoptr i64 %648 to i32*
  %652 = load i32, i32* %651
  %653 = sub i32 %652, 16
  %654 = icmp ult i32 %652, 16
  %655 = zext i1 %654 to i8
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %655, i8* %656, align 1
  %657 = and i32 %653, 255
  %658 = call i32 @llvm.ctpop.i32(i32 %657)
  %659 = trunc i32 %658 to i8
  %660 = and i8 %659, 1
  %661 = xor i8 %660, 1
  %662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %661, i8* %662, align 1
  %663 = xor i32 %652, 16
  %664 = xor i32 %663, %653
  %665 = lshr i32 %664, 4
  %666 = trunc i32 %665 to i8
  %667 = and i8 %666, 1
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %667, i8* %668, align 1
  %669 = icmp eq i32 %653, 0
  %670 = zext i1 %669 to i8
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %670, i8* %671, align 1
  %672 = lshr i32 %653, 31
  %673 = trunc i32 %672 to i8
  %674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %673, i8* %674, align 1
  %675 = lshr i32 %652, 31
  %676 = xor i32 %672, %675
  %677 = add i32 %676, %675
  %678 = icmp eq i32 %677, 2
  %679 = zext i1 %678 to i8
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %679, i8* %680, align 1
  store %struct.Memory* %loadMem_4890e0, %struct.Memory** %MEMORY
  %loadMem_4890e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %682 = getelementptr inbounds %struct.GPR, %struct.GPR* %681, i32 0, i32 33
  %683 = getelementptr inbounds %struct.Reg, %struct.Reg* %682, i32 0, i32 0
  %PC.i1546 = bitcast %union.anon* %683 to i64*
  %684 = load i64, i64* %PC.i1546
  %685 = add i64 %684, 503
  %686 = load i64, i64* %PC.i1546
  %687 = add i64 %686, 6
  %688 = load i64, i64* %PC.i1546
  %689 = add i64 %688, 6
  store i64 %689, i64* %PC.i1546
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %691 = load i8, i8* %690, align 1
  %692 = icmp ne i8 %691, 0
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %694 = load i8, i8* %693, align 1
  %695 = icmp ne i8 %694, 0
  %696 = xor i1 %692, %695
  %697 = xor i1 %696, true
  %698 = zext i1 %697 to i8
  store i8 %698, i8* %BRANCH_TAKEN, align 1
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %700 = select i1 %696, i64 %687, i64 %685
  store i64 %700, i64* %699, align 8
  store %struct.Memory* %loadMem_4890e4, %struct.Memory** %MEMORY
  %loadBr_4890e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4890e4 = icmp eq i8 %loadBr_4890e4, 1
  br i1 %cmpBr_4890e4, label %block_.L_4892db, label %block_4890ea

block_4890ea:                                     ; preds = %block_.L_4890e0
  %loadMem_4890ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %702 = getelementptr inbounds %struct.GPR, %struct.GPR* %701, i32 0, i32 33
  %703 = getelementptr inbounds %struct.Reg, %struct.Reg* %702, i32 0, i32 0
  %PC.i1544 = bitcast %union.anon* %703 to i64*
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %705 = getelementptr inbounds %struct.GPR, %struct.GPR* %704, i32 0, i32 1
  %706 = getelementptr inbounds %struct.Reg, %struct.Reg* %705, i32 0, i32 0
  %RAX.i1545 = bitcast %union.anon* %706 to i64*
  %707 = load i64, i64* %PC.i1544
  %708 = add i64 %707, 10
  store i64 %708, i64* %PC.i1544
  store i64 ptrtoint (%G__0x723720_type* @G__0x723720 to i64), i64* %RAX.i1545, align 8
  store %struct.Memory* %loadMem_4890ea, %struct.Memory** %MEMORY
  %loadMem_4890f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %710 = getelementptr inbounds %struct.GPR, %struct.GPR* %709, i32 0, i32 33
  %711 = getelementptr inbounds %struct.Reg, %struct.Reg* %710, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %711 to i64*
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %713 = getelementptr inbounds %struct.GPR, %struct.GPR* %712, i32 0, i32 5
  %714 = getelementptr inbounds %struct.Reg, %struct.Reg* %713, i32 0, i32 0
  %RCX.i1543 = bitcast %union.anon* %714 to i64*
  %715 = load i64, i64* %PC.i1542
  %716 = add i64 %715, 10
  store i64 %716, i64* %PC.i1542
  store i64 ptrtoint (%G__0x6d40f0_type* @G__0x6d40f0 to i64), i64* %RCX.i1543, align 8
  store %struct.Memory* %loadMem_4890f4, %struct.Memory** %MEMORY
  %loadMem_4890fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %718 = getelementptr inbounds %struct.GPR, %struct.GPR* %717, i32 0, i32 33
  %719 = getelementptr inbounds %struct.Reg, %struct.Reg* %718, i32 0, i32 0
  %PC.i1540 = bitcast %union.anon* %719 to i64*
  %720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %721 = getelementptr inbounds %struct.GPR, %struct.GPR* %720, i32 0, i32 7
  %722 = getelementptr inbounds %struct.Reg, %struct.Reg* %721, i32 0, i32 0
  %RDX.i1541 = bitcast %union.anon* %722 to i64*
  %723 = load i64, i64* %PC.i1540
  %724 = add i64 %723, 10
  store i64 %724, i64* %PC.i1540
  store i64 ptrtoint (%G__0x6f6fa0_type* @G__0x6f6fa0 to i64), i64* %RDX.i1541, align 8
  store %struct.Memory* %loadMem_4890fe, %struct.Memory** %MEMORY
  %loadMem_489108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 33
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %727 to i64*
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 9
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %RSI.i1538 = bitcast %union.anon* %730 to i64*
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 15
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %RBP.i1539 = bitcast %union.anon* %733 to i64*
  %734 = load i64, i64* %RBP.i1539
  %735 = sub i64 %734, 72
  %736 = load i64, i64* %PC.i1537
  %737 = add i64 %736, 4
  store i64 %737, i64* %PC.i1537
  %738 = inttoptr i64 %735 to i64*
  %739 = load i64, i64* %738
  store i64 %739, i64* %RSI.i1538, align 8
  store %struct.Memory* %loadMem_489108, %struct.Memory** %MEMORY
  %loadMem_48910c = load %struct.Memory*, %struct.Memory** %MEMORY
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %741 = getelementptr inbounds %struct.GPR, %struct.GPR* %740, i32 0, i32 33
  %742 = getelementptr inbounds %struct.Reg, %struct.Reg* %741, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %742 to i64*
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %744 = getelementptr inbounds %struct.GPR, %struct.GPR* %743, i32 0, i32 9
  %745 = getelementptr inbounds %struct.Reg, %struct.Reg* %744, i32 0, i32 0
  %RSI.i1536 = bitcast %union.anon* %745 to i64*
  %746 = load i64, i64* %RSI.i1536
  %747 = load i64, i64* %PC.i1535
  %748 = add i64 %747, 3
  store i64 %748, i64* %PC.i1535
  %749 = inttoptr i64 %746 to i64*
  %750 = load i64, i64* %749
  store i64 %750, i64* %RSI.i1536, align 8
  store %struct.Memory* %loadMem_48910c, %struct.Memory** %MEMORY
  %loadMem_48910f = load %struct.Memory*, %struct.Memory** %MEMORY
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %752 = getelementptr inbounds %struct.GPR, %struct.GPR* %751, i32 0, i32 33
  %753 = getelementptr inbounds %struct.Reg, %struct.Reg* %752, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %753 to i64*
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %755 = getelementptr inbounds %struct.GPR, %struct.GPR* %754, i32 0, i32 11
  %756 = getelementptr inbounds %struct.Reg, %struct.Reg* %755, i32 0, i32 0
  %RDI.i1533 = bitcast %union.anon* %756 to i64*
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %758 = getelementptr inbounds %struct.GPR, %struct.GPR* %757, i32 0, i32 15
  %759 = getelementptr inbounds %struct.Reg, %struct.Reg* %758, i32 0, i32 0
  %RBP.i1534 = bitcast %union.anon* %759 to i64*
  %760 = load i64, i64* %RBP.i1534
  %761 = sub i64 %760, 52
  %762 = load i64, i64* %PC.i1532
  %763 = add i64 %762, 3
  store i64 %763, i64* %PC.i1532
  %764 = inttoptr i64 %761 to i32*
  %765 = load i32, i32* %764
  %766 = zext i32 %765 to i64
  store i64 %766, i64* %RDI.i1533, align 8
  store %struct.Memory* %loadMem_48910f, %struct.Memory** %MEMORY
  %loadMem_489112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %768 = getelementptr inbounds %struct.GPR, %struct.GPR* %767, i32 0, i32 33
  %769 = getelementptr inbounds %struct.Reg, %struct.Reg* %768, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %769 to i64*
  %770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %771 = getelementptr inbounds %struct.GPR, %struct.GPR* %770, i32 0, i32 11
  %772 = getelementptr inbounds %struct.Reg, %struct.Reg* %771, i32 0, i32 0
  %RDI.i1530 = bitcast %union.anon* %772 to i64*
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 15
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %RBP.i1531 = bitcast %union.anon* %775 to i64*
  %776 = load i64, i64* %RDI.i1530
  %777 = load i64, i64* %RBP.i1531
  %778 = sub i64 %777, 40
  %779 = load i64, i64* %PC.i1529
  %780 = add i64 %779, 3
  store i64 %780, i64* %PC.i1529
  %781 = trunc i64 %776 to i32
  %782 = inttoptr i64 %778 to i32*
  %783 = load i32, i32* %782
  %784 = add i32 %783, %781
  %785 = zext i32 %784 to i64
  store i64 %785, i64* %RDI.i1530, align 8
  %786 = icmp ult i32 %784, %781
  %787 = icmp ult i32 %784, %783
  %788 = or i1 %786, %787
  %789 = zext i1 %788 to i8
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %789, i8* %790, align 1
  %791 = and i32 %784, 255
  %792 = call i32 @llvm.ctpop.i32(i32 %791)
  %793 = trunc i32 %792 to i8
  %794 = and i8 %793, 1
  %795 = xor i8 %794, 1
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %795, i8* %796, align 1
  %797 = xor i32 %783, %781
  %798 = xor i32 %797, %784
  %799 = lshr i32 %798, 4
  %800 = trunc i32 %799 to i8
  %801 = and i8 %800, 1
  %802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %801, i8* %802, align 1
  %803 = icmp eq i32 %784, 0
  %804 = zext i1 %803 to i8
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %804, i8* %805, align 1
  %806 = lshr i32 %784, 31
  %807 = trunc i32 %806 to i8
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %807, i8* %808, align 1
  %809 = lshr i32 %781, 31
  %810 = lshr i32 %783, 31
  %811 = xor i32 %806, %809
  %812 = xor i32 %806, %810
  %813 = add i32 %811, %812
  %814 = icmp eq i32 %813, 2
  %815 = zext i1 %814 to i8
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %815, i8* %816, align 1
  store %struct.Memory* %loadMem_489112, %struct.Memory** %MEMORY
  %loadMem_489115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %818 = getelementptr inbounds %struct.GPR, %struct.GPR* %817, i32 0, i32 33
  %819 = getelementptr inbounds %struct.Reg, %struct.Reg* %818, i32 0, i32 0
  %PC.i1526 = bitcast %union.anon* %819 to i64*
  %820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %821 = getelementptr inbounds %struct.GPR, %struct.GPR* %820, i32 0, i32 11
  %822 = getelementptr inbounds %struct.Reg, %struct.Reg* %821, i32 0, i32 0
  %EDI.i1527 = bitcast %union.anon* %822 to i32*
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %824 = getelementptr inbounds %struct.GPR, %struct.GPR* %823, i32 0, i32 17
  %825 = getelementptr inbounds %struct.Reg, %struct.Reg* %824, i32 0, i32 0
  %R8.i1528 = bitcast %union.anon* %825 to i64*
  %826 = load i32, i32* %EDI.i1527
  %827 = zext i32 %826 to i64
  %828 = load i64, i64* %PC.i1526
  %829 = add i64 %828, 3
  store i64 %829, i64* %PC.i1526
  %830 = shl i64 %827, 32
  %831 = ashr exact i64 %830, 32
  store i64 %831, i64* %R8.i1528, align 8
  store %struct.Memory* %loadMem_489115, %struct.Memory** %MEMORY
  %loadMem_489118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %833 = getelementptr inbounds %struct.GPR, %struct.GPR* %832, i32 0, i32 33
  %834 = getelementptr inbounds %struct.Reg, %struct.Reg* %833, i32 0, i32 0
  %PC.i1523 = bitcast %union.anon* %834 to i64*
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %836 = getelementptr inbounds %struct.GPR, %struct.GPR* %835, i32 0, i32 9
  %837 = getelementptr inbounds %struct.Reg, %struct.Reg* %836, i32 0, i32 0
  %RSI.i1524 = bitcast %union.anon* %837 to i64*
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %839 = getelementptr inbounds %struct.GPR, %struct.GPR* %838, i32 0, i32 17
  %840 = getelementptr inbounds %struct.Reg, %struct.Reg* %839, i32 0, i32 0
  %R8.i1525 = bitcast %union.anon* %840 to i64*
  %841 = load i64, i64* %RSI.i1524
  %842 = load i64, i64* %R8.i1525
  %843 = mul i64 %842, 8
  %844 = add i64 %843, %841
  %845 = load i64, i64* %PC.i1523
  %846 = add i64 %845, 4
  store i64 %846, i64* %PC.i1523
  %847 = inttoptr i64 %844 to i64*
  %848 = load i64, i64* %847
  store i64 %848, i64* %RSI.i1524, align 8
  store %struct.Memory* %loadMem_489118, %struct.Memory** %MEMORY
  %loadMem_48911c = load %struct.Memory*, %struct.Memory** %MEMORY
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 33
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %PC.i1520 = bitcast %union.anon* %851 to i64*
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 11
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %RDI.i1521 = bitcast %union.anon* %854 to i64*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 15
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %RBP.i1522 = bitcast %union.anon* %857 to i64*
  %858 = load i64, i64* %RBP.i1522
  %859 = sub i64 %858, 48
  %860 = load i64, i64* %PC.i1520
  %861 = add i64 %860, 3
  store i64 %861, i64* %PC.i1520
  %862 = inttoptr i64 %859 to i32*
  %863 = load i32, i32* %862
  %864 = zext i32 %863 to i64
  store i64 %864, i64* %RDI.i1521, align 8
  store %struct.Memory* %loadMem_48911c, %struct.Memory** %MEMORY
  %loadMem_48911f = load %struct.Memory*, %struct.Memory** %MEMORY
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 33
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %PC.i1517 = bitcast %union.anon* %867 to i64*
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %869 = getelementptr inbounds %struct.GPR, %struct.GPR* %868, i32 0, i32 11
  %870 = getelementptr inbounds %struct.Reg, %struct.Reg* %869, i32 0, i32 0
  %RDI.i1518 = bitcast %union.anon* %870 to i64*
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 15
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %RBP.i1519 = bitcast %union.anon* %873 to i64*
  %874 = load i64, i64* %RDI.i1518
  %875 = load i64, i64* %RBP.i1519
  %876 = sub i64 %875, 36
  %877 = load i64, i64* %PC.i1517
  %878 = add i64 %877, 3
  store i64 %878, i64* %PC.i1517
  %879 = trunc i64 %874 to i32
  %880 = inttoptr i64 %876 to i32*
  %881 = load i32, i32* %880
  %882 = add i32 %881, %879
  %883 = zext i32 %882 to i64
  store i64 %883, i64* %RDI.i1518, align 8
  %884 = icmp ult i32 %882, %879
  %885 = icmp ult i32 %882, %881
  %886 = or i1 %884, %885
  %887 = zext i1 %886 to i8
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %887, i8* %888, align 1
  %889 = and i32 %882, 255
  %890 = call i32 @llvm.ctpop.i32(i32 %889)
  %891 = trunc i32 %890 to i8
  %892 = and i8 %891, 1
  %893 = xor i8 %892, 1
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %893, i8* %894, align 1
  %895 = xor i32 %881, %879
  %896 = xor i32 %895, %882
  %897 = lshr i32 %896, 4
  %898 = trunc i32 %897 to i8
  %899 = and i8 %898, 1
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %899, i8* %900, align 1
  %901 = icmp eq i32 %882, 0
  %902 = zext i1 %901 to i8
  %903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %902, i8* %903, align 1
  %904 = lshr i32 %882, 31
  %905 = trunc i32 %904 to i8
  %906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %905, i8* %906, align 1
  %907 = lshr i32 %879, 31
  %908 = lshr i32 %881, 31
  %909 = xor i32 %904, %907
  %910 = xor i32 %904, %908
  %911 = add i32 %909, %910
  %912 = icmp eq i32 %911, 2
  %913 = zext i1 %912 to i8
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %913, i8* %914, align 1
  store %struct.Memory* %loadMem_48911f, %struct.Memory** %MEMORY
  %loadMem_489122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %916 = getelementptr inbounds %struct.GPR, %struct.GPR* %915, i32 0, i32 33
  %917 = getelementptr inbounds %struct.Reg, %struct.Reg* %916, i32 0, i32 0
  %PC.i1514 = bitcast %union.anon* %917 to i64*
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %919 = getelementptr inbounds %struct.GPR, %struct.GPR* %918, i32 0, i32 11
  %920 = getelementptr inbounds %struct.Reg, %struct.Reg* %919, i32 0, i32 0
  %EDI.i1515 = bitcast %union.anon* %920 to i32*
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %922 = getelementptr inbounds %struct.GPR, %struct.GPR* %921, i32 0, i32 17
  %923 = getelementptr inbounds %struct.Reg, %struct.Reg* %922, i32 0, i32 0
  %R8.i1516 = bitcast %union.anon* %923 to i64*
  %924 = load i32, i32* %EDI.i1515
  %925 = zext i32 %924 to i64
  %926 = load i64, i64* %PC.i1514
  %927 = add i64 %926, 3
  store i64 %927, i64* %PC.i1514
  %928 = shl i64 %925, 32
  %929 = ashr exact i64 %928, 32
  store i64 %929, i64* %R8.i1516, align 8
  store %struct.Memory* %loadMem_489122, %struct.Memory** %MEMORY
  %loadMem_489125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %931 = getelementptr inbounds %struct.GPR, %struct.GPR* %930, i32 0, i32 33
  %932 = getelementptr inbounds %struct.Reg, %struct.Reg* %931, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %932 to i64*
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %934 = getelementptr inbounds %struct.GPR, %struct.GPR* %933, i32 0, i32 9
  %935 = getelementptr inbounds %struct.Reg, %struct.Reg* %934, i32 0, i32 0
  %RSI.i1511 = bitcast %union.anon* %935 to i64*
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %937 = getelementptr inbounds %struct.GPR, %struct.GPR* %936, i32 0, i32 11
  %938 = getelementptr inbounds %struct.Reg, %struct.Reg* %937, i32 0, i32 0
  %RDI.i1512 = bitcast %union.anon* %938 to i64*
  %939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %940 = getelementptr inbounds %struct.GPR, %struct.GPR* %939, i32 0, i32 17
  %941 = getelementptr inbounds %struct.Reg, %struct.Reg* %940, i32 0, i32 0
  %R8.i1513 = bitcast %union.anon* %941 to i64*
  %942 = load i64, i64* %RSI.i1511
  %943 = load i64, i64* %R8.i1513
  %944 = mul i64 %943, 2
  %945 = add i64 %944, %942
  %946 = load i64, i64* %PC.i1510
  %947 = add i64 %946, 5
  store i64 %947, i64* %PC.i1510
  %948 = inttoptr i64 %945 to i16*
  %949 = load i16, i16* %948
  %950 = zext i16 %949 to i64
  store i64 %950, i64* %RDI.i1512, align 8
  store %struct.Memory* %loadMem_489125, %struct.Memory** %MEMORY
  %loadMem_48912a = load %struct.Memory*, %struct.Memory** %MEMORY
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 33
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %953 to i64*
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %955 = getelementptr inbounds %struct.GPR, %struct.GPR* %954, i32 0, i32 9
  %956 = getelementptr inbounds %struct.Reg, %struct.Reg* %955, i32 0, i32 0
  %RSI.i1509 = bitcast %union.anon* %956 to i64*
  %957 = load i64, i64* %PC.i1508
  %958 = add i64 %957, 8
  store i64 %958, i64* %PC.i1508
  %959 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %959, i64* %RSI.i1509, align 8
  store %struct.Memory* %loadMem_48912a, %struct.Memory** %MEMORY
  %loadMem_489132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %961 = getelementptr inbounds %struct.GPR, %struct.GPR* %960, i32 0, i32 33
  %962 = getelementptr inbounds %struct.Reg, %struct.Reg* %961, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %962 to i64*
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %964 = getelementptr inbounds %struct.GPR, %struct.GPR* %963, i32 0, i32 9
  %965 = getelementptr inbounds %struct.Reg, %struct.Reg* %964, i32 0, i32 0
  %RSI.i1507 = bitcast %union.anon* %965 to i64*
  %966 = load i64, i64* %RSI.i1507
  %967 = load i64, i64* %PC.i1506
  %968 = add i64 %967, 7
  store i64 %968, i64* %PC.i1506
  %969 = add i64 8504, %966
  store i64 %969, i64* %RSI.i1507, align 8
  %970 = icmp ult i64 %969, %966
  %971 = icmp ult i64 %969, 8504
  %972 = or i1 %970, %971
  %973 = zext i1 %972 to i8
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %973, i8* %974, align 1
  %975 = trunc i64 %969 to i32
  %976 = and i32 %975, 255
  %977 = call i32 @llvm.ctpop.i32(i32 %976)
  %978 = trunc i32 %977 to i8
  %979 = and i8 %978, 1
  %980 = xor i8 %979, 1
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %980, i8* %981, align 1
  %982 = xor i64 8504, %966
  %983 = xor i64 %982, %969
  %984 = lshr i64 %983, 4
  %985 = trunc i64 %984 to i8
  %986 = and i8 %985, 1
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %986, i8* %987, align 1
  %988 = icmp eq i64 %969, 0
  %989 = zext i1 %988 to i8
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %989, i8* %990, align 1
  %991 = lshr i64 %969, 63
  %992 = trunc i64 %991 to i8
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %992, i8* %993, align 1
  %994 = lshr i64 %966, 63
  %995 = xor i64 %991, %994
  %996 = add i64 %995, %991
  %997 = icmp eq i64 %996, 2
  %998 = zext i1 %997 to i8
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %998, i8* %999, align 1
  store %struct.Memory* %loadMem_489132, %struct.Memory** %MEMORY
  %loadMem_489139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1001 = getelementptr inbounds %struct.GPR, %struct.GPR* %1000, i32 0, i32 33
  %1002 = getelementptr inbounds %struct.Reg, %struct.Reg* %1001, i32 0, i32 0
  %PC.i1503 = bitcast %union.anon* %1002 to i64*
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1004 = getelementptr inbounds %struct.GPR, %struct.GPR* %1003, i32 0, i32 15
  %1005 = getelementptr inbounds %struct.Reg, %struct.Reg* %1004, i32 0, i32 0
  %RBP.i1504 = bitcast %union.anon* %1005 to i64*
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1007 = getelementptr inbounds %struct.GPR, %struct.GPR* %1006, i32 0, i32 17
  %1008 = getelementptr inbounds %struct.Reg, %struct.Reg* %1007, i32 0, i32 0
  %R8.i1505 = bitcast %union.anon* %1008 to i64*
  %1009 = load i64, i64* %RBP.i1504
  %1010 = sub i64 %1009, 32
  %1011 = load i64, i64* %PC.i1503
  %1012 = add i64 %1011, 4
  store i64 %1012, i64* %PC.i1503
  %1013 = inttoptr i64 %1010 to i32*
  %1014 = load i32, i32* %1013
  %1015 = sext i32 %1014 to i64
  store i64 %1015, i64* %R8.i1505, align 8
  store %struct.Memory* %loadMem_489139, %struct.Memory** %MEMORY
  %loadMem_48913d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1017 = getelementptr inbounds %struct.GPR, %struct.GPR* %1016, i32 0, i32 33
  %1018 = getelementptr inbounds %struct.Reg, %struct.Reg* %1017, i32 0, i32 0
  %PC.i1501 = bitcast %union.anon* %1018 to i64*
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1020 = getelementptr inbounds %struct.GPR, %struct.GPR* %1019, i32 0, i32 17
  %1021 = getelementptr inbounds %struct.Reg, %struct.Reg* %1020, i32 0, i32 0
  %R8.i1502 = bitcast %union.anon* %1021 to i64*
  %1022 = load i64, i64* %R8.i1502
  %1023 = load i64, i64* %PC.i1501
  %1024 = add i64 %1023, 4
  store i64 %1024, i64* %PC.i1501
  %1025 = shl i64 %1022, 8
  %1026 = icmp slt i64 %1025, 0
  %1027 = shl i64 %1025, 1
  store i64 %1027, i64* %R8.i1502, align 8
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1029 = zext i1 %1026 to i8
  store i8 %1029, i8* %1028, align 1
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1031 = trunc i64 %1027 to i32
  store i8 1, i8* %1030, align 1
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1032, align 1
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1034 = icmp eq i64 %1027, 0
  %1035 = zext i1 %1034 to i8
  store i8 %1035, i8* %1033, align 1
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1037 = lshr i64 %1027, 63
  %1038 = trunc i64 %1037 to i8
  store i8 %1038, i8* %1036, align 1
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1039, align 1
  store %struct.Memory* %loadMem_48913d, %struct.Memory** %MEMORY
  %loadMem_489141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1041 = getelementptr inbounds %struct.GPR, %struct.GPR* %1040, i32 0, i32 33
  %1042 = getelementptr inbounds %struct.Reg, %struct.Reg* %1041, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %1042 to i64*
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1044 = getelementptr inbounds %struct.GPR, %struct.GPR* %1043, i32 0, i32 9
  %1045 = getelementptr inbounds %struct.Reg, %struct.Reg* %1044, i32 0, i32 0
  %RSI.i1499 = bitcast %union.anon* %1045 to i64*
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 17
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %R8.i1500 = bitcast %union.anon* %1048 to i64*
  %1049 = load i64, i64* %RSI.i1499
  %1050 = load i64, i64* %R8.i1500
  %1051 = load i64, i64* %PC.i1498
  %1052 = add i64 %1051, 3
  store i64 %1052, i64* %PC.i1498
  %1053 = add i64 %1050, %1049
  store i64 %1053, i64* %RSI.i1499, align 8
  %1054 = icmp ult i64 %1053, %1049
  %1055 = icmp ult i64 %1053, %1050
  %1056 = or i1 %1054, %1055
  %1057 = zext i1 %1056 to i8
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1057, i8* %1058, align 1
  %1059 = trunc i64 %1053 to i32
  %1060 = and i32 %1059, 255
  %1061 = call i32 @llvm.ctpop.i32(i32 %1060)
  %1062 = trunc i32 %1061 to i8
  %1063 = and i8 %1062, 1
  %1064 = xor i8 %1063, 1
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1064, i8* %1065, align 1
  %1066 = xor i64 %1050, %1049
  %1067 = xor i64 %1066, %1053
  %1068 = lshr i64 %1067, 4
  %1069 = trunc i64 %1068 to i8
  %1070 = and i8 %1069, 1
  %1071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1070, i8* %1071, align 1
  %1072 = icmp eq i64 %1053, 0
  %1073 = zext i1 %1072 to i8
  %1074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1073, i8* %1074, align 1
  %1075 = lshr i64 %1053, 63
  %1076 = trunc i64 %1075 to i8
  %1077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1076, i8* %1077, align 1
  %1078 = lshr i64 %1049, 63
  %1079 = lshr i64 %1050, 63
  %1080 = xor i64 %1075, %1078
  %1081 = xor i64 %1075, %1079
  %1082 = add i64 %1080, %1081
  %1083 = icmp eq i64 %1082, 2
  %1084 = zext i1 %1083 to i8
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1084, i8* %1085, align 1
  store %struct.Memory* %loadMem_489141, %struct.Memory** %MEMORY
  %loadMem_489144 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 33
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %1088 to i64*
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 15
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %RBP.i1496 = bitcast %union.anon* %1091 to i64*
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 17
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %R8.i1497 = bitcast %union.anon* %1094 to i64*
  %1095 = load i64, i64* %RBP.i1496
  %1096 = sub i64 %1095, 36
  %1097 = load i64, i64* %PC.i1495
  %1098 = add i64 %1097, 4
  store i64 %1098, i64* %PC.i1495
  %1099 = inttoptr i64 %1096 to i32*
  %1100 = load i32, i32* %1099
  %1101 = sext i32 %1100 to i64
  store i64 %1101, i64* %R8.i1497, align 8
  store %struct.Memory* %loadMem_489144, %struct.Memory** %MEMORY
  %loadMem_489148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 33
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %1104 to i64*
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1106 = getelementptr inbounds %struct.GPR, %struct.GPR* %1105, i32 0, i32 17
  %1107 = getelementptr inbounds %struct.Reg, %struct.Reg* %1106, i32 0, i32 0
  %R8.i1494 = bitcast %union.anon* %1107 to i64*
  %1108 = load i64, i64* %R8.i1494
  %1109 = load i64, i64* %PC.i1493
  %1110 = add i64 %1109, 4
  store i64 %1110, i64* %PC.i1493
  %1111 = shl i64 %1108, 4
  %1112 = icmp slt i64 %1111, 0
  %1113 = shl i64 %1111, 1
  store i64 %1113, i64* %R8.i1494, align 8
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1115 = zext i1 %1112 to i8
  store i8 %1115, i8* %1114, align 1
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1117 = trunc i64 %1113 to i32
  %1118 = and i32 %1117, 254
  %1119 = call i32 @llvm.ctpop.i32(i32 %1118)
  %1120 = trunc i32 %1119 to i8
  %1121 = and i8 %1120, 1
  %1122 = xor i8 %1121, 1
  store i8 %1122, i8* %1116, align 1
  %1123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1123, align 1
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1125 = icmp eq i64 %1113, 0
  %1126 = zext i1 %1125 to i8
  store i8 %1126, i8* %1124, align 1
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1128 = lshr i64 %1113, 63
  %1129 = trunc i64 %1128 to i8
  store i8 %1129, i8* %1127, align 1
  %1130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1130, align 1
  store %struct.Memory* %loadMem_489148, %struct.Memory** %MEMORY
  %loadMem_48914c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1132 = getelementptr inbounds %struct.GPR, %struct.GPR* %1131, i32 0, i32 33
  %1133 = getelementptr inbounds %struct.Reg, %struct.Reg* %1132, i32 0, i32 0
  %PC.i1490 = bitcast %union.anon* %1133 to i64*
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1135 = getelementptr inbounds %struct.GPR, %struct.GPR* %1134, i32 0, i32 9
  %1136 = getelementptr inbounds %struct.Reg, %struct.Reg* %1135, i32 0, i32 0
  %RSI.i1491 = bitcast %union.anon* %1136 to i64*
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1138 = getelementptr inbounds %struct.GPR, %struct.GPR* %1137, i32 0, i32 17
  %1139 = getelementptr inbounds %struct.Reg, %struct.Reg* %1138, i32 0, i32 0
  %R8.i1492 = bitcast %union.anon* %1139 to i64*
  %1140 = load i64, i64* %RSI.i1491
  %1141 = load i64, i64* %R8.i1492
  %1142 = load i64, i64* %PC.i1490
  %1143 = add i64 %1142, 3
  store i64 %1143, i64* %PC.i1490
  %1144 = add i64 %1141, %1140
  store i64 %1144, i64* %RSI.i1491, align 8
  %1145 = icmp ult i64 %1144, %1140
  %1146 = icmp ult i64 %1144, %1141
  %1147 = or i1 %1145, %1146
  %1148 = zext i1 %1147 to i8
  %1149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1148, i8* %1149, align 1
  %1150 = trunc i64 %1144 to i32
  %1151 = and i32 %1150, 255
  %1152 = call i32 @llvm.ctpop.i32(i32 %1151)
  %1153 = trunc i32 %1152 to i8
  %1154 = and i8 %1153, 1
  %1155 = xor i8 %1154, 1
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1155, i8* %1156, align 1
  %1157 = xor i64 %1141, %1140
  %1158 = xor i64 %1157, %1144
  %1159 = lshr i64 %1158, 4
  %1160 = trunc i64 %1159 to i8
  %1161 = and i8 %1160, 1
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1161, i8* %1162, align 1
  %1163 = icmp eq i64 %1144, 0
  %1164 = zext i1 %1163 to i8
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1164, i8* %1165, align 1
  %1166 = lshr i64 %1144, 63
  %1167 = trunc i64 %1166 to i8
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1167, i8* %1168, align 1
  %1169 = lshr i64 %1140, 63
  %1170 = lshr i64 %1141, 63
  %1171 = xor i64 %1166, %1169
  %1172 = xor i64 %1166, %1170
  %1173 = add i64 %1171, %1172
  %1174 = icmp eq i64 %1173, 2
  %1175 = zext i1 %1174 to i8
  %1176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1175, i8* %1176, align 1
  store %struct.Memory* %loadMem_48914c, %struct.Memory** %MEMORY
  %loadMem_48914f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1178 = getelementptr inbounds %struct.GPR, %struct.GPR* %1177, i32 0, i32 33
  %1179 = getelementptr inbounds %struct.Reg, %struct.Reg* %1178, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %1179 to i64*
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1181 = getelementptr inbounds %struct.GPR, %struct.GPR* %1180, i32 0, i32 15
  %1182 = getelementptr inbounds %struct.Reg, %struct.Reg* %1181, i32 0, i32 0
  %RBP.i1488 = bitcast %union.anon* %1182 to i64*
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1184 = getelementptr inbounds %struct.GPR, %struct.GPR* %1183, i32 0, i32 17
  %1185 = getelementptr inbounds %struct.Reg, %struct.Reg* %1184, i32 0, i32 0
  %R8.i1489 = bitcast %union.anon* %1185 to i64*
  %1186 = load i64, i64* %RBP.i1488
  %1187 = sub i64 %1186, 40
  %1188 = load i64, i64* %PC.i1487
  %1189 = add i64 %1188, 4
  store i64 %1189, i64* %PC.i1487
  %1190 = inttoptr i64 %1187 to i32*
  %1191 = load i32, i32* %1190
  %1192 = sext i32 %1191 to i64
  store i64 %1192, i64* %R8.i1489, align 8
  store %struct.Memory* %loadMem_48914f, %struct.Memory** %MEMORY
  %loadMem_489153 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1194 = getelementptr inbounds %struct.GPR, %struct.GPR* %1193, i32 0, i32 33
  %1195 = getelementptr inbounds %struct.Reg, %struct.Reg* %1194, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %1195 to i64*
  %1196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1197 = getelementptr inbounds %struct.GPR, %struct.GPR* %1196, i32 0, i32 19
  %1198 = getelementptr inbounds %struct.Reg, %struct.Reg* %1197, i32 0, i32 0
  %R9D.i1484 = bitcast %union.anon* %1198 to i32*
  %1199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1200 = getelementptr inbounds %struct.GPR, %struct.GPR* %1199, i32 0, i32 9
  %1201 = getelementptr inbounds %struct.Reg, %struct.Reg* %1200, i32 0, i32 0
  %RSI.i1485 = bitcast %union.anon* %1201 to i64*
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1203 = getelementptr inbounds %struct.GPR, %struct.GPR* %1202, i32 0, i32 17
  %1204 = getelementptr inbounds %struct.Reg, %struct.Reg* %1203, i32 0, i32 0
  %R8.i1486 = bitcast %union.anon* %1204 to i64*
  %1205 = bitcast i32* %R9D.i1484 to i64*
  %1206 = load i64, i64* %RSI.i1485
  %1207 = load i64, i64* %R8.i1486
  %1208 = mul i64 %1207, 2
  %1209 = add i64 %1208, %1206
  %1210 = load i64, i64* %PC.i1483
  %1211 = add i64 %1210, 5
  store i64 %1211, i64* %PC.i1483
  %1212 = inttoptr i64 %1209 to i16*
  %1213 = load i16, i16* %1212
  %1214 = zext i16 %1213 to i64
  store i64 %1214, i64* %1205, align 8
  store %struct.Memory* %loadMem_489153, %struct.Memory** %MEMORY
  %loadMem_489158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1216 = getelementptr inbounds %struct.GPR, %struct.GPR* %1215, i32 0, i32 33
  %1217 = getelementptr inbounds %struct.Reg, %struct.Reg* %1216, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %1217 to i64*
  %1218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1219 = getelementptr inbounds %struct.GPR, %struct.GPR* %1218, i32 0, i32 19
  %1220 = getelementptr inbounds %struct.Reg, %struct.Reg* %1219, i32 0, i32 0
  %R9D.i1481 = bitcast %union.anon* %1220 to i32*
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1222 = getelementptr inbounds %struct.GPR, %struct.GPR* %1221, i32 0, i32 11
  %1223 = getelementptr inbounds %struct.Reg, %struct.Reg* %1222, i32 0, i32 0
  %RDI.i1482 = bitcast %union.anon* %1223 to i64*
  %1224 = load i64, i64* %RDI.i1482
  %1225 = load i32, i32* %R9D.i1481
  %1226 = zext i32 %1225 to i64
  %1227 = load i64, i64* %PC.i1480
  %1228 = add i64 %1227, 3
  store i64 %1228, i64* %PC.i1480
  %1229 = trunc i64 %1224 to i32
  %1230 = sub i32 %1229, %1225
  %1231 = zext i32 %1230 to i64
  store i64 %1231, i64* %RDI.i1482, align 8
  %1232 = icmp ult i32 %1229, %1225
  %1233 = zext i1 %1232 to i8
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1233, i8* %1234, align 1
  %1235 = and i32 %1230, 255
  %1236 = call i32 @llvm.ctpop.i32(i32 %1235)
  %1237 = trunc i32 %1236 to i8
  %1238 = and i8 %1237, 1
  %1239 = xor i8 %1238, 1
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1239, i8* %1240, align 1
  %1241 = xor i64 %1226, %1224
  %1242 = trunc i64 %1241 to i32
  %1243 = xor i32 %1242, %1230
  %1244 = lshr i32 %1243, 4
  %1245 = trunc i32 %1244 to i8
  %1246 = and i8 %1245, 1
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1246, i8* %1247, align 1
  %1248 = icmp eq i32 %1230, 0
  %1249 = zext i1 %1248 to i8
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1249, i8* %1250, align 1
  %1251 = lshr i32 %1230, 31
  %1252 = trunc i32 %1251 to i8
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1252, i8* %1253, align 1
  %1254 = lshr i32 %1229, 31
  %1255 = lshr i32 %1225, 31
  %1256 = xor i32 %1255, %1254
  %1257 = xor i32 %1251, %1254
  %1258 = add i32 %1257, %1256
  %1259 = icmp eq i32 %1258, 2
  %1260 = zext i1 %1259 to i8
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1260, i8* %1261, align 1
  store %struct.Memory* %loadMem_489158, %struct.Memory** %MEMORY
  %loadMem_48915b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1263 = getelementptr inbounds %struct.GPR, %struct.GPR* %1262, i32 0, i32 33
  %1264 = getelementptr inbounds %struct.Reg, %struct.Reg* %1263, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %1264 to i64*
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1266 = getelementptr inbounds %struct.GPR, %struct.GPR* %1265, i32 0, i32 11
  %1267 = getelementptr inbounds %struct.Reg, %struct.Reg* %1266, i32 0, i32 0
  %EDI.i1478 = bitcast %union.anon* %1267 to i32*
  %1268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1269 = getelementptr inbounds %struct.GPR, %struct.GPR* %1268, i32 0, i32 15
  %1270 = getelementptr inbounds %struct.Reg, %struct.Reg* %1269, i32 0, i32 0
  %RBP.i1479 = bitcast %union.anon* %1270 to i64*
  %1271 = load i64, i64* %RBP.i1479
  %1272 = sub i64 %1271, 28
  %1273 = load i32, i32* %EDI.i1478
  %1274 = zext i32 %1273 to i64
  %1275 = load i64, i64* %PC.i1477
  %1276 = add i64 %1275, 3
  store i64 %1276, i64* %PC.i1477
  %1277 = inttoptr i64 %1272 to i32*
  store i32 %1273, i32* %1277
  store %struct.Memory* %loadMem_48915b, %struct.Memory** %MEMORY
  %loadMem_48915e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1279 = getelementptr inbounds %struct.GPR, %struct.GPR* %1278, i32 0, i32 33
  %1280 = getelementptr inbounds %struct.Reg, %struct.Reg* %1279, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %1280 to i64*
  %1281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1282 = getelementptr inbounds %struct.GPR, %struct.GPR* %1281, i32 0, i32 9
  %1283 = getelementptr inbounds %struct.Reg, %struct.Reg* %1282, i32 0, i32 0
  %RSI.i1475 = bitcast %union.anon* %1283 to i64*
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1285 = getelementptr inbounds %struct.GPR, %struct.GPR* %1284, i32 0, i32 15
  %1286 = getelementptr inbounds %struct.Reg, %struct.Reg* %1285, i32 0, i32 0
  %RBP.i1476 = bitcast %union.anon* %1286 to i64*
  %1287 = load i64, i64* %RBP.i1476
  %1288 = sub i64 %1287, 64
  %1289 = load i64, i64* %PC.i1474
  %1290 = add i64 %1289, 4
  store i64 %1290, i64* %PC.i1474
  %1291 = inttoptr i64 %1288 to i64*
  %1292 = load i64, i64* %1291
  store i64 %1292, i64* %RSI.i1475, align 8
  store %struct.Memory* %loadMem_48915e, %struct.Memory** %MEMORY
  %loadMem_489162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1294 = getelementptr inbounds %struct.GPR, %struct.GPR* %1293, i32 0, i32 33
  %1295 = getelementptr inbounds %struct.Reg, %struct.Reg* %1294, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %1295 to i64*
  %1296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1297 = getelementptr inbounds %struct.GPR, %struct.GPR* %1296, i32 0, i32 11
  %1298 = getelementptr inbounds %struct.Reg, %struct.Reg* %1297, i32 0, i32 0
  %RDI.i1472 = bitcast %union.anon* %1298 to i64*
  %1299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1300 = getelementptr inbounds %struct.GPR, %struct.GPR* %1299, i32 0, i32 15
  %1301 = getelementptr inbounds %struct.Reg, %struct.Reg* %1300, i32 0, i32 0
  %RBP.i1473 = bitcast %union.anon* %1301 to i64*
  %1302 = load i64, i64* %RBP.i1473
  %1303 = sub i64 %1302, 52
  %1304 = load i64, i64* %PC.i1471
  %1305 = add i64 %1304, 3
  store i64 %1305, i64* %PC.i1471
  %1306 = inttoptr i64 %1303 to i32*
  %1307 = load i32, i32* %1306
  %1308 = zext i32 %1307 to i64
  store i64 %1308, i64* %RDI.i1472, align 8
  store %struct.Memory* %loadMem_489162, %struct.Memory** %MEMORY
  %loadMem_489165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1310 = getelementptr inbounds %struct.GPR, %struct.GPR* %1309, i32 0, i32 33
  %1311 = getelementptr inbounds %struct.Reg, %struct.Reg* %1310, i32 0, i32 0
  %PC.i1468 = bitcast %union.anon* %1311 to i64*
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1313 = getelementptr inbounds %struct.GPR, %struct.GPR* %1312, i32 0, i32 11
  %1314 = getelementptr inbounds %struct.Reg, %struct.Reg* %1313, i32 0, i32 0
  %RDI.i1469 = bitcast %union.anon* %1314 to i64*
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1316 = getelementptr inbounds %struct.GPR, %struct.GPR* %1315, i32 0, i32 15
  %1317 = getelementptr inbounds %struct.Reg, %struct.Reg* %1316, i32 0, i32 0
  %RBP.i1470 = bitcast %union.anon* %1317 to i64*
  %1318 = load i64, i64* %RDI.i1469
  %1319 = load i64, i64* %RBP.i1470
  %1320 = sub i64 %1319, 40
  %1321 = load i64, i64* %PC.i1468
  %1322 = add i64 %1321, 3
  store i64 %1322, i64* %PC.i1468
  %1323 = trunc i64 %1318 to i32
  %1324 = inttoptr i64 %1320 to i32*
  %1325 = load i32, i32* %1324
  %1326 = add i32 %1325, %1323
  %1327 = zext i32 %1326 to i64
  store i64 %1327, i64* %RDI.i1469, align 8
  %1328 = icmp ult i32 %1326, %1323
  %1329 = icmp ult i32 %1326, %1325
  %1330 = or i1 %1328, %1329
  %1331 = zext i1 %1330 to i8
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1331, i8* %1332, align 1
  %1333 = and i32 %1326, 255
  %1334 = call i32 @llvm.ctpop.i32(i32 %1333)
  %1335 = trunc i32 %1334 to i8
  %1336 = and i8 %1335, 1
  %1337 = xor i8 %1336, 1
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1337, i8* %1338, align 1
  %1339 = xor i32 %1325, %1323
  %1340 = xor i32 %1339, %1326
  %1341 = lshr i32 %1340, 4
  %1342 = trunc i32 %1341 to i8
  %1343 = and i8 %1342, 1
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1343, i8* %1344, align 1
  %1345 = icmp eq i32 %1326, 0
  %1346 = zext i1 %1345 to i8
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1346, i8* %1347, align 1
  %1348 = lshr i32 %1326, 31
  %1349 = trunc i32 %1348 to i8
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1349, i8* %1350, align 1
  %1351 = lshr i32 %1323, 31
  %1352 = lshr i32 %1325, 31
  %1353 = xor i32 %1348, %1351
  %1354 = xor i32 %1348, %1352
  %1355 = add i32 %1353, %1354
  %1356 = icmp eq i32 %1355, 2
  %1357 = zext i1 %1356 to i8
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1357, i8* %1358, align 1
  store %struct.Memory* %loadMem_489165, %struct.Memory** %MEMORY
  %loadMem_489168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 33
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %PC.i1465 = bitcast %union.anon* %1361 to i64*
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 11
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %EDI.i1466 = bitcast %union.anon* %1364 to i32*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 17
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %R8.i1467 = bitcast %union.anon* %1367 to i64*
  %1368 = load i32, i32* %EDI.i1466
  %1369 = zext i32 %1368 to i64
  %1370 = load i64, i64* %PC.i1465
  %1371 = add i64 %1370, 3
  store i64 %1371, i64* %PC.i1465
  %1372 = shl i64 %1369, 32
  %1373 = ashr exact i64 %1372, 32
  store i64 %1373, i64* %R8.i1467, align 8
  store %struct.Memory* %loadMem_489168, %struct.Memory** %MEMORY
  %loadMem_48916b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1375 = getelementptr inbounds %struct.GPR, %struct.GPR* %1374, i32 0, i32 33
  %1376 = getelementptr inbounds %struct.Reg, %struct.Reg* %1375, i32 0, i32 0
  %PC.i1462 = bitcast %union.anon* %1376 to i64*
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1378 = getelementptr inbounds %struct.GPR, %struct.GPR* %1377, i32 0, i32 9
  %1379 = getelementptr inbounds %struct.Reg, %struct.Reg* %1378, i32 0, i32 0
  %RSI.i1463 = bitcast %union.anon* %1379 to i64*
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1381 = getelementptr inbounds %struct.GPR, %struct.GPR* %1380, i32 0, i32 17
  %1382 = getelementptr inbounds %struct.Reg, %struct.Reg* %1381, i32 0, i32 0
  %R8.i1464 = bitcast %union.anon* %1382 to i64*
  %1383 = load i64, i64* %RSI.i1463
  %1384 = load i64, i64* %R8.i1464
  %1385 = mul i64 %1384, 8
  %1386 = add i64 %1385, %1383
  %1387 = load i64, i64* %PC.i1462
  %1388 = add i64 %1387, 4
  store i64 %1388, i64* %PC.i1462
  %1389 = inttoptr i64 %1386 to i64*
  %1390 = load i64, i64* %1389
  store i64 %1390, i64* %RSI.i1463, align 8
  store %struct.Memory* %loadMem_48916b, %struct.Memory** %MEMORY
  %loadMem_48916f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1392 = getelementptr inbounds %struct.GPR, %struct.GPR* %1391, i32 0, i32 33
  %1393 = getelementptr inbounds %struct.Reg, %struct.Reg* %1392, i32 0, i32 0
  %PC.i1459 = bitcast %union.anon* %1393 to i64*
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1395 = getelementptr inbounds %struct.GPR, %struct.GPR* %1394, i32 0, i32 11
  %1396 = getelementptr inbounds %struct.Reg, %struct.Reg* %1395, i32 0, i32 0
  %RDI.i1460 = bitcast %union.anon* %1396 to i64*
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1398 = getelementptr inbounds %struct.GPR, %struct.GPR* %1397, i32 0, i32 15
  %1399 = getelementptr inbounds %struct.Reg, %struct.Reg* %1398, i32 0, i32 0
  %RBP.i1461 = bitcast %union.anon* %1399 to i64*
  %1400 = load i64, i64* %RBP.i1461
  %1401 = sub i64 %1400, 48
  %1402 = load i64, i64* %PC.i1459
  %1403 = add i64 %1402, 3
  store i64 %1403, i64* %PC.i1459
  %1404 = inttoptr i64 %1401 to i32*
  %1405 = load i32, i32* %1404
  %1406 = zext i32 %1405 to i64
  store i64 %1406, i64* %RDI.i1460, align 8
  store %struct.Memory* %loadMem_48916f, %struct.Memory** %MEMORY
  %loadMem_489172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1408 = getelementptr inbounds %struct.GPR, %struct.GPR* %1407, i32 0, i32 33
  %1409 = getelementptr inbounds %struct.Reg, %struct.Reg* %1408, i32 0, i32 0
  %PC.i1456 = bitcast %union.anon* %1409 to i64*
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1411 = getelementptr inbounds %struct.GPR, %struct.GPR* %1410, i32 0, i32 11
  %1412 = getelementptr inbounds %struct.Reg, %struct.Reg* %1411, i32 0, i32 0
  %RDI.i1457 = bitcast %union.anon* %1412 to i64*
  %1413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1414 = getelementptr inbounds %struct.GPR, %struct.GPR* %1413, i32 0, i32 15
  %1415 = getelementptr inbounds %struct.Reg, %struct.Reg* %1414, i32 0, i32 0
  %RBP.i1458 = bitcast %union.anon* %1415 to i64*
  %1416 = load i64, i64* %RDI.i1457
  %1417 = load i64, i64* %RBP.i1458
  %1418 = sub i64 %1417, 36
  %1419 = load i64, i64* %PC.i1456
  %1420 = add i64 %1419, 3
  store i64 %1420, i64* %PC.i1456
  %1421 = trunc i64 %1416 to i32
  %1422 = inttoptr i64 %1418 to i32*
  %1423 = load i32, i32* %1422
  %1424 = add i32 %1423, %1421
  %1425 = zext i32 %1424 to i64
  store i64 %1425, i64* %RDI.i1457, align 8
  %1426 = icmp ult i32 %1424, %1421
  %1427 = icmp ult i32 %1424, %1423
  %1428 = or i1 %1426, %1427
  %1429 = zext i1 %1428 to i8
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1429, i8* %1430, align 1
  %1431 = and i32 %1424, 255
  %1432 = call i32 @llvm.ctpop.i32(i32 %1431)
  %1433 = trunc i32 %1432 to i8
  %1434 = and i8 %1433, 1
  %1435 = xor i8 %1434, 1
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1435, i8* %1436, align 1
  %1437 = xor i32 %1423, %1421
  %1438 = xor i32 %1437, %1424
  %1439 = lshr i32 %1438, 4
  %1440 = trunc i32 %1439 to i8
  %1441 = and i8 %1440, 1
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1441, i8* %1442, align 1
  %1443 = icmp eq i32 %1424, 0
  %1444 = zext i1 %1443 to i8
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1444, i8* %1445, align 1
  %1446 = lshr i32 %1424, 31
  %1447 = trunc i32 %1446 to i8
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1447, i8* %1448, align 1
  %1449 = lshr i32 %1421, 31
  %1450 = lshr i32 %1423, 31
  %1451 = xor i32 %1446, %1449
  %1452 = xor i32 %1446, %1450
  %1453 = add i32 %1451, %1452
  %1454 = icmp eq i32 %1453, 2
  %1455 = zext i1 %1454 to i8
  %1456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1455, i8* %1456, align 1
  store %struct.Memory* %loadMem_489172, %struct.Memory** %MEMORY
  %loadMem_489175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1458 = getelementptr inbounds %struct.GPR, %struct.GPR* %1457, i32 0, i32 33
  %1459 = getelementptr inbounds %struct.Reg, %struct.Reg* %1458, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %1459 to i64*
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1461 = getelementptr inbounds %struct.GPR, %struct.GPR* %1460, i32 0, i32 11
  %1462 = getelementptr inbounds %struct.Reg, %struct.Reg* %1461, i32 0, i32 0
  %EDI.i1454 = bitcast %union.anon* %1462 to i32*
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1464 = getelementptr inbounds %struct.GPR, %struct.GPR* %1463, i32 0, i32 17
  %1465 = getelementptr inbounds %struct.Reg, %struct.Reg* %1464, i32 0, i32 0
  %R8.i1455 = bitcast %union.anon* %1465 to i64*
  %1466 = load i32, i32* %EDI.i1454
  %1467 = zext i32 %1466 to i64
  %1468 = load i64, i64* %PC.i1453
  %1469 = add i64 %1468, 3
  store i64 %1469, i64* %PC.i1453
  %1470 = shl i64 %1467, 32
  %1471 = ashr exact i64 %1470, 32
  store i64 %1471, i64* %R8.i1455, align 8
  store %struct.Memory* %loadMem_489175, %struct.Memory** %MEMORY
  %loadMem_489178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1473 = getelementptr inbounds %struct.GPR, %struct.GPR* %1472, i32 0, i32 33
  %1474 = getelementptr inbounds %struct.Reg, %struct.Reg* %1473, i32 0, i32 0
  %PC.i1449 = bitcast %union.anon* %1474 to i64*
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1476 = getelementptr inbounds %struct.GPR, %struct.GPR* %1475, i32 0, i32 9
  %1477 = getelementptr inbounds %struct.Reg, %struct.Reg* %1476, i32 0, i32 0
  %RSI.i1450 = bitcast %union.anon* %1477 to i64*
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 11
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %RDI.i1451 = bitcast %union.anon* %1480 to i64*
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1482 = getelementptr inbounds %struct.GPR, %struct.GPR* %1481, i32 0, i32 17
  %1483 = getelementptr inbounds %struct.Reg, %struct.Reg* %1482, i32 0, i32 0
  %R8.i1452 = bitcast %union.anon* %1483 to i64*
  %1484 = load i64, i64* %RSI.i1450
  %1485 = load i64, i64* %R8.i1452
  %1486 = mul i64 %1485, 2
  %1487 = add i64 %1486, %1484
  %1488 = load i64, i64* %PC.i1449
  %1489 = add i64 %1488, 5
  store i64 %1489, i64* %PC.i1449
  %1490 = inttoptr i64 %1487 to i16*
  %1491 = load i16, i16* %1490
  %1492 = zext i16 %1491 to i64
  store i64 %1492, i64* %RDI.i1451, align 8
  store %struct.Memory* %loadMem_489178, %struct.Memory** %MEMORY
  %loadMem_48917d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1494 = getelementptr inbounds %struct.GPR, %struct.GPR* %1493, i32 0, i32 33
  %1495 = getelementptr inbounds %struct.Reg, %struct.Reg* %1494, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %1495 to i64*
  %1496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1497 = getelementptr inbounds %struct.GPR, %struct.GPR* %1496, i32 0, i32 9
  %1498 = getelementptr inbounds %struct.Reg, %struct.Reg* %1497, i32 0, i32 0
  %RSI.i1448 = bitcast %union.anon* %1498 to i64*
  %1499 = load i64, i64* %PC.i1447
  %1500 = add i64 %1499, 8
  store i64 %1500, i64* %PC.i1447
  %1501 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1501, i64* %RSI.i1448, align 8
  store %struct.Memory* %loadMem_48917d, %struct.Memory** %MEMORY
  %loadMem_489185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1503 = getelementptr inbounds %struct.GPR, %struct.GPR* %1502, i32 0, i32 33
  %1504 = getelementptr inbounds %struct.Reg, %struct.Reg* %1503, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %1504 to i64*
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1506 = getelementptr inbounds %struct.GPR, %struct.GPR* %1505, i32 0, i32 9
  %1507 = getelementptr inbounds %struct.Reg, %struct.Reg* %1506, i32 0, i32 0
  %RSI.i1446 = bitcast %union.anon* %1507 to i64*
  %1508 = load i64, i64* %RSI.i1446
  %1509 = load i64, i64* %PC.i1445
  %1510 = add i64 %1509, 7
  store i64 %1510, i64* %PC.i1445
  %1511 = add i64 4792, %1508
  store i64 %1511, i64* %RSI.i1446, align 8
  %1512 = icmp ult i64 %1511, %1508
  %1513 = icmp ult i64 %1511, 4792
  %1514 = or i1 %1512, %1513
  %1515 = zext i1 %1514 to i8
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1515, i8* %1516, align 1
  %1517 = trunc i64 %1511 to i32
  %1518 = and i32 %1517, 255
  %1519 = call i32 @llvm.ctpop.i32(i32 %1518)
  %1520 = trunc i32 %1519 to i8
  %1521 = and i8 %1520, 1
  %1522 = xor i8 %1521, 1
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1522, i8* %1523, align 1
  %1524 = xor i64 4792, %1508
  %1525 = xor i64 %1524, %1511
  %1526 = lshr i64 %1525, 4
  %1527 = trunc i64 %1526 to i8
  %1528 = and i8 %1527, 1
  %1529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1528, i8* %1529, align 1
  %1530 = icmp eq i64 %1511, 0
  %1531 = zext i1 %1530 to i8
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1531, i8* %1532, align 1
  %1533 = lshr i64 %1511, 63
  %1534 = trunc i64 %1533 to i8
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1534, i8* %1535, align 1
  %1536 = lshr i64 %1508, 63
  %1537 = xor i64 %1533, %1536
  %1538 = add i64 %1537, %1533
  %1539 = icmp eq i64 %1538, 2
  %1540 = zext i1 %1539 to i8
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1540, i8* %1541, align 1
  store %struct.Memory* %loadMem_489185, %struct.Memory** %MEMORY
  %loadMem_48918c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1543 = getelementptr inbounds %struct.GPR, %struct.GPR* %1542, i32 0, i32 33
  %1544 = getelementptr inbounds %struct.Reg, %struct.Reg* %1543, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %1544 to i64*
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1546 = getelementptr inbounds %struct.GPR, %struct.GPR* %1545, i32 0, i32 15
  %1547 = getelementptr inbounds %struct.Reg, %struct.Reg* %1546, i32 0, i32 0
  %RBP.i1443 = bitcast %union.anon* %1547 to i64*
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 17
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %R8.i1444 = bitcast %union.anon* %1550 to i64*
  %1551 = load i64, i64* %RBP.i1443
  %1552 = sub i64 %1551, 16
  %1553 = load i64, i64* %PC.i1442
  %1554 = add i64 %1553, 4
  store i64 %1554, i64* %PC.i1442
  %1555 = inttoptr i64 %1552 to i64*
  %1556 = load i64, i64* %1555
  store i64 %1556, i64* %R8.i1444, align 8
  store %struct.Memory* %loadMem_48918c, %struct.Memory** %MEMORY
  %loadMem_489190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1558 = getelementptr inbounds %struct.GPR, %struct.GPR* %1557, i32 0, i32 33
  %1559 = getelementptr inbounds %struct.Reg, %struct.Reg* %1558, i32 0, i32 0
  %PC.i1440 = bitcast %union.anon* %1559 to i64*
  %1560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1561 = getelementptr inbounds %struct.GPR, %struct.GPR* %1560, i32 0, i32 17
  %1562 = getelementptr inbounds %struct.Reg, %struct.Reg* %1561, i32 0, i32 0
  %R8.i1441 = bitcast %union.anon* %1562 to i64*
  %1563 = load i64, i64* %R8.i1441
  %1564 = load i64, i64* %PC.i1440
  %1565 = add i64 %1564, 3
  store i64 %1565, i64* %PC.i1440
  %1566 = inttoptr i64 %1563 to i32*
  %1567 = load i32, i32* %1566
  %1568 = sext i32 %1567 to i64
  store i64 %1568, i64* %R8.i1441, align 8
  store %struct.Memory* %loadMem_489190, %struct.Memory** %MEMORY
  %loadMem_489193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1570 = getelementptr inbounds %struct.GPR, %struct.GPR* %1569, i32 0, i32 33
  %1571 = getelementptr inbounds %struct.Reg, %struct.Reg* %1570, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %1571 to i64*
  %1572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1573 = getelementptr inbounds %struct.GPR, %struct.GPR* %1572, i32 0, i32 17
  %1574 = getelementptr inbounds %struct.Reg, %struct.Reg* %1573, i32 0, i32 0
  %R8.i1439 = bitcast %union.anon* %1574 to i64*
  %1575 = load i64, i64* %R8.i1439
  %1576 = load i64, i64* %PC.i1438
  %1577 = add i64 %1576, 4
  store i64 %1577, i64* %PC.i1438
  %1578 = shl i64 %1575, 8
  %1579 = icmp slt i64 %1578, 0
  %1580 = shl i64 %1578, 1
  store i64 %1580, i64* %R8.i1439, align 8
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1582 = zext i1 %1579 to i8
  store i8 %1582, i8* %1581, align 1
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1584 = trunc i64 %1580 to i32
  store i8 1, i8* %1583, align 1
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1585, align 1
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1587 = icmp eq i64 %1580, 0
  %1588 = zext i1 %1587 to i8
  store i8 %1588, i8* %1586, align 1
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1590 = lshr i64 %1580, 63
  %1591 = trunc i64 %1590 to i8
  store i8 %1591, i8* %1589, align 1
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1592, align 1
  store %struct.Memory* %loadMem_489193, %struct.Memory** %MEMORY
  %loadMem_489197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1594 = getelementptr inbounds %struct.GPR, %struct.GPR* %1593, i32 0, i32 33
  %1595 = getelementptr inbounds %struct.Reg, %struct.Reg* %1594, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %1595 to i64*
  %1596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1597 = getelementptr inbounds %struct.GPR, %struct.GPR* %1596, i32 0, i32 9
  %1598 = getelementptr inbounds %struct.Reg, %struct.Reg* %1597, i32 0, i32 0
  %RSI.i1436 = bitcast %union.anon* %1598 to i64*
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1600 = getelementptr inbounds %struct.GPR, %struct.GPR* %1599, i32 0, i32 17
  %1601 = getelementptr inbounds %struct.Reg, %struct.Reg* %1600, i32 0, i32 0
  %R8.i1437 = bitcast %union.anon* %1601 to i64*
  %1602 = load i64, i64* %RSI.i1436
  %1603 = load i64, i64* %R8.i1437
  %1604 = load i64, i64* %PC.i1435
  %1605 = add i64 %1604, 3
  store i64 %1605, i64* %PC.i1435
  %1606 = add i64 %1603, %1602
  store i64 %1606, i64* %RSI.i1436, align 8
  %1607 = icmp ult i64 %1606, %1602
  %1608 = icmp ult i64 %1606, %1603
  %1609 = or i1 %1607, %1608
  %1610 = zext i1 %1609 to i8
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1610, i8* %1611, align 1
  %1612 = trunc i64 %1606 to i32
  %1613 = and i32 %1612, 255
  %1614 = call i32 @llvm.ctpop.i32(i32 %1613)
  %1615 = trunc i32 %1614 to i8
  %1616 = and i8 %1615, 1
  %1617 = xor i8 %1616, 1
  %1618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1617, i8* %1618, align 1
  %1619 = xor i64 %1603, %1602
  %1620 = xor i64 %1619, %1606
  %1621 = lshr i64 %1620, 4
  %1622 = trunc i64 %1621 to i8
  %1623 = and i8 %1622, 1
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1623, i8* %1624, align 1
  %1625 = icmp eq i64 %1606, 0
  %1626 = zext i1 %1625 to i8
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1626, i8* %1627, align 1
  %1628 = lshr i64 %1606, 63
  %1629 = trunc i64 %1628 to i8
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1629, i8* %1630, align 1
  %1631 = lshr i64 %1602, 63
  %1632 = lshr i64 %1603, 63
  %1633 = xor i64 %1628, %1631
  %1634 = xor i64 %1628, %1632
  %1635 = add i64 %1633, %1634
  %1636 = icmp eq i64 %1635, 2
  %1637 = zext i1 %1636 to i8
  %1638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1637, i8* %1638, align 1
  store %struct.Memory* %loadMem_489197, %struct.Memory** %MEMORY
  %loadMem_48919a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1640 = getelementptr inbounds %struct.GPR, %struct.GPR* %1639, i32 0, i32 33
  %1641 = getelementptr inbounds %struct.Reg, %struct.Reg* %1640, i32 0, i32 0
  %PC.i1432 = bitcast %union.anon* %1641 to i64*
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1643 = getelementptr inbounds %struct.GPR, %struct.GPR* %1642, i32 0, i32 15
  %1644 = getelementptr inbounds %struct.Reg, %struct.Reg* %1643, i32 0, i32 0
  %RBP.i1433 = bitcast %union.anon* %1644 to i64*
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1646 = getelementptr inbounds %struct.GPR, %struct.GPR* %1645, i32 0, i32 17
  %1647 = getelementptr inbounds %struct.Reg, %struct.Reg* %1646, i32 0, i32 0
  %R8.i1434 = bitcast %union.anon* %1647 to i64*
  %1648 = load i64, i64* %RBP.i1433
  %1649 = sub i64 %1648, 40
  %1650 = load i64, i64* %PC.i1432
  %1651 = add i64 %1650, 4
  store i64 %1651, i64* %PC.i1432
  %1652 = inttoptr i64 %1649 to i32*
  %1653 = load i32, i32* %1652
  %1654 = sext i32 %1653 to i64
  store i64 %1654, i64* %R8.i1434, align 8
  store %struct.Memory* %loadMem_48919a, %struct.Memory** %MEMORY
  %loadMem_48919e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1656 = getelementptr inbounds %struct.GPR, %struct.GPR* %1655, i32 0, i32 33
  %1657 = getelementptr inbounds %struct.Reg, %struct.Reg* %1656, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %1657 to i64*
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 17
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %R8.i1431 = bitcast %union.anon* %1660 to i64*
  %1661 = load i64, i64* %R8.i1431
  %1662 = load i64, i64* %PC.i1430
  %1663 = add i64 %1662, 4
  store i64 %1663, i64* %PC.i1430
  %1664 = shl i64 %1661, 4
  %1665 = icmp slt i64 %1664, 0
  %1666 = shl i64 %1664, 1
  store i64 %1666, i64* %R8.i1431, align 8
  %1667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1668 = zext i1 %1665 to i8
  store i8 %1668, i8* %1667, align 1
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1670 = trunc i64 %1666 to i32
  %1671 = and i32 %1670, 254
  %1672 = call i32 @llvm.ctpop.i32(i32 %1671)
  %1673 = trunc i32 %1672 to i8
  %1674 = and i8 %1673, 1
  %1675 = xor i8 %1674, 1
  store i8 %1675, i8* %1669, align 1
  %1676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1676, align 1
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1678 = icmp eq i64 %1666, 0
  %1679 = zext i1 %1678 to i8
  store i8 %1679, i8* %1677, align 1
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1681 = lshr i64 %1666, 63
  %1682 = trunc i64 %1681 to i8
  store i8 %1682, i8* %1680, align 1
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1683, align 1
  store %struct.Memory* %loadMem_48919e, %struct.Memory** %MEMORY
  %loadMem_4891a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1685 = getelementptr inbounds %struct.GPR, %struct.GPR* %1684, i32 0, i32 33
  %1686 = getelementptr inbounds %struct.Reg, %struct.Reg* %1685, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %1686 to i64*
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1688 = getelementptr inbounds %struct.GPR, %struct.GPR* %1687, i32 0, i32 9
  %1689 = getelementptr inbounds %struct.Reg, %struct.Reg* %1688, i32 0, i32 0
  %RSI.i1428 = bitcast %union.anon* %1689 to i64*
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1691 = getelementptr inbounds %struct.GPR, %struct.GPR* %1690, i32 0, i32 17
  %1692 = getelementptr inbounds %struct.Reg, %struct.Reg* %1691, i32 0, i32 0
  %R8.i1429 = bitcast %union.anon* %1692 to i64*
  %1693 = load i64, i64* %RSI.i1428
  %1694 = load i64, i64* %R8.i1429
  %1695 = load i64, i64* %PC.i1427
  %1696 = add i64 %1695, 3
  store i64 %1696, i64* %PC.i1427
  %1697 = add i64 %1694, %1693
  store i64 %1697, i64* %RSI.i1428, align 8
  %1698 = icmp ult i64 %1697, %1693
  %1699 = icmp ult i64 %1697, %1694
  %1700 = or i1 %1698, %1699
  %1701 = zext i1 %1700 to i8
  %1702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1701, i8* %1702, align 1
  %1703 = trunc i64 %1697 to i32
  %1704 = and i32 %1703, 255
  %1705 = call i32 @llvm.ctpop.i32(i32 %1704)
  %1706 = trunc i32 %1705 to i8
  %1707 = and i8 %1706, 1
  %1708 = xor i8 %1707, 1
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1708, i8* %1709, align 1
  %1710 = xor i64 %1694, %1693
  %1711 = xor i64 %1710, %1697
  %1712 = lshr i64 %1711, 4
  %1713 = trunc i64 %1712 to i8
  %1714 = and i8 %1713, 1
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1714, i8* %1715, align 1
  %1716 = icmp eq i64 %1697, 0
  %1717 = zext i1 %1716 to i8
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1717, i8* %1718, align 1
  %1719 = lshr i64 %1697, 63
  %1720 = trunc i64 %1719 to i8
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1720, i8* %1721, align 1
  %1722 = lshr i64 %1693, 63
  %1723 = lshr i64 %1694, 63
  %1724 = xor i64 %1719, %1722
  %1725 = xor i64 %1719, %1723
  %1726 = add i64 %1724, %1725
  %1727 = icmp eq i64 %1726, 2
  %1728 = zext i1 %1727 to i8
  %1729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1728, i8* %1729, align 1
  store %struct.Memory* %loadMem_4891a2, %struct.Memory** %MEMORY
  %loadMem_4891a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 33
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %PC.i1424 = bitcast %union.anon* %1732 to i64*
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1734 = getelementptr inbounds %struct.GPR, %struct.GPR* %1733, i32 0, i32 15
  %1735 = getelementptr inbounds %struct.Reg, %struct.Reg* %1734, i32 0, i32 0
  %RBP.i1425 = bitcast %union.anon* %1735 to i64*
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1737 = getelementptr inbounds %struct.GPR, %struct.GPR* %1736, i32 0, i32 17
  %1738 = getelementptr inbounds %struct.Reg, %struct.Reg* %1737, i32 0, i32 0
  %R8.i1426 = bitcast %union.anon* %1738 to i64*
  %1739 = load i64, i64* %RBP.i1425
  %1740 = sub i64 %1739, 36
  %1741 = load i64, i64* %PC.i1424
  %1742 = add i64 %1741, 4
  store i64 %1742, i64* %PC.i1424
  %1743 = inttoptr i64 %1740 to i32*
  %1744 = load i32, i32* %1743
  %1745 = sext i32 %1744 to i64
  store i64 %1745, i64* %R8.i1426, align 8
  store %struct.Memory* %loadMem_4891a5, %struct.Memory** %MEMORY
  %loadMem_4891a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1747 = getelementptr inbounds %struct.GPR, %struct.GPR* %1746, i32 0, i32 33
  %1748 = getelementptr inbounds %struct.Reg, %struct.Reg* %1747, i32 0, i32 0
  %PC.i1420 = bitcast %union.anon* %1748 to i64*
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1750 = getelementptr inbounds %struct.GPR, %struct.GPR* %1749, i32 0, i32 19
  %1751 = getelementptr inbounds %struct.Reg, %struct.Reg* %1750, i32 0, i32 0
  %R9D.i1421 = bitcast %union.anon* %1751 to i32*
  %1752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1753 = getelementptr inbounds %struct.GPR, %struct.GPR* %1752, i32 0, i32 9
  %1754 = getelementptr inbounds %struct.Reg, %struct.Reg* %1753, i32 0, i32 0
  %RSI.i1422 = bitcast %union.anon* %1754 to i64*
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1756 = getelementptr inbounds %struct.GPR, %struct.GPR* %1755, i32 0, i32 17
  %1757 = getelementptr inbounds %struct.Reg, %struct.Reg* %1756, i32 0, i32 0
  %R8.i1423 = bitcast %union.anon* %1757 to i64*
  %1758 = bitcast i32* %R9D.i1421 to i64*
  %1759 = load i64, i64* %RSI.i1422
  %1760 = load i64, i64* %R8.i1423
  %1761 = mul i64 %1760, 2
  %1762 = add i64 %1761, %1759
  %1763 = load i64, i64* %PC.i1420
  %1764 = add i64 %1763, 5
  store i64 %1764, i64* %PC.i1420
  %1765 = inttoptr i64 %1762 to i16*
  %1766 = load i16, i16* %1765
  %1767 = zext i16 %1766 to i64
  store i64 %1767, i64* %1758, align 8
  store %struct.Memory* %loadMem_4891a9, %struct.Memory** %MEMORY
  %loadMem_4891ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1769 = getelementptr inbounds %struct.GPR, %struct.GPR* %1768, i32 0, i32 33
  %1770 = getelementptr inbounds %struct.Reg, %struct.Reg* %1769, i32 0, i32 0
  %PC.i1417 = bitcast %union.anon* %1770 to i64*
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1772 = getelementptr inbounds %struct.GPR, %struct.GPR* %1771, i32 0, i32 19
  %1773 = getelementptr inbounds %struct.Reg, %struct.Reg* %1772, i32 0, i32 0
  %R9D.i1418 = bitcast %union.anon* %1773 to i32*
  %1774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1775 = getelementptr inbounds %struct.GPR, %struct.GPR* %1774, i32 0, i32 11
  %1776 = getelementptr inbounds %struct.Reg, %struct.Reg* %1775, i32 0, i32 0
  %RDI.i1419 = bitcast %union.anon* %1776 to i64*
  %1777 = load i64, i64* %RDI.i1419
  %1778 = load i32, i32* %R9D.i1418
  %1779 = zext i32 %1778 to i64
  %1780 = load i64, i64* %PC.i1417
  %1781 = add i64 %1780, 3
  store i64 %1781, i64* %PC.i1417
  %1782 = trunc i64 %1777 to i32
  %1783 = sub i32 %1782, %1778
  %1784 = zext i32 %1783 to i64
  store i64 %1784, i64* %RDI.i1419, align 8
  %1785 = icmp ult i32 %1782, %1778
  %1786 = zext i1 %1785 to i8
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1786, i8* %1787, align 1
  %1788 = and i32 %1783, 255
  %1789 = call i32 @llvm.ctpop.i32(i32 %1788)
  %1790 = trunc i32 %1789 to i8
  %1791 = and i8 %1790, 1
  %1792 = xor i8 %1791, 1
  %1793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1792, i8* %1793, align 1
  %1794 = xor i64 %1779, %1777
  %1795 = trunc i64 %1794 to i32
  %1796 = xor i32 %1795, %1783
  %1797 = lshr i32 %1796, 4
  %1798 = trunc i32 %1797 to i8
  %1799 = and i8 %1798, 1
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1799, i8* %1800, align 1
  %1801 = icmp eq i32 %1783, 0
  %1802 = zext i1 %1801 to i8
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1802, i8* %1803, align 1
  %1804 = lshr i32 %1783, 31
  %1805 = trunc i32 %1804 to i8
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1805, i8* %1806, align 1
  %1807 = lshr i32 %1782, 31
  %1808 = lshr i32 %1778, 31
  %1809 = xor i32 %1808, %1807
  %1810 = xor i32 %1804, %1807
  %1811 = add i32 %1810, %1809
  %1812 = icmp eq i32 %1811, 2
  %1813 = zext i1 %1812 to i8
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1813, i8* %1814, align 1
  store %struct.Memory* %loadMem_4891ae, %struct.Memory** %MEMORY
  %loadMem_4891b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1816 = getelementptr inbounds %struct.GPR, %struct.GPR* %1815, i32 0, i32 33
  %1817 = getelementptr inbounds %struct.Reg, %struct.Reg* %1816, i32 0, i32 0
  %PC.i1414 = bitcast %union.anon* %1817 to i64*
  %1818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1819 = getelementptr inbounds %struct.GPR, %struct.GPR* %1818, i32 0, i32 11
  %1820 = getelementptr inbounds %struct.Reg, %struct.Reg* %1819, i32 0, i32 0
  %EDI.i1415 = bitcast %union.anon* %1820 to i32*
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1822 = getelementptr inbounds %struct.GPR, %struct.GPR* %1821, i32 0, i32 15
  %1823 = getelementptr inbounds %struct.Reg, %struct.Reg* %1822, i32 0, i32 0
  %RBP.i1416 = bitcast %union.anon* %1823 to i64*
  %1824 = load i64, i64* %RBP.i1416
  %1825 = sub i64 %1824, 24
  %1826 = load i32, i32* %EDI.i1415
  %1827 = zext i32 %1826 to i64
  %1828 = load i64, i64* %PC.i1414
  %1829 = add i64 %1828, 3
  store i64 %1829, i64* %PC.i1414
  %1830 = inttoptr i64 %1825 to i32*
  store i32 %1826, i32* %1830
  store %struct.Memory* %loadMem_4891b1, %struct.Memory** %MEMORY
  %loadMem_4891b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1832 = getelementptr inbounds %struct.GPR, %struct.GPR* %1831, i32 0, i32 33
  %1833 = getelementptr inbounds %struct.Reg, %struct.Reg* %1832, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %1833 to i64*
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1835 = getelementptr inbounds %struct.GPR, %struct.GPR* %1834, i32 0, i32 9
  %1836 = getelementptr inbounds %struct.Reg, %struct.Reg* %1835, i32 0, i32 0
  %RSI.i1412 = bitcast %union.anon* %1836 to i64*
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 15
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %RBP.i1413 = bitcast %union.anon* %1839 to i64*
  %1840 = load i64, i64* %RBP.i1413
  %1841 = sub i64 %1840, 72
  %1842 = load i64, i64* %PC.i1411
  %1843 = add i64 %1842, 4
  store i64 %1843, i64* %PC.i1411
  %1844 = inttoptr i64 %1841 to i64*
  %1845 = load i64, i64* %1844
  store i64 %1845, i64* %RSI.i1412, align 8
  store %struct.Memory* %loadMem_4891b4, %struct.Memory** %MEMORY
  %loadMem_4891b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1847 = getelementptr inbounds %struct.GPR, %struct.GPR* %1846, i32 0, i32 33
  %1848 = getelementptr inbounds %struct.Reg, %struct.Reg* %1847, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %1848 to i64*
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1850 = getelementptr inbounds %struct.GPR, %struct.GPR* %1849, i32 0, i32 9
  %1851 = getelementptr inbounds %struct.Reg, %struct.Reg* %1850, i32 0, i32 0
  %RSI.i1410 = bitcast %union.anon* %1851 to i64*
  %1852 = load i64, i64* %RSI.i1410
  %1853 = add i64 %1852, 8
  %1854 = load i64, i64* %PC.i1409
  %1855 = add i64 %1854, 4
  store i64 %1855, i64* %PC.i1409
  %1856 = inttoptr i64 %1853 to i64*
  %1857 = load i64, i64* %1856
  store i64 %1857, i64* %RSI.i1410, align 8
  store %struct.Memory* %loadMem_4891b8, %struct.Memory** %MEMORY
  %loadMem_4891bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1859 = getelementptr inbounds %struct.GPR, %struct.GPR* %1858, i32 0, i32 33
  %1860 = getelementptr inbounds %struct.Reg, %struct.Reg* %1859, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %1860 to i64*
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 11
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %RDI.i1407 = bitcast %union.anon* %1863 to i64*
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 15
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %RBP.i1408 = bitcast %union.anon* %1866 to i64*
  %1867 = load i64, i64* %RBP.i1408
  %1868 = sub i64 %1867, 52
  %1869 = load i64, i64* %PC.i1406
  %1870 = add i64 %1869, 3
  store i64 %1870, i64* %PC.i1406
  %1871 = inttoptr i64 %1868 to i32*
  %1872 = load i32, i32* %1871
  %1873 = zext i32 %1872 to i64
  store i64 %1873, i64* %RDI.i1407, align 8
  store %struct.Memory* %loadMem_4891bc, %struct.Memory** %MEMORY
  %loadMem_4891bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 33
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %PC.i1403 = bitcast %union.anon* %1876 to i64*
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 11
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %RDI.i1404 = bitcast %union.anon* %1879 to i64*
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 15
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %RBP.i1405 = bitcast %union.anon* %1882 to i64*
  %1883 = load i64, i64* %RDI.i1404
  %1884 = load i64, i64* %RBP.i1405
  %1885 = sub i64 %1884, 40
  %1886 = load i64, i64* %PC.i1403
  %1887 = add i64 %1886, 3
  store i64 %1887, i64* %PC.i1403
  %1888 = trunc i64 %1883 to i32
  %1889 = inttoptr i64 %1885 to i32*
  %1890 = load i32, i32* %1889
  %1891 = add i32 %1890, %1888
  %1892 = zext i32 %1891 to i64
  store i64 %1892, i64* %RDI.i1404, align 8
  %1893 = icmp ult i32 %1891, %1888
  %1894 = icmp ult i32 %1891, %1890
  %1895 = or i1 %1893, %1894
  %1896 = zext i1 %1895 to i8
  %1897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1896, i8* %1897, align 1
  %1898 = and i32 %1891, 255
  %1899 = call i32 @llvm.ctpop.i32(i32 %1898)
  %1900 = trunc i32 %1899 to i8
  %1901 = and i8 %1900, 1
  %1902 = xor i8 %1901, 1
  %1903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1902, i8* %1903, align 1
  %1904 = xor i32 %1890, %1888
  %1905 = xor i32 %1904, %1891
  %1906 = lshr i32 %1905, 4
  %1907 = trunc i32 %1906 to i8
  %1908 = and i8 %1907, 1
  %1909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1908, i8* %1909, align 1
  %1910 = icmp eq i32 %1891, 0
  %1911 = zext i1 %1910 to i8
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1911, i8* %1912, align 1
  %1913 = lshr i32 %1891, 31
  %1914 = trunc i32 %1913 to i8
  %1915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1914, i8* %1915, align 1
  %1916 = lshr i32 %1888, 31
  %1917 = lshr i32 %1890, 31
  %1918 = xor i32 %1913, %1916
  %1919 = xor i32 %1913, %1917
  %1920 = add i32 %1918, %1919
  %1921 = icmp eq i32 %1920, 2
  %1922 = zext i1 %1921 to i8
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1922, i8* %1923, align 1
  store %struct.Memory* %loadMem_4891bf, %struct.Memory** %MEMORY
  %loadMem_4891c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1925 = getelementptr inbounds %struct.GPR, %struct.GPR* %1924, i32 0, i32 33
  %1926 = getelementptr inbounds %struct.Reg, %struct.Reg* %1925, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %1926 to i64*
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1928 = getelementptr inbounds %struct.GPR, %struct.GPR* %1927, i32 0, i32 11
  %1929 = getelementptr inbounds %struct.Reg, %struct.Reg* %1928, i32 0, i32 0
  %EDI.i1401 = bitcast %union.anon* %1929 to i32*
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1931 = getelementptr inbounds %struct.GPR, %struct.GPR* %1930, i32 0, i32 17
  %1932 = getelementptr inbounds %struct.Reg, %struct.Reg* %1931, i32 0, i32 0
  %R8.i1402 = bitcast %union.anon* %1932 to i64*
  %1933 = load i32, i32* %EDI.i1401
  %1934 = zext i32 %1933 to i64
  %1935 = load i64, i64* %PC.i1400
  %1936 = add i64 %1935, 3
  store i64 %1936, i64* %PC.i1400
  %1937 = shl i64 %1934, 32
  %1938 = ashr exact i64 %1937, 32
  store i64 %1938, i64* %R8.i1402, align 8
  store %struct.Memory* %loadMem_4891c2, %struct.Memory** %MEMORY
  %loadMem_4891c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1940 = getelementptr inbounds %struct.GPR, %struct.GPR* %1939, i32 0, i32 33
  %1941 = getelementptr inbounds %struct.Reg, %struct.Reg* %1940, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %1941 to i64*
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 9
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %RSI.i1398 = bitcast %union.anon* %1944 to i64*
  %1945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1946 = getelementptr inbounds %struct.GPR, %struct.GPR* %1945, i32 0, i32 17
  %1947 = getelementptr inbounds %struct.Reg, %struct.Reg* %1946, i32 0, i32 0
  %R8.i1399 = bitcast %union.anon* %1947 to i64*
  %1948 = load i64, i64* %RSI.i1398
  %1949 = load i64, i64* %R8.i1399
  %1950 = mul i64 %1949, 8
  %1951 = add i64 %1950, %1948
  %1952 = load i64, i64* %PC.i1397
  %1953 = add i64 %1952, 4
  store i64 %1953, i64* %PC.i1397
  %1954 = inttoptr i64 %1951 to i64*
  %1955 = load i64, i64* %1954
  store i64 %1955, i64* %RSI.i1398, align 8
  store %struct.Memory* %loadMem_4891c5, %struct.Memory** %MEMORY
  %loadMem_4891c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1957 = getelementptr inbounds %struct.GPR, %struct.GPR* %1956, i32 0, i32 33
  %1958 = getelementptr inbounds %struct.Reg, %struct.Reg* %1957, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %1958 to i64*
  %1959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1960 = getelementptr inbounds %struct.GPR, %struct.GPR* %1959, i32 0, i32 11
  %1961 = getelementptr inbounds %struct.Reg, %struct.Reg* %1960, i32 0, i32 0
  %RDI.i1395 = bitcast %union.anon* %1961 to i64*
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1963 = getelementptr inbounds %struct.GPR, %struct.GPR* %1962, i32 0, i32 15
  %1964 = getelementptr inbounds %struct.Reg, %struct.Reg* %1963, i32 0, i32 0
  %RBP.i1396 = bitcast %union.anon* %1964 to i64*
  %1965 = load i64, i64* %RBP.i1396
  %1966 = sub i64 %1965, 48
  %1967 = load i64, i64* %PC.i1394
  %1968 = add i64 %1967, 3
  store i64 %1968, i64* %PC.i1394
  %1969 = inttoptr i64 %1966 to i32*
  %1970 = load i32, i32* %1969
  %1971 = zext i32 %1970 to i64
  store i64 %1971, i64* %RDI.i1395, align 8
  store %struct.Memory* %loadMem_4891c9, %struct.Memory** %MEMORY
  %loadMem_4891cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1973 = getelementptr inbounds %struct.GPR, %struct.GPR* %1972, i32 0, i32 33
  %1974 = getelementptr inbounds %struct.Reg, %struct.Reg* %1973, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %1974 to i64*
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1976 = getelementptr inbounds %struct.GPR, %struct.GPR* %1975, i32 0, i32 11
  %1977 = getelementptr inbounds %struct.Reg, %struct.Reg* %1976, i32 0, i32 0
  %RDI.i1392 = bitcast %union.anon* %1977 to i64*
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1979 = getelementptr inbounds %struct.GPR, %struct.GPR* %1978, i32 0, i32 15
  %1980 = getelementptr inbounds %struct.Reg, %struct.Reg* %1979, i32 0, i32 0
  %RBP.i1393 = bitcast %union.anon* %1980 to i64*
  %1981 = load i64, i64* %RDI.i1392
  %1982 = load i64, i64* %RBP.i1393
  %1983 = sub i64 %1982, 36
  %1984 = load i64, i64* %PC.i1391
  %1985 = add i64 %1984, 3
  store i64 %1985, i64* %PC.i1391
  %1986 = trunc i64 %1981 to i32
  %1987 = inttoptr i64 %1983 to i32*
  %1988 = load i32, i32* %1987
  %1989 = add i32 %1988, %1986
  %1990 = zext i32 %1989 to i64
  store i64 %1990, i64* %RDI.i1392, align 8
  %1991 = icmp ult i32 %1989, %1986
  %1992 = icmp ult i32 %1989, %1988
  %1993 = or i1 %1991, %1992
  %1994 = zext i1 %1993 to i8
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1994, i8* %1995, align 1
  %1996 = and i32 %1989, 255
  %1997 = call i32 @llvm.ctpop.i32(i32 %1996)
  %1998 = trunc i32 %1997 to i8
  %1999 = and i8 %1998, 1
  %2000 = xor i8 %1999, 1
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2000, i8* %2001, align 1
  %2002 = xor i32 %1988, %1986
  %2003 = xor i32 %2002, %1989
  %2004 = lshr i32 %2003, 4
  %2005 = trunc i32 %2004 to i8
  %2006 = and i8 %2005, 1
  %2007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2006, i8* %2007, align 1
  %2008 = icmp eq i32 %1989, 0
  %2009 = zext i1 %2008 to i8
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2009, i8* %2010, align 1
  %2011 = lshr i32 %1989, 31
  %2012 = trunc i32 %2011 to i8
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2012, i8* %2013, align 1
  %2014 = lshr i32 %1986, 31
  %2015 = lshr i32 %1988, 31
  %2016 = xor i32 %2011, %2014
  %2017 = xor i32 %2011, %2015
  %2018 = add i32 %2016, %2017
  %2019 = icmp eq i32 %2018, 2
  %2020 = zext i1 %2019 to i8
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2020, i8* %2021, align 1
  store %struct.Memory* %loadMem_4891cc, %struct.Memory** %MEMORY
  %loadMem_4891cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2023 = getelementptr inbounds %struct.GPR, %struct.GPR* %2022, i32 0, i32 33
  %2024 = getelementptr inbounds %struct.Reg, %struct.Reg* %2023, i32 0, i32 0
  %PC.i1388 = bitcast %union.anon* %2024 to i64*
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 11
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %EDI.i1389 = bitcast %union.anon* %2027 to i32*
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2029 = getelementptr inbounds %struct.GPR, %struct.GPR* %2028, i32 0, i32 17
  %2030 = getelementptr inbounds %struct.Reg, %struct.Reg* %2029, i32 0, i32 0
  %R8.i1390 = bitcast %union.anon* %2030 to i64*
  %2031 = load i32, i32* %EDI.i1389
  %2032 = zext i32 %2031 to i64
  %2033 = load i64, i64* %PC.i1388
  %2034 = add i64 %2033, 3
  store i64 %2034, i64* %PC.i1388
  %2035 = shl i64 %2032, 32
  %2036 = ashr exact i64 %2035, 32
  store i64 %2036, i64* %R8.i1390, align 8
  store %struct.Memory* %loadMem_4891cf, %struct.Memory** %MEMORY
  %loadMem_4891d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2038 = getelementptr inbounds %struct.GPR, %struct.GPR* %2037, i32 0, i32 33
  %2039 = getelementptr inbounds %struct.Reg, %struct.Reg* %2038, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %2039 to i64*
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2041 = getelementptr inbounds %struct.GPR, %struct.GPR* %2040, i32 0, i32 9
  %2042 = getelementptr inbounds %struct.Reg, %struct.Reg* %2041, i32 0, i32 0
  %RSI.i1385 = bitcast %union.anon* %2042 to i64*
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2044 = getelementptr inbounds %struct.GPR, %struct.GPR* %2043, i32 0, i32 11
  %2045 = getelementptr inbounds %struct.Reg, %struct.Reg* %2044, i32 0, i32 0
  %RDI.i1386 = bitcast %union.anon* %2045 to i64*
  %2046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2047 = getelementptr inbounds %struct.GPR, %struct.GPR* %2046, i32 0, i32 17
  %2048 = getelementptr inbounds %struct.Reg, %struct.Reg* %2047, i32 0, i32 0
  %R8.i1387 = bitcast %union.anon* %2048 to i64*
  %2049 = load i64, i64* %RSI.i1385
  %2050 = load i64, i64* %R8.i1387
  %2051 = mul i64 %2050, 2
  %2052 = add i64 %2051, %2049
  %2053 = load i64, i64* %PC.i1384
  %2054 = add i64 %2053, 5
  store i64 %2054, i64* %PC.i1384
  %2055 = inttoptr i64 %2052 to i16*
  %2056 = load i16, i16* %2055
  %2057 = zext i16 %2056 to i64
  store i64 %2057, i64* %RDI.i1386, align 8
  store %struct.Memory* %loadMem_4891d2, %struct.Memory** %MEMORY
  %loadMem_4891d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2059 = getelementptr inbounds %struct.GPR, %struct.GPR* %2058, i32 0, i32 33
  %2060 = getelementptr inbounds %struct.Reg, %struct.Reg* %2059, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %2060 to i64*
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2062 = getelementptr inbounds %struct.GPR, %struct.GPR* %2061, i32 0, i32 9
  %2063 = getelementptr inbounds %struct.Reg, %struct.Reg* %2062, i32 0, i32 0
  %RSI.i1383 = bitcast %union.anon* %2063 to i64*
  %2064 = load i64, i64* %PC.i1382
  %2065 = add i64 %2064, 8
  store i64 %2065, i64* %PC.i1382
  %2066 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2066, i64* %RSI.i1383, align 8
  store %struct.Memory* %loadMem_4891d7, %struct.Memory** %MEMORY
  %loadMem_4891df = load %struct.Memory*, %struct.Memory** %MEMORY
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2068 = getelementptr inbounds %struct.GPR, %struct.GPR* %2067, i32 0, i32 33
  %2069 = getelementptr inbounds %struct.Reg, %struct.Reg* %2068, i32 0, i32 0
  %PC.i1380 = bitcast %union.anon* %2069 to i64*
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2071 = getelementptr inbounds %struct.GPR, %struct.GPR* %2070, i32 0, i32 9
  %2072 = getelementptr inbounds %struct.Reg, %struct.Reg* %2071, i32 0, i32 0
  %RSI.i1381 = bitcast %union.anon* %2072 to i64*
  %2073 = load i64, i64* %RSI.i1381
  %2074 = load i64, i64* %PC.i1380
  %2075 = add i64 %2074, 7
  store i64 %2075, i64* %PC.i1380
  %2076 = add i64 8504, %2073
  store i64 %2076, i64* %RSI.i1381, align 8
  %2077 = icmp ult i64 %2076, %2073
  %2078 = icmp ult i64 %2076, 8504
  %2079 = or i1 %2077, %2078
  %2080 = zext i1 %2079 to i8
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2080, i8* %2081, align 1
  %2082 = trunc i64 %2076 to i32
  %2083 = and i32 %2082, 255
  %2084 = call i32 @llvm.ctpop.i32(i32 %2083)
  %2085 = trunc i32 %2084 to i8
  %2086 = and i8 %2085, 1
  %2087 = xor i8 %2086, 1
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2087, i8* %2088, align 1
  %2089 = xor i64 8504, %2073
  %2090 = xor i64 %2089, %2076
  %2091 = lshr i64 %2090, 4
  %2092 = trunc i64 %2091 to i8
  %2093 = and i8 %2092, 1
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2093, i8* %2094, align 1
  %2095 = icmp eq i64 %2076, 0
  %2096 = zext i1 %2095 to i8
  %2097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2096, i8* %2097, align 1
  %2098 = lshr i64 %2076, 63
  %2099 = trunc i64 %2098 to i8
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2099, i8* %2100, align 1
  %2101 = lshr i64 %2073, 63
  %2102 = xor i64 %2098, %2101
  %2103 = add i64 %2102, %2098
  %2104 = icmp eq i64 %2103, 2
  %2105 = zext i1 %2104 to i8
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2105, i8* %2106, align 1
  store %struct.Memory* %loadMem_4891df, %struct.Memory** %MEMORY
  %loadMem_4891e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2108 = getelementptr inbounds %struct.GPR, %struct.GPR* %2107, i32 0, i32 33
  %2109 = getelementptr inbounds %struct.Reg, %struct.Reg* %2108, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %2109 to i64*
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2111 = getelementptr inbounds %struct.GPR, %struct.GPR* %2110, i32 0, i32 9
  %2112 = getelementptr inbounds %struct.Reg, %struct.Reg* %2111, i32 0, i32 0
  %RSI.i1379 = bitcast %union.anon* %2112 to i64*
  %2113 = load i64, i64* %RSI.i1379
  %2114 = load i64, i64* %PC.i1378
  %2115 = add i64 %2114, 7
  store i64 %2115, i64* %PC.i1378
  %2116 = add i64 2048, %2113
  store i64 %2116, i64* %RSI.i1379, align 8
  %2117 = icmp ult i64 %2116, %2113
  %2118 = icmp ult i64 %2116, 2048
  %2119 = or i1 %2117, %2118
  %2120 = zext i1 %2119 to i8
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2120, i8* %2121, align 1
  %2122 = trunc i64 %2116 to i32
  %2123 = and i32 %2122, 255
  %2124 = call i32 @llvm.ctpop.i32(i32 %2123)
  %2125 = trunc i32 %2124 to i8
  %2126 = and i8 %2125, 1
  %2127 = xor i8 %2126, 1
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2127, i8* %2128, align 1
  %2129 = xor i64 2048, %2113
  %2130 = xor i64 %2129, %2116
  %2131 = lshr i64 %2130, 4
  %2132 = trunc i64 %2131 to i8
  %2133 = and i8 %2132, 1
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2133, i8* %2134, align 1
  %2135 = icmp eq i64 %2116, 0
  %2136 = zext i1 %2135 to i8
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2136, i8* %2137, align 1
  %2138 = lshr i64 %2116, 63
  %2139 = trunc i64 %2138 to i8
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2139, i8* %2140, align 1
  %2141 = lshr i64 %2113, 63
  %2142 = xor i64 %2138, %2141
  %2143 = add i64 %2142, %2138
  %2144 = icmp eq i64 %2143, 2
  %2145 = zext i1 %2144 to i8
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2145, i8* %2146, align 1
  store %struct.Memory* %loadMem_4891e6, %struct.Memory** %MEMORY
  %loadMem_4891ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %2147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2148 = getelementptr inbounds %struct.GPR, %struct.GPR* %2147, i32 0, i32 33
  %2149 = getelementptr inbounds %struct.Reg, %struct.Reg* %2148, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %2149 to i64*
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2151 = getelementptr inbounds %struct.GPR, %struct.GPR* %2150, i32 0, i32 15
  %2152 = getelementptr inbounds %struct.Reg, %struct.Reg* %2151, i32 0, i32 0
  %RBP.i1376 = bitcast %union.anon* %2152 to i64*
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2154 = getelementptr inbounds %struct.GPR, %struct.GPR* %2153, i32 0, i32 17
  %2155 = getelementptr inbounds %struct.Reg, %struct.Reg* %2154, i32 0, i32 0
  %R8.i1377 = bitcast %union.anon* %2155 to i64*
  %2156 = load i64, i64* %RBP.i1376
  %2157 = sub i64 %2156, 32
  %2158 = load i64, i64* %PC.i1375
  %2159 = add i64 %2158, 4
  store i64 %2159, i64* %PC.i1375
  %2160 = inttoptr i64 %2157 to i32*
  %2161 = load i32, i32* %2160
  %2162 = sext i32 %2161 to i64
  store i64 %2162, i64* %R8.i1377, align 8
  store %struct.Memory* %loadMem_4891ed, %struct.Memory** %MEMORY
  %loadMem_4891f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2164 = getelementptr inbounds %struct.GPR, %struct.GPR* %2163, i32 0, i32 33
  %2165 = getelementptr inbounds %struct.Reg, %struct.Reg* %2164, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %2165 to i64*
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2167 = getelementptr inbounds %struct.GPR, %struct.GPR* %2166, i32 0, i32 17
  %2168 = getelementptr inbounds %struct.Reg, %struct.Reg* %2167, i32 0, i32 0
  %R8.i1374 = bitcast %union.anon* %2168 to i64*
  %2169 = load i64, i64* %R8.i1374
  %2170 = load i64, i64* %PC.i1373
  %2171 = add i64 %2170, 4
  store i64 %2171, i64* %PC.i1373
  %2172 = shl i64 %2169, 8
  %2173 = icmp slt i64 %2172, 0
  %2174 = shl i64 %2172, 1
  store i64 %2174, i64* %R8.i1374, align 8
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2176 = zext i1 %2173 to i8
  store i8 %2176, i8* %2175, align 1
  %2177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2178 = trunc i64 %2174 to i32
  store i8 1, i8* %2177, align 1
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2179, align 1
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2181 = icmp eq i64 %2174, 0
  %2182 = zext i1 %2181 to i8
  store i8 %2182, i8* %2180, align 1
  %2183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2184 = lshr i64 %2174, 63
  %2185 = trunc i64 %2184 to i8
  store i8 %2185, i8* %2183, align 1
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2186, align 1
  store %struct.Memory* %loadMem_4891f1, %struct.Memory** %MEMORY
  %loadMem_4891f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2188 = getelementptr inbounds %struct.GPR, %struct.GPR* %2187, i32 0, i32 33
  %2189 = getelementptr inbounds %struct.Reg, %struct.Reg* %2188, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %2189 to i64*
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2191 = getelementptr inbounds %struct.GPR, %struct.GPR* %2190, i32 0, i32 9
  %2192 = getelementptr inbounds %struct.Reg, %struct.Reg* %2191, i32 0, i32 0
  %RSI.i1371 = bitcast %union.anon* %2192 to i64*
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2194 = getelementptr inbounds %struct.GPR, %struct.GPR* %2193, i32 0, i32 17
  %2195 = getelementptr inbounds %struct.Reg, %struct.Reg* %2194, i32 0, i32 0
  %R8.i1372 = bitcast %union.anon* %2195 to i64*
  %2196 = load i64, i64* %RSI.i1371
  %2197 = load i64, i64* %R8.i1372
  %2198 = load i64, i64* %PC.i1370
  %2199 = add i64 %2198, 3
  store i64 %2199, i64* %PC.i1370
  %2200 = add i64 %2197, %2196
  store i64 %2200, i64* %RSI.i1371, align 8
  %2201 = icmp ult i64 %2200, %2196
  %2202 = icmp ult i64 %2200, %2197
  %2203 = or i1 %2201, %2202
  %2204 = zext i1 %2203 to i8
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2204, i8* %2205, align 1
  %2206 = trunc i64 %2200 to i32
  %2207 = and i32 %2206, 255
  %2208 = call i32 @llvm.ctpop.i32(i32 %2207)
  %2209 = trunc i32 %2208 to i8
  %2210 = and i8 %2209, 1
  %2211 = xor i8 %2210, 1
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2211, i8* %2212, align 1
  %2213 = xor i64 %2197, %2196
  %2214 = xor i64 %2213, %2200
  %2215 = lshr i64 %2214, 4
  %2216 = trunc i64 %2215 to i8
  %2217 = and i8 %2216, 1
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2217, i8* %2218, align 1
  %2219 = icmp eq i64 %2200, 0
  %2220 = zext i1 %2219 to i8
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2220, i8* %2221, align 1
  %2222 = lshr i64 %2200, 63
  %2223 = trunc i64 %2222 to i8
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2223, i8* %2224, align 1
  %2225 = lshr i64 %2196, 63
  %2226 = lshr i64 %2197, 63
  %2227 = xor i64 %2222, %2225
  %2228 = xor i64 %2222, %2226
  %2229 = add i64 %2227, %2228
  %2230 = icmp eq i64 %2229, 2
  %2231 = zext i1 %2230 to i8
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2231, i8* %2232, align 1
  store %struct.Memory* %loadMem_4891f5, %struct.Memory** %MEMORY
  %loadMem_4891f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2234 = getelementptr inbounds %struct.GPR, %struct.GPR* %2233, i32 0, i32 33
  %2235 = getelementptr inbounds %struct.Reg, %struct.Reg* %2234, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %2235 to i64*
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2237 = getelementptr inbounds %struct.GPR, %struct.GPR* %2236, i32 0, i32 15
  %2238 = getelementptr inbounds %struct.Reg, %struct.Reg* %2237, i32 0, i32 0
  %RBP.i1368 = bitcast %union.anon* %2238 to i64*
  %2239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2240 = getelementptr inbounds %struct.GPR, %struct.GPR* %2239, i32 0, i32 17
  %2241 = getelementptr inbounds %struct.Reg, %struct.Reg* %2240, i32 0, i32 0
  %R8.i1369 = bitcast %union.anon* %2241 to i64*
  %2242 = load i64, i64* %RBP.i1368
  %2243 = sub i64 %2242, 36
  %2244 = load i64, i64* %PC.i1367
  %2245 = add i64 %2244, 4
  store i64 %2245, i64* %PC.i1367
  %2246 = inttoptr i64 %2243 to i32*
  %2247 = load i32, i32* %2246
  %2248 = sext i32 %2247 to i64
  store i64 %2248, i64* %R8.i1369, align 8
  store %struct.Memory* %loadMem_4891f8, %struct.Memory** %MEMORY
  %loadMem_4891fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2250 = getelementptr inbounds %struct.GPR, %struct.GPR* %2249, i32 0, i32 33
  %2251 = getelementptr inbounds %struct.Reg, %struct.Reg* %2250, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %2251 to i64*
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2253 = getelementptr inbounds %struct.GPR, %struct.GPR* %2252, i32 0, i32 17
  %2254 = getelementptr inbounds %struct.Reg, %struct.Reg* %2253, i32 0, i32 0
  %R8.i1366 = bitcast %union.anon* %2254 to i64*
  %2255 = load i64, i64* %R8.i1366
  %2256 = load i64, i64* %PC.i1365
  %2257 = add i64 %2256, 4
  store i64 %2257, i64* %PC.i1365
  %2258 = shl i64 %2255, 4
  %2259 = icmp slt i64 %2258, 0
  %2260 = shl i64 %2258, 1
  store i64 %2260, i64* %R8.i1366, align 8
  %2261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2262 = zext i1 %2259 to i8
  store i8 %2262, i8* %2261, align 1
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2264 = trunc i64 %2260 to i32
  %2265 = and i32 %2264, 254
  %2266 = call i32 @llvm.ctpop.i32(i32 %2265)
  %2267 = trunc i32 %2266 to i8
  %2268 = and i8 %2267, 1
  %2269 = xor i8 %2268, 1
  store i8 %2269, i8* %2263, align 1
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2270, align 1
  %2271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2272 = icmp eq i64 %2260, 0
  %2273 = zext i1 %2272 to i8
  store i8 %2273, i8* %2271, align 1
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2275 = lshr i64 %2260, 63
  %2276 = trunc i64 %2275 to i8
  store i8 %2276, i8* %2274, align 1
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2277, align 1
  store %struct.Memory* %loadMem_4891fc, %struct.Memory** %MEMORY
  %loadMem_489200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2279 = getelementptr inbounds %struct.GPR, %struct.GPR* %2278, i32 0, i32 33
  %2280 = getelementptr inbounds %struct.Reg, %struct.Reg* %2279, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %2280 to i64*
  %2281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2282 = getelementptr inbounds %struct.GPR, %struct.GPR* %2281, i32 0, i32 9
  %2283 = getelementptr inbounds %struct.Reg, %struct.Reg* %2282, i32 0, i32 0
  %RSI.i1363 = bitcast %union.anon* %2283 to i64*
  %2284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2285 = getelementptr inbounds %struct.GPR, %struct.GPR* %2284, i32 0, i32 17
  %2286 = getelementptr inbounds %struct.Reg, %struct.Reg* %2285, i32 0, i32 0
  %R8.i1364 = bitcast %union.anon* %2286 to i64*
  %2287 = load i64, i64* %RSI.i1363
  %2288 = load i64, i64* %R8.i1364
  %2289 = load i64, i64* %PC.i1362
  %2290 = add i64 %2289, 3
  store i64 %2290, i64* %PC.i1362
  %2291 = add i64 %2288, %2287
  store i64 %2291, i64* %RSI.i1363, align 8
  %2292 = icmp ult i64 %2291, %2287
  %2293 = icmp ult i64 %2291, %2288
  %2294 = or i1 %2292, %2293
  %2295 = zext i1 %2294 to i8
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2295, i8* %2296, align 1
  %2297 = trunc i64 %2291 to i32
  %2298 = and i32 %2297, 255
  %2299 = call i32 @llvm.ctpop.i32(i32 %2298)
  %2300 = trunc i32 %2299 to i8
  %2301 = and i8 %2300, 1
  %2302 = xor i8 %2301, 1
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2302, i8* %2303, align 1
  %2304 = xor i64 %2288, %2287
  %2305 = xor i64 %2304, %2291
  %2306 = lshr i64 %2305, 4
  %2307 = trunc i64 %2306 to i8
  %2308 = and i8 %2307, 1
  %2309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2308, i8* %2309, align 1
  %2310 = icmp eq i64 %2291, 0
  %2311 = zext i1 %2310 to i8
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2311, i8* %2312, align 1
  %2313 = lshr i64 %2291, 63
  %2314 = trunc i64 %2313 to i8
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2314, i8* %2315, align 1
  %2316 = lshr i64 %2287, 63
  %2317 = lshr i64 %2288, 63
  %2318 = xor i64 %2313, %2316
  %2319 = xor i64 %2313, %2317
  %2320 = add i64 %2318, %2319
  %2321 = icmp eq i64 %2320, 2
  %2322 = zext i1 %2321 to i8
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2322, i8* %2323, align 1
  store %struct.Memory* %loadMem_489200, %struct.Memory** %MEMORY
  %loadMem_489203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2325 = getelementptr inbounds %struct.GPR, %struct.GPR* %2324, i32 0, i32 33
  %2326 = getelementptr inbounds %struct.Reg, %struct.Reg* %2325, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %2326 to i64*
  %2327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2328 = getelementptr inbounds %struct.GPR, %struct.GPR* %2327, i32 0, i32 15
  %2329 = getelementptr inbounds %struct.Reg, %struct.Reg* %2328, i32 0, i32 0
  %RBP.i1360 = bitcast %union.anon* %2329 to i64*
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2331 = getelementptr inbounds %struct.GPR, %struct.GPR* %2330, i32 0, i32 17
  %2332 = getelementptr inbounds %struct.Reg, %struct.Reg* %2331, i32 0, i32 0
  %R8.i1361 = bitcast %union.anon* %2332 to i64*
  %2333 = load i64, i64* %RBP.i1360
  %2334 = sub i64 %2333, 40
  %2335 = load i64, i64* %PC.i1359
  %2336 = add i64 %2335, 4
  store i64 %2336, i64* %PC.i1359
  %2337 = inttoptr i64 %2334 to i32*
  %2338 = load i32, i32* %2337
  %2339 = sext i32 %2338 to i64
  store i64 %2339, i64* %R8.i1361, align 8
  store %struct.Memory* %loadMem_489203, %struct.Memory** %MEMORY
  %loadMem_489207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2341 = getelementptr inbounds %struct.GPR, %struct.GPR* %2340, i32 0, i32 33
  %2342 = getelementptr inbounds %struct.Reg, %struct.Reg* %2341, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %2342 to i64*
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 19
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %R9D.i1356 = bitcast %union.anon* %2345 to i32*
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2347 = getelementptr inbounds %struct.GPR, %struct.GPR* %2346, i32 0, i32 9
  %2348 = getelementptr inbounds %struct.Reg, %struct.Reg* %2347, i32 0, i32 0
  %RSI.i1357 = bitcast %union.anon* %2348 to i64*
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2350 = getelementptr inbounds %struct.GPR, %struct.GPR* %2349, i32 0, i32 17
  %2351 = getelementptr inbounds %struct.Reg, %struct.Reg* %2350, i32 0, i32 0
  %R8.i1358 = bitcast %union.anon* %2351 to i64*
  %2352 = bitcast i32* %R9D.i1356 to i64*
  %2353 = load i64, i64* %RSI.i1357
  %2354 = load i64, i64* %R8.i1358
  %2355 = mul i64 %2354, 2
  %2356 = add i64 %2355, %2353
  %2357 = load i64, i64* %PC.i1355
  %2358 = add i64 %2357, 5
  store i64 %2358, i64* %PC.i1355
  %2359 = inttoptr i64 %2356 to i16*
  %2360 = load i16, i16* %2359
  %2361 = zext i16 %2360 to i64
  store i64 %2361, i64* %2352, align 8
  store %struct.Memory* %loadMem_489207, %struct.Memory** %MEMORY
  %loadMem_48920c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2363 = getelementptr inbounds %struct.GPR, %struct.GPR* %2362, i32 0, i32 33
  %2364 = getelementptr inbounds %struct.Reg, %struct.Reg* %2363, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %2364 to i64*
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2366 = getelementptr inbounds %struct.GPR, %struct.GPR* %2365, i32 0, i32 19
  %2367 = getelementptr inbounds %struct.Reg, %struct.Reg* %2366, i32 0, i32 0
  %R9D.i1353 = bitcast %union.anon* %2367 to i32*
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2369 = getelementptr inbounds %struct.GPR, %struct.GPR* %2368, i32 0, i32 11
  %2370 = getelementptr inbounds %struct.Reg, %struct.Reg* %2369, i32 0, i32 0
  %RDI.i1354 = bitcast %union.anon* %2370 to i64*
  %2371 = load i64, i64* %RDI.i1354
  %2372 = load i32, i32* %R9D.i1353
  %2373 = zext i32 %2372 to i64
  %2374 = load i64, i64* %PC.i1352
  %2375 = add i64 %2374, 3
  store i64 %2375, i64* %PC.i1352
  %2376 = trunc i64 %2371 to i32
  %2377 = sub i32 %2376, %2372
  %2378 = zext i32 %2377 to i64
  store i64 %2378, i64* %RDI.i1354, align 8
  %2379 = icmp ult i32 %2376, %2372
  %2380 = zext i1 %2379 to i8
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2380, i8* %2381, align 1
  %2382 = and i32 %2377, 255
  %2383 = call i32 @llvm.ctpop.i32(i32 %2382)
  %2384 = trunc i32 %2383 to i8
  %2385 = and i8 %2384, 1
  %2386 = xor i8 %2385, 1
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2386, i8* %2387, align 1
  %2388 = xor i64 %2373, %2371
  %2389 = trunc i64 %2388 to i32
  %2390 = xor i32 %2389, %2377
  %2391 = lshr i32 %2390, 4
  %2392 = trunc i32 %2391 to i8
  %2393 = and i8 %2392, 1
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2393, i8* %2394, align 1
  %2395 = icmp eq i32 %2377, 0
  %2396 = zext i1 %2395 to i8
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2396, i8* %2397, align 1
  %2398 = lshr i32 %2377, 31
  %2399 = trunc i32 %2398 to i8
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2399, i8* %2400, align 1
  %2401 = lshr i32 %2376, 31
  %2402 = lshr i32 %2372, 31
  %2403 = xor i32 %2402, %2401
  %2404 = xor i32 %2398, %2401
  %2405 = add i32 %2404, %2403
  %2406 = icmp eq i32 %2405, 2
  %2407 = zext i1 %2406 to i8
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2407, i8* %2408, align 1
  store %struct.Memory* %loadMem_48920c, %struct.Memory** %MEMORY
  %loadMem_48920f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2410 = getelementptr inbounds %struct.GPR, %struct.GPR* %2409, i32 0, i32 33
  %2411 = getelementptr inbounds %struct.Reg, %struct.Reg* %2410, i32 0, i32 0
  %PC.i1349 = bitcast %union.anon* %2411 to i64*
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2413 = getelementptr inbounds %struct.GPR, %struct.GPR* %2412, i32 0, i32 11
  %2414 = getelementptr inbounds %struct.Reg, %struct.Reg* %2413, i32 0, i32 0
  %EDI.i1350 = bitcast %union.anon* %2414 to i32*
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2416 = getelementptr inbounds %struct.GPR, %struct.GPR* %2415, i32 0, i32 15
  %2417 = getelementptr inbounds %struct.Reg, %struct.Reg* %2416, i32 0, i32 0
  %RBP.i1351 = bitcast %union.anon* %2417 to i64*
  %2418 = load i64, i64* %RBP.i1351
  %2419 = sub i64 %2418, 20
  %2420 = load i32, i32* %EDI.i1350
  %2421 = zext i32 %2420 to i64
  %2422 = load i64, i64* %PC.i1349
  %2423 = add i64 %2422, 3
  store i64 %2423, i64* %PC.i1349
  %2424 = inttoptr i64 %2419 to i32*
  store i32 %2420, i32* %2424
  store %struct.Memory* %loadMem_48920f, %struct.Memory** %MEMORY
  %loadMem_489212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2426 = getelementptr inbounds %struct.GPR, %struct.GPR* %2425, i32 0, i32 33
  %2427 = getelementptr inbounds %struct.Reg, %struct.Reg* %2426, i32 0, i32 0
  %PC.i1346 = bitcast %union.anon* %2427 to i64*
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2429 = getelementptr inbounds %struct.GPR, %struct.GPR* %2428, i32 0, i32 11
  %2430 = getelementptr inbounds %struct.Reg, %struct.Reg* %2429, i32 0, i32 0
  %RDI.i1347 = bitcast %union.anon* %2430 to i64*
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2432 = getelementptr inbounds %struct.GPR, %struct.GPR* %2431, i32 0, i32 15
  %2433 = getelementptr inbounds %struct.Reg, %struct.Reg* %2432, i32 0, i32 0
  %RBP.i1348 = bitcast %union.anon* %2433 to i64*
  %2434 = load i64, i64* %RBP.i1348
  %2435 = sub i64 %2434, 20
  %2436 = load i64, i64* %PC.i1346
  %2437 = add i64 %2436, 3
  store i64 %2437, i64* %PC.i1346
  %2438 = inttoptr i64 %2435 to i32*
  %2439 = load i32, i32* %2438
  %2440 = zext i32 %2439 to i64
  store i64 %2440, i64* %RDI.i1347, align 8
  store %struct.Memory* %loadMem_489212, %struct.Memory** %MEMORY
  %loadMem_489215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2442 = getelementptr inbounds %struct.GPR, %struct.GPR* %2441, i32 0, i32 33
  %2443 = getelementptr inbounds %struct.Reg, %struct.Reg* %2442, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %2443 to i64*
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2445 = getelementptr inbounds %struct.GPR, %struct.GPR* %2444, i32 0, i32 11
  %2446 = getelementptr inbounds %struct.Reg, %struct.Reg* %2445, i32 0, i32 0
  %RDI.i1344 = bitcast %union.anon* %2446 to i64*
  %2447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2448 = getelementptr inbounds %struct.GPR, %struct.GPR* %2447, i32 0, i32 15
  %2449 = getelementptr inbounds %struct.Reg, %struct.Reg* %2448, i32 0, i32 0
  %RBP.i1345 = bitcast %union.anon* %2449 to i64*
  %2450 = load i64, i64* %RDI.i1344
  %2451 = load i64, i64* %RBP.i1345
  %2452 = sub i64 %2451, 28
  %2453 = load i64, i64* %PC.i1343
  %2454 = add i64 %2453, 3
  store i64 %2454, i64* %PC.i1343
  %2455 = trunc i64 %2450 to i32
  %2456 = inttoptr i64 %2452 to i32*
  %2457 = load i32, i32* %2456
  %2458 = sub i32 %2455, %2457
  %2459 = zext i32 %2458 to i64
  store i64 %2459, i64* %RDI.i1344, align 8
  %2460 = icmp ult i32 %2455, %2457
  %2461 = zext i1 %2460 to i8
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2461, i8* %2462, align 1
  %2463 = and i32 %2458, 255
  %2464 = call i32 @llvm.ctpop.i32(i32 %2463)
  %2465 = trunc i32 %2464 to i8
  %2466 = and i8 %2465, 1
  %2467 = xor i8 %2466, 1
  %2468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2467, i8* %2468, align 1
  %2469 = xor i32 %2457, %2455
  %2470 = xor i32 %2469, %2458
  %2471 = lshr i32 %2470, 4
  %2472 = trunc i32 %2471 to i8
  %2473 = and i8 %2472, 1
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2473, i8* %2474, align 1
  %2475 = icmp eq i32 %2458, 0
  %2476 = zext i1 %2475 to i8
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2476, i8* %2477, align 1
  %2478 = lshr i32 %2458, 31
  %2479 = trunc i32 %2478 to i8
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2479, i8* %2480, align 1
  %2481 = lshr i32 %2455, 31
  %2482 = lshr i32 %2457, 31
  %2483 = xor i32 %2482, %2481
  %2484 = xor i32 %2478, %2481
  %2485 = add i32 %2484, %2483
  %2486 = icmp eq i32 %2485, 2
  %2487 = zext i1 %2486 to i8
  %2488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2487, i8* %2488, align 1
  store %struct.Memory* %loadMem_489215, %struct.Memory** %MEMORY
  %loadMem_489218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2490 = getelementptr inbounds %struct.GPR, %struct.GPR* %2489, i32 0, i32 33
  %2491 = getelementptr inbounds %struct.Reg, %struct.Reg* %2490, i32 0, i32 0
  %PC.i1340 = bitcast %union.anon* %2491 to i64*
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2493 = getelementptr inbounds %struct.GPR, %struct.GPR* %2492, i32 0, i32 9
  %2494 = getelementptr inbounds %struct.Reg, %struct.Reg* %2493, i32 0, i32 0
  %RSI.i1341 = bitcast %union.anon* %2494 to i64*
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2496 = getelementptr inbounds %struct.GPR, %struct.GPR* %2495, i32 0, i32 15
  %2497 = getelementptr inbounds %struct.Reg, %struct.Reg* %2496, i32 0, i32 0
  %RBP.i1342 = bitcast %union.anon* %2497 to i64*
  %2498 = load i64, i64* %RBP.i1342
  %2499 = sub i64 %2498, 36
  %2500 = load i64, i64* %PC.i1340
  %2501 = add i64 %2500, 4
  store i64 %2501, i64* %PC.i1340
  %2502 = inttoptr i64 %2499 to i32*
  %2503 = load i32, i32* %2502
  %2504 = sext i32 %2503 to i64
  store i64 %2504, i64* %RSI.i1341, align 8
  store %struct.Memory* %loadMem_489218, %struct.Memory** %MEMORY
  %loadMem_48921c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2506 = getelementptr inbounds %struct.GPR, %struct.GPR* %2505, i32 0, i32 33
  %2507 = getelementptr inbounds %struct.Reg, %struct.Reg* %2506, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %2507 to i64*
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2509 = getelementptr inbounds %struct.GPR, %struct.GPR* %2508, i32 0, i32 9
  %2510 = getelementptr inbounds %struct.Reg, %struct.Reg* %2509, i32 0, i32 0
  %RSI.i1339 = bitcast %union.anon* %2510 to i64*
  %2511 = load i64, i64* %RSI.i1339
  %2512 = load i64, i64* %PC.i1338
  %2513 = add i64 %2512, 4
  store i64 %2513, i64* %PC.i1338
  %2514 = shl i64 %2511, 5
  %2515 = icmp slt i64 %2514, 0
  %2516 = shl i64 %2514, 1
  store i64 %2516, i64* %RSI.i1339, align 8
  %2517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2518 = zext i1 %2515 to i8
  store i8 %2518, i8* %2517, align 1
  %2519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2520 = trunc i64 %2516 to i32
  %2521 = and i32 %2520, 254
  %2522 = call i32 @llvm.ctpop.i32(i32 %2521)
  %2523 = trunc i32 %2522 to i8
  %2524 = and i8 %2523, 1
  %2525 = xor i8 %2524, 1
  store i8 %2525, i8* %2519, align 1
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2526, align 1
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2528 = icmp eq i64 %2516, 0
  %2529 = zext i1 %2528 to i8
  store i8 %2529, i8* %2527, align 1
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2531 = lshr i64 %2516, 63
  %2532 = trunc i64 %2531 to i8
  store i8 %2532, i8* %2530, align 1
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2533, align 1
  store %struct.Memory* %loadMem_48921c, %struct.Memory** %MEMORY
  %loadMem_489220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2535 = getelementptr inbounds %struct.GPR, %struct.GPR* %2534, i32 0, i32 33
  %2536 = getelementptr inbounds %struct.Reg, %struct.Reg* %2535, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %2536 to i64*
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2538 = getelementptr inbounds %struct.GPR, %struct.GPR* %2537, i32 0, i32 7
  %2539 = getelementptr inbounds %struct.Reg, %struct.Reg* %2538, i32 0, i32 0
  %RDX.i1336 = bitcast %union.anon* %2539 to i64*
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2541 = getelementptr inbounds %struct.GPR, %struct.GPR* %2540, i32 0, i32 17
  %2542 = getelementptr inbounds %struct.Reg, %struct.Reg* %2541, i32 0, i32 0
  %R8.i1337 = bitcast %union.anon* %2542 to i64*
  %2543 = load i64, i64* %RDX.i1336
  %2544 = load i64, i64* %PC.i1335
  %2545 = add i64 %2544, 3
  store i64 %2545, i64* %PC.i1335
  store i64 %2543, i64* %R8.i1337, align 8
  store %struct.Memory* %loadMem_489220, %struct.Memory** %MEMORY
  %loadMem_489223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2547 = getelementptr inbounds %struct.GPR, %struct.GPR* %2546, i32 0, i32 33
  %2548 = getelementptr inbounds %struct.Reg, %struct.Reg* %2547, i32 0, i32 0
  %PC.i1332 = bitcast %union.anon* %2548 to i64*
  %2549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2550 = getelementptr inbounds %struct.GPR, %struct.GPR* %2549, i32 0, i32 9
  %2551 = getelementptr inbounds %struct.Reg, %struct.Reg* %2550, i32 0, i32 0
  %RSI.i1333 = bitcast %union.anon* %2551 to i64*
  %2552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2553 = getelementptr inbounds %struct.GPR, %struct.GPR* %2552, i32 0, i32 17
  %2554 = getelementptr inbounds %struct.Reg, %struct.Reg* %2553, i32 0, i32 0
  %R8.i1334 = bitcast %union.anon* %2554 to i64*
  %2555 = load i64, i64* %R8.i1334
  %2556 = load i64, i64* %RSI.i1333
  %2557 = load i64, i64* %PC.i1332
  %2558 = add i64 %2557, 3
  store i64 %2558, i64* %PC.i1332
  %2559 = add i64 %2556, %2555
  store i64 %2559, i64* %R8.i1334, align 8
  %2560 = icmp ult i64 %2559, %2555
  %2561 = icmp ult i64 %2559, %2556
  %2562 = or i1 %2560, %2561
  %2563 = zext i1 %2562 to i8
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2563, i8* %2564, align 1
  %2565 = trunc i64 %2559 to i32
  %2566 = and i32 %2565, 255
  %2567 = call i32 @llvm.ctpop.i32(i32 %2566)
  %2568 = trunc i32 %2567 to i8
  %2569 = and i8 %2568, 1
  %2570 = xor i8 %2569, 1
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2570, i8* %2571, align 1
  %2572 = xor i64 %2556, %2555
  %2573 = xor i64 %2572, %2559
  %2574 = lshr i64 %2573, 4
  %2575 = trunc i64 %2574 to i8
  %2576 = and i8 %2575, 1
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2576, i8* %2577, align 1
  %2578 = icmp eq i64 %2559, 0
  %2579 = zext i1 %2578 to i8
  %2580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2579, i8* %2580, align 1
  %2581 = lshr i64 %2559, 63
  %2582 = trunc i64 %2581 to i8
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2582, i8* %2583, align 1
  %2584 = lshr i64 %2555, 63
  %2585 = lshr i64 %2556, 63
  %2586 = xor i64 %2581, %2584
  %2587 = xor i64 %2581, %2585
  %2588 = add i64 %2586, %2587
  %2589 = icmp eq i64 %2588, 2
  %2590 = zext i1 %2589 to i8
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2590, i8* %2591, align 1
  store %struct.Memory* %loadMem_489223, %struct.Memory** %MEMORY
  %loadMem_489226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2593 = getelementptr inbounds %struct.GPR, %struct.GPR* %2592, i32 0, i32 33
  %2594 = getelementptr inbounds %struct.Reg, %struct.Reg* %2593, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %2594 to i64*
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2596 = getelementptr inbounds %struct.GPR, %struct.GPR* %2595, i32 0, i32 9
  %2597 = getelementptr inbounds %struct.Reg, %struct.Reg* %2596, i32 0, i32 0
  %RSI.i1330 = bitcast %union.anon* %2597 to i64*
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2599 = getelementptr inbounds %struct.GPR, %struct.GPR* %2598, i32 0, i32 15
  %2600 = getelementptr inbounds %struct.Reg, %struct.Reg* %2599, i32 0, i32 0
  %RBP.i1331 = bitcast %union.anon* %2600 to i64*
  %2601 = load i64, i64* %RBP.i1331
  %2602 = sub i64 %2601, 40
  %2603 = load i64, i64* %PC.i1329
  %2604 = add i64 %2603, 4
  store i64 %2604, i64* %PC.i1329
  %2605 = inttoptr i64 %2602 to i32*
  %2606 = load i32, i32* %2605
  %2607 = sext i32 %2606 to i64
  store i64 %2607, i64* %RSI.i1330, align 8
  store %struct.Memory* %loadMem_489226, %struct.Memory** %MEMORY
  %loadMem_48922a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2609 = getelementptr inbounds %struct.GPR, %struct.GPR* %2608, i32 0, i32 33
  %2610 = getelementptr inbounds %struct.Reg, %struct.Reg* %2609, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %2610 to i64*
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2612 = getelementptr inbounds %struct.GPR, %struct.GPR* %2611, i32 0, i32 11
  %2613 = getelementptr inbounds %struct.Reg, %struct.Reg* %2612, i32 0, i32 0
  %EDI.i1327 = bitcast %union.anon* %2613 to i32*
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2615 = getelementptr inbounds %struct.GPR, %struct.GPR* %2614, i32 0, i32 9
  %2616 = getelementptr inbounds %struct.Reg, %struct.Reg* %2615, i32 0, i32 0
  %RSI.i1328 = bitcast %union.anon* %2616 to i64*
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2618 = getelementptr inbounds %struct.GPR, %struct.GPR* %2617, i32 0, i32 17
  %2619 = getelementptr inbounds %struct.Reg, %struct.Reg* %2618, i32 0, i32 0
  %R8.i = bitcast %union.anon* %2619 to i64*
  %2620 = load i64, i64* %R8.i
  %2621 = load i64, i64* %RSI.i1328
  %2622 = mul i64 %2621, 4
  %2623 = add i64 %2622, %2620
  %2624 = load i32, i32* %EDI.i1327
  %2625 = zext i32 %2624 to i64
  %2626 = load i64, i64* %PC.i1326
  %2627 = add i64 %2626, 4
  store i64 %2627, i64* %PC.i1326
  %2628 = inttoptr i64 %2623 to i32*
  store i32 %2624, i32* %2628
  store %struct.Memory* %loadMem_48922a, %struct.Memory** %MEMORY
  %loadMem_48922e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2630 = getelementptr inbounds %struct.GPR, %struct.GPR* %2629, i32 0, i32 33
  %2631 = getelementptr inbounds %struct.Reg, %struct.Reg* %2630, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %2631 to i64*
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 11
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %RDI.i1324 = bitcast %union.anon* %2634 to i64*
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2636 = getelementptr inbounds %struct.GPR, %struct.GPR* %2635, i32 0, i32 15
  %2637 = getelementptr inbounds %struct.Reg, %struct.Reg* %2636, i32 0, i32 0
  %RBP.i1325 = bitcast %union.anon* %2637 to i64*
  %2638 = load i64, i64* %RBP.i1325
  %2639 = sub i64 %2638, 28
  %2640 = load i64, i64* %PC.i1323
  %2641 = add i64 %2640, 3
  store i64 %2641, i64* %PC.i1323
  %2642 = inttoptr i64 %2639 to i32*
  %2643 = load i32, i32* %2642
  %2644 = zext i32 %2643 to i64
  store i64 %2644, i64* %RDI.i1324, align 8
  store %struct.Memory* %loadMem_48922e, %struct.Memory** %MEMORY
  %loadMem_489231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2646 = getelementptr inbounds %struct.GPR, %struct.GPR* %2645, i32 0, i32 33
  %2647 = getelementptr inbounds %struct.Reg, %struct.Reg* %2646, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %2647 to i64*
  %2648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2649 = getelementptr inbounds %struct.GPR, %struct.GPR* %2648, i32 0, i32 9
  %2650 = getelementptr inbounds %struct.Reg, %struct.Reg* %2649, i32 0, i32 0
  %RSI.i1321 = bitcast %union.anon* %2650 to i64*
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2652 = getelementptr inbounds %struct.GPR, %struct.GPR* %2651, i32 0, i32 15
  %2653 = getelementptr inbounds %struct.Reg, %struct.Reg* %2652, i32 0, i32 0
  %RBP.i1322 = bitcast %union.anon* %2653 to i64*
  %2654 = load i64, i64* %RBP.i1322
  %2655 = sub i64 %2654, 36
  %2656 = load i64, i64* %PC.i1320
  %2657 = add i64 %2656, 4
  store i64 %2657, i64* %PC.i1320
  %2658 = inttoptr i64 %2655 to i32*
  %2659 = load i32, i32* %2658
  %2660 = sext i32 %2659 to i64
  store i64 %2660, i64* %RSI.i1321, align 8
  store %struct.Memory* %loadMem_489231, %struct.Memory** %MEMORY
  %loadMem_489235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2662 = getelementptr inbounds %struct.GPR, %struct.GPR* %2661, i32 0, i32 33
  %2663 = getelementptr inbounds %struct.Reg, %struct.Reg* %2662, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %2663 to i64*
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2665 = getelementptr inbounds %struct.GPR, %struct.GPR* %2664, i32 0, i32 9
  %2666 = getelementptr inbounds %struct.Reg, %struct.Reg* %2665, i32 0, i32 0
  %RSI.i1319 = bitcast %union.anon* %2666 to i64*
  %2667 = load i64, i64* %RSI.i1319
  %2668 = load i64, i64* %PC.i1318
  %2669 = add i64 %2668, 4
  store i64 %2669, i64* %PC.i1318
  %2670 = shl i64 %2667, 5
  %2671 = icmp slt i64 %2670, 0
  %2672 = shl i64 %2670, 1
  store i64 %2672, i64* %RSI.i1319, align 8
  %2673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2674 = zext i1 %2671 to i8
  store i8 %2674, i8* %2673, align 1
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2676 = trunc i64 %2672 to i32
  %2677 = and i32 %2676, 254
  %2678 = call i32 @llvm.ctpop.i32(i32 %2677)
  %2679 = trunc i32 %2678 to i8
  %2680 = and i8 %2679, 1
  %2681 = xor i8 %2680, 1
  store i8 %2681, i8* %2675, align 1
  %2682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2682, align 1
  %2683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2684 = icmp eq i64 %2672, 0
  %2685 = zext i1 %2684 to i8
  store i8 %2685, i8* %2683, align 1
  %2686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2687 = lshr i64 %2672, 63
  %2688 = trunc i64 %2687 to i8
  store i8 %2688, i8* %2686, align 1
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2689, align 1
  store %struct.Memory* %loadMem_489235, %struct.Memory** %MEMORY
  %loadMem_489239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2691 = getelementptr inbounds %struct.GPR, %struct.GPR* %2690, i32 0, i32 33
  %2692 = getelementptr inbounds %struct.Reg, %struct.Reg* %2691, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %2692 to i64*
  %2693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2694 = getelementptr inbounds %struct.GPR, %struct.GPR* %2693, i32 0, i32 7
  %2695 = getelementptr inbounds %struct.Reg, %struct.Reg* %2694, i32 0, i32 0
  %RDX.i1316 = bitcast %union.anon* %2695 to i64*
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2697 = getelementptr inbounds %struct.GPR, %struct.GPR* %2696, i32 0, i32 9
  %2698 = getelementptr inbounds %struct.Reg, %struct.Reg* %2697, i32 0, i32 0
  %RSI.i1317 = bitcast %union.anon* %2698 to i64*
  %2699 = load i64, i64* %RDX.i1316
  %2700 = load i64, i64* %RSI.i1317
  %2701 = load i64, i64* %PC.i1315
  %2702 = add i64 %2701, 3
  store i64 %2702, i64* %PC.i1315
  %2703 = add i64 %2700, %2699
  store i64 %2703, i64* %RDX.i1316, align 8
  %2704 = icmp ult i64 %2703, %2699
  %2705 = icmp ult i64 %2703, %2700
  %2706 = or i1 %2704, %2705
  %2707 = zext i1 %2706 to i8
  %2708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2707, i8* %2708, align 1
  %2709 = trunc i64 %2703 to i32
  %2710 = and i32 %2709, 255
  %2711 = call i32 @llvm.ctpop.i32(i32 %2710)
  %2712 = trunc i32 %2711 to i8
  %2713 = and i8 %2712, 1
  %2714 = xor i8 %2713, 1
  %2715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2714, i8* %2715, align 1
  %2716 = xor i64 %2700, %2699
  %2717 = xor i64 %2716, %2703
  %2718 = lshr i64 %2717, 4
  %2719 = trunc i64 %2718 to i8
  %2720 = and i8 %2719, 1
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2720, i8* %2721, align 1
  %2722 = icmp eq i64 %2703, 0
  %2723 = zext i1 %2722 to i8
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2723, i8* %2724, align 1
  %2725 = lshr i64 %2703, 63
  %2726 = trunc i64 %2725 to i8
  %2727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2726, i8* %2727, align 1
  %2728 = lshr i64 %2699, 63
  %2729 = lshr i64 %2700, 63
  %2730 = xor i64 %2725, %2728
  %2731 = xor i64 %2725, %2729
  %2732 = add i64 %2730, %2731
  %2733 = icmp eq i64 %2732, 2
  %2734 = zext i1 %2733 to i8
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2734, i8* %2735, align 1
  store %struct.Memory* %loadMem_489239, %struct.Memory** %MEMORY
  %loadMem_48923c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2737 = getelementptr inbounds %struct.GPR, %struct.GPR* %2736, i32 0, i32 33
  %2738 = getelementptr inbounds %struct.Reg, %struct.Reg* %2737, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %2738 to i64*
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2740 = getelementptr inbounds %struct.GPR, %struct.GPR* %2739, i32 0, i32 9
  %2741 = getelementptr inbounds %struct.Reg, %struct.Reg* %2740, i32 0, i32 0
  %RSI.i1313 = bitcast %union.anon* %2741 to i64*
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2743 = getelementptr inbounds %struct.GPR, %struct.GPR* %2742, i32 0, i32 15
  %2744 = getelementptr inbounds %struct.Reg, %struct.Reg* %2743, i32 0, i32 0
  %RBP.i1314 = bitcast %union.anon* %2744 to i64*
  %2745 = load i64, i64* %RBP.i1314
  %2746 = sub i64 %2745, 40
  %2747 = load i64, i64* %PC.i1312
  %2748 = add i64 %2747, 4
  store i64 %2748, i64* %PC.i1312
  %2749 = inttoptr i64 %2746 to i32*
  %2750 = load i32, i32* %2749
  %2751 = sext i32 %2750 to i64
  store i64 %2751, i64* %RSI.i1313, align 8
  store %struct.Memory* %loadMem_48923c, %struct.Memory** %MEMORY
  %loadMem_489240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2753 = getelementptr inbounds %struct.GPR, %struct.GPR* %2752, i32 0, i32 33
  %2754 = getelementptr inbounds %struct.Reg, %struct.Reg* %2753, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %2754 to i64*
  %2755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2756 = getelementptr inbounds %struct.GPR, %struct.GPR* %2755, i32 0, i32 19
  %2757 = getelementptr inbounds %struct.Reg, %struct.Reg* %2756, i32 0, i32 0
  %R9D.i1309 = bitcast %union.anon* %2757 to i32*
  %2758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2759 = getelementptr inbounds %struct.GPR, %struct.GPR* %2758, i32 0, i32 7
  %2760 = getelementptr inbounds %struct.Reg, %struct.Reg* %2759, i32 0, i32 0
  %RDX.i1310 = bitcast %union.anon* %2760 to i64*
  %2761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2762 = getelementptr inbounds %struct.GPR, %struct.GPR* %2761, i32 0, i32 9
  %2763 = getelementptr inbounds %struct.Reg, %struct.Reg* %2762, i32 0, i32 0
  %RSI.i1311 = bitcast %union.anon* %2763 to i64*
  %2764 = bitcast i32* %R9D.i1309 to i64*
  %2765 = load i64, i64* %RDX.i1310
  %2766 = load i64, i64* %RSI.i1311
  %2767 = mul i64 %2766, 4
  %2768 = add i64 %2767, %2765
  %2769 = load i64, i64* %PC.i1308
  %2770 = add i64 %2769, 4
  store i64 %2770, i64* %PC.i1308
  %2771 = inttoptr i64 %2768 to i32*
  %2772 = load i32, i32* %2771
  %2773 = zext i32 %2772 to i64
  store i64 %2773, i64* %2764, align 8
  store %struct.Memory* %loadMem_489240, %struct.Memory** %MEMORY
  %loadMem_489244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2775 = getelementptr inbounds %struct.GPR, %struct.GPR* %2774, i32 0, i32 33
  %2776 = getelementptr inbounds %struct.Reg, %struct.Reg* %2775, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %2776 to i64*
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2778 = getelementptr inbounds %struct.GPR, %struct.GPR* %2777, i32 0, i32 19
  %2779 = getelementptr inbounds %struct.Reg, %struct.Reg* %2778, i32 0, i32 0
  %R9D.i1307 = bitcast %union.anon* %2779 to i32*
  %2780 = bitcast i32* %R9D.i1307 to i64*
  %2781 = load i32, i32* %R9D.i1307
  %2782 = zext i32 %2781 to i64
  %2783 = load i64, i64* %PC.i1306
  %2784 = add i64 %2783, 3
  store i64 %2784, i64* %PC.i1306
  %2785 = shl i64 %2782, 32
  %2786 = ashr i64 %2785, 33
  %2787 = trunc i64 %2782 to i8
  %2788 = and i8 %2787, 1
  %2789 = trunc i64 %2786 to i32
  %2790 = and i64 %2786, 4294967295
  store i64 %2790, i64* %2780, align 8
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2788, i8* %2791, align 1
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2793 = and i32 %2789, 255
  %2794 = call i32 @llvm.ctpop.i32(i32 %2793)
  %2795 = trunc i32 %2794 to i8
  %2796 = and i8 %2795, 1
  %2797 = xor i8 %2796, 1
  store i8 %2797, i8* %2792, align 1
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2798, align 1
  %2799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2800 = icmp eq i32 %2789, 0
  %2801 = zext i1 %2800 to i8
  store i8 %2801, i8* %2799, align 1
  %2802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2803 = lshr i32 %2789, 31
  %2804 = trunc i32 %2803 to i8
  store i8 %2804, i8* %2802, align 1
  %2805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2805, align 1
  store %struct.Memory* %loadMem_489244, %struct.Memory** %MEMORY
  %loadMem_489248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2807 = getelementptr inbounds %struct.GPR, %struct.GPR* %2806, i32 0, i32 33
  %2808 = getelementptr inbounds %struct.Reg, %struct.Reg* %2807, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %2808 to i64*
  %2809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2810 = getelementptr inbounds %struct.GPR, %struct.GPR* %2809, i32 0, i32 19
  %2811 = getelementptr inbounds %struct.Reg, %struct.Reg* %2810, i32 0, i32 0
  %R9D.i1304 = bitcast %union.anon* %2811 to i32*
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2813 = getelementptr inbounds %struct.GPR, %struct.GPR* %2812, i32 0, i32 11
  %2814 = getelementptr inbounds %struct.Reg, %struct.Reg* %2813, i32 0, i32 0
  %RDI.i1305 = bitcast %union.anon* %2814 to i64*
  %2815 = load i64, i64* %RDI.i1305
  %2816 = load i32, i32* %R9D.i1304
  %2817 = zext i32 %2816 to i64
  %2818 = load i64, i64* %PC.i1303
  %2819 = add i64 %2818, 3
  store i64 %2819, i64* %PC.i1303
  %2820 = trunc i64 %2815 to i32
  %2821 = add i32 %2816, %2820
  %2822 = zext i32 %2821 to i64
  store i64 %2822, i64* %RDI.i1305, align 8
  %2823 = icmp ult i32 %2821, %2820
  %2824 = icmp ult i32 %2821, %2816
  %2825 = or i1 %2823, %2824
  %2826 = zext i1 %2825 to i8
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2826, i8* %2827, align 1
  %2828 = and i32 %2821, 255
  %2829 = call i32 @llvm.ctpop.i32(i32 %2828)
  %2830 = trunc i32 %2829 to i8
  %2831 = and i8 %2830, 1
  %2832 = xor i8 %2831, 1
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2832, i8* %2833, align 1
  %2834 = xor i64 %2817, %2815
  %2835 = trunc i64 %2834 to i32
  %2836 = xor i32 %2835, %2821
  %2837 = lshr i32 %2836, 4
  %2838 = trunc i32 %2837 to i8
  %2839 = and i8 %2838, 1
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2839, i8* %2840, align 1
  %2841 = icmp eq i32 %2821, 0
  %2842 = zext i1 %2841 to i8
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2842, i8* %2843, align 1
  %2844 = lshr i32 %2821, 31
  %2845 = trunc i32 %2844 to i8
  %2846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2845, i8* %2846, align 1
  %2847 = lshr i32 %2820, 31
  %2848 = lshr i32 %2816, 31
  %2849 = xor i32 %2844, %2847
  %2850 = xor i32 %2844, %2848
  %2851 = add i32 %2849, %2850
  %2852 = icmp eq i32 %2851, 2
  %2853 = zext i1 %2852 to i8
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2853, i8* %2854, align 1
  store %struct.Memory* %loadMem_489248, %struct.Memory** %MEMORY
  %loadMem_48924b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2856 = getelementptr inbounds %struct.GPR, %struct.GPR* %2855, i32 0, i32 33
  %2857 = getelementptr inbounds %struct.Reg, %struct.Reg* %2856, i32 0, i32 0
  %PC.i1300 = bitcast %union.anon* %2857 to i64*
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2859 = getelementptr inbounds %struct.GPR, %struct.GPR* %2858, i32 0, i32 11
  %2860 = getelementptr inbounds %struct.Reg, %struct.Reg* %2859, i32 0, i32 0
  %EDI.i1301 = bitcast %union.anon* %2860 to i32*
  %2861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2862 = getelementptr inbounds %struct.GPR, %struct.GPR* %2861, i32 0, i32 15
  %2863 = getelementptr inbounds %struct.Reg, %struct.Reg* %2862, i32 0, i32 0
  %RBP.i1302 = bitcast %union.anon* %2863 to i64*
  %2864 = load i64, i64* %RBP.i1302
  %2865 = sub i64 %2864, 44
  %2866 = load i32, i32* %EDI.i1301
  %2867 = zext i32 %2866 to i64
  %2868 = load i64, i64* %PC.i1300
  %2869 = add i64 %2868, 3
  store i64 %2869, i64* %PC.i1300
  %2870 = inttoptr i64 %2865 to i32*
  store i32 %2866, i32* %2870
  store %struct.Memory* %loadMem_48924b, %struct.Memory** %MEMORY
  %loadMem_48924e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2872 = getelementptr inbounds %struct.GPR, %struct.GPR* %2871, i32 0, i32 33
  %2873 = getelementptr inbounds %struct.Reg, %struct.Reg* %2872, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %2873 to i64*
  %2874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2875 = getelementptr inbounds %struct.GPR, %struct.GPR* %2874, i32 0, i32 11
  %2876 = getelementptr inbounds %struct.Reg, %struct.Reg* %2875, i32 0, i32 0
  %RDI.i1298 = bitcast %union.anon* %2876 to i64*
  %2877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2878 = getelementptr inbounds %struct.GPR, %struct.GPR* %2877, i32 0, i32 15
  %2879 = getelementptr inbounds %struct.Reg, %struct.Reg* %2878, i32 0, i32 0
  %RBP.i1299 = bitcast %union.anon* %2879 to i64*
  %2880 = load i64, i64* %RBP.i1299
  %2881 = sub i64 %2880, 24
  %2882 = load i64, i64* %PC.i1297
  %2883 = add i64 %2882, 3
  store i64 %2883, i64* %PC.i1297
  %2884 = inttoptr i64 %2881 to i32*
  %2885 = load i32, i32* %2884
  %2886 = zext i32 %2885 to i64
  store i64 %2886, i64* %RDI.i1298, align 8
  store %struct.Memory* %loadMem_48924e, %struct.Memory** %MEMORY
  %loadMem_489251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2888 = getelementptr inbounds %struct.GPR, %struct.GPR* %2887, i32 0, i32 33
  %2889 = getelementptr inbounds %struct.Reg, %struct.Reg* %2888, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %2889 to i64*
  %2890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2891 = getelementptr inbounds %struct.GPR, %struct.GPR* %2890, i32 0, i32 11
  %2892 = getelementptr inbounds %struct.Reg, %struct.Reg* %2891, i32 0, i32 0
  %RDI.i1295 = bitcast %union.anon* %2892 to i64*
  %2893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2894 = getelementptr inbounds %struct.GPR, %struct.GPR* %2893, i32 0, i32 15
  %2895 = getelementptr inbounds %struct.Reg, %struct.Reg* %2894, i32 0, i32 0
  %RBP.i1296 = bitcast %union.anon* %2895 to i64*
  %2896 = load i64, i64* %RDI.i1295
  %2897 = load i64, i64* %RBP.i1296
  %2898 = sub i64 %2897, 44
  %2899 = load i64, i64* %PC.i1294
  %2900 = add i64 %2899, 3
  store i64 %2900, i64* %PC.i1294
  %2901 = trunc i64 %2896 to i32
  %2902 = inttoptr i64 %2898 to i32*
  %2903 = load i32, i32* %2902
  %2904 = sub i32 %2901, %2903
  %2905 = zext i32 %2904 to i64
  store i64 %2905, i64* %RDI.i1295, align 8
  %2906 = icmp ult i32 %2901, %2903
  %2907 = zext i1 %2906 to i8
  %2908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2907, i8* %2908, align 1
  %2909 = and i32 %2904, 255
  %2910 = call i32 @llvm.ctpop.i32(i32 %2909)
  %2911 = trunc i32 %2910 to i8
  %2912 = and i8 %2911, 1
  %2913 = xor i8 %2912, 1
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2913, i8* %2914, align 1
  %2915 = xor i32 %2903, %2901
  %2916 = xor i32 %2915, %2904
  %2917 = lshr i32 %2916, 4
  %2918 = trunc i32 %2917 to i8
  %2919 = and i8 %2918, 1
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2919, i8* %2920, align 1
  %2921 = icmp eq i32 %2904, 0
  %2922 = zext i1 %2921 to i8
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2922, i8* %2923, align 1
  %2924 = lshr i32 %2904, 31
  %2925 = trunc i32 %2924 to i8
  %2926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2925, i8* %2926, align 1
  %2927 = lshr i32 %2901, 31
  %2928 = lshr i32 %2903, 31
  %2929 = xor i32 %2928, %2927
  %2930 = xor i32 %2924, %2927
  %2931 = add i32 %2930, %2929
  %2932 = icmp eq i32 %2931, 2
  %2933 = zext i1 %2932 to i8
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2933, i8* %2934, align 1
  store %struct.Memory* %loadMem_489251, %struct.Memory** %MEMORY
  %loadMem_489254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2936 = getelementptr inbounds %struct.GPR, %struct.GPR* %2935, i32 0, i32 33
  %2937 = getelementptr inbounds %struct.Reg, %struct.Reg* %2936, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %2937 to i64*
  %2938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2939 = getelementptr inbounds %struct.GPR, %struct.GPR* %2938, i32 0, i32 7
  %2940 = getelementptr inbounds %struct.Reg, %struct.Reg* %2939, i32 0, i32 0
  %RDX.i1292 = bitcast %union.anon* %2940 to i64*
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2942 = getelementptr inbounds %struct.GPR, %struct.GPR* %2941, i32 0, i32 15
  %2943 = getelementptr inbounds %struct.Reg, %struct.Reg* %2942, i32 0, i32 0
  %RBP.i1293 = bitcast %union.anon* %2943 to i64*
  %2944 = load i64, i64* %RBP.i1293
  %2945 = sub i64 %2944, 36
  %2946 = load i64, i64* %PC.i1291
  %2947 = add i64 %2946, 4
  store i64 %2947, i64* %PC.i1291
  %2948 = inttoptr i64 %2945 to i32*
  %2949 = load i32, i32* %2948
  %2950 = sext i32 %2949 to i64
  store i64 %2950, i64* %RDX.i1292, align 8
  store %struct.Memory* %loadMem_489254, %struct.Memory** %MEMORY
  %loadMem_489258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2952 = getelementptr inbounds %struct.GPR, %struct.GPR* %2951, i32 0, i32 33
  %2953 = getelementptr inbounds %struct.Reg, %struct.Reg* %2952, i32 0, i32 0
  %PC.i1289 = bitcast %union.anon* %2953 to i64*
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 7
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %RDX.i1290 = bitcast %union.anon* %2956 to i64*
  %2957 = load i64, i64* %RDX.i1290
  %2958 = load i64, i64* %PC.i1289
  %2959 = add i64 %2958, 4
  store i64 %2959, i64* %PC.i1289
  %2960 = shl i64 %2957, 5
  %2961 = icmp slt i64 %2960, 0
  %2962 = shl i64 %2960, 1
  store i64 %2962, i64* %RDX.i1290, align 8
  %2963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2964 = zext i1 %2961 to i8
  store i8 %2964, i8* %2963, align 1
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2966 = trunc i64 %2962 to i32
  %2967 = and i32 %2966, 254
  %2968 = call i32 @llvm.ctpop.i32(i32 %2967)
  %2969 = trunc i32 %2968 to i8
  %2970 = and i8 %2969, 1
  %2971 = xor i8 %2970, 1
  store i8 %2971, i8* %2965, align 1
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2972, align 1
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2974 = icmp eq i64 %2962, 0
  %2975 = zext i1 %2974 to i8
  store i8 %2975, i8* %2973, align 1
  %2976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2977 = lshr i64 %2962, 63
  %2978 = trunc i64 %2977 to i8
  store i8 %2978, i8* %2976, align 1
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2979, align 1
  store %struct.Memory* %loadMem_489258, %struct.Memory** %MEMORY
  %loadMem_48925c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2981 = getelementptr inbounds %struct.GPR, %struct.GPR* %2980, i32 0, i32 33
  %2982 = getelementptr inbounds %struct.Reg, %struct.Reg* %2981, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %2982 to i64*
  %2983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2984 = getelementptr inbounds %struct.GPR, %struct.GPR* %2983, i32 0, i32 5
  %2985 = getelementptr inbounds %struct.Reg, %struct.Reg* %2984, i32 0, i32 0
  %RCX.i1287 = bitcast %union.anon* %2985 to i64*
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2987 = getelementptr inbounds %struct.GPR, %struct.GPR* %2986, i32 0, i32 9
  %2988 = getelementptr inbounds %struct.Reg, %struct.Reg* %2987, i32 0, i32 0
  %RSI.i1288 = bitcast %union.anon* %2988 to i64*
  %2989 = load i64, i64* %RCX.i1287
  %2990 = load i64, i64* %PC.i1286
  %2991 = add i64 %2990, 3
  store i64 %2991, i64* %PC.i1286
  store i64 %2989, i64* %RSI.i1288, align 8
  store %struct.Memory* %loadMem_48925c, %struct.Memory** %MEMORY
  %loadMem_48925f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2993 = getelementptr inbounds %struct.GPR, %struct.GPR* %2992, i32 0, i32 33
  %2994 = getelementptr inbounds %struct.Reg, %struct.Reg* %2993, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %2994 to i64*
  %2995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2996 = getelementptr inbounds %struct.GPR, %struct.GPR* %2995, i32 0, i32 7
  %2997 = getelementptr inbounds %struct.Reg, %struct.Reg* %2996, i32 0, i32 0
  %RDX.i1284 = bitcast %union.anon* %2997 to i64*
  %2998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2999 = getelementptr inbounds %struct.GPR, %struct.GPR* %2998, i32 0, i32 9
  %3000 = getelementptr inbounds %struct.Reg, %struct.Reg* %2999, i32 0, i32 0
  %RSI.i1285 = bitcast %union.anon* %3000 to i64*
  %3001 = load i64, i64* %RSI.i1285
  %3002 = load i64, i64* %RDX.i1284
  %3003 = load i64, i64* %PC.i1283
  %3004 = add i64 %3003, 3
  store i64 %3004, i64* %PC.i1283
  %3005 = add i64 %3002, %3001
  store i64 %3005, i64* %RSI.i1285, align 8
  %3006 = icmp ult i64 %3005, %3001
  %3007 = icmp ult i64 %3005, %3002
  %3008 = or i1 %3006, %3007
  %3009 = zext i1 %3008 to i8
  %3010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3009, i8* %3010, align 1
  %3011 = trunc i64 %3005 to i32
  %3012 = and i32 %3011, 255
  %3013 = call i32 @llvm.ctpop.i32(i32 %3012)
  %3014 = trunc i32 %3013 to i8
  %3015 = and i8 %3014, 1
  %3016 = xor i8 %3015, 1
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3016, i8* %3017, align 1
  %3018 = xor i64 %3002, %3001
  %3019 = xor i64 %3018, %3005
  %3020 = lshr i64 %3019, 4
  %3021 = trunc i64 %3020 to i8
  %3022 = and i8 %3021, 1
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3022, i8* %3023, align 1
  %3024 = icmp eq i64 %3005, 0
  %3025 = zext i1 %3024 to i8
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3025, i8* %3026, align 1
  %3027 = lshr i64 %3005, 63
  %3028 = trunc i64 %3027 to i8
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3028, i8* %3029, align 1
  %3030 = lshr i64 %3001, 63
  %3031 = lshr i64 %3002, 63
  %3032 = xor i64 %3027, %3030
  %3033 = xor i64 %3027, %3031
  %3034 = add i64 %3032, %3033
  %3035 = icmp eq i64 %3034, 2
  %3036 = zext i1 %3035 to i8
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3036, i8* %3037, align 1
  store %struct.Memory* %loadMem_48925f, %struct.Memory** %MEMORY
  %loadMem_489262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3039 = getelementptr inbounds %struct.GPR, %struct.GPR* %3038, i32 0, i32 33
  %3040 = getelementptr inbounds %struct.Reg, %struct.Reg* %3039, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %3040 to i64*
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3042 = getelementptr inbounds %struct.GPR, %struct.GPR* %3041, i32 0, i32 7
  %3043 = getelementptr inbounds %struct.Reg, %struct.Reg* %3042, i32 0, i32 0
  %RDX.i1281 = bitcast %union.anon* %3043 to i64*
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3045 = getelementptr inbounds %struct.GPR, %struct.GPR* %3044, i32 0, i32 15
  %3046 = getelementptr inbounds %struct.Reg, %struct.Reg* %3045, i32 0, i32 0
  %RBP.i1282 = bitcast %union.anon* %3046 to i64*
  %3047 = load i64, i64* %RBP.i1282
  %3048 = sub i64 %3047, 40
  %3049 = load i64, i64* %PC.i1280
  %3050 = add i64 %3049, 4
  store i64 %3050, i64* %PC.i1280
  %3051 = inttoptr i64 %3048 to i32*
  %3052 = load i32, i32* %3051
  %3053 = sext i32 %3052 to i64
  store i64 %3053, i64* %RDX.i1281, align 8
  store %struct.Memory* %loadMem_489262, %struct.Memory** %MEMORY
  %loadMem_489266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 33
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %3056 to i64*
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3058 = getelementptr inbounds %struct.GPR, %struct.GPR* %3057, i32 0, i32 11
  %3059 = getelementptr inbounds %struct.Reg, %struct.Reg* %3058, i32 0, i32 0
  %EDI.i1277 = bitcast %union.anon* %3059 to i32*
  %3060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3061 = getelementptr inbounds %struct.GPR, %struct.GPR* %3060, i32 0, i32 7
  %3062 = getelementptr inbounds %struct.Reg, %struct.Reg* %3061, i32 0, i32 0
  %RDX.i1278 = bitcast %union.anon* %3062 to i64*
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3064 = getelementptr inbounds %struct.GPR, %struct.GPR* %3063, i32 0, i32 9
  %3065 = getelementptr inbounds %struct.Reg, %struct.Reg* %3064, i32 0, i32 0
  %RSI.i1279 = bitcast %union.anon* %3065 to i64*
  %3066 = load i64, i64* %RSI.i1279
  %3067 = load i64, i64* %RDX.i1278
  %3068 = mul i64 %3067, 4
  %3069 = add i64 %3068, %3066
  %3070 = load i32, i32* %EDI.i1277
  %3071 = zext i32 %3070 to i64
  %3072 = load i64, i64* %PC.i1276
  %3073 = add i64 %3072, 3
  store i64 %3073, i64* %PC.i1276
  %3074 = inttoptr i64 %3069 to i32*
  store i32 %3070, i32* %3074
  store %struct.Memory* %loadMem_489266, %struct.Memory** %MEMORY
  %loadMem_489269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 33
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %3077 to i64*
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3079 = getelementptr inbounds %struct.GPR, %struct.GPR* %3078, i32 0, i32 11
  %3080 = getelementptr inbounds %struct.Reg, %struct.Reg* %3079, i32 0, i32 0
  %RDI.i1274 = bitcast %union.anon* %3080 to i64*
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3082 = getelementptr inbounds %struct.GPR, %struct.GPR* %3081, i32 0, i32 15
  %3083 = getelementptr inbounds %struct.Reg, %struct.Reg* %3082, i32 0, i32 0
  %RBP.i1275 = bitcast %union.anon* %3083 to i64*
  %3084 = load i64, i64* %RBP.i1275
  %3085 = sub i64 %3084, 44
  %3086 = load i64, i64* %PC.i1273
  %3087 = add i64 %3086, 3
  store i64 %3087, i64* %PC.i1273
  %3088 = inttoptr i64 %3085 to i32*
  %3089 = load i32, i32* %3088
  %3090 = zext i32 %3089 to i64
  store i64 %3090, i64* %RDI.i1274, align 8
  store %struct.Memory* %loadMem_489269, %struct.Memory** %MEMORY
  %loadMem_48926c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3092 = getelementptr inbounds %struct.GPR, %struct.GPR* %3091, i32 0, i32 33
  %3093 = getelementptr inbounds %struct.Reg, %struct.Reg* %3092, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %3093 to i64*
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3095 = getelementptr inbounds %struct.GPR, %struct.GPR* %3094, i32 0, i32 7
  %3096 = getelementptr inbounds %struct.Reg, %struct.Reg* %3095, i32 0, i32 0
  %RDX.i1271 = bitcast %union.anon* %3096 to i64*
  %3097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3098 = getelementptr inbounds %struct.GPR, %struct.GPR* %3097, i32 0, i32 15
  %3099 = getelementptr inbounds %struct.Reg, %struct.Reg* %3098, i32 0, i32 0
  %RBP.i1272 = bitcast %union.anon* %3099 to i64*
  %3100 = load i64, i64* %RBP.i1272
  %3101 = sub i64 %3100, 36
  %3102 = load i64, i64* %PC.i1270
  %3103 = add i64 %3102, 4
  store i64 %3103, i64* %PC.i1270
  %3104 = inttoptr i64 %3101 to i32*
  %3105 = load i32, i32* %3104
  %3106 = sext i32 %3105 to i64
  store i64 %3106, i64* %RDX.i1271, align 8
  store %struct.Memory* %loadMem_48926c, %struct.Memory** %MEMORY
  %loadMem_489270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3108 = getelementptr inbounds %struct.GPR, %struct.GPR* %3107, i32 0, i32 33
  %3109 = getelementptr inbounds %struct.Reg, %struct.Reg* %3108, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %3109 to i64*
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3111 = getelementptr inbounds %struct.GPR, %struct.GPR* %3110, i32 0, i32 7
  %3112 = getelementptr inbounds %struct.Reg, %struct.Reg* %3111, i32 0, i32 0
  %RDX.i1269 = bitcast %union.anon* %3112 to i64*
  %3113 = load i64, i64* %RDX.i1269
  %3114 = load i64, i64* %PC.i1268
  %3115 = add i64 %3114, 4
  store i64 %3115, i64* %PC.i1268
  %3116 = shl i64 %3113, 5
  %3117 = icmp slt i64 %3116, 0
  %3118 = shl i64 %3116, 1
  store i64 %3118, i64* %RDX.i1269, align 8
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3120 = zext i1 %3117 to i8
  store i8 %3120, i8* %3119, align 1
  %3121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3122 = trunc i64 %3118 to i32
  %3123 = and i32 %3122, 254
  %3124 = call i32 @llvm.ctpop.i32(i32 %3123)
  %3125 = trunc i32 %3124 to i8
  %3126 = and i8 %3125, 1
  %3127 = xor i8 %3126, 1
  store i8 %3127, i8* %3121, align 1
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3128, align 1
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3130 = icmp eq i64 %3118, 0
  %3131 = zext i1 %3130 to i8
  store i8 %3131, i8* %3129, align 1
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3133 = lshr i64 %3118, 63
  %3134 = trunc i64 %3133 to i8
  store i8 %3134, i8* %3132, align 1
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3135, align 1
  store %struct.Memory* %loadMem_489270, %struct.Memory** %MEMORY
  %loadMem_489274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 33
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %3138 to i64*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 5
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %RCX.i1266 = bitcast %union.anon* %3141 to i64*
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3143 = getelementptr inbounds %struct.GPR, %struct.GPR* %3142, i32 0, i32 7
  %3144 = getelementptr inbounds %struct.Reg, %struct.Reg* %3143, i32 0, i32 0
  %RDX.i1267 = bitcast %union.anon* %3144 to i64*
  %3145 = load i64, i64* %RCX.i1266
  %3146 = load i64, i64* %RDX.i1267
  %3147 = load i64, i64* %PC.i1265
  %3148 = add i64 %3147, 3
  store i64 %3148, i64* %PC.i1265
  %3149 = add i64 %3146, %3145
  store i64 %3149, i64* %RCX.i1266, align 8
  %3150 = icmp ult i64 %3149, %3145
  %3151 = icmp ult i64 %3149, %3146
  %3152 = or i1 %3150, %3151
  %3153 = zext i1 %3152 to i8
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3153, i8* %3154, align 1
  %3155 = trunc i64 %3149 to i32
  %3156 = and i32 %3155, 255
  %3157 = call i32 @llvm.ctpop.i32(i32 %3156)
  %3158 = trunc i32 %3157 to i8
  %3159 = and i8 %3158, 1
  %3160 = xor i8 %3159, 1
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3160, i8* %3161, align 1
  %3162 = xor i64 %3146, %3145
  %3163 = xor i64 %3162, %3149
  %3164 = lshr i64 %3163, 4
  %3165 = trunc i64 %3164 to i8
  %3166 = and i8 %3165, 1
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3166, i8* %3167, align 1
  %3168 = icmp eq i64 %3149, 0
  %3169 = zext i1 %3168 to i8
  %3170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3169, i8* %3170, align 1
  %3171 = lshr i64 %3149, 63
  %3172 = trunc i64 %3171 to i8
  %3173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3172, i8* %3173, align 1
  %3174 = lshr i64 %3145, 63
  %3175 = lshr i64 %3146, 63
  %3176 = xor i64 %3171, %3174
  %3177 = xor i64 %3171, %3175
  %3178 = add i64 %3176, %3177
  %3179 = icmp eq i64 %3178, 2
  %3180 = zext i1 %3179 to i8
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3180, i8* %3181, align 1
  store %struct.Memory* %loadMem_489274, %struct.Memory** %MEMORY
  %loadMem_489277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3183 = getelementptr inbounds %struct.GPR, %struct.GPR* %3182, i32 0, i32 33
  %3184 = getelementptr inbounds %struct.Reg, %struct.Reg* %3183, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %3184 to i64*
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3186 = getelementptr inbounds %struct.GPR, %struct.GPR* %3185, i32 0, i32 7
  %3187 = getelementptr inbounds %struct.Reg, %struct.Reg* %3186, i32 0, i32 0
  %RDX.i1263 = bitcast %union.anon* %3187 to i64*
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3189 = getelementptr inbounds %struct.GPR, %struct.GPR* %3188, i32 0, i32 15
  %3190 = getelementptr inbounds %struct.Reg, %struct.Reg* %3189, i32 0, i32 0
  %RBP.i1264 = bitcast %union.anon* %3190 to i64*
  %3191 = load i64, i64* %RBP.i1264
  %3192 = sub i64 %3191, 40
  %3193 = load i64, i64* %PC.i1262
  %3194 = add i64 %3193, 4
  store i64 %3194, i64* %PC.i1262
  %3195 = inttoptr i64 %3192 to i32*
  %3196 = load i32, i32* %3195
  %3197 = sext i32 %3196 to i64
  store i64 %3197, i64* %RDX.i1263, align 8
  store %struct.Memory* %loadMem_489277, %struct.Memory** %MEMORY
  %loadMem_48927b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3199 = getelementptr inbounds %struct.GPR, %struct.GPR* %3198, i32 0, i32 33
  %3200 = getelementptr inbounds %struct.Reg, %struct.Reg* %3199, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %3200 to i64*
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3202 = getelementptr inbounds %struct.GPR, %struct.GPR* %3201, i32 0, i32 19
  %3203 = getelementptr inbounds %struct.Reg, %struct.Reg* %3202, i32 0, i32 0
  %R9D.i1259 = bitcast %union.anon* %3203 to i32*
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3205 = getelementptr inbounds %struct.GPR, %struct.GPR* %3204, i32 0, i32 5
  %3206 = getelementptr inbounds %struct.Reg, %struct.Reg* %3205, i32 0, i32 0
  %RCX.i1260 = bitcast %union.anon* %3206 to i64*
  %3207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3208 = getelementptr inbounds %struct.GPR, %struct.GPR* %3207, i32 0, i32 7
  %3209 = getelementptr inbounds %struct.Reg, %struct.Reg* %3208, i32 0, i32 0
  %RDX.i1261 = bitcast %union.anon* %3209 to i64*
  %3210 = bitcast i32* %R9D.i1259 to i64*
  %3211 = load i64, i64* %RCX.i1260
  %3212 = load i64, i64* %RDX.i1261
  %3213 = mul i64 %3212, 4
  %3214 = add i64 %3213, %3211
  %3215 = load i64, i64* %PC.i1258
  %3216 = add i64 %3215, 4
  store i64 %3216, i64* %PC.i1258
  %3217 = inttoptr i64 %3214 to i32*
  %3218 = load i32, i32* %3217
  %3219 = zext i32 %3218 to i64
  store i64 %3219, i64* %3210, align 8
  store %struct.Memory* %loadMem_48927b, %struct.Memory** %MEMORY
  %loadMem_48927f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3221 = getelementptr inbounds %struct.GPR, %struct.GPR* %3220, i32 0, i32 33
  %3222 = getelementptr inbounds %struct.Reg, %struct.Reg* %3221, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %3222 to i64*
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3224 = getelementptr inbounds %struct.GPR, %struct.GPR* %3223, i32 0, i32 19
  %3225 = getelementptr inbounds %struct.Reg, %struct.Reg* %3224, i32 0, i32 0
  %R9D.i1257 = bitcast %union.anon* %3225 to i32*
  %3226 = bitcast i32* %R9D.i1257 to i64*
  %3227 = load i32, i32* %R9D.i1257
  %3228 = zext i32 %3227 to i64
  %3229 = load i64, i64* %PC.i1256
  %3230 = add i64 %3229, 3
  store i64 %3230, i64* %PC.i1256
  %3231 = shl i64 %3228, 32
  %3232 = ashr i64 %3231, 33
  %3233 = trunc i64 %3228 to i8
  %3234 = and i8 %3233, 1
  %3235 = trunc i64 %3232 to i32
  %3236 = and i64 %3232, 4294967295
  store i64 %3236, i64* %3226, align 8
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3234, i8* %3237, align 1
  %3238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3239 = and i32 %3235, 255
  %3240 = call i32 @llvm.ctpop.i32(i32 %3239)
  %3241 = trunc i32 %3240 to i8
  %3242 = and i8 %3241, 1
  %3243 = xor i8 %3242, 1
  store i8 %3243, i8* %3238, align 1
  %3244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3244, align 1
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3246 = icmp eq i32 %3235, 0
  %3247 = zext i1 %3246 to i8
  store i8 %3247, i8* %3245, align 1
  %3248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3249 = lshr i32 %3235, 31
  %3250 = trunc i32 %3249 to i8
  store i8 %3250, i8* %3248, align 1
  %3251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3251, align 1
  store %struct.Memory* %loadMem_48927f, %struct.Memory** %MEMORY
  %loadMem_489283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3253 = getelementptr inbounds %struct.GPR, %struct.GPR* %3252, i32 0, i32 33
  %3254 = getelementptr inbounds %struct.Reg, %struct.Reg* %3253, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %3254 to i64*
  %3255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3256 = getelementptr inbounds %struct.GPR, %struct.GPR* %3255, i32 0, i32 19
  %3257 = getelementptr inbounds %struct.Reg, %struct.Reg* %3256, i32 0, i32 0
  %R9D.i1254 = bitcast %union.anon* %3257 to i32*
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3259 = getelementptr inbounds %struct.GPR, %struct.GPR* %3258, i32 0, i32 11
  %3260 = getelementptr inbounds %struct.Reg, %struct.Reg* %3259, i32 0, i32 0
  %RDI.i1255 = bitcast %union.anon* %3260 to i64*
  %3261 = load i64, i64* %RDI.i1255
  %3262 = load i32, i32* %R9D.i1254
  %3263 = zext i32 %3262 to i64
  %3264 = load i64, i64* %PC.i1253
  %3265 = add i64 %3264, 3
  store i64 %3265, i64* %PC.i1253
  %3266 = trunc i64 %3261 to i32
  %3267 = add i32 %3262, %3266
  %3268 = zext i32 %3267 to i64
  store i64 %3268, i64* %RDI.i1255, align 8
  %3269 = icmp ult i32 %3267, %3266
  %3270 = icmp ult i32 %3267, %3262
  %3271 = or i1 %3269, %3270
  %3272 = zext i1 %3271 to i8
  %3273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3272, i8* %3273, align 1
  %3274 = and i32 %3267, 255
  %3275 = call i32 @llvm.ctpop.i32(i32 %3274)
  %3276 = trunc i32 %3275 to i8
  %3277 = and i8 %3276, 1
  %3278 = xor i8 %3277, 1
  %3279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3278, i8* %3279, align 1
  %3280 = xor i64 %3263, %3261
  %3281 = trunc i64 %3280 to i32
  %3282 = xor i32 %3281, %3267
  %3283 = lshr i32 %3282, 4
  %3284 = trunc i32 %3283 to i8
  %3285 = and i8 %3284, 1
  %3286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3285, i8* %3286, align 1
  %3287 = icmp eq i32 %3267, 0
  %3288 = zext i1 %3287 to i8
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3288, i8* %3289, align 1
  %3290 = lshr i32 %3267, 31
  %3291 = trunc i32 %3290 to i8
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3291, i8* %3292, align 1
  %3293 = lshr i32 %3266, 31
  %3294 = lshr i32 %3262, 31
  %3295 = xor i32 %3290, %3293
  %3296 = xor i32 %3290, %3294
  %3297 = add i32 %3295, %3296
  %3298 = icmp eq i32 %3297, 2
  %3299 = zext i1 %3298 to i8
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3299, i8* %3300, align 1
  store %struct.Memory* %loadMem_489283, %struct.Memory** %MEMORY
  %loadMem_489286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3302 = getelementptr inbounds %struct.GPR, %struct.GPR* %3301, i32 0, i32 33
  %3303 = getelementptr inbounds %struct.Reg, %struct.Reg* %3302, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %3303 to i64*
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3305 = getelementptr inbounds %struct.GPR, %struct.GPR* %3304, i32 0, i32 5
  %3306 = getelementptr inbounds %struct.Reg, %struct.Reg* %3305, i32 0, i32 0
  %RCX.i1251 = bitcast %union.anon* %3306 to i64*
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3308 = getelementptr inbounds %struct.GPR, %struct.GPR* %3307, i32 0, i32 15
  %3309 = getelementptr inbounds %struct.Reg, %struct.Reg* %3308, i32 0, i32 0
  %RBP.i1252 = bitcast %union.anon* %3309 to i64*
  %3310 = load i64, i64* %RBP.i1252
  %3311 = sub i64 %3310, 36
  %3312 = load i64, i64* %PC.i1250
  %3313 = add i64 %3312, 4
  store i64 %3313, i64* %PC.i1250
  %3314 = inttoptr i64 %3311 to i32*
  %3315 = load i32, i32* %3314
  %3316 = sext i32 %3315 to i64
  store i64 %3316, i64* %RCX.i1251, align 8
  store %struct.Memory* %loadMem_489286, %struct.Memory** %MEMORY
  %loadMem_48928a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3318 = getelementptr inbounds %struct.GPR, %struct.GPR* %3317, i32 0, i32 33
  %3319 = getelementptr inbounds %struct.Reg, %struct.Reg* %3318, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %3319 to i64*
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3321 = getelementptr inbounds %struct.GPR, %struct.GPR* %3320, i32 0, i32 5
  %3322 = getelementptr inbounds %struct.Reg, %struct.Reg* %3321, i32 0, i32 0
  %RCX.i1249 = bitcast %union.anon* %3322 to i64*
  %3323 = load i64, i64* %RCX.i1249
  %3324 = load i64, i64* %PC.i1248
  %3325 = add i64 %3324, 4
  store i64 %3325, i64* %PC.i1248
  %3326 = shl i64 %3323, 5
  %3327 = icmp slt i64 %3326, 0
  %3328 = shl i64 %3326, 1
  store i64 %3328, i64* %RCX.i1249, align 8
  %3329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3330 = zext i1 %3327 to i8
  store i8 %3330, i8* %3329, align 1
  %3331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3332 = trunc i64 %3328 to i32
  %3333 = and i32 %3332, 254
  %3334 = call i32 @llvm.ctpop.i32(i32 %3333)
  %3335 = trunc i32 %3334 to i8
  %3336 = and i8 %3335, 1
  %3337 = xor i8 %3336, 1
  store i8 %3337, i8* %3331, align 1
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3338, align 1
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3340 = icmp eq i64 %3328, 0
  %3341 = zext i1 %3340 to i8
  store i8 %3341, i8* %3339, align 1
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3343 = lshr i64 %3328, 63
  %3344 = trunc i64 %3343 to i8
  store i8 %3344, i8* %3342, align 1
  %3345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3345, align 1
  store %struct.Memory* %loadMem_48928a, %struct.Memory** %MEMORY
  %loadMem_48928e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3347 = getelementptr inbounds %struct.GPR, %struct.GPR* %3346, i32 0, i32 33
  %3348 = getelementptr inbounds %struct.Reg, %struct.Reg* %3347, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %3348 to i64*
  %3349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3350 = getelementptr inbounds %struct.GPR, %struct.GPR* %3349, i32 0, i32 1
  %3351 = getelementptr inbounds %struct.Reg, %struct.Reg* %3350, i32 0, i32 0
  %RAX.i1246 = bitcast %union.anon* %3351 to i64*
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3353 = getelementptr inbounds %struct.GPR, %struct.GPR* %3352, i32 0, i32 7
  %3354 = getelementptr inbounds %struct.Reg, %struct.Reg* %3353, i32 0, i32 0
  %RDX.i1247 = bitcast %union.anon* %3354 to i64*
  %3355 = load i64, i64* %RAX.i1246
  %3356 = load i64, i64* %PC.i1245
  %3357 = add i64 %3356, 3
  store i64 %3357, i64* %PC.i1245
  store i64 %3355, i64* %RDX.i1247, align 8
  store %struct.Memory* %loadMem_48928e, %struct.Memory** %MEMORY
  %loadMem_489291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3359 = getelementptr inbounds %struct.GPR, %struct.GPR* %3358, i32 0, i32 33
  %3360 = getelementptr inbounds %struct.Reg, %struct.Reg* %3359, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %3360 to i64*
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3362 = getelementptr inbounds %struct.GPR, %struct.GPR* %3361, i32 0, i32 5
  %3363 = getelementptr inbounds %struct.Reg, %struct.Reg* %3362, i32 0, i32 0
  %RCX.i1243 = bitcast %union.anon* %3363 to i64*
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3365 = getelementptr inbounds %struct.GPR, %struct.GPR* %3364, i32 0, i32 7
  %3366 = getelementptr inbounds %struct.Reg, %struct.Reg* %3365, i32 0, i32 0
  %RDX.i1244 = bitcast %union.anon* %3366 to i64*
  %3367 = load i64, i64* %RDX.i1244
  %3368 = load i64, i64* %RCX.i1243
  %3369 = load i64, i64* %PC.i1242
  %3370 = add i64 %3369, 3
  store i64 %3370, i64* %PC.i1242
  %3371 = add i64 %3368, %3367
  store i64 %3371, i64* %RDX.i1244, align 8
  %3372 = icmp ult i64 %3371, %3367
  %3373 = icmp ult i64 %3371, %3368
  %3374 = or i1 %3372, %3373
  %3375 = zext i1 %3374 to i8
  %3376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3375, i8* %3376, align 1
  %3377 = trunc i64 %3371 to i32
  %3378 = and i32 %3377, 255
  %3379 = call i32 @llvm.ctpop.i32(i32 %3378)
  %3380 = trunc i32 %3379 to i8
  %3381 = and i8 %3380, 1
  %3382 = xor i8 %3381, 1
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3382, i8* %3383, align 1
  %3384 = xor i64 %3368, %3367
  %3385 = xor i64 %3384, %3371
  %3386 = lshr i64 %3385, 4
  %3387 = trunc i64 %3386 to i8
  %3388 = and i8 %3387, 1
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3388, i8* %3389, align 1
  %3390 = icmp eq i64 %3371, 0
  %3391 = zext i1 %3390 to i8
  %3392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3391, i8* %3392, align 1
  %3393 = lshr i64 %3371, 63
  %3394 = trunc i64 %3393 to i8
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3394, i8* %3395, align 1
  %3396 = lshr i64 %3367, 63
  %3397 = lshr i64 %3368, 63
  %3398 = xor i64 %3393, %3396
  %3399 = xor i64 %3393, %3397
  %3400 = add i64 %3398, %3399
  %3401 = icmp eq i64 %3400, 2
  %3402 = zext i1 %3401 to i8
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3402, i8* %3403, align 1
  store %struct.Memory* %loadMem_489291, %struct.Memory** %MEMORY
  %loadMem_489294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3405 = getelementptr inbounds %struct.GPR, %struct.GPR* %3404, i32 0, i32 33
  %3406 = getelementptr inbounds %struct.Reg, %struct.Reg* %3405, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %3406 to i64*
  %3407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3408 = getelementptr inbounds %struct.GPR, %struct.GPR* %3407, i32 0, i32 5
  %3409 = getelementptr inbounds %struct.Reg, %struct.Reg* %3408, i32 0, i32 0
  %RCX.i1240 = bitcast %union.anon* %3409 to i64*
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3411 = getelementptr inbounds %struct.GPR, %struct.GPR* %3410, i32 0, i32 15
  %3412 = getelementptr inbounds %struct.Reg, %struct.Reg* %3411, i32 0, i32 0
  %RBP.i1241 = bitcast %union.anon* %3412 to i64*
  %3413 = load i64, i64* %RBP.i1241
  %3414 = sub i64 %3413, 40
  %3415 = load i64, i64* %PC.i1239
  %3416 = add i64 %3415, 4
  store i64 %3416, i64* %PC.i1239
  %3417 = inttoptr i64 %3414 to i32*
  %3418 = load i32, i32* %3417
  %3419 = sext i32 %3418 to i64
  store i64 %3419, i64* %RCX.i1240, align 8
  store %struct.Memory* %loadMem_489294, %struct.Memory** %MEMORY
  %loadMem_489298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3421 = getelementptr inbounds %struct.GPR, %struct.GPR* %3420, i32 0, i32 33
  %3422 = getelementptr inbounds %struct.Reg, %struct.Reg* %3421, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %3422 to i64*
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3424 = getelementptr inbounds %struct.GPR, %struct.GPR* %3423, i32 0, i32 11
  %3425 = getelementptr inbounds %struct.Reg, %struct.Reg* %3424, i32 0, i32 0
  %EDI.i1236 = bitcast %union.anon* %3425 to i32*
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3427 = getelementptr inbounds %struct.GPR, %struct.GPR* %3426, i32 0, i32 5
  %3428 = getelementptr inbounds %struct.Reg, %struct.Reg* %3427, i32 0, i32 0
  %RCX.i1237 = bitcast %union.anon* %3428 to i64*
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3430 = getelementptr inbounds %struct.GPR, %struct.GPR* %3429, i32 0, i32 7
  %3431 = getelementptr inbounds %struct.Reg, %struct.Reg* %3430, i32 0, i32 0
  %RDX.i1238 = bitcast %union.anon* %3431 to i64*
  %3432 = load i64, i64* %RDX.i1238
  %3433 = load i64, i64* %RCX.i1237
  %3434 = mul i64 %3433, 4
  %3435 = add i64 %3434, %3432
  %3436 = load i32, i32* %EDI.i1236
  %3437 = zext i32 %3436 to i64
  %3438 = load i64, i64* %PC.i1235
  %3439 = add i64 %3438, 3
  store i64 %3439, i64* %PC.i1235
  %3440 = inttoptr i64 %3435 to i32*
  store i32 %3436, i32* %3440
  store %struct.Memory* %loadMem_489298, %struct.Memory** %MEMORY
  %loadMem_48929b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3442 = getelementptr inbounds %struct.GPR, %struct.GPR* %3441, i32 0, i32 33
  %3443 = getelementptr inbounds %struct.Reg, %struct.Reg* %3442, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %3443 to i64*
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3445 = getelementptr inbounds %struct.GPR, %struct.GPR* %3444, i32 0, i32 5
  %3446 = getelementptr inbounds %struct.Reg, %struct.Reg* %3445, i32 0, i32 0
  %RCX.i1233 = bitcast %union.anon* %3446 to i64*
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3448 = getelementptr inbounds %struct.GPR, %struct.GPR* %3447, i32 0, i32 15
  %3449 = getelementptr inbounds %struct.Reg, %struct.Reg* %3448, i32 0, i32 0
  %RBP.i1234 = bitcast %union.anon* %3449 to i64*
  %3450 = load i64, i64* %RBP.i1234
  %3451 = sub i64 %3450, 36
  %3452 = load i64, i64* %PC.i1232
  %3453 = add i64 %3452, 4
  store i64 %3453, i64* %PC.i1232
  %3454 = inttoptr i64 %3451 to i32*
  %3455 = load i32, i32* %3454
  %3456 = sext i32 %3455 to i64
  store i64 %3456, i64* %RCX.i1233, align 8
  store %struct.Memory* %loadMem_48929b, %struct.Memory** %MEMORY
  %loadMem_48929f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3458 = getelementptr inbounds %struct.GPR, %struct.GPR* %3457, i32 0, i32 33
  %3459 = getelementptr inbounds %struct.Reg, %struct.Reg* %3458, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %3459 to i64*
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3461 = getelementptr inbounds %struct.GPR, %struct.GPR* %3460, i32 0, i32 5
  %3462 = getelementptr inbounds %struct.Reg, %struct.Reg* %3461, i32 0, i32 0
  %RCX.i1231 = bitcast %union.anon* %3462 to i64*
  %3463 = load i64, i64* %RCX.i1231
  %3464 = load i64, i64* %PC.i1230
  %3465 = add i64 %3464, 4
  store i64 %3465, i64* %PC.i1230
  %3466 = shl i64 %3463, 5
  %3467 = icmp slt i64 %3466, 0
  %3468 = shl i64 %3466, 1
  store i64 %3468, i64* %RCX.i1231, align 8
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3470 = zext i1 %3467 to i8
  store i8 %3470, i8* %3469, align 1
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3472 = trunc i64 %3468 to i32
  %3473 = and i32 %3472, 254
  %3474 = call i32 @llvm.ctpop.i32(i32 %3473)
  %3475 = trunc i32 %3474 to i8
  %3476 = and i8 %3475, 1
  %3477 = xor i8 %3476, 1
  store i8 %3477, i8* %3471, align 1
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3478, align 1
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3480 = icmp eq i64 %3468, 0
  %3481 = zext i1 %3480 to i8
  store i8 %3481, i8* %3479, align 1
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3483 = lshr i64 %3468, 63
  %3484 = trunc i64 %3483 to i8
  store i8 %3484, i8* %3482, align 1
  %3485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3485, align 1
  store %struct.Memory* %loadMem_48929f, %struct.Memory** %MEMORY
  %loadMem_4892a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3487 = getelementptr inbounds %struct.GPR, %struct.GPR* %3486, i32 0, i32 33
  %3488 = getelementptr inbounds %struct.Reg, %struct.Reg* %3487, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %3488 to i64*
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3490 = getelementptr inbounds %struct.GPR, %struct.GPR* %3489, i32 0, i32 1
  %3491 = getelementptr inbounds %struct.Reg, %struct.Reg* %3490, i32 0, i32 0
  %RAX.i1228 = bitcast %union.anon* %3491 to i64*
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 5
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %RCX.i1229 = bitcast %union.anon* %3494 to i64*
  %3495 = load i64, i64* %RAX.i1228
  %3496 = load i64, i64* %RCX.i1229
  %3497 = load i64, i64* %PC.i1227
  %3498 = add i64 %3497, 3
  store i64 %3498, i64* %PC.i1227
  %3499 = add i64 %3496, %3495
  store i64 %3499, i64* %RAX.i1228, align 8
  %3500 = icmp ult i64 %3499, %3495
  %3501 = icmp ult i64 %3499, %3496
  %3502 = or i1 %3500, %3501
  %3503 = zext i1 %3502 to i8
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3503, i8* %3504, align 1
  %3505 = trunc i64 %3499 to i32
  %3506 = and i32 %3505, 255
  %3507 = call i32 @llvm.ctpop.i32(i32 %3506)
  %3508 = trunc i32 %3507 to i8
  %3509 = and i8 %3508, 1
  %3510 = xor i8 %3509, 1
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3510, i8* %3511, align 1
  %3512 = xor i64 %3496, %3495
  %3513 = xor i64 %3512, %3499
  %3514 = lshr i64 %3513, 4
  %3515 = trunc i64 %3514 to i8
  %3516 = and i8 %3515, 1
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3516, i8* %3517, align 1
  %3518 = icmp eq i64 %3499, 0
  %3519 = zext i1 %3518 to i8
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3519, i8* %3520, align 1
  %3521 = lshr i64 %3499, 63
  %3522 = trunc i64 %3521 to i8
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3522, i8* %3523, align 1
  %3524 = lshr i64 %3495, 63
  %3525 = lshr i64 %3496, 63
  %3526 = xor i64 %3521, %3524
  %3527 = xor i64 %3521, %3525
  %3528 = add i64 %3526, %3527
  %3529 = icmp eq i64 %3528, 2
  %3530 = zext i1 %3529 to i8
  %3531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3530, i8* %3531, align 1
  store %struct.Memory* %loadMem_4892a3, %struct.Memory** %MEMORY
  %loadMem_4892a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3533 = getelementptr inbounds %struct.GPR, %struct.GPR* %3532, i32 0, i32 33
  %3534 = getelementptr inbounds %struct.Reg, %struct.Reg* %3533, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %3534 to i64*
  %3535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3536 = getelementptr inbounds %struct.GPR, %struct.GPR* %3535, i32 0, i32 5
  %3537 = getelementptr inbounds %struct.Reg, %struct.Reg* %3536, i32 0, i32 0
  %RCX.i1225 = bitcast %union.anon* %3537 to i64*
  %3538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3539 = getelementptr inbounds %struct.GPR, %struct.GPR* %3538, i32 0, i32 15
  %3540 = getelementptr inbounds %struct.Reg, %struct.Reg* %3539, i32 0, i32 0
  %RBP.i1226 = bitcast %union.anon* %3540 to i64*
  %3541 = load i64, i64* %RBP.i1226
  %3542 = sub i64 %3541, 40
  %3543 = load i64, i64* %PC.i1224
  %3544 = add i64 %3543, 4
  store i64 %3544, i64* %PC.i1224
  %3545 = inttoptr i64 %3542 to i32*
  %3546 = load i32, i32* %3545
  %3547 = sext i32 %3546 to i64
  store i64 %3547, i64* %RCX.i1225, align 8
  store %struct.Memory* %loadMem_4892a6, %struct.Memory** %MEMORY
  %loadMem_4892aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3549 = getelementptr inbounds %struct.GPR, %struct.GPR* %3548, i32 0, i32 33
  %3550 = getelementptr inbounds %struct.Reg, %struct.Reg* %3549, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %3550 to i64*
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3552 = getelementptr inbounds %struct.GPR, %struct.GPR* %3551, i32 0, i32 1
  %3553 = getelementptr inbounds %struct.Reg, %struct.Reg* %3552, i32 0, i32 0
  %RAX.i1221 = bitcast %union.anon* %3553 to i64*
  %3554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3555 = getelementptr inbounds %struct.GPR, %struct.GPR* %3554, i32 0, i32 5
  %3556 = getelementptr inbounds %struct.Reg, %struct.Reg* %3555, i32 0, i32 0
  %RCX.i1222 = bitcast %union.anon* %3556 to i64*
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3558 = getelementptr inbounds %struct.GPR, %struct.GPR* %3557, i32 0, i32 11
  %3559 = getelementptr inbounds %struct.Reg, %struct.Reg* %3558, i32 0, i32 0
  %RDI.i1223 = bitcast %union.anon* %3559 to i64*
  %3560 = load i64, i64* %RAX.i1221
  %3561 = load i64, i64* %RCX.i1222
  %3562 = mul i64 %3561, 4
  %3563 = add i64 %3562, %3560
  %3564 = load i64, i64* %PC.i1220
  %3565 = add i64 %3564, 3
  store i64 %3565, i64* %PC.i1220
  %3566 = inttoptr i64 %3563 to i32*
  %3567 = load i32, i32* %3566
  %3568 = zext i32 %3567 to i64
  store i64 %3568, i64* %RDI.i1223, align 8
  store %struct.Memory* %loadMem_4892aa, %struct.Memory** %MEMORY
  %loadMem_4892ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3570 = getelementptr inbounds %struct.GPR, %struct.GPR* %3569, i32 0, i32 33
  %3571 = getelementptr inbounds %struct.Reg, %struct.Reg* %3570, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %3571 to i64*
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3573 = getelementptr inbounds %struct.GPR, %struct.GPR* %3572, i32 0, i32 1
  %3574 = getelementptr inbounds %struct.Reg, %struct.Reg* %3573, i32 0, i32 0
  %RAX.i1219 = bitcast %union.anon* %3574 to i64*
  %3575 = load i64, i64* %PC.i1218
  %3576 = add i64 %3575, 8
  store i64 %3576, i64* %PC.i1218
  %3577 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3577, i64* %RAX.i1219, align 8
  store %struct.Memory* %loadMem_4892ad, %struct.Memory** %MEMORY
  %loadMem_4892b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 33
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %3580 to i64*
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 1
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %RAX.i1217 = bitcast %union.anon* %3583 to i64*
  %3584 = load i64, i64* %RAX.i1217
  %3585 = load i64, i64* %PC.i1216
  %3586 = add i64 %3585, 6
  store i64 %3586, i64* %PC.i1216
  %3587 = add i64 13112, %3584
  store i64 %3587, i64* %RAX.i1217, align 8
  %3588 = icmp ult i64 %3587, %3584
  %3589 = icmp ult i64 %3587, 13112
  %3590 = or i1 %3588, %3589
  %3591 = zext i1 %3590 to i8
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3591, i8* %3592, align 1
  %3593 = trunc i64 %3587 to i32
  %3594 = and i32 %3593, 255
  %3595 = call i32 @llvm.ctpop.i32(i32 %3594)
  %3596 = trunc i32 %3595 to i8
  %3597 = and i8 %3596, 1
  %3598 = xor i8 %3597, 1
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3598, i8* %3599, align 1
  %3600 = xor i64 13112, %3584
  %3601 = xor i64 %3600, %3587
  %3602 = lshr i64 %3601, 4
  %3603 = trunc i64 %3602 to i8
  %3604 = and i8 %3603, 1
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3604, i8* %3605, align 1
  %3606 = icmp eq i64 %3587, 0
  %3607 = zext i1 %3606 to i8
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3607, i8* %3608, align 1
  %3609 = lshr i64 %3587, 63
  %3610 = trunc i64 %3609 to i8
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3610, i8* %3611, align 1
  %3612 = lshr i64 %3584, 63
  %3613 = xor i64 %3609, %3612
  %3614 = add i64 %3613, %3609
  %3615 = icmp eq i64 %3614, 2
  %3616 = zext i1 %3615 to i8
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3616, i8* %3617, align 1
  store %struct.Memory* %loadMem_4892b5, %struct.Memory** %MEMORY
  %loadMem_4892bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3619 = getelementptr inbounds %struct.GPR, %struct.GPR* %3618, i32 0, i32 33
  %3620 = getelementptr inbounds %struct.Reg, %struct.Reg* %3619, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %3620 to i64*
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3622 = getelementptr inbounds %struct.GPR, %struct.GPR* %3621, i32 0, i32 5
  %3623 = getelementptr inbounds %struct.Reg, %struct.Reg* %3622, i32 0, i32 0
  %RCX.i1214 = bitcast %union.anon* %3623 to i64*
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3625 = getelementptr inbounds %struct.GPR, %struct.GPR* %3624, i32 0, i32 15
  %3626 = getelementptr inbounds %struct.Reg, %struct.Reg* %3625, i32 0, i32 0
  %RBP.i1215 = bitcast %union.anon* %3626 to i64*
  %3627 = load i64, i64* %RBP.i1215
  %3628 = sub i64 %3627, 36
  %3629 = load i64, i64* %PC.i1213
  %3630 = add i64 %3629, 4
  store i64 %3630, i64* %PC.i1213
  %3631 = inttoptr i64 %3628 to i32*
  %3632 = load i32, i32* %3631
  %3633 = sext i32 %3632 to i64
  store i64 %3633, i64* %RCX.i1214, align 8
  store %struct.Memory* %loadMem_4892bb, %struct.Memory** %MEMORY
  %loadMem_4892bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3635 = getelementptr inbounds %struct.GPR, %struct.GPR* %3634, i32 0, i32 33
  %3636 = getelementptr inbounds %struct.Reg, %struct.Reg* %3635, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %3636 to i64*
  %3637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3638 = getelementptr inbounds %struct.GPR, %struct.GPR* %3637, i32 0, i32 5
  %3639 = getelementptr inbounds %struct.Reg, %struct.Reg* %3638, i32 0, i32 0
  %RCX.i1212 = bitcast %union.anon* %3639 to i64*
  %3640 = load i64, i64* %RCX.i1212
  %3641 = load i64, i64* %PC.i1211
  %3642 = add i64 %3641, 4
  store i64 %3642, i64* %PC.i1211
  %3643 = shl i64 %3640, 5
  %3644 = icmp slt i64 %3643, 0
  %3645 = shl i64 %3643, 1
  store i64 %3645, i64* %RCX.i1212, align 8
  %3646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3647 = zext i1 %3644 to i8
  store i8 %3647, i8* %3646, align 1
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3649 = trunc i64 %3645 to i32
  %3650 = and i32 %3649, 254
  %3651 = call i32 @llvm.ctpop.i32(i32 %3650)
  %3652 = trunc i32 %3651 to i8
  %3653 = and i8 %3652, 1
  %3654 = xor i8 %3653, 1
  store i8 %3654, i8* %3648, align 1
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3655, align 1
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3657 = icmp eq i64 %3645, 0
  %3658 = zext i1 %3657 to i8
  store i8 %3658, i8* %3656, align 1
  %3659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3660 = lshr i64 %3645, 63
  %3661 = trunc i64 %3660 to i8
  store i8 %3661, i8* %3659, align 1
  %3662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3662, align 1
  store %struct.Memory* %loadMem_4892bf, %struct.Memory** %MEMORY
  %loadMem_4892c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3664 = getelementptr inbounds %struct.GPR, %struct.GPR* %3663, i32 0, i32 33
  %3665 = getelementptr inbounds %struct.Reg, %struct.Reg* %3664, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %3665 to i64*
  %3666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3667 = getelementptr inbounds %struct.GPR, %struct.GPR* %3666, i32 0, i32 1
  %3668 = getelementptr inbounds %struct.Reg, %struct.Reg* %3667, i32 0, i32 0
  %RAX.i1209 = bitcast %union.anon* %3668 to i64*
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3670 = getelementptr inbounds %struct.GPR, %struct.GPR* %3669, i32 0, i32 5
  %3671 = getelementptr inbounds %struct.Reg, %struct.Reg* %3670, i32 0, i32 0
  %RCX.i1210 = bitcast %union.anon* %3671 to i64*
  %3672 = load i64, i64* %RAX.i1209
  %3673 = load i64, i64* %RCX.i1210
  %3674 = load i64, i64* %PC.i1208
  %3675 = add i64 %3674, 3
  store i64 %3675, i64* %PC.i1208
  %3676 = add i64 %3673, %3672
  store i64 %3676, i64* %RAX.i1209, align 8
  %3677 = icmp ult i64 %3676, %3672
  %3678 = icmp ult i64 %3676, %3673
  %3679 = or i1 %3677, %3678
  %3680 = zext i1 %3679 to i8
  %3681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3680, i8* %3681, align 1
  %3682 = trunc i64 %3676 to i32
  %3683 = and i32 %3682, 255
  %3684 = call i32 @llvm.ctpop.i32(i32 %3683)
  %3685 = trunc i32 %3684 to i8
  %3686 = and i8 %3685, 1
  %3687 = xor i8 %3686, 1
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3687, i8* %3688, align 1
  %3689 = xor i64 %3673, %3672
  %3690 = xor i64 %3689, %3676
  %3691 = lshr i64 %3690, 4
  %3692 = trunc i64 %3691 to i8
  %3693 = and i8 %3692, 1
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3693, i8* %3694, align 1
  %3695 = icmp eq i64 %3676, 0
  %3696 = zext i1 %3695 to i8
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3696, i8* %3697, align 1
  %3698 = lshr i64 %3676, 63
  %3699 = trunc i64 %3698 to i8
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3699, i8* %3700, align 1
  %3701 = lshr i64 %3672, 63
  %3702 = lshr i64 %3673, 63
  %3703 = xor i64 %3698, %3701
  %3704 = xor i64 %3698, %3702
  %3705 = add i64 %3703, %3704
  %3706 = icmp eq i64 %3705, 2
  %3707 = zext i1 %3706 to i8
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3707, i8* %3708, align 1
  store %struct.Memory* %loadMem_4892c3, %struct.Memory** %MEMORY
  %loadMem_4892c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3710 = getelementptr inbounds %struct.GPR, %struct.GPR* %3709, i32 0, i32 33
  %3711 = getelementptr inbounds %struct.Reg, %struct.Reg* %3710, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %3711 to i64*
  %3712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3713 = getelementptr inbounds %struct.GPR, %struct.GPR* %3712, i32 0, i32 5
  %3714 = getelementptr inbounds %struct.Reg, %struct.Reg* %3713, i32 0, i32 0
  %RCX.i1206 = bitcast %union.anon* %3714 to i64*
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3716 = getelementptr inbounds %struct.GPR, %struct.GPR* %3715, i32 0, i32 15
  %3717 = getelementptr inbounds %struct.Reg, %struct.Reg* %3716, i32 0, i32 0
  %RBP.i1207 = bitcast %union.anon* %3717 to i64*
  %3718 = load i64, i64* %RBP.i1207
  %3719 = sub i64 %3718, 40
  %3720 = load i64, i64* %PC.i1205
  %3721 = add i64 %3720, 4
  store i64 %3721, i64* %PC.i1205
  %3722 = inttoptr i64 %3719 to i32*
  %3723 = load i32, i32* %3722
  %3724 = sext i32 %3723 to i64
  store i64 %3724, i64* %RCX.i1206, align 8
  store %struct.Memory* %loadMem_4892c6, %struct.Memory** %MEMORY
  %loadMem_4892ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3726 = getelementptr inbounds %struct.GPR, %struct.GPR* %3725, i32 0, i32 33
  %3727 = getelementptr inbounds %struct.Reg, %struct.Reg* %3726, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %3727 to i64*
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3729 = getelementptr inbounds %struct.GPR, %struct.GPR* %3728, i32 0, i32 11
  %3730 = getelementptr inbounds %struct.Reg, %struct.Reg* %3729, i32 0, i32 0
  %EDI.i1202 = bitcast %union.anon* %3730 to i32*
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3732 = getelementptr inbounds %struct.GPR, %struct.GPR* %3731, i32 0, i32 1
  %3733 = getelementptr inbounds %struct.Reg, %struct.Reg* %3732, i32 0, i32 0
  %RAX.i1203 = bitcast %union.anon* %3733 to i64*
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3735 = getelementptr inbounds %struct.GPR, %struct.GPR* %3734, i32 0, i32 5
  %3736 = getelementptr inbounds %struct.Reg, %struct.Reg* %3735, i32 0, i32 0
  %RCX.i1204 = bitcast %union.anon* %3736 to i64*
  %3737 = load i64, i64* %RAX.i1203
  %3738 = load i64, i64* %RCX.i1204
  %3739 = mul i64 %3738, 4
  %3740 = add i64 %3739, %3737
  %3741 = load i32, i32* %EDI.i1202
  %3742 = zext i32 %3741 to i64
  %3743 = load i64, i64* %PC.i1201
  %3744 = add i64 %3743, 3
  store i64 %3744, i64* %PC.i1201
  %3745 = inttoptr i64 %3740 to i32*
  store i32 %3741, i32* %3745
  store %struct.Memory* %loadMem_4892ca, %struct.Memory** %MEMORY
  %loadMem_4892cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3747 = getelementptr inbounds %struct.GPR, %struct.GPR* %3746, i32 0, i32 33
  %3748 = getelementptr inbounds %struct.Reg, %struct.Reg* %3747, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %3748 to i64*
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3750 = getelementptr inbounds %struct.GPR, %struct.GPR* %3749, i32 0, i32 1
  %3751 = getelementptr inbounds %struct.Reg, %struct.Reg* %3750, i32 0, i32 0
  %RAX.i1199 = bitcast %union.anon* %3751 to i64*
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3753 = getelementptr inbounds %struct.GPR, %struct.GPR* %3752, i32 0, i32 15
  %3754 = getelementptr inbounds %struct.Reg, %struct.Reg* %3753, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %3754 to i64*
  %3755 = load i64, i64* %RBP.i1200
  %3756 = sub i64 %3755, 36
  %3757 = load i64, i64* %PC.i1198
  %3758 = add i64 %3757, 3
  store i64 %3758, i64* %PC.i1198
  %3759 = inttoptr i64 %3756 to i32*
  %3760 = load i32, i32* %3759
  %3761 = zext i32 %3760 to i64
  store i64 %3761, i64* %RAX.i1199, align 8
  store %struct.Memory* %loadMem_4892cd, %struct.Memory** %MEMORY
  %loadMem_4892d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3763 = getelementptr inbounds %struct.GPR, %struct.GPR* %3762, i32 0, i32 33
  %3764 = getelementptr inbounds %struct.Reg, %struct.Reg* %3763, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %3764 to i64*
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3766 = getelementptr inbounds %struct.GPR, %struct.GPR* %3765, i32 0, i32 1
  %3767 = getelementptr inbounds %struct.Reg, %struct.Reg* %3766, i32 0, i32 0
  %RAX.i1197 = bitcast %union.anon* %3767 to i64*
  %3768 = load i64, i64* %RAX.i1197
  %3769 = load i64, i64* %PC.i1196
  %3770 = add i64 %3769, 3
  store i64 %3770, i64* %PC.i1196
  %3771 = trunc i64 %3768 to i32
  %3772 = add i32 1, %3771
  %3773 = zext i32 %3772 to i64
  store i64 %3773, i64* %RAX.i1197, align 8
  %3774 = icmp ult i32 %3772, %3771
  %3775 = icmp ult i32 %3772, 1
  %3776 = or i1 %3774, %3775
  %3777 = zext i1 %3776 to i8
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3777, i8* %3778, align 1
  %3779 = and i32 %3772, 255
  %3780 = call i32 @llvm.ctpop.i32(i32 %3779)
  %3781 = trunc i32 %3780 to i8
  %3782 = and i8 %3781, 1
  %3783 = xor i8 %3782, 1
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3783, i8* %3784, align 1
  %3785 = xor i64 1, %3768
  %3786 = trunc i64 %3785 to i32
  %3787 = xor i32 %3786, %3772
  %3788 = lshr i32 %3787, 4
  %3789 = trunc i32 %3788 to i8
  %3790 = and i8 %3789, 1
  %3791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3790, i8* %3791, align 1
  %3792 = icmp eq i32 %3772, 0
  %3793 = zext i1 %3792 to i8
  %3794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3793, i8* %3794, align 1
  %3795 = lshr i32 %3772, 31
  %3796 = trunc i32 %3795 to i8
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3796, i8* %3797, align 1
  %3798 = lshr i32 %3771, 31
  %3799 = xor i32 %3795, %3798
  %3800 = add i32 %3799, %3795
  %3801 = icmp eq i32 %3800, 2
  %3802 = zext i1 %3801 to i8
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3802, i8* %3803, align 1
  store %struct.Memory* %loadMem_4892d0, %struct.Memory** %MEMORY
  %loadMem_4892d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3805 = getelementptr inbounds %struct.GPR, %struct.GPR* %3804, i32 0, i32 33
  %3806 = getelementptr inbounds %struct.Reg, %struct.Reg* %3805, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %3806 to i64*
  %3807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3808 = getelementptr inbounds %struct.GPR, %struct.GPR* %3807, i32 0, i32 1
  %3809 = getelementptr inbounds %struct.Reg, %struct.Reg* %3808, i32 0, i32 0
  %EAX.i1194 = bitcast %union.anon* %3809 to i32*
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3811 = getelementptr inbounds %struct.GPR, %struct.GPR* %3810, i32 0, i32 15
  %3812 = getelementptr inbounds %struct.Reg, %struct.Reg* %3811, i32 0, i32 0
  %RBP.i1195 = bitcast %union.anon* %3812 to i64*
  %3813 = load i64, i64* %RBP.i1195
  %3814 = sub i64 %3813, 36
  %3815 = load i32, i32* %EAX.i1194
  %3816 = zext i32 %3815 to i64
  %3817 = load i64, i64* %PC.i1193
  %3818 = add i64 %3817, 3
  store i64 %3818, i64* %PC.i1193
  %3819 = inttoptr i64 %3814 to i32*
  store i32 %3815, i32* %3819
  store %struct.Memory* %loadMem_4892d3, %struct.Memory** %MEMORY
  %loadMem_4892d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3821 = getelementptr inbounds %struct.GPR, %struct.GPR* %3820, i32 0, i32 33
  %3822 = getelementptr inbounds %struct.Reg, %struct.Reg* %3821, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %3822 to i64*
  %3823 = load i64, i64* %PC.i1192
  %3824 = add i64 %3823, -502
  %3825 = load i64, i64* %PC.i1192
  %3826 = add i64 %3825, 5
  store i64 %3826, i64* %PC.i1192
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3824, i64* %3827, align 8
  store %struct.Memory* %loadMem_4892d6, %struct.Memory** %MEMORY
  br label %block_.L_4890e0

block_.L_4892db:                                  ; preds = %block_.L_4890e0
  %loadMem_4892db = load %struct.Memory*, %struct.Memory** %MEMORY
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3829 = getelementptr inbounds %struct.GPR, %struct.GPR* %3828, i32 0, i32 33
  %3830 = getelementptr inbounds %struct.Reg, %struct.Reg* %3829, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %3830 to i64*
  %3831 = load i64, i64* %PC.i1191
  %3832 = add i64 %3831, 5
  %3833 = load i64, i64* %PC.i1191
  %3834 = add i64 %3833, 5
  store i64 %3834, i64* %PC.i1191
  %3835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3832, i64* %3835, align 8
  store %struct.Memory* %loadMem_4892db, %struct.Memory** %MEMORY
  br label %block_.L_4892e0

block_.L_4892e0:                                  ; preds = %block_.L_4892db
  %loadMem_4892e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3837 = getelementptr inbounds %struct.GPR, %struct.GPR* %3836, i32 0, i32 33
  %3838 = getelementptr inbounds %struct.Reg, %struct.Reg* %3837, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %3838 to i64*
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3840 = getelementptr inbounds %struct.GPR, %struct.GPR* %3839, i32 0, i32 1
  %3841 = getelementptr inbounds %struct.Reg, %struct.Reg* %3840, i32 0, i32 0
  %RAX.i1189 = bitcast %union.anon* %3841 to i64*
  %3842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3843 = getelementptr inbounds %struct.GPR, %struct.GPR* %3842, i32 0, i32 15
  %3844 = getelementptr inbounds %struct.Reg, %struct.Reg* %3843, i32 0, i32 0
  %RBP.i1190 = bitcast %union.anon* %3844 to i64*
  %3845 = load i64, i64* %RBP.i1190
  %3846 = sub i64 %3845, 40
  %3847 = load i64, i64* %PC.i1188
  %3848 = add i64 %3847, 3
  store i64 %3848, i64* %PC.i1188
  %3849 = inttoptr i64 %3846 to i32*
  %3850 = load i32, i32* %3849
  %3851 = zext i32 %3850 to i64
  store i64 %3851, i64* %RAX.i1189, align 8
  store %struct.Memory* %loadMem_4892e0, %struct.Memory** %MEMORY
  %loadMem_4892e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3853 = getelementptr inbounds %struct.GPR, %struct.GPR* %3852, i32 0, i32 33
  %3854 = getelementptr inbounds %struct.Reg, %struct.Reg* %3853, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %3854 to i64*
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3856 = getelementptr inbounds %struct.GPR, %struct.GPR* %3855, i32 0, i32 1
  %3857 = getelementptr inbounds %struct.Reg, %struct.Reg* %3856, i32 0, i32 0
  %RAX.i1187 = bitcast %union.anon* %3857 to i64*
  %3858 = load i64, i64* %RAX.i1187
  %3859 = load i64, i64* %PC.i1186
  %3860 = add i64 %3859, 3
  store i64 %3860, i64* %PC.i1186
  %3861 = trunc i64 %3858 to i32
  %3862 = add i32 1, %3861
  %3863 = zext i32 %3862 to i64
  store i64 %3863, i64* %RAX.i1187, align 8
  %3864 = icmp ult i32 %3862, %3861
  %3865 = icmp ult i32 %3862, 1
  %3866 = or i1 %3864, %3865
  %3867 = zext i1 %3866 to i8
  %3868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3867, i8* %3868, align 1
  %3869 = and i32 %3862, 255
  %3870 = call i32 @llvm.ctpop.i32(i32 %3869)
  %3871 = trunc i32 %3870 to i8
  %3872 = and i8 %3871, 1
  %3873 = xor i8 %3872, 1
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3873, i8* %3874, align 1
  %3875 = xor i64 1, %3858
  %3876 = trunc i64 %3875 to i32
  %3877 = xor i32 %3876, %3862
  %3878 = lshr i32 %3877, 4
  %3879 = trunc i32 %3878 to i8
  %3880 = and i8 %3879, 1
  %3881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3880, i8* %3881, align 1
  %3882 = icmp eq i32 %3862, 0
  %3883 = zext i1 %3882 to i8
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3883, i8* %3884, align 1
  %3885 = lshr i32 %3862, 31
  %3886 = trunc i32 %3885 to i8
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3886, i8* %3887, align 1
  %3888 = lshr i32 %3861, 31
  %3889 = xor i32 %3885, %3888
  %3890 = add i32 %3889, %3885
  %3891 = icmp eq i32 %3890, 2
  %3892 = zext i1 %3891 to i8
  %3893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3892, i8* %3893, align 1
  store %struct.Memory* %loadMem_4892e3, %struct.Memory** %MEMORY
  %loadMem_4892e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3895 = getelementptr inbounds %struct.GPR, %struct.GPR* %3894, i32 0, i32 33
  %3896 = getelementptr inbounds %struct.Reg, %struct.Reg* %3895, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %3896 to i64*
  %3897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3898 = getelementptr inbounds %struct.GPR, %struct.GPR* %3897, i32 0, i32 1
  %3899 = getelementptr inbounds %struct.Reg, %struct.Reg* %3898, i32 0, i32 0
  %EAX.i1184 = bitcast %union.anon* %3899 to i32*
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3901 = getelementptr inbounds %struct.GPR, %struct.GPR* %3900, i32 0, i32 15
  %3902 = getelementptr inbounds %struct.Reg, %struct.Reg* %3901, i32 0, i32 0
  %RBP.i1185 = bitcast %union.anon* %3902 to i64*
  %3903 = load i64, i64* %RBP.i1185
  %3904 = sub i64 %3903, 40
  %3905 = load i32, i32* %EAX.i1184
  %3906 = zext i32 %3905 to i64
  %3907 = load i64, i64* %PC.i1183
  %3908 = add i64 %3907, 3
  store i64 %3908, i64* %PC.i1183
  %3909 = inttoptr i64 %3904 to i32*
  store i32 %3905, i32* %3909
  store %struct.Memory* %loadMem_4892e6, %struct.Memory** %MEMORY
  %loadMem_4892e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3911 = getelementptr inbounds %struct.GPR, %struct.GPR* %3910, i32 0, i32 33
  %3912 = getelementptr inbounds %struct.Reg, %struct.Reg* %3911, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %3912 to i64*
  %3913 = load i64, i64* %PC.i1182
  %3914 = add i64 %3913, -538
  %3915 = load i64, i64* %PC.i1182
  %3916 = add i64 %3915, 5
  store i64 %3916, i64* %PC.i1182
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3914, i64* %3917, align 8
  store %struct.Memory* %loadMem_4892e9, %struct.Memory** %MEMORY
  br label %block_.L_4890cf

block_.L_4892ee:                                  ; preds = %block_.L_4890cf
  %loadMem_4892ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3919 = getelementptr inbounds %struct.GPR, %struct.GPR* %3918, i32 0, i32 33
  %3920 = getelementptr inbounds %struct.Reg, %struct.Reg* %3919, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %3920 to i64*
  %3921 = load i64, i64* %PC.i1181
  %3922 = add i64 %3921, 5
  %3923 = load i64, i64* %PC.i1181
  %3924 = add i64 %3923, 5
  store i64 %3924, i64* %PC.i1181
  %3925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3922, i64* %3925, align 8
  store %struct.Memory* %loadMem_4892ee, %struct.Memory** %MEMORY
  br label %block_.L_4892f3

block_.L_4892f3:                                  ; preds = %block_.L_4892ee, %block_.L_4890b3
  %loadMem_4892f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3927 = getelementptr inbounds %struct.GPR, %struct.GPR* %3926, i32 0, i32 33
  %3928 = getelementptr inbounds %struct.Reg, %struct.Reg* %3927, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %3928 to i64*
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3930 = getelementptr inbounds %struct.GPR, %struct.GPR* %3929, i32 0, i32 1
  %3931 = getelementptr inbounds %struct.Reg, %struct.Reg* %3930, i32 0, i32 0
  %RAX.i1179 = bitcast %union.anon* %3931 to i64*
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3933 = getelementptr inbounds %struct.GPR, %struct.GPR* %3932, i32 0, i32 15
  %3934 = getelementptr inbounds %struct.Reg, %struct.Reg* %3933, i32 0, i32 0
  %RBP.i1180 = bitcast %union.anon* %3934 to i64*
  %3935 = load i64, i64* %RBP.i1180
  %3936 = sub i64 %3935, 16
  %3937 = load i64, i64* %PC.i1178
  %3938 = add i64 %3937, 4
  store i64 %3938, i64* %PC.i1178
  %3939 = inttoptr i64 %3936 to i64*
  %3940 = load i64, i64* %3939
  store i64 %3940, i64* %RAX.i1179, align 8
  store %struct.Memory* %loadMem_4892f3, %struct.Memory** %MEMORY
  %loadMem_4892f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3942 = getelementptr inbounds %struct.GPR, %struct.GPR* %3941, i32 0, i32 33
  %3943 = getelementptr inbounds %struct.Reg, %struct.Reg* %3942, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %3943 to i64*
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3945 = getelementptr inbounds %struct.GPR, %struct.GPR* %3944, i32 0, i32 1
  %3946 = getelementptr inbounds %struct.Reg, %struct.Reg* %3945, i32 0, i32 0
  %RAX.i1176 = bitcast %union.anon* %3946 to i64*
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3948 = getelementptr inbounds %struct.GPR, %struct.GPR* %3947, i32 0, i32 11
  %3949 = getelementptr inbounds %struct.Reg, %struct.Reg* %3948, i32 0, i32 0
  %RDI.i1177 = bitcast %union.anon* %3949 to i64*
  %3950 = load i64, i64* %RAX.i1176
  %3951 = load i64, i64* %PC.i1175
  %3952 = add i64 %3951, 2
  store i64 %3952, i64* %PC.i1175
  %3953 = inttoptr i64 %3950 to i32*
  %3954 = load i32, i32* %3953
  %3955 = zext i32 %3954 to i64
  store i64 %3955, i64* %RDI.i1177, align 8
  store %struct.Memory* %loadMem_4892f7, %struct.Memory** %MEMORY
  %loadMem1_4892f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3957 = getelementptr inbounds %struct.GPR, %struct.GPR* %3956, i32 0, i32 33
  %3958 = getelementptr inbounds %struct.Reg, %struct.Reg* %3957, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %3958 to i64*
  %3959 = load i64, i64* %PC.i1174
  %3960 = add i64 %3959, -544537
  %3961 = load i64, i64* %PC.i1174
  %3962 = add i64 %3961, 5
  %3963 = load i64, i64* %PC.i1174
  %3964 = add i64 %3963, 5
  store i64 %3964, i64* %PC.i1174
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3966 = load i64, i64* %3965, align 8
  %3967 = add i64 %3966, -8
  %3968 = inttoptr i64 %3967 to i64*
  store i64 %3962, i64* %3968
  store i64 %3967, i64* %3965, align 8
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3960, i64* %3969, align 8
  store %struct.Memory* %loadMem1_4892f9, %struct.Memory** %MEMORY
  %loadMem2_4892f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4892f9 = load i64, i64* %3
  %call2_4892f9 = call %struct.Memory* @sub_4043e0.dct_luma_16x16(%struct.State* %0, i64 %loadPC_4892f9, %struct.Memory* %loadMem2_4892f9)
  store %struct.Memory* %call2_4892f9, %struct.Memory** %MEMORY
  %loadMem_4892fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3971 = getelementptr inbounds %struct.GPR, %struct.GPR* %3970, i32 0, i32 33
  %3972 = getelementptr inbounds %struct.Reg, %struct.Reg* %3971, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %3972 to i64*
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3974 = getelementptr inbounds %struct.GPR, %struct.GPR* %3973, i32 0, i32 5
  %3975 = getelementptr inbounds %struct.Reg, %struct.Reg* %3974, i32 0, i32 0
  %RCX.i1172 = bitcast %union.anon* %3975 to i64*
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3977 = getelementptr inbounds %struct.GPR, %struct.GPR* %3976, i32 0, i32 15
  %3978 = getelementptr inbounds %struct.Reg, %struct.Reg* %3977, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %3978 to i64*
  %3979 = load i64, i64* %RBP.i1173
  %3980 = sub i64 %3979, 8
  %3981 = load i64, i64* %PC.i1171
  %3982 = add i64 %3981, 4
  store i64 %3982, i64* %PC.i1171
  %3983 = inttoptr i64 %3980 to i64*
  %3984 = load i64, i64* %3983
  store i64 %3984, i64* %RCX.i1172, align 8
  store %struct.Memory* %loadMem_4892fe, %struct.Memory** %MEMORY
  %loadMem_489302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 33
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %3987 to i64*
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3989 = getelementptr inbounds %struct.GPR, %struct.GPR* %3988, i32 0, i32 1
  %3990 = getelementptr inbounds %struct.Reg, %struct.Reg* %3989, i32 0, i32 0
  %EAX.i1169 = bitcast %union.anon* %3990 to i32*
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3992 = getelementptr inbounds %struct.GPR, %struct.GPR* %3991, i32 0, i32 5
  %3993 = getelementptr inbounds %struct.Reg, %struct.Reg* %3992, i32 0, i32 0
  %RCX.i1170 = bitcast %union.anon* %3993 to i64*
  %3994 = load i64, i64* %RCX.i1170
  %3995 = add i64 %3994, 460
  %3996 = load i32, i32* %EAX.i1169
  %3997 = zext i32 %3996 to i64
  %3998 = load i64, i64* %PC.i1168
  %3999 = add i64 %3998, 6
  store i64 %3999, i64* %PC.i1168
  %4000 = inttoptr i64 %3995 to i32*
  store i32 %3996, i32* %4000
  store %struct.Memory* %loadMem_489302, %struct.Memory** %MEMORY
  %loadMem_489308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4002 = getelementptr inbounds %struct.GPR, %struct.GPR* %4001, i32 0, i32 33
  %4003 = getelementptr inbounds %struct.Reg, %struct.Reg* %4002, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %4003 to i64*
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4005 = getelementptr inbounds %struct.GPR, %struct.GPR* %4004, i32 0, i32 5
  %4006 = getelementptr inbounds %struct.Reg, %struct.Reg* %4005, i32 0, i32 0
  %RCX.i1167 = bitcast %union.anon* %4006 to i64*
  %4007 = load i64, i64* %PC.i1166
  %4008 = add i64 %4007, 8
  store i64 %4008, i64* %PC.i1166
  %4009 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4009, i64* %RCX.i1167, align 8
  store %struct.Memory* %loadMem_489308, %struct.Memory** %MEMORY
  %loadMem_489310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4011 = getelementptr inbounds %struct.GPR, %struct.GPR* %4010, i32 0, i32 33
  %4012 = getelementptr inbounds %struct.Reg, %struct.Reg* %4011, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %4012 to i64*
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 5
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %RCX.i1165 = bitcast %union.anon* %4015 to i64*
  %4016 = load i64, i64* %RCX.i1165
  %4017 = add i64 %4016, 72724
  %4018 = load i64, i64* %PC.i1164
  %4019 = add i64 %4018, 7
  store i64 %4019, i64* %PC.i1164
  %4020 = inttoptr i64 %4017 to i32*
  %4021 = load i32, i32* %4020
  %4022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4022, align 1
  %4023 = and i32 %4021, 255
  %4024 = call i32 @llvm.ctpop.i32(i32 %4023)
  %4025 = trunc i32 %4024 to i8
  %4026 = and i8 %4025, 1
  %4027 = xor i8 %4026, 1
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4027, i8* %4028, align 1
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4029, align 1
  %4030 = icmp eq i32 %4021, 0
  %4031 = zext i1 %4030 to i8
  %4032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4031, i8* %4032, align 1
  %4033 = lshr i32 %4021, 31
  %4034 = trunc i32 %4033 to i8
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4034, i8* %4035, align 1
  %4036 = lshr i32 %4021, 31
  %4037 = xor i32 %4033, %4036
  %4038 = add i32 %4037, %4036
  %4039 = icmp eq i32 %4038, 2
  %4040 = zext i1 %4039 to i8
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4040, i8* %4041, align 1
  store %struct.Memory* %loadMem_489310, %struct.Memory** %MEMORY
  %loadMem_489317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4043 = getelementptr inbounds %struct.GPR, %struct.GPR* %4042, i32 0, i32 33
  %4044 = getelementptr inbounds %struct.Reg, %struct.Reg* %4043, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %4044 to i64*
  %4045 = load i64, i64* %PC.i1163
  %4046 = add i64 %4045, 1924
  %4047 = load i64, i64* %PC.i1163
  %4048 = add i64 %4047, 6
  %4049 = load i64, i64* %PC.i1163
  %4050 = add i64 %4049, 6
  store i64 %4050, i64* %PC.i1163
  %4051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4052 = load i8, i8* %4051, align 1
  store i8 %4052, i8* %BRANCH_TAKEN, align 1
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4054 = icmp ne i8 %4052, 0
  %4055 = select i1 %4054, i64 %4046, i64 %4048
  store i64 %4055, i64* %4053, align 8
  store %struct.Memory* %loadMem_489317, %struct.Memory** %MEMORY
  %loadBr_489317 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489317 = icmp eq i8 %loadBr_489317, 1
  br i1 %cmpBr_489317, label %block_.L_489a9b, label %block_48931d

block_48931d:                                     ; preds = %block_.L_4892f3
  %loadMem_48931d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4057 = getelementptr inbounds %struct.GPR, %struct.GPR* %4056, i32 0, i32 33
  %4058 = getelementptr inbounds %struct.Reg, %struct.Reg* %4057, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %4058 to i64*
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4060 = getelementptr inbounds %struct.GPR, %struct.GPR* %4059, i32 0, i32 15
  %4061 = getelementptr inbounds %struct.Reg, %struct.Reg* %4060, i32 0, i32 0
  %RBP.i1162 = bitcast %union.anon* %4061 to i64*
  %4062 = load i64, i64* %RBP.i1162
  %4063 = sub i64 %4062, 40
  %4064 = load i64, i64* %PC.i1161
  %4065 = add i64 %4064, 7
  store i64 %4065, i64* %PC.i1161
  %4066 = inttoptr i64 %4063 to i32*
  store i32 0, i32* %4066
  store %struct.Memory* %loadMem_48931d, %struct.Memory** %MEMORY
  br label %block_.L_489324

block_.L_489324:                                  ; preds = %block_.L_4893cb, %block_48931d
  %loadMem_489324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4068 = getelementptr inbounds %struct.GPR, %struct.GPR* %4067, i32 0, i32 33
  %4069 = getelementptr inbounds %struct.Reg, %struct.Reg* %4068, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %4069 to i64*
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4071 = getelementptr inbounds %struct.GPR, %struct.GPR* %4070, i32 0, i32 15
  %4072 = getelementptr inbounds %struct.Reg, %struct.Reg* %4071, i32 0, i32 0
  %RBP.i1160 = bitcast %union.anon* %4072 to i64*
  %4073 = load i64, i64* %RBP.i1160
  %4074 = sub i64 %4073, 40
  %4075 = load i64, i64* %PC.i1159
  %4076 = add i64 %4075, 4
  store i64 %4076, i64* %PC.i1159
  %4077 = inttoptr i64 %4074 to i32*
  %4078 = load i32, i32* %4077
  %4079 = sub i32 %4078, 16
  %4080 = icmp ult i32 %4078, 16
  %4081 = zext i1 %4080 to i8
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4081, i8* %4082, align 1
  %4083 = and i32 %4079, 255
  %4084 = call i32 @llvm.ctpop.i32(i32 %4083)
  %4085 = trunc i32 %4084 to i8
  %4086 = and i8 %4085, 1
  %4087 = xor i8 %4086, 1
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4087, i8* %4088, align 1
  %4089 = xor i32 %4078, 16
  %4090 = xor i32 %4089, %4079
  %4091 = lshr i32 %4090, 4
  %4092 = trunc i32 %4091 to i8
  %4093 = and i8 %4092, 1
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4093, i8* %4094, align 1
  %4095 = icmp eq i32 %4079, 0
  %4096 = zext i1 %4095 to i8
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4096, i8* %4097, align 1
  %4098 = lshr i32 %4079, 31
  %4099 = trunc i32 %4098 to i8
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4099, i8* %4100, align 1
  %4101 = lshr i32 %4078, 31
  %4102 = xor i32 %4098, %4101
  %4103 = add i32 %4102, %4101
  %4104 = icmp eq i32 %4103, 2
  %4105 = zext i1 %4104 to i8
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4105, i8* %4106, align 1
  store %struct.Memory* %loadMem_489324, %struct.Memory** %MEMORY
  %loadMem_489328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4108 = getelementptr inbounds %struct.GPR, %struct.GPR* %4107, i32 0, i32 33
  %4109 = getelementptr inbounds %struct.Reg, %struct.Reg* %4108, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %4109 to i64*
  %4110 = load i64, i64* %PC.i1158
  %4111 = add i64 %4110, 177
  %4112 = load i64, i64* %PC.i1158
  %4113 = add i64 %4112, 6
  %4114 = load i64, i64* %PC.i1158
  %4115 = add i64 %4114, 6
  store i64 %4115, i64* %PC.i1158
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4117 = load i8, i8* %4116, align 1
  %4118 = icmp ne i8 %4117, 0
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4120 = load i8, i8* %4119, align 1
  %4121 = icmp ne i8 %4120, 0
  %4122 = xor i1 %4118, %4121
  %4123 = xor i1 %4122, true
  %4124 = zext i1 %4123 to i8
  store i8 %4124, i8* %BRANCH_TAKEN, align 1
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4126 = select i1 %4122, i64 %4113, i64 %4111
  store i64 %4126, i64* %4125, align 8
  store %struct.Memory* %loadMem_489328, %struct.Memory** %MEMORY
  %loadBr_489328 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489328 = icmp eq i8 %loadBr_489328, 1
  br i1 %cmpBr_489328, label %block_.L_4893d9, label %block_48932e

block_48932e:                                     ; preds = %block_.L_489324
  %loadMem_48932e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4128 = getelementptr inbounds %struct.GPR, %struct.GPR* %4127, i32 0, i32 33
  %4129 = getelementptr inbounds %struct.Reg, %struct.Reg* %4128, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %4129 to i64*
  %4130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4131 = getelementptr inbounds %struct.GPR, %struct.GPR* %4130, i32 0, i32 15
  %4132 = getelementptr inbounds %struct.Reg, %struct.Reg* %4131, i32 0, i32 0
  %RBP.i1157 = bitcast %union.anon* %4132 to i64*
  %4133 = load i64, i64* %RBP.i1157
  %4134 = sub i64 %4133, 36
  %4135 = load i64, i64* %PC.i1156
  %4136 = add i64 %4135, 7
  store i64 %4136, i64* %PC.i1156
  %4137 = inttoptr i64 %4134 to i32*
  store i32 0, i32* %4137
  store %struct.Memory* %loadMem_48932e, %struct.Memory** %MEMORY
  br label %block_.L_489335

block_.L_489335:                                  ; preds = %block_48933f, %block_48932e
  %loadMem_489335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4139 = getelementptr inbounds %struct.GPR, %struct.GPR* %4138, i32 0, i32 33
  %4140 = getelementptr inbounds %struct.Reg, %struct.Reg* %4139, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %4140 to i64*
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4142 = getelementptr inbounds %struct.GPR, %struct.GPR* %4141, i32 0, i32 15
  %4143 = getelementptr inbounds %struct.Reg, %struct.Reg* %4142, i32 0, i32 0
  %RBP.i1155 = bitcast %union.anon* %4143 to i64*
  %4144 = load i64, i64* %RBP.i1155
  %4145 = sub i64 %4144, 36
  %4146 = load i64, i64* %PC.i1154
  %4147 = add i64 %4146, 4
  store i64 %4147, i64* %PC.i1154
  %4148 = inttoptr i64 %4145 to i32*
  %4149 = load i32, i32* %4148
  %4150 = sub i32 %4149, 16
  %4151 = icmp ult i32 %4149, 16
  %4152 = zext i1 %4151 to i8
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4152, i8* %4153, align 1
  %4154 = and i32 %4150, 255
  %4155 = call i32 @llvm.ctpop.i32(i32 %4154)
  %4156 = trunc i32 %4155 to i8
  %4157 = and i8 %4156, 1
  %4158 = xor i8 %4157, 1
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4158, i8* %4159, align 1
  %4160 = xor i32 %4149, 16
  %4161 = xor i32 %4160, %4150
  %4162 = lshr i32 %4161, 4
  %4163 = trunc i32 %4162 to i8
  %4164 = and i8 %4163, 1
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4164, i8* %4165, align 1
  %4166 = icmp eq i32 %4150, 0
  %4167 = zext i1 %4166 to i8
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4167, i8* %4168, align 1
  %4169 = lshr i32 %4150, 31
  %4170 = trunc i32 %4169 to i8
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4170, i8* %4171, align 1
  %4172 = lshr i32 %4149, 31
  %4173 = xor i32 %4169, %4172
  %4174 = add i32 %4173, %4172
  %4175 = icmp eq i32 %4174, 2
  %4176 = zext i1 %4175 to i8
  %4177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4176, i8* %4177, align 1
  store %struct.Memory* %loadMem_489335, %struct.Memory** %MEMORY
  %loadMem_489339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4179 = getelementptr inbounds %struct.GPR, %struct.GPR* %4178, i32 0, i32 33
  %4180 = getelementptr inbounds %struct.Reg, %struct.Reg* %4179, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %4180 to i64*
  %4181 = load i64, i64* %PC.i1153
  %4182 = add i64 %4181, 141
  %4183 = load i64, i64* %PC.i1153
  %4184 = add i64 %4183, 6
  %4185 = load i64, i64* %PC.i1153
  %4186 = add i64 %4185, 6
  store i64 %4186, i64* %PC.i1153
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4188 = load i8, i8* %4187, align 1
  %4189 = icmp ne i8 %4188, 0
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4191 = load i8, i8* %4190, align 1
  %4192 = icmp ne i8 %4191, 0
  %4193 = xor i1 %4189, %4192
  %4194 = xor i1 %4193, true
  %4195 = zext i1 %4194 to i8
  store i8 %4195, i8* %BRANCH_TAKEN, align 1
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4197 = select i1 %4193, i64 %4184, i64 %4182
  store i64 %4197, i64* %4196, align 8
  store %struct.Memory* %loadMem_489339, %struct.Memory** %MEMORY
  %loadBr_489339 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489339 = icmp eq i8 %loadBr_489339, 1
  br i1 %cmpBr_489339, label %block_.L_4893c6, label %block_48933f

block_48933f:                                     ; preds = %block_.L_489335
  %loadMem_48933f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4199 = getelementptr inbounds %struct.GPR, %struct.GPR* %4198, i32 0, i32 33
  %4200 = getelementptr inbounds %struct.Reg, %struct.Reg* %4199, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %4200 to i64*
  %4201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4202 = getelementptr inbounds %struct.GPR, %struct.GPR* %4201, i32 0, i32 1
  %4203 = getelementptr inbounds %struct.Reg, %struct.Reg* %4202, i32 0, i32 0
  %RAX.i1152 = bitcast %union.anon* %4203 to i64*
  %4204 = load i64, i64* %PC.i1151
  %4205 = add i64 %4204, 10
  store i64 %4205, i64* %PC.i1151
  store i64 ptrtoint (%G__0x6f6fa0_type* @G__0x6f6fa0 to i64), i64* %RAX.i1152, align 8
  store %struct.Memory* %loadMem_48933f, %struct.Memory** %MEMORY
  %loadMem_489349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 33
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %4208 to i64*
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 5
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %RCX.i1150 = bitcast %union.anon* %4211 to i64*
  %4212 = load i64, i64* %PC.i1149
  %4213 = add i64 %4212, 10
  store i64 %4213, i64* %PC.i1149
  store i64 ptrtoint (%G__0x722ff0_type* @G__0x722ff0 to i64), i64* %RCX.i1150, align 8
  store %struct.Memory* %loadMem_489349, %struct.Memory** %MEMORY
  %loadMem_489353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4215 = getelementptr inbounds %struct.GPR, %struct.GPR* %4214, i32 0, i32 33
  %4216 = getelementptr inbounds %struct.Reg, %struct.Reg* %4215, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %4216 to i64*
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4218 = getelementptr inbounds %struct.GPR, %struct.GPR* %4217, i32 0, i32 7
  %4219 = getelementptr inbounds %struct.Reg, %struct.Reg* %4218, i32 0, i32 0
  %RDX.i1148 = bitcast %union.anon* %4219 to i64*
  %4220 = load i64, i64* %PC.i1147
  %4221 = add i64 %4220, 8
  store i64 %4221, i64* %PC.i1147
  %4222 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4222, i64* %RDX.i1148, align 8
  store %struct.Memory* %loadMem_489353, %struct.Memory** %MEMORY
  %loadMem_48935b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4224 = getelementptr inbounds %struct.GPR, %struct.GPR* %4223, i32 0, i32 33
  %4225 = getelementptr inbounds %struct.Reg, %struct.Reg* %4224, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %4225 to i64*
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 7
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %RDX.i1146 = bitcast %union.anon* %4228 to i64*
  %4229 = load i64, i64* %RDX.i1146
  %4230 = load i64, i64* %PC.i1145
  %4231 = add i64 %4230, 7
  store i64 %4231, i64* %PC.i1145
  %4232 = add i64 13112, %4229
  store i64 %4232, i64* %RDX.i1146, align 8
  %4233 = icmp ult i64 %4232, %4229
  %4234 = icmp ult i64 %4232, 13112
  %4235 = or i1 %4233, %4234
  %4236 = zext i1 %4235 to i8
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4236, i8* %4237, align 1
  %4238 = trunc i64 %4232 to i32
  %4239 = and i32 %4238, 255
  %4240 = call i32 @llvm.ctpop.i32(i32 %4239)
  %4241 = trunc i32 %4240 to i8
  %4242 = and i8 %4241, 1
  %4243 = xor i8 %4242, 1
  %4244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4243, i8* %4244, align 1
  %4245 = xor i64 13112, %4229
  %4246 = xor i64 %4245, %4232
  %4247 = lshr i64 %4246, 4
  %4248 = trunc i64 %4247 to i8
  %4249 = and i8 %4248, 1
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4249, i8* %4250, align 1
  %4251 = icmp eq i64 %4232, 0
  %4252 = zext i1 %4251 to i8
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4252, i8* %4253, align 1
  %4254 = lshr i64 %4232, 63
  %4255 = trunc i64 %4254 to i8
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4255, i8* %4256, align 1
  %4257 = lshr i64 %4229, 63
  %4258 = xor i64 %4254, %4257
  %4259 = add i64 %4258, %4254
  %4260 = icmp eq i64 %4259, 2
  %4261 = zext i1 %4260 to i8
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4261, i8* %4262, align 1
  store %struct.Memory* %loadMem_48935b, %struct.Memory** %MEMORY
  %loadMem_489362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4264 = getelementptr inbounds %struct.GPR, %struct.GPR* %4263, i32 0, i32 33
  %4265 = getelementptr inbounds %struct.Reg, %struct.Reg* %4264, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %4265 to i64*
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4267 = getelementptr inbounds %struct.GPR, %struct.GPR* %4266, i32 0, i32 9
  %4268 = getelementptr inbounds %struct.Reg, %struct.Reg* %4267, i32 0, i32 0
  %RSI.i1143 = bitcast %union.anon* %4268 to i64*
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4270 = getelementptr inbounds %struct.GPR, %struct.GPR* %4269, i32 0, i32 15
  %4271 = getelementptr inbounds %struct.Reg, %struct.Reg* %4270, i32 0, i32 0
  %RBP.i1144 = bitcast %union.anon* %4271 to i64*
  %4272 = load i64, i64* %RBP.i1144
  %4273 = sub i64 %4272, 36
  %4274 = load i64, i64* %PC.i1142
  %4275 = add i64 %4274, 4
  store i64 %4275, i64* %PC.i1142
  %4276 = inttoptr i64 %4273 to i32*
  %4277 = load i32, i32* %4276
  %4278 = sext i32 %4277 to i64
  store i64 %4278, i64* %RSI.i1143, align 8
  store %struct.Memory* %loadMem_489362, %struct.Memory** %MEMORY
  %loadMem_489366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4280 = getelementptr inbounds %struct.GPR, %struct.GPR* %4279, i32 0, i32 33
  %4281 = getelementptr inbounds %struct.Reg, %struct.Reg* %4280, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %4281 to i64*
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4283 = getelementptr inbounds %struct.GPR, %struct.GPR* %4282, i32 0, i32 9
  %4284 = getelementptr inbounds %struct.Reg, %struct.Reg* %4283, i32 0, i32 0
  %RSI.i1141 = bitcast %union.anon* %4284 to i64*
  %4285 = load i64, i64* %RSI.i1141
  %4286 = load i64, i64* %PC.i1140
  %4287 = add i64 %4286, 4
  store i64 %4287, i64* %PC.i1140
  %4288 = shl i64 %4285, 5
  %4289 = icmp slt i64 %4288, 0
  %4290 = shl i64 %4288, 1
  store i64 %4290, i64* %RSI.i1141, align 8
  %4291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4292 = zext i1 %4289 to i8
  store i8 %4292, i8* %4291, align 1
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4294 = trunc i64 %4290 to i32
  %4295 = and i32 %4294, 254
  %4296 = call i32 @llvm.ctpop.i32(i32 %4295)
  %4297 = trunc i32 %4296 to i8
  %4298 = and i8 %4297, 1
  %4299 = xor i8 %4298, 1
  store i8 %4299, i8* %4293, align 1
  %4300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4300, align 1
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4302 = icmp eq i64 %4290, 0
  %4303 = zext i1 %4302 to i8
  store i8 %4303, i8* %4301, align 1
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4305 = lshr i64 %4290, 63
  %4306 = trunc i64 %4305 to i8
  store i8 %4306, i8* %4304, align 1
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4307, align 1
  store %struct.Memory* %loadMem_489366, %struct.Memory** %MEMORY
  %loadMem_48936a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4309 = getelementptr inbounds %struct.GPR, %struct.GPR* %4308, i32 0, i32 33
  %4310 = getelementptr inbounds %struct.Reg, %struct.Reg* %4309, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %4310 to i64*
  %4311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4312 = getelementptr inbounds %struct.GPR, %struct.GPR* %4311, i32 0, i32 7
  %4313 = getelementptr inbounds %struct.Reg, %struct.Reg* %4312, i32 0, i32 0
  %RDX.i1138 = bitcast %union.anon* %4313 to i64*
  %4314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4315 = getelementptr inbounds %struct.GPR, %struct.GPR* %4314, i32 0, i32 9
  %4316 = getelementptr inbounds %struct.Reg, %struct.Reg* %4315, i32 0, i32 0
  %RSI.i1139 = bitcast %union.anon* %4316 to i64*
  %4317 = load i64, i64* %RDX.i1138
  %4318 = load i64, i64* %RSI.i1139
  %4319 = load i64, i64* %PC.i1137
  %4320 = add i64 %4319, 3
  store i64 %4320, i64* %PC.i1137
  %4321 = add i64 %4318, %4317
  store i64 %4321, i64* %RDX.i1138, align 8
  %4322 = icmp ult i64 %4321, %4317
  %4323 = icmp ult i64 %4321, %4318
  %4324 = or i1 %4322, %4323
  %4325 = zext i1 %4324 to i8
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4325, i8* %4326, align 1
  %4327 = trunc i64 %4321 to i32
  %4328 = and i32 %4327, 255
  %4329 = call i32 @llvm.ctpop.i32(i32 %4328)
  %4330 = trunc i32 %4329 to i8
  %4331 = and i8 %4330, 1
  %4332 = xor i8 %4331, 1
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4332, i8* %4333, align 1
  %4334 = xor i64 %4318, %4317
  %4335 = xor i64 %4334, %4321
  %4336 = lshr i64 %4335, 4
  %4337 = trunc i64 %4336 to i8
  %4338 = and i8 %4337, 1
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4338, i8* %4339, align 1
  %4340 = icmp eq i64 %4321, 0
  %4341 = zext i1 %4340 to i8
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4341, i8* %4342, align 1
  %4343 = lshr i64 %4321, 63
  %4344 = trunc i64 %4343 to i8
  %4345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4344, i8* %4345, align 1
  %4346 = lshr i64 %4317, 63
  %4347 = lshr i64 %4318, 63
  %4348 = xor i64 %4343, %4346
  %4349 = xor i64 %4343, %4347
  %4350 = add i64 %4348, %4349
  %4351 = icmp eq i64 %4350, 2
  %4352 = zext i1 %4351 to i8
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4352, i8* %4353, align 1
  store %struct.Memory* %loadMem_48936a, %struct.Memory** %MEMORY
  %loadMem_48936d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4355 = getelementptr inbounds %struct.GPR, %struct.GPR* %4354, i32 0, i32 33
  %4356 = getelementptr inbounds %struct.Reg, %struct.Reg* %4355, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %4356 to i64*
  %4357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4358 = getelementptr inbounds %struct.GPR, %struct.GPR* %4357, i32 0, i32 9
  %4359 = getelementptr inbounds %struct.Reg, %struct.Reg* %4358, i32 0, i32 0
  %RSI.i1135 = bitcast %union.anon* %4359 to i64*
  %4360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4361 = getelementptr inbounds %struct.GPR, %struct.GPR* %4360, i32 0, i32 15
  %4362 = getelementptr inbounds %struct.Reg, %struct.Reg* %4361, i32 0, i32 0
  %RBP.i1136 = bitcast %union.anon* %4362 to i64*
  %4363 = load i64, i64* %RBP.i1136
  %4364 = sub i64 %4363, 40
  %4365 = load i64, i64* %PC.i1134
  %4366 = add i64 %4365, 4
  store i64 %4366, i64* %PC.i1134
  %4367 = inttoptr i64 %4364 to i32*
  %4368 = load i32, i32* %4367
  %4369 = sext i32 %4368 to i64
  store i64 %4369, i64* %RSI.i1135, align 8
  store %struct.Memory* %loadMem_48936d, %struct.Memory** %MEMORY
  %loadMem_489371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4371 = getelementptr inbounds %struct.GPR, %struct.GPR* %4370, i32 0, i32 33
  %4372 = getelementptr inbounds %struct.Reg, %struct.Reg* %4371, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %4372 to i64*
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4374 = getelementptr inbounds %struct.GPR, %struct.GPR* %4373, i32 0, i32 7
  %4375 = getelementptr inbounds %struct.Reg, %struct.Reg* %4374, i32 0, i32 0
  %RDX.i1131 = bitcast %union.anon* %4375 to i64*
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4377 = getelementptr inbounds %struct.GPR, %struct.GPR* %4376, i32 0, i32 9
  %4378 = getelementptr inbounds %struct.Reg, %struct.Reg* %4377, i32 0, i32 0
  %RSI.i1132 = bitcast %union.anon* %4378 to i64*
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 11
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %RDI.i1133 = bitcast %union.anon* %4381 to i64*
  %4382 = load i64, i64* %RDX.i1131
  %4383 = load i64, i64* %RSI.i1132
  %4384 = mul i64 %4383, 4
  %4385 = add i64 %4384, %4382
  %4386 = load i64, i64* %PC.i1130
  %4387 = add i64 %4386, 3
  store i64 %4387, i64* %PC.i1130
  %4388 = inttoptr i64 %4385 to i32*
  %4389 = load i32, i32* %4388
  %4390 = zext i32 %4389 to i64
  store i64 %4390, i64* %RDI.i1133, align 8
  store %struct.Memory* %loadMem_489371, %struct.Memory** %MEMORY
  %loadMem_489374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4392 = getelementptr inbounds %struct.GPR, %struct.GPR* %4391, i32 0, i32 33
  %4393 = getelementptr inbounds %struct.Reg, %struct.Reg* %4392, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %4393 to i64*
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4395 = getelementptr inbounds %struct.GPR, %struct.GPR* %4394, i32 0, i32 7
  %4396 = getelementptr inbounds %struct.Reg, %struct.Reg* %4395, i32 0, i32 0
  %RDX.i1128 = bitcast %union.anon* %4396 to i64*
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4398 = getelementptr inbounds %struct.GPR, %struct.GPR* %4397, i32 0, i32 15
  %4399 = getelementptr inbounds %struct.Reg, %struct.Reg* %4398, i32 0, i32 0
  %RBP.i1129 = bitcast %union.anon* %4399 to i64*
  %4400 = load i64, i64* %RBP.i1129
  %4401 = sub i64 %4400, 36
  %4402 = load i64, i64* %PC.i1127
  %4403 = add i64 %4402, 4
  store i64 %4403, i64* %PC.i1127
  %4404 = inttoptr i64 %4401 to i32*
  %4405 = load i32, i32* %4404
  %4406 = sext i32 %4405 to i64
  store i64 %4406, i64* %RDX.i1128, align 8
  store %struct.Memory* %loadMem_489374, %struct.Memory** %MEMORY
  %loadMem_489378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4408 = getelementptr inbounds %struct.GPR, %struct.GPR* %4407, i32 0, i32 33
  %4409 = getelementptr inbounds %struct.Reg, %struct.Reg* %4408, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %4409 to i64*
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4411 = getelementptr inbounds %struct.GPR, %struct.GPR* %4410, i32 0, i32 7
  %4412 = getelementptr inbounds %struct.Reg, %struct.Reg* %4411, i32 0, i32 0
  %RDX.i1126 = bitcast %union.anon* %4412 to i64*
  %4413 = load i64, i64* %RDX.i1126
  %4414 = load i64, i64* %PC.i1125
  %4415 = add i64 %4414, 4
  store i64 %4415, i64* %PC.i1125
  %4416 = shl i64 %4413, 5
  %4417 = icmp slt i64 %4416, 0
  %4418 = shl i64 %4416, 1
  store i64 %4418, i64* %RDX.i1126, align 8
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4420 = zext i1 %4417 to i8
  store i8 %4420, i8* %4419, align 1
  %4421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4422 = trunc i64 %4418 to i32
  %4423 = and i32 %4422, 254
  %4424 = call i32 @llvm.ctpop.i32(i32 %4423)
  %4425 = trunc i32 %4424 to i8
  %4426 = and i8 %4425, 1
  %4427 = xor i8 %4426, 1
  store i8 %4427, i8* %4421, align 1
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4428, align 1
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4430 = icmp eq i64 %4418, 0
  %4431 = zext i1 %4430 to i8
  store i8 %4431, i8* %4429, align 1
  %4432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4433 = lshr i64 %4418, 63
  %4434 = trunc i64 %4433 to i8
  store i8 %4434, i8* %4432, align 1
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4435, align 1
  store %struct.Memory* %loadMem_489378, %struct.Memory** %MEMORY
  %loadMem_48937c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4437 = getelementptr inbounds %struct.GPR, %struct.GPR* %4436, i32 0, i32 33
  %4438 = getelementptr inbounds %struct.Reg, %struct.Reg* %4437, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %4438 to i64*
  %4439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4440 = getelementptr inbounds %struct.GPR, %struct.GPR* %4439, i32 0, i32 5
  %4441 = getelementptr inbounds %struct.Reg, %struct.Reg* %4440, i32 0, i32 0
  %RCX.i1123 = bitcast %union.anon* %4441 to i64*
  %4442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4443 = getelementptr inbounds %struct.GPR, %struct.GPR* %4442, i32 0, i32 7
  %4444 = getelementptr inbounds %struct.Reg, %struct.Reg* %4443, i32 0, i32 0
  %RDX.i1124 = bitcast %union.anon* %4444 to i64*
  %4445 = load i64, i64* %RCX.i1123
  %4446 = load i64, i64* %RDX.i1124
  %4447 = load i64, i64* %PC.i1122
  %4448 = add i64 %4447, 3
  store i64 %4448, i64* %PC.i1122
  %4449 = add i64 %4446, %4445
  store i64 %4449, i64* %RCX.i1123, align 8
  %4450 = icmp ult i64 %4449, %4445
  %4451 = icmp ult i64 %4449, %4446
  %4452 = or i1 %4450, %4451
  %4453 = zext i1 %4452 to i8
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4453, i8* %4454, align 1
  %4455 = trunc i64 %4449 to i32
  %4456 = and i32 %4455, 255
  %4457 = call i32 @llvm.ctpop.i32(i32 %4456)
  %4458 = trunc i32 %4457 to i8
  %4459 = and i8 %4458, 1
  %4460 = xor i8 %4459, 1
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4460, i8* %4461, align 1
  %4462 = xor i64 %4446, %4445
  %4463 = xor i64 %4462, %4449
  %4464 = lshr i64 %4463, 4
  %4465 = trunc i64 %4464 to i8
  %4466 = and i8 %4465, 1
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4466, i8* %4467, align 1
  %4468 = icmp eq i64 %4449, 0
  %4469 = zext i1 %4468 to i8
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4469, i8* %4470, align 1
  %4471 = lshr i64 %4449, 63
  %4472 = trunc i64 %4471 to i8
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4472, i8* %4473, align 1
  %4474 = lshr i64 %4445, 63
  %4475 = lshr i64 %4446, 63
  %4476 = xor i64 %4471, %4474
  %4477 = xor i64 %4471, %4475
  %4478 = add i64 %4476, %4477
  %4479 = icmp eq i64 %4478, 2
  %4480 = zext i1 %4479 to i8
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4480, i8* %4481, align 1
  store %struct.Memory* %loadMem_48937c, %struct.Memory** %MEMORY
  %loadMem_48937f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4483 = getelementptr inbounds %struct.GPR, %struct.GPR* %4482, i32 0, i32 33
  %4484 = getelementptr inbounds %struct.Reg, %struct.Reg* %4483, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %4484 to i64*
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 7
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %RDX.i1120 = bitcast %union.anon* %4487 to i64*
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4489 = getelementptr inbounds %struct.GPR, %struct.GPR* %4488, i32 0, i32 15
  %4490 = getelementptr inbounds %struct.Reg, %struct.Reg* %4489, i32 0, i32 0
  %RBP.i1121 = bitcast %union.anon* %4490 to i64*
  %4491 = load i64, i64* %RBP.i1121
  %4492 = sub i64 %4491, 40
  %4493 = load i64, i64* %PC.i1119
  %4494 = add i64 %4493, 4
  store i64 %4494, i64* %PC.i1119
  %4495 = inttoptr i64 %4492 to i32*
  %4496 = load i32, i32* %4495
  %4497 = sext i32 %4496 to i64
  store i64 %4497, i64* %RDX.i1120, align 8
  store %struct.Memory* %loadMem_48937f, %struct.Memory** %MEMORY
  %loadMem_489383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4499 = getelementptr inbounds %struct.GPR, %struct.GPR* %4498, i32 0, i32 33
  %4500 = getelementptr inbounds %struct.Reg, %struct.Reg* %4499, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %4500 to i64*
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4502 = getelementptr inbounds %struct.GPR, %struct.GPR* %4501, i32 0, i32 11
  %4503 = getelementptr inbounds %struct.Reg, %struct.Reg* %4502, i32 0, i32 0
  %EDI.i1116 = bitcast %union.anon* %4503 to i32*
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4505 = getelementptr inbounds %struct.GPR, %struct.GPR* %4504, i32 0, i32 5
  %4506 = getelementptr inbounds %struct.Reg, %struct.Reg* %4505, i32 0, i32 0
  %RCX.i1117 = bitcast %union.anon* %4506 to i64*
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4508 = getelementptr inbounds %struct.GPR, %struct.GPR* %4507, i32 0, i32 7
  %4509 = getelementptr inbounds %struct.Reg, %struct.Reg* %4508, i32 0, i32 0
  %RDX.i1118 = bitcast %union.anon* %4509 to i64*
  %4510 = load i64, i64* %RCX.i1117
  %4511 = load i64, i64* %RDX.i1118
  %4512 = mul i64 %4511, 4
  %4513 = add i64 %4512, %4510
  %4514 = load i32, i32* %EDI.i1116
  %4515 = zext i32 %4514 to i64
  %4516 = load i64, i64* %PC.i1115
  %4517 = add i64 %4516, 3
  store i64 %4517, i64* %PC.i1115
  %4518 = inttoptr i64 %4513 to i32*
  store i32 %4514, i32* %4518
  store %struct.Memory* %loadMem_489383, %struct.Memory** %MEMORY
  %loadMem_489386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4520 = getelementptr inbounds %struct.GPR, %struct.GPR* %4519, i32 0, i32 33
  %4521 = getelementptr inbounds %struct.Reg, %struct.Reg* %4520, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %4521 to i64*
  %4522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4523 = getelementptr inbounds %struct.GPR, %struct.GPR* %4522, i32 0, i32 5
  %4524 = getelementptr inbounds %struct.Reg, %struct.Reg* %4523, i32 0, i32 0
  %RCX.i1113 = bitcast %union.anon* %4524 to i64*
  %4525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4526 = getelementptr inbounds %struct.GPR, %struct.GPR* %4525, i32 0, i32 15
  %4527 = getelementptr inbounds %struct.Reg, %struct.Reg* %4526, i32 0, i32 0
  %RBP.i1114 = bitcast %union.anon* %4527 to i64*
  %4528 = load i64, i64* %RBP.i1114
  %4529 = sub i64 %4528, 36
  %4530 = load i64, i64* %PC.i1112
  %4531 = add i64 %4530, 4
  store i64 %4531, i64* %PC.i1112
  %4532 = inttoptr i64 %4529 to i32*
  %4533 = load i32, i32* %4532
  %4534 = sext i32 %4533 to i64
  store i64 %4534, i64* %RCX.i1113, align 8
  store %struct.Memory* %loadMem_489386, %struct.Memory** %MEMORY
  %loadMem_48938a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4536 = getelementptr inbounds %struct.GPR, %struct.GPR* %4535, i32 0, i32 33
  %4537 = getelementptr inbounds %struct.Reg, %struct.Reg* %4536, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %4537 to i64*
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4539 = getelementptr inbounds %struct.GPR, %struct.GPR* %4538, i32 0, i32 5
  %4540 = getelementptr inbounds %struct.Reg, %struct.Reg* %4539, i32 0, i32 0
  %RCX.i1111 = bitcast %union.anon* %4540 to i64*
  %4541 = load i64, i64* %RCX.i1111
  %4542 = load i64, i64* %PC.i1110
  %4543 = add i64 %4542, 4
  store i64 %4543, i64* %PC.i1110
  %4544 = shl i64 %4541, 5
  %4545 = icmp slt i64 %4544, 0
  %4546 = shl i64 %4544, 1
  store i64 %4546, i64* %RCX.i1111, align 8
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4548 = zext i1 %4545 to i8
  store i8 %4548, i8* %4547, align 1
  %4549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4550 = trunc i64 %4546 to i32
  %4551 = and i32 %4550, 254
  %4552 = call i32 @llvm.ctpop.i32(i32 %4551)
  %4553 = trunc i32 %4552 to i8
  %4554 = and i8 %4553, 1
  %4555 = xor i8 %4554, 1
  store i8 %4555, i8* %4549, align 1
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4556, align 1
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4558 = icmp eq i64 %4546, 0
  %4559 = zext i1 %4558 to i8
  store i8 %4559, i8* %4557, align 1
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4561 = lshr i64 %4546, 63
  %4562 = trunc i64 %4561 to i8
  store i8 %4562, i8* %4560, align 1
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4563, align 1
  store %struct.Memory* %loadMem_48938a, %struct.Memory** %MEMORY
  %loadMem_48938e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4565 = getelementptr inbounds %struct.GPR, %struct.GPR* %4564, i32 0, i32 33
  %4566 = getelementptr inbounds %struct.Reg, %struct.Reg* %4565, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %4566 to i64*
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4568 = getelementptr inbounds %struct.GPR, %struct.GPR* %4567, i32 0, i32 1
  %4569 = getelementptr inbounds %struct.Reg, %struct.Reg* %4568, i32 0, i32 0
  %RAX.i1108 = bitcast %union.anon* %4569 to i64*
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4571 = getelementptr inbounds %struct.GPR, %struct.GPR* %4570, i32 0, i32 5
  %4572 = getelementptr inbounds %struct.Reg, %struct.Reg* %4571, i32 0, i32 0
  %RCX.i1109 = bitcast %union.anon* %4572 to i64*
  %4573 = load i64, i64* %RAX.i1108
  %4574 = load i64, i64* %RCX.i1109
  %4575 = load i64, i64* %PC.i1107
  %4576 = add i64 %4575, 3
  store i64 %4576, i64* %PC.i1107
  %4577 = add i64 %4574, %4573
  store i64 %4577, i64* %RAX.i1108, align 8
  %4578 = icmp ult i64 %4577, %4573
  %4579 = icmp ult i64 %4577, %4574
  %4580 = or i1 %4578, %4579
  %4581 = zext i1 %4580 to i8
  %4582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4581, i8* %4582, align 1
  %4583 = trunc i64 %4577 to i32
  %4584 = and i32 %4583, 255
  %4585 = call i32 @llvm.ctpop.i32(i32 %4584)
  %4586 = trunc i32 %4585 to i8
  %4587 = and i8 %4586, 1
  %4588 = xor i8 %4587, 1
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4588, i8* %4589, align 1
  %4590 = xor i64 %4574, %4573
  %4591 = xor i64 %4590, %4577
  %4592 = lshr i64 %4591, 4
  %4593 = trunc i64 %4592 to i8
  %4594 = and i8 %4593, 1
  %4595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4594, i8* %4595, align 1
  %4596 = icmp eq i64 %4577, 0
  %4597 = zext i1 %4596 to i8
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4597, i8* %4598, align 1
  %4599 = lshr i64 %4577, 63
  %4600 = trunc i64 %4599 to i8
  %4601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4600, i8* %4601, align 1
  %4602 = lshr i64 %4573, 63
  %4603 = lshr i64 %4574, 63
  %4604 = xor i64 %4599, %4602
  %4605 = xor i64 %4599, %4603
  %4606 = add i64 %4604, %4605
  %4607 = icmp eq i64 %4606, 2
  %4608 = zext i1 %4607 to i8
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4608, i8* %4609, align 1
  store %struct.Memory* %loadMem_48938e, %struct.Memory** %MEMORY
  %loadMem_489391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4611 = getelementptr inbounds %struct.GPR, %struct.GPR* %4610, i32 0, i32 33
  %4612 = getelementptr inbounds %struct.Reg, %struct.Reg* %4611, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %4612 to i64*
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4614 = getelementptr inbounds %struct.GPR, %struct.GPR* %4613, i32 0, i32 5
  %4615 = getelementptr inbounds %struct.Reg, %struct.Reg* %4614, i32 0, i32 0
  %RCX.i1105 = bitcast %union.anon* %4615 to i64*
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4617 = getelementptr inbounds %struct.GPR, %struct.GPR* %4616, i32 0, i32 15
  %4618 = getelementptr inbounds %struct.Reg, %struct.Reg* %4617, i32 0, i32 0
  %RBP.i1106 = bitcast %union.anon* %4618 to i64*
  %4619 = load i64, i64* %RBP.i1106
  %4620 = sub i64 %4619, 40
  %4621 = load i64, i64* %PC.i1104
  %4622 = add i64 %4621, 4
  store i64 %4622, i64* %PC.i1104
  %4623 = inttoptr i64 %4620 to i32*
  %4624 = load i32, i32* %4623
  %4625 = sext i32 %4624 to i64
  store i64 %4625, i64* %RCX.i1105, align 8
  store %struct.Memory* %loadMem_489391, %struct.Memory** %MEMORY
  %loadMem_489395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4627 = getelementptr inbounds %struct.GPR, %struct.GPR* %4626, i32 0, i32 33
  %4628 = getelementptr inbounds %struct.Reg, %struct.Reg* %4627, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %4628 to i64*
  %4629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4630 = getelementptr inbounds %struct.GPR, %struct.GPR* %4629, i32 0, i32 1
  %4631 = getelementptr inbounds %struct.Reg, %struct.Reg* %4630, i32 0, i32 0
  %RAX.i1101 = bitcast %union.anon* %4631 to i64*
  %4632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4633 = getelementptr inbounds %struct.GPR, %struct.GPR* %4632, i32 0, i32 5
  %4634 = getelementptr inbounds %struct.Reg, %struct.Reg* %4633, i32 0, i32 0
  %RCX.i1102 = bitcast %union.anon* %4634 to i64*
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4636 = getelementptr inbounds %struct.GPR, %struct.GPR* %4635, i32 0, i32 11
  %4637 = getelementptr inbounds %struct.Reg, %struct.Reg* %4636, i32 0, i32 0
  %RDI.i1103 = bitcast %union.anon* %4637 to i64*
  %4638 = load i64, i64* %RAX.i1101
  %4639 = load i64, i64* %RCX.i1102
  %4640 = mul i64 %4639, 4
  %4641 = add i64 %4640, %4638
  %4642 = load i64, i64* %PC.i1100
  %4643 = add i64 %4642, 3
  store i64 %4643, i64* %PC.i1100
  %4644 = inttoptr i64 %4641 to i32*
  %4645 = load i32, i32* %4644
  %4646 = zext i32 %4645 to i64
  store i64 %4646, i64* %RDI.i1103, align 8
  store %struct.Memory* %loadMem_489395, %struct.Memory** %MEMORY
  %loadMem_489398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4648 = getelementptr inbounds %struct.GPR, %struct.GPR* %4647, i32 0, i32 33
  %4649 = getelementptr inbounds %struct.Reg, %struct.Reg* %4648, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %4649 to i64*
  %4650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4651 = getelementptr inbounds %struct.GPR, %struct.GPR* %4650, i32 0, i32 1
  %4652 = getelementptr inbounds %struct.Reg, %struct.Reg* %4651, i32 0, i32 0
  %RAX.i1099 = bitcast %union.anon* %4652 to i64*
  %4653 = load i64, i64* %PC.i1098
  %4654 = add i64 %4653, 8
  store i64 %4654, i64* %PC.i1098
  %4655 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4655, i64* %RAX.i1099, align 8
  store %struct.Memory* %loadMem_489398, %struct.Memory** %MEMORY
  %loadMem_4893a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4657 = getelementptr inbounds %struct.GPR, %struct.GPR* %4656, i32 0, i32 33
  %4658 = getelementptr inbounds %struct.Reg, %struct.Reg* %4657, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %4658 to i64*
  %4659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4660 = getelementptr inbounds %struct.GPR, %struct.GPR* %4659, i32 0, i32 1
  %4661 = getelementptr inbounds %struct.Reg, %struct.Reg* %4660, i32 0, i32 0
  %RAX.i1097 = bitcast %union.anon* %4661 to i64*
  %4662 = load i64, i64* %RAX.i1097
  %4663 = load i64, i64* %PC.i1096
  %4664 = add i64 %4663, 6
  store i64 %4664, i64* %PC.i1096
  %4665 = add i64 13112, %4662
  store i64 %4665, i64* %RAX.i1097, align 8
  %4666 = icmp ult i64 %4665, %4662
  %4667 = icmp ult i64 %4665, 13112
  %4668 = or i1 %4666, %4667
  %4669 = zext i1 %4668 to i8
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4669, i8* %4670, align 1
  %4671 = trunc i64 %4665 to i32
  %4672 = and i32 %4671, 255
  %4673 = call i32 @llvm.ctpop.i32(i32 %4672)
  %4674 = trunc i32 %4673 to i8
  %4675 = and i8 %4674, 1
  %4676 = xor i8 %4675, 1
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4676, i8* %4677, align 1
  %4678 = xor i64 13112, %4662
  %4679 = xor i64 %4678, %4665
  %4680 = lshr i64 %4679, 4
  %4681 = trunc i64 %4680 to i8
  %4682 = and i8 %4681, 1
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4682, i8* %4683, align 1
  %4684 = icmp eq i64 %4665, 0
  %4685 = zext i1 %4684 to i8
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4685, i8* %4686, align 1
  %4687 = lshr i64 %4665, 63
  %4688 = trunc i64 %4687 to i8
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4688, i8* %4689, align 1
  %4690 = lshr i64 %4662, 63
  %4691 = xor i64 %4687, %4690
  %4692 = add i64 %4691, %4687
  %4693 = icmp eq i64 %4692, 2
  %4694 = zext i1 %4693 to i8
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4694, i8* %4695, align 1
  store %struct.Memory* %loadMem_4893a0, %struct.Memory** %MEMORY
  %loadMem_4893a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4697 = getelementptr inbounds %struct.GPR, %struct.GPR* %4696, i32 0, i32 33
  %4698 = getelementptr inbounds %struct.Reg, %struct.Reg* %4697, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %4698 to i64*
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 5
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %RCX.i1094 = bitcast %union.anon* %4701 to i64*
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4703 = getelementptr inbounds %struct.GPR, %struct.GPR* %4702, i32 0, i32 15
  %4704 = getelementptr inbounds %struct.Reg, %struct.Reg* %4703, i32 0, i32 0
  %RBP.i1095 = bitcast %union.anon* %4704 to i64*
  %4705 = load i64, i64* %RBP.i1095
  %4706 = sub i64 %4705, 36
  %4707 = load i64, i64* %PC.i1093
  %4708 = add i64 %4707, 4
  store i64 %4708, i64* %PC.i1093
  %4709 = inttoptr i64 %4706 to i32*
  %4710 = load i32, i32* %4709
  %4711 = sext i32 %4710 to i64
  store i64 %4711, i64* %RCX.i1094, align 8
  store %struct.Memory* %loadMem_4893a6, %struct.Memory** %MEMORY
  %loadMem_4893aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4713 = getelementptr inbounds %struct.GPR, %struct.GPR* %4712, i32 0, i32 33
  %4714 = getelementptr inbounds %struct.Reg, %struct.Reg* %4713, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %4714 to i64*
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4716 = getelementptr inbounds %struct.GPR, %struct.GPR* %4715, i32 0, i32 5
  %4717 = getelementptr inbounds %struct.Reg, %struct.Reg* %4716, i32 0, i32 0
  %RCX.i1092 = bitcast %union.anon* %4717 to i64*
  %4718 = load i64, i64* %RCX.i1092
  %4719 = load i64, i64* %PC.i1091
  %4720 = add i64 %4719, 4
  store i64 %4720, i64* %PC.i1091
  %4721 = shl i64 %4718, 5
  %4722 = icmp slt i64 %4721, 0
  %4723 = shl i64 %4721, 1
  store i64 %4723, i64* %RCX.i1092, align 8
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4725 = zext i1 %4722 to i8
  store i8 %4725, i8* %4724, align 1
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4727 = trunc i64 %4723 to i32
  %4728 = and i32 %4727, 254
  %4729 = call i32 @llvm.ctpop.i32(i32 %4728)
  %4730 = trunc i32 %4729 to i8
  %4731 = and i8 %4730, 1
  %4732 = xor i8 %4731, 1
  store i8 %4732, i8* %4726, align 1
  %4733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4733, align 1
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4735 = icmp eq i64 %4723, 0
  %4736 = zext i1 %4735 to i8
  store i8 %4736, i8* %4734, align 1
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4738 = lshr i64 %4723, 63
  %4739 = trunc i64 %4738 to i8
  store i8 %4739, i8* %4737, align 1
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4740, align 1
  store %struct.Memory* %loadMem_4893aa, %struct.Memory** %MEMORY
  %loadMem_4893ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %4741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4742 = getelementptr inbounds %struct.GPR, %struct.GPR* %4741, i32 0, i32 33
  %4743 = getelementptr inbounds %struct.Reg, %struct.Reg* %4742, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %4743 to i64*
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4745 = getelementptr inbounds %struct.GPR, %struct.GPR* %4744, i32 0, i32 1
  %4746 = getelementptr inbounds %struct.Reg, %struct.Reg* %4745, i32 0, i32 0
  %RAX.i1089 = bitcast %union.anon* %4746 to i64*
  %4747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4748 = getelementptr inbounds %struct.GPR, %struct.GPR* %4747, i32 0, i32 5
  %4749 = getelementptr inbounds %struct.Reg, %struct.Reg* %4748, i32 0, i32 0
  %RCX.i1090 = bitcast %union.anon* %4749 to i64*
  %4750 = load i64, i64* %RAX.i1089
  %4751 = load i64, i64* %RCX.i1090
  %4752 = load i64, i64* %PC.i1088
  %4753 = add i64 %4752, 3
  store i64 %4753, i64* %PC.i1088
  %4754 = add i64 %4751, %4750
  store i64 %4754, i64* %RAX.i1089, align 8
  %4755 = icmp ult i64 %4754, %4750
  %4756 = icmp ult i64 %4754, %4751
  %4757 = or i1 %4755, %4756
  %4758 = zext i1 %4757 to i8
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4758, i8* %4759, align 1
  %4760 = trunc i64 %4754 to i32
  %4761 = and i32 %4760, 255
  %4762 = call i32 @llvm.ctpop.i32(i32 %4761)
  %4763 = trunc i32 %4762 to i8
  %4764 = and i8 %4763, 1
  %4765 = xor i8 %4764, 1
  %4766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4765, i8* %4766, align 1
  %4767 = xor i64 %4751, %4750
  %4768 = xor i64 %4767, %4754
  %4769 = lshr i64 %4768, 4
  %4770 = trunc i64 %4769 to i8
  %4771 = and i8 %4770, 1
  %4772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4771, i8* %4772, align 1
  %4773 = icmp eq i64 %4754, 0
  %4774 = zext i1 %4773 to i8
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4774, i8* %4775, align 1
  %4776 = lshr i64 %4754, 63
  %4777 = trunc i64 %4776 to i8
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4777, i8* %4778, align 1
  %4779 = lshr i64 %4750, 63
  %4780 = lshr i64 %4751, 63
  %4781 = xor i64 %4776, %4779
  %4782 = xor i64 %4776, %4780
  %4783 = add i64 %4781, %4782
  %4784 = icmp eq i64 %4783, 2
  %4785 = zext i1 %4784 to i8
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4785, i8* %4786, align 1
  store %struct.Memory* %loadMem_4893ae, %struct.Memory** %MEMORY
  %loadMem_4893b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4788 = getelementptr inbounds %struct.GPR, %struct.GPR* %4787, i32 0, i32 33
  %4789 = getelementptr inbounds %struct.Reg, %struct.Reg* %4788, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %4789 to i64*
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4791 = getelementptr inbounds %struct.GPR, %struct.GPR* %4790, i32 0, i32 5
  %4792 = getelementptr inbounds %struct.Reg, %struct.Reg* %4791, i32 0, i32 0
  %RCX.i1086 = bitcast %union.anon* %4792 to i64*
  %4793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4794 = getelementptr inbounds %struct.GPR, %struct.GPR* %4793, i32 0, i32 15
  %4795 = getelementptr inbounds %struct.Reg, %struct.Reg* %4794, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %4795 to i64*
  %4796 = load i64, i64* %RBP.i1087
  %4797 = sub i64 %4796, 40
  %4798 = load i64, i64* %PC.i1085
  %4799 = add i64 %4798, 4
  store i64 %4799, i64* %PC.i1085
  %4800 = inttoptr i64 %4797 to i32*
  %4801 = load i32, i32* %4800
  %4802 = sext i32 %4801 to i64
  store i64 %4802, i64* %RCX.i1086, align 8
  store %struct.Memory* %loadMem_4893b1, %struct.Memory** %MEMORY
  %loadMem_4893b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4804 = getelementptr inbounds %struct.GPR, %struct.GPR* %4803, i32 0, i32 33
  %4805 = getelementptr inbounds %struct.Reg, %struct.Reg* %4804, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %4805 to i64*
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4807 = getelementptr inbounds %struct.GPR, %struct.GPR* %4806, i32 0, i32 11
  %4808 = getelementptr inbounds %struct.Reg, %struct.Reg* %4807, i32 0, i32 0
  %EDI.i1082 = bitcast %union.anon* %4808 to i32*
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 1
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %RAX.i1083 = bitcast %union.anon* %4811 to i64*
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 5
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %RCX.i1084 = bitcast %union.anon* %4814 to i64*
  %4815 = load i64, i64* %RAX.i1083
  %4816 = load i64, i64* %RCX.i1084
  %4817 = mul i64 %4816, 4
  %4818 = add i64 %4817, %4815
  %4819 = load i32, i32* %EDI.i1082
  %4820 = zext i32 %4819 to i64
  %4821 = load i64, i64* %PC.i1081
  %4822 = add i64 %4821, 3
  store i64 %4822, i64* %PC.i1081
  %4823 = inttoptr i64 %4818 to i32*
  store i32 %4819, i32* %4823
  store %struct.Memory* %loadMem_4893b5, %struct.Memory** %MEMORY
  %loadMem_4893b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4825 = getelementptr inbounds %struct.GPR, %struct.GPR* %4824, i32 0, i32 33
  %4826 = getelementptr inbounds %struct.Reg, %struct.Reg* %4825, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %4826 to i64*
  %4827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4828 = getelementptr inbounds %struct.GPR, %struct.GPR* %4827, i32 0, i32 1
  %4829 = getelementptr inbounds %struct.Reg, %struct.Reg* %4828, i32 0, i32 0
  %RAX.i1079 = bitcast %union.anon* %4829 to i64*
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4831 = getelementptr inbounds %struct.GPR, %struct.GPR* %4830, i32 0, i32 15
  %4832 = getelementptr inbounds %struct.Reg, %struct.Reg* %4831, i32 0, i32 0
  %RBP.i1080 = bitcast %union.anon* %4832 to i64*
  %4833 = load i64, i64* %RBP.i1080
  %4834 = sub i64 %4833, 36
  %4835 = load i64, i64* %PC.i1078
  %4836 = add i64 %4835, 3
  store i64 %4836, i64* %PC.i1078
  %4837 = inttoptr i64 %4834 to i32*
  %4838 = load i32, i32* %4837
  %4839 = zext i32 %4838 to i64
  store i64 %4839, i64* %RAX.i1079, align 8
  store %struct.Memory* %loadMem_4893b8, %struct.Memory** %MEMORY
  %loadMem_4893bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 33
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %4842 to i64*
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4844 = getelementptr inbounds %struct.GPR, %struct.GPR* %4843, i32 0, i32 1
  %4845 = getelementptr inbounds %struct.Reg, %struct.Reg* %4844, i32 0, i32 0
  %RAX.i1077 = bitcast %union.anon* %4845 to i64*
  %4846 = load i64, i64* %RAX.i1077
  %4847 = load i64, i64* %PC.i1076
  %4848 = add i64 %4847, 3
  store i64 %4848, i64* %PC.i1076
  %4849 = trunc i64 %4846 to i32
  %4850 = add i32 1, %4849
  %4851 = zext i32 %4850 to i64
  store i64 %4851, i64* %RAX.i1077, align 8
  %4852 = icmp ult i32 %4850, %4849
  %4853 = icmp ult i32 %4850, 1
  %4854 = or i1 %4852, %4853
  %4855 = zext i1 %4854 to i8
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4855, i8* %4856, align 1
  %4857 = and i32 %4850, 255
  %4858 = call i32 @llvm.ctpop.i32(i32 %4857)
  %4859 = trunc i32 %4858 to i8
  %4860 = and i8 %4859, 1
  %4861 = xor i8 %4860, 1
  %4862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4861, i8* %4862, align 1
  %4863 = xor i64 1, %4846
  %4864 = trunc i64 %4863 to i32
  %4865 = xor i32 %4864, %4850
  %4866 = lshr i32 %4865, 4
  %4867 = trunc i32 %4866 to i8
  %4868 = and i8 %4867, 1
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4868, i8* %4869, align 1
  %4870 = icmp eq i32 %4850, 0
  %4871 = zext i1 %4870 to i8
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4871, i8* %4872, align 1
  %4873 = lshr i32 %4850, 31
  %4874 = trunc i32 %4873 to i8
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4874, i8* %4875, align 1
  %4876 = lshr i32 %4849, 31
  %4877 = xor i32 %4873, %4876
  %4878 = add i32 %4877, %4873
  %4879 = icmp eq i32 %4878, 2
  %4880 = zext i1 %4879 to i8
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4880, i8* %4881, align 1
  store %struct.Memory* %loadMem_4893bb, %struct.Memory** %MEMORY
  %loadMem_4893be = load %struct.Memory*, %struct.Memory** %MEMORY
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4883 = getelementptr inbounds %struct.GPR, %struct.GPR* %4882, i32 0, i32 33
  %4884 = getelementptr inbounds %struct.Reg, %struct.Reg* %4883, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %4884 to i64*
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4886 = getelementptr inbounds %struct.GPR, %struct.GPR* %4885, i32 0, i32 1
  %4887 = getelementptr inbounds %struct.Reg, %struct.Reg* %4886, i32 0, i32 0
  %EAX.i1074 = bitcast %union.anon* %4887 to i32*
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4889 = getelementptr inbounds %struct.GPR, %struct.GPR* %4888, i32 0, i32 15
  %4890 = getelementptr inbounds %struct.Reg, %struct.Reg* %4889, i32 0, i32 0
  %RBP.i1075 = bitcast %union.anon* %4890 to i64*
  %4891 = load i64, i64* %RBP.i1075
  %4892 = sub i64 %4891, 36
  %4893 = load i32, i32* %EAX.i1074
  %4894 = zext i32 %4893 to i64
  %4895 = load i64, i64* %PC.i1073
  %4896 = add i64 %4895, 3
  store i64 %4896, i64* %PC.i1073
  %4897 = inttoptr i64 %4892 to i32*
  store i32 %4893, i32* %4897
  store %struct.Memory* %loadMem_4893be, %struct.Memory** %MEMORY
  %loadMem_4893c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4899 = getelementptr inbounds %struct.GPR, %struct.GPR* %4898, i32 0, i32 33
  %4900 = getelementptr inbounds %struct.Reg, %struct.Reg* %4899, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %4900 to i64*
  %4901 = load i64, i64* %PC.i1072
  %4902 = add i64 %4901, -140
  %4903 = load i64, i64* %PC.i1072
  %4904 = add i64 %4903, 5
  store i64 %4904, i64* %PC.i1072
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4902, i64* %4905, align 8
  store %struct.Memory* %loadMem_4893c1, %struct.Memory** %MEMORY
  br label %block_.L_489335

block_.L_4893c6:                                  ; preds = %block_.L_489335
  %loadMem_4893c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4907 = getelementptr inbounds %struct.GPR, %struct.GPR* %4906, i32 0, i32 33
  %4908 = getelementptr inbounds %struct.Reg, %struct.Reg* %4907, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %4908 to i64*
  %4909 = load i64, i64* %PC.i1071
  %4910 = add i64 %4909, 5
  %4911 = load i64, i64* %PC.i1071
  %4912 = add i64 %4911, 5
  store i64 %4912, i64* %PC.i1071
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4910, i64* %4913, align 8
  store %struct.Memory* %loadMem_4893c6, %struct.Memory** %MEMORY
  br label %block_.L_4893cb

block_.L_4893cb:                                  ; preds = %block_.L_4893c6
  %loadMem_4893cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4915 = getelementptr inbounds %struct.GPR, %struct.GPR* %4914, i32 0, i32 33
  %4916 = getelementptr inbounds %struct.Reg, %struct.Reg* %4915, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %4916 to i64*
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4918 = getelementptr inbounds %struct.GPR, %struct.GPR* %4917, i32 0, i32 1
  %4919 = getelementptr inbounds %struct.Reg, %struct.Reg* %4918, i32 0, i32 0
  %RAX.i1069 = bitcast %union.anon* %4919 to i64*
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4921 = getelementptr inbounds %struct.GPR, %struct.GPR* %4920, i32 0, i32 15
  %4922 = getelementptr inbounds %struct.Reg, %struct.Reg* %4921, i32 0, i32 0
  %RBP.i1070 = bitcast %union.anon* %4922 to i64*
  %4923 = load i64, i64* %RBP.i1070
  %4924 = sub i64 %4923, 40
  %4925 = load i64, i64* %PC.i1068
  %4926 = add i64 %4925, 3
  store i64 %4926, i64* %PC.i1068
  %4927 = inttoptr i64 %4924 to i32*
  %4928 = load i32, i32* %4927
  %4929 = zext i32 %4928 to i64
  store i64 %4929, i64* %RAX.i1069, align 8
  store %struct.Memory* %loadMem_4893cb, %struct.Memory** %MEMORY
  %loadMem_4893ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4931 = getelementptr inbounds %struct.GPR, %struct.GPR* %4930, i32 0, i32 33
  %4932 = getelementptr inbounds %struct.Reg, %struct.Reg* %4931, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %4932 to i64*
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4934 = getelementptr inbounds %struct.GPR, %struct.GPR* %4933, i32 0, i32 1
  %4935 = getelementptr inbounds %struct.Reg, %struct.Reg* %4934, i32 0, i32 0
  %RAX.i1067 = bitcast %union.anon* %4935 to i64*
  %4936 = load i64, i64* %RAX.i1067
  %4937 = load i64, i64* %PC.i1066
  %4938 = add i64 %4937, 3
  store i64 %4938, i64* %PC.i1066
  %4939 = trunc i64 %4936 to i32
  %4940 = add i32 1, %4939
  %4941 = zext i32 %4940 to i64
  store i64 %4941, i64* %RAX.i1067, align 8
  %4942 = icmp ult i32 %4940, %4939
  %4943 = icmp ult i32 %4940, 1
  %4944 = or i1 %4942, %4943
  %4945 = zext i1 %4944 to i8
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4945, i8* %4946, align 1
  %4947 = and i32 %4940, 255
  %4948 = call i32 @llvm.ctpop.i32(i32 %4947)
  %4949 = trunc i32 %4948 to i8
  %4950 = and i8 %4949, 1
  %4951 = xor i8 %4950, 1
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4951, i8* %4952, align 1
  %4953 = xor i64 1, %4936
  %4954 = trunc i64 %4953 to i32
  %4955 = xor i32 %4954, %4940
  %4956 = lshr i32 %4955, 4
  %4957 = trunc i32 %4956 to i8
  %4958 = and i8 %4957, 1
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4958, i8* %4959, align 1
  %4960 = icmp eq i32 %4940, 0
  %4961 = zext i1 %4960 to i8
  %4962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4961, i8* %4962, align 1
  %4963 = lshr i32 %4940, 31
  %4964 = trunc i32 %4963 to i8
  %4965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4964, i8* %4965, align 1
  %4966 = lshr i32 %4939, 31
  %4967 = xor i32 %4963, %4966
  %4968 = add i32 %4967, %4963
  %4969 = icmp eq i32 %4968, 2
  %4970 = zext i1 %4969 to i8
  %4971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4970, i8* %4971, align 1
  store %struct.Memory* %loadMem_4893ce, %struct.Memory** %MEMORY
  %loadMem_4893d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4973 = getelementptr inbounds %struct.GPR, %struct.GPR* %4972, i32 0, i32 33
  %4974 = getelementptr inbounds %struct.Reg, %struct.Reg* %4973, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %4974 to i64*
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4976 = getelementptr inbounds %struct.GPR, %struct.GPR* %4975, i32 0, i32 1
  %4977 = getelementptr inbounds %struct.Reg, %struct.Reg* %4976, i32 0, i32 0
  %EAX.i1064 = bitcast %union.anon* %4977 to i32*
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4979 = getelementptr inbounds %struct.GPR, %struct.GPR* %4978, i32 0, i32 15
  %4980 = getelementptr inbounds %struct.Reg, %struct.Reg* %4979, i32 0, i32 0
  %RBP.i1065 = bitcast %union.anon* %4980 to i64*
  %4981 = load i64, i64* %RBP.i1065
  %4982 = sub i64 %4981, 40
  %4983 = load i32, i32* %EAX.i1064
  %4984 = zext i32 %4983 to i64
  %4985 = load i64, i64* %PC.i1063
  %4986 = add i64 %4985, 3
  store i64 %4986, i64* %PC.i1063
  %4987 = inttoptr i64 %4982 to i32*
  store i32 %4983, i32* %4987
  store %struct.Memory* %loadMem_4893d1, %struct.Memory** %MEMORY
  %loadMem_4893d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4989 = getelementptr inbounds %struct.GPR, %struct.GPR* %4988, i32 0, i32 33
  %4990 = getelementptr inbounds %struct.Reg, %struct.Reg* %4989, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %4990 to i64*
  %4991 = load i64, i64* %PC.i1062
  %4992 = add i64 %4991, -176
  %4993 = load i64, i64* %PC.i1062
  %4994 = add i64 %4993, 5
  store i64 %4994, i64* %PC.i1062
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4992, i64* %4995, align 8
  store %struct.Memory* %loadMem_4893d4, %struct.Memory** %MEMORY
  br label %block_.L_489324

block_.L_4893d9:                                  ; preds = %block_.L_489324
  %loadMem_4893d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4997 = getelementptr inbounds %struct.GPR, %struct.GPR* %4996, i32 0, i32 33
  %4998 = getelementptr inbounds %struct.Reg, %struct.Reg* %4997, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %4998 to i64*
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5000 = getelementptr inbounds %struct.GPR, %struct.GPR* %4999, i32 0, i32 1
  %5001 = getelementptr inbounds %struct.Reg, %struct.Reg* %5000, i32 0, i32 0
  %EAX.i1060 = bitcast %union.anon* %5001 to i32*
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5003 = getelementptr inbounds %struct.GPR, %struct.GPR* %5002, i32 0, i32 1
  %5004 = getelementptr inbounds %struct.Reg, %struct.Reg* %5003, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %5004 to i64*
  %5005 = load i64, i64* %RAX.i1061
  %5006 = load i32, i32* %EAX.i1060
  %5007 = zext i32 %5006 to i64
  %5008 = load i64, i64* %PC.i1059
  %5009 = add i64 %5008, 2
  store i64 %5009, i64* %PC.i1059
  %5010 = xor i64 %5007, %5005
  %5011 = trunc i64 %5010 to i32
  %5012 = and i64 %5010, 4294967295
  store i64 %5012, i64* %RAX.i1061, align 8
  %5013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5013, align 1
  %5014 = and i32 %5011, 255
  %5015 = call i32 @llvm.ctpop.i32(i32 %5014)
  %5016 = trunc i32 %5015 to i8
  %5017 = and i8 %5016, 1
  %5018 = xor i8 %5017, 1
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5018, i8* %5019, align 1
  %5020 = icmp eq i32 %5011, 0
  %5021 = zext i1 %5020 to i8
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5021, i8* %5022, align 1
  %5023 = lshr i32 %5011, 31
  %5024 = trunc i32 %5023 to i8
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5024, i8* %5025, align 1
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5026, align 1
  %5027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5027, align 1
  store %struct.Memory* %loadMem_4893d9, %struct.Memory** %MEMORY
  %loadMem_4893db = load %struct.Memory*, %struct.Memory** %MEMORY
  %5028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5029 = getelementptr inbounds %struct.GPR, %struct.GPR* %5028, i32 0, i32 33
  %5030 = getelementptr inbounds %struct.Reg, %struct.Reg* %5029, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %5030 to i64*
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5032 = getelementptr inbounds %struct.GPR, %struct.GPR* %5031, i32 0, i32 1
  %5033 = getelementptr inbounds %struct.Reg, %struct.Reg* %5032, i32 0, i32 0
  %EAX.i1057 = bitcast %union.anon* %5033 to i32*
  %5034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5035 = getelementptr inbounds %struct.GPR, %struct.GPR* %5034, i32 0, i32 11
  %5036 = getelementptr inbounds %struct.Reg, %struct.Reg* %5035, i32 0, i32 0
  %RDI.i1058 = bitcast %union.anon* %5036 to i64*
  %5037 = load i32, i32* %EAX.i1057
  %5038 = zext i32 %5037 to i64
  %5039 = load i64, i64* %PC.i1056
  %5040 = add i64 %5039, 2
  store i64 %5040, i64* %PC.i1056
  %5041 = and i64 %5038, 4294967295
  store i64 %5041, i64* %RDI.i1058, align 8
  store %struct.Memory* %loadMem_4893db, %struct.Memory** %MEMORY
  %loadMem_4893dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5043 = getelementptr inbounds %struct.GPR, %struct.GPR* %5042, i32 0, i32 33
  %5044 = getelementptr inbounds %struct.Reg, %struct.Reg* %5043, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %5044 to i64*
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5046 = getelementptr inbounds %struct.GPR, %struct.GPR* %5045, i32 0, i32 1
  %5047 = getelementptr inbounds %struct.Reg, %struct.Reg* %5046, i32 0, i32 0
  %EAX.i1054 = bitcast %union.anon* %5047 to i32*
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5049 = getelementptr inbounds %struct.GPR, %struct.GPR* %5048, i32 0, i32 9
  %5050 = getelementptr inbounds %struct.Reg, %struct.Reg* %5049, i32 0, i32 0
  %RSI.i1055 = bitcast %union.anon* %5050 to i64*
  %5051 = load i32, i32* %EAX.i1054
  %5052 = zext i32 %5051 to i64
  %5053 = load i64, i64* %PC.i1053
  %5054 = add i64 %5053, 2
  store i64 %5054, i64* %PC.i1053
  %5055 = and i64 %5052, 4294967295
  store i64 %5055, i64* %RSI.i1055, align 8
  store %struct.Memory* %loadMem_4893dd, %struct.Memory** %MEMORY
  %loadMem1_4893df = load %struct.Memory*, %struct.Memory** %MEMORY
  %5056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5057 = getelementptr inbounds %struct.GPR, %struct.GPR* %5056, i32 0, i32 33
  %5058 = getelementptr inbounds %struct.Reg, %struct.Reg* %5057, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %5058 to i64*
  %5059 = load i64, i64* %PC.i1052
  %5060 = add i64 %5059, -532255
  %5061 = load i64, i64* %PC.i1052
  %5062 = add i64 %5061, 5
  %5063 = load i64, i64* %PC.i1052
  %5064 = add i64 %5063, 5
  store i64 %5064, i64* %PC.i1052
  %5065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5066 = load i64, i64* %5065, align 8
  %5067 = add i64 %5066, -8
  %5068 = inttoptr i64 %5067 to i64*
  store i64 %5062, i64* %5068
  store i64 %5067, i64* %5065, align 8
  %5069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5060, i64* %5069, align 8
  store %struct.Memory* %loadMem1_4893df, %struct.Memory** %MEMORY
  %loadMem2_4893df = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4893df = load i64, i64* %3
  %call2_4893df = call %struct.Memory* @sub_4074c0.dct_chroma(%struct.State* %0, i64 %loadPC_4893df, %struct.Memory* %loadMem2_4893df)
  store %struct.Memory* %call2_4893df, %struct.Memory** %MEMORY
  %loadMem_4893e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5071 = getelementptr inbounds %struct.GPR, %struct.GPR* %5070, i32 0, i32 33
  %5072 = getelementptr inbounds %struct.Reg, %struct.Reg* %5071, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %5072 to i64*
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5074 = getelementptr inbounds %struct.GPR, %struct.GPR* %5073, i32 0, i32 1
  %5075 = getelementptr inbounds %struct.Reg, %struct.Reg* %5074, i32 0, i32 0
  %EAX.i1050 = bitcast %union.anon* %5075 to i32*
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5077 = getelementptr inbounds %struct.GPR, %struct.GPR* %5076, i32 0, i32 15
  %5078 = getelementptr inbounds %struct.Reg, %struct.Reg* %5077, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %5078 to i64*
  %5079 = load i64, i64* %RBP.i1051
  %5080 = sub i64 %5079, 76
  %5081 = load i32, i32* %EAX.i1050
  %5082 = zext i32 %5081 to i64
  %5083 = load i64, i64* %PC.i1049
  %5084 = add i64 %5083, 3
  store i64 %5084, i64* %PC.i1049
  %5085 = inttoptr i64 %5080 to i32*
  store i32 %5081, i32* %5085
  store %struct.Memory* %loadMem_4893e4, %struct.Memory** %MEMORY
  %loadMem_4893e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5087 = getelementptr inbounds %struct.GPR, %struct.GPR* %5086, i32 0, i32 33
  %5088 = getelementptr inbounds %struct.Reg, %struct.Reg* %5087, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %5088 to i64*
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5090 = getelementptr inbounds %struct.GPR, %struct.GPR* %5089, i32 0, i32 15
  %5091 = getelementptr inbounds %struct.Reg, %struct.Reg* %5090, i32 0, i32 0
  %RBP.i1048 = bitcast %union.anon* %5091 to i64*
  %5092 = load i64, i64* %RBP.i1048
  %5093 = sub i64 %5092, 40
  %5094 = load i64, i64* %PC.i1047
  %5095 = add i64 %5094, 7
  store i64 %5095, i64* %PC.i1047
  %5096 = inttoptr i64 %5093 to i32*
  store i32 0, i32* %5096
  store %struct.Memory* %loadMem_4893e7, %struct.Memory** %MEMORY
  br label %block_.L_4893ee

block_.L_4893ee:                                  ; preds = %block_.L_489495, %block_.L_4893d9
  %loadMem_4893ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5098 = getelementptr inbounds %struct.GPR, %struct.GPR* %5097, i32 0, i32 33
  %5099 = getelementptr inbounds %struct.Reg, %struct.Reg* %5098, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %5099 to i64*
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5101 = getelementptr inbounds %struct.GPR, %struct.GPR* %5100, i32 0, i32 15
  %5102 = getelementptr inbounds %struct.Reg, %struct.Reg* %5101, i32 0, i32 0
  %RBP.i1046 = bitcast %union.anon* %5102 to i64*
  %5103 = load i64, i64* %RBP.i1046
  %5104 = sub i64 %5103, 40
  %5105 = load i64, i64* %PC.i1045
  %5106 = add i64 %5105, 4
  store i64 %5106, i64* %PC.i1045
  %5107 = inttoptr i64 %5104 to i32*
  %5108 = load i32, i32* %5107
  %5109 = sub i32 %5108, 16
  %5110 = icmp ult i32 %5108, 16
  %5111 = zext i1 %5110 to i8
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5111, i8* %5112, align 1
  %5113 = and i32 %5109, 255
  %5114 = call i32 @llvm.ctpop.i32(i32 %5113)
  %5115 = trunc i32 %5114 to i8
  %5116 = and i8 %5115, 1
  %5117 = xor i8 %5116, 1
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5117, i8* %5118, align 1
  %5119 = xor i32 %5108, 16
  %5120 = xor i32 %5119, %5109
  %5121 = lshr i32 %5120, 4
  %5122 = trunc i32 %5121 to i8
  %5123 = and i8 %5122, 1
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5123, i8* %5124, align 1
  %5125 = icmp eq i32 %5109, 0
  %5126 = zext i1 %5125 to i8
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5126, i8* %5127, align 1
  %5128 = lshr i32 %5109, 31
  %5129 = trunc i32 %5128 to i8
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5129, i8* %5130, align 1
  %5131 = lshr i32 %5108, 31
  %5132 = xor i32 %5128, %5131
  %5133 = add i32 %5132, %5131
  %5134 = icmp eq i32 %5133, 2
  %5135 = zext i1 %5134 to i8
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5135, i8* %5136, align 1
  store %struct.Memory* %loadMem_4893ee, %struct.Memory** %MEMORY
  %loadMem_4893f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5138 = getelementptr inbounds %struct.GPR, %struct.GPR* %5137, i32 0, i32 33
  %5139 = getelementptr inbounds %struct.Reg, %struct.Reg* %5138, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %5139 to i64*
  %5140 = load i64, i64* %PC.i1044
  %5141 = add i64 %5140, 177
  %5142 = load i64, i64* %PC.i1044
  %5143 = add i64 %5142, 6
  %5144 = load i64, i64* %PC.i1044
  %5145 = add i64 %5144, 6
  store i64 %5145, i64* %PC.i1044
  %5146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5147 = load i8, i8* %5146, align 1
  %5148 = icmp ne i8 %5147, 0
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5150 = load i8, i8* %5149, align 1
  %5151 = icmp ne i8 %5150, 0
  %5152 = xor i1 %5148, %5151
  %5153 = xor i1 %5152, true
  %5154 = zext i1 %5153 to i8
  store i8 %5154, i8* %BRANCH_TAKEN, align 1
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5156 = select i1 %5152, i64 %5143, i64 %5141
  store i64 %5156, i64* %5155, align 8
  store %struct.Memory* %loadMem_4893f2, %struct.Memory** %MEMORY
  %loadBr_4893f2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4893f2 = icmp eq i8 %loadBr_4893f2, 1
  br i1 %cmpBr_4893f2, label %block_.L_4894a3, label %block_4893f8

block_4893f8:                                     ; preds = %block_.L_4893ee
  %loadMem_4893f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5158 = getelementptr inbounds %struct.GPR, %struct.GPR* %5157, i32 0, i32 33
  %5159 = getelementptr inbounds %struct.Reg, %struct.Reg* %5158, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %5159 to i64*
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5161 = getelementptr inbounds %struct.GPR, %struct.GPR* %5160, i32 0, i32 15
  %5162 = getelementptr inbounds %struct.Reg, %struct.Reg* %5161, i32 0, i32 0
  %RBP.i1043 = bitcast %union.anon* %5162 to i64*
  %5163 = load i64, i64* %RBP.i1043
  %5164 = sub i64 %5163, 36
  %5165 = load i64, i64* %PC.i1042
  %5166 = add i64 %5165, 7
  store i64 %5166, i64* %PC.i1042
  %5167 = inttoptr i64 %5164 to i32*
  store i32 0, i32* %5167
  store %struct.Memory* %loadMem_4893f8, %struct.Memory** %MEMORY
  br label %block_.L_4893ff

block_.L_4893ff:                                  ; preds = %block_489409, %block_4893f8
  %loadMem_4893ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5169 = getelementptr inbounds %struct.GPR, %struct.GPR* %5168, i32 0, i32 33
  %5170 = getelementptr inbounds %struct.Reg, %struct.Reg* %5169, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %5170 to i64*
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5172 = getelementptr inbounds %struct.GPR, %struct.GPR* %5171, i32 0, i32 15
  %5173 = getelementptr inbounds %struct.Reg, %struct.Reg* %5172, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %5173 to i64*
  %5174 = load i64, i64* %RBP.i1041
  %5175 = sub i64 %5174, 36
  %5176 = load i64, i64* %PC.i1040
  %5177 = add i64 %5176, 4
  store i64 %5177, i64* %PC.i1040
  %5178 = inttoptr i64 %5175 to i32*
  %5179 = load i32, i32* %5178
  %5180 = sub i32 %5179, 16
  %5181 = icmp ult i32 %5179, 16
  %5182 = zext i1 %5181 to i8
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5182, i8* %5183, align 1
  %5184 = and i32 %5180, 255
  %5185 = call i32 @llvm.ctpop.i32(i32 %5184)
  %5186 = trunc i32 %5185 to i8
  %5187 = and i8 %5186, 1
  %5188 = xor i8 %5187, 1
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5188, i8* %5189, align 1
  %5190 = xor i32 %5179, 16
  %5191 = xor i32 %5190, %5180
  %5192 = lshr i32 %5191, 4
  %5193 = trunc i32 %5192 to i8
  %5194 = and i8 %5193, 1
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5194, i8* %5195, align 1
  %5196 = icmp eq i32 %5180, 0
  %5197 = zext i1 %5196 to i8
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5197, i8* %5198, align 1
  %5199 = lshr i32 %5180, 31
  %5200 = trunc i32 %5199 to i8
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5200, i8* %5201, align 1
  %5202 = lshr i32 %5179, 31
  %5203 = xor i32 %5199, %5202
  %5204 = add i32 %5203, %5202
  %5205 = icmp eq i32 %5204, 2
  %5206 = zext i1 %5205 to i8
  %5207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5206, i8* %5207, align 1
  store %struct.Memory* %loadMem_4893ff, %struct.Memory** %MEMORY
  %loadMem_489403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5209 = getelementptr inbounds %struct.GPR, %struct.GPR* %5208, i32 0, i32 33
  %5210 = getelementptr inbounds %struct.Reg, %struct.Reg* %5209, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %5210 to i64*
  %5211 = load i64, i64* %PC.i1039
  %5212 = add i64 %5211, 141
  %5213 = load i64, i64* %PC.i1039
  %5214 = add i64 %5213, 6
  %5215 = load i64, i64* %PC.i1039
  %5216 = add i64 %5215, 6
  store i64 %5216, i64* %PC.i1039
  %5217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5218 = load i8, i8* %5217, align 1
  %5219 = icmp ne i8 %5218, 0
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5221 = load i8, i8* %5220, align 1
  %5222 = icmp ne i8 %5221, 0
  %5223 = xor i1 %5219, %5222
  %5224 = xor i1 %5223, true
  %5225 = zext i1 %5224 to i8
  store i8 %5225, i8* %BRANCH_TAKEN, align 1
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5227 = select i1 %5223, i64 %5214, i64 %5212
  store i64 %5227, i64* %5226, align 8
  store %struct.Memory* %loadMem_489403, %struct.Memory** %MEMORY
  %loadBr_489403 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489403 = icmp eq i8 %loadBr_489403, 1
  br i1 %cmpBr_489403, label %block_.L_489490, label %block_489409

block_489409:                                     ; preds = %block_.L_4893ff
  %loadMem_489409 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5229 = getelementptr inbounds %struct.GPR, %struct.GPR* %5228, i32 0, i32 33
  %5230 = getelementptr inbounds %struct.Reg, %struct.Reg* %5229, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %5230 to i64*
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5232 = getelementptr inbounds %struct.GPR, %struct.GPR* %5231, i32 0, i32 1
  %5233 = getelementptr inbounds %struct.Reg, %struct.Reg* %5232, i32 0, i32 0
  %RAX.i1038 = bitcast %union.anon* %5233 to i64*
  %5234 = load i64, i64* %PC.i1037
  %5235 = add i64 %5234, 10
  store i64 %5235, i64* %PC.i1037
  store i64 ptrtoint (%G__0x6d40f0_type* @G__0x6d40f0 to i64), i64* %RAX.i1038, align 8
  store %struct.Memory* %loadMem_489409, %struct.Memory** %MEMORY
  %loadMem_489413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5237 = getelementptr inbounds %struct.GPR, %struct.GPR* %5236, i32 0, i32 33
  %5238 = getelementptr inbounds %struct.Reg, %struct.Reg* %5237, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %5238 to i64*
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5240 = getelementptr inbounds %struct.GPR, %struct.GPR* %5239, i32 0, i32 5
  %5241 = getelementptr inbounds %struct.Reg, %struct.Reg* %5240, i32 0, i32 0
  %RCX.i1036 = bitcast %union.anon* %5241 to i64*
  %5242 = load i64, i64* %PC.i1035
  %5243 = add i64 %5242, 10
  store i64 %5243, i64* %PC.i1035
  store i64 ptrtoint (%G__0x6f8f20_type* @G__0x6f8f20 to i64), i64* %RCX.i1036, align 8
  store %struct.Memory* %loadMem_489413, %struct.Memory** %MEMORY
  %loadMem_48941d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5245 = getelementptr inbounds %struct.GPR, %struct.GPR* %5244, i32 0, i32 33
  %5246 = getelementptr inbounds %struct.Reg, %struct.Reg* %5245, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %5246 to i64*
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5248 = getelementptr inbounds %struct.GPR, %struct.GPR* %5247, i32 0, i32 7
  %5249 = getelementptr inbounds %struct.Reg, %struct.Reg* %5248, i32 0, i32 0
  %RDX.i1034 = bitcast %union.anon* %5249 to i64*
  %5250 = load i64, i64* %PC.i1033
  %5251 = add i64 %5250, 8
  store i64 %5251, i64* %PC.i1033
  %5252 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5252, i64* %RDX.i1034, align 8
  store %struct.Memory* %loadMem_48941d, %struct.Memory** %MEMORY
  %loadMem_489425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5254 = getelementptr inbounds %struct.GPR, %struct.GPR* %5253, i32 0, i32 33
  %5255 = getelementptr inbounds %struct.Reg, %struct.Reg* %5254, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %5255 to i64*
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5257 = getelementptr inbounds %struct.GPR, %struct.GPR* %5256, i32 0, i32 7
  %5258 = getelementptr inbounds %struct.Reg, %struct.Reg* %5257, i32 0, i32 0
  %RDX.i1032 = bitcast %union.anon* %5258 to i64*
  %5259 = load i64, i64* %RDX.i1032
  %5260 = load i64, i64* %PC.i1031
  %5261 = add i64 %5260, 7
  store i64 %5261, i64* %PC.i1031
  %5262 = add i64 13112, %5259
  store i64 %5262, i64* %RDX.i1032, align 8
  %5263 = icmp ult i64 %5262, %5259
  %5264 = icmp ult i64 %5262, 13112
  %5265 = or i1 %5263, %5264
  %5266 = zext i1 %5265 to i8
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5266, i8* %5267, align 1
  %5268 = trunc i64 %5262 to i32
  %5269 = and i32 %5268, 255
  %5270 = call i32 @llvm.ctpop.i32(i32 %5269)
  %5271 = trunc i32 %5270 to i8
  %5272 = and i8 %5271, 1
  %5273 = xor i8 %5272, 1
  %5274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5273, i8* %5274, align 1
  %5275 = xor i64 13112, %5259
  %5276 = xor i64 %5275, %5262
  %5277 = lshr i64 %5276, 4
  %5278 = trunc i64 %5277 to i8
  %5279 = and i8 %5278, 1
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5279, i8* %5280, align 1
  %5281 = icmp eq i64 %5262, 0
  %5282 = zext i1 %5281 to i8
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5282, i8* %5283, align 1
  %5284 = lshr i64 %5262, 63
  %5285 = trunc i64 %5284 to i8
  %5286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5285, i8* %5286, align 1
  %5287 = lshr i64 %5259, 63
  %5288 = xor i64 %5284, %5287
  %5289 = add i64 %5288, %5284
  %5290 = icmp eq i64 %5289, 2
  %5291 = zext i1 %5290 to i8
  %5292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5291, i8* %5292, align 1
  store %struct.Memory* %loadMem_489425, %struct.Memory** %MEMORY
  %loadMem_48942c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5294 = getelementptr inbounds %struct.GPR, %struct.GPR* %5293, i32 0, i32 33
  %5295 = getelementptr inbounds %struct.Reg, %struct.Reg* %5294, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %5295 to i64*
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5297 = getelementptr inbounds %struct.GPR, %struct.GPR* %5296, i32 0, i32 9
  %5298 = getelementptr inbounds %struct.Reg, %struct.Reg* %5297, i32 0, i32 0
  %RSI.i1029 = bitcast %union.anon* %5298 to i64*
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5300 = getelementptr inbounds %struct.GPR, %struct.GPR* %5299, i32 0, i32 15
  %5301 = getelementptr inbounds %struct.Reg, %struct.Reg* %5300, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %5301 to i64*
  %5302 = load i64, i64* %RBP.i1030
  %5303 = sub i64 %5302, 36
  %5304 = load i64, i64* %PC.i1028
  %5305 = add i64 %5304, 4
  store i64 %5305, i64* %PC.i1028
  %5306 = inttoptr i64 %5303 to i32*
  %5307 = load i32, i32* %5306
  %5308 = sext i32 %5307 to i64
  store i64 %5308, i64* %RSI.i1029, align 8
  store %struct.Memory* %loadMem_48942c, %struct.Memory** %MEMORY
  %loadMem_489430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5310 = getelementptr inbounds %struct.GPR, %struct.GPR* %5309, i32 0, i32 33
  %5311 = getelementptr inbounds %struct.Reg, %struct.Reg* %5310, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %5311 to i64*
  %5312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5313 = getelementptr inbounds %struct.GPR, %struct.GPR* %5312, i32 0, i32 9
  %5314 = getelementptr inbounds %struct.Reg, %struct.Reg* %5313, i32 0, i32 0
  %RSI.i1027 = bitcast %union.anon* %5314 to i64*
  %5315 = load i64, i64* %RSI.i1027
  %5316 = load i64, i64* %PC.i1026
  %5317 = add i64 %5316, 4
  store i64 %5317, i64* %PC.i1026
  %5318 = shl i64 %5315, 5
  %5319 = icmp slt i64 %5318, 0
  %5320 = shl i64 %5318, 1
  store i64 %5320, i64* %RSI.i1027, align 8
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5322 = zext i1 %5319 to i8
  store i8 %5322, i8* %5321, align 1
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5324 = trunc i64 %5320 to i32
  %5325 = and i32 %5324, 254
  %5326 = call i32 @llvm.ctpop.i32(i32 %5325)
  %5327 = trunc i32 %5326 to i8
  %5328 = and i8 %5327, 1
  %5329 = xor i8 %5328, 1
  store i8 %5329, i8* %5323, align 1
  %5330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5330, align 1
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5332 = icmp eq i64 %5320, 0
  %5333 = zext i1 %5332 to i8
  store i8 %5333, i8* %5331, align 1
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5335 = lshr i64 %5320, 63
  %5336 = trunc i64 %5335 to i8
  store i8 %5336, i8* %5334, align 1
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5337, align 1
  store %struct.Memory* %loadMem_489430, %struct.Memory** %MEMORY
  %loadMem_489434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5339 = getelementptr inbounds %struct.GPR, %struct.GPR* %5338, i32 0, i32 33
  %5340 = getelementptr inbounds %struct.Reg, %struct.Reg* %5339, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %5340 to i64*
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 7
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %RDX.i1024 = bitcast %union.anon* %5343 to i64*
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5345 = getelementptr inbounds %struct.GPR, %struct.GPR* %5344, i32 0, i32 9
  %5346 = getelementptr inbounds %struct.Reg, %struct.Reg* %5345, i32 0, i32 0
  %RSI.i1025 = bitcast %union.anon* %5346 to i64*
  %5347 = load i64, i64* %RDX.i1024
  %5348 = load i64, i64* %RSI.i1025
  %5349 = load i64, i64* %PC.i1023
  %5350 = add i64 %5349, 3
  store i64 %5350, i64* %PC.i1023
  %5351 = add i64 %5348, %5347
  store i64 %5351, i64* %RDX.i1024, align 8
  %5352 = icmp ult i64 %5351, %5347
  %5353 = icmp ult i64 %5351, %5348
  %5354 = or i1 %5352, %5353
  %5355 = zext i1 %5354 to i8
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5355, i8* %5356, align 1
  %5357 = trunc i64 %5351 to i32
  %5358 = and i32 %5357, 255
  %5359 = call i32 @llvm.ctpop.i32(i32 %5358)
  %5360 = trunc i32 %5359 to i8
  %5361 = and i8 %5360, 1
  %5362 = xor i8 %5361, 1
  %5363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5362, i8* %5363, align 1
  %5364 = xor i64 %5348, %5347
  %5365 = xor i64 %5364, %5351
  %5366 = lshr i64 %5365, 4
  %5367 = trunc i64 %5366 to i8
  %5368 = and i8 %5367, 1
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5368, i8* %5369, align 1
  %5370 = icmp eq i64 %5351, 0
  %5371 = zext i1 %5370 to i8
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5371, i8* %5372, align 1
  %5373 = lshr i64 %5351, 63
  %5374 = trunc i64 %5373 to i8
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5374, i8* %5375, align 1
  %5376 = lshr i64 %5347, 63
  %5377 = lshr i64 %5348, 63
  %5378 = xor i64 %5373, %5376
  %5379 = xor i64 %5373, %5377
  %5380 = add i64 %5378, %5379
  %5381 = icmp eq i64 %5380, 2
  %5382 = zext i1 %5381 to i8
  %5383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5382, i8* %5383, align 1
  store %struct.Memory* %loadMem_489434, %struct.Memory** %MEMORY
  %loadMem_489437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 33
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %5386 to i64*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 9
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %RSI.i1021 = bitcast %union.anon* %5389 to i64*
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5391 = getelementptr inbounds %struct.GPR, %struct.GPR* %5390, i32 0, i32 15
  %5392 = getelementptr inbounds %struct.Reg, %struct.Reg* %5391, i32 0, i32 0
  %RBP.i1022 = bitcast %union.anon* %5392 to i64*
  %5393 = load i64, i64* %RBP.i1022
  %5394 = sub i64 %5393, 40
  %5395 = load i64, i64* %PC.i1020
  %5396 = add i64 %5395, 4
  store i64 %5396, i64* %PC.i1020
  %5397 = inttoptr i64 %5394 to i32*
  %5398 = load i32, i32* %5397
  %5399 = sext i32 %5398 to i64
  store i64 %5399, i64* %RSI.i1021, align 8
  store %struct.Memory* %loadMem_489437, %struct.Memory** %MEMORY
  %loadMem_48943b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5401 = getelementptr inbounds %struct.GPR, %struct.GPR* %5400, i32 0, i32 33
  %5402 = getelementptr inbounds %struct.Reg, %struct.Reg* %5401, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %5402 to i64*
  %5403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5404 = getelementptr inbounds %struct.GPR, %struct.GPR* %5403, i32 0, i32 7
  %5405 = getelementptr inbounds %struct.Reg, %struct.Reg* %5404, i32 0, i32 0
  %RDX.i1017 = bitcast %union.anon* %5405 to i64*
  %5406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5407 = getelementptr inbounds %struct.GPR, %struct.GPR* %5406, i32 0, i32 9
  %5408 = getelementptr inbounds %struct.Reg, %struct.Reg* %5407, i32 0, i32 0
  %RSI.i1018 = bitcast %union.anon* %5408 to i64*
  %5409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5410 = getelementptr inbounds %struct.GPR, %struct.GPR* %5409, i32 0, i32 11
  %5411 = getelementptr inbounds %struct.Reg, %struct.Reg* %5410, i32 0, i32 0
  %RDI.i1019 = bitcast %union.anon* %5411 to i64*
  %5412 = load i64, i64* %RDX.i1017
  %5413 = load i64, i64* %RSI.i1018
  %5414 = mul i64 %5413, 4
  %5415 = add i64 %5414, %5412
  %5416 = load i64, i64* %PC.i1016
  %5417 = add i64 %5416, 3
  store i64 %5417, i64* %PC.i1016
  %5418 = inttoptr i64 %5415 to i32*
  %5419 = load i32, i32* %5418
  %5420 = zext i32 %5419 to i64
  store i64 %5420, i64* %RDI.i1019, align 8
  store %struct.Memory* %loadMem_48943b, %struct.Memory** %MEMORY
  %loadMem_48943e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5422 = getelementptr inbounds %struct.GPR, %struct.GPR* %5421, i32 0, i32 33
  %5423 = getelementptr inbounds %struct.Reg, %struct.Reg* %5422, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %5423 to i64*
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5425 = getelementptr inbounds %struct.GPR, %struct.GPR* %5424, i32 0, i32 7
  %5426 = getelementptr inbounds %struct.Reg, %struct.Reg* %5425, i32 0, i32 0
  %RDX.i1014 = bitcast %union.anon* %5426 to i64*
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5428 = getelementptr inbounds %struct.GPR, %struct.GPR* %5427, i32 0, i32 15
  %5429 = getelementptr inbounds %struct.Reg, %struct.Reg* %5428, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %5429 to i64*
  %5430 = load i64, i64* %RBP.i1015
  %5431 = sub i64 %5430, 36
  %5432 = load i64, i64* %PC.i1013
  %5433 = add i64 %5432, 4
  store i64 %5433, i64* %PC.i1013
  %5434 = inttoptr i64 %5431 to i32*
  %5435 = load i32, i32* %5434
  %5436 = sext i32 %5435 to i64
  store i64 %5436, i64* %RDX.i1014, align 8
  store %struct.Memory* %loadMem_48943e, %struct.Memory** %MEMORY
  %loadMem_489442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5438 = getelementptr inbounds %struct.GPR, %struct.GPR* %5437, i32 0, i32 33
  %5439 = getelementptr inbounds %struct.Reg, %struct.Reg* %5438, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %5439 to i64*
  %5440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5441 = getelementptr inbounds %struct.GPR, %struct.GPR* %5440, i32 0, i32 7
  %5442 = getelementptr inbounds %struct.Reg, %struct.Reg* %5441, i32 0, i32 0
  %RDX.i1012 = bitcast %union.anon* %5442 to i64*
  %5443 = load i64, i64* %RDX.i1012
  %5444 = load i64, i64* %PC.i1011
  %5445 = add i64 %5444, 4
  store i64 %5445, i64* %PC.i1011
  %5446 = shl i64 %5443, 5
  %5447 = icmp slt i64 %5446, 0
  %5448 = shl i64 %5446, 1
  store i64 %5448, i64* %RDX.i1012, align 8
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5450 = zext i1 %5447 to i8
  store i8 %5450, i8* %5449, align 1
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5452 = trunc i64 %5448 to i32
  %5453 = and i32 %5452, 254
  %5454 = call i32 @llvm.ctpop.i32(i32 %5453)
  %5455 = trunc i32 %5454 to i8
  %5456 = and i8 %5455, 1
  %5457 = xor i8 %5456, 1
  store i8 %5457, i8* %5451, align 1
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5458, align 1
  %5459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5460 = icmp eq i64 %5448, 0
  %5461 = zext i1 %5460 to i8
  store i8 %5461, i8* %5459, align 1
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5463 = lshr i64 %5448, 63
  %5464 = trunc i64 %5463 to i8
  store i8 %5464, i8* %5462, align 1
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5465, align 1
  store %struct.Memory* %loadMem_489442, %struct.Memory** %MEMORY
  %loadMem_489446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5467 = getelementptr inbounds %struct.GPR, %struct.GPR* %5466, i32 0, i32 33
  %5468 = getelementptr inbounds %struct.Reg, %struct.Reg* %5467, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %5468 to i64*
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5470 = getelementptr inbounds %struct.GPR, %struct.GPR* %5469, i32 0, i32 5
  %5471 = getelementptr inbounds %struct.Reg, %struct.Reg* %5470, i32 0, i32 0
  %RCX.i1009 = bitcast %union.anon* %5471 to i64*
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 7
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %RDX.i1010 = bitcast %union.anon* %5474 to i64*
  %5475 = load i64, i64* %RCX.i1009
  %5476 = load i64, i64* %RDX.i1010
  %5477 = load i64, i64* %PC.i1008
  %5478 = add i64 %5477, 3
  store i64 %5478, i64* %PC.i1008
  %5479 = add i64 %5476, %5475
  store i64 %5479, i64* %RCX.i1009, align 8
  %5480 = icmp ult i64 %5479, %5475
  %5481 = icmp ult i64 %5479, %5476
  %5482 = or i1 %5480, %5481
  %5483 = zext i1 %5482 to i8
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5483, i8* %5484, align 1
  %5485 = trunc i64 %5479 to i32
  %5486 = and i32 %5485, 255
  %5487 = call i32 @llvm.ctpop.i32(i32 %5486)
  %5488 = trunc i32 %5487 to i8
  %5489 = and i8 %5488, 1
  %5490 = xor i8 %5489, 1
  %5491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5490, i8* %5491, align 1
  %5492 = xor i64 %5476, %5475
  %5493 = xor i64 %5492, %5479
  %5494 = lshr i64 %5493, 4
  %5495 = trunc i64 %5494 to i8
  %5496 = and i8 %5495, 1
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5496, i8* %5497, align 1
  %5498 = icmp eq i64 %5479, 0
  %5499 = zext i1 %5498 to i8
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5499, i8* %5500, align 1
  %5501 = lshr i64 %5479, 63
  %5502 = trunc i64 %5501 to i8
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5502, i8* %5503, align 1
  %5504 = lshr i64 %5475, 63
  %5505 = lshr i64 %5476, 63
  %5506 = xor i64 %5501, %5504
  %5507 = xor i64 %5501, %5505
  %5508 = add i64 %5506, %5507
  %5509 = icmp eq i64 %5508, 2
  %5510 = zext i1 %5509 to i8
  %5511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5510, i8* %5511, align 1
  store %struct.Memory* %loadMem_489446, %struct.Memory** %MEMORY
  %loadMem_489449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5513 = getelementptr inbounds %struct.GPR, %struct.GPR* %5512, i32 0, i32 33
  %5514 = getelementptr inbounds %struct.Reg, %struct.Reg* %5513, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %5514 to i64*
  %5515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5516 = getelementptr inbounds %struct.GPR, %struct.GPR* %5515, i32 0, i32 7
  %5517 = getelementptr inbounds %struct.Reg, %struct.Reg* %5516, i32 0, i32 0
  %RDX.i1006 = bitcast %union.anon* %5517 to i64*
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5519 = getelementptr inbounds %struct.GPR, %struct.GPR* %5518, i32 0, i32 15
  %5520 = getelementptr inbounds %struct.Reg, %struct.Reg* %5519, i32 0, i32 0
  %RBP.i1007 = bitcast %union.anon* %5520 to i64*
  %5521 = load i64, i64* %RBP.i1007
  %5522 = sub i64 %5521, 40
  %5523 = load i64, i64* %PC.i1005
  %5524 = add i64 %5523, 4
  store i64 %5524, i64* %PC.i1005
  %5525 = inttoptr i64 %5522 to i32*
  %5526 = load i32, i32* %5525
  %5527 = sext i32 %5526 to i64
  store i64 %5527, i64* %RDX.i1006, align 8
  store %struct.Memory* %loadMem_489449, %struct.Memory** %MEMORY
  %loadMem_48944d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5529 = getelementptr inbounds %struct.GPR, %struct.GPR* %5528, i32 0, i32 33
  %5530 = getelementptr inbounds %struct.Reg, %struct.Reg* %5529, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %5530 to i64*
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5532 = getelementptr inbounds %struct.GPR, %struct.GPR* %5531, i32 0, i32 11
  %5533 = getelementptr inbounds %struct.Reg, %struct.Reg* %5532, i32 0, i32 0
  %EDI.i1002 = bitcast %union.anon* %5533 to i32*
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5535 = getelementptr inbounds %struct.GPR, %struct.GPR* %5534, i32 0, i32 5
  %5536 = getelementptr inbounds %struct.Reg, %struct.Reg* %5535, i32 0, i32 0
  %RCX.i1003 = bitcast %union.anon* %5536 to i64*
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5538 = getelementptr inbounds %struct.GPR, %struct.GPR* %5537, i32 0, i32 7
  %5539 = getelementptr inbounds %struct.Reg, %struct.Reg* %5538, i32 0, i32 0
  %RDX.i1004 = bitcast %union.anon* %5539 to i64*
  %5540 = load i64, i64* %RCX.i1003
  %5541 = load i64, i64* %RDX.i1004
  %5542 = mul i64 %5541, 4
  %5543 = add i64 %5542, %5540
  %5544 = load i32, i32* %EDI.i1002
  %5545 = zext i32 %5544 to i64
  %5546 = load i64, i64* %PC.i1001
  %5547 = add i64 %5546, 3
  store i64 %5547, i64* %PC.i1001
  %5548 = inttoptr i64 %5543 to i32*
  store i32 %5544, i32* %5548
  store %struct.Memory* %loadMem_48944d, %struct.Memory** %MEMORY
  %loadMem_489450 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5550 = getelementptr inbounds %struct.GPR, %struct.GPR* %5549, i32 0, i32 33
  %5551 = getelementptr inbounds %struct.Reg, %struct.Reg* %5550, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %5551 to i64*
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 5
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %RCX.i999 = bitcast %union.anon* %5554 to i64*
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5556 = getelementptr inbounds %struct.GPR, %struct.GPR* %5555, i32 0, i32 15
  %5557 = getelementptr inbounds %struct.Reg, %struct.Reg* %5556, i32 0, i32 0
  %RBP.i1000 = bitcast %union.anon* %5557 to i64*
  %5558 = load i64, i64* %RBP.i1000
  %5559 = sub i64 %5558, 36
  %5560 = load i64, i64* %PC.i998
  %5561 = add i64 %5560, 4
  store i64 %5561, i64* %PC.i998
  %5562 = inttoptr i64 %5559 to i32*
  %5563 = load i32, i32* %5562
  %5564 = sext i32 %5563 to i64
  store i64 %5564, i64* %RCX.i999, align 8
  store %struct.Memory* %loadMem_489450, %struct.Memory** %MEMORY
  %loadMem_489454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5566 = getelementptr inbounds %struct.GPR, %struct.GPR* %5565, i32 0, i32 33
  %5567 = getelementptr inbounds %struct.Reg, %struct.Reg* %5566, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %5567 to i64*
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5569 = getelementptr inbounds %struct.GPR, %struct.GPR* %5568, i32 0, i32 5
  %5570 = getelementptr inbounds %struct.Reg, %struct.Reg* %5569, i32 0, i32 0
  %RCX.i997 = bitcast %union.anon* %5570 to i64*
  %5571 = load i64, i64* %RCX.i997
  %5572 = load i64, i64* %PC.i996
  %5573 = add i64 %5572, 4
  store i64 %5573, i64* %PC.i996
  %5574 = shl i64 %5571, 5
  %5575 = icmp slt i64 %5574, 0
  %5576 = shl i64 %5574, 1
  store i64 %5576, i64* %RCX.i997, align 8
  %5577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5578 = zext i1 %5575 to i8
  store i8 %5578, i8* %5577, align 1
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5580 = trunc i64 %5576 to i32
  %5581 = and i32 %5580, 254
  %5582 = call i32 @llvm.ctpop.i32(i32 %5581)
  %5583 = trunc i32 %5582 to i8
  %5584 = and i8 %5583, 1
  %5585 = xor i8 %5584, 1
  store i8 %5585, i8* %5579, align 1
  %5586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5586, align 1
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5588 = icmp eq i64 %5576, 0
  %5589 = zext i1 %5588 to i8
  store i8 %5589, i8* %5587, align 1
  %5590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5591 = lshr i64 %5576, 63
  %5592 = trunc i64 %5591 to i8
  store i8 %5592, i8* %5590, align 1
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5593, align 1
  store %struct.Memory* %loadMem_489454, %struct.Memory** %MEMORY
  %loadMem_489458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5595 = getelementptr inbounds %struct.GPR, %struct.GPR* %5594, i32 0, i32 33
  %5596 = getelementptr inbounds %struct.Reg, %struct.Reg* %5595, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %5596 to i64*
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5598 = getelementptr inbounds %struct.GPR, %struct.GPR* %5597, i32 0, i32 1
  %5599 = getelementptr inbounds %struct.Reg, %struct.Reg* %5598, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %5599 to i64*
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5601 = getelementptr inbounds %struct.GPR, %struct.GPR* %5600, i32 0, i32 5
  %5602 = getelementptr inbounds %struct.Reg, %struct.Reg* %5601, i32 0, i32 0
  %RCX.i995 = bitcast %union.anon* %5602 to i64*
  %5603 = load i64, i64* %RAX.i994
  %5604 = load i64, i64* %RCX.i995
  %5605 = load i64, i64* %PC.i993
  %5606 = add i64 %5605, 3
  store i64 %5606, i64* %PC.i993
  %5607 = add i64 %5604, %5603
  store i64 %5607, i64* %RAX.i994, align 8
  %5608 = icmp ult i64 %5607, %5603
  %5609 = icmp ult i64 %5607, %5604
  %5610 = or i1 %5608, %5609
  %5611 = zext i1 %5610 to i8
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5611, i8* %5612, align 1
  %5613 = trunc i64 %5607 to i32
  %5614 = and i32 %5613, 255
  %5615 = call i32 @llvm.ctpop.i32(i32 %5614)
  %5616 = trunc i32 %5615 to i8
  %5617 = and i8 %5616, 1
  %5618 = xor i8 %5617, 1
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5618, i8* %5619, align 1
  %5620 = xor i64 %5604, %5603
  %5621 = xor i64 %5620, %5607
  %5622 = lshr i64 %5621, 4
  %5623 = trunc i64 %5622 to i8
  %5624 = and i8 %5623, 1
  %5625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5624, i8* %5625, align 1
  %5626 = icmp eq i64 %5607, 0
  %5627 = zext i1 %5626 to i8
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5627, i8* %5628, align 1
  %5629 = lshr i64 %5607, 63
  %5630 = trunc i64 %5629 to i8
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5630, i8* %5631, align 1
  %5632 = lshr i64 %5603, 63
  %5633 = lshr i64 %5604, 63
  %5634 = xor i64 %5629, %5632
  %5635 = xor i64 %5629, %5633
  %5636 = add i64 %5634, %5635
  %5637 = icmp eq i64 %5636, 2
  %5638 = zext i1 %5637 to i8
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5638, i8* %5639, align 1
  store %struct.Memory* %loadMem_489458, %struct.Memory** %MEMORY
  %loadMem_48945b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5641 = getelementptr inbounds %struct.GPR, %struct.GPR* %5640, i32 0, i32 33
  %5642 = getelementptr inbounds %struct.Reg, %struct.Reg* %5641, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %5642 to i64*
  %5643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5644 = getelementptr inbounds %struct.GPR, %struct.GPR* %5643, i32 0, i32 5
  %5645 = getelementptr inbounds %struct.Reg, %struct.Reg* %5644, i32 0, i32 0
  %RCX.i991 = bitcast %union.anon* %5645 to i64*
  %5646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5647 = getelementptr inbounds %struct.GPR, %struct.GPR* %5646, i32 0, i32 15
  %5648 = getelementptr inbounds %struct.Reg, %struct.Reg* %5647, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %5648 to i64*
  %5649 = load i64, i64* %RBP.i992
  %5650 = sub i64 %5649, 40
  %5651 = load i64, i64* %PC.i990
  %5652 = add i64 %5651, 4
  store i64 %5652, i64* %PC.i990
  %5653 = inttoptr i64 %5650 to i32*
  %5654 = load i32, i32* %5653
  %5655 = sext i32 %5654 to i64
  store i64 %5655, i64* %RCX.i991, align 8
  store %struct.Memory* %loadMem_48945b, %struct.Memory** %MEMORY
  %loadMem_48945f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5657 = getelementptr inbounds %struct.GPR, %struct.GPR* %5656, i32 0, i32 33
  %5658 = getelementptr inbounds %struct.Reg, %struct.Reg* %5657, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %5658 to i64*
  %5659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5660 = getelementptr inbounds %struct.GPR, %struct.GPR* %5659, i32 0, i32 1
  %5661 = getelementptr inbounds %struct.Reg, %struct.Reg* %5660, i32 0, i32 0
  %RAX.i987 = bitcast %union.anon* %5661 to i64*
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5663 = getelementptr inbounds %struct.GPR, %struct.GPR* %5662, i32 0, i32 5
  %5664 = getelementptr inbounds %struct.Reg, %struct.Reg* %5663, i32 0, i32 0
  %RCX.i988 = bitcast %union.anon* %5664 to i64*
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5666 = getelementptr inbounds %struct.GPR, %struct.GPR* %5665, i32 0, i32 11
  %5667 = getelementptr inbounds %struct.Reg, %struct.Reg* %5666, i32 0, i32 0
  %RDI.i989 = bitcast %union.anon* %5667 to i64*
  %5668 = load i64, i64* %RAX.i987
  %5669 = load i64, i64* %RCX.i988
  %5670 = mul i64 %5669, 4
  %5671 = add i64 %5670, %5668
  %5672 = load i64, i64* %PC.i986
  %5673 = add i64 %5672, 3
  store i64 %5673, i64* %PC.i986
  %5674 = inttoptr i64 %5671 to i32*
  %5675 = load i32, i32* %5674
  %5676 = zext i32 %5675 to i64
  store i64 %5676, i64* %RDI.i989, align 8
  store %struct.Memory* %loadMem_48945f, %struct.Memory** %MEMORY
  %loadMem_489462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5678 = getelementptr inbounds %struct.GPR, %struct.GPR* %5677, i32 0, i32 33
  %5679 = getelementptr inbounds %struct.Reg, %struct.Reg* %5678, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %5679 to i64*
  %5680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5681 = getelementptr inbounds %struct.GPR, %struct.GPR* %5680, i32 0, i32 1
  %5682 = getelementptr inbounds %struct.Reg, %struct.Reg* %5681, i32 0, i32 0
  %RAX.i985 = bitcast %union.anon* %5682 to i64*
  %5683 = load i64, i64* %PC.i984
  %5684 = add i64 %5683, 8
  store i64 %5684, i64* %PC.i984
  %5685 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5685, i64* %RAX.i985, align 8
  store %struct.Memory* %loadMem_489462, %struct.Memory** %MEMORY
  %loadMem_48946a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5687 = getelementptr inbounds %struct.GPR, %struct.GPR* %5686, i32 0, i32 33
  %5688 = getelementptr inbounds %struct.Reg, %struct.Reg* %5687, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %5688 to i64*
  %5689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5690 = getelementptr inbounds %struct.GPR, %struct.GPR* %5689, i32 0, i32 1
  %5691 = getelementptr inbounds %struct.Reg, %struct.Reg* %5690, i32 0, i32 0
  %RAX.i983 = bitcast %union.anon* %5691 to i64*
  %5692 = load i64, i64* %RAX.i983
  %5693 = load i64, i64* %PC.i982
  %5694 = add i64 %5693, 6
  store i64 %5694, i64* %PC.i982
  %5695 = add i64 13112, %5692
  store i64 %5695, i64* %RAX.i983, align 8
  %5696 = icmp ult i64 %5695, %5692
  %5697 = icmp ult i64 %5695, 13112
  %5698 = or i1 %5696, %5697
  %5699 = zext i1 %5698 to i8
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5699, i8* %5700, align 1
  %5701 = trunc i64 %5695 to i32
  %5702 = and i32 %5701, 255
  %5703 = call i32 @llvm.ctpop.i32(i32 %5702)
  %5704 = trunc i32 %5703 to i8
  %5705 = and i8 %5704, 1
  %5706 = xor i8 %5705, 1
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5706, i8* %5707, align 1
  %5708 = xor i64 13112, %5692
  %5709 = xor i64 %5708, %5695
  %5710 = lshr i64 %5709, 4
  %5711 = trunc i64 %5710 to i8
  %5712 = and i8 %5711, 1
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5712, i8* %5713, align 1
  %5714 = icmp eq i64 %5695, 0
  %5715 = zext i1 %5714 to i8
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5715, i8* %5716, align 1
  %5717 = lshr i64 %5695, 63
  %5718 = trunc i64 %5717 to i8
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5718, i8* %5719, align 1
  %5720 = lshr i64 %5692, 63
  %5721 = xor i64 %5717, %5720
  %5722 = add i64 %5721, %5717
  %5723 = icmp eq i64 %5722, 2
  %5724 = zext i1 %5723 to i8
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5724, i8* %5725, align 1
  store %struct.Memory* %loadMem_48946a, %struct.Memory** %MEMORY
  %loadMem_489470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5727 = getelementptr inbounds %struct.GPR, %struct.GPR* %5726, i32 0, i32 33
  %5728 = getelementptr inbounds %struct.Reg, %struct.Reg* %5727, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %5728 to i64*
  %5729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5730 = getelementptr inbounds %struct.GPR, %struct.GPR* %5729, i32 0, i32 5
  %5731 = getelementptr inbounds %struct.Reg, %struct.Reg* %5730, i32 0, i32 0
  %RCX.i980 = bitcast %union.anon* %5731 to i64*
  %5732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5733 = getelementptr inbounds %struct.GPR, %struct.GPR* %5732, i32 0, i32 15
  %5734 = getelementptr inbounds %struct.Reg, %struct.Reg* %5733, i32 0, i32 0
  %RBP.i981 = bitcast %union.anon* %5734 to i64*
  %5735 = load i64, i64* %RBP.i981
  %5736 = sub i64 %5735, 36
  %5737 = load i64, i64* %PC.i979
  %5738 = add i64 %5737, 4
  store i64 %5738, i64* %PC.i979
  %5739 = inttoptr i64 %5736 to i32*
  %5740 = load i32, i32* %5739
  %5741 = sext i32 %5740 to i64
  store i64 %5741, i64* %RCX.i980, align 8
  store %struct.Memory* %loadMem_489470, %struct.Memory** %MEMORY
  %loadMem_489474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5743 = getelementptr inbounds %struct.GPR, %struct.GPR* %5742, i32 0, i32 33
  %5744 = getelementptr inbounds %struct.Reg, %struct.Reg* %5743, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %5744 to i64*
  %5745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5746 = getelementptr inbounds %struct.GPR, %struct.GPR* %5745, i32 0, i32 5
  %5747 = getelementptr inbounds %struct.Reg, %struct.Reg* %5746, i32 0, i32 0
  %RCX.i978 = bitcast %union.anon* %5747 to i64*
  %5748 = load i64, i64* %RCX.i978
  %5749 = load i64, i64* %PC.i977
  %5750 = add i64 %5749, 4
  store i64 %5750, i64* %PC.i977
  %5751 = shl i64 %5748, 5
  %5752 = icmp slt i64 %5751, 0
  %5753 = shl i64 %5751, 1
  store i64 %5753, i64* %RCX.i978, align 8
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5755 = zext i1 %5752 to i8
  store i8 %5755, i8* %5754, align 1
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5757 = trunc i64 %5753 to i32
  %5758 = and i32 %5757, 254
  %5759 = call i32 @llvm.ctpop.i32(i32 %5758)
  %5760 = trunc i32 %5759 to i8
  %5761 = and i8 %5760, 1
  %5762 = xor i8 %5761, 1
  store i8 %5762, i8* %5756, align 1
  %5763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5763, align 1
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5765 = icmp eq i64 %5753, 0
  %5766 = zext i1 %5765 to i8
  store i8 %5766, i8* %5764, align 1
  %5767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5768 = lshr i64 %5753, 63
  %5769 = trunc i64 %5768 to i8
  store i8 %5769, i8* %5767, align 1
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5770, align 1
  store %struct.Memory* %loadMem_489474, %struct.Memory** %MEMORY
  %loadMem_489478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5772 = getelementptr inbounds %struct.GPR, %struct.GPR* %5771, i32 0, i32 33
  %5773 = getelementptr inbounds %struct.Reg, %struct.Reg* %5772, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %5773 to i64*
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5775 = getelementptr inbounds %struct.GPR, %struct.GPR* %5774, i32 0, i32 1
  %5776 = getelementptr inbounds %struct.Reg, %struct.Reg* %5775, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %5776 to i64*
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 5
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %RCX.i976 = bitcast %union.anon* %5779 to i64*
  %5780 = load i64, i64* %RAX.i975
  %5781 = load i64, i64* %RCX.i976
  %5782 = load i64, i64* %PC.i974
  %5783 = add i64 %5782, 3
  store i64 %5783, i64* %PC.i974
  %5784 = add i64 %5781, %5780
  store i64 %5784, i64* %RAX.i975, align 8
  %5785 = icmp ult i64 %5784, %5780
  %5786 = icmp ult i64 %5784, %5781
  %5787 = or i1 %5785, %5786
  %5788 = zext i1 %5787 to i8
  %5789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5788, i8* %5789, align 1
  %5790 = trunc i64 %5784 to i32
  %5791 = and i32 %5790, 255
  %5792 = call i32 @llvm.ctpop.i32(i32 %5791)
  %5793 = trunc i32 %5792 to i8
  %5794 = and i8 %5793, 1
  %5795 = xor i8 %5794, 1
  %5796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5795, i8* %5796, align 1
  %5797 = xor i64 %5781, %5780
  %5798 = xor i64 %5797, %5784
  %5799 = lshr i64 %5798, 4
  %5800 = trunc i64 %5799 to i8
  %5801 = and i8 %5800, 1
  %5802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5801, i8* %5802, align 1
  %5803 = icmp eq i64 %5784, 0
  %5804 = zext i1 %5803 to i8
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5804, i8* %5805, align 1
  %5806 = lshr i64 %5784, 63
  %5807 = trunc i64 %5806 to i8
  %5808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5807, i8* %5808, align 1
  %5809 = lshr i64 %5780, 63
  %5810 = lshr i64 %5781, 63
  %5811 = xor i64 %5806, %5809
  %5812 = xor i64 %5806, %5810
  %5813 = add i64 %5811, %5812
  %5814 = icmp eq i64 %5813, 2
  %5815 = zext i1 %5814 to i8
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5815, i8* %5816, align 1
  store %struct.Memory* %loadMem_489478, %struct.Memory** %MEMORY
  %loadMem_48947b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5818 = getelementptr inbounds %struct.GPR, %struct.GPR* %5817, i32 0, i32 33
  %5819 = getelementptr inbounds %struct.Reg, %struct.Reg* %5818, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %5819 to i64*
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 5
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %RCX.i972 = bitcast %union.anon* %5822 to i64*
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5824 = getelementptr inbounds %struct.GPR, %struct.GPR* %5823, i32 0, i32 15
  %5825 = getelementptr inbounds %struct.Reg, %struct.Reg* %5824, i32 0, i32 0
  %RBP.i973 = bitcast %union.anon* %5825 to i64*
  %5826 = load i64, i64* %RBP.i973
  %5827 = sub i64 %5826, 40
  %5828 = load i64, i64* %PC.i971
  %5829 = add i64 %5828, 4
  store i64 %5829, i64* %PC.i971
  %5830 = inttoptr i64 %5827 to i32*
  %5831 = load i32, i32* %5830
  %5832 = sext i32 %5831 to i64
  store i64 %5832, i64* %RCX.i972, align 8
  store %struct.Memory* %loadMem_48947b, %struct.Memory** %MEMORY
  %loadMem_48947f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5834 = getelementptr inbounds %struct.GPR, %struct.GPR* %5833, i32 0, i32 33
  %5835 = getelementptr inbounds %struct.Reg, %struct.Reg* %5834, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %5835 to i64*
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5837 = getelementptr inbounds %struct.GPR, %struct.GPR* %5836, i32 0, i32 11
  %5838 = getelementptr inbounds %struct.Reg, %struct.Reg* %5837, i32 0, i32 0
  %EDI.i968 = bitcast %union.anon* %5838 to i32*
  %5839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5840 = getelementptr inbounds %struct.GPR, %struct.GPR* %5839, i32 0, i32 1
  %5841 = getelementptr inbounds %struct.Reg, %struct.Reg* %5840, i32 0, i32 0
  %RAX.i969 = bitcast %union.anon* %5841 to i64*
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5843 = getelementptr inbounds %struct.GPR, %struct.GPR* %5842, i32 0, i32 5
  %5844 = getelementptr inbounds %struct.Reg, %struct.Reg* %5843, i32 0, i32 0
  %RCX.i970 = bitcast %union.anon* %5844 to i64*
  %5845 = load i64, i64* %RAX.i969
  %5846 = load i64, i64* %RCX.i970
  %5847 = mul i64 %5846, 4
  %5848 = add i64 %5847, %5845
  %5849 = load i32, i32* %EDI.i968
  %5850 = zext i32 %5849 to i64
  %5851 = load i64, i64* %PC.i967
  %5852 = add i64 %5851, 3
  store i64 %5852, i64* %PC.i967
  %5853 = inttoptr i64 %5848 to i32*
  store i32 %5849, i32* %5853
  store %struct.Memory* %loadMem_48947f, %struct.Memory** %MEMORY
  %loadMem_489482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5855 = getelementptr inbounds %struct.GPR, %struct.GPR* %5854, i32 0, i32 33
  %5856 = getelementptr inbounds %struct.Reg, %struct.Reg* %5855, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %5856 to i64*
  %5857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5858 = getelementptr inbounds %struct.GPR, %struct.GPR* %5857, i32 0, i32 1
  %5859 = getelementptr inbounds %struct.Reg, %struct.Reg* %5858, i32 0, i32 0
  %RAX.i965 = bitcast %union.anon* %5859 to i64*
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5861 = getelementptr inbounds %struct.GPR, %struct.GPR* %5860, i32 0, i32 15
  %5862 = getelementptr inbounds %struct.Reg, %struct.Reg* %5861, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %5862 to i64*
  %5863 = load i64, i64* %RBP.i966
  %5864 = sub i64 %5863, 36
  %5865 = load i64, i64* %PC.i964
  %5866 = add i64 %5865, 3
  store i64 %5866, i64* %PC.i964
  %5867 = inttoptr i64 %5864 to i32*
  %5868 = load i32, i32* %5867
  %5869 = zext i32 %5868 to i64
  store i64 %5869, i64* %RAX.i965, align 8
  store %struct.Memory* %loadMem_489482, %struct.Memory** %MEMORY
  %loadMem_489485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5871 = getelementptr inbounds %struct.GPR, %struct.GPR* %5870, i32 0, i32 33
  %5872 = getelementptr inbounds %struct.Reg, %struct.Reg* %5871, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %5872 to i64*
  %5873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5874 = getelementptr inbounds %struct.GPR, %struct.GPR* %5873, i32 0, i32 1
  %5875 = getelementptr inbounds %struct.Reg, %struct.Reg* %5874, i32 0, i32 0
  %RAX.i963 = bitcast %union.anon* %5875 to i64*
  %5876 = load i64, i64* %RAX.i963
  %5877 = load i64, i64* %PC.i962
  %5878 = add i64 %5877, 3
  store i64 %5878, i64* %PC.i962
  %5879 = trunc i64 %5876 to i32
  %5880 = add i32 1, %5879
  %5881 = zext i32 %5880 to i64
  store i64 %5881, i64* %RAX.i963, align 8
  %5882 = icmp ult i32 %5880, %5879
  %5883 = icmp ult i32 %5880, 1
  %5884 = or i1 %5882, %5883
  %5885 = zext i1 %5884 to i8
  %5886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5885, i8* %5886, align 1
  %5887 = and i32 %5880, 255
  %5888 = call i32 @llvm.ctpop.i32(i32 %5887)
  %5889 = trunc i32 %5888 to i8
  %5890 = and i8 %5889, 1
  %5891 = xor i8 %5890, 1
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5891, i8* %5892, align 1
  %5893 = xor i64 1, %5876
  %5894 = trunc i64 %5893 to i32
  %5895 = xor i32 %5894, %5880
  %5896 = lshr i32 %5895, 4
  %5897 = trunc i32 %5896 to i8
  %5898 = and i8 %5897, 1
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5898, i8* %5899, align 1
  %5900 = icmp eq i32 %5880, 0
  %5901 = zext i1 %5900 to i8
  %5902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5901, i8* %5902, align 1
  %5903 = lshr i32 %5880, 31
  %5904 = trunc i32 %5903 to i8
  %5905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5904, i8* %5905, align 1
  %5906 = lshr i32 %5879, 31
  %5907 = xor i32 %5903, %5906
  %5908 = add i32 %5907, %5903
  %5909 = icmp eq i32 %5908, 2
  %5910 = zext i1 %5909 to i8
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5910, i8* %5911, align 1
  store %struct.Memory* %loadMem_489485, %struct.Memory** %MEMORY
  %loadMem_489488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5913 = getelementptr inbounds %struct.GPR, %struct.GPR* %5912, i32 0, i32 33
  %5914 = getelementptr inbounds %struct.Reg, %struct.Reg* %5913, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %5914 to i64*
  %5915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5916 = getelementptr inbounds %struct.GPR, %struct.GPR* %5915, i32 0, i32 1
  %5917 = getelementptr inbounds %struct.Reg, %struct.Reg* %5916, i32 0, i32 0
  %EAX.i960 = bitcast %union.anon* %5917 to i32*
  %5918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5919 = getelementptr inbounds %struct.GPR, %struct.GPR* %5918, i32 0, i32 15
  %5920 = getelementptr inbounds %struct.Reg, %struct.Reg* %5919, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %5920 to i64*
  %5921 = load i64, i64* %RBP.i961
  %5922 = sub i64 %5921, 36
  %5923 = load i32, i32* %EAX.i960
  %5924 = zext i32 %5923 to i64
  %5925 = load i64, i64* %PC.i959
  %5926 = add i64 %5925, 3
  store i64 %5926, i64* %PC.i959
  %5927 = inttoptr i64 %5922 to i32*
  store i32 %5923, i32* %5927
  store %struct.Memory* %loadMem_489488, %struct.Memory** %MEMORY
  %loadMem_48948b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5929 = getelementptr inbounds %struct.GPR, %struct.GPR* %5928, i32 0, i32 33
  %5930 = getelementptr inbounds %struct.Reg, %struct.Reg* %5929, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %5930 to i64*
  %5931 = load i64, i64* %PC.i958
  %5932 = add i64 %5931, -140
  %5933 = load i64, i64* %PC.i958
  %5934 = add i64 %5933, 5
  store i64 %5934, i64* %PC.i958
  %5935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5932, i64* %5935, align 8
  store %struct.Memory* %loadMem_48948b, %struct.Memory** %MEMORY
  br label %block_.L_4893ff

block_.L_489490:                                  ; preds = %block_.L_4893ff
  %loadMem_489490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5937 = getelementptr inbounds %struct.GPR, %struct.GPR* %5936, i32 0, i32 33
  %5938 = getelementptr inbounds %struct.Reg, %struct.Reg* %5937, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %5938 to i64*
  %5939 = load i64, i64* %PC.i957
  %5940 = add i64 %5939, 5
  %5941 = load i64, i64* %PC.i957
  %5942 = add i64 %5941, 5
  store i64 %5942, i64* %PC.i957
  %5943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5940, i64* %5943, align 8
  store %struct.Memory* %loadMem_489490, %struct.Memory** %MEMORY
  br label %block_.L_489495

block_.L_489495:                                  ; preds = %block_.L_489490
  %loadMem_489495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5945 = getelementptr inbounds %struct.GPR, %struct.GPR* %5944, i32 0, i32 33
  %5946 = getelementptr inbounds %struct.Reg, %struct.Reg* %5945, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %5946 to i64*
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5948 = getelementptr inbounds %struct.GPR, %struct.GPR* %5947, i32 0, i32 1
  %5949 = getelementptr inbounds %struct.Reg, %struct.Reg* %5948, i32 0, i32 0
  %RAX.i955 = bitcast %union.anon* %5949 to i64*
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5951 = getelementptr inbounds %struct.GPR, %struct.GPR* %5950, i32 0, i32 15
  %5952 = getelementptr inbounds %struct.Reg, %struct.Reg* %5951, i32 0, i32 0
  %RBP.i956 = bitcast %union.anon* %5952 to i64*
  %5953 = load i64, i64* %RBP.i956
  %5954 = sub i64 %5953, 40
  %5955 = load i64, i64* %PC.i954
  %5956 = add i64 %5955, 3
  store i64 %5956, i64* %PC.i954
  %5957 = inttoptr i64 %5954 to i32*
  %5958 = load i32, i32* %5957
  %5959 = zext i32 %5958 to i64
  store i64 %5959, i64* %RAX.i955, align 8
  store %struct.Memory* %loadMem_489495, %struct.Memory** %MEMORY
  %loadMem_489498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5961 = getelementptr inbounds %struct.GPR, %struct.GPR* %5960, i32 0, i32 33
  %5962 = getelementptr inbounds %struct.Reg, %struct.Reg* %5961, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %5962 to i64*
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5964 = getelementptr inbounds %struct.GPR, %struct.GPR* %5963, i32 0, i32 1
  %5965 = getelementptr inbounds %struct.Reg, %struct.Reg* %5964, i32 0, i32 0
  %RAX.i953 = bitcast %union.anon* %5965 to i64*
  %5966 = load i64, i64* %RAX.i953
  %5967 = load i64, i64* %PC.i952
  %5968 = add i64 %5967, 3
  store i64 %5968, i64* %PC.i952
  %5969 = trunc i64 %5966 to i32
  %5970 = add i32 1, %5969
  %5971 = zext i32 %5970 to i64
  store i64 %5971, i64* %RAX.i953, align 8
  %5972 = icmp ult i32 %5970, %5969
  %5973 = icmp ult i32 %5970, 1
  %5974 = or i1 %5972, %5973
  %5975 = zext i1 %5974 to i8
  %5976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5975, i8* %5976, align 1
  %5977 = and i32 %5970, 255
  %5978 = call i32 @llvm.ctpop.i32(i32 %5977)
  %5979 = trunc i32 %5978 to i8
  %5980 = and i8 %5979, 1
  %5981 = xor i8 %5980, 1
  %5982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5981, i8* %5982, align 1
  %5983 = xor i64 1, %5966
  %5984 = trunc i64 %5983 to i32
  %5985 = xor i32 %5984, %5970
  %5986 = lshr i32 %5985, 4
  %5987 = trunc i32 %5986 to i8
  %5988 = and i8 %5987, 1
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5988, i8* %5989, align 1
  %5990 = icmp eq i32 %5970, 0
  %5991 = zext i1 %5990 to i8
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5991, i8* %5992, align 1
  %5993 = lshr i32 %5970, 31
  %5994 = trunc i32 %5993 to i8
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5994, i8* %5995, align 1
  %5996 = lshr i32 %5969, 31
  %5997 = xor i32 %5993, %5996
  %5998 = add i32 %5997, %5993
  %5999 = icmp eq i32 %5998, 2
  %6000 = zext i1 %5999 to i8
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6000, i8* %6001, align 1
  store %struct.Memory* %loadMem_489498, %struct.Memory** %MEMORY
  %loadMem_48949b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6003 = getelementptr inbounds %struct.GPR, %struct.GPR* %6002, i32 0, i32 33
  %6004 = getelementptr inbounds %struct.Reg, %struct.Reg* %6003, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %6004 to i64*
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6006 = getelementptr inbounds %struct.GPR, %struct.GPR* %6005, i32 0, i32 1
  %6007 = getelementptr inbounds %struct.Reg, %struct.Reg* %6006, i32 0, i32 0
  %EAX.i950 = bitcast %union.anon* %6007 to i32*
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6009 = getelementptr inbounds %struct.GPR, %struct.GPR* %6008, i32 0, i32 15
  %6010 = getelementptr inbounds %struct.Reg, %struct.Reg* %6009, i32 0, i32 0
  %RBP.i951 = bitcast %union.anon* %6010 to i64*
  %6011 = load i64, i64* %RBP.i951
  %6012 = sub i64 %6011, 40
  %6013 = load i32, i32* %EAX.i950
  %6014 = zext i32 %6013 to i64
  %6015 = load i64, i64* %PC.i949
  %6016 = add i64 %6015, 3
  store i64 %6016, i64* %PC.i949
  %6017 = inttoptr i64 %6012 to i32*
  store i32 %6013, i32* %6017
  store %struct.Memory* %loadMem_48949b, %struct.Memory** %MEMORY
  %loadMem_48949e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6019 = getelementptr inbounds %struct.GPR, %struct.GPR* %6018, i32 0, i32 33
  %6020 = getelementptr inbounds %struct.Reg, %struct.Reg* %6019, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %6020 to i64*
  %6021 = load i64, i64* %PC.i948
  %6022 = add i64 %6021, -176
  %6023 = load i64, i64* %PC.i948
  %6024 = add i64 %6023, 5
  store i64 %6024, i64* %PC.i948
  %6025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6022, i64* %6025, align 8
  store %struct.Memory* %loadMem_48949e, %struct.Memory** %MEMORY
  br label %block_.L_4893ee

block_.L_4894a3:                                  ; preds = %block_.L_4893ee
  %loadMem_4894a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 33
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %6028 to i64*
  %6029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6030 = getelementptr inbounds %struct.GPR, %struct.GPR* %6029, i32 0, i32 11
  %6031 = getelementptr inbounds %struct.Reg, %struct.Reg* %6030, i32 0, i32 0
  %RDI.i947 = bitcast %union.anon* %6031 to i64*
  %6032 = load i64, i64* %PC.i946
  %6033 = add i64 %6032, 5
  store i64 %6033, i64* %PC.i946
  store i64 1, i64* %RDI.i947, align 8
  store %struct.Memory* %loadMem_4894a3, %struct.Memory** %MEMORY
  %loadMem_4894a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6035 = getelementptr inbounds %struct.GPR, %struct.GPR* %6034, i32 0, i32 33
  %6036 = getelementptr inbounds %struct.Reg, %struct.Reg* %6035, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %6036 to i64*
  %6037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6038 = getelementptr inbounds %struct.GPR, %struct.GPR* %6037, i32 0, i32 9
  %6039 = getelementptr inbounds %struct.Reg, %struct.Reg* %6038, i32 0, i32 0
  %RSI.i944 = bitcast %union.anon* %6039 to i64*
  %6040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6041 = getelementptr inbounds %struct.GPR, %struct.GPR* %6040, i32 0, i32 15
  %6042 = getelementptr inbounds %struct.Reg, %struct.Reg* %6041, i32 0, i32 0
  %RBP.i945 = bitcast %union.anon* %6042 to i64*
  %6043 = load i64, i64* %RBP.i945
  %6044 = sub i64 %6043, 76
  %6045 = load i64, i64* %PC.i943
  %6046 = add i64 %6045, 3
  store i64 %6046, i64* %PC.i943
  %6047 = inttoptr i64 %6044 to i32*
  %6048 = load i32, i32* %6047
  %6049 = zext i32 %6048 to i64
  store i64 %6049, i64* %RSI.i944, align 8
  store %struct.Memory* %loadMem_4894a8, %struct.Memory** %MEMORY
  %loadMem1_4894ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6051 = getelementptr inbounds %struct.GPR, %struct.GPR* %6050, i32 0, i32 33
  %6052 = getelementptr inbounds %struct.Reg, %struct.Reg* %6051, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %6052 to i64*
  %6053 = load i64, i64* %PC.i942
  %6054 = add i64 %6053, -532459
  %6055 = load i64, i64* %PC.i942
  %6056 = add i64 %6055, 5
  %6057 = load i64, i64* %PC.i942
  %6058 = add i64 %6057, 5
  store i64 %6058, i64* %PC.i942
  %6059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6060 = load i64, i64* %6059, align 8
  %6061 = add i64 %6060, -8
  %6062 = inttoptr i64 %6061 to i64*
  store i64 %6056, i64* %6062
  store i64 %6061, i64* %6059, align 8
  %6063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6054, i64* %6063, align 8
  store %struct.Memory* %loadMem1_4894ab, %struct.Memory** %MEMORY
  %loadMem2_4894ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4894ab = load i64, i64* %3
  %call2_4894ab = call %struct.Memory* @sub_4074c0.dct_chroma(%struct.State* %0, i64 %loadPC_4894ab, %struct.Memory* %loadMem2_4894ab)
  store %struct.Memory* %call2_4894ab, %struct.Memory** %MEMORY
  %loadMem_4894b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6065 = getelementptr inbounds %struct.GPR, %struct.GPR* %6064, i32 0, i32 33
  %6066 = getelementptr inbounds %struct.Reg, %struct.Reg* %6065, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %6066 to i64*
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6068 = getelementptr inbounds %struct.GPR, %struct.GPR* %6067, i32 0, i32 1
  %6069 = getelementptr inbounds %struct.Reg, %struct.Reg* %6068, i32 0, i32 0
  %EAX.i940 = bitcast %union.anon* %6069 to i32*
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6071 = getelementptr inbounds %struct.GPR, %struct.GPR* %6070, i32 0, i32 15
  %6072 = getelementptr inbounds %struct.Reg, %struct.Reg* %6071, i32 0, i32 0
  %RBP.i941 = bitcast %union.anon* %6072 to i64*
  %6073 = load i64, i64* %RBP.i941
  %6074 = sub i64 %6073, 76
  %6075 = load i32, i32* %EAX.i940
  %6076 = zext i32 %6075 to i64
  %6077 = load i64, i64* %PC.i939
  %6078 = add i64 %6077, 3
  store i64 %6078, i64* %PC.i939
  %6079 = inttoptr i64 %6074 to i32*
  store i32 %6075, i32* %6079
  store %struct.Memory* %loadMem_4894b0, %struct.Memory** %MEMORY
  %loadMem_4894b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6081 = getelementptr inbounds %struct.GPR, %struct.GPR* %6080, i32 0, i32 33
  %6082 = getelementptr inbounds %struct.Reg, %struct.Reg* %6081, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %6082 to i64*
  %6083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6084 = getelementptr inbounds %struct.GPR, %struct.GPR* %6083, i32 0, i32 15
  %6085 = getelementptr inbounds %struct.Reg, %struct.Reg* %6084, i32 0, i32 0
  %RBP.i938 = bitcast %union.anon* %6085 to i64*
  %6086 = load i64, i64* %RBP.i938
  %6087 = sub i64 %6086, 40
  %6088 = load i64, i64* %PC.i937
  %6089 = add i64 %6088, 7
  store i64 %6089, i64* %PC.i937
  %6090 = inttoptr i64 %6087 to i32*
  store i32 0, i32* %6090
  store %struct.Memory* %loadMem_4894b3, %struct.Memory** %MEMORY
  br label %block_.L_4894ba

block_.L_4894ba:                                  ; preds = %block_.L_489525, %block_.L_4894a3
  %loadMem_4894ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6092 = getelementptr inbounds %struct.GPR, %struct.GPR* %6091, i32 0, i32 33
  %6093 = getelementptr inbounds %struct.Reg, %struct.Reg* %6092, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %6093 to i64*
  %6094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6095 = getelementptr inbounds %struct.GPR, %struct.GPR* %6094, i32 0, i32 15
  %6096 = getelementptr inbounds %struct.Reg, %struct.Reg* %6095, i32 0, i32 0
  %RBP.i936 = bitcast %union.anon* %6096 to i64*
  %6097 = load i64, i64* %RBP.i936
  %6098 = sub i64 %6097, 40
  %6099 = load i64, i64* %PC.i935
  %6100 = add i64 %6099, 4
  store i64 %6100, i64* %PC.i935
  %6101 = inttoptr i64 %6098 to i32*
  %6102 = load i32, i32* %6101
  %6103 = sub i32 %6102, 16
  %6104 = icmp ult i32 %6102, 16
  %6105 = zext i1 %6104 to i8
  %6106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6105, i8* %6106, align 1
  %6107 = and i32 %6103, 255
  %6108 = call i32 @llvm.ctpop.i32(i32 %6107)
  %6109 = trunc i32 %6108 to i8
  %6110 = and i8 %6109, 1
  %6111 = xor i8 %6110, 1
  %6112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6111, i8* %6112, align 1
  %6113 = xor i32 %6102, 16
  %6114 = xor i32 %6113, %6103
  %6115 = lshr i32 %6114, 4
  %6116 = trunc i32 %6115 to i8
  %6117 = and i8 %6116, 1
  %6118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6117, i8* %6118, align 1
  %6119 = icmp eq i32 %6103, 0
  %6120 = zext i1 %6119 to i8
  %6121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6120, i8* %6121, align 1
  %6122 = lshr i32 %6103, 31
  %6123 = trunc i32 %6122 to i8
  %6124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6123, i8* %6124, align 1
  %6125 = lshr i32 %6102, 31
  %6126 = xor i32 %6122, %6125
  %6127 = add i32 %6126, %6125
  %6128 = icmp eq i32 %6127, 2
  %6129 = zext i1 %6128 to i8
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6129, i8* %6130, align 1
  store %struct.Memory* %loadMem_4894ba, %struct.Memory** %MEMORY
  %loadMem_4894be = load %struct.Memory*, %struct.Memory** %MEMORY
  %6131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6132 = getelementptr inbounds %struct.GPR, %struct.GPR* %6131, i32 0, i32 33
  %6133 = getelementptr inbounds %struct.Reg, %struct.Reg* %6132, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %6133 to i64*
  %6134 = load i64, i64* %PC.i934
  %6135 = add i64 %6134, 117
  %6136 = load i64, i64* %PC.i934
  %6137 = add i64 %6136, 6
  %6138 = load i64, i64* %PC.i934
  %6139 = add i64 %6138, 6
  store i64 %6139, i64* %PC.i934
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6141 = load i8, i8* %6140, align 1
  %6142 = icmp ne i8 %6141, 0
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6144 = load i8, i8* %6143, align 1
  %6145 = icmp ne i8 %6144, 0
  %6146 = xor i1 %6142, %6145
  %6147 = xor i1 %6146, true
  %6148 = zext i1 %6147 to i8
  store i8 %6148, i8* %BRANCH_TAKEN, align 1
  %6149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6150 = select i1 %6146, i64 %6137, i64 %6135
  store i64 %6150, i64* %6149, align 8
  store %struct.Memory* %loadMem_4894be, %struct.Memory** %MEMORY
  %loadBr_4894be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4894be = icmp eq i8 %loadBr_4894be, 1
  br i1 %cmpBr_4894be, label %block_.L_489533, label %block_4894c4

block_4894c4:                                     ; preds = %block_.L_4894ba
  %loadMem_4894c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6152 = getelementptr inbounds %struct.GPR, %struct.GPR* %6151, i32 0, i32 33
  %6153 = getelementptr inbounds %struct.Reg, %struct.Reg* %6152, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %6153 to i64*
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6155 = getelementptr inbounds %struct.GPR, %struct.GPR* %6154, i32 0, i32 15
  %6156 = getelementptr inbounds %struct.Reg, %struct.Reg* %6155, i32 0, i32 0
  %RBP.i933 = bitcast %union.anon* %6156 to i64*
  %6157 = load i64, i64* %RBP.i933
  %6158 = sub i64 %6157, 36
  %6159 = load i64, i64* %PC.i932
  %6160 = add i64 %6159, 7
  store i64 %6160, i64* %PC.i932
  %6161 = inttoptr i64 %6158 to i32*
  store i32 0, i32* %6161
  store %struct.Memory* %loadMem_4894c4, %struct.Memory** %MEMORY
  br label %block_.L_4894cb

block_.L_4894cb:                                  ; preds = %block_4894d5, %block_4894c4
  %loadMem_4894cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6163 = getelementptr inbounds %struct.GPR, %struct.GPR* %6162, i32 0, i32 33
  %6164 = getelementptr inbounds %struct.Reg, %struct.Reg* %6163, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %6164 to i64*
  %6165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6166 = getelementptr inbounds %struct.GPR, %struct.GPR* %6165, i32 0, i32 15
  %6167 = getelementptr inbounds %struct.Reg, %struct.Reg* %6166, i32 0, i32 0
  %RBP.i931 = bitcast %union.anon* %6167 to i64*
  %6168 = load i64, i64* %RBP.i931
  %6169 = sub i64 %6168, 36
  %6170 = load i64, i64* %PC.i930
  %6171 = add i64 %6170, 4
  store i64 %6171, i64* %PC.i930
  %6172 = inttoptr i64 %6169 to i32*
  %6173 = load i32, i32* %6172
  %6174 = sub i32 %6173, 16
  %6175 = icmp ult i32 %6173, 16
  %6176 = zext i1 %6175 to i8
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6176, i8* %6177, align 1
  %6178 = and i32 %6174, 255
  %6179 = call i32 @llvm.ctpop.i32(i32 %6178)
  %6180 = trunc i32 %6179 to i8
  %6181 = and i8 %6180, 1
  %6182 = xor i8 %6181, 1
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6182, i8* %6183, align 1
  %6184 = xor i32 %6173, 16
  %6185 = xor i32 %6184, %6174
  %6186 = lshr i32 %6185, 4
  %6187 = trunc i32 %6186 to i8
  %6188 = and i8 %6187, 1
  %6189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6188, i8* %6189, align 1
  %6190 = icmp eq i32 %6174, 0
  %6191 = zext i1 %6190 to i8
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6191, i8* %6192, align 1
  %6193 = lshr i32 %6174, 31
  %6194 = trunc i32 %6193 to i8
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6194, i8* %6195, align 1
  %6196 = lshr i32 %6173, 31
  %6197 = xor i32 %6193, %6196
  %6198 = add i32 %6197, %6196
  %6199 = icmp eq i32 %6198, 2
  %6200 = zext i1 %6199 to i8
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6200, i8* %6201, align 1
  store %struct.Memory* %loadMem_4894cb, %struct.Memory** %MEMORY
  %loadMem_4894cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6203 = getelementptr inbounds %struct.GPR, %struct.GPR* %6202, i32 0, i32 33
  %6204 = getelementptr inbounds %struct.Reg, %struct.Reg* %6203, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %6204 to i64*
  %6205 = load i64, i64* %PC.i929
  %6206 = add i64 %6205, 81
  %6207 = load i64, i64* %PC.i929
  %6208 = add i64 %6207, 6
  %6209 = load i64, i64* %PC.i929
  %6210 = add i64 %6209, 6
  store i64 %6210, i64* %PC.i929
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6212 = load i8, i8* %6211, align 1
  %6213 = icmp ne i8 %6212, 0
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6215 = load i8, i8* %6214, align 1
  %6216 = icmp ne i8 %6215, 0
  %6217 = xor i1 %6213, %6216
  %6218 = xor i1 %6217, true
  %6219 = zext i1 %6218 to i8
  store i8 %6219, i8* %BRANCH_TAKEN, align 1
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6221 = select i1 %6217, i64 %6208, i64 %6206
  store i64 %6221, i64* %6220, align 8
  store %struct.Memory* %loadMem_4894cf, %struct.Memory** %MEMORY
  %loadBr_4894cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4894cf = icmp eq i8 %loadBr_4894cf, 1
  br i1 %cmpBr_4894cf, label %block_.L_489520, label %block_4894d5

block_4894d5:                                     ; preds = %block_.L_4894cb
  %loadMem_4894d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6223 = getelementptr inbounds %struct.GPR, %struct.GPR* %6222, i32 0, i32 33
  %6224 = getelementptr inbounds %struct.Reg, %struct.Reg* %6223, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %6224 to i64*
  %6225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6226 = getelementptr inbounds %struct.GPR, %struct.GPR* %6225, i32 0, i32 1
  %6227 = getelementptr inbounds %struct.Reg, %struct.Reg* %6226, i32 0, i32 0
  %RAX.i928 = bitcast %union.anon* %6227 to i64*
  %6228 = load i64, i64* %PC.i927
  %6229 = add i64 %6228, 10
  store i64 %6229, i64* %PC.i927
  store i64 ptrtoint (%G__0x6d2ec0_type* @G__0x6d2ec0 to i64), i64* %RAX.i928, align 8
  store %struct.Memory* %loadMem_4894d5, %struct.Memory** %MEMORY
  %loadMem_4894df = load %struct.Memory*, %struct.Memory** %MEMORY
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6231 = getelementptr inbounds %struct.GPR, %struct.GPR* %6230, i32 0, i32 33
  %6232 = getelementptr inbounds %struct.Reg, %struct.Reg* %6231, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %6232 to i64*
  %6233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6234 = getelementptr inbounds %struct.GPR, %struct.GPR* %6233, i32 0, i32 5
  %6235 = getelementptr inbounds %struct.Reg, %struct.Reg* %6234, i32 0, i32 0
  %RCX.i926 = bitcast %union.anon* %6235 to i64*
  %6236 = load i64, i64* %PC.i925
  %6237 = add i64 %6236, 8
  store i64 %6237, i64* %PC.i925
  %6238 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6238, i64* %RCX.i926, align 8
  store %struct.Memory* %loadMem_4894df, %struct.Memory** %MEMORY
  %loadMem_4894e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6240 = getelementptr inbounds %struct.GPR, %struct.GPR* %6239, i32 0, i32 33
  %6241 = getelementptr inbounds %struct.Reg, %struct.Reg* %6240, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %6241 to i64*
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6243 = getelementptr inbounds %struct.GPR, %struct.GPR* %6242, i32 0, i32 5
  %6244 = getelementptr inbounds %struct.Reg, %struct.Reg* %6243, i32 0, i32 0
  %RCX.i924 = bitcast %union.anon* %6244 to i64*
  %6245 = load i64, i64* %RCX.i924
  %6246 = load i64, i64* %PC.i923
  %6247 = add i64 %6246, 7
  store i64 %6247, i64* %PC.i923
  %6248 = add i64 13112, %6245
  store i64 %6248, i64* %RCX.i924, align 8
  %6249 = icmp ult i64 %6248, %6245
  %6250 = icmp ult i64 %6248, 13112
  %6251 = or i1 %6249, %6250
  %6252 = zext i1 %6251 to i8
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6252, i8* %6253, align 1
  %6254 = trunc i64 %6248 to i32
  %6255 = and i32 %6254, 255
  %6256 = call i32 @llvm.ctpop.i32(i32 %6255)
  %6257 = trunc i32 %6256 to i8
  %6258 = and i8 %6257, 1
  %6259 = xor i8 %6258, 1
  %6260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6259, i8* %6260, align 1
  %6261 = xor i64 13112, %6245
  %6262 = xor i64 %6261, %6248
  %6263 = lshr i64 %6262, 4
  %6264 = trunc i64 %6263 to i8
  %6265 = and i8 %6264, 1
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6265, i8* %6266, align 1
  %6267 = icmp eq i64 %6248, 0
  %6268 = zext i1 %6267 to i8
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6268, i8* %6269, align 1
  %6270 = lshr i64 %6248, 63
  %6271 = trunc i64 %6270 to i8
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6271, i8* %6272, align 1
  %6273 = lshr i64 %6245, 63
  %6274 = xor i64 %6270, %6273
  %6275 = add i64 %6274, %6270
  %6276 = icmp eq i64 %6275, 2
  %6277 = zext i1 %6276 to i8
  %6278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6277, i8* %6278, align 1
  store %struct.Memory* %loadMem_4894e7, %struct.Memory** %MEMORY
  %loadMem_4894ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6280 = getelementptr inbounds %struct.GPR, %struct.GPR* %6279, i32 0, i32 33
  %6281 = getelementptr inbounds %struct.Reg, %struct.Reg* %6280, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %6281 to i64*
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6283 = getelementptr inbounds %struct.GPR, %struct.GPR* %6282, i32 0, i32 7
  %6284 = getelementptr inbounds %struct.Reg, %struct.Reg* %6283, i32 0, i32 0
  %RDX.i921 = bitcast %union.anon* %6284 to i64*
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6286 = getelementptr inbounds %struct.GPR, %struct.GPR* %6285, i32 0, i32 15
  %6287 = getelementptr inbounds %struct.Reg, %struct.Reg* %6286, i32 0, i32 0
  %RBP.i922 = bitcast %union.anon* %6287 to i64*
  %6288 = load i64, i64* %RBP.i922
  %6289 = sub i64 %6288, 36
  %6290 = load i64, i64* %PC.i920
  %6291 = add i64 %6290, 4
  store i64 %6291, i64* %PC.i920
  %6292 = inttoptr i64 %6289 to i32*
  %6293 = load i32, i32* %6292
  %6294 = sext i32 %6293 to i64
  store i64 %6294, i64* %RDX.i921, align 8
  store %struct.Memory* %loadMem_4894ee, %struct.Memory** %MEMORY
  %loadMem_4894f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6296 = getelementptr inbounds %struct.GPR, %struct.GPR* %6295, i32 0, i32 33
  %6297 = getelementptr inbounds %struct.Reg, %struct.Reg* %6296, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %6297 to i64*
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6299 = getelementptr inbounds %struct.GPR, %struct.GPR* %6298, i32 0, i32 7
  %6300 = getelementptr inbounds %struct.Reg, %struct.Reg* %6299, i32 0, i32 0
  %RDX.i919 = bitcast %union.anon* %6300 to i64*
  %6301 = load i64, i64* %RDX.i919
  %6302 = load i64, i64* %PC.i918
  %6303 = add i64 %6302, 4
  store i64 %6303, i64* %PC.i918
  %6304 = shl i64 %6301, 5
  %6305 = icmp slt i64 %6304, 0
  %6306 = shl i64 %6304, 1
  store i64 %6306, i64* %RDX.i919, align 8
  %6307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6308 = zext i1 %6305 to i8
  store i8 %6308, i8* %6307, align 1
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6310 = trunc i64 %6306 to i32
  %6311 = and i32 %6310, 254
  %6312 = call i32 @llvm.ctpop.i32(i32 %6311)
  %6313 = trunc i32 %6312 to i8
  %6314 = and i8 %6313, 1
  %6315 = xor i8 %6314, 1
  store i8 %6315, i8* %6309, align 1
  %6316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6316, align 1
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6318 = icmp eq i64 %6306, 0
  %6319 = zext i1 %6318 to i8
  store i8 %6319, i8* %6317, align 1
  %6320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6321 = lshr i64 %6306, 63
  %6322 = trunc i64 %6321 to i8
  store i8 %6322, i8* %6320, align 1
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6323, align 1
  store %struct.Memory* %loadMem_4894f2, %struct.Memory** %MEMORY
  %loadMem_4894f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6325 = getelementptr inbounds %struct.GPR, %struct.GPR* %6324, i32 0, i32 33
  %6326 = getelementptr inbounds %struct.Reg, %struct.Reg* %6325, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %6326 to i64*
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6328 = getelementptr inbounds %struct.GPR, %struct.GPR* %6327, i32 0, i32 5
  %6329 = getelementptr inbounds %struct.Reg, %struct.Reg* %6328, i32 0, i32 0
  %RCX.i916 = bitcast %union.anon* %6329 to i64*
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 7
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %RDX.i917 = bitcast %union.anon* %6332 to i64*
  %6333 = load i64, i64* %RCX.i916
  %6334 = load i64, i64* %RDX.i917
  %6335 = load i64, i64* %PC.i915
  %6336 = add i64 %6335, 3
  store i64 %6336, i64* %PC.i915
  %6337 = add i64 %6334, %6333
  store i64 %6337, i64* %RCX.i916, align 8
  %6338 = icmp ult i64 %6337, %6333
  %6339 = icmp ult i64 %6337, %6334
  %6340 = or i1 %6338, %6339
  %6341 = zext i1 %6340 to i8
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6341, i8* %6342, align 1
  %6343 = trunc i64 %6337 to i32
  %6344 = and i32 %6343, 255
  %6345 = call i32 @llvm.ctpop.i32(i32 %6344)
  %6346 = trunc i32 %6345 to i8
  %6347 = and i8 %6346, 1
  %6348 = xor i8 %6347, 1
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6348, i8* %6349, align 1
  %6350 = xor i64 %6334, %6333
  %6351 = xor i64 %6350, %6337
  %6352 = lshr i64 %6351, 4
  %6353 = trunc i64 %6352 to i8
  %6354 = and i8 %6353, 1
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6354, i8* %6355, align 1
  %6356 = icmp eq i64 %6337, 0
  %6357 = zext i1 %6356 to i8
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6357, i8* %6358, align 1
  %6359 = lshr i64 %6337, 63
  %6360 = trunc i64 %6359 to i8
  %6361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6360, i8* %6361, align 1
  %6362 = lshr i64 %6333, 63
  %6363 = lshr i64 %6334, 63
  %6364 = xor i64 %6359, %6362
  %6365 = xor i64 %6359, %6363
  %6366 = add i64 %6364, %6365
  %6367 = icmp eq i64 %6366, 2
  %6368 = zext i1 %6367 to i8
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6368, i8* %6369, align 1
  store %struct.Memory* %loadMem_4894f6, %struct.Memory** %MEMORY
  %loadMem_4894f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6371 = getelementptr inbounds %struct.GPR, %struct.GPR* %6370, i32 0, i32 33
  %6372 = getelementptr inbounds %struct.Reg, %struct.Reg* %6371, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %6372 to i64*
  %6373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6374 = getelementptr inbounds %struct.GPR, %struct.GPR* %6373, i32 0, i32 7
  %6375 = getelementptr inbounds %struct.Reg, %struct.Reg* %6374, i32 0, i32 0
  %RDX.i913 = bitcast %union.anon* %6375 to i64*
  %6376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6377 = getelementptr inbounds %struct.GPR, %struct.GPR* %6376, i32 0, i32 15
  %6378 = getelementptr inbounds %struct.Reg, %struct.Reg* %6377, i32 0, i32 0
  %RBP.i914 = bitcast %union.anon* %6378 to i64*
  %6379 = load i64, i64* %RBP.i914
  %6380 = sub i64 %6379, 40
  %6381 = load i64, i64* %PC.i912
  %6382 = add i64 %6381, 4
  store i64 %6382, i64* %PC.i912
  %6383 = inttoptr i64 %6380 to i32*
  %6384 = load i32, i32* %6383
  %6385 = sext i32 %6384 to i64
  store i64 %6385, i64* %RDX.i913, align 8
  store %struct.Memory* %loadMem_4894f9, %struct.Memory** %MEMORY
  %loadMem_4894fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6387 = getelementptr inbounds %struct.GPR, %struct.GPR* %6386, i32 0, i32 33
  %6388 = getelementptr inbounds %struct.Reg, %struct.Reg* %6387, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %6388 to i64*
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6390 = getelementptr inbounds %struct.GPR, %struct.GPR* %6389, i32 0, i32 5
  %6391 = getelementptr inbounds %struct.Reg, %struct.Reg* %6390, i32 0, i32 0
  %RCX.i909 = bitcast %union.anon* %6391 to i64*
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6393 = getelementptr inbounds %struct.GPR, %struct.GPR* %6392, i32 0, i32 7
  %6394 = getelementptr inbounds %struct.Reg, %struct.Reg* %6393, i32 0, i32 0
  %RDX.i910 = bitcast %union.anon* %6394 to i64*
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6396 = getelementptr inbounds %struct.GPR, %struct.GPR* %6395, i32 0, i32 9
  %6397 = getelementptr inbounds %struct.Reg, %struct.Reg* %6396, i32 0, i32 0
  %RSI.i911 = bitcast %union.anon* %6397 to i64*
  %6398 = load i64, i64* %RCX.i909
  %6399 = load i64, i64* %RDX.i910
  %6400 = mul i64 %6399, 4
  %6401 = add i64 %6400, %6398
  %6402 = load i64, i64* %PC.i908
  %6403 = add i64 %6402, 3
  store i64 %6403, i64* %PC.i908
  %6404 = inttoptr i64 %6401 to i32*
  %6405 = load i32, i32* %6404
  %6406 = zext i32 %6405 to i64
  store i64 %6406, i64* %RSI.i911, align 8
  store %struct.Memory* %loadMem_4894fd, %struct.Memory** %MEMORY
  %loadMem_489500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6408 = getelementptr inbounds %struct.GPR, %struct.GPR* %6407, i32 0, i32 33
  %6409 = getelementptr inbounds %struct.Reg, %struct.Reg* %6408, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %6409 to i64*
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6411 = getelementptr inbounds %struct.GPR, %struct.GPR* %6410, i32 0, i32 5
  %6412 = getelementptr inbounds %struct.Reg, %struct.Reg* %6411, i32 0, i32 0
  %RCX.i906 = bitcast %union.anon* %6412 to i64*
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6414 = getelementptr inbounds %struct.GPR, %struct.GPR* %6413, i32 0, i32 15
  %6415 = getelementptr inbounds %struct.Reg, %struct.Reg* %6414, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %6415 to i64*
  %6416 = load i64, i64* %RBP.i907
  %6417 = sub i64 %6416, 36
  %6418 = load i64, i64* %PC.i905
  %6419 = add i64 %6418, 4
  store i64 %6419, i64* %PC.i905
  %6420 = inttoptr i64 %6417 to i32*
  %6421 = load i32, i32* %6420
  %6422 = sext i32 %6421 to i64
  store i64 %6422, i64* %RCX.i906, align 8
  store %struct.Memory* %loadMem_489500, %struct.Memory** %MEMORY
  %loadMem_489504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 33
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %6425 to i64*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6427 = getelementptr inbounds %struct.GPR, %struct.GPR* %6426, i32 0, i32 5
  %6428 = getelementptr inbounds %struct.Reg, %struct.Reg* %6427, i32 0, i32 0
  %RCX.i904 = bitcast %union.anon* %6428 to i64*
  %6429 = load i64, i64* %RCX.i904
  %6430 = load i64, i64* %PC.i903
  %6431 = add i64 %6430, 4
  store i64 %6431, i64* %PC.i903
  %6432 = shl i64 %6429, 5
  %6433 = icmp slt i64 %6432, 0
  %6434 = shl i64 %6432, 1
  store i64 %6434, i64* %RCX.i904, align 8
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6436 = zext i1 %6433 to i8
  store i8 %6436, i8* %6435, align 1
  %6437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6438 = trunc i64 %6434 to i32
  %6439 = and i32 %6438, 254
  %6440 = call i32 @llvm.ctpop.i32(i32 %6439)
  %6441 = trunc i32 %6440 to i8
  %6442 = and i8 %6441, 1
  %6443 = xor i8 %6442, 1
  store i8 %6443, i8* %6437, align 1
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6444, align 1
  %6445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6446 = icmp eq i64 %6434, 0
  %6447 = zext i1 %6446 to i8
  store i8 %6447, i8* %6445, align 1
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6449 = lshr i64 %6434, 63
  %6450 = trunc i64 %6449 to i8
  store i8 %6450, i8* %6448, align 1
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6451, align 1
  store %struct.Memory* %loadMem_489504, %struct.Memory** %MEMORY
  %loadMem_489508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6453 = getelementptr inbounds %struct.GPR, %struct.GPR* %6452, i32 0, i32 33
  %6454 = getelementptr inbounds %struct.Reg, %struct.Reg* %6453, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %6454 to i64*
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6456 = getelementptr inbounds %struct.GPR, %struct.GPR* %6455, i32 0, i32 1
  %6457 = getelementptr inbounds %struct.Reg, %struct.Reg* %6456, i32 0, i32 0
  %RAX.i901 = bitcast %union.anon* %6457 to i64*
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6459 = getelementptr inbounds %struct.GPR, %struct.GPR* %6458, i32 0, i32 5
  %6460 = getelementptr inbounds %struct.Reg, %struct.Reg* %6459, i32 0, i32 0
  %RCX.i902 = bitcast %union.anon* %6460 to i64*
  %6461 = load i64, i64* %RAX.i901
  %6462 = load i64, i64* %RCX.i902
  %6463 = load i64, i64* %PC.i900
  %6464 = add i64 %6463, 3
  store i64 %6464, i64* %PC.i900
  %6465 = add i64 %6462, %6461
  store i64 %6465, i64* %RAX.i901, align 8
  %6466 = icmp ult i64 %6465, %6461
  %6467 = icmp ult i64 %6465, %6462
  %6468 = or i1 %6466, %6467
  %6469 = zext i1 %6468 to i8
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6469, i8* %6470, align 1
  %6471 = trunc i64 %6465 to i32
  %6472 = and i32 %6471, 255
  %6473 = call i32 @llvm.ctpop.i32(i32 %6472)
  %6474 = trunc i32 %6473 to i8
  %6475 = and i8 %6474, 1
  %6476 = xor i8 %6475, 1
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6476, i8* %6477, align 1
  %6478 = xor i64 %6462, %6461
  %6479 = xor i64 %6478, %6465
  %6480 = lshr i64 %6479, 4
  %6481 = trunc i64 %6480 to i8
  %6482 = and i8 %6481, 1
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6482, i8* %6483, align 1
  %6484 = icmp eq i64 %6465, 0
  %6485 = zext i1 %6484 to i8
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6485, i8* %6486, align 1
  %6487 = lshr i64 %6465, 63
  %6488 = trunc i64 %6487 to i8
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6488, i8* %6489, align 1
  %6490 = lshr i64 %6461, 63
  %6491 = lshr i64 %6462, 63
  %6492 = xor i64 %6487, %6490
  %6493 = xor i64 %6487, %6491
  %6494 = add i64 %6492, %6493
  %6495 = icmp eq i64 %6494, 2
  %6496 = zext i1 %6495 to i8
  %6497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6496, i8* %6497, align 1
  store %struct.Memory* %loadMem_489508, %struct.Memory** %MEMORY
  %loadMem_48950b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6499 = getelementptr inbounds %struct.GPR, %struct.GPR* %6498, i32 0, i32 33
  %6500 = getelementptr inbounds %struct.Reg, %struct.Reg* %6499, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %6500 to i64*
  %6501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6502 = getelementptr inbounds %struct.GPR, %struct.GPR* %6501, i32 0, i32 5
  %6503 = getelementptr inbounds %struct.Reg, %struct.Reg* %6502, i32 0, i32 0
  %RCX.i898 = bitcast %union.anon* %6503 to i64*
  %6504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6505 = getelementptr inbounds %struct.GPR, %struct.GPR* %6504, i32 0, i32 15
  %6506 = getelementptr inbounds %struct.Reg, %struct.Reg* %6505, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %6506 to i64*
  %6507 = load i64, i64* %RBP.i899
  %6508 = sub i64 %6507, 40
  %6509 = load i64, i64* %PC.i897
  %6510 = add i64 %6509, 4
  store i64 %6510, i64* %PC.i897
  %6511 = inttoptr i64 %6508 to i32*
  %6512 = load i32, i32* %6511
  %6513 = sext i32 %6512 to i64
  store i64 %6513, i64* %RCX.i898, align 8
  store %struct.Memory* %loadMem_48950b, %struct.Memory** %MEMORY
  %loadMem_48950f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6515 = getelementptr inbounds %struct.GPR, %struct.GPR* %6514, i32 0, i32 33
  %6516 = getelementptr inbounds %struct.Reg, %struct.Reg* %6515, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %6516 to i64*
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6518 = getelementptr inbounds %struct.GPR, %struct.GPR* %6517, i32 0, i32 9
  %6519 = getelementptr inbounds %struct.Reg, %struct.Reg* %6518, i32 0, i32 0
  %ESI.i894 = bitcast %union.anon* %6519 to i32*
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 1
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %RAX.i895 = bitcast %union.anon* %6522 to i64*
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6524 = getelementptr inbounds %struct.GPR, %struct.GPR* %6523, i32 0, i32 5
  %6525 = getelementptr inbounds %struct.Reg, %struct.Reg* %6524, i32 0, i32 0
  %RCX.i896 = bitcast %union.anon* %6525 to i64*
  %6526 = load i64, i64* %RAX.i895
  %6527 = load i64, i64* %RCX.i896
  %6528 = mul i64 %6527, 4
  %6529 = add i64 %6528, %6526
  %6530 = load i32, i32* %ESI.i894
  %6531 = zext i32 %6530 to i64
  %6532 = load i64, i64* %PC.i893
  %6533 = add i64 %6532, 3
  store i64 %6533, i64* %PC.i893
  %6534 = inttoptr i64 %6529 to i32*
  store i32 %6530, i32* %6534
  store %struct.Memory* %loadMem_48950f, %struct.Memory** %MEMORY
  %loadMem_489512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6536 = getelementptr inbounds %struct.GPR, %struct.GPR* %6535, i32 0, i32 33
  %6537 = getelementptr inbounds %struct.Reg, %struct.Reg* %6536, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %6537 to i64*
  %6538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6539 = getelementptr inbounds %struct.GPR, %struct.GPR* %6538, i32 0, i32 1
  %6540 = getelementptr inbounds %struct.Reg, %struct.Reg* %6539, i32 0, i32 0
  %RAX.i891 = bitcast %union.anon* %6540 to i64*
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6542 = getelementptr inbounds %struct.GPR, %struct.GPR* %6541, i32 0, i32 15
  %6543 = getelementptr inbounds %struct.Reg, %struct.Reg* %6542, i32 0, i32 0
  %RBP.i892 = bitcast %union.anon* %6543 to i64*
  %6544 = load i64, i64* %RBP.i892
  %6545 = sub i64 %6544, 36
  %6546 = load i64, i64* %PC.i890
  %6547 = add i64 %6546, 3
  store i64 %6547, i64* %PC.i890
  %6548 = inttoptr i64 %6545 to i32*
  %6549 = load i32, i32* %6548
  %6550 = zext i32 %6549 to i64
  store i64 %6550, i64* %RAX.i891, align 8
  store %struct.Memory* %loadMem_489512, %struct.Memory** %MEMORY
  %loadMem_489515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6552 = getelementptr inbounds %struct.GPR, %struct.GPR* %6551, i32 0, i32 33
  %6553 = getelementptr inbounds %struct.Reg, %struct.Reg* %6552, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %6553 to i64*
  %6554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6555 = getelementptr inbounds %struct.GPR, %struct.GPR* %6554, i32 0, i32 1
  %6556 = getelementptr inbounds %struct.Reg, %struct.Reg* %6555, i32 0, i32 0
  %RAX.i889 = bitcast %union.anon* %6556 to i64*
  %6557 = load i64, i64* %RAX.i889
  %6558 = load i64, i64* %PC.i888
  %6559 = add i64 %6558, 3
  store i64 %6559, i64* %PC.i888
  %6560 = trunc i64 %6557 to i32
  %6561 = add i32 1, %6560
  %6562 = zext i32 %6561 to i64
  store i64 %6562, i64* %RAX.i889, align 8
  %6563 = icmp ult i32 %6561, %6560
  %6564 = icmp ult i32 %6561, 1
  %6565 = or i1 %6563, %6564
  %6566 = zext i1 %6565 to i8
  %6567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6566, i8* %6567, align 1
  %6568 = and i32 %6561, 255
  %6569 = call i32 @llvm.ctpop.i32(i32 %6568)
  %6570 = trunc i32 %6569 to i8
  %6571 = and i8 %6570, 1
  %6572 = xor i8 %6571, 1
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6572, i8* %6573, align 1
  %6574 = xor i64 1, %6557
  %6575 = trunc i64 %6574 to i32
  %6576 = xor i32 %6575, %6561
  %6577 = lshr i32 %6576, 4
  %6578 = trunc i32 %6577 to i8
  %6579 = and i8 %6578, 1
  %6580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6579, i8* %6580, align 1
  %6581 = icmp eq i32 %6561, 0
  %6582 = zext i1 %6581 to i8
  %6583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6582, i8* %6583, align 1
  %6584 = lshr i32 %6561, 31
  %6585 = trunc i32 %6584 to i8
  %6586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6585, i8* %6586, align 1
  %6587 = lshr i32 %6560, 31
  %6588 = xor i32 %6584, %6587
  %6589 = add i32 %6588, %6584
  %6590 = icmp eq i32 %6589, 2
  %6591 = zext i1 %6590 to i8
  %6592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6591, i8* %6592, align 1
  store %struct.Memory* %loadMem_489515, %struct.Memory** %MEMORY
  %loadMem_489518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6594 = getelementptr inbounds %struct.GPR, %struct.GPR* %6593, i32 0, i32 33
  %6595 = getelementptr inbounds %struct.Reg, %struct.Reg* %6594, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %6595 to i64*
  %6596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6597 = getelementptr inbounds %struct.GPR, %struct.GPR* %6596, i32 0, i32 1
  %6598 = getelementptr inbounds %struct.Reg, %struct.Reg* %6597, i32 0, i32 0
  %EAX.i886 = bitcast %union.anon* %6598 to i32*
  %6599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6600 = getelementptr inbounds %struct.GPR, %struct.GPR* %6599, i32 0, i32 15
  %6601 = getelementptr inbounds %struct.Reg, %struct.Reg* %6600, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %6601 to i64*
  %6602 = load i64, i64* %RBP.i887
  %6603 = sub i64 %6602, 36
  %6604 = load i32, i32* %EAX.i886
  %6605 = zext i32 %6604 to i64
  %6606 = load i64, i64* %PC.i885
  %6607 = add i64 %6606, 3
  store i64 %6607, i64* %PC.i885
  %6608 = inttoptr i64 %6603 to i32*
  store i32 %6604, i32* %6608
  store %struct.Memory* %loadMem_489518, %struct.Memory** %MEMORY
  %loadMem_48951b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6610 = getelementptr inbounds %struct.GPR, %struct.GPR* %6609, i32 0, i32 33
  %6611 = getelementptr inbounds %struct.Reg, %struct.Reg* %6610, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %6611 to i64*
  %6612 = load i64, i64* %PC.i884
  %6613 = add i64 %6612, -80
  %6614 = load i64, i64* %PC.i884
  %6615 = add i64 %6614, 5
  store i64 %6615, i64* %PC.i884
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6613, i64* %6616, align 8
  store %struct.Memory* %loadMem_48951b, %struct.Memory** %MEMORY
  br label %block_.L_4894cb

block_.L_489520:                                  ; preds = %block_.L_4894cb
  %loadMem_489520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6618 = getelementptr inbounds %struct.GPR, %struct.GPR* %6617, i32 0, i32 33
  %6619 = getelementptr inbounds %struct.Reg, %struct.Reg* %6618, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %6619 to i64*
  %6620 = load i64, i64* %PC.i883
  %6621 = add i64 %6620, 5
  %6622 = load i64, i64* %PC.i883
  %6623 = add i64 %6622, 5
  store i64 %6623, i64* %PC.i883
  %6624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6621, i64* %6624, align 8
  store %struct.Memory* %loadMem_489520, %struct.Memory** %MEMORY
  br label %block_.L_489525

block_.L_489525:                                  ; preds = %block_.L_489520
  %loadMem_489525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6626 = getelementptr inbounds %struct.GPR, %struct.GPR* %6625, i32 0, i32 33
  %6627 = getelementptr inbounds %struct.Reg, %struct.Reg* %6626, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %6627 to i64*
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6629 = getelementptr inbounds %struct.GPR, %struct.GPR* %6628, i32 0, i32 1
  %6630 = getelementptr inbounds %struct.Reg, %struct.Reg* %6629, i32 0, i32 0
  %RAX.i881 = bitcast %union.anon* %6630 to i64*
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6632 = getelementptr inbounds %struct.GPR, %struct.GPR* %6631, i32 0, i32 15
  %6633 = getelementptr inbounds %struct.Reg, %struct.Reg* %6632, i32 0, i32 0
  %RBP.i882 = bitcast %union.anon* %6633 to i64*
  %6634 = load i64, i64* %RBP.i882
  %6635 = sub i64 %6634, 40
  %6636 = load i64, i64* %PC.i880
  %6637 = add i64 %6636, 3
  store i64 %6637, i64* %PC.i880
  %6638 = inttoptr i64 %6635 to i32*
  %6639 = load i32, i32* %6638
  %6640 = zext i32 %6639 to i64
  store i64 %6640, i64* %RAX.i881, align 8
  store %struct.Memory* %loadMem_489525, %struct.Memory** %MEMORY
  %loadMem_489528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6642 = getelementptr inbounds %struct.GPR, %struct.GPR* %6641, i32 0, i32 33
  %6643 = getelementptr inbounds %struct.Reg, %struct.Reg* %6642, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %6643 to i64*
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6645 = getelementptr inbounds %struct.GPR, %struct.GPR* %6644, i32 0, i32 1
  %6646 = getelementptr inbounds %struct.Reg, %struct.Reg* %6645, i32 0, i32 0
  %RAX.i879 = bitcast %union.anon* %6646 to i64*
  %6647 = load i64, i64* %RAX.i879
  %6648 = load i64, i64* %PC.i878
  %6649 = add i64 %6648, 3
  store i64 %6649, i64* %PC.i878
  %6650 = trunc i64 %6647 to i32
  %6651 = add i32 1, %6650
  %6652 = zext i32 %6651 to i64
  store i64 %6652, i64* %RAX.i879, align 8
  %6653 = icmp ult i32 %6651, %6650
  %6654 = icmp ult i32 %6651, 1
  %6655 = or i1 %6653, %6654
  %6656 = zext i1 %6655 to i8
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6656, i8* %6657, align 1
  %6658 = and i32 %6651, 255
  %6659 = call i32 @llvm.ctpop.i32(i32 %6658)
  %6660 = trunc i32 %6659 to i8
  %6661 = and i8 %6660, 1
  %6662 = xor i8 %6661, 1
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6662, i8* %6663, align 1
  %6664 = xor i64 1, %6647
  %6665 = trunc i64 %6664 to i32
  %6666 = xor i32 %6665, %6651
  %6667 = lshr i32 %6666, 4
  %6668 = trunc i32 %6667 to i8
  %6669 = and i8 %6668, 1
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6669, i8* %6670, align 1
  %6671 = icmp eq i32 %6651, 0
  %6672 = zext i1 %6671 to i8
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6672, i8* %6673, align 1
  %6674 = lshr i32 %6651, 31
  %6675 = trunc i32 %6674 to i8
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6675, i8* %6676, align 1
  %6677 = lshr i32 %6650, 31
  %6678 = xor i32 %6674, %6677
  %6679 = add i32 %6678, %6674
  %6680 = icmp eq i32 %6679, 2
  %6681 = zext i1 %6680 to i8
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6681, i8* %6682, align 1
  store %struct.Memory* %loadMem_489528, %struct.Memory** %MEMORY
  %loadMem_48952b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6684 = getelementptr inbounds %struct.GPR, %struct.GPR* %6683, i32 0, i32 33
  %6685 = getelementptr inbounds %struct.Reg, %struct.Reg* %6684, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %6685 to i64*
  %6686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6687 = getelementptr inbounds %struct.GPR, %struct.GPR* %6686, i32 0, i32 1
  %6688 = getelementptr inbounds %struct.Reg, %struct.Reg* %6687, i32 0, i32 0
  %EAX.i876 = bitcast %union.anon* %6688 to i32*
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6690 = getelementptr inbounds %struct.GPR, %struct.GPR* %6689, i32 0, i32 15
  %6691 = getelementptr inbounds %struct.Reg, %struct.Reg* %6690, i32 0, i32 0
  %RBP.i877 = bitcast %union.anon* %6691 to i64*
  %6692 = load i64, i64* %RBP.i877
  %6693 = sub i64 %6692, 40
  %6694 = load i32, i32* %EAX.i876
  %6695 = zext i32 %6694 to i64
  %6696 = load i64, i64* %PC.i875
  %6697 = add i64 %6696, 3
  store i64 %6697, i64* %PC.i875
  %6698 = inttoptr i64 %6693 to i32*
  store i32 %6694, i32* %6698
  store %struct.Memory* %loadMem_48952b, %struct.Memory** %MEMORY
  %loadMem_48952e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6700 = getelementptr inbounds %struct.GPR, %struct.GPR* %6699, i32 0, i32 33
  %6701 = getelementptr inbounds %struct.Reg, %struct.Reg* %6700, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %6701 to i64*
  %6702 = load i64, i64* %PC.i874
  %6703 = add i64 %6702, -116
  %6704 = load i64, i64* %PC.i874
  %6705 = add i64 %6704, 5
  store i64 %6705, i64* %PC.i874
  %6706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6703, i64* %6706, align 8
  store %struct.Memory* %loadMem_48952e, %struct.Memory** %MEMORY
  br label %block_.L_4894ba

block_.L_489533:                                  ; preds = %block_.L_4894ba
  %loadMem_489533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6708 = getelementptr inbounds %struct.GPR, %struct.GPR* %6707, i32 0, i32 33
  %6709 = getelementptr inbounds %struct.Reg, %struct.Reg* %6708, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %6709 to i64*
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 1
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %RAX.i872 = bitcast %union.anon* %6712 to i64*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 15
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %6715 to i64*
  %6716 = load i64, i64* %RBP.i873
  %6717 = sub i64 %6716, 76
  %6718 = load i64, i64* %PC.i871
  %6719 = add i64 %6718, 3
  store i64 %6719, i64* %PC.i871
  %6720 = inttoptr i64 %6717 to i32*
  %6721 = load i32, i32* %6720
  %6722 = zext i32 %6721 to i64
  store i64 %6722, i64* %RAX.i872, align 8
  store %struct.Memory* %loadMem_489533, %struct.Memory** %MEMORY
  %loadMem_489536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6724 = getelementptr inbounds %struct.GPR, %struct.GPR* %6723, i32 0, i32 33
  %6725 = getelementptr inbounds %struct.Reg, %struct.Reg* %6724, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %6725 to i64*
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6727 = getelementptr inbounds %struct.GPR, %struct.GPR* %6726, i32 0, i32 1
  %6728 = getelementptr inbounds %struct.Reg, %struct.Reg* %6727, i32 0, i32 0
  %RAX.i870 = bitcast %union.anon* %6728 to i64*
  %6729 = load i64, i64* %RAX.i870
  %6730 = load i64, i64* %PC.i869
  %6731 = add i64 %6730, 3
  store i64 %6731, i64* %PC.i869
  %6732 = and i64 %6729, 4294967295
  %6733 = shl i64 %6732, 3
  %6734 = trunc i64 %6733 to i32
  %6735 = icmp slt i32 %6734, 0
  %6736 = shl i32 %6734, 1
  %6737 = zext i32 %6736 to i64
  store i64 %6737, i64* %RAX.i870, align 8
  %6738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6739 = zext i1 %6735 to i8
  store i8 %6739, i8* %6738, align 1
  %6740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6741 = and i32 %6736, 254
  %6742 = call i32 @llvm.ctpop.i32(i32 %6741)
  %6743 = trunc i32 %6742 to i8
  %6744 = and i8 %6743, 1
  %6745 = xor i8 %6744, 1
  store i8 %6745, i8* %6740, align 1
  %6746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6746, align 1
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6748 = icmp eq i32 %6736, 0
  %6749 = zext i1 %6748 to i8
  store i8 %6749, i8* %6747, align 1
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6751 = lshr i32 %6736, 31
  %6752 = trunc i32 %6751 to i8
  store i8 %6752, i8* %6750, align 1
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6753, align 1
  store %struct.Memory* %loadMem_489536, %struct.Memory** %MEMORY
  %loadMem_489539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6755 = getelementptr inbounds %struct.GPR, %struct.GPR* %6754, i32 0, i32 33
  %6756 = getelementptr inbounds %struct.Reg, %struct.Reg* %6755, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %6756 to i64*
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6758 = getelementptr inbounds %struct.GPR, %struct.GPR* %6757, i32 0, i32 5
  %6759 = getelementptr inbounds %struct.Reg, %struct.Reg* %6758, i32 0, i32 0
  %RCX.i867 = bitcast %union.anon* %6759 to i64*
  %6760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6761 = getelementptr inbounds %struct.GPR, %struct.GPR* %6760, i32 0, i32 15
  %6762 = getelementptr inbounds %struct.Reg, %struct.Reg* %6761, i32 0, i32 0
  %RBP.i868 = bitcast %union.anon* %6762 to i64*
  %6763 = load i64, i64* %RBP.i868
  %6764 = sub i64 %6763, 8
  %6765 = load i64, i64* %PC.i866
  %6766 = add i64 %6765, 4
  store i64 %6766, i64* %PC.i866
  %6767 = inttoptr i64 %6764 to i64*
  %6768 = load i64, i64* %6767
  store i64 %6768, i64* %RCX.i867, align 8
  store %struct.Memory* %loadMem_489539, %struct.Memory** %MEMORY
  %loadMem_48953d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6770 = getelementptr inbounds %struct.GPR, %struct.GPR* %6769, i32 0, i32 33
  %6771 = getelementptr inbounds %struct.Reg, %struct.Reg* %6770, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %6771 to i64*
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6773 = getelementptr inbounds %struct.GPR, %struct.GPR* %6772, i32 0, i32 1
  %6774 = getelementptr inbounds %struct.Reg, %struct.Reg* %6773, i32 0, i32 0
  %RAX.i864 = bitcast %union.anon* %6774 to i64*
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6776 = getelementptr inbounds %struct.GPR, %struct.GPR* %6775, i32 0, i32 5
  %6777 = getelementptr inbounds %struct.Reg, %struct.Reg* %6776, i32 0, i32 0
  %RCX.i865 = bitcast %union.anon* %6777 to i64*
  %6778 = load i64, i64* %RAX.i864
  %6779 = load i64, i64* %RCX.i865
  %6780 = add i64 %6779, 460
  %6781 = load i64, i64* %PC.i863
  %6782 = add i64 %6781, 6
  store i64 %6782, i64* %PC.i863
  %6783 = trunc i64 %6778 to i32
  %6784 = inttoptr i64 %6780 to i32*
  %6785 = load i32, i32* %6784
  %6786 = add i32 %6785, %6783
  %6787 = zext i32 %6786 to i64
  store i64 %6787, i64* %RAX.i864, align 8
  %6788 = icmp ult i32 %6786, %6783
  %6789 = icmp ult i32 %6786, %6785
  %6790 = or i1 %6788, %6789
  %6791 = zext i1 %6790 to i8
  %6792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6791, i8* %6792, align 1
  %6793 = and i32 %6786, 255
  %6794 = call i32 @llvm.ctpop.i32(i32 %6793)
  %6795 = trunc i32 %6794 to i8
  %6796 = and i8 %6795, 1
  %6797 = xor i8 %6796, 1
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6797, i8* %6798, align 1
  %6799 = xor i32 %6785, %6783
  %6800 = xor i32 %6799, %6786
  %6801 = lshr i32 %6800, 4
  %6802 = trunc i32 %6801 to i8
  %6803 = and i8 %6802, 1
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6803, i8* %6804, align 1
  %6805 = icmp eq i32 %6786, 0
  %6806 = zext i1 %6805 to i8
  %6807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6806, i8* %6807, align 1
  %6808 = lshr i32 %6786, 31
  %6809 = trunc i32 %6808 to i8
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6809, i8* %6810, align 1
  %6811 = lshr i32 %6783, 31
  %6812 = lshr i32 %6785, 31
  %6813 = xor i32 %6808, %6811
  %6814 = xor i32 %6808, %6812
  %6815 = add i32 %6813, %6814
  %6816 = icmp eq i32 %6815, 2
  %6817 = zext i1 %6816 to i8
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6817, i8* %6818, align 1
  store %struct.Memory* %loadMem_48953d, %struct.Memory** %MEMORY
  %loadMem_489543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6820 = getelementptr inbounds %struct.GPR, %struct.GPR* %6819, i32 0, i32 33
  %6821 = getelementptr inbounds %struct.Reg, %struct.Reg* %6820, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %6821 to i64*
  %6822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6823 = getelementptr inbounds %struct.GPR, %struct.GPR* %6822, i32 0, i32 1
  %6824 = getelementptr inbounds %struct.Reg, %struct.Reg* %6823, i32 0, i32 0
  %EAX.i861 = bitcast %union.anon* %6824 to i32*
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6826 = getelementptr inbounds %struct.GPR, %struct.GPR* %6825, i32 0, i32 5
  %6827 = getelementptr inbounds %struct.Reg, %struct.Reg* %6826, i32 0, i32 0
  %RCX.i862 = bitcast %union.anon* %6827 to i64*
  %6828 = load i64, i64* %RCX.i862
  %6829 = add i64 %6828, 460
  %6830 = load i32, i32* %EAX.i861
  %6831 = zext i32 %6830 to i64
  %6832 = load i64, i64* %PC.i860
  %6833 = add i64 %6832, 6
  store i64 %6833, i64* %PC.i860
  %6834 = inttoptr i64 %6829 to i32*
  store i32 %6830, i32* %6834
  store %struct.Memory* %loadMem_489543, %struct.Memory** %MEMORY
  %loadMem_489549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6836 = getelementptr inbounds %struct.GPR, %struct.GPR* %6835, i32 0, i32 33
  %6837 = getelementptr inbounds %struct.Reg, %struct.Reg* %6836, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %6837 to i64*
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6839 = getelementptr inbounds %struct.GPR, %struct.GPR* %6838, i32 0, i32 15
  %6840 = getelementptr inbounds %struct.Reg, %struct.Reg* %6839, i32 0, i32 0
  %RBP.i859 = bitcast %union.anon* %6840 to i64*
  %6841 = load i64, i64* %RBP.i859
  %6842 = sub i64 %6841, 40
  %6843 = load i64, i64* %PC.i858
  %6844 = add i64 %6843, 7
  store i64 %6844, i64* %PC.i858
  %6845 = inttoptr i64 %6842 to i32*
  store i32 0, i32* %6845
  store %struct.Memory* %loadMem_489549, %struct.Memory** %MEMORY
  br label %block_.L_489550

block_.L_489550:                                  ; preds = %block_.L_489a88, %block_.L_489533
  %loadMem_489550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6847 = getelementptr inbounds %struct.GPR, %struct.GPR* %6846, i32 0, i32 33
  %6848 = getelementptr inbounds %struct.Reg, %struct.Reg* %6847, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %6848 to i64*
  %6849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6850 = getelementptr inbounds %struct.GPR, %struct.GPR* %6849, i32 0, i32 15
  %6851 = getelementptr inbounds %struct.Reg, %struct.Reg* %6850, i32 0, i32 0
  %RBP.i857 = bitcast %union.anon* %6851 to i64*
  %6852 = load i64, i64* %RBP.i857
  %6853 = sub i64 %6852, 40
  %6854 = load i64, i64* %PC.i856
  %6855 = add i64 %6854, 4
  store i64 %6855, i64* %PC.i856
  %6856 = inttoptr i64 %6853 to i32*
  %6857 = load i32, i32* %6856
  %6858 = sub i32 %6857, 16
  %6859 = icmp ult i32 %6857, 16
  %6860 = zext i1 %6859 to i8
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6860, i8* %6861, align 1
  %6862 = and i32 %6858, 255
  %6863 = call i32 @llvm.ctpop.i32(i32 %6862)
  %6864 = trunc i32 %6863 to i8
  %6865 = and i8 %6864, 1
  %6866 = xor i8 %6865, 1
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6866, i8* %6867, align 1
  %6868 = xor i32 %6857, 16
  %6869 = xor i32 %6868, %6858
  %6870 = lshr i32 %6869, 4
  %6871 = trunc i32 %6870 to i8
  %6872 = and i8 %6871, 1
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6872, i8* %6873, align 1
  %6874 = icmp eq i32 %6858, 0
  %6875 = zext i1 %6874 to i8
  %6876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6875, i8* %6876, align 1
  %6877 = lshr i32 %6858, 31
  %6878 = trunc i32 %6877 to i8
  %6879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6878, i8* %6879, align 1
  %6880 = lshr i32 %6857, 31
  %6881 = xor i32 %6877, %6880
  %6882 = add i32 %6881, %6880
  %6883 = icmp eq i32 %6882, 2
  %6884 = zext i1 %6883 to i8
  %6885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6884, i8* %6885, align 1
  store %struct.Memory* %loadMem_489550, %struct.Memory** %MEMORY
  %loadMem_489554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6887 = getelementptr inbounds %struct.GPR, %struct.GPR* %6886, i32 0, i32 33
  %6888 = getelementptr inbounds %struct.Reg, %struct.Reg* %6887, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %6888 to i64*
  %6889 = load i64, i64* %PC.i855
  %6890 = add i64 %6889, 1346
  %6891 = load i64, i64* %PC.i855
  %6892 = add i64 %6891, 6
  %6893 = load i64, i64* %PC.i855
  %6894 = add i64 %6893, 6
  store i64 %6894, i64* %PC.i855
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6896 = load i8, i8* %6895, align 1
  %6897 = icmp ne i8 %6896, 0
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6899 = load i8, i8* %6898, align 1
  %6900 = icmp ne i8 %6899, 0
  %6901 = xor i1 %6897, %6900
  %6902 = xor i1 %6901, true
  %6903 = zext i1 %6902 to i8
  store i8 %6903, i8* %BRANCH_TAKEN, align 1
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6905 = select i1 %6901, i64 %6892, i64 %6890
  store i64 %6905, i64* %6904, align 8
  store %struct.Memory* %loadMem_489554, %struct.Memory** %MEMORY
  %loadBr_489554 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489554 = icmp eq i8 %loadBr_489554, 1
  br i1 %cmpBr_489554, label %block_.L_489a96, label %block_48955a

block_48955a:                                     ; preds = %block_.L_489550
  %loadMem_48955a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6907 = getelementptr inbounds %struct.GPR, %struct.GPR* %6906, i32 0, i32 33
  %6908 = getelementptr inbounds %struct.Reg, %struct.Reg* %6907, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %6908 to i64*
  %6909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6910 = getelementptr inbounds %struct.GPR, %struct.GPR* %6909, i32 0, i32 15
  %6911 = getelementptr inbounds %struct.Reg, %struct.Reg* %6910, i32 0, i32 0
  %RBP.i854 = bitcast %union.anon* %6911 to i64*
  %6912 = load i64, i64* %RBP.i854
  %6913 = sub i64 %6912, 36
  %6914 = load i64, i64* %PC.i853
  %6915 = add i64 %6914, 7
  store i64 %6915, i64* %PC.i853
  %6916 = inttoptr i64 %6913 to i32*
  store i32 0, i32* %6916
  store %struct.Memory* %loadMem_48955a, %struct.Memory** %MEMORY
  br label %block_.L_489561

block_.L_489561:                                  ; preds = %block_.L_489a42, %block_48955a
  %loadMem_489561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6918 = getelementptr inbounds %struct.GPR, %struct.GPR* %6917, i32 0, i32 33
  %6919 = getelementptr inbounds %struct.Reg, %struct.Reg* %6918, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %6919 to i64*
  %6920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6921 = getelementptr inbounds %struct.GPR, %struct.GPR* %6920, i32 0, i32 15
  %6922 = getelementptr inbounds %struct.Reg, %struct.Reg* %6921, i32 0, i32 0
  %RBP.i852 = bitcast %union.anon* %6922 to i64*
  %6923 = load i64, i64* %RBP.i852
  %6924 = sub i64 %6923, 36
  %6925 = load i64, i64* %PC.i851
  %6926 = add i64 %6925, 4
  store i64 %6926, i64* %PC.i851
  %6927 = inttoptr i64 %6924 to i32*
  %6928 = load i32, i32* %6927
  %6929 = sub i32 %6928, 16
  %6930 = icmp ult i32 %6928, 16
  %6931 = zext i1 %6930 to i8
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6931, i8* %6932, align 1
  %6933 = and i32 %6929, 255
  %6934 = call i32 @llvm.ctpop.i32(i32 %6933)
  %6935 = trunc i32 %6934 to i8
  %6936 = and i8 %6935, 1
  %6937 = xor i8 %6936, 1
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6937, i8* %6938, align 1
  %6939 = xor i32 %6928, 16
  %6940 = xor i32 %6939, %6929
  %6941 = lshr i32 %6940, 4
  %6942 = trunc i32 %6941 to i8
  %6943 = and i8 %6942, 1
  %6944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6943, i8* %6944, align 1
  %6945 = icmp eq i32 %6929, 0
  %6946 = zext i1 %6945 to i8
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6946, i8* %6947, align 1
  %6948 = lshr i32 %6929, 31
  %6949 = trunc i32 %6948 to i8
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6949, i8* %6950, align 1
  %6951 = lshr i32 %6928, 31
  %6952 = xor i32 %6948, %6951
  %6953 = add i32 %6952, %6951
  %6954 = icmp eq i32 %6953, 2
  %6955 = zext i1 %6954 to i8
  %6956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6955, i8* %6956, align 1
  store %struct.Memory* %loadMem_489561, %struct.Memory** %MEMORY
  %loadMem_489565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6958 = getelementptr inbounds %struct.GPR, %struct.GPR* %6957, i32 0, i32 33
  %6959 = getelementptr inbounds %struct.Reg, %struct.Reg* %6958, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %6959 to i64*
  %6960 = load i64, i64* %PC.i850
  %6961 = add i64 %6960, 1310
  %6962 = load i64, i64* %PC.i850
  %6963 = add i64 %6962, 6
  %6964 = load i64, i64* %PC.i850
  %6965 = add i64 %6964, 6
  store i64 %6965, i64* %PC.i850
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6967 = load i8, i8* %6966, align 1
  %6968 = icmp ne i8 %6967, 0
  %6969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6970 = load i8, i8* %6969, align 1
  %6971 = icmp ne i8 %6970, 0
  %6972 = xor i1 %6968, %6971
  %6973 = xor i1 %6972, true
  %6974 = zext i1 %6973 to i8
  store i8 %6974, i8* %BRANCH_TAKEN, align 1
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6976 = select i1 %6972, i64 %6963, i64 %6961
  store i64 %6976, i64* %6975, align 8
  store %struct.Memory* %loadMem_489565, %struct.Memory** %MEMORY
  %loadBr_489565 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489565 = icmp eq i8 %loadBr_489565, 1
  br i1 %cmpBr_489565, label %block_.L_489a83, label %block_48956b

block_48956b:                                     ; preds = %block_.L_489561
  %loadMem_48956b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6978 = getelementptr inbounds %struct.GPR, %struct.GPR* %6977, i32 0, i32 33
  %6979 = getelementptr inbounds %struct.Reg, %struct.Reg* %6978, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %6979 to i64*
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 1
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %EAX.i848 = bitcast %union.anon* %6982 to i32*
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6984 = getelementptr inbounds %struct.GPR, %struct.GPR* %6983, i32 0, i32 1
  %6985 = getelementptr inbounds %struct.Reg, %struct.Reg* %6984, i32 0, i32 0
  %RAX.i849 = bitcast %union.anon* %6985 to i64*
  %6986 = load i64, i64* %RAX.i849
  %6987 = load i32, i32* %EAX.i848
  %6988 = zext i32 %6987 to i64
  %6989 = load i64, i64* %PC.i847
  %6990 = add i64 %6989, 2
  store i64 %6990, i64* %PC.i847
  %6991 = xor i64 %6988, %6986
  %6992 = trunc i64 %6991 to i32
  %6993 = and i64 %6991, 4294967295
  store i64 %6993, i64* %RAX.i849, align 8
  %6994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6994, align 1
  %6995 = and i32 %6992, 255
  %6996 = call i32 @llvm.ctpop.i32(i32 %6995)
  %6997 = trunc i32 %6996 to i8
  %6998 = and i8 %6997, 1
  %6999 = xor i8 %6998, 1
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6999, i8* %7000, align 1
  %7001 = icmp eq i32 %6992, 0
  %7002 = zext i1 %7001 to i8
  %7003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7002, i8* %7003, align 1
  %7004 = lshr i32 %6992, 31
  %7005 = trunc i32 %7004 to i8
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7005, i8* %7006, align 1
  %7007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7007, align 1
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7008, align 1
  store %struct.Memory* %loadMem_48956b, %struct.Memory** %MEMORY
  %loadMem_48956d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7010 = getelementptr inbounds %struct.GPR, %struct.GPR* %7009, i32 0, i32 33
  %7011 = getelementptr inbounds %struct.Reg, %struct.Reg* %7010, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %7011 to i64*
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7013 = getelementptr inbounds %struct.GPR, %struct.GPR* %7012, i32 0, i32 5
  %7014 = getelementptr inbounds %struct.Reg, %struct.Reg* %7013, i32 0, i32 0
  %RCX.i846 = bitcast %union.anon* %7014 to i64*
  %7015 = load i64, i64* %PC.i845
  %7016 = add i64 %7015, 10
  store i64 %7016, i64* %PC.i845
  store i64 ptrtoint (%G__0x6f8f20_type* @G__0x6f8f20 to i64), i64* %RCX.i846, align 8
  store %struct.Memory* %loadMem_48956d, %struct.Memory** %MEMORY
  %loadMem_489577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7018 = getelementptr inbounds %struct.GPR, %struct.GPR* %7017, i32 0, i32 33
  %7019 = getelementptr inbounds %struct.Reg, %struct.Reg* %7018, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %7019 to i64*
  %7020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7021 = getelementptr inbounds %struct.GPR, %struct.GPR* %7020, i32 0, i32 7
  %7022 = getelementptr inbounds %struct.Reg, %struct.Reg* %7021, i32 0, i32 0
  %RDX.i844 = bitcast %union.anon* %7022 to i64*
  %7023 = load i64, i64* %PC.i843
  %7024 = add i64 %7023, 10
  store i64 %7024, i64* %PC.i843
  store i64 ptrtoint (%G__0x6d2ec0_type* @G__0x6d2ec0 to i64), i64* %RDX.i844, align 8
  store %struct.Memory* %loadMem_489577, %struct.Memory** %MEMORY
  %loadMem_489581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7026 = getelementptr inbounds %struct.GPR, %struct.GPR* %7025, i32 0, i32 33
  %7027 = getelementptr inbounds %struct.Reg, %struct.Reg* %7026, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %7027 to i64*
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 9
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %RSI.i842 = bitcast %union.anon* %7030 to i64*
  %7031 = load i64, i64* %PC.i841
  %7032 = add i64 %7031, 10
  store i64 %7032, i64* %PC.i841
  store i64 ptrtoint (%G__0x722ff0_type* @G__0x722ff0 to i64), i64* %RSI.i842, align 8
  store %struct.Memory* %loadMem_489581, %struct.Memory** %MEMORY
  %loadMem_48958b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7034 = getelementptr inbounds %struct.GPR, %struct.GPR* %7033, i32 0, i32 33
  %7035 = getelementptr inbounds %struct.Reg, %struct.Reg* %7034, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %7035 to i64*
  %7036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7037 = getelementptr inbounds %struct.GPR, %struct.GPR* %7036, i32 0, i32 11
  %7038 = getelementptr inbounds %struct.Reg, %struct.Reg* %7037, i32 0, i32 0
  %RDI.i839 = bitcast %union.anon* %7038 to i64*
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7040 = getelementptr inbounds %struct.GPR, %struct.GPR* %7039, i32 0, i32 15
  %7041 = getelementptr inbounds %struct.Reg, %struct.Reg* %7040, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %7041 to i64*
  %7042 = load i64, i64* %RBP.i840
  %7043 = sub i64 %7042, 36
  %7044 = load i64, i64* %PC.i838
  %7045 = add i64 %7044, 4
  store i64 %7045, i64* %PC.i838
  %7046 = inttoptr i64 %7043 to i32*
  %7047 = load i32, i32* %7046
  %7048 = sext i32 %7047 to i64
  store i64 %7048, i64* %RDI.i839, align 8
  store %struct.Memory* %loadMem_48958b, %struct.Memory** %MEMORY
  %loadMem_48958f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7050 = getelementptr inbounds %struct.GPR, %struct.GPR* %7049, i32 0, i32 33
  %7051 = getelementptr inbounds %struct.Reg, %struct.Reg* %7050, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %7051 to i64*
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7053 = getelementptr inbounds %struct.GPR, %struct.GPR* %7052, i32 0, i32 11
  %7054 = getelementptr inbounds %struct.Reg, %struct.Reg* %7053, i32 0, i32 0
  %RDI.i837 = bitcast %union.anon* %7054 to i64*
  %7055 = load i64, i64* %RDI.i837
  %7056 = load i64, i64* %PC.i836
  %7057 = add i64 %7056, 4
  store i64 %7057, i64* %PC.i836
  %7058 = shl i64 %7055, 5
  %7059 = icmp slt i64 %7058, 0
  %7060 = shl i64 %7058, 1
  store i64 %7060, i64* %RDI.i837, align 8
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7062 = zext i1 %7059 to i8
  store i8 %7062, i8* %7061, align 1
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7064 = trunc i64 %7060 to i32
  %7065 = and i32 %7064, 254
  %7066 = call i32 @llvm.ctpop.i32(i32 %7065)
  %7067 = trunc i32 %7066 to i8
  %7068 = and i8 %7067, 1
  %7069 = xor i8 %7068, 1
  store i8 %7069, i8* %7063, align 1
  %7070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7070, align 1
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7072 = icmp eq i64 %7060, 0
  %7073 = zext i1 %7072 to i8
  store i8 %7073, i8* %7071, align 1
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7075 = lshr i64 %7060, 63
  %7076 = trunc i64 %7075 to i8
  store i8 %7076, i8* %7074, align 1
  %7077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7077, align 1
  store %struct.Memory* %loadMem_48958f, %struct.Memory** %MEMORY
  %loadMem_489593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7079 = getelementptr inbounds %struct.GPR, %struct.GPR* %7078, i32 0, i32 33
  %7080 = getelementptr inbounds %struct.Reg, %struct.Reg* %7079, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %7080 to i64*
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7082 = getelementptr inbounds %struct.GPR, %struct.GPR* %7081, i32 0, i32 9
  %7083 = getelementptr inbounds %struct.Reg, %struct.Reg* %7082, i32 0, i32 0
  %RSI.i834 = bitcast %union.anon* %7083 to i64*
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7085 = getelementptr inbounds %struct.GPR, %struct.GPR* %7084, i32 0, i32 11
  %7086 = getelementptr inbounds %struct.Reg, %struct.Reg* %7085, i32 0, i32 0
  %RDI.i835 = bitcast %union.anon* %7086 to i64*
  %7087 = load i64, i64* %RSI.i834
  %7088 = load i64, i64* %RDI.i835
  %7089 = load i64, i64* %PC.i833
  %7090 = add i64 %7089, 3
  store i64 %7090, i64* %PC.i833
  %7091 = add i64 %7088, %7087
  store i64 %7091, i64* %RSI.i834, align 8
  %7092 = icmp ult i64 %7091, %7087
  %7093 = icmp ult i64 %7091, %7088
  %7094 = or i1 %7092, %7093
  %7095 = zext i1 %7094 to i8
  %7096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7095, i8* %7096, align 1
  %7097 = trunc i64 %7091 to i32
  %7098 = and i32 %7097, 255
  %7099 = call i32 @llvm.ctpop.i32(i32 %7098)
  %7100 = trunc i32 %7099 to i8
  %7101 = and i8 %7100, 1
  %7102 = xor i8 %7101, 1
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7102, i8* %7103, align 1
  %7104 = xor i64 %7088, %7087
  %7105 = xor i64 %7104, %7091
  %7106 = lshr i64 %7105, 4
  %7107 = trunc i64 %7106 to i8
  %7108 = and i8 %7107, 1
  %7109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7108, i8* %7109, align 1
  %7110 = icmp eq i64 %7091, 0
  %7111 = zext i1 %7110 to i8
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7111, i8* %7112, align 1
  %7113 = lshr i64 %7091, 63
  %7114 = trunc i64 %7113 to i8
  %7115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7114, i8* %7115, align 1
  %7116 = lshr i64 %7087, 63
  %7117 = lshr i64 %7088, 63
  %7118 = xor i64 %7113, %7116
  %7119 = xor i64 %7113, %7117
  %7120 = add i64 %7118, %7119
  %7121 = icmp eq i64 %7120, 2
  %7122 = zext i1 %7121 to i8
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7122, i8* %7123, align 1
  store %struct.Memory* %loadMem_489593, %struct.Memory** %MEMORY
  %loadMem_489596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7125 = getelementptr inbounds %struct.GPR, %struct.GPR* %7124, i32 0, i32 33
  %7126 = getelementptr inbounds %struct.Reg, %struct.Reg* %7125, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %7126 to i64*
  %7127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7128 = getelementptr inbounds %struct.GPR, %struct.GPR* %7127, i32 0, i32 11
  %7129 = getelementptr inbounds %struct.Reg, %struct.Reg* %7128, i32 0, i32 0
  %RDI.i831 = bitcast %union.anon* %7129 to i64*
  %7130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7131 = getelementptr inbounds %struct.GPR, %struct.GPR* %7130, i32 0, i32 15
  %7132 = getelementptr inbounds %struct.Reg, %struct.Reg* %7131, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %7132 to i64*
  %7133 = load i64, i64* %RBP.i832
  %7134 = sub i64 %7133, 40
  %7135 = load i64, i64* %PC.i830
  %7136 = add i64 %7135, 4
  store i64 %7136, i64* %PC.i830
  %7137 = inttoptr i64 %7134 to i32*
  %7138 = load i32, i32* %7137
  %7139 = sext i32 %7138 to i64
  store i64 %7139, i64* %RDI.i831, align 8
  store %struct.Memory* %loadMem_489596, %struct.Memory** %MEMORY
  %loadMem_48959a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7141 = getelementptr inbounds %struct.GPR, %struct.GPR* %7140, i32 0, i32 33
  %7142 = getelementptr inbounds %struct.Reg, %struct.Reg* %7141, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %7142 to i64*
  %7143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7144 = getelementptr inbounds %struct.GPR, %struct.GPR* %7143, i32 0, i32 17
  %7145 = getelementptr inbounds %struct.Reg, %struct.Reg* %7144, i32 0, i32 0
  %R8D.i827 = bitcast %union.anon* %7145 to i32*
  %7146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7147 = getelementptr inbounds %struct.GPR, %struct.GPR* %7146, i32 0, i32 9
  %7148 = getelementptr inbounds %struct.Reg, %struct.Reg* %7147, i32 0, i32 0
  %RSI.i828 = bitcast %union.anon* %7148 to i64*
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7150 = getelementptr inbounds %struct.GPR, %struct.GPR* %7149, i32 0, i32 11
  %7151 = getelementptr inbounds %struct.Reg, %struct.Reg* %7150, i32 0, i32 0
  %RDI.i829 = bitcast %union.anon* %7151 to i64*
  %7152 = bitcast i32* %R8D.i827 to i64*
  %7153 = load i64, i64* %RSI.i828
  %7154 = load i64, i64* %RDI.i829
  %7155 = mul i64 %7154, 4
  %7156 = add i64 %7155, %7153
  %7157 = load i64, i64* %PC.i826
  %7158 = add i64 %7157, 4
  store i64 %7158, i64* %PC.i826
  %7159 = inttoptr i64 %7156 to i32*
  %7160 = load i32, i32* %7159
  %7161 = zext i32 %7160 to i64
  store i64 %7161, i64* %7152, align 8
  store %struct.Memory* %loadMem_48959a, %struct.Memory** %MEMORY
  %loadMem_48959e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7163 = getelementptr inbounds %struct.GPR, %struct.GPR* %7162, i32 0, i32 33
  %7164 = getelementptr inbounds %struct.Reg, %struct.Reg* %7163, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %7164 to i64*
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7166 = getelementptr inbounds %struct.GPR, %struct.GPR* %7165, i32 0, i32 9
  %7167 = getelementptr inbounds %struct.Reg, %struct.Reg* %7166, i32 0, i32 0
  %RSI.i824 = bitcast %union.anon* %7167 to i64*
  %7168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7169 = getelementptr inbounds %struct.GPR, %struct.GPR* %7168, i32 0, i32 15
  %7170 = getelementptr inbounds %struct.Reg, %struct.Reg* %7169, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %7170 to i64*
  %7171 = load i64, i64* %RBP.i825
  %7172 = sub i64 %7171, 36
  %7173 = load i64, i64* %PC.i823
  %7174 = add i64 %7173, 4
  store i64 %7174, i64* %PC.i823
  %7175 = inttoptr i64 %7172 to i32*
  %7176 = load i32, i32* %7175
  %7177 = sext i32 %7176 to i64
  store i64 %7177, i64* %RSI.i824, align 8
  store %struct.Memory* %loadMem_48959e, %struct.Memory** %MEMORY
  %loadMem_4895a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7179 = getelementptr inbounds %struct.GPR, %struct.GPR* %7178, i32 0, i32 33
  %7180 = getelementptr inbounds %struct.Reg, %struct.Reg* %7179, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %7180 to i64*
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7182 = getelementptr inbounds %struct.GPR, %struct.GPR* %7181, i32 0, i32 9
  %7183 = getelementptr inbounds %struct.Reg, %struct.Reg* %7182, i32 0, i32 0
  %RSI.i822 = bitcast %union.anon* %7183 to i64*
  %7184 = load i64, i64* %RSI.i822
  %7185 = load i64, i64* %PC.i821
  %7186 = add i64 %7185, 4
  store i64 %7186, i64* %PC.i821
  %7187 = shl i64 %7184, 5
  %7188 = icmp slt i64 %7187, 0
  %7189 = shl i64 %7187, 1
  store i64 %7189, i64* %RSI.i822, align 8
  %7190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7191 = zext i1 %7188 to i8
  store i8 %7191, i8* %7190, align 1
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7193 = trunc i64 %7189 to i32
  %7194 = and i32 %7193, 254
  %7195 = call i32 @llvm.ctpop.i32(i32 %7194)
  %7196 = trunc i32 %7195 to i8
  %7197 = and i8 %7196, 1
  %7198 = xor i8 %7197, 1
  store i8 %7198, i8* %7192, align 1
  %7199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7199, align 1
  %7200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7201 = icmp eq i64 %7189, 0
  %7202 = zext i1 %7201 to i8
  store i8 %7202, i8* %7200, align 1
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7204 = lshr i64 %7189, 63
  %7205 = trunc i64 %7204 to i8
  store i8 %7205, i8* %7203, align 1
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7206, align 1
  store %struct.Memory* %loadMem_4895a2, %struct.Memory** %MEMORY
  %loadMem_4895a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7208 = getelementptr inbounds %struct.GPR, %struct.GPR* %7207, i32 0, i32 33
  %7209 = getelementptr inbounds %struct.Reg, %struct.Reg* %7208, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %7209 to i64*
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7211 = getelementptr inbounds %struct.GPR, %struct.GPR* %7210, i32 0, i32 7
  %7212 = getelementptr inbounds %struct.Reg, %struct.Reg* %7211, i32 0, i32 0
  %RDX.i819 = bitcast %union.anon* %7212 to i64*
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7214 = getelementptr inbounds %struct.GPR, %struct.GPR* %7213, i32 0, i32 11
  %7215 = getelementptr inbounds %struct.Reg, %struct.Reg* %7214, i32 0, i32 0
  %RDI.i820 = bitcast %union.anon* %7215 to i64*
  %7216 = load i64, i64* %RDX.i819
  %7217 = load i64, i64* %PC.i818
  %7218 = add i64 %7217, 3
  store i64 %7218, i64* %PC.i818
  store i64 %7216, i64* %RDI.i820, align 8
  store %struct.Memory* %loadMem_4895a6, %struct.Memory** %MEMORY
  %loadMem_4895a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7220 = getelementptr inbounds %struct.GPR, %struct.GPR* %7219, i32 0, i32 33
  %7221 = getelementptr inbounds %struct.Reg, %struct.Reg* %7220, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %7221 to i64*
  %7222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7223 = getelementptr inbounds %struct.GPR, %struct.GPR* %7222, i32 0, i32 9
  %7224 = getelementptr inbounds %struct.Reg, %struct.Reg* %7223, i32 0, i32 0
  %RSI.i816 = bitcast %union.anon* %7224 to i64*
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 11
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %RDI.i817 = bitcast %union.anon* %7227 to i64*
  %7228 = load i64, i64* %RDI.i817
  %7229 = load i64, i64* %RSI.i816
  %7230 = load i64, i64* %PC.i815
  %7231 = add i64 %7230, 3
  store i64 %7231, i64* %PC.i815
  %7232 = add i64 %7229, %7228
  store i64 %7232, i64* %RDI.i817, align 8
  %7233 = icmp ult i64 %7232, %7228
  %7234 = icmp ult i64 %7232, %7229
  %7235 = or i1 %7233, %7234
  %7236 = zext i1 %7235 to i8
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7236, i8* %7237, align 1
  %7238 = trunc i64 %7232 to i32
  %7239 = and i32 %7238, 255
  %7240 = call i32 @llvm.ctpop.i32(i32 %7239)
  %7241 = trunc i32 %7240 to i8
  %7242 = and i8 %7241, 1
  %7243 = xor i8 %7242, 1
  %7244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7243, i8* %7244, align 1
  %7245 = xor i64 %7229, %7228
  %7246 = xor i64 %7245, %7232
  %7247 = lshr i64 %7246, 4
  %7248 = trunc i64 %7247 to i8
  %7249 = and i8 %7248, 1
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7249, i8* %7250, align 1
  %7251 = icmp eq i64 %7232, 0
  %7252 = zext i1 %7251 to i8
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7252, i8* %7253, align 1
  %7254 = lshr i64 %7232, 63
  %7255 = trunc i64 %7254 to i8
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7255, i8* %7256, align 1
  %7257 = lshr i64 %7228, 63
  %7258 = lshr i64 %7229, 63
  %7259 = xor i64 %7254, %7257
  %7260 = xor i64 %7254, %7258
  %7261 = add i64 %7259, %7260
  %7262 = icmp eq i64 %7261, 2
  %7263 = zext i1 %7262 to i8
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7263, i8* %7264, align 1
  store %struct.Memory* %loadMem_4895a9, %struct.Memory** %MEMORY
  %loadMem_4895ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7266 = getelementptr inbounds %struct.GPR, %struct.GPR* %7265, i32 0, i32 33
  %7267 = getelementptr inbounds %struct.Reg, %struct.Reg* %7266, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %7267 to i64*
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 9
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %RSI.i813 = bitcast %union.anon* %7270 to i64*
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 15
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %RBP.i814 = bitcast %union.anon* %7273 to i64*
  %7274 = load i64, i64* %RBP.i814
  %7275 = sub i64 %7274, 40
  %7276 = load i64, i64* %PC.i812
  %7277 = add i64 %7276, 4
  store i64 %7277, i64* %PC.i812
  %7278 = inttoptr i64 %7275 to i32*
  %7279 = load i32, i32* %7278
  %7280 = sext i32 %7279 to i64
  store i64 %7280, i64* %RSI.i813, align 8
  store %struct.Memory* %loadMem_4895ac, %struct.Memory** %MEMORY
  %loadMem_4895b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7282 = getelementptr inbounds %struct.GPR, %struct.GPR* %7281, i32 0, i32 33
  %7283 = getelementptr inbounds %struct.Reg, %struct.Reg* %7282, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %7283 to i64*
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 19
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %R9D.i809 = bitcast %union.anon* %7286 to i32*
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 9
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %RSI.i810 = bitcast %union.anon* %7289 to i64*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7291 = getelementptr inbounds %struct.GPR, %struct.GPR* %7290, i32 0, i32 11
  %7292 = getelementptr inbounds %struct.Reg, %struct.Reg* %7291, i32 0, i32 0
  %RDI.i811 = bitcast %union.anon* %7292 to i64*
  %7293 = bitcast i32* %R9D.i809 to i64*
  %7294 = load i64, i64* %RDI.i811
  %7295 = load i64, i64* %RSI.i810
  %7296 = mul i64 %7295, 4
  %7297 = add i64 %7296, %7294
  %7298 = load i64, i64* %PC.i808
  %7299 = add i64 %7298, 4
  store i64 %7299, i64* %PC.i808
  %7300 = inttoptr i64 %7297 to i32*
  %7301 = load i32, i32* %7300
  %7302 = zext i32 %7301 to i64
  store i64 %7302, i64* %7293, align 8
  store %struct.Memory* %loadMem_4895b0, %struct.Memory** %MEMORY
  %loadMem_4895b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7304 = getelementptr inbounds %struct.GPR, %struct.GPR* %7303, i32 0, i32 33
  %7305 = getelementptr inbounds %struct.Reg, %struct.Reg* %7304, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %7305 to i64*
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7307 = getelementptr inbounds %struct.GPR, %struct.GPR* %7306, i32 0, i32 19
  %7308 = getelementptr inbounds %struct.Reg, %struct.Reg* %7307, i32 0, i32 0
  %R9D.i807 = bitcast %union.anon* %7308 to i32*
  %7309 = bitcast i32* %R9D.i807 to i64*
  %7310 = load i32, i32* %R9D.i807
  %7311 = zext i32 %7310 to i64
  %7312 = load i64, i64* %PC.i806
  %7313 = add i64 %7312, 3
  store i64 %7313, i64* %PC.i806
  %7314 = shl i64 %7311, 32
  %7315 = ashr i64 %7314, 33
  %7316 = trunc i64 %7311 to i8
  %7317 = and i8 %7316, 1
  %7318 = trunc i64 %7315 to i32
  %7319 = and i64 %7315, 4294967295
  store i64 %7319, i64* %7309, align 8
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7317, i8* %7320, align 1
  %7321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7322 = and i32 %7318, 255
  %7323 = call i32 @llvm.ctpop.i32(i32 %7322)
  %7324 = trunc i32 %7323 to i8
  %7325 = and i8 %7324, 1
  %7326 = xor i8 %7325, 1
  store i8 %7326, i8* %7321, align 1
  %7327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7327, align 1
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7329 = icmp eq i32 %7318, 0
  %7330 = zext i1 %7329 to i8
  store i8 %7330, i8* %7328, align 1
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7332 = lshr i32 %7318, 31
  %7333 = trunc i32 %7332 to i8
  store i8 %7333, i8* %7331, align 1
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7334, align 1
  store %struct.Memory* %loadMem_4895b4, %struct.Memory** %MEMORY
  %loadMem_4895b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 33
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %7337 to i64*
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7339 = getelementptr inbounds %struct.GPR, %struct.GPR* %7338, i32 0, i32 17
  %7340 = getelementptr inbounds %struct.Reg, %struct.Reg* %7339, i32 0, i32 0
  %R8D.i804 = bitcast %union.anon* %7340 to i32*
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7342 = getelementptr inbounds %struct.GPR, %struct.GPR* %7341, i32 0, i32 19
  %7343 = getelementptr inbounds %struct.Reg, %struct.Reg* %7342, i32 0, i32 0
  %R9D.i805 = bitcast %union.anon* %7343 to i32*
  %7344 = bitcast i32* %R8D.i804 to i64*
  %7345 = load i32, i32* %R8D.i804
  %7346 = zext i32 %7345 to i64
  %7347 = load i32, i32* %R9D.i805
  %7348 = zext i32 %7347 to i64
  %7349 = load i64, i64* %PC.i803
  %7350 = add i64 %7349, 3
  store i64 %7350, i64* %PC.i803
  %7351 = sub i32 %7345, %7347
  %7352 = zext i32 %7351 to i64
  store i64 %7352, i64* %7344, align 8
  %7353 = icmp ult i32 %7345, %7347
  %7354 = zext i1 %7353 to i8
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7354, i8* %7355, align 1
  %7356 = and i32 %7351, 255
  %7357 = call i32 @llvm.ctpop.i32(i32 %7356)
  %7358 = trunc i32 %7357 to i8
  %7359 = and i8 %7358, 1
  %7360 = xor i8 %7359, 1
  %7361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7360, i8* %7361, align 1
  %7362 = xor i64 %7348, %7346
  %7363 = trunc i64 %7362 to i32
  %7364 = xor i32 %7363, %7351
  %7365 = lshr i32 %7364, 4
  %7366 = trunc i32 %7365 to i8
  %7367 = and i8 %7366, 1
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7367, i8* %7368, align 1
  %7369 = icmp eq i32 %7351, 0
  %7370 = zext i1 %7369 to i8
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7370, i8* %7371, align 1
  %7372 = lshr i32 %7351, 31
  %7373 = trunc i32 %7372 to i8
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7373, i8* %7374, align 1
  %7375 = lshr i32 %7345, 31
  %7376 = lshr i32 %7347, 31
  %7377 = xor i32 %7376, %7375
  %7378 = xor i32 %7372, %7375
  %7379 = add i32 %7378, %7377
  %7380 = icmp eq i32 %7379, 2
  %7381 = zext i1 %7380 to i8
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7381, i8* %7382, align 1
  store %struct.Memory* %loadMem_4895b8, %struct.Memory** %MEMORY
  %loadMem_4895bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 33
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %7385 to i64*
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7387 = getelementptr inbounds %struct.GPR, %struct.GPR* %7386, i32 0, i32 17
  %7388 = getelementptr inbounds %struct.Reg, %struct.Reg* %7387, i32 0, i32 0
  %R8D.i801 = bitcast %union.anon* %7388 to i32*
  %7389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7390 = getelementptr inbounds %struct.GPR, %struct.GPR* %7389, i32 0, i32 15
  %7391 = getelementptr inbounds %struct.Reg, %struct.Reg* %7390, i32 0, i32 0
  %RBP.i802 = bitcast %union.anon* %7391 to i64*
  %7392 = load i64, i64* %RBP.i802
  %7393 = sub i64 %7392, 44
  %7394 = load i32, i32* %R8D.i801
  %7395 = zext i32 %7394 to i64
  %7396 = load i64, i64* %PC.i800
  %7397 = add i64 %7396, 4
  store i64 %7397, i64* %PC.i800
  %7398 = inttoptr i64 %7393 to i32*
  store i32 %7394, i32* %7398
  store %struct.Memory* %loadMem_4895bb, %struct.Memory** %MEMORY
  %loadMem_4895bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7400 = getelementptr inbounds %struct.GPR, %struct.GPR* %7399, i32 0, i32 33
  %7401 = getelementptr inbounds %struct.Reg, %struct.Reg* %7400, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %7401 to i64*
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7403 = getelementptr inbounds %struct.GPR, %struct.GPR* %7402, i32 0, i32 9
  %7404 = getelementptr inbounds %struct.Reg, %struct.Reg* %7403, i32 0, i32 0
  %RSI.i798 = bitcast %union.anon* %7404 to i64*
  %7405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7406 = getelementptr inbounds %struct.GPR, %struct.GPR* %7405, i32 0, i32 15
  %7407 = getelementptr inbounds %struct.Reg, %struct.Reg* %7406, i32 0, i32 0
  %RBP.i799 = bitcast %union.anon* %7407 to i64*
  %7408 = load i64, i64* %RBP.i799
  %7409 = sub i64 %7408, 36
  %7410 = load i64, i64* %PC.i797
  %7411 = add i64 %7410, 4
  store i64 %7411, i64* %PC.i797
  %7412 = inttoptr i64 %7409 to i32*
  %7413 = load i32, i32* %7412
  %7414 = sext i32 %7413 to i64
  store i64 %7414, i64* %RSI.i798, align 8
  store %struct.Memory* %loadMem_4895bf, %struct.Memory** %MEMORY
  %loadMem_4895c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7416 = getelementptr inbounds %struct.GPR, %struct.GPR* %7415, i32 0, i32 33
  %7417 = getelementptr inbounds %struct.Reg, %struct.Reg* %7416, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %7417 to i64*
  %7418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7419 = getelementptr inbounds %struct.GPR, %struct.GPR* %7418, i32 0, i32 9
  %7420 = getelementptr inbounds %struct.Reg, %struct.Reg* %7419, i32 0, i32 0
  %RSI.i796 = bitcast %union.anon* %7420 to i64*
  %7421 = load i64, i64* %RSI.i796
  %7422 = load i64, i64* %PC.i795
  %7423 = add i64 %7422, 4
  store i64 %7423, i64* %PC.i795
  %7424 = shl i64 %7421, 5
  %7425 = icmp slt i64 %7424, 0
  %7426 = shl i64 %7424, 1
  store i64 %7426, i64* %RSI.i796, align 8
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7428 = zext i1 %7425 to i8
  store i8 %7428, i8* %7427, align 1
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7430 = trunc i64 %7426 to i32
  %7431 = and i32 %7430, 254
  %7432 = call i32 @llvm.ctpop.i32(i32 %7431)
  %7433 = trunc i32 %7432 to i8
  %7434 = and i8 %7433, 1
  %7435 = xor i8 %7434, 1
  store i8 %7435, i8* %7429, align 1
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7436, align 1
  %7437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7438 = icmp eq i64 %7426, 0
  %7439 = zext i1 %7438 to i8
  store i8 %7439, i8* %7437, align 1
  %7440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7441 = lshr i64 %7426, 63
  %7442 = trunc i64 %7441 to i8
  store i8 %7442, i8* %7440, align 1
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7443, align 1
  store %struct.Memory* %loadMem_4895c3, %struct.Memory** %MEMORY
  %loadMem_4895c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7445 = getelementptr inbounds %struct.GPR, %struct.GPR* %7444, i32 0, i32 33
  %7446 = getelementptr inbounds %struct.Reg, %struct.Reg* %7445, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %7446 to i64*
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7448 = getelementptr inbounds %struct.GPR, %struct.GPR* %7447, i32 0, i32 7
  %7449 = getelementptr inbounds %struct.Reg, %struct.Reg* %7448, i32 0, i32 0
  %RDX.i793 = bitcast %union.anon* %7449 to i64*
  %7450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7451 = getelementptr inbounds %struct.GPR, %struct.GPR* %7450, i32 0, i32 9
  %7452 = getelementptr inbounds %struct.Reg, %struct.Reg* %7451, i32 0, i32 0
  %RSI.i794 = bitcast %union.anon* %7452 to i64*
  %7453 = load i64, i64* %RDX.i793
  %7454 = load i64, i64* %RSI.i794
  %7455 = load i64, i64* %PC.i792
  %7456 = add i64 %7455, 3
  store i64 %7456, i64* %PC.i792
  %7457 = add i64 %7454, %7453
  store i64 %7457, i64* %RDX.i793, align 8
  %7458 = icmp ult i64 %7457, %7453
  %7459 = icmp ult i64 %7457, %7454
  %7460 = or i1 %7458, %7459
  %7461 = zext i1 %7460 to i8
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7461, i8* %7462, align 1
  %7463 = trunc i64 %7457 to i32
  %7464 = and i32 %7463, 255
  %7465 = call i32 @llvm.ctpop.i32(i32 %7464)
  %7466 = trunc i32 %7465 to i8
  %7467 = and i8 %7466, 1
  %7468 = xor i8 %7467, 1
  %7469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7468, i8* %7469, align 1
  %7470 = xor i64 %7454, %7453
  %7471 = xor i64 %7470, %7457
  %7472 = lshr i64 %7471, 4
  %7473 = trunc i64 %7472 to i8
  %7474 = and i8 %7473, 1
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7474, i8* %7475, align 1
  %7476 = icmp eq i64 %7457, 0
  %7477 = zext i1 %7476 to i8
  %7478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7477, i8* %7478, align 1
  %7479 = lshr i64 %7457, 63
  %7480 = trunc i64 %7479 to i8
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7480, i8* %7481, align 1
  %7482 = lshr i64 %7453, 63
  %7483 = lshr i64 %7454, 63
  %7484 = xor i64 %7479, %7482
  %7485 = xor i64 %7479, %7483
  %7486 = add i64 %7484, %7485
  %7487 = icmp eq i64 %7486, 2
  %7488 = zext i1 %7487 to i8
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7488, i8* %7489, align 1
  store %struct.Memory* %loadMem_4895c7, %struct.Memory** %MEMORY
  %loadMem_4895ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7491 = getelementptr inbounds %struct.GPR, %struct.GPR* %7490, i32 0, i32 33
  %7492 = getelementptr inbounds %struct.Reg, %struct.Reg* %7491, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %7492 to i64*
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7494 = getelementptr inbounds %struct.GPR, %struct.GPR* %7493, i32 0, i32 9
  %7495 = getelementptr inbounds %struct.Reg, %struct.Reg* %7494, i32 0, i32 0
  %RSI.i790 = bitcast %union.anon* %7495 to i64*
  %7496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7497 = getelementptr inbounds %struct.GPR, %struct.GPR* %7496, i32 0, i32 15
  %7498 = getelementptr inbounds %struct.Reg, %struct.Reg* %7497, i32 0, i32 0
  %RBP.i791 = bitcast %union.anon* %7498 to i64*
  %7499 = load i64, i64* %RBP.i791
  %7500 = sub i64 %7499, 40
  %7501 = load i64, i64* %PC.i789
  %7502 = add i64 %7501, 4
  store i64 %7502, i64* %PC.i789
  %7503 = inttoptr i64 %7500 to i32*
  %7504 = load i32, i32* %7503
  %7505 = sext i32 %7504 to i64
  store i64 %7505, i64* %RSI.i790, align 8
  store %struct.Memory* %loadMem_4895ca, %struct.Memory** %MEMORY
  %loadMem_4895ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7507 = getelementptr inbounds %struct.GPR, %struct.GPR* %7506, i32 0, i32 33
  %7508 = getelementptr inbounds %struct.Reg, %struct.Reg* %7507, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %7508 to i64*
  %7509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7510 = getelementptr inbounds %struct.GPR, %struct.GPR* %7509, i32 0, i32 17
  %7511 = getelementptr inbounds %struct.Reg, %struct.Reg* %7510, i32 0, i32 0
  %R8D.i786 = bitcast %union.anon* %7511 to i32*
  %7512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7513 = getelementptr inbounds %struct.GPR, %struct.GPR* %7512, i32 0, i32 7
  %7514 = getelementptr inbounds %struct.Reg, %struct.Reg* %7513, i32 0, i32 0
  %RDX.i787 = bitcast %union.anon* %7514 to i64*
  %7515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7516 = getelementptr inbounds %struct.GPR, %struct.GPR* %7515, i32 0, i32 9
  %7517 = getelementptr inbounds %struct.Reg, %struct.Reg* %7516, i32 0, i32 0
  %RSI.i788 = bitcast %union.anon* %7517 to i64*
  %7518 = bitcast i32* %R8D.i786 to i64*
  %7519 = load i64, i64* %RDX.i787
  %7520 = load i64, i64* %RSI.i788
  %7521 = mul i64 %7520, 4
  %7522 = add i64 %7521, %7519
  %7523 = load i64, i64* %PC.i785
  %7524 = add i64 %7523, 4
  store i64 %7524, i64* %PC.i785
  %7525 = inttoptr i64 %7522 to i32*
  %7526 = load i32, i32* %7525
  %7527 = zext i32 %7526 to i64
  store i64 %7527, i64* %7518, align 8
  store %struct.Memory* %loadMem_4895ce, %struct.Memory** %MEMORY
  %loadMem_4895d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7529 = getelementptr inbounds %struct.GPR, %struct.GPR* %7528, i32 0, i32 33
  %7530 = getelementptr inbounds %struct.Reg, %struct.Reg* %7529, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %7530 to i64*
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7532 = getelementptr inbounds %struct.GPR, %struct.GPR* %7531, i32 0, i32 17
  %7533 = getelementptr inbounds %struct.Reg, %struct.Reg* %7532, i32 0, i32 0
  %R8D.i783 = bitcast %union.anon* %7533 to i32*
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7535 = getelementptr inbounds %struct.GPR, %struct.GPR* %7534, i32 0, i32 15
  %7536 = getelementptr inbounds %struct.Reg, %struct.Reg* %7535, i32 0, i32 0
  %RBP.i784 = bitcast %union.anon* %7536 to i64*
  %7537 = bitcast i32* %R8D.i783 to i64*
  %7538 = load i32, i32* %R8D.i783
  %7539 = zext i32 %7538 to i64
  %7540 = load i64, i64* %RBP.i784
  %7541 = sub i64 %7540, 44
  %7542 = load i64, i64* %PC.i782
  %7543 = add i64 %7542, 4
  store i64 %7543, i64* %PC.i782
  %7544 = inttoptr i64 %7541 to i32*
  %7545 = load i32, i32* %7544
  %7546 = add i32 %7545, %7538
  %7547 = zext i32 %7546 to i64
  store i64 %7547, i64* %7537, align 8
  %7548 = icmp ult i32 %7546, %7538
  %7549 = icmp ult i32 %7546, %7545
  %7550 = or i1 %7548, %7549
  %7551 = zext i1 %7550 to i8
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7551, i8* %7552, align 1
  %7553 = and i32 %7546, 255
  %7554 = call i32 @llvm.ctpop.i32(i32 %7553)
  %7555 = trunc i32 %7554 to i8
  %7556 = and i8 %7555, 1
  %7557 = xor i8 %7556, 1
  %7558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7557, i8* %7558, align 1
  %7559 = xor i32 %7545, %7538
  %7560 = xor i32 %7559, %7546
  %7561 = lshr i32 %7560, 4
  %7562 = trunc i32 %7561 to i8
  %7563 = and i8 %7562, 1
  %7564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7563, i8* %7564, align 1
  %7565 = icmp eq i32 %7546, 0
  %7566 = zext i1 %7565 to i8
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7566, i8* %7567, align 1
  %7568 = lshr i32 %7546, 31
  %7569 = trunc i32 %7568 to i8
  %7570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7569, i8* %7570, align 1
  %7571 = lshr i32 %7538, 31
  %7572 = lshr i32 %7545, 31
  %7573 = xor i32 %7568, %7571
  %7574 = xor i32 %7568, %7572
  %7575 = add i32 %7573, %7574
  %7576 = icmp eq i32 %7575, 2
  %7577 = zext i1 %7576 to i8
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7577, i8* %7578, align 1
  store %struct.Memory* %loadMem_4895d2, %struct.Memory** %MEMORY
  %loadMem_4895d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7580 = getelementptr inbounds %struct.GPR, %struct.GPR* %7579, i32 0, i32 33
  %7581 = getelementptr inbounds %struct.Reg, %struct.Reg* %7580, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %7581 to i64*
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7583 = getelementptr inbounds %struct.GPR, %struct.GPR* %7582, i32 0, i32 17
  %7584 = getelementptr inbounds %struct.Reg, %struct.Reg* %7583, i32 0, i32 0
  %R8D.i780 = bitcast %union.anon* %7584 to i32*
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7586 = getelementptr inbounds %struct.GPR, %struct.GPR* %7585, i32 0, i32 15
  %7587 = getelementptr inbounds %struct.Reg, %struct.Reg* %7586, i32 0, i32 0
  %RBP.i781 = bitcast %union.anon* %7587 to i64*
  %7588 = load i64, i64* %RBP.i781
  %7589 = sub i64 %7588, 24
  %7590 = load i32, i32* %R8D.i780
  %7591 = zext i32 %7590 to i64
  %7592 = load i64, i64* %PC.i779
  %7593 = add i64 %7592, 4
  store i64 %7593, i64* %PC.i779
  %7594 = inttoptr i64 %7589 to i32*
  store i32 %7590, i32* %7594
  store %struct.Memory* %loadMem_4895d6, %struct.Memory** %MEMORY
  %loadMem_4895da = load %struct.Memory*, %struct.Memory** %MEMORY
  %7595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7596 = getelementptr inbounds %struct.GPR, %struct.GPR* %7595, i32 0, i32 33
  %7597 = getelementptr inbounds %struct.Reg, %struct.Reg* %7596, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %7597 to i64*
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 17
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %R8D.i777 = bitcast %union.anon* %7600 to i32*
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 15
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %RBP.i778 = bitcast %union.anon* %7603 to i64*
  %7604 = bitcast i32* %R8D.i777 to i64*
  %7605 = load i64, i64* %RBP.i778
  %7606 = sub i64 %7605, 44
  %7607 = load i64, i64* %PC.i776
  %7608 = add i64 %7607, 4
  store i64 %7608, i64* %PC.i776
  %7609 = inttoptr i64 %7606 to i32*
  %7610 = load i32, i32* %7609
  %7611 = zext i32 %7610 to i64
  store i64 %7611, i64* %7604, align 8
  store %struct.Memory* %loadMem_4895da, %struct.Memory** %MEMORY
  %loadMem_4895de = load %struct.Memory*, %struct.Memory** %MEMORY
  %7612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7613 = getelementptr inbounds %struct.GPR, %struct.GPR* %7612, i32 0, i32 33
  %7614 = getelementptr inbounds %struct.Reg, %struct.Reg* %7613, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %7614 to i64*
  %7615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7616 = getelementptr inbounds %struct.GPR, %struct.GPR* %7615, i32 0, i32 7
  %7617 = getelementptr inbounds %struct.Reg, %struct.Reg* %7616, i32 0, i32 0
  %RDX.i774 = bitcast %union.anon* %7617 to i64*
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7619 = getelementptr inbounds %struct.GPR, %struct.GPR* %7618, i32 0, i32 15
  %7620 = getelementptr inbounds %struct.Reg, %struct.Reg* %7619, i32 0, i32 0
  %RBP.i775 = bitcast %union.anon* %7620 to i64*
  %7621 = load i64, i64* %RBP.i775
  %7622 = sub i64 %7621, 36
  %7623 = load i64, i64* %PC.i773
  %7624 = add i64 %7623, 4
  store i64 %7624, i64* %PC.i773
  %7625 = inttoptr i64 %7622 to i32*
  %7626 = load i32, i32* %7625
  %7627 = sext i32 %7626 to i64
  store i64 %7627, i64* %RDX.i774, align 8
  store %struct.Memory* %loadMem_4895de, %struct.Memory** %MEMORY
  %loadMem_4895e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7629 = getelementptr inbounds %struct.GPR, %struct.GPR* %7628, i32 0, i32 33
  %7630 = getelementptr inbounds %struct.Reg, %struct.Reg* %7629, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %7630 to i64*
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7632 = getelementptr inbounds %struct.GPR, %struct.GPR* %7631, i32 0, i32 7
  %7633 = getelementptr inbounds %struct.Reg, %struct.Reg* %7632, i32 0, i32 0
  %RDX.i772 = bitcast %union.anon* %7633 to i64*
  %7634 = load i64, i64* %RDX.i772
  %7635 = load i64, i64* %PC.i771
  %7636 = add i64 %7635, 4
  store i64 %7636, i64* %PC.i771
  %7637 = shl i64 %7634, 5
  %7638 = icmp slt i64 %7637, 0
  %7639 = shl i64 %7637, 1
  store i64 %7639, i64* %RDX.i772, align 8
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7641 = zext i1 %7638 to i8
  store i8 %7641, i8* %7640, align 1
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7643 = trunc i64 %7639 to i32
  %7644 = and i32 %7643, 254
  %7645 = call i32 @llvm.ctpop.i32(i32 %7644)
  %7646 = trunc i32 %7645 to i8
  %7647 = and i8 %7646, 1
  %7648 = xor i8 %7647, 1
  store i8 %7648, i8* %7642, align 1
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7649, align 1
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7651 = icmp eq i64 %7639, 0
  %7652 = zext i1 %7651 to i8
  store i8 %7652, i8* %7650, align 1
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7654 = lshr i64 %7639, 63
  %7655 = trunc i64 %7654 to i8
  store i8 %7655, i8* %7653, align 1
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7656, align 1
  store %struct.Memory* %loadMem_4895e2, %struct.Memory** %MEMORY
  %loadMem_4895e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7658 = getelementptr inbounds %struct.GPR, %struct.GPR* %7657, i32 0, i32 33
  %7659 = getelementptr inbounds %struct.Reg, %struct.Reg* %7658, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %7659 to i64*
  %7660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7661 = getelementptr inbounds %struct.GPR, %struct.GPR* %7660, i32 0, i32 5
  %7662 = getelementptr inbounds %struct.Reg, %struct.Reg* %7661, i32 0, i32 0
  %RCX.i769 = bitcast %union.anon* %7662 to i64*
  %7663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7664 = getelementptr inbounds %struct.GPR, %struct.GPR* %7663, i32 0, i32 9
  %7665 = getelementptr inbounds %struct.Reg, %struct.Reg* %7664, i32 0, i32 0
  %RSI.i770 = bitcast %union.anon* %7665 to i64*
  %7666 = load i64, i64* %RCX.i769
  %7667 = load i64, i64* %PC.i768
  %7668 = add i64 %7667, 3
  store i64 %7668, i64* %PC.i768
  store i64 %7666, i64* %RSI.i770, align 8
  store %struct.Memory* %loadMem_4895e6, %struct.Memory** %MEMORY
  %loadMem_4895e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7670 = getelementptr inbounds %struct.GPR, %struct.GPR* %7669, i32 0, i32 33
  %7671 = getelementptr inbounds %struct.Reg, %struct.Reg* %7670, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %7671 to i64*
  %7672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7673 = getelementptr inbounds %struct.GPR, %struct.GPR* %7672, i32 0, i32 7
  %7674 = getelementptr inbounds %struct.Reg, %struct.Reg* %7673, i32 0, i32 0
  %RDX.i766 = bitcast %union.anon* %7674 to i64*
  %7675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7676 = getelementptr inbounds %struct.GPR, %struct.GPR* %7675, i32 0, i32 9
  %7677 = getelementptr inbounds %struct.Reg, %struct.Reg* %7676, i32 0, i32 0
  %RSI.i767 = bitcast %union.anon* %7677 to i64*
  %7678 = load i64, i64* %RSI.i767
  %7679 = load i64, i64* %RDX.i766
  %7680 = load i64, i64* %PC.i765
  %7681 = add i64 %7680, 3
  store i64 %7681, i64* %PC.i765
  %7682 = add i64 %7679, %7678
  store i64 %7682, i64* %RSI.i767, align 8
  %7683 = icmp ult i64 %7682, %7678
  %7684 = icmp ult i64 %7682, %7679
  %7685 = or i1 %7683, %7684
  %7686 = zext i1 %7685 to i8
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7686, i8* %7687, align 1
  %7688 = trunc i64 %7682 to i32
  %7689 = and i32 %7688, 255
  %7690 = call i32 @llvm.ctpop.i32(i32 %7689)
  %7691 = trunc i32 %7690 to i8
  %7692 = and i8 %7691, 1
  %7693 = xor i8 %7692, 1
  %7694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7693, i8* %7694, align 1
  %7695 = xor i64 %7679, %7678
  %7696 = xor i64 %7695, %7682
  %7697 = lshr i64 %7696, 4
  %7698 = trunc i64 %7697 to i8
  %7699 = and i8 %7698, 1
  %7700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7699, i8* %7700, align 1
  %7701 = icmp eq i64 %7682, 0
  %7702 = zext i1 %7701 to i8
  %7703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7702, i8* %7703, align 1
  %7704 = lshr i64 %7682, 63
  %7705 = trunc i64 %7704 to i8
  %7706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7705, i8* %7706, align 1
  %7707 = lshr i64 %7678, 63
  %7708 = lshr i64 %7679, 63
  %7709 = xor i64 %7704, %7707
  %7710 = xor i64 %7704, %7708
  %7711 = add i64 %7709, %7710
  %7712 = icmp eq i64 %7711, 2
  %7713 = zext i1 %7712 to i8
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7713, i8* %7714, align 1
  store %struct.Memory* %loadMem_4895e9, %struct.Memory** %MEMORY
  %loadMem_4895ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %7715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7716 = getelementptr inbounds %struct.GPR, %struct.GPR* %7715, i32 0, i32 33
  %7717 = getelementptr inbounds %struct.Reg, %struct.Reg* %7716, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %7717 to i64*
  %7718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7719 = getelementptr inbounds %struct.GPR, %struct.GPR* %7718, i32 0, i32 7
  %7720 = getelementptr inbounds %struct.Reg, %struct.Reg* %7719, i32 0, i32 0
  %RDX.i763 = bitcast %union.anon* %7720 to i64*
  %7721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7722 = getelementptr inbounds %struct.GPR, %struct.GPR* %7721, i32 0, i32 15
  %7723 = getelementptr inbounds %struct.Reg, %struct.Reg* %7722, i32 0, i32 0
  %RBP.i764 = bitcast %union.anon* %7723 to i64*
  %7724 = load i64, i64* %RBP.i764
  %7725 = sub i64 %7724, 40
  %7726 = load i64, i64* %PC.i762
  %7727 = add i64 %7726, 4
  store i64 %7727, i64* %PC.i762
  %7728 = inttoptr i64 %7725 to i32*
  %7729 = load i32, i32* %7728
  %7730 = sext i32 %7729 to i64
  store i64 %7730, i64* %RDX.i763, align 8
  store %struct.Memory* %loadMem_4895ec, %struct.Memory** %MEMORY
  %loadMem_4895f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7732 = getelementptr inbounds %struct.GPR, %struct.GPR* %7731, i32 0, i32 33
  %7733 = getelementptr inbounds %struct.Reg, %struct.Reg* %7732, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %7733 to i64*
  %7734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7735 = getelementptr inbounds %struct.GPR, %struct.GPR* %7734, i32 0, i32 19
  %7736 = getelementptr inbounds %struct.Reg, %struct.Reg* %7735, i32 0, i32 0
  %R9D.i759 = bitcast %union.anon* %7736 to i32*
  %7737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7738 = getelementptr inbounds %struct.GPR, %struct.GPR* %7737, i32 0, i32 7
  %7739 = getelementptr inbounds %struct.Reg, %struct.Reg* %7738, i32 0, i32 0
  %RDX.i760 = bitcast %union.anon* %7739 to i64*
  %7740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7741 = getelementptr inbounds %struct.GPR, %struct.GPR* %7740, i32 0, i32 9
  %7742 = getelementptr inbounds %struct.Reg, %struct.Reg* %7741, i32 0, i32 0
  %RSI.i761 = bitcast %union.anon* %7742 to i64*
  %7743 = bitcast i32* %R9D.i759 to i64*
  %7744 = load i64, i64* %RSI.i761
  %7745 = load i64, i64* %RDX.i760
  %7746 = mul i64 %7745, 4
  %7747 = add i64 %7746, %7744
  %7748 = load i64, i64* %PC.i758
  %7749 = add i64 %7748, 4
  store i64 %7749, i64* %PC.i758
  %7750 = inttoptr i64 %7747 to i32*
  %7751 = load i32, i32* %7750
  %7752 = zext i32 %7751 to i64
  store i64 %7752, i64* %7743, align 8
  store %struct.Memory* %loadMem_4895f0, %struct.Memory** %MEMORY
  %loadMem_4895f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7754 = getelementptr inbounds %struct.GPR, %struct.GPR* %7753, i32 0, i32 33
  %7755 = getelementptr inbounds %struct.Reg, %struct.Reg* %7754, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %7755 to i64*
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7757 = getelementptr inbounds %struct.GPR, %struct.GPR* %7756, i32 0, i32 19
  %7758 = getelementptr inbounds %struct.Reg, %struct.Reg* %7757, i32 0, i32 0
  %R9D.i757 = bitcast %union.anon* %7758 to i32*
  %7759 = bitcast i32* %R9D.i757 to i64*
  %7760 = load i32, i32* %R9D.i757
  %7761 = zext i32 %7760 to i64
  %7762 = load i64, i64* %PC.i756
  %7763 = add i64 %7762, 3
  store i64 %7763, i64* %PC.i756
  %7764 = shl i64 %7761, 32
  %7765 = ashr i64 %7764, 33
  %7766 = trunc i64 %7761 to i8
  %7767 = and i8 %7766, 1
  %7768 = trunc i64 %7765 to i32
  %7769 = and i64 %7765, 4294967295
  store i64 %7769, i64* %7759, align 8
  %7770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7767, i8* %7770, align 1
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7772 = and i32 %7768, 255
  %7773 = call i32 @llvm.ctpop.i32(i32 %7772)
  %7774 = trunc i32 %7773 to i8
  %7775 = and i8 %7774, 1
  %7776 = xor i8 %7775, 1
  store i8 %7776, i8* %7771, align 1
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7777, align 1
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7779 = icmp eq i32 %7768, 0
  %7780 = zext i1 %7779 to i8
  store i8 %7780, i8* %7778, align 1
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7782 = lshr i32 %7768, 31
  %7783 = trunc i32 %7782 to i8
  store i8 %7783, i8* %7781, align 1
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7784, align 1
  store %struct.Memory* %loadMem_4895f4, %struct.Memory** %MEMORY
  %loadMem_4895f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7786 = getelementptr inbounds %struct.GPR, %struct.GPR* %7785, i32 0, i32 33
  %7787 = getelementptr inbounds %struct.Reg, %struct.Reg* %7786, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %7787 to i64*
  %7788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7789 = getelementptr inbounds %struct.GPR, %struct.GPR* %7788, i32 0, i32 17
  %7790 = getelementptr inbounds %struct.Reg, %struct.Reg* %7789, i32 0, i32 0
  %R8D.i754 = bitcast %union.anon* %7790 to i32*
  %7791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7792 = getelementptr inbounds %struct.GPR, %struct.GPR* %7791, i32 0, i32 19
  %7793 = getelementptr inbounds %struct.Reg, %struct.Reg* %7792, i32 0, i32 0
  %R9D.i755 = bitcast %union.anon* %7793 to i32*
  %7794 = bitcast i32* %R8D.i754 to i64*
  %7795 = load i32, i32* %R8D.i754
  %7796 = zext i32 %7795 to i64
  %7797 = load i32, i32* %R9D.i755
  %7798 = zext i32 %7797 to i64
  %7799 = load i64, i64* %PC.i753
  %7800 = add i64 %7799, 3
  store i64 %7800, i64* %PC.i753
  %7801 = sub i32 %7795, %7797
  %7802 = zext i32 %7801 to i64
  store i64 %7802, i64* %7794, align 8
  %7803 = icmp ult i32 %7795, %7797
  %7804 = zext i1 %7803 to i8
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7804, i8* %7805, align 1
  %7806 = and i32 %7801, 255
  %7807 = call i32 @llvm.ctpop.i32(i32 %7806)
  %7808 = trunc i32 %7807 to i8
  %7809 = and i8 %7808, 1
  %7810 = xor i8 %7809, 1
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7810, i8* %7811, align 1
  %7812 = xor i64 %7798, %7796
  %7813 = trunc i64 %7812 to i32
  %7814 = xor i32 %7813, %7801
  %7815 = lshr i32 %7814, 4
  %7816 = trunc i32 %7815 to i8
  %7817 = and i8 %7816, 1
  %7818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7817, i8* %7818, align 1
  %7819 = icmp eq i32 %7801, 0
  %7820 = zext i1 %7819 to i8
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7820, i8* %7821, align 1
  %7822 = lshr i32 %7801, 31
  %7823 = trunc i32 %7822 to i8
  %7824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7823, i8* %7824, align 1
  %7825 = lshr i32 %7795, 31
  %7826 = lshr i32 %7797, 31
  %7827 = xor i32 %7826, %7825
  %7828 = xor i32 %7822, %7825
  %7829 = add i32 %7828, %7827
  %7830 = icmp eq i32 %7829, 2
  %7831 = zext i1 %7830 to i8
  %7832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7831, i8* %7832, align 1
  store %struct.Memory* %loadMem_4895f8, %struct.Memory** %MEMORY
  %loadMem_4895fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7834 = getelementptr inbounds %struct.GPR, %struct.GPR* %7833, i32 0, i32 33
  %7835 = getelementptr inbounds %struct.Reg, %struct.Reg* %7834, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %7835 to i64*
  %7836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7837 = getelementptr inbounds %struct.GPR, %struct.GPR* %7836, i32 0, i32 17
  %7838 = getelementptr inbounds %struct.Reg, %struct.Reg* %7837, i32 0, i32 0
  %R8D.i751 = bitcast %union.anon* %7838 to i32*
  %7839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7840 = getelementptr inbounds %struct.GPR, %struct.GPR* %7839, i32 0, i32 15
  %7841 = getelementptr inbounds %struct.Reg, %struct.Reg* %7840, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %7841 to i64*
  %7842 = load i64, i64* %RBP.i752
  %7843 = sub i64 %7842, 28
  %7844 = load i32, i32* %R8D.i751
  %7845 = zext i32 %7844 to i64
  %7846 = load i64, i64* %PC.i750
  %7847 = add i64 %7846, 4
  store i64 %7847, i64* %PC.i750
  %7848 = inttoptr i64 %7843 to i32*
  store i32 %7844, i32* %7848
  store %struct.Memory* %loadMem_4895fb, %struct.Memory** %MEMORY
  %loadMem_4895ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7850 = getelementptr inbounds %struct.GPR, %struct.GPR* %7849, i32 0, i32 33
  %7851 = getelementptr inbounds %struct.Reg, %struct.Reg* %7850, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %7851 to i64*
  %7852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7853 = getelementptr inbounds %struct.GPR, %struct.GPR* %7852, i32 0, i32 17
  %7854 = getelementptr inbounds %struct.Reg, %struct.Reg* %7853, i32 0, i32 0
  %R8D.i748 = bitcast %union.anon* %7854 to i32*
  %7855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7856 = getelementptr inbounds %struct.GPR, %struct.GPR* %7855, i32 0, i32 15
  %7857 = getelementptr inbounds %struct.Reg, %struct.Reg* %7856, i32 0, i32 0
  %RBP.i749 = bitcast %union.anon* %7857 to i64*
  %7858 = bitcast i32* %R8D.i748 to i64*
  %7859 = load i64, i64* %RBP.i749
  %7860 = sub i64 %7859, 28
  %7861 = load i64, i64* %PC.i747
  %7862 = add i64 %7861, 4
  store i64 %7862, i64* %PC.i747
  %7863 = inttoptr i64 %7860 to i32*
  %7864 = load i32, i32* %7863
  %7865 = zext i32 %7864 to i64
  store i64 %7865, i64* %7858, align 8
  store %struct.Memory* %loadMem_4895ff, %struct.Memory** %MEMORY
  %loadMem_489603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7867 = getelementptr inbounds %struct.GPR, %struct.GPR* %7866, i32 0, i32 33
  %7868 = getelementptr inbounds %struct.Reg, %struct.Reg* %7867, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %7868 to i64*
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7870 = getelementptr inbounds %struct.GPR, %struct.GPR* %7869, i32 0, i32 7
  %7871 = getelementptr inbounds %struct.Reg, %struct.Reg* %7870, i32 0, i32 0
  %RDX.i745 = bitcast %union.anon* %7871 to i64*
  %7872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7873 = getelementptr inbounds %struct.GPR, %struct.GPR* %7872, i32 0, i32 15
  %7874 = getelementptr inbounds %struct.Reg, %struct.Reg* %7873, i32 0, i32 0
  %RBP.i746 = bitcast %union.anon* %7874 to i64*
  %7875 = load i64, i64* %RBP.i746
  %7876 = sub i64 %7875, 36
  %7877 = load i64, i64* %PC.i744
  %7878 = add i64 %7877, 4
  store i64 %7878, i64* %PC.i744
  %7879 = inttoptr i64 %7876 to i32*
  %7880 = load i32, i32* %7879
  %7881 = sext i32 %7880 to i64
  store i64 %7881, i64* %RDX.i745, align 8
  store %struct.Memory* %loadMem_489603, %struct.Memory** %MEMORY
  %loadMem_489607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7883 = getelementptr inbounds %struct.GPR, %struct.GPR* %7882, i32 0, i32 33
  %7884 = getelementptr inbounds %struct.Reg, %struct.Reg* %7883, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %7884 to i64*
  %7885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7886 = getelementptr inbounds %struct.GPR, %struct.GPR* %7885, i32 0, i32 7
  %7887 = getelementptr inbounds %struct.Reg, %struct.Reg* %7886, i32 0, i32 0
  %RDX.i743 = bitcast %union.anon* %7887 to i64*
  %7888 = load i64, i64* %RDX.i743
  %7889 = load i64, i64* %PC.i742
  %7890 = add i64 %7889, 4
  store i64 %7890, i64* %PC.i742
  %7891 = shl i64 %7888, 5
  %7892 = icmp slt i64 %7891, 0
  %7893 = shl i64 %7891, 1
  store i64 %7893, i64* %RDX.i743, align 8
  %7894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7895 = zext i1 %7892 to i8
  store i8 %7895, i8* %7894, align 1
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7897 = trunc i64 %7893 to i32
  %7898 = and i32 %7897, 254
  %7899 = call i32 @llvm.ctpop.i32(i32 %7898)
  %7900 = trunc i32 %7899 to i8
  %7901 = and i8 %7900, 1
  %7902 = xor i8 %7901, 1
  store i8 %7902, i8* %7896, align 1
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7903, align 1
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7905 = icmp eq i64 %7893, 0
  %7906 = zext i1 %7905 to i8
  store i8 %7906, i8* %7904, align 1
  %7907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7908 = lshr i64 %7893, 63
  %7909 = trunc i64 %7908 to i8
  store i8 %7909, i8* %7907, align 1
  %7910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7910, align 1
  store %struct.Memory* %loadMem_489607, %struct.Memory** %MEMORY
  %loadMem_48960b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7912 = getelementptr inbounds %struct.GPR, %struct.GPR* %7911, i32 0, i32 33
  %7913 = getelementptr inbounds %struct.Reg, %struct.Reg* %7912, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %7913 to i64*
  %7914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7915 = getelementptr inbounds %struct.GPR, %struct.GPR* %7914, i32 0, i32 5
  %7916 = getelementptr inbounds %struct.Reg, %struct.Reg* %7915, i32 0, i32 0
  %RCX.i740 = bitcast %union.anon* %7916 to i64*
  %7917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7918 = getelementptr inbounds %struct.GPR, %struct.GPR* %7917, i32 0, i32 7
  %7919 = getelementptr inbounds %struct.Reg, %struct.Reg* %7918, i32 0, i32 0
  %RDX.i741 = bitcast %union.anon* %7919 to i64*
  %7920 = load i64, i64* %RCX.i740
  %7921 = load i64, i64* %RDX.i741
  %7922 = load i64, i64* %PC.i739
  %7923 = add i64 %7922, 3
  store i64 %7923, i64* %PC.i739
  %7924 = add i64 %7921, %7920
  store i64 %7924, i64* %RCX.i740, align 8
  %7925 = icmp ult i64 %7924, %7920
  %7926 = icmp ult i64 %7924, %7921
  %7927 = or i1 %7925, %7926
  %7928 = zext i1 %7927 to i8
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7928, i8* %7929, align 1
  %7930 = trunc i64 %7924 to i32
  %7931 = and i32 %7930, 255
  %7932 = call i32 @llvm.ctpop.i32(i32 %7931)
  %7933 = trunc i32 %7932 to i8
  %7934 = and i8 %7933, 1
  %7935 = xor i8 %7934, 1
  %7936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7935, i8* %7936, align 1
  %7937 = xor i64 %7921, %7920
  %7938 = xor i64 %7937, %7924
  %7939 = lshr i64 %7938, 4
  %7940 = trunc i64 %7939 to i8
  %7941 = and i8 %7940, 1
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7941, i8* %7942, align 1
  %7943 = icmp eq i64 %7924, 0
  %7944 = zext i1 %7943 to i8
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7944, i8* %7945, align 1
  %7946 = lshr i64 %7924, 63
  %7947 = trunc i64 %7946 to i8
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7947, i8* %7948, align 1
  %7949 = lshr i64 %7920, 63
  %7950 = lshr i64 %7921, 63
  %7951 = xor i64 %7946, %7949
  %7952 = xor i64 %7946, %7950
  %7953 = add i64 %7951, %7952
  %7954 = icmp eq i64 %7953, 2
  %7955 = zext i1 %7954 to i8
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7955, i8* %7956, align 1
  store %struct.Memory* %loadMem_48960b, %struct.Memory** %MEMORY
  %loadMem_48960e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7958 = getelementptr inbounds %struct.GPR, %struct.GPR* %7957, i32 0, i32 33
  %7959 = getelementptr inbounds %struct.Reg, %struct.Reg* %7958, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %7959 to i64*
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7961 = getelementptr inbounds %struct.GPR, %struct.GPR* %7960, i32 0, i32 7
  %7962 = getelementptr inbounds %struct.Reg, %struct.Reg* %7961, i32 0, i32 0
  %RDX.i737 = bitcast %union.anon* %7962 to i64*
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7964 = getelementptr inbounds %struct.GPR, %struct.GPR* %7963, i32 0, i32 15
  %7965 = getelementptr inbounds %struct.Reg, %struct.Reg* %7964, i32 0, i32 0
  %RBP.i738 = bitcast %union.anon* %7965 to i64*
  %7966 = load i64, i64* %RBP.i738
  %7967 = sub i64 %7966, 40
  %7968 = load i64, i64* %PC.i736
  %7969 = add i64 %7968, 4
  store i64 %7969, i64* %PC.i736
  %7970 = inttoptr i64 %7967 to i32*
  %7971 = load i32, i32* %7970
  %7972 = sext i32 %7971 to i64
  store i64 %7972, i64* %RDX.i737, align 8
  store %struct.Memory* %loadMem_48960e, %struct.Memory** %MEMORY
  %loadMem_489612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7974 = getelementptr inbounds %struct.GPR, %struct.GPR* %7973, i32 0, i32 33
  %7975 = getelementptr inbounds %struct.Reg, %struct.Reg* %7974, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %7975 to i64*
  %7976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7977 = getelementptr inbounds %struct.GPR, %struct.GPR* %7976, i32 0, i32 17
  %7978 = getelementptr inbounds %struct.Reg, %struct.Reg* %7977, i32 0, i32 0
  %R8D.i733 = bitcast %union.anon* %7978 to i32*
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7980 = getelementptr inbounds %struct.GPR, %struct.GPR* %7979, i32 0, i32 5
  %7981 = getelementptr inbounds %struct.Reg, %struct.Reg* %7980, i32 0, i32 0
  %RCX.i734 = bitcast %union.anon* %7981 to i64*
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7983 = getelementptr inbounds %struct.GPR, %struct.GPR* %7982, i32 0, i32 7
  %7984 = getelementptr inbounds %struct.Reg, %struct.Reg* %7983, i32 0, i32 0
  %RDX.i735 = bitcast %union.anon* %7984 to i64*
  %7985 = bitcast i32* %R8D.i733 to i64*
  %7986 = load i32, i32* %R8D.i733
  %7987 = zext i32 %7986 to i64
  %7988 = load i64, i64* %RCX.i734
  %7989 = load i64, i64* %RDX.i735
  %7990 = mul i64 %7989, 4
  %7991 = add i64 %7990, %7988
  %7992 = load i64, i64* %PC.i732
  %7993 = add i64 %7992, 4
  store i64 %7993, i64* %PC.i732
  %7994 = inttoptr i64 %7991 to i32*
  %7995 = load i32, i32* %7994
  %7996 = add i32 %7995, %7986
  %7997 = zext i32 %7996 to i64
  store i64 %7997, i64* %7985, align 8
  %7998 = icmp ult i32 %7996, %7986
  %7999 = icmp ult i32 %7996, %7995
  %8000 = or i1 %7998, %7999
  %8001 = zext i1 %8000 to i8
  %8002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8001, i8* %8002, align 1
  %8003 = and i32 %7996, 255
  %8004 = call i32 @llvm.ctpop.i32(i32 %8003)
  %8005 = trunc i32 %8004 to i8
  %8006 = and i8 %8005, 1
  %8007 = xor i8 %8006, 1
  %8008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8007, i8* %8008, align 1
  %8009 = xor i32 %7995, %7986
  %8010 = xor i32 %8009, %7996
  %8011 = lshr i32 %8010, 4
  %8012 = trunc i32 %8011 to i8
  %8013 = and i8 %8012, 1
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8013, i8* %8014, align 1
  %8015 = icmp eq i32 %7996, 0
  %8016 = zext i1 %8015 to i8
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8016, i8* %8017, align 1
  %8018 = lshr i32 %7996, 31
  %8019 = trunc i32 %8018 to i8
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8019, i8* %8020, align 1
  %8021 = lshr i32 %7986, 31
  %8022 = lshr i32 %7995, 31
  %8023 = xor i32 %8018, %8021
  %8024 = xor i32 %8018, %8022
  %8025 = add i32 %8023, %8024
  %8026 = icmp eq i32 %8025, 2
  %8027 = zext i1 %8026 to i8
  %8028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8027, i8* %8028, align 1
  store %struct.Memory* %loadMem_489612, %struct.Memory** %MEMORY
  %loadMem_489616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8030 = getelementptr inbounds %struct.GPR, %struct.GPR* %8029, i32 0, i32 33
  %8031 = getelementptr inbounds %struct.Reg, %struct.Reg* %8030, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %8031 to i64*
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8033 = getelementptr inbounds %struct.GPR, %struct.GPR* %8032, i32 0, i32 17
  %8034 = getelementptr inbounds %struct.Reg, %struct.Reg* %8033, i32 0, i32 0
  %R8D.i730 = bitcast %union.anon* %8034 to i32*
  %8035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8036 = getelementptr inbounds %struct.GPR, %struct.GPR* %8035, i32 0, i32 15
  %8037 = getelementptr inbounds %struct.Reg, %struct.Reg* %8036, i32 0, i32 0
  %RBP.i731 = bitcast %union.anon* %8037 to i64*
  %8038 = load i64, i64* %RBP.i731
  %8039 = sub i64 %8038, 20
  %8040 = load i32, i32* %R8D.i730
  %8041 = zext i32 %8040 to i64
  %8042 = load i64, i64* %PC.i729
  %8043 = add i64 %8042, 4
  store i64 %8043, i64* %PC.i729
  %8044 = inttoptr i64 %8039 to i32*
  store i32 %8040, i32* %8044
  store %struct.Memory* %loadMem_489616, %struct.Memory** %MEMORY
  %loadMem_48961a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8046 = getelementptr inbounds %struct.GPR, %struct.GPR* %8045, i32 0, i32 33
  %8047 = getelementptr inbounds %struct.Reg, %struct.Reg* %8046, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %8047 to i64*
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8049 = getelementptr inbounds %struct.GPR, %struct.GPR* %8048, i32 0, i32 5
  %8050 = getelementptr inbounds %struct.Reg, %struct.Reg* %8049, i32 0, i32 0
  %RCX.i728 = bitcast %union.anon* %8050 to i64*
  %8051 = load i64, i64* %PC.i727
  %8052 = add i64 %8051, 8
  store i64 %8052, i64* %PC.i727
  %8053 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8053, i64* %RCX.i728, align 8
  store %struct.Memory* %loadMem_48961a, %struct.Memory** %MEMORY
  %loadMem_489622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8055 = getelementptr inbounds %struct.GPR, %struct.GPR* %8054, i32 0, i32 33
  %8056 = getelementptr inbounds %struct.Reg, %struct.Reg* %8055, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %8056 to i64*
  %8057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8058 = getelementptr inbounds %struct.GPR, %struct.GPR* %8057, i32 0, i32 17
  %8059 = getelementptr inbounds %struct.Reg, %struct.Reg* %8058, i32 0, i32 0
  %R8D.i725 = bitcast %union.anon* %8059 to i32*
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8061 = getelementptr inbounds %struct.GPR, %struct.GPR* %8060, i32 0, i32 5
  %8062 = getelementptr inbounds %struct.Reg, %struct.Reg* %8061, i32 0, i32 0
  %RCX.i726 = bitcast %union.anon* %8062 to i64*
  %8063 = bitcast i32* %R8D.i725 to i64*
  %8064 = load i64, i64* %RCX.i726
  %8065 = add i64 %8064, 72688
  %8066 = load i64, i64* %PC.i724
  %8067 = add i64 %8066, 7
  store i64 %8067, i64* %PC.i724
  %8068 = inttoptr i64 %8065 to i32*
  %8069 = load i32, i32* %8068
  %8070 = zext i32 %8069 to i64
  store i64 %8070, i64* %8063, align 8
  store %struct.Memory* %loadMem_489622, %struct.Memory** %MEMORY
  %loadMem_489629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8072 = getelementptr inbounds %struct.GPR, %struct.GPR* %8071, i32 0, i32 33
  %8073 = getelementptr inbounds %struct.Reg, %struct.Reg* %8072, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %8073 to i64*
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8075 = getelementptr inbounds %struct.GPR, %struct.GPR* %8074, i32 0, i32 19
  %8076 = getelementptr inbounds %struct.Reg, %struct.Reg* %8075, i32 0, i32 0
  %R9D.i722 = bitcast %union.anon* %8076 to i32*
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8078 = getelementptr inbounds %struct.GPR, %struct.GPR* %8077, i32 0, i32 15
  %8079 = getelementptr inbounds %struct.Reg, %struct.Reg* %8078, i32 0, i32 0
  %RBP.i723 = bitcast %union.anon* %8079 to i64*
  %8080 = bitcast i32* %R9D.i722 to i64*
  %8081 = load i64, i64* %RBP.i723
  %8082 = sub i64 %8081, 28
  %8083 = load i64, i64* %PC.i721
  %8084 = add i64 %8083, 4
  store i64 %8084, i64* %PC.i721
  %8085 = inttoptr i64 %8082 to i32*
  %8086 = load i32, i32* %8085
  %8087 = zext i32 %8086 to i64
  store i64 %8087, i64* %8080, align 8
  store %struct.Memory* %loadMem_489629, %struct.Memory** %MEMORY
  %loadMem_48962d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8089 = getelementptr inbounds %struct.GPR, %struct.GPR* %8088, i32 0, i32 33
  %8090 = getelementptr inbounds %struct.Reg, %struct.Reg* %8089, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %8090 to i64*
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8092 = getelementptr inbounds %struct.GPR, %struct.GPR* %8091, i32 0, i32 5
  %8093 = getelementptr inbounds %struct.Reg, %struct.Reg* %8092, i32 0, i32 0
  %RCX.i720 = bitcast %union.anon* %8093 to i64*
  %8094 = load i64, i64* %PC.i719
  %8095 = add i64 %8094, 8
  store i64 %8095, i64* %PC.i719
  %8096 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8096, i64* %RCX.i720, align 8
  store %struct.Memory* %loadMem_48962d, %struct.Memory** %MEMORY
  %loadMem_489635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8098 = getelementptr inbounds %struct.GPR, %struct.GPR* %8097, i32 0, i32 33
  %8099 = getelementptr inbounds %struct.Reg, %struct.Reg* %8098, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %8099 to i64*
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8101 = getelementptr inbounds %struct.GPR, %struct.GPR* %8100, i32 0, i32 5
  %8102 = getelementptr inbounds %struct.Reg, %struct.Reg* %8101, i32 0, i32 0
  %RCX.i718 = bitcast %union.anon* %8102 to i64*
  %8103 = load i64, i64* %RCX.i718
  %8104 = load i64, i64* %PC.i717
  %8105 = add i64 %8104, 7
  store i64 %8105, i64* %PC.i717
  %8106 = add i64 8504, %8103
  store i64 %8106, i64* %RCX.i718, align 8
  %8107 = icmp ult i64 %8106, %8103
  %8108 = icmp ult i64 %8106, 8504
  %8109 = or i1 %8107, %8108
  %8110 = zext i1 %8109 to i8
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8110, i8* %8111, align 1
  %8112 = trunc i64 %8106 to i32
  %8113 = and i32 %8112, 255
  %8114 = call i32 @llvm.ctpop.i32(i32 %8113)
  %8115 = trunc i32 %8114 to i8
  %8116 = and i8 %8115, 1
  %8117 = xor i8 %8116, 1
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8117, i8* %8118, align 1
  %8119 = xor i64 8504, %8103
  %8120 = xor i64 %8119, %8106
  %8121 = lshr i64 %8120, 4
  %8122 = trunc i64 %8121 to i8
  %8123 = and i8 %8122, 1
  %8124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8123, i8* %8124, align 1
  %8125 = icmp eq i64 %8106, 0
  %8126 = zext i1 %8125 to i8
  %8127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8126, i8* %8127, align 1
  %8128 = lshr i64 %8106, 63
  %8129 = trunc i64 %8128 to i8
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8129, i8* %8130, align 1
  %8131 = lshr i64 %8103, 63
  %8132 = xor i64 %8128, %8131
  %8133 = add i64 %8132, %8128
  %8134 = icmp eq i64 %8133, 2
  %8135 = zext i1 %8134 to i8
  %8136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8135, i8* %8136, align 1
  store %struct.Memory* %loadMem_489635, %struct.Memory** %MEMORY
  %loadMem_48963c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8138 = getelementptr inbounds %struct.GPR, %struct.GPR* %8137, i32 0, i32 33
  %8139 = getelementptr inbounds %struct.Reg, %struct.Reg* %8138, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %8139 to i64*
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8141 = getelementptr inbounds %struct.GPR, %struct.GPR* %8140, i32 0, i32 7
  %8142 = getelementptr inbounds %struct.Reg, %struct.Reg* %8141, i32 0, i32 0
  %RDX.i715 = bitcast %union.anon* %8142 to i64*
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8144 = getelementptr inbounds %struct.GPR, %struct.GPR* %8143, i32 0, i32 15
  %8145 = getelementptr inbounds %struct.Reg, %struct.Reg* %8144, i32 0, i32 0
  %RBP.i716 = bitcast %union.anon* %8145 to i64*
  %8146 = load i64, i64* %RBP.i716
  %8147 = sub i64 %8146, 32
  %8148 = load i64, i64* %PC.i714
  %8149 = add i64 %8148, 4
  store i64 %8149, i64* %PC.i714
  %8150 = inttoptr i64 %8147 to i32*
  %8151 = load i32, i32* %8150
  %8152 = sext i32 %8151 to i64
  store i64 %8152, i64* %RDX.i715, align 8
  store %struct.Memory* %loadMem_48963c, %struct.Memory** %MEMORY
  %loadMem_489640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8154 = getelementptr inbounds %struct.GPR, %struct.GPR* %8153, i32 0, i32 33
  %8155 = getelementptr inbounds %struct.Reg, %struct.Reg* %8154, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %8155 to i64*
  %8156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8157 = getelementptr inbounds %struct.GPR, %struct.GPR* %8156, i32 0, i32 7
  %8158 = getelementptr inbounds %struct.Reg, %struct.Reg* %8157, i32 0, i32 0
  %RDX.i713 = bitcast %union.anon* %8158 to i64*
  %8159 = load i64, i64* %RDX.i713
  %8160 = load i64, i64* %PC.i712
  %8161 = add i64 %8160, 4
  store i64 %8161, i64* %PC.i712
  %8162 = shl i64 %8159, 8
  %8163 = icmp slt i64 %8162, 0
  %8164 = shl i64 %8162, 1
  store i64 %8164, i64* %RDX.i713, align 8
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8166 = zext i1 %8163 to i8
  store i8 %8166, i8* %8165, align 1
  %8167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8168 = trunc i64 %8164 to i32
  store i8 1, i8* %8167, align 1
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8169, align 1
  %8170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8171 = icmp eq i64 %8164, 0
  %8172 = zext i1 %8171 to i8
  store i8 %8172, i8* %8170, align 1
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8174 = lshr i64 %8164, 63
  %8175 = trunc i64 %8174 to i8
  store i8 %8175, i8* %8173, align 1
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8176, align 1
  store %struct.Memory* %loadMem_489640, %struct.Memory** %MEMORY
  %loadMem_489644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8178 = getelementptr inbounds %struct.GPR, %struct.GPR* %8177, i32 0, i32 33
  %8179 = getelementptr inbounds %struct.Reg, %struct.Reg* %8178, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %8179 to i64*
  %8180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8181 = getelementptr inbounds %struct.GPR, %struct.GPR* %8180, i32 0, i32 5
  %8182 = getelementptr inbounds %struct.Reg, %struct.Reg* %8181, i32 0, i32 0
  %RCX.i710 = bitcast %union.anon* %8182 to i64*
  %8183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8184 = getelementptr inbounds %struct.GPR, %struct.GPR* %8183, i32 0, i32 7
  %8185 = getelementptr inbounds %struct.Reg, %struct.Reg* %8184, i32 0, i32 0
  %RDX.i711 = bitcast %union.anon* %8185 to i64*
  %8186 = load i64, i64* %RCX.i710
  %8187 = load i64, i64* %RDX.i711
  %8188 = load i64, i64* %PC.i709
  %8189 = add i64 %8188, 3
  store i64 %8189, i64* %PC.i709
  %8190 = add i64 %8187, %8186
  store i64 %8190, i64* %RCX.i710, align 8
  %8191 = icmp ult i64 %8190, %8186
  %8192 = icmp ult i64 %8190, %8187
  %8193 = or i1 %8191, %8192
  %8194 = zext i1 %8193 to i8
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8194, i8* %8195, align 1
  %8196 = trunc i64 %8190 to i32
  %8197 = and i32 %8196, 255
  %8198 = call i32 @llvm.ctpop.i32(i32 %8197)
  %8199 = trunc i32 %8198 to i8
  %8200 = and i8 %8199, 1
  %8201 = xor i8 %8200, 1
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8201, i8* %8202, align 1
  %8203 = xor i64 %8187, %8186
  %8204 = xor i64 %8203, %8190
  %8205 = lshr i64 %8204, 4
  %8206 = trunc i64 %8205 to i8
  %8207 = and i8 %8206, 1
  %8208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8207, i8* %8208, align 1
  %8209 = icmp eq i64 %8190, 0
  %8210 = zext i1 %8209 to i8
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8210, i8* %8211, align 1
  %8212 = lshr i64 %8190, 63
  %8213 = trunc i64 %8212 to i8
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8213, i8* %8214, align 1
  %8215 = lshr i64 %8186, 63
  %8216 = lshr i64 %8187, 63
  %8217 = xor i64 %8212, %8215
  %8218 = xor i64 %8212, %8216
  %8219 = add i64 %8217, %8218
  %8220 = icmp eq i64 %8219, 2
  %8221 = zext i1 %8220 to i8
  %8222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8221, i8* %8222, align 1
  store %struct.Memory* %loadMem_489644, %struct.Memory** %MEMORY
  %loadMem_489647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8224 = getelementptr inbounds %struct.GPR, %struct.GPR* %8223, i32 0, i32 33
  %8225 = getelementptr inbounds %struct.Reg, %struct.Reg* %8224, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %8225 to i64*
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8227 = getelementptr inbounds %struct.GPR, %struct.GPR* %8226, i32 0, i32 7
  %8228 = getelementptr inbounds %struct.Reg, %struct.Reg* %8227, i32 0, i32 0
  %RDX.i707 = bitcast %union.anon* %8228 to i64*
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8230 = getelementptr inbounds %struct.GPR, %struct.GPR* %8229, i32 0, i32 15
  %8231 = getelementptr inbounds %struct.Reg, %struct.Reg* %8230, i32 0, i32 0
  %RBP.i708 = bitcast %union.anon* %8231 to i64*
  %8232 = load i64, i64* %RBP.i708
  %8233 = sub i64 %8232, 36
  %8234 = load i64, i64* %PC.i706
  %8235 = add i64 %8234, 4
  store i64 %8235, i64* %PC.i706
  %8236 = inttoptr i64 %8233 to i32*
  %8237 = load i32, i32* %8236
  %8238 = sext i32 %8237 to i64
  store i64 %8238, i64* %RDX.i707, align 8
  store %struct.Memory* %loadMem_489647, %struct.Memory** %MEMORY
  %loadMem_48964b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8240 = getelementptr inbounds %struct.GPR, %struct.GPR* %8239, i32 0, i32 33
  %8241 = getelementptr inbounds %struct.Reg, %struct.Reg* %8240, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %8241 to i64*
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8243 = getelementptr inbounds %struct.GPR, %struct.GPR* %8242, i32 0, i32 7
  %8244 = getelementptr inbounds %struct.Reg, %struct.Reg* %8243, i32 0, i32 0
  %RDX.i705 = bitcast %union.anon* %8244 to i64*
  %8245 = load i64, i64* %RDX.i705
  %8246 = load i64, i64* %PC.i704
  %8247 = add i64 %8246, 4
  store i64 %8247, i64* %PC.i704
  %8248 = shl i64 %8245, 4
  %8249 = icmp slt i64 %8248, 0
  %8250 = shl i64 %8248, 1
  store i64 %8250, i64* %RDX.i705, align 8
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8252 = zext i1 %8249 to i8
  store i8 %8252, i8* %8251, align 1
  %8253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8254 = trunc i64 %8250 to i32
  %8255 = and i32 %8254, 254
  %8256 = call i32 @llvm.ctpop.i32(i32 %8255)
  %8257 = trunc i32 %8256 to i8
  %8258 = and i8 %8257, 1
  %8259 = xor i8 %8258, 1
  store i8 %8259, i8* %8253, align 1
  %8260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8260, align 1
  %8261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8262 = icmp eq i64 %8250, 0
  %8263 = zext i1 %8262 to i8
  store i8 %8263, i8* %8261, align 1
  %8264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8265 = lshr i64 %8250, 63
  %8266 = trunc i64 %8265 to i8
  store i8 %8266, i8* %8264, align 1
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8267, align 1
  store %struct.Memory* %loadMem_48964b, %struct.Memory** %MEMORY
  %loadMem_48964f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8269 = getelementptr inbounds %struct.GPR, %struct.GPR* %8268, i32 0, i32 33
  %8270 = getelementptr inbounds %struct.Reg, %struct.Reg* %8269, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %8270 to i64*
  %8271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8272 = getelementptr inbounds %struct.GPR, %struct.GPR* %8271, i32 0, i32 5
  %8273 = getelementptr inbounds %struct.Reg, %struct.Reg* %8272, i32 0, i32 0
  %RCX.i702 = bitcast %union.anon* %8273 to i64*
  %8274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8275 = getelementptr inbounds %struct.GPR, %struct.GPR* %8274, i32 0, i32 7
  %8276 = getelementptr inbounds %struct.Reg, %struct.Reg* %8275, i32 0, i32 0
  %RDX.i703 = bitcast %union.anon* %8276 to i64*
  %8277 = load i64, i64* %RCX.i702
  %8278 = load i64, i64* %RDX.i703
  %8279 = load i64, i64* %PC.i701
  %8280 = add i64 %8279, 3
  store i64 %8280, i64* %PC.i701
  %8281 = add i64 %8278, %8277
  store i64 %8281, i64* %RCX.i702, align 8
  %8282 = icmp ult i64 %8281, %8277
  %8283 = icmp ult i64 %8281, %8278
  %8284 = or i1 %8282, %8283
  %8285 = zext i1 %8284 to i8
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8285, i8* %8286, align 1
  %8287 = trunc i64 %8281 to i32
  %8288 = and i32 %8287, 255
  %8289 = call i32 @llvm.ctpop.i32(i32 %8288)
  %8290 = trunc i32 %8289 to i8
  %8291 = and i8 %8290, 1
  %8292 = xor i8 %8291, 1
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8292, i8* %8293, align 1
  %8294 = xor i64 %8278, %8277
  %8295 = xor i64 %8294, %8281
  %8296 = lshr i64 %8295, 4
  %8297 = trunc i64 %8296 to i8
  %8298 = and i8 %8297, 1
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8298, i8* %8299, align 1
  %8300 = icmp eq i64 %8281, 0
  %8301 = zext i1 %8300 to i8
  %8302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8301, i8* %8302, align 1
  %8303 = lshr i64 %8281, 63
  %8304 = trunc i64 %8303 to i8
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8304, i8* %8305, align 1
  %8306 = lshr i64 %8277, 63
  %8307 = lshr i64 %8278, 63
  %8308 = xor i64 %8303, %8306
  %8309 = xor i64 %8303, %8307
  %8310 = add i64 %8308, %8309
  %8311 = icmp eq i64 %8310, 2
  %8312 = zext i1 %8311 to i8
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8312, i8* %8313, align 1
  store %struct.Memory* %loadMem_48964f, %struct.Memory** %MEMORY
  %loadMem_489652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8315 = getelementptr inbounds %struct.GPR, %struct.GPR* %8314, i32 0, i32 33
  %8316 = getelementptr inbounds %struct.Reg, %struct.Reg* %8315, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %8316 to i64*
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8318 = getelementptr inbounds %struct.GPR, %struct.GPR* %8317, i32 0, i32 7
  %8319 = getelementptr inbounds %struct.Reg, %struct.Reg* %8318, i32 0, i32 0
  %RDX.i699 = bitcast %union.anon* %8319 to i64*
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8321 = getelementptr inbounds %struct.GPR, %struct.GPR* %8320, i32 0, i32 15
  %8322 = getelementptr inbounds %struct.Reg, %struct.Reg* %8321, i32 0, i32 0
  %RBP.i700 = bitcast %union.anon* %8322 to i64*
  %8323 = load i64, i64* %RBP.i700
  %8324 = sub i64 %8323, 40
  %8325 = load i64, i64* %PC.i698
  %8326 = add i64 %8325, 4
  store i64 %8326, i64* %PC.i698
  %8327 = inttoptr i64 %8324 to i32*
  %8328 = load i32, i32* %8327
  %8329 = sext i32 %8328 to i64
  store i64 %8329, i64* %RDX.i699, align 8
  store %struct.Memory* %loadMem_489652, %struct.Memory** %MEMORY
  %loadMem_489656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8331 = getelementptr inbounds %struct.GPR, %struct.GPR* %8330, i32 0, i32 33
  %8332 = getelementptr inbounds %struct.Reg, %struct.Reg* %8331, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %8332 to i64*
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8334 = getelementptr inbounds %struct.GPR, %struct.GPR* %8333, i32 0, i32 21
  %8335 = getelementptr inbounds %struct.Reg, %struct.Reg* %8334, i32 0, i32 0
  %R10D.i695 = bitcast %union.anon* %8335 to i32*
  %8336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8337 = getelementptr inbounds %struct.GPR, %struct.GPR* %8336, i32 0, i32 5
  %8338 = getelementptr inbounds %struct.Reg, %struct.Reg* %8337, i32 0, i32 0
  %RCX.i696 = bitcast %union.anon* %8338 to i64*
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8340 = getelementptr inbounds %struct.GPR, %struct.GPR* %8339, i32 0, i32 7
  %8341 = getelementptr inbounds %struct.Reg, %struct.Reg* %8340, i32 0, i32 0
  %RDX.i697 = bitcast %union.anon* %8341 to i64*
  %8342 = bitcast i32* %R10D.i695 to i64*
  %8343 = load i64, i64* %RCX.i696
  %8344 = load i64, i64* %RDX.i697
  %8345 = mul i64 %8344, 2
  %8346 = add i64 %8345, %8343
  %8347 = load i64, i64* %PC.i694
  %8348 = add i64 %8347, 5
  store i64 %8348, i64* %PC.i694
  %8349 = inttoptr i64 %8346 to i16*
  %8350 = load i16, i16* %8349
  %8351 = zext i16 %8350 to i64
  store i64 %8351, i64* %8342, align 8
  store %struct.Memory* %loadMem_489656, %struct.Memory** %MEMORY
  %loadMem_48965b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8353 = getelementptr inbounds %struct.GPR, %struct.GPR* %8352, i32 0, i32 33
  %8354 = getelementptr inbounds %struct.Reg, %struct.Reg* %8353, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %8354 to i64*
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8356 = getelementptr inbounds %struct.GPR, %struct.GPR* %8355, i32 0, i32 19
  %8357 = getelementptr inbounds %struct.Reg, %struct.Reg* %8356, i32 0, i32 0
  %R9D.i693 = bitcast %union.anon* %8357 to i32*
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8359 = getelementptr inbounds %struct.GPR, %struct.GPR* %8358, i32 0, i32 21
  %8360 = getelementptr inbounds %struct.Reg, %struct.Reg* %8359, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %8360 to i32*
  %8361 = bitcast i32* %R9D.i693 to i64*
  %8362 = load i32, i32* %R9D.i693
  %8363 = zext i32 %8362 to i64
  %8364 = load i32, i32* %R10D.i
  %8365 = zext i32 %8364 to i64
  %8366 = load i64, i64* %PC.i692
  %8367 = add i64 %8366, 3
  store i64 %8367, i64* %PC.i692
  %8368 = add i32 %8364, %8362
  %8369 = zext i32 %8368 to i64
  store i64 %8369, i64* %8361, align 8
  %8370 = icmp ult i32 %8368, %8362
  %8371 = icmp ult i32 %8368, %8364
  %8372 = or i1 %8370, %8371
  %8373 = zext i1 %8372 to i8
  %8374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8373, i8* %8374, align 1
  %8375 = and i32 %8368, 255
  %8376 = call i32 @llvm.ctpop.i32(i32 %8375)
  %8377 = trunc i32 %8376 to i8
  %8378 = and i8 %8377, 1
  %8379 = xor i8 %8378, 1
  %8380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8379, i8* %8380, align 1
  %8381 = xor i64 %8365, %8363
  %8382 = trunc i64 %8381 to i32
  %8383 = xor i32 %8382, %8368
  %8384 = lshr i32 %8383, 4
  %8385 = trunc i32 %8384 to i8
  %8386 = and i8 %8385, 1
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8386, i8* %8387, align 1
  %8388 = icmp eq i32 %8368, 0
  %8389 = zext i1 %8388 to i8
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8389, i8* %8390, align 1
  %8391 = lshr i32 %8368, 31
  %8392 = trunc i32 %8391 to i8
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8392, i8* %8393, align 1
  %8394 = lshr i32 %8362, 31
  %8395 = lshr i32 %8364, 31
  %8396 = xor i32 %8391, %8394
  %8397 = xor i32 %8391, %8395
  %8398 = add i32 %8396, %8397
  %8399 = icmp eq i32 %8398, 2
  %8400 = zext i1 %8399 to i8
  %8401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8400, i8* %8401, align 1
  store %struct.Memory* %loadMem_48965b, %struct.Memory** %MEMORY
  %loadMem_48965e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8403 = getelementptr inbounds %struct.GPR, %struct.GPR* %8402, i32 0, i32 33
  %8404 = getelementptr inbounds %struct.Reg, %struct.Reg* %8403, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %8404 to i64*
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8406 = getelementptr inbounds %struct.GPR, %struct.GPR* %8405, i32 0, i32 1
  %8407 = getelementptr inbounds %struct.Reg, %struct.Reg* %8406, i32 0, i32 0
  %EAX.i690 = bitcast %union.anon* %8407 to i32*
  %8408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8409 = getelementptr inbounds %struct.GPR, %struct.GPR* %8408, i32 0, i32 19
  %8410 = getelementptr inbounds %struct.Reg, %struct.Reg* %8409, i32 0, i32 0
  %R9D.i691 = bitcast %union.anon* %8410 to i32*
  %8411 = load i32, i32* %EAX.i690
  %8412 = zext i32 %8411 to i64
  %8413 = load i32, i32* %R9D.i691
  %8414 = zext i32 %8413 to i64
  %8415 = load i64, i64* %PC.i689
  %8416 = add i64 %8415, 3
  store i64 %8416, i64* %PC.i689
  %8417 = sub i32 %8411, %8413
  %8418 = icmp ult i32 %8411, %8413
  %8419 = zext i1 %8418 to i8
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8419, i8* %8420, align 1
  %8421 = and i32 %8417, 255
  %8422 = call i32 @llvm.ctpop.i32(i32 %8421)
  %8423 = trunc i32 %8422 to i8
  %8424 = and i8 %8423, 1
  %8425 = xor i8 %8424, 1
  %8426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8425, i8* %8426, align 1
  %8427 = xor i64 %8414, %8412
  %8428 = trunc i64 %8427 to i32
  %8429 = xor i32 %8428, %8417
  %8430 = lshr i32 %8429, 4
  %8431 = trunc i32 %8430 to i8
  %8432 = and i8 %8431, 1
  %8433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8432, i8* %8433, align 1
  %8434 = icmp eq i32 %8417, 0
  %8435 = zext i1 %8434 to i8
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8435, i8* %8436, align 1
  %8437 = lshr i32 %8417, 31
  %8438 = trunc i32 %8437 to i8
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8438, i8* %8439, align 1
  %8440 = lshr i32 %8411, 31
  %8441 = lshr i32 %8413, 31
  %8442 = xor i32 %8441, %8440
  %8443 = xor i32 %8437, %8440
  %8444 = add i32 %8443, %8442
  %8445 = icmp eq i32 %8444, 2
  %8446 = zext i1 %8445 to i8
  %8447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8446, i8* %8447, align 1
  store %struct.Memory* %loadMem_48965e, %struct.Memory** %MEMORY
  %loadMem_489661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8449 = getelementptr inbounds %struct.GPR, %struct.GPR* %8448, i32 0, i32 33
  %8450 = getelementptr inbounds %struct.Reg, %struct.Reg* %8449, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %8450 to i64*
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8452 = getelementptr inbounds %struct.GPR, %struct.GPR* %8451, i32 0, i32 17
  %8453 = getelementptr inbounds %struct.Reg, %struct.Reg* %8452, i32 0, i32 0
  %R8D.i687 = bitcast %union.anon* %8453 to i32*
  %8454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8455 = getelementptr inbounds %struct.GPR, %struct.GPR* %8454, i32 0, i32 15
  %8456 = getelementptr inbounds %struct.Reg, %struct.Reg* %8455, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %8456 to i64*
  %8457 = load i64, i64* %RBP.i688
  %8458 = sub i64 %8457, 84
  %8459 = load i32, i32* %R8D.i687
  %8460 = zext i32 %8459 to i64
  %8461 = load i64, i64* %PC.i686
  %8462 = add i64 %8461, 4
  store i64 %8462, i64* %PC.i686
  %8463 = inttoptr i64 %8458 to i32*
  store i32 %8459, i32* %8463
  store %struct.Memory* %loadMem_489661, %struct.Memory** %MEMORY
  %loadMem_489665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8465 = getelementptr inbounds %struct.GPR, %struct.GPR* %8464, i32 0, i32 33
  %8466 = getelementptr inbounds %struct.Reg, %struct.Reg* %8465, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %8466 to i64*
  %8467 = load i64, i64* %PC.i685
  %8468 = add i64 %8467, 16
  %8469 = load i64, i64* %PC.i685
  %8470 = add i64 %8469, 6
  %8471 = load i64, i64* %PC.i685
  %8472 = add i64 %8471, 6
  store i64 %8472, i64* %PC.i685
  %8473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8474 = load i8, i8* %8473, align 1
  %8475 = icmp ne i8 %8474, 0
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8477 = load i8, i8* %8476, align 1
  %8478 = icmp ne i8 %8477, 0
  %8479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8480 = load i8, i8* %8479, align 1
  %8481 = icmp ne i8 %8480, 0
  %8482 = xor i1 %8478, %8481
  %8483 = or i1 %8475, %8482
  %8484 = zext i1 %8483 to i8
  store i8 %8484, i8* %BRANCH_TAKEN, align 1
  %8485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8486 = select i1 %8483, i64 %8468, i64 %8470
  store i64 %8486, i64* %8485, align 8
  store %struct.Memory* %loadMem_489665, %struct.Memory** %MEMORY
  %loadBr_489665 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489665 = icmp eq i8 %loadBr_489665, 1
  br i1 %cmpBr_489665, label %block_.L_489675, label %block_48966b

block_48966b:                                     ; preds = %block_48956b
  %loadMem_48966b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 33
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %8489 to i64*
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8491 = getelementptr inbounds %struct.GPR, %struct.GPR* %8490, i32 0, i32 1
  %8492 = getelementptr inbounds %struct.Reg, %struct.Reg* %8491, i32 0, i32 0
  %EAX.i683 = bitcast %union.anon* %8492 to i32*
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 1
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %RAX.i684 = bitcast %union.anon* %8495 to i64*
  %8496 = load i64, i64* %RAX.i684
  %8497 = load i32, i32* %EAX.i683
  %8498 = zext i32 %8497 to i64
  %8499 = load i64, i64* %PC.i682
  %8500 = add i64 %8499, 2
  store i64 %8500, i64* %PC.i682
  %8501 = xor i64 %8498, %8496
  %8502 = trunc i64 %8501 to i32
  %8503 = and i64 %8501, 4294967295
  store i64 %8503, i64* %RAX.i684, align 8
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8504, align 1
  %8505 = and i32 %8502, 255
  %8506 = call i32 @llvm.ctpop.i32(i32 %8505)
  %8507 = trunc i32 %8506 to i8
  %8508 = and i8 %8507, 1
  %8509 = xor i8 %8508, 1
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8509, i8* %8510, align 1
  %8511 = icmp eq i32 %8502, 0
  %8512 = zext i1 %8511 to i8
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8512, i8* %8513, align 1
  %8514 = lshr i32 %8502, 31
  %8515 = trunc i32 %8514 to i8
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8515, i8* %8516, align 1
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8517, align 1
  %8518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8518, align 1
  store %struct.Memory* %loadMem_48966b, %struct.Memory** %MEMORY
  %loadMem_48966d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8520 = getelementptr inbounds %struct.GPR, %struct.GPR* %8519, i32 0, i32 33
  %8521 = getelementptr inbounds %struct.Reg, %struct.Reg* %8520, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %8521 to i64*
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8523 = getelementptr inbounds %struct.GPR, %struct.GPR* %8522, i32 0, i32 1
  %8524 = getelementptr inbounds %struct.Reg, %struct.Reg* %8523, i32 0, i32 0
  %EAX.i680 = bitcast %union.anon* %8524 to i32*
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8526 = getelementptr inbounds %struct.GPR, %struct.GPR* %8525, i32 0, i32 15
  %8527 = getelementptr inbounds %struct.Reg, %struct.Reg* %8526, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %8527 to i64*
  %8528 = load i64, i64* %RBP.i681
  %8529 = sub i64 %8528, 88
  %8530 = load i32, i32* %EAX.i680
  %8531 = zext i32 %8530 to i64
  %8532 = load i64, i64* %PC.i679
  %8533 = add i64 %8532, 3
  store i64 %8533, i64* %PC.i679
  %8534 = inttoptr i64 %8529 to i32*
  store i32 %8530, i32* %8534
  store %struct.Memory* %loadMem_48966d, %struct.Memory** %MEMORY
  %loadMem_489670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8536 = getelementptr inbounds %struct.GPR, %struct.GPR* %8535, i32 0, i32 33
  %8537 = getelementptr inbounds %struct.Reg, %struct.Reg* %8536, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %8537 to i64*
  %8538 = load i64, i64* %PC.i678
  %8539 = add i64 %8538, 58
  %8540 = load i64, i64* %PC.i678
  %8541 = add i64 %8540, 5
  store i64 %8541, i64* %PC.i678
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8539, i64* %8542, align 8
  store %struct.Memory* %loadMem_489670, %struct.Memory** %MEMORY
  br label %block_.L_4896aa

block_.L_489675:                                  ; preds = %block_48956b
  %loadMem_489675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 33
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %8545 to i64*
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8547 = getelementptr inbounds %struct.GPR, %struct.GPR* %8546, i32 0, i32 1
  %8548 = getelementptr inbounds %struct.Reg, %struct.Reg* %8547, i32 0, i32 0
  %RAX.i676 = bitcast %union.anon* %8548 to i64*
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8550 = getelementptr inbounds %struct.GPR, %struct.GPR* %8549, i32 0, i32 15
  %8551 = getelementptr inbounds %struct.Reg, %struct.Reg* %8550, i32 0, i32 0
  %RBP.i677 = bitcast %union.anon* %8551 to i64*
  %8552 = load i64, i64* %RBP.i677
  %8553 = sub i64 %8552, 28
  %8554 = load i64, i64* %PC.i675
  %8555 = add i64 %8554, 3
  store i64 %8555, i64* %PC.i675
  %8556 = inttoptr i64 %8553 to i32*
  %8557 = load i32, i32* %8556
  %8558 = zext i32 %8557 to i64
  store i64 %8558, i64* %RAX.i676, align 8
  store %struct.Memory* %loadMem_489675, %struct.Memory** %MEMORY
  %loadMem_489678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8560 = getelementptr inbounds %struct.GPR, %struct.GPR* %8559, i32 0, i32 33
  %8561 = getelementptr inbounds %struct.Reg, %struct.Reg* %8560, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %8561 to i64*
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8563 = getelementptr inbounds %struct.GPR, %struct.GPR* %8562, i32 0, i32 5
  %8564 = getelementptr inbounds %struct.Reg, %struct.Reg* %8563, i32 0, i32 0
  %RCX.i674 = bitcast %union.anon* %8564 to i64*
  %8565 = load i64, i64* %PC.i673
  %8566 = add i64 %8565, 8
  store i64 %8566, i64* %PC.i673
  %8567 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8567, i64* %RCX.i674, align 8
  store %struct.Memory* %loadMem_489678, %struct.Memory** %MEMORY
  %loadMem_489680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8569 = getelementptr inbounds %struct.GPR, %struct.GPR* %8568, i32 0, i32 33
  %8570 = getelementptr inbounds %struct.Reg, %struct.Reg* %8569, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %8570 to i64*
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8572 = getelementptr inbounds %struct.GPR, %struct.GPR* %8571, i32 0, i32 5
  %8573 = getelementptr inbounds %struct.Reg, %struct.Reg* %8572, i32 0, i32 0
  %RCX.i672 = bitcast %union.anon* %8573 to i64*
  %8574 = load i64, i64* %RCX.i672
  %8575 = load i64, i64* %PC.i671
  %8576 = add i64 %8575, 7
  store i64 %8576, i64* %PC.i671
  %8577 = add i64 8504, %8574
  store i64 %8577, i64* %RCX.i672, align 8
  %8578 = icmp ult i64 %8577, %8574
  %8579 = icmp ult i64 %8577, 8504
  %8580 = or i1 %8578, %8579
  %8581 = zext i1 %8580 to i8
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8581, i8* %8582, align 1
  %8583 = trunc i64 %8577 to i32
  %8584 = and i32 %8583, 255
  %8585 = call i32 @llvm.ctpop.i32(i32 %8584)
  %8586 = trunc i32 %8585 to i8
  %8587 = and i8 %8586, 1
  %8588 = xor i8 %8587, 1
  %8589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8588, i8* %8589, align 1
  %8590 = xor i64 8504, %8574
  %8591 = xor i64 %8590, %8577
  %8592 = lshr i64 %8591, 4
  %8593 = trunc i64 %8592 to i8
  %8594 = and i8 %8593, 1
  %8595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8594, i8* %8595, align 1
  %8596 = icmp eq i64 %8577, 0
  %8597 = zext i1 %8596 to i8
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8597, i8* %8598, align 1
  %8599 = lshr i64 %8577, 63
  %8600 = trunc i64 %8599 to i8
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8600, i8* %8601, align 1
  %8602 = lshr i64 %8574, 63
  %8603 = xor i64 %8599, %8602
  %8604 = add i64 %8603, %8599
  %8605 = icmp eq i64 %8604, 2
  %8606 = zext i1 %8605 to i8
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8606, i8* %8607, align 1
  store %struct.Memory* %loadMem_489680, %struct.Memory** %MEMORY
  %loadMem_489687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 33
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %8610 to i64*
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 7
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %RDX.i669 = bitcast %union.anon* %8613 to i64*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 15
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %RBP.i670 = bitcast %union.anon* %8616 to i64*
  %8617 = load i64, i64* %RBP.i670
  %8618 = sub i64 %8617, 32
  %8619 = load i64, i64* %PC.i668
  %8620 = add i64 %8619, 4
  store i64 %8620, i64* %PC.i668
  %8621 = inttoptr i64 %8618 to i32*
  %8622 = load i32, i32* %8621
  %8623 = sext i32 %8622 to i64
  store i64 %8623, i64* %RDX.i669, align 8
  store %struct.Memory* %loadMem_489687, %struct.Memory** %MEMORY
  %loadMem_48968b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8625 = getelementptr inbounds %struct.GPR, %struct.GPR* %8624, i32 0, i32 33
  %8626 = getelementptr inbounds %struct.Reg, %struct.Reg* %8625, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %8626 to i64*
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8628 = getelementptr inbounds %struct.GPR, %struct.GPR* %8627, i32 0, i32 7
  %8629 = getelementptr inbounds %struct.Reg, %struct.Reg* %8628, i32 0, i32 0
  %RDX.i667 = bitcast %union.anon* %8629 to i64*
  %8630 = load i64, i64* %RDX.i667
  %8631 = load i64, i64* %PC.i666
  %8632 = add i64 %8631, 4
  store i64 %8632, i64* %PC.i666
  %8633 = shl i64 %8630, 8
  %8634 = icmp slt i64 %8633, 0
  %8635 = shl i64 %8633, 1
  store i64 %8635, i64* %RDX.i667, align 8
  %8636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8637 = zext i1 %8634 to i8
  store i8 %8637, i8* %8636, align 1
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8639 = trunc i64 %8635 to i32
  store i8 1, i8* %8638, align 1
  %8640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8640, align 1
  %8641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8642 = icmp eq i64 %8635, 0
  %8643 = zext i1 %8642 to i8
  store i8 %8643, i8* %8641, align 1
  %8644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8645 = lshr i64 %8635, 63
  %8646 = trunc i64 %8645 to i8
  store i8 %8646, i8* %8644, align 1
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8647, align 1
  store %struct.Memory* %loadMem_48968b, %struct.Memory** %MEMORY
  %loadMem_48968f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8649 = getelementptr inbounds %struct.GPR, %struct.GPR* %8648, i32 0, i32 33
  %8650 = getelementptr inbounds %struct.Reg, %struct.Reg* %8649, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %8650 to i64*
  %8651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8652 = getelementptr inbounds %struct.GPR, %struct.GPR* %8651, i32 0, i32 5
  %8653 = getelementptr inbounds %struct.Reg, %struct.Reg* %8652, i32 0, i32 0
  %RCX.i664 = bitcast %union.anon* %8653 to i64*
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8655 = getelementptr inbounds %struct.GPR, %struct.GPR* %8654, i32 0, i32 7
  %8656 = getelementptr inbounds %struct.Reg, %struct.Reg* %8655, i32 0, i32 0
  %RDX.i665 = bitcast %union.anon* %8656 to i64*
  %8657 = load i64, i64* %RCX.i664
  %8658 = load i64, i64* %RDX.i665
  %8659 = load i64, i64* %PC.i663
  %8660 = add i64 %8659, 3
  store i64 %8660, i64* %PC.i663
  %8661 = add i64 %8658, %8657
  store i64 %8661, i64* %RCX.i664, align 8
  %8662 = icmp ult i64 %8661, %8657
  %8663 = icmp ult i64 %8661, %8658
  %8664 = or i1 %8662, %8663
  %8665 = zext i1 %8664 to i8
  %8666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8665, i8* %8666, align 1
  %8667 = trunc i64 %8661 to i32
  %8668 = and i32 %8667, 255
  %8669 = call i32 @llvm.ctpop.i32(i32 %8668)
  %8670 = trunc i32 %8669 to i8
  %8671 = and i8 %8670, 1
  %8672 = xor i8 %8671, 1
  %8673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8672, i8* %8673, align 1
  %8674 = xor i64 %8658, %8657
  %8675 = xor i64 %8674, %8661
  %8676 = lshr i64 %8675, 4
  %8677 = trunc i64 %8676 to i8
  %8678 = and i8 %8677, 1
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8678, i8* %8679, align 1
  %8680 = icmp eq i64 %8661, 0
  %8681 = zext i1 %8680 to i8
  %8682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8681, i8* %8682, align 1
  %8683 = lshr i64 %8661, 63
  %8684 = trunc i64 %8683 to i8
  %8685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8684, i8* %8685, align 1
  %8686 = lshr i64 %8657, 63
  %8687 = lshr i64 %8658, 63
  %8688 = xor i64 %8683, %8686
  %8689 = xor i64 %8683, %8687
  %8690 = add i64 %8688, %8689
  %8691 = icmp eq i64 %8690, 2
  %8692 = zext i1 %8691 to i8
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8692, i8* %8693, align 1
  store %struct.Memory* %loadMem_48968f, %struct.Memory** %MEMORY
  %loadMem_489692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8695 = getelementptr inbounds %struct.GPR, %struct.GPR* %8694, i32 0, i32 33
  %8696 = getelementptr inbounds %struct.Reg, %struct.Reg* %8695, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %8696 to i64*
  %8697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8698 = getelementptr inbounds %struct.GPR, %struct.GPR* %8697, i32 0, i32 7
  %8699 = getelementptr inbounds %struct.Reg, %struct.Reg* %8698, i32 0, i32 0
  %RDX.i661 = bitcast %union.anon* %8699 to i64*
  %8700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8701 = getelementptr inbounds %struct.GPR, %struct.GPR* %8700, i32 0, i32 15
  %8702 = getelementptr inbounds %struct.Reg, %struct.Reg* %8701, i32 0, i32 0
  %RBP.i662 = bitcast %union.anon* %8702 to i64*
  %8703 = load i64, i64* %RBP.i662
  %8704 = sub i64 %8703, 36
  %8705 = load i64, i64* %PC.i660
  %8706 = add i64 %8705, 4
  store i64 %8706, i64* %PC.i660
  %8707 = inttoptr i64 %8704 to i32*
  %8708 = load i32, i32* %8707
  %8709 = sext i32 %8708 to i64
  store i64 %8709, i64* %RDX.i661, align 8
  store %struct.Memory* %loadMem_489692, %struct.Memory** %MEMORY
  %loadMem_489696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8711 = getelementptr inbounds %struct.GPR, %struct.GPR* %8710, i32 0, i32 33
  %8712 = getelementptr inbounds %struct.Reg, %struct.Reg* %8711, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %8712 to i64*
  %8713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8714 = getelementptr inbounds %struct.GPR, %struct.GPR* %8713, i32 0, i32 7
  %8715 = getelementptr inbounds %struct.Reg, %struct.Reg* %8714, i32 0, i32 0
  %RDX.i659 = bitcast %union.anon* %8715 to i64*
  %8716 = load i64, i64* %RDX.i659
  %8717 = load i64, i64* %PC.i658
  %8718 = add i64 %8717, 4
  store i64 %8718, i64* %PC.i658
  %8719 = shl i64 %8716, 4
  %8720 = icmp slt i64 %8719, 0
  %8721 = shl i64 %8719, 1
  store i64 %8721, i64* %RDX.i659, align 8
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8723 = zext i1 %8720 to i8
  store i8 %8723, i8* %8722, align 1
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8725 = trunc i64 %8721 to i32
  %8726 = and i32 %8725, 254
  %8727 = call i32 @llvm.ctpop.i32(i32 %8726)
  %8728 = trunc i32 %8727 to i8
  %8729 = and i8 %8728, 1
  %8730 = xor i8 %8729, 1
  store i8 %8730, i8* %8724, align 1
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8731, align 1
  %8732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8733 = icmp eq i64 %8721, 0
  %8734 = zext i1 %8733 to i8
  store i8 %8734, i8* %8732, align 1
  %8735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8736 = lshr i64 %8721, 63
  %8737 = trunc i64 %8736 to i8
  store i8 %8737, i8* %8735, align 1
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8738, align 1
  store %struct.Memory* %loadMem_489696, %struct.Memory** %MEMORY
  %loadMem_48969a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8740 = getelementptr inbounds %struct.GPR, %struct.GPR* %8739, i32 0, i32 33
  %8741 = getelementptr inbounds %struct.Reg, %struct.Reg* %8740, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %8741 to i64*
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8743 = getelementptr inbounds %struct.GPR, %struct.GPR* %8742, i32 0, i32 5
  %8744 = getelementptr inbounds %struct.Reg, %struct.Reg* %8743, i32 0, i32 0
  %RCX.i656 = bitcast %union.anon* %8744 to i64*
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8746 = getelementptr inbounds %struct.GPR, %struct.GPR* %8745, i32 0, i32 7
  %8747 = getelementptr inbounds %struct.Reg, %struct.Reg* %8746, i32 0, i32 0
  %RDX.i657 = bitcast %union.anon* %8747 to i64*
  %8748 = load i64, i64* %RCX.i656
  %8749 = load i64, i64* %RDX.i657
  %8750 = load i64, i64* %PC.i655
  %8751 = add i64 %8750, 3
  store i64 %8751, i64* %PC.i655
  %8752 = add i64 %8749, %8748
  store i64 %8752, i64* %RCX.i656, align 8
  %8753 = icmp ult i64 %8752, %8748
  %8754 = icmp ult i64 %8752, %8749
  %8755 = or i1 %8753, %8754
  %8756 = zext i1 %8755 to i8
  %8757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8756, i8* %8757, align 1
  %8758 = trunc i64 %8752 to i32
  %8759 = and i32 %8758, 255
  %8760 = call i32 @llvm.ctpop.i32(i32 %8759)
  %8761 = trunc i32 %8760 to i8
  %8762 = and i8 %8761, 1
  %8763 = xor i8 %8762, 1
  %8764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8763, i8* %8764, align 1
  %8765 = xor i64 %8749, %8748
  %8766 = xor i64 %8765, %8752
  %8767 = lshr i64 %8766, 4
  %8768 = trunc i64 %8767 to i8
  %8769 = and i8 %8768, 1
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8769, i8* %8770, align 1
  %8771 = icmp eq i64 %8752, 0
  %8772 = zext i1 %8771 to i8
  %8773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8772, i8* %8773, align 1
  %8774 = lshr i64 %8752, 63
  %8775 = trunc i64 %8774 to i8
  %8776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8775, i8* %8776, align 1
  %8777 = lshr i64 %8748, 63
  %8778 = lshr i64 %8749, 63
  %8779 = xor i64 %8774, %8777
  %8780 = xor i64 %8774, %8778
  %8781 = add i64 %8779, %8780
  %8782 = icmp eq i64 %8781, 2
  %8783 = zext i1 %8782 to i8
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8783, i8* %8784, align 1
  store %struct.Memory* %loadMem_48969a, %struct.Memory** %MEMORY
  %loadMem_48969d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8786 = getelementptr inbounds %struct.GPR, %struct.GPR* %8785, i32 0, i32 33
  %8787 = getelementptr inbounds %struct.Reg, %struct.Reg* %8786, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %8787 to i64*
  %8788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8789 = getelementptr inbounds %struct.GPR, %struct.GPR* %8788, i32 0, i32 7
  %8790 = getelementptr inbounds %struct.Reg, %struct.Reg* %8789, i32 0, i32 0
  %RDX.i653 = bitcast %union.anon* %8790 to i64*
  %8791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8792 = getelementptr inbounds %struct.GPR, %struct.GPR* %8791, i32 0, i32 15
  %8793 = getelementptr inbounds %struct.Reg, %struct.Reg* %8792, i32 0, i32 0
  %RBP.i654 = bitcast %union.anon* %8793 to i64*
  %8794 = load i64, i64* %RBP.i654
  %8795 = sub i64 %8794, 40
  %8796 = load i64, i64* %PC.i652
  %8797 = add i64 %8796, 4
  store i64 %8797, i64* %PC.i652
  %8798 = inttoptr i64 %8795 to i32*
  %8799 = load i32, i32* %8798
  %8800 = sext i32 %8799 to i64
  store i64 %8800, i64* %RDX.i653, align 8
  store %struct.Memory* %loadMem_48969d, %struct.Memory** %MEMORY
  %loadMem_4896a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8802 = getelementptr inbounds %struct.GPR, %struct.GPR* %8801, i32 0, i32 33
  %8803 = getelementptr inbounds %struct.Reg, %struct.Reg* %8802, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %8803 to i64*
  %8804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8805 = getelementptr inbounds %struct.GPR, %struct.GPR* %8804, i32 0, i32 5
  %8806 = getelementptr inbounds %struct.Reg, %struct.Reg* %8805, i32 0, i32 0
  %RCX.i649 = bitcast %union.anon* %8806 to i64*
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8808 = getelementptr inbounds %struct.GPR, %struct.GPR* %8807, i32 0, i32 7
  %8809 = getelementptr inbounds %struct.Reg, %struct.Reg* %8808, i32 0, i32 0
  %RDX.i650 = bitcast %union.anon* %8809 to i64*
  %8810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8811 = getelementptr inbounds %struct.GPR, %struct.GPR* %8810, i32 0, i32 9
  %8812 = getelementptr inbounds %struct.Reg, %struct.Reg* %8811, i32 0, i32 0
  %RSI.i651 = bitcast %union.anon* %8812 to i64*
  %8813 = load i64, i64* %RCX.i649
  %8814 = load i64, i64* %RDX.i650
  %8815 = mul i64 %8814, 2
  %8816 = add i64 %8815, %8813
  %8817 = load i64, i64* %PC.i648
  %8818 = add i64 %8817, 4
  store i64 %8818, i64* %PC.i648
  %8819 = inttoptr i64 %8816 to i16*
  %8820 = load i16, i16* %8819
  %8821 = zext i16 %8820 to i64
  store i64 %8821, i64* %RSI.i651, align 8
  store %struct.Memory* %loadMem_4896a1, %struct.Memory** %MEMORY
  %loadMem_4896a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8823 = getelementptr inbounds %struct.GPR, %struct.GPR* %8822, i32 0, i32 33
  %8824 = getelementptr inbounds %struct.Reg, %struct.Reg* %8823, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %8824 to i64*
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8826 = getelementptr inbounds %struct.GPR, %struct.GPR* %8825, i32 0, i32 9
  %8827 = getelementptr inbounds %struct.Reg, %struct.Reg* %8826, i32 0, i32 0
  %ESI.i646 = bitcast %union.anon* %8827 to i32*
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 1
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %RAX.i647 = bitcast %union.anon* %8830 to i64*
  %8831 = load i64, i64* %RAX.i647
  %8832 = load i32, i32* %ESI.i646
  %8833 = zext i32 %8832 to i64
  %8834 = load i64, i64* %PC.i645
  %8835 = add i64 %8834, 2
  store i64 %8835, i64* %PC.i645
  %8836 = trunc i64 %8831 to i32
  %8837 = add i32 %8832, %8836
  %8838 = zext i32 %8837 to i64
  store i64 %8838, i64* %RAX.i647, align 8
  %8839 = icmp ult i32 %8837, %8836
  %8840 = icmp ult i32 %8837, %8832
  %8841 = or i1 %8839, %8840
  %8842 = zext i1 %8841 to i8
  %8843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8842, i8* %8843, align 1
  %8844 = and i32 %8837, 255
  %8845 = call i32 @llvm.ctpop.i32(i32 %8844)
  %8846 = trunc i32 %8845 to i8
  %8847 = and i8 %8846, 1
  %8848 = xor i8 %8847, 1
  %8849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8848, i8* %8849, align 1
  %8850 = xor i64 %8833, %8831
  %8851 = trunc i64 %8850 to i32
  %8852 = xor i32 %8851, %8837
  %8853 = lshr i32 %8852, 4
  %8854 = trunc i32 %8853 to i8
  %8855 = and i8 %8854, 1
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8855, i8* %8856, align 1
  %8857 = icmp eq i32 %8837, 0
  %8858 = zext i1 %8857 to i8
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8858, i8* %8859, align 1
  %8860 = lshr i32 %8837, 31
  %8861 = trunc i32 %8860 to i8
  %8862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8861, i8* %8862, align 1
  %8863 = lshr i32 %8836, 31
  %8864 = lshr i32 %8832, 31
  %8865 = xor i32 %8860, %8863
  %8866 = xor i32 %8860, %8864
  %8867 = add i32 %8865, %8866
  %8868 = icmp eq i32 %8867, 2
  %8869 = zext i1 %8868 to i8
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8869, i8* %8870, align 1
  store %struct.Memory* %loadMem_4896a5, %struct.Memory** %MEMORY
  %loadMem_4896a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8872 = getelementptr inbounds %struct.GPR, %struct.GPR* %8871, i32 0, i32 33
  %8873 = getelementptr inbounds %struct.Reg, %struct.Reg* %8872, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %8873 to i64*
  %8874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8875 = getelementptr inbounds %struct.GPR, %struct.GPR* %8874, i32 0, i32 1
  %8876 = getelementptr inbounds %struct.Reg, %struct.Reg* %8875, i32 0, i32 0
  %EAX.i643 = bitcast %union.anon* %8876 to i32*
  %8877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8878 = getelementptr inbounds %struct.GPR, %struct.GPR* %8877, i32 0, i32 15
  %8879 = getelementptr inbounds %struct.Reg, %struct.Reg* %8878, i32 0, i32 0
  %RBP.i644 = bitcast %union.anon* %8879 to i64*
  %8880 = load i64, i64* %RBP.i644
  %8881 = sub i64 %8880, 88
  %8882 = load i32, i32* %EAX.i643
  %8883 = zext i32 %8882 to i64
  %8884 = load i64, i64* %PC.i642
  %8885 = add i64 %8884, 3
  store i64 %8885, i64* %PC.i642
  %8886 = inttoptr i64 %8881 to i32*
  store i32 %8882, i32* %8886
  store %struct.Memory* %loadMem_4896a7, %struct.Memory** %MEMORY
  br label %block_.L_4896aa

block_.L_4896aa:                                  ; preds = %block_.L_489675, %block_48966b
  %loadMem_4896aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8888 = getelementptr inbounds %struct.GPR, %struct.GPR* %8887, i32 0, i32 33
  %8889 = getelementptr inbounds %struct.Reg, %struct.Reg* %8888, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %8889 to i64*
  %8890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8891 = getelementptr inbounds %struct.GPR, %struct.GPR* %8890, i32 0, i32 1
  %8892 = getelementptr inbounds %struct.Reg, %struct.Reg* %8891, i32 0, i32 0
  %RAX.i640 = bitcast %union.anon* %8892 to i64*
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8894 = getelementptr inbounds %struct.GPR, %struct.GPR* %8893, i32 0, i32 15
  %8895 = getelementptr inbounds %struct.Reg, %struct.Reg* %8894, i32 0, i32 0
  %RBP.i641 = bitcast %union.anon* %8895 to i64*
  %8896 = load i64, i64* %RBP.i641
  %8897 = sub i64 %8896, 88
  %8898 = load i64, i64* %PC.i639
  %8899 = add i64 %8898, 3
  store i64 %8899, i64* %PC.i639
  %8900 = inttoptr i64 %8897 to i32*
  %8901 = load i32, i32* %8900
  %8902 = zext i32 %8901 to i64
  store i64 %8902, i64* %RAX.i640, align 8
  store %struct.Memory* %loadMem_4896aa, %struct.Memory** %MEMORY
  %loadMem_4896ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8904 = getelementptr inbounds %struct.GPR, %struct.GPR* %8903, i32 0, i32 33
  %8905 = getelementptr inbounds %struct.Reg, %struct.Reg* %8904, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %8905 to i64*
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8907 = getelementptr inbounds %struct.GPR, %struct.GPR* %8906, i32 0, i32 5
  %8908 = getelementptr inbounds %struct.Reg, %struct.Reg* %8907, i32 0, i32 0
  %RCX.i637 = bitcast %union.anon* %8908 to i64*
  %8909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8910 = getelementptr inbounds %struct.GPR, %struct.GPR* %8909, i32 0, i32 15
  %8911 = getelementptr inbounds %struct.Reg, %struct.Reg* %8910, i32 0, i32 0
  %RBP.i638 = bitcast %union.anon* %8911 to i64*
  %8912 = load i64, i64* %RBP.i638
  %8913 = sub i64 %8912, 84
  %8914 = load i64, i64* %PC.i636
  %8915 = add i64 %8914, 3
  store i64 %8915, i64* %PC.i636
  %8916 = inttoptr i64 %8913 to i32*
  %8917 = load i32, i32* %8916
  %8918 = zext i32 %8917 to i64
  store i64 %8918, i64* %RCX.i637, align 8
  store %struct.Memory* %loadMem_4896ad, %struct.Memory** %MEMORY
  %loadMem_4896b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8920 = getelementptr inbounds %struct.GPR, %struct.GPR* %8919, i32 0, i32 33
  %8921 = getelementptr inbounds %struct.Reg, %struct.Reg* %8920, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %8921 to i64*
  %8922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8923 = getelementptr inbounds %struct.GPR, %struct.GPR* %8922, i32 0, i32 1
  %8924 = getelementptr inbounds %struct.Reg, %struct.Reg* %8923, i32 0, i32 0
  %EAX.i634 = bitcast %union.anon* %8924 to i32*
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8926 = getelementptr inbounds %struct.GPR, %struct.GPR* %8925, i32 0, i32 5
  %8927 = getelementptr inbounds %struct.Reg, %struct.Reg* %8926, i32 0, i32 0
  %ECX.i635 = bitcast %union.anon* %8927 to i32*
  %8928 = load i32, i32* %ECX.i635
  %8929 = zext i32 %8928 to i64
  %8930 = load i32, i32* %EAX.i634
  %8931 = zext i32 %8930 to i64
  %8932 = load i64, i64* %PC.i633
  %8933 = add i64 %8932, 2
  store i64 %8933, i64* %PC.i633
  %8934 = sub i32 %8928, %8930
  %8935 = icmp ult i32 %8928, %8930
  %8936 = zext i1 %8935 to i8
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8936, i8* %8937, align 1
  %8938 = and i32 %8934, 255
  %8939 = call i32 @llvm.ctpop.i32(i32 %8938)
  %8940 = trunc i32 %8939 to i8
  %8941 = and i8 %8940, 1
  %8942 = xor i8 %8941, 1
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8942, i8* %8943, align 1
  %8944 = xor i64 %8931, %8929
  %8945 = trunc i64 %8944 to i32
  %8946 = xor i32 %8945, %8934
  %8947 = lshr i32 %8946, 4
  %8948 = trunc i32 %8947 to i8
  %8949 = and i8 %8948, 1
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8949, i8* %8950, align 1
  %8951 = icmp eq i32 %8934, 0
  %8952 = zext i1 %8951 to i8
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8952, i8* %8953, align 1
  %8954 = lshr i32 %8934, 31
  %8955 = trunc i32 %8954 to i8
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8955, i8* %8956, align 1
  %8957 = lshr i32 %8928, 31
  %8958 = lshr i32 %8930, 31
  %8959 = xor i32 %8958, %8957
  %8960 = xor i32 %8954, %8957
  %8961 = add i32 %8960, %8959
  %8962 = icmp eq i32 %8961, 2
  %8963 = zext i1 %8962 to i8
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8963, i8* %8964, align 1
  store %struct.Memory* %loadMem_4896b0, %struct.Memory** %MEMORY
  %loadMem_4896b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8966 = getelementptr inbounds %struct.GPR, %struct.GPR* %8965, i32 0, i32 33
  %8967 = getelementptr inbounds %struct.Reg, %struct.Reg* %8966, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %8967 to i64*
  %8968 = load i64, i64* %PC.i632
  %8969 = add i64 %8968, 28
  %8970 = load i64, i64* %PC.i632
  %8971 = add i64 %8970, 6
  %8972 = load i64, i64* %PC.i632
  %8973 = add i64 %8972, 6
  store i64 %8973, i64* %PC.i632
  %8974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8975 = load i8, i8* %8974, align 1
  %8976 = icmp ne i8 %8975, 0
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8978 = load i8, i8* %8977, align 1
  %8979 = icmp ne i8 %8978, 0
  %8980 = xor i1 %8976, %8979
  %8981 = xor i1 %8980, true
  %8982 = zext i1 %8981 to i8
  store i8 %8982, i8* %BRANCH_TAKEN, align 1
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8984 = select i1 %8980, i64 %8971, i64 %8969
  store i64 %8984, i64* %8983, align 8
  store %struct.Memory* %loadMem_4896b2, %struct.Memory** %MEMORY
  %loadBr_4896b2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4896b2 = icmp eq i8 %loadBr_4896b2, 1
  br i1 %cmpBr_4896b2, label %block_.L_4896ce, label %block_4896b8

block_4896b8:                                     ; preds = %block_.L_4896aa
  %loadMem_4896b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8986 = getelementptr inbounds %struct.GPR, %struct.GPR* %8985, i32 0, i32 33
  %8987 = getelementptr inbounds %struct.Reg, %struct.Reg* %8986, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %8987 to i64*
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8989 = getelementptr inbounds %struct.GPR, %struct.GPR* %8988, i32 0, i32 1
  %8990 = getelementptr inbounds %struct.Reg, %struct.Reg* %8989, i32 0, i32 0
  %RAX.i631 = bitcast %union.anon* %8990 to i64*
  %8991 = load i64, i64* %PC.i630
  %8992 = add i64 %8991, 8
  store i64 %8992, i64* %PC.i630
  %8993 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8993, i64* %RAX.i631, align 8
  store %struct.Memory* %loadMem_4896b8, %struct.Memory** %MEMORY
  %loadMem_4896c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8995 = getelementptr inbounds %struct.GPR, %struct.GPR* %8994, i32 0, i32 33
  %8996 = getelementptr inbounds %struct.Reg, %struct.Reg* %8995, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %8996 to i64*
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 1
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %RAX.i628 = bitcast %union.anon* %8999 to i64*
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9001 = getelementptr inbounds %struct.GPR, %struct.GPR* %9000, i32 0, i32 5
  %9002 = getelementptr inbounds %struct.Reg, %struct.Reg* %9001, i32 0, i32 0
  %RCX.i629 = bitcast %union.anon* %9002 to i64*
  %9003 = load i64, i64* %RAX.i628
  %9004 = add i64 %9003, 72688
  %9005 = load i64, i64* %PC.i627
  %9006 = add i64 %9005, 6
  store i64 %9006, i64* %PC.i627
  %9007 = inttoptr i64 %9004 to i32*
  %9008 = load i32, i32* %9007
  %9009 = zext i32 %9008 to i64
  store i64 %9009, i64* %RCX.i629, align 8
  store %struct.Memory* %loadMem_4896c0, %struct.Memory** %MEMORY
  %loadMem_4896c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9011 = getelementptr inbounds %struct.GPR, %struct.GPR* %9010, i32 0, i32 33
  %9012 = getelementptr inbounds %struct.Reg, %struct.Reg* %9011, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %9012 to i64*
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9014 = getelementptr inbounds %struct.GPR, %struct.GPR* %9013, i32 0, i32 5
  %9015 = getelementptr inbounds %struct.Reg, %struct.Reg* %9014, i32 0, i32 0
  %ECX.i625 = bitcast %union.anon* %9015 to i32*
  %9016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9017 = getelementptr inbounds %struct.GPR, %struct.GPR* %9016, i32 0, i32 15
  %9018 = getelementptr inbounds %struct.Reg, %struct.Reg* %9017, i32 0, i32 0
  %RBP.i626 = bitcast %union.anon* %9018 to i64*
  %9019 = load i64, i64* %RBP.i626
  %9020 = sub i64 %9019, 92
  %9021 = load i32, i32* %ECX.i625
  %9022 = zext i32 %9021 to i64
  %9023 = load i64, i64* %PC.i624
  %9024 = add i64 %9023, 3
  store i64 %9024, i64* %PC.i624
  %9025 = inttoptr i64 %9020 to i32*
  store i32 %9021, i32* %9025
  store %struct.Memory* %loadMem_4896c6, %struct.Memory** %MEMORY
  %loadMem_4896c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 33
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %9028 to i64*
  %9029 = load i64, i64* %PC.i623
  %9030 = add i64 %9029, 134
  %9031 = load i64, i64* %PC.i623
  %9032 = add i64 %9031, 5
  store i64 %9032, i64* %PC.i623
  %9033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9030, i64* %9033, align 8
  store %struct.Memory* %loadMem_4896c9, %struct.Memory** %MEMORY
  br label %block_.L_48974f

block_.L_4896ce:                                  ; preds = %block_.L_4896aa
  %loadMem_4896ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %9034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9035 = getelementptr inbounds %struct.GPR, %struct.GPR* %9034, i32 0, i32 33
  %9036 = getelementptr inbounds %struct.Reg, %struct.Reg* %9035, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %9036 to i64*
  %9037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9038 = getelementptr inbounds %struct.GPR, %struct.GPR* %9037, i32 0, i32 1
  %9039 = getelementptr inbounds %struct.Reg, %struct.Reg* %9038, i32 0, i32 0
  %EAX.i621 = bitcast %union.anon* %9039 to i32*
  %9040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9041 = getelementptr inbounds %struct.GPR, %struct.GPR* %9040, i32 0, i32 1
  %9042 = getelementptr inbounds %struct.Reg, %struct.Reg* %9041, i32 0, i32 0
  %RAX.i622 = bitcast %union.anon* %9042 to i64*
  %9043 = load i64, i64* %RAX.i622
  %9044 = load i32, i32* %EAX.i621
  %9045 = zext i32 %9044 to i64
  %9046 = load i64, i64* %PC.i620
  %9047 = add i64 %9046, 2
  store i64 %9047, i64* %PC.i620
  %9048 = xor i64 %9045, %9043
  %9049 = trunc i64 %9048 to i32
  %9050 = and i64 %9048, 4294967295
  store i64 %9050, i64* %RAX.i622, align 8
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9051, align 1
  %9052 = and i32 %9049, 255
  %9053 = call i32 @llvm.ctpop.i32(i32 %9052)
  %9054 = trunc i32 %9053 to i8
  %9055 = and i8 %9054, 1
  %9056 = xor i8 %9055, 1
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9056, i8* %9057, align 1
  %9058 = icmp eq i32 %9049, 0
  %9059 = zext i1 %9058 to i8
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9059, i8* %9060, align 1
  %9061 = lshr i32 %9049, 31
  %9062 = trunc i32 %9061 to i8
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9062, i8* %9063, align 1
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9064, align 1
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9065, align 1
  store %struct.Memory* %loadMem_4896ce, %struct.Memory** %MEMORY
  %loadMem_4896d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9067 = getelementptr inbounds %struct.GPR, %struct.GPR* %9066, i32 0, i32 33
  %9068 = getelementptr inbounds %struct.Reg, %struct.Reg* %9067, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %9068 to i64*
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9070 = getelementptr inbounds %struct.GPR, %struct.GPR* %9069, i32 0, i32 5
  %9071 = getelementptr inbounds %struct.Reg, %struct.Reg* %9070, i32 0, i32 0
  %RCX.i618 = bitcast %union.anon* %9071 to i64*
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9073 = getelementptr inbounds %struct.GPR, %struct.GPR* %9072, i32 0, i32 15
  %9074 = getelementptr inbounds %struct.Reg, %struct.Reg* %9073, i32 0, i32 0
  %RBP.i619 = bitcast %union.anon* %9074 to i64*
  %9075 = load i64, i64* %RBP.i619
  %9076 = sub i64 %9075, 28
  %9077 = load i64, i64* %PC.i617
  %9078 = add i64 %9077, 3
  store i64 %9078, i64* %PC.i617
  %9079 = inttoptr i64 %9076 to i32*
  %9080 = load i32, i32* %9079
  %9081 = zext i32 %9080 to i64
  store i64 %9081, i64* %RCX.i618, align 8
  store %struct.Memory* %loadMem_4896d0, %struct.Memory** %MEMORY
  %loadMem_4896d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9083 = getelementptr inbounds %struct.GPR, %struct.GPR* %9082, i32 0, i32 33
  %9084 = getelementptr inbounds %struct.Reg, %struct.Reg* %9083, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %9084 to i64*
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9086 = getelementptr inbounds %struct.GPR, %struct.GPR* %9085, i32 0, i32 7
  %9087 = getelementptr inbounds %struct.Reg, %struct.Reg* %9086, i32 0, i32 0
  %RDX.i616 = bitcast %union.anon* %9087 to i64*
  %9088 = load i64, i64* %PC.i615
  %9089 = add i64 %9088, 8
  store i64 %9089, i64* %PC.i615
  %9090 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9090, i64* %RDX.i616, align 8
  store %struct.Memory* %loadMem_4896d3, %struct.Memory** %MEMORY
  %loadMem_4896db = load %struct.Memory*, %struct.Memory** %MEMORY
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9092 = getelementptr inbounds %struct.GPR, %struct.GPR* %9091, i32 0, i32 33
  %9093 = getelementptr inbounds %struct.Reg, %struct.Reg* %9092, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %9093 to i64*
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9095 = getelementptr inbounds %struct.GPR, %struct.GPR* %9094, i32 0, i32 7
  %9096 = getelementptr inbounds %struct.Reg, %struct.Reg* %9095, i32 0, i32 0
  %RDX.i614 = bitcast %union.anon* %9096 to i64*
  %9097 = load i64, i64* %RDX.i614
  %9098 = load i64, i64* %PC.i613
  %9099 = add i64 %9098, 7
  store i64 %9099, i64* %PC.i613
  %9100 = add i64 8504, %9097
  store i64 %9100, i64* %RDX.i614, align 8
  %9101 = icmp ult i64 %9100, %9097
  %9102 = icmp ult i64 %9100, 8504
  %9103 = or i1 %9101, %9102
  %9104 = zext i1 %9103 to i8
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9104, i8* %9105, align 1
  %9106 = trunc i64 %9100 to i32
  %9107 = and i32 %9106, 255
  %9108 = call i32 @llvm.ctpop.i32(i32 %9107)
  %9109 = trunc i32 %9108 to i8
  %9110 = and i8 %9109, 1
  %9111 = xor i8 %9110, 1
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9111, i8* %9112, align 1
  %9113 = xor i64 8504, %9097
  %9114 = xor i64 %9113, %9100
  %9115 = lshr i64 %9114, 4
  %9116 = trunc i64 %9115 to i8
  %9117 = and i8 %9116, 1
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9117, i8* %9118, align 1
  %9119 = icmp eq i64 %9100, 0
  %9120 = zext i1 %9119 to i8
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9120, i8* %9121, align 1
  %9122 = lshr i64 %9100, 63
  %9123 = trunc i64 %9122 to i8
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9123, i8* %9124, align 1
  %9125 = lshr i64 %9097, 63
  %9126 = xor i64 %9122, %9125
  %9127 = add i64 %9126, %9122
  %9128 = icmp eq i64 %9127, 2
  %9129 = zext i1 %9128 to i8
  %9130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9129, i8* %9130, align 1
  store %struct.Memory* %loadMem_4896db, %struct.Memory** %MEMORY
  %loadMem_4896e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9132 = getelementptr inbounds %struct.GPR, %struct.GPR* %9131, i32 0, i32 33
  %9133 = getelementptr inbounds %struct.Reg, %struct.Reg* %9132, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %9133 to i64*
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 9
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %RSI.i611 = bitcast %union.anon* %9136 to i64*
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9138 = getelementptr inbounds %struct.GPR, %struct.GPR* %9137, i32 0, i32 15
  %9139 = getelementptr inbounds %struct.Reg, %struct.Reg* %9138, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %9139 to i64*
  %9140 = load i64, i64* %RBP.i612
  %9141 = sub i64 %9140, 32
  %9142 = load i64, i64* %PC.i610
  %9143 = add i64 %9142, 4
  store i64 %9143, i64* %PC.i610
  %9144 = inttoptr i64 %9141 to i32*
  %9145 = load i32, i32* %9144
  %9146 = sext i32 %9145 to i64
  store i64 %9146, i64* %RSI.i611, align 8
  store %struct.Memory* %loadMem_4896e2, %struct.Memory** %MEMORY
  %loadMem_4896e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9148 = getelementptr inbounds %struct.GPR, %struct.GPR* %9147, i32 0, i32 33
  %9149 = getelementptr inbounds %struct.Reg, %struct.Reg* %9148, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %9149 to i64*
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9151 = getelementptr inbounds %struct.GPR, %struct.GPR* %9150, i32 0, i32 9
  %9152 = getelementptr inbounds %struct.Reg, %struct.Reg* %9151, i32 0, i32 0
  %RSI.i609 = bitcast %union.anon* %9152 to i64*
  %9153 = load i64, i64* %RSI.i609
  %9154 = load i64, i64* %PC.i608
  %9155 = add i64 %9154, 4
  store i64 %9155, i64* %PC.i608
  %9156 = shl i64 %9153, 8
  %9157 = icmp slt i64 %9156, 0
  %9158 = shl i64 %9156, 1
  store i64 %9158, i64* %RSI.i609, align 8
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9160 = zext i1 %9157 to i8
  store i8 %9160, i8* %9159, align 1
  %9161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9162 = trunc i64 %9158 to i32
  store i8 1, i8* %9161, align 1
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9163, align 1
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9165 = icmp eq i64 %9158, 0
  %9166 = zext i1 %9165 to i8
  store i8 %9166, i8* %9164, align 1
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9168 = lshr i64 %9158, 63
  %9169 = trunc i64 %9168 to i8
  store i8 %9169, i8* %9167, align 1
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9170, align 1
  store %struct.Memory* %loadMem_4896e6, %struct.Memory** %MEMORY
  %loadMem_4896ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9172 = getelementptr inbounds %struct.GPR, %struct.GPR* %9171, i32 0, i32 33
  %9173 = getelementptr inbounds %struct.Reg, %struct.Reg* %9172, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %9173 to i64*
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9175 = getelementptr inbounds %struct.GPR, %struct.GPR* %9174, i32 0, i32 7
  %9176 = getelementptr inbounds %struct.Reg, %struct.Reg* %9175, i32 0, i32 0
  %RDX.i606 = bitcast %union.anon* %9176 to i64*
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9178 = getelementptr inbounds %struct.GPR, %struct.GPR* %9177, i32 0, i32 9
  %9179 = getelementptr inbounds %struct.Reg, %struct.Reg* %9178, i32 0, i32 0
  %RSI.i607 = bitcast %union.anon* %9179 to i64*
  %9180 = load i64, i64* %RDX.i606
  %9181 = load i64, i64* %RSI.i607
  %9182 = load i64, i64* %PC.i605
  %9183 = add i64 %9182, 3
  store i64 %9183, i64* %PC.i605
  %9184 = add i64 %9181, %9180
  store i64 %9184, i64* %RDX.i606, align 8
  %9185 = icmp ult i64 %9184, %9180
  %9186 = icmp ult i64 %9184, %9181
  %9187 = or i1 %9185, %9186
  %9188 = zext i1 %9187 to i8
  %9189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9188, i8* %9189, align 1
  %9190 = trunc i64 %9184 to i32
  %9191 = and i32 %9190, 255
  %9192 = call i32 @llvm.ctpop.i32(i32 %9191)
  %9193 = trunc i32 %9192 to i8
  %9194 = and i8 %9193, 1
  %9195 = xor i8 %9194, 1
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9195, i8* %9196, align 1
  %9197 = xor i64 %9181, %9180
  %9198 = xor i64 %9197, %9184
  %9199 = lshr i64 %9198, 4
  %9200 = trunc i64 %9199 to i8
  %9201 = and i8 %9200, 1
  %9202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9201, i8* %9202, align 1
  %9203 = icmp eq i64 %9184, 0
  %9204 = zext i1 %9203 to i8
  %9205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9204, i8* %9205, align 1
  %9206 = lshr i64 %9184, 63
  %9207 = trunc i64 %9206 to i8
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9207, i8* %9208, align 1
  %9209 = lshr i64 %9180, 63
  %9210 = lshr i64 %9181, 63
  %9211 = xor i64 %9206, %9209
  %9212 = xor i64 %9206, %9210
  %9213 = add i64 %9211, %9212
  %9214 = icmp eq i64 %9213, 2
  %9215 = zext i1 %9214 to i8
  %9216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9215, i8* %9216, align 1
  store %struct.Memory* %loadMem_4896ea, %struct.Memory** %MEMORY
  %loadMem_4896ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9218 = getelementptr inbounds %struct.GPR, %struct.GPR* %9217, i32 0, i32 33
  %9219 = getelementptr inbounds %struct.Reg, %struct.Reg* %9218, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %9219 to i64*
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9221 = getelementptr inbounds %struct.GPR, %struct.GPR* %9220, i32 0, i32 9
  %9222 = getelementptr inbounds %struct.Reg, %struct.Reg* %9221, i32 0, i32 0
  %RSI.i603 = bitcast %union.anon* %9222 to i64*
  %9223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9224 = getelementptr inbounds %struct.GPR, %struct.GPR* %9223, i32 0, i32 15
  %9225 = getelementptr inbounds %struct.Reg, %struct.Reg* %9224, i32 0, i32 0
  %RBP.i604 = bitcast %union.anon* %9225 to i64*
  %9226 = load i64, i64* %RBP.i604
  %9227 = sub i64 %9226, 36
  %9228 = load i64, i64* %PC.i602
  %9229 = add i64 %9228, 4
  store i64 %9229, i64* %PC.i602
  %9230 = inttoptr i64 %9227 to i32*
  %9231 = load i32, i32* %9230
  %9232 = sext i32 %9231 to i64
  store i64 %9232, i64* %RSI.i603, align 8
  store %struct.Memory* %loadMem_4896ed, %struct.Memory** %MEMORY
  %loadMem_4896f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9234 = getelementptr inbounds %struct.GPR, %struct.GPR* %9233, i32 0, i32 33
  %9235 = getelementptr inbounds %struct.Reg, %struct.Reg* %9234, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %9235 to i64*
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9237 = getelementptr inbounds %struct.GPR, %struct.GPR* %9236, i32 0, i32 9
  %9238 = getelementptr inbounds %struct.Reg, %struct.Reg* %9237, i32 0, i32 0
  %RSI.i601 = bitcast %union.anon* %9238 to i64*
  %9239 = load i64, i64* %RSI.i601
  %9240 = load i64, i64* %PC.i600
  %9241 = add i64 %9240, 4
  store i64 %9241, i64* %PC.i600
  %9242 = shl i64 %9239, 4
  %9243 = icmp slt i64 %9242, 0
  %9244 = shl i64 %9242, 1
  store i64 %9244, i64* %RSI.i601, align 8
  %9245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9246 = zext i1 %9243 to i8
  store i8 %9246, i8* %9245, align 1
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9248 = trunc i64 %9244 to i32
  %9249 = and i32 %9248, 254
  %9250 = call i32 @llvm.ctpop.i32(i32 %9249)
  %9251 = trunc i32 %9250 to i8
  %9252 = and i8 %9251, 1
  %9253 = xor i8 %9252, 1
  store i8 %9253, i8* %9247, align 1
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9254, align 1
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9256 = icmp eq i64 %9244, 0
  %9257 = zext i1 %9256 to i8
  store i8 %9257, i8* %9255, align 1
  %9258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9259 = lshr i64 %9244, 63
  %9260 = trunc i64 %9259 to i8
  store i8 %9260, i8* %9258, align 1
  %9261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9261, align 1
  store %struct.Memory* %loadMem_4896f1, %struct.Memory** %MEMORY
  %loadMem_4896f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9263 = getelementptr inbounds %struct.GPR, %struct.GPR* %9262, i32 0, i32 33
  %9264 = getelementptr inbounds %struct.Reg, %struct.Reg* %9263, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %9264 to i64*
  %9265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9266 = getelementptr inbounds %struct.GPR, %struct.GPR* %9265, i32 0, i32 7
  %9267 = getelementptr inbounds %struct.Reg, %struct.Reg* %9266, i32 0, i32 0
  %RDX.i598 = bitcast %union.anon* %9267 to i64*
  %9268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9269 = getelementptr inbounds %struct.GPR, %struct.GPR* %9268, i32 0, i32 9
  %9270 = getelementptr inbounds %struct.Reg, %struct.Reg* %9269, i32 0, i32 0
  %RSI.i599 = bitcast %union.anon* %9270 to i64*
  %9271 = load i64, i64* %RDX.i598
  %9272 = load i64, i64* %RSI.i599
  %9273 = load i64, i64* %PC.i597
  %9274 = add i64 %9273, 3
  store i64 %9274, i64* %PC.i597
  %9275 = add i64 %9272, %9271
  store i64 %9275, i64* %RDX.i598, align 8
  %9276 = icmp ult i64 %9275, %9271
  %9277 = icmp ult i64 %9275, %9272
  %9278 = or i1 %9276, %9277
  %9279 = zext i1 %9278 to i8
  %9280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9279, i8* %9280, align 1
  %9281 = trunc i64 %9275 to i32
  %9282 = and i32 %9281, 255
  %9283 = call i32 @llvm.ctpop.i32(i32 %9282)
  %9284 = trunc i32 %9283 to i8
  %9285 = and i8 %9284, 1
  %9286 = xor i8 %9285, 1
  %9287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9286, i8* %9287, align 1
  %9288 = xor i64 %9272, %9271
  %9289 = xor i64 %9288, %9275
  %9290 = lshr i64 %9289, 4
  %9291 = trunc i64 %9290 to i8
  %9292 = and i8 %9291, 1
  %9293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9292, i8* %9293, align 1
  %9294 = icmp eq i64 %9275, 0
  %9295 = zext i1 %9294 to i8
  %9296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9295, i8* %9296, align 1
  %9297 = lshr i64 %9275, 63
  %9298 = trunc i64 %9297 to i8
  %9299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9298, i8* %9299, align 1
  %9300 = lshr i64 %9271, 63
  %9301 = lshr i64 %9272, 63
  %9302 = xor i64 %9297, %9300
  %9303 = xor i64 %9297, %9301
  %9304 = add i64 %9302, %9303
  %9305 = icmp eq i64 %9304, 2
  %9306 = zext i1 %9305 to i8
  %9307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9306, i8* %9307, align 1
  store %struct.Memory* %loadMem_4896f5, %struct.Memory** %MEMORY
  %loadMem_4896f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9309 = getelementptr inbounds %struct.GPR, %struct.GPR* %9308, i32 0, i32 33
  %9310 = getelementptr inbounds %struct.Reg, %struct.Reg* %9309, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %9310 to i64*
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9312 = getelementptr inbounds %struct.GPR, %struct.GPR* %9311, i32 0, i32 9
  %9313 = getelementptr inbounds %struct.Reg, %struct.Reg* %9312, i32 0, i32 0
  %RSI.i595 = bitcast %union.anon* %9313 to i64*
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9315 = getelementptr inbounds %struct.GPR, %struct.GPR* %9314, i32 0, i32 15
  %9316 = getelementptr inbounds %struct.Reg, %struct.Reg* %9315, i32 0, i32 0
  %RBP.i596 = bitcast %union.anon* %9316 to i64*
  %9317 = load i64, i64* %RBP.i596
  %9318 = sub i64 %9317, 40
  %9319 = load i64, i64* %PC.i594
  %9320 = add i64 %9319, 4
  store i64 %9320, i64* %PC.i594
  %9321 = inttoptr i64 %9318 to i32*
  %9322 = load i32, i32* %9321
  %9323 = sext i32 %9322 to i64
  store i64 %9323, i64* %RSI.i595, align 8
  store %struct.Memory* %loadMem_4896f8, %struct.Memory** %MEMORY
  %loadMem_4896fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9325 = getelementptr inbounds %struct.GPR, %struct.GPR* %9324, i32 0, i32 33
  %9326 = getelementptr inbounds %struct.Reg, %struct.Reg* %9325, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %9326 to i64*
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9328 = getelementptr inbounds %struct.GPR, %struct.GPR* %9327, i32 0, i32 7
  %9329 = getelementptr inbounds %struct.Reg, %struct.Reg* %9328, i32 0, i32 0
  %RDX.i591 = bitcast %union.anon* %9329 to i64*
  %9330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9331 = getelementptr inbounds %struct.GPR, %struct.GPR* %9330, i32 0, i32 9
  %9332 = getelementptr inbounds %struct.Reg, %struct.Reg* %9331, i32 0, i32 0
  %RSI.i592 = bitcast %union.anon* %9332 to i64*
  %9333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9334 = getelementptr inbounds %struct.GPR, %struct.GPR* %9333, i32 0, i32 11
  %9335 = getelementptr inbounds %struct.Reg, %struct.Reg* %9334, i32 0, i32 0
  %RDI.i593 = bitcast %union.anon* %9335 to i64*
  %9336 = load i64, i64* %RDX.i591
  %9337 = load i64, i64* %RSI.i592
  %9338 = mul i64 %9337, 2
  %9339 = add i64 %9338, %9336
  %9340 = load i64, i64* %PC.i590
  %9341 = add i64 %9340, 4
  store i64 %9341, i64* %PC.i590
  %9342 = inttoptr i64 %9339 to i16*
  %9343 = load i16, i16* %9342
  %9344 = zext i16 %9343 to i64
  store i64 %9344, i64* %RDI.i593, align 8
  store %struct.Memory* %loadMem_4896fc, %struct.Memory** %MEMORY
  %loadMem_489700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9346 = getelementptr inbounds %struct.GPR, %struct.GPR* %9345, i32 0, i32 33
  %9347 = getelementptr inbounds %struct.Reg, %struct.Reg* %9346, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %9347 to i64*
  %9348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9349 = getelementptr inbounds %struct.GPR, %struct.GPR* %9348, i32 0, i32 11
  %9350 = getelementptr inbounds %struct.Reg, %struct.Reg* %9349, i32 0, i32 0
  %EDI.i588 = bitcast %union.anon* %9350 to i32*
  %9351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9352 = getelementptr inbounds %struct.GPR, %struct.GPR* %9351, i32 0, i32 5
  %9353 = getelementptr inbounds %struct.Reg, %struct.Reg* %9352, i32 0, i32 0
  %RCX.i589 = bitcast %union.anon* %9353 to i64*
  %9354 = load i64, i64* %RCX.i589
  %9355 = load i32, i32* %EDI.i588
  %9356 = zext i32 %9355 to i64
  %9357 = load i64, i64* %PC.i587
  %9358 = add i64 %9357, 2
  store i64 %9358, i64* %PC.i587
  %9359 = trunc i64 %9354 to i32
  %9360 = add i32 %9355, %9359
  %9361 = zext i32 %9360 to i64
  store i64 %9361, i64* %RCX.i589, align 8
  %9362 = icmp ult i32 %9360, %9359
  %9363 = icmp ult i32 %9360, %9355
  %9364 = or i1 %9362, %9363
  %9365 = zext i1 %9364 to i8
  %9366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9365, i8* %9366, align 1
  %9367 = and i32 %9360, 255
  %9368 = call i32 @llvm.ctpop.i32(i32 %9367)
  %9369 = trunc i32 %9368 to i8
  %9370 = and i8 %9369, 1
  %9371 = xor i8 %9370, 1
  %9372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9371, i8* %9372, align 1
  %9373 = xor i64 %9356, %9354
  %9374 = trunc i64 %9373 to i32
  %9375 = xor i32 %9374, %9360
  %9376 = lshr i32 %9375, 4
  %9377 = trunc i32 %9376 to i8
  %9378 = and i8 %9377, 1
  %9379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9378, i8* %9379, align 1
  %9380 = icmp eq i32 %9360, 0
  %9381 = zext i1 %9380 to i8
  %9382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9381, i8* %9382, align 1
  %9383 = lshr i32 %9360, 31
  %9384 = trunc i32 %9383 to i8
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9384, i8* %9385, align 1
  %9386 = lshr i32 %9359, 31
  %9387 = lshr i32 %9355, 31
  %9388 = xor i32 %9383, %9386
  %9389 = xor i32 %9383, %9387
  %9390 = add i32 %9388, %9389
  %9391 = icmp eq i32 %9390, 2
  %9392 = zext i1 %9391 to i8
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9392, i8* %9393, align 1
  store %struct.Memory* %loadMem_489700, %struct.Memory** %MEMORY
  %loadMem_489702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9395 = getelementptr inbounds %struct.GPR, %struct.GPR* %9394, i32 0, i32 33
  %9396 = getelementptr inbounds %struct.Reg, %struct.Reg* %9395, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %9396 to i64*
  %9397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9398 = getelementptr inbounds %struct.GPR, %struct.GPR* %9397, i32 0, i32 1
  %9399 = getelementptr inbounds %struct.Reg, %struct.Reg* %9398, i32 0, i32 0
  %EAX.i585 = bitcast %union.anon* %9399 to i32*
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9401 = getelementptr inbounds %struct.GPR, %struct.GPR* %9400, i32 0, i32 5
  %9402 = getelementptr inbounds %struct.Reg, %struct.Reg* %9401, i32 0, i32 0
  %ECX.i586 = bitcast %union.anon* %9402 to i32*
  %9403 = load i32, i32* %EAX.i585
  %9404 = zext i32 %9403 to i64
  %9405 = load i32, i32* %ECX.i586
  %9406 = zext i32 %9405 to i64
  %9407 = load i64, i64* %PC.i584
  %9408 = add i64 %9407, 2
  store i64 %9408, i64* %PC.i584
  %9409 = sub i32 %9403, %9405
  %9410 = icmp ult i32 %9403, %9405
  %9411 = zext i1 %9410 to i8
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9411, i8* %9412, align 1
  %9413 = and i32 %9409, 255
  %9414 = call i32 @llvm.ctpop.i32(i32 %9413)
  %9415 = trunc i32 %9414 to i8
  %9416 = and i8 %9415, 1
  %9417 = xor i8 %9416, 1
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9417, i8* %9418, align 1
  %9419 = xor i64 %9406, %9404
  %9420 = trunc i64 %9419 to i32
  %9421 = xor i32 %9420, %9409
  %9422 = lshr i32 %9421, 4
  %9423 = trunc i32 %9422 to i8
  %9424 = and i8 %9423, 1
  %9425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9424, i8* %9425, align 1
  %9426 = icmp eq i32 %9409, 0
  %9427 = zext i1 %9426 to i8
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9427, i8* %9428, align 1
  %9429 = lshr i32 %9409, 31
  %9430 = trunc i32 %9429 to i8
  %9431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9430, i8* %9431, align 1
  %9432 = lshr i32 %9403, 31
  %9433 = lshr i32 %9405, 31
  %9434 = xor i32 %9433, %9432
  %9435 = xor i32 %9429, %9432
  %9436 = add i32 %9435, %9434
  %9437 = icmp eq i32 %9436, 2
  %9438 = zext i1 %9437 to i8
  %9439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9438, i8* %9439, align 1
  store %struct.Memory* %loadMem_489702, %struct.Memory** %MEMORY
  %loadMem_489704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9441 = getelementptr inbounds %struct.GPR, %struct.GPR* %9440, i32 0, i32 33
  %9442 = getelementptr inbounds %struct.Reg, %struct.Reg* %9441, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %9442 to i64*
  %9443 = load i64, i64* %PC.i583
  %9444 = add i64 %9443, 16
  %9445 = load i64, i64* %PC.i583
  %9446 = add i64 %9445, 6
  %9447 = load i64, i64* %PC.i583
  %9448 = add i64 %9447, 6
  store i64 %9448, i64* %PC.i583
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9450 = load i8, i8* %9449, align 1
  %9451 = icmp ne i8 %9450, 0
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9453 = load i8, i8* %9452, align 1
  %9454 = icmp ne i8 %9453, 0
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9456 = load i8, i8* %9455, align 1
  %9457 = icmp ne i8 %9456, 0
  %9458 = xor i1 %9454, %9457
  %9459 = or i1 %9451, %9458
  %9460 = zext i1 %9459 to i8
  store i8 %9460, i8* %BRANCH_TAKEN, align 1
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9462 = select i1 %9459, i64 %9444, i64 %9446
  store i64 %9462, i64* %9461, align 8
  store %struct.Memory* %loadMem_489704, %struct.Memory** %MEMORY
  %loadBr_489704 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489704 = icmp eq i8 %loadBr_489704, 1
  br i1 %cmpBr_489704, label %block_.L_489714, label %block_48970a

block_48970a:                                     ; preds = %block_.L_4896ce
  %loadMem_48970a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9464 = getelementptr inbounds %struct.GPR, %struct.GPR* %9463, i32 0, i32 33
  %9465 = getelementptr inbounds %struct.Reg, %struct.Reg* %9464, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %9465 to i64*
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9467 = getelementptr inbounds %struct.GPR, %struct.GPR* %9466, i32 0, i32 1
  %9468 = getelementptr inbounds %struct.Reg, %struct.Reg* %9467, i32 0, i32 0
  %EAX.i581 = bitcast %union.anon* %9468 to i32*
  %9469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9470 = getelementptr inbounds %struct.GPR, %struct.GPR* %9469, i32 0, i32 1
  %9471 = getelementptr inbounds %struct.Reg, %struct.Reg* %9470, i32 0, i32 0
  %RAX.i582 = bitcast %union.anon* %9471 to i64*
  %9472 = load i64, i64* %RAX.i582
  %9473 = load i32, i32* %EAX.i581
  %9474 = zext i32 %9473 to i64
  %9475 = load i64, i64* %PC.i580
  %9476 = add i64 %9475, 2
  store i64 %9476, i64* %PC.i580
  %9477 = xor i64 %9474, %9472
  %9478 = trunc i64 %9477 to i32
  %9479 = and i64 %9477, 4294967295
  store i64 %9479, i64* %RAX.i582, align 8
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9480, align 1
  %9481 = and i32 %9478, 255
  %9482 = call i32 @llvm.ctpop.i32(i32 %9481)
  %9483 = trunc i32 %9482 to i8
  %9484 = and i8 %9483, 1
  %9485 = xor i8 %9484, 1
  %9486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9485, i8* %9486, align 1
  %9487 = icmp eq i32 %9478, 0
  %9488 = zext i1 %9487 to i8
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9488, i8* %9489, align 1
  %9490 = lshr i32 %9478, 31
  %9491 = trunc i32 %9490 to i8
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9491, i8* %9492, align 1
  %9493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9493, align 1
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9494, align 1
  store %struct.Memory* %loadMem_48970a, %struct.Memory** %MEMORY
  %loadMem_48970c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9496 = getelementptr inbounds %struct.GPR, %struct.GPR* %9495, i32 0, i32 33
  %9497 = getelementptr inbounds %struct.Reg, %struct.Reg* %9496, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %9497 to i64*
  %9498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9499 = getelementptr inbounds %struct.GPR, %struct.GPR* %9498, i32 0, i32 1
  %9500 = getelementptr inbounds %struct.Reg, %struct.Reg* %9499, i32 0, i32 0
  %EAX.i578 = bitcast %union.anon* %9500 to i32*
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9502 = getelementptr inbounds %struct.GPR, %struct.GPR* %9501, i32 0, i32 15
  %9503 = getelementptr inbounds %struct.Reg, %struct.Reg* %9502, i32 0, i32 0
  %RBP.i579 = bitcast %union.anon* %9503 to i64*
  %9504 = load i64, i64* %RBP.i579
  %9505 = sub i64 %9504, 96
  %9506 = load i32, i32* %EAX.i578
  %9507 = zext i32 %9506 to i64
  %9508 = load i64, i64* %PC.i577
  %9509 = add i64 %9508, 3
  store i64 %9509, i64* %PC.i577
  %9510 = inttoptr i64 %9505 to i32*
  store i32 %9506, i32* %9510
  store %struct.Memory* %loadMem_48970c, %struct.Memory** %MEMORY
  %loadMem_48970f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9512 = getelementptr inbounds %struct.GPR, %struct.GPR* %9511, i32 0, i32 33
  %9513 = getelementptr inbounds %struct.Reg, %struct.Reg* %9512, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %9513 to i64*
  %9514 = load i64, i64* %PC.i576
  %9515 = add i64 %9514, 58
  %9516 = load i64, i64* %PC.i576
  %9517 = add i64 %9516, 5
  store i64 %9517, i64* %PC.i576
  %9518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9515, i64* %9518, align 8
  store %struct.Memory* %loadMem_48970f, %struct.Memory** %MEMORY
  br label %block_.L_489749

block_.L_489714:                                  ; preds = %block_.L_4896ce
  %loadMem_489714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9520 = getelementptr inbounds %struct.GPR, %struct.GPR* %9519, i32 0, i32 33
  %9521 = getelementptr inbounds %struct.Reg, %struct.Reg* %9520, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %9521 to i64*
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9523 = getelementptr inbounds %struct.GPR, %struct.GPR* %9522, i32 0, i32 1
  %9524 = getelementptr inbounds %struct.Reg, %struct.Reg* %9523, i32 0, i32 0
  %RAX.i574 = bitcast %union.anon* %9524 to i64*
  %9525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9526 = getelementptr inbounds %struct.GPR, %struct.GPR* %9525, i32 0, i32 15
  %9527 = getelementptr inbounds %struct.Reg, %struct.Reg* %9526, i32 0, i32 0
  %RBP.i575 = bitcast %union.anon* %9527 to i64*
  %9528 = load i64, i64* %RBP.i575
  %9529 = sub i64 %9528, 28
  %9530 = load i64, i64* %PC.i573
  %9531 = add i64 %9530, 3
  store i64 %9531, i64* %PC.i573
  %9532 = inttoptr i64 %9529 to i32*
  %9533 = load i32, i32* %9532
  %9534 = zext i32 %9533 to i64
  store i64 %9534, i64* %RAX.i574, align 8
  store %struct.Memory* %loadMem_489714, %struct.Memory** %MEMORY
  %loadMem_489717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9536 = getelementptr inbounds %struct.GPR, %struct.GPR* %9535, i32 0, i32 33
  %9537 = getelementptr inbounds %struct.Reg, %struct.Reg* %9536, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %9537 to i64*
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9539 = getelementptr inbounds %struct.GPR, %struct.GPR* %9538, i32 0, i32 5
  %9540 = getelementptr inbounds %struct.Reg, %struct.Reg* %9539, i32 0, i32 0
  %RCX.i572 = bitcast %union.anon* %9540 to i64*
  %9541 = load i64, i64* %PC.i571
  %9542 = add i64 %9541, 8
  store i64 %9542, i64* %PC.i571
  %9543 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9543, i64* %RCX.i572, align 8
  store %struct.Memory* %loadMem_489717, %struct.Memory** %MEMORY
  %loadMem_48971f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9545 = getelementptr inbounds %struct.GPR, %struct.GPR* %9544, i32 0, i32 33
  %9546 = getelementptr inbounds %struct.Reg, %struct.Reg* %9545, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %9546 to i64*
  %9547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9548 = getelementptr inbounds %struct.GPR, %struct.GPR* %9547, i32 0, i32 5
  %9549 = getelementptr inbounds %struct.Reg, %struct.Reg* %9548, i32 0, i32 0
  %RCX.i570 = bitcast %union.anon* %9549 to i64*
  %9550 = load i64, i64* %RCX.i570
  %9551 = load i64, i64* %PC.i569
  %9552 = add i64 %9551, 7
  store i64 %9552, i64* %PC.i569
  %9553 = add i64 8504, %9550
  store i64 %9553, i64* %RCX.i570, align 8
  %9554 = icmp ult i64 %9553, %9550
  %9555 = icmp ult i64 %9553, 8504
  %9556 = or i1 %9554, %9555
  %9557 = zext i1 %9556 to i8
  %9558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9557, i8* %9558, align 1
  %9559 = trunc i64 %9553 to i32
  %9560 = and i32 %9559, 255
  %9561 = call i32 @llvm.ctpop.i32(i32 %9560)
  %9562 = trunc i32 %9561 to i8
  %9563 = and i8 %9562, 1
  %9564 = xor i8 %9563, 1
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9564, i8* %9565, align 1
  %9566 = xor i64 8504, %9550
  %9567 = xor i64 %9566, %9553
  %9568 = lshr i64 %9567, 4
  %9569 = trunc i64 %9568 to i8
  %9570 = and i8 %9569, 1
  %9571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9570, i8* %9571, align 1
  %9572 = icmp eq i64 %9553, 0
  %9573 = zext i1 %9572 to i8
  %9574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9573, i8* %9574, align 1
  %9575 = lshr i64 %9553, 63
  %9576 = trunc i64 %9575 to i8
  %9577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9576, i8* %9577, align 1
  %9578 = lshr i64 %9550, 63
  %9579 = xor i64 %9575, %9578
  %9580 = add i64 %9579, %9575
  %9581 = icmp eq i64 %9580, 2
  %9582 = zext i1 %9581 to i8
  %9583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9582, i8* %9583, align 1
  store %struct.Memory* %loadMem_48971f, %struct.Memory** %MEMORY
  %loadMem_489726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9585 = getelementptr inbounds %struct.GPR, %struct.GPR* %9584, i32 0, i32 33
  %9586 = getelementptr inbounds %struct.Reg, %struct.Reg* %9585, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %9586 to i64*
  %9587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9588 = getelementptr inbounds %struct.GPR, %struct.GPR* %9587, i32 0, i32 7
  %9589 = getelementptr inbounds %struct.Reg, %struct.Reg* %9588, i32 0, i32 0
  %RDX.i567 = bitcast %union.anon* %9589 to i64*
  %9590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9591 = getelementptr inbounds %struct.GPR, %struct.GPR* %9590, i32 0, i32 15
  %9592 = getelementptr inbounds %struct.Reg, %struct.Reg* %9591, i32 0, i32 0
  %RBP.i568 = bitcast %union.anon* %9592 to i64*
  %9593 = load i64, i64* %RBP.i568
  %9594 = sub i64 %9593, 32
  %9595 = load i64, i64* %PC.i566
  %9596 = add i64 %9595, 4
  store i64 %9596, i64* %PC.i566
  %9597 = inttoptr i64 %9594 to i32*
  %9598 = load i32, i32* %9597
  %9599 = sext i32 %9598 to i64
  store i64 %9599, i64* %RDX.i567, align 8
  store %struct.Memory* %loadMem_489726, %struct.Memory** %MEMORY
  %loadMem_48972a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9601 = getelementptr inbounds %struct.GPR, %struct.GPR* %9600, i32 0, i32 33
  %9602 = getelementptr inbounds %struct.Reg, %struct.Reg* %9601, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %9602 to i64*
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9604 = getelementptr inbounds %struct.GPR, %struct.GPR* %9603, i32 0, i32 7
  %9605 = getelementptr inbounds %struct.Reg, %struct.Reg* %9604, i32 0, i32 0
  %RDX.i565 = bitcast %union.anon* %9605 to i64*
  %9606 = load i64, i64* %RDX.i565
  %9607 = load i64, i64* %PC.i564
  %9608 = add i64 %9607, 4
  store i64 %9608, i64* %PC.i564
  %9609 = shl i64 %9606, 8
  %9610 = icmp slt i64 %9609, 0
  %9611 = shl i64 %9609, 1
  store i64 %9611, i64* %RDX.i565, align 8
  %9612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9613 = zext i1 %9610 to i8
  store i8 %9613, i8* %9612, align 1
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9615 = trunc i64 %9611 to i32
  store i8 1, i8* %9614, align 1
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9616, align 1
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9618 = icmp eq i64 %9611, 0
  %9619 = zext i1 %9618 to i8
  store i8 %9619, i8* %9617, align 1
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9621 = lshr i64 %9611, 63
  %9622 = trunc i64 %9621 to i8
  store i8 %9622, i8* %9620, align 1
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9623, align 1
  store %struct.Memory* %loadMem_48972a, %struct.Memory** %MEMORY
  %loadMem_48972e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9625 = getelementptr inbounds %struct.GPR, %struct.GPR* %9624, i32 0, i32 33
  %9626 = getelementptr inbounds %struct.Reg, %struct.Reg* %9625, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %9626 to i64*
  %9627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9628 = getelementptr inbounds %struct.GPR, %struct.GPR* %9627, i32 0, i32 5
  %9629 = getelementptr inbounds %struct.Reg, %struct.Reg* %9628, i32 0, i32 0
  %RCX.i562 = bitcast %union.anon* %9629 to i64*
  %9630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9631 = getelementptr inbounds %struct.GPR, %struct.GPR* %9630, i32 0, i32 7
  %9632 = getelementptr inbounds %struct.Reg, %struct.Reg* %9631, i32 0, i32 0
  %RDX.i563 = bitcast %union.anon* %9632 to i64*
  %9633 = load i64, i64* %RCX.i562
  %9634 = load i64, i64* %RDX.i563
  %9635 = load i64, i64* %PC.i561
  %9636 = add i64 %9635, 3
  store i64 %9636, i64* %PC.i561
  %9637 = add i64 %9634, %9633
  store i64 %9637, i64* %RCX.i562, align 8
  %9638 = icmp ult i64 %9637, %9633
  %9639 = icmp ult i64 %9637, %9634
  %9640 = or i1 %9638, %9639
  %9641 = zext i1 %9640 to i8
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9641, i8* %9642, align 1
  %9643 = trunc i64 %9637 to i32
  %9644 = and i32 %9643, 255
  %9645 = call i32 @llvm.ctpop.i32(i32 %9644)
  %9646 = trunc i32 %9645 to i8
  %9647 = and i8 %9646, 1
  %9648 = xor i8 %9647, 1
  %9649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9648, i8* %9649, align 1
  %9650 = xor i64 %9634, %9633
  %9651 = xor i64 %9650, %9637
  %9652 = lshr i64 %9651, 4
  %9653 = trunc i64 %9652 to i8
  %9654 = and i8 %9653, 1
  %9655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9654, i8* %9655, align 1
  %9656 = icmp eq i64 %9637, 0
  %9657 = zext i1 %9656 to i8
  %9658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9657, i8* %9658, align 1
  %9659 = lshr i64 %9637, 63
  %9660 = trunc i64 %9659 to i8
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9660, i8* %9661, align 1
  %9662 = lshr i64 %9633, 63
  %9663 = lshr i64 %9634, 63
  %9664 = xor i64 %9659, %9662
  %9665 = xor i64 %9659, %9663
  %9666 = add i64 %9664, %9665
  %9667 = icmp eq i64 %9666, 2
  %9668 = zext i1 %9667 to i8
  %9669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9668, i8* %9669, align 1
  store %struct.Memory* %loadMem_48972e, %struct.Memory** %MEMORY
  %loadMem_489731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9671 = getelementptr inbounds %struct.GPR, %struct.GPR* %9670, i32 0, i32 33
  %9672 = getelementptr inbounds %struct.Reg, %struct.Reg* %9671, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %9672 to i64*
  %9673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9674 = getelementptr inbounds %struct.GPR, %struct.GPR* %9673, i32 0, i32 7
  %9675 = getelementptr inbounds %struct.Reg, %struct.Reg* %9674, i32 0, i32 0
  %RDX.i559 = bitcast %union.anon* %9675 to i64*
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9677 = getelementptr inbounds %struct.GPR, %struct.GPR* %9676, i32 0, i32 15
  %9678 = getelementptr inbounds %struct.Reg, %struct.Reg* %9677, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %9678 to i64*
  %9679 = load i64, i64* %RBP.i560
  %9680 = sub i64 %9679, 36
  %9681 = load i64, i64* %PC.i558
  %9682 = add i64 %9681, 4
  store i64 %9682, i64* %PC.i558
  %9683 = inttoptr i64 %9680 to i32*
  %9684 = load i32, i32* %9683
  %9685 = sext i32 %9684 to i64
  store i64 %9685, i64* %RDX.i559, align 8
  store %struct.Memory* %loadMem_489731, %struct.Memory** %MEMORY
  %loadMem_489735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9687 = getelementptr inbounds %struct.GPR, %struct.GPR* %9686, i32 0, i32 33
  %9688 = getelementptr inbounds %struct.Reg, %struct.Reg* %9687, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %9688 to i64*
  %9689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9690 = getelementptr inbounds %struct.GPR, %struct.GPR* %9689, i32 0, i32 7
  %9691 = getelementptr inbounds %struct.Reg, %struct.Reg* %9690, i32 0, i32 0
  %RDX.i557 = bitcast %union.anon* %9691 to i64*
  %9692 = load i64, i64* %RDX.i557
  %9693 = load i64, i64* %PC.i556
  %9694 = add i64 %9693, 4
  store i64 %9694, i64* %PC.i556
  %9695 = shl i64 %9692, 4
  %9696 = icmp slt i64 %9695, 0
  %9697 = shl i64 %9695, 1
  store i64 %9697, i64* %RDX.i557, align 8
  %9698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9699 = zext i1 %9696 to i8
  store i8 %9699, i8* %9698, align 1
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9701 = trunc i64 %9697 to i32
  %9702 = and i32 %9701, 254
  %9703 = call i32 @llvm.ctpop.i32(i32 %9702)
  %9704 = trunc i32 %9703 to i8
  %9705 = and i8 %9704, 1
  %9706 = xor i8 %9705, 1
  store i8 %9706, i8* %9700, align 1
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9707, align 1
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9709 = icmp eq i64 %9697, 0
  %9710 = zext i1 %9709 to i8
  store i8 %9710, i8* %9708, align 1
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9712 = lshr i64 %9697, 63
  %9713 = trunc i64 %9712 to i8
  store i8 %9713, i8* %9711, align 1
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9714, align 1
  store %struct.Memory* %loadMem_489735, %struct.Memory** %MEMORY
  %loadMem_489739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9716 = getelementptr inbounds %struct.GPR, %struct.GPR* %9715, i32 0, i32 33
  %9717 = getelementptr inbounds %struct.Reg, %struct.Reg* %9716, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %9717 to i64*
  %9718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9719 = getelementptr inbounds %struct.GPR, %struct.GPR* %9718, i32 0, i32 5
  %9720 = getelementptr inbounds %struct.Reg, %struct.Reg* %9719, i32 0, i32 0
  %RCX.i554 = bitcast %union.anon* %9720 to i64*
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9722 = getelementptr inbounds %struct.GPR, %struct.GPR* %9721, i32 0, i32 7
  %9723 = getelementptr inbounds %struct.Reg, %struct.Reg* %9722, i32 0, i32 0
  %RDX.i555 = bitcast %union.anon* %9723 to i64*
  %9724 = load i64, i64* %RCX.i554
  %9725 = load i64, i64* %RDX.i555
  %9726 = load i64, i64* %PC.i553
  %9727 = add i64 %9726, 3
  store i64 %9727, i64* %PC.i553
  %9728 = add i64 %9725, %9724
  store i64 %9728, i64* %RCX.i554, align 8
  %9729 = icmp ult i64 %9728, %9724
  %9730 = icmp ult i64 %9728, %9725
  %9731 = or i1 %9729, %9730
  %9732 = zext i1 %9731 to i8
  %9733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9732, i8* %9733, align 1
  %9734 = trunc i64 %9728 to i32
  %9735 = and i32 %9734, 255
  %9736 = call i32 @llvm.ctpop.i32(i32 %9735)
  %9737 = trunc i32 %9736 to i8
  %9738 = and i8 %9737, 1
  %9739 = xor i8 %9738, 1
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9739, i8* %9740, align 1
  %9741 = xor i64 %9725, %9724
  %9742 = xor i64 %9741, %9728
  %9743 = lshr i64 %9742, 4
  %9744 = trunc i64 %9743 to i8
  %9745 = and i8 %9744, 1
  %9746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9745, i8* %9746, align 1
  %9747 = icmp eq i64 %9728, 0
  %9748 = zext i1 %9747 to i8
  %9749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9748, i8* %9749, align 1
  %9750 = lshr i64 %9728, 63
  %9751 = trunc i64 %9750 to i8
  %9752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9751, i8* %9752, align 1
  %9753 = lshr i64 %9724, 63
  %9754 = lshr i64 %9725, 63
  %9755 = xor i64 %9750, %9753
  %9756 = xor i64 %9750, %9754
  %9757 = add i64 %9755, %9756
  %9758 = icmp eq i64 %9757, 2
  %9759 = zext i1 %9758 to i8
  %9760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9759, i8* %9760, align 1
  store %struct.Memory* %loadMem_489739, %struct.Memory** %MEMORY
  %loadMem_48973c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9762 = getelementptr inbounds %struct.GPR, %struct.GPR* %9761, i32 0, i32 33
  %9763 = getelementptr inbounds %struct.Reg, %struct.Reg* %9762, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %9763 to i64*
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9765 = getelementptr inbounds %struct.GPR, %struct.GPR* %9764, i32 0, i32 7
  %9766 = getelementptr inbounds %struct.Reg, %struct.Reg* %9765, i32 0, i32 0
  %RDX.i551 = bitcast %union.anon* %9766 to i64*
  %9767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9768 = getelementptr inbounds %struct.GPR, %struct.GPR* %9767, i32 0, i32 15
  %9769 = getelementptr inbounds %struct.Reg, %struct.Reg* %9768, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %9769 to i64*
  %9770 = load i64, i64* %RBP.i552
  %9771 = sub i64 %9770, 40
  %9772 = load i64, i64* %PC.i550
  %9773 = add i64 %9772, 4
  store i64 %9773, i64* %PC.i550
  %9774 = inttoptr i64 %9771 to i32*
  %9775 = load i32, i32* %9774
  %9776 = sext i32 %9775 to i64
  store i64 %9776, i64* %RDX.i551, align 8
  store %struct.Memory* %loadMem_48973c, %struct.Memory** %MEMORY
  %loadMem_489740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9778 = getelementptr inbounds %struct.GPR, %struct.GPR* %9777, i32 0, i32 33
  %9779 = getelementptr inbounds %struct.Reg, %struct.Reg* %9778, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %9779 to i64*
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9781 = getelementptr inbounds %struct.GPR, %struct.GPR* %9780, i32 0, i32 5
  %9782 = getelementptr inbounds %struct.Reg, %struct.Reg* %9781, i32 0, i32 0
  %RCX.i547 = bitcast %union.anon* %9782 to i64*
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9784 = getelementptr inbounds %struct.GPR, %struct.GPR* %9783, i32 0, i32 7
  %9785 = getelementptr inbounds %struct.Reg, %struct.Reg* %9784, i32 0, i32 0
  %RDX.i548 = bitcast %union.anon* %9785 to i64*
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9787 = getelementptr inbounds %struct.GPR, %struct.GPR* %9786, i32 0, i32 9
  %9788 = getelementptr inbounds %struct.Reg, %struct.Reg* %9787, i32 0, i32 0
  %RSI.i549 = bitcast %union.anon* %9788 to i64*
  %9789 = load i64, i64* %RCX.i547
  %9790 = load i64, i64* %RDX.i548
  %9791 = mul i64 %9790, 2
  %9792 = add i64 %9791, %9789
  %9793 = load i64, i64* %PC.i546
  %9794 = add i64 %9793, 4
  store i64 %9794, i64* %PC.i546
  %9795 = inttoptr i64 %9792 to i16*
  %9796 = load i16, i16* %9795
  %9797 = zext i16 %9796 to i64
  store i64 %9797, i64* %RSI.i549, align 8
  store %struct.Memory* %loadMem_489740, %struct.Memory** %MEMORY
  %loadMem_489744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9799 = getelementptr inbounds %struct.GPR, %struct.GPR* %9798, i32 0, i32 33
  %9800 = getelementptr inbounds %struct.Reg, %struct.Reg* %9799, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %9800 to i64*
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9802 = getelementptr inbounds %struct.GPR, %struct.GPR* %9801, i32 0, i32 9
  %9803 = getelementptr inbounds %struct.Reg, %struct.Reg* %9802, i32 0, i32 0
  %ESI.i544 = bitcast %union.anon* %9803 to i32*
  %9804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9805 = getelementptr inbounds %struct.GPR, %struct.GPR* %9804, i32 0, i32 1
  %9806 = getelementptr inbounds %struct.Reg, %struct.Reg* %9805, i32 0, i32 0
  %RAX.i545 = bitcast %union.anon* %9806 to i64*
  %9807 = load i64, i64* %RAX.i545
  %9808 = load i32, i32* %ESI.i544
  %9809 = zext i32 %9808 to i64
  %9810 = load i64, i64* %PC.i543
  %9811 = add i64 %9810, 2
  store i64 %9811, i64* %PC.i543
  %9812 = trunc i64 %9807 to i32
  %9813 = add i32 %9808, %9812
  %9814 = zext i32 %9813 to i64
  store i64 %9814, i64* %RAX.i545, align 8
  %9815 = icmp ult i32 %9813, %9812
  %9816 = icmp ult i32 %9813, %9808
  %9817 = or i1 %9815, %9816
  %9818 = zext i1 %9817 to i8
  %9819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9818, i8* %9819, align 1
  %9820 = and i32 %9813, 255
  %9821 = call i32 @llvm.ctpop.i32(i32 %9820)
  %9822 = trunc i32 %9821 to i8
  %9823 = and i8 %9822, 1
  %9824 = xor i8 %9823, 1
  %9825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9824, i8* %9825, align 1
  %9826 = xor i64 %9809, %9807
  %9827 = trunc i64 %9826 to i32
  %9828 = xor i32 %9827, %9813
  %9829 = lshr i32 %9828, 4
  %9830 = trunc i32 %9829 to i8
  %9831 = and i8 %9830, 1
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9831, i8* %9832, align 1
  %9833 = icmp eq i32 %9813, 0
  %9834 = zext i1 %9833 to i8
  %9835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9834, i8* %9835, align 1
  %9836 = lshr i32 %9813, 31
  %9837 = trunc i32 %9836 to i8
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9837, i8* %9838, align 1
  %9839 = lshr i32 %9812, 31
  %9840 = lshr i32 %9808, 31
  %9841 = xor i32 %9836, %9839
  %9842 = xor i32 %9836, %9840
  %9843 = add i32 %9841, %9842
  %9844 = icmp eq i32 %9843, 2
  %9845 = zext i1 %9844 to i8
  %9846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9845, i8* %9846, align 1
  store %struct.Memory* %loadMem_489744, %struct.Memory** %MEMORY
  %loadMem_489746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9848 = getelementptr inbounds %struct.GPR, %struct.GPR* %9847, i32 0, i32 33
  %9849 = getelementptr inbounds %struct.Reg, %struct.Reg* %9848, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %9849 to i64*
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9851 = getelementptr inbounds %struct.GPR, %struct.GPR* %9850, i32 0, i32 1
  %9852 = getelementptr inbounds %struct.Reg, %struct.Reg* %9851, i32 0, i32 0
  %EAX.i541 = bitcast %union.anon* %9852 to i32*
  %9853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9854 = getelementptr inbounds %struct.GPR, %struct.GPR* %9853, i32 0, i32 15
  %9855 = getelementptr inbounds %struct.Reg, %struct.Reg* %9854, i32 0, i32 0
  %RBP.i542 = bitcast %union.anon* %9855 to i64*
  %9856 = load i64, i64* %RBP.i542
  %9857 = sub i64 %9856, 96
  %9858 = load i32, i32* %EAX.i541
  %9859 = zext i32 %9858 to i64
  %9860 = load i64, i64* %PC.i540
  %9861 = add i64 %9860, 3
  store i64 %9861, i64* %PC.i540
  %9862 = inttoptr i64 %9857 to i32*
  store i32 %9858, i32* %9862
  store %struct.Memory* %loadMem_489746, %struct.Memory** %MEMORY
  br label %block_.L_489749

block_.L_489749:                                  ; preds = %block_.L_489714, %block_48970a
  %loadMem_489749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9864 = getelementptr inbounds %struct.GPR, %struct.GPR* %9863, i32 0, i32 33
  %9865 = getelementptr inbounds %struct.Reg, %struct.Reg* %9864, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %9865 to i64*
  %9866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9867 = getelementptr inbounds %struct.GPR, %struct.GPR* %9866, i32 0, i32 1
  %9868 = getelementptr inbounds %struct.Reg, %struct.Reg* %9867, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %9868 to i64*
  %9869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9870 = getelementptr inbounds %struct.GPR, %struct.GPR* %9869, i32 0, i32 15
  %9871 = getelementptr inbounds %struct.Reg, %struct.Reg* %9870, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %9871 to i64*
  %9872 = load i64, i64* %RBP.i539
  %9873 = sub i64 %9872, 96
  %9874 = load i64, i64* %PC.i537
  %9875 = add i64 %9874, 3
  store i64 %9875, i64* %PC.i537
  %9876 = inttoptr i64 %9873 to i32*
  %9877 = load i32, i32* %9876
  %9878 = zext i32 %9877 to i64
  store i64 %9878, i64* %RAX.i538, align 8
  store %struct.Memory* %loadMem_489749, %struct.Memory** %MEMORY
  %loadMem_48974c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9880 = getelementptr inbounds %struct.GPR, %struct.GPR* %9879, i32 0, i32 33
  %9881 = getelementptr inbounds %struct.Reg, %struct.Reg* %9880, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %9881 to i64*
  %9882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9883 = getelementptr inbounds %struct.GPR, %struct.GPR* %9882, i32 0, i32 1
  %9884 = getelementptr inbounds %struct.Reg, %struct.Reg* %9883, i32 0, i32 0
  %EAX.i535 = bitcast %union.anon* %9884 to i32*
  %9885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9886 = getelementptr inbounds %struct.GPR, %struct.GPR* %9885, i32 0, i32 15
  %9887 = getelementptr inbounds %struct.Reg, %struct.Reg* %9886, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %9887 to i64*
  %9888 = load i64, i64* %RBP.i536
  %9889 = sub i64 %9888, 92
  %9890 = load i32, i32* %EAX.i535
  %9891 = zext i32 %9890 to i64
  %9892 = load i64, i64* %PC.i534
  %9893 = add i64 %9892, 3
  store i64 %9893, i64* %PC.i534
  %9894 = inttoptr i64 %9889 to i32*
  store i32 %9890, i32* %9894
  store %struct.Memory* %loadMem_48974c, %struct.Memory** %MEMORY
  br label %block_.L_48974f

block_.L_48974f:                                  ; preds = %block_.L_489749, %block_4896b8
  %loadMem_48974f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9896 = getelementptr inbounds %struct.GPR, %struct.GPR* %9895, i32 0, i32 33
  %9897 = getelementptr inbounds %struct.Reg, %struct.Reg* %9896, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %9897 to i64*
  %9898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9899 = getelementptr inbounds %struct.GPR, %struct.GPR* %9898, i32 0, i32 1
  %9900 = getelementptr inbounds %struct.Reg, %struct.Reg* %9899, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %9900 to i64*
  %9901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9902 = getelementptr inbounds %struct.GPR, %struct.GPR* %9901, i32 0, i32 15
  %9903 = getelementptr inbounds %struct.Reg, %struct.Reg* %9902, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %9903 to i64*
  %9904 = load i64, i64* %RBP.i533
  %9905 = sub i64 %9904, 92
  %9906 = load i64, i64* %PC.i531
  %9907 = add i64 %9906, 3
  store i64 %9907, i64* %PC.i531
  %9908 = inttoptr i64 %9905 to i32*
  %9909 = load i32, i32* %9908
  %9910 = zext i32 %9909 to i64
  store i64 %9910, i64* %RAX.i532, align 8
  store %struct.Memory* %loadMem_48974f, %struct.Memory** %MEMORY
  %loadMem_489752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9912 = getelementptr inbounds %struct.GPR, %struct.GPR* %9911, i32 0, i32 33
  %9913 = getelementptr inbounds %struct.Reg, %struct.Reg* %9912, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %9913 to i64*
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9915 = getelementptr inbounds %struct.GPR, %struct.GPR* %9914, i32 0, i32 5
  %9916 = getelementptr inbounds %struct.Reg, %struct.Reg* %9915, i32 0, i32 0
  %ECX.i529 = bitcast %union.anon* %9916 to i32*
  %9917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9918 = getelementptr inbounds %struct.GPR, %struct.GPR* %9917, i32 0, i32 5
  %9919 = getelementptr inbounds %struct.Reg, %struct.Reg* %9918, i32 0, i32 0
  %RCX.i530 = bitcast %union.anon* %9919 to i64*
  %9920 = load i64, i64* %RCX.i530
  %9921 = load i32, i32* %ECX.i529
  %9922 = zext i32 %9921 to i64
  %9923 = load i64, i64* %PC.i528
  %9924 = add i64 %9923, 2
  store i64 %9924, i64* %PC.i528
  %9925 = xor i64 %9922, %9920
  %9926 = trunc i64 %9925 to i32
  %9927 = and i64 %9925, 4294967295
  store i64 %9927, i64* %RCX.i530, align 8
  %9928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9928, align 1
  %9929 = and i32 %9926, 255
  %9930 = call i32 @llvm.ctpop.i32(i32 %9929)
  %9931 = trunc i32 %9930 to i8
  %9932 = and i8 %9931, 1
  %9933 = xor i8 %9932, 1
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9933, i8* %9934, align 1
  %9935 = icmp eq i32 %9926, 0
  %9936 = zext i1 %9935 to i8
  %9937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9936, i8* %9937, align 1
  %9938 = lshr i32 %9926, 31
  %9939 = trunc i32 %9938 to i8
  %9940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9939, i8* %9940, align 1
  %9941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9941, align 1
  %9942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9942, align 1
  store %struct.Memory* %loadMem_489752, %struct.Memory** %MEMORY
  %loadMem_489754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9944 = getelementptr inbounds %struct.GPR, %struct.GPR* %9943, i32 0, i32 33
  %9945 = getelementptr inbounds %struct.Reg, %struct.Reg* %9944, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %9945 to i64*
  %9946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9947 = getelementptr inbounds %struct.GPR, %struct.GPR* %9946, i32 0, i32 1
  %9948 = getelementptr inbounds %struct.Reg, %struct.Reg* %9947, i32 0, i32 0
  %AX.i526 = bitcast %union.anon* %9948 to i16*
  %9949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9950 = getelementptr inbounds %struct.GPR, %struct.GPR* %9949, i32 0, i32 7
  %9951 = getelementptr inbounds %struct.Reg, %struct.Reg* %9950, i32 0, i32 0
  %DX.i527 = bitcast %union.anon* %9951 to i16*
  %9952 = load i16, i16* %AX.i526
  %9953 = zext i16 %9952 to i64
  %9954 = load i64, i64* %PC.i525
  %9955 = add i64 %9954, 3
  store i64 %9955, i64* %PC.i525
  store i16 %9952, i16* %DX.i527, align 2
  store %struct.Memory* %loadMem_489754, %struct.Memory** %MEMORY
  %loadMem_489757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9957 = getelementptr inbounds %struct.GPR, %struct.GPR* %9956, i32 0, i32 33
  %9958 = getelementptr inbounds %struct.Reg, %struct.Reg* %9957, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %9958 to i64*
  %9959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9960 = getelementptr inbounds %struct.GPR, %struct.GPR* %9959, i32 0, i32 9
  %9961 = getelementptr inbounds %struct.Reg, %struct.Reg* %9960, i32 0, i32 0
  %RSI.i524 = bitcast %union.anon* %9961 to i64*
  %9962 = load i64, i64* %PC.i523
  %9963 = add i64 %9962, 8
  store i64 %9963, i64* %PC.i523
  %9964 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %9964, i64* %RSI.i524, align 8
  store %struct.Memory* %loadMem_489757, %struct.Memory** %MEMORY
  %loadMem_48975f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9966 = getelementptr inbounds %struct.GPR, %struct.GPR* %9965, i32 0, i32 33
  %9967 = getelementptr inbounds %struct.Reg, %struct.Reg* %9966, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %9967 to i64*
  %9968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9969 = getelementptr inbounds %struct.GPR, %struct.GPR* %9968, i32 0, i32 9
  %9970 = getelementptr inbounds %struct.Reg, %struct.Reg* %9969, i32 0, i32 0
  %RSI.i522 = bitcast %union.anon* %9970 to i64*
  %9971 = load i64, i64* %RSI.i522
  %9972 = add i64 %9971, 6464
  %9973 = load i64, i64* %PC.i521
  %9974 = add i64 %9973, 7
  store i64 %9974, i64* %PC.i521
  %9975 = inttoptr i64 %9972 to i64*
  %9976 = load i64, i64* %9975
  store i64 %9976, i64* %RSI.i522, align 8
  store %struct.Memory* %loadMem_48975f, %struct.Memory** %MEMORY
  %loadMem_489766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9978 = getelementptr inbounds %struct.GPR, %struct.GPR* %9977, i32 0, i32 33
  %9979 = getelementptr inbounds %struct.Reg, %struct.Reg* %9978, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %9979 to i64*
  %9980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9981 = getelementptr inbounds %struct.GPR, %struct.GPR* %9980, i32 0, i32 9
  %9982 = getelementptr inbounds %struct.Reg, %struct.Reg* %9981, i32 0, i32 0
  %RSI.i520 = bitcast %union.anon* %9982 to i64*
  %9983 = load i64, i64* %RSI.i520
  %9984 = load i64, i64* %PC.i519
  %9985 = add i64 %9984, 3
  store i64 %9985, i64* %PC.i519
  %9986 = inttoptr i64 %9983 to i64*
  %9987 = load i64, i64* %9986
  store i64 %9987, i64* %RSI.i520, align 8
  store %struct.Memory* %loadMem_489766, %struct.Memory** %MEMORY
  %loadMem_489769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9989 = getelementptr inbounds %struct.GPR, %struct.GPR* %9988, i32 0, i32 33
  %9990 = getelementptr inbounds %struct.Reg, %struct.Reg* %9989, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %9990 to i64*
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9992 = getelementptr inbounds %struct.GPR, %struct.GPR* %9991, i32 0, i32 1
  %9993 = getelementptr inbounds %struct.Reg, %struct.Reg* %9992, i32 0, i32 0
  %RAX.i517 = bitcast %union.anon* %9993 to i64*
  %9994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9995 = getelementptr inbounds %struct.GPR, %struct.GPR* %9994, i32 0, i32 15
  %9996 = getelementptr inbounds %struct.Reg, %struct.Reg* %9995, i32 0, i32 0
  %RBP.i518 = bitcast %union.anon* %9996 to i64*
  %9997 = load i64, i64* %RBP.i518
  %9998 = sub i64 %9997, 52
  %9999 = load i64, i64* %PC.i516
  %10000 = add i64 %9999, 3
  store i64 %10000, i64* %PC.i516
  %10001 = inttoptr i64 %9998 to i32*
  %10002 = load i32, i32* %10001
  %10003 = zext i32 %10002 to i64
  store i64 %10003, i64* %RAX.i517, align 8
  store %struct.Memory* %loadMem_489769, %struct.Memory** %MEMORY
  %loadMem_48976c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10005 = getelementptr inbounds %struct.GPR, %struct.GPR* %10004, i32 0, i32 33
  %10006 = getelementptr inbounds %struct.Reg, %struct.Reg* %10005, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %10006 to i64*
  %10007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10008 = getelementptr inbounds %struct.GPR, %struct.GPR* %10007, i32 0, i32 1
  %10009 = getelementptr inbounds %struct.Reg, %struct.Reg* %10008, i32 0, i32 0
  %RAX.i514 = bitcast %union.anon* %10009 to i64*
  %10010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10011 = getelementptr inbounds %struct.GPR, %struct.GPR* %10010, i32 0, i32 15
  %10012 = getelementptr inbounds %struct.Reg, %struct.Reg* %10011, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %10012 to i64*
  %10013 = load i64, i64* %RAX.i514
  %10014 = load i64, i64* %RBP.i515
  %10015 = sub i64 %10014, 40
  %10016 = load i64, i64* %PC.i513
  %10017 = add i64 %10016, 3
  store i64 %10017, i64* %PC.i513
  %10018 = trunc i64 %10013 to i32
  %10019 = inttoptr i64 %10015 to i32*
  %10020 = load i32, i32* %10019
  %10021 = add i32 %10020, %10018
  %10022 = zext i32 %10021 to i64
  store i64 %10022, i64* %RAX.i514, align 8
  %10023 = icmp ult i32 %10021, %10018
  %10024 = icmp ult i32 %10021, %10020
  %10025 = or i1 %10023, %10024
  %10026 = zext i1 %10025 to i8
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10026, i8* %10027, align 1
  %10028 = and i32 %10021, 255
  %10029 = call i32 @llvm.ctpop.i32(i32 %10028)
  %10030 = trunc i32 %10029 to i8
  %10031 = and i8 %10030, 1
  %10032 = xor i8 %10031, 1
  %10033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10032, i8* %10033, align 1
  %10034 = xor i32 %10020, %10018
  %10035 = xor i32 %10034, %10021
  %10036 = lshr i32 %10035, 4
  %10037 = trunc i32 %10036 to i8
  %10038 = and i8 %10037, 1
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10038, i8* %10039, align 1
  %10040 = icmp eq i32 %10021, 0
  %10041 = zext i1 %10040 to i8
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10041, i8* %10042, align 1
  %10043 = lshr i32 %10021, 31
  %10044 = trunc i32 %10043 to i8
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10044, i8* %10045, align 1
  %10046 = lshr i32 %10018, 31
  %10047 = lshr i32 %10020, 31
  %10048 = xor i32 %10043, %10046
  %10049 = xor i32 %10043, %10047
  %10050 = add i32 %10048, %10049
  %10051 = icmp eq i32 %10050, 2
  %10052 = zext i1 %10051 to i8
  %10053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10052, i8* %10053, align 1
  store %struct.Memory* %loadMem_48976c, %struct.Memory** %MEMORY
  %loadMem_48976f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10055 = getelementptr inbounds %struct.GPR, %struct.GPR* %10054, i32 0, i32 33
  %10056 = getelementptr inbounds %struct.Reg, %struct.Reg* %10055, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %10056 to i64*
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10058 = getelementptr inbounds %struct.GPR, %struct.GPR* %10057, i32 0, i32 1
  %10059 = getelementptr inbounds %struct.Reg, %struct.Reg* %10058, i32 0, i32 0
  %EAX.i511 = bitcast %union.anon* %10059 to i32*
  %10060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10061 = getelementptr inbounds %struct.GPR, %struct.GPR* %10060, i32 0, i32 11
  %10062 = getelementptr inbounds %struct.Reg, %struct.Reg* %10061, i32 0, i32 0
  %RDI.i512 = bitcast %union.anon* %10062 to i64*
  %10063 = load i32, i32* %EAX.i511
  %10064 = zext i32 %10063 to i64
  %10065 = load i64, i64* %PC.i510
  %10066 = add i64 %10065, 3
  store i64 %10066, i64* %PC.i510
  %10067 = shl i64 %10064, 32
  %10068 = ashr exact i64 %10067, 32
  store i64 %10068, i64* %RDI.i512, align 8
  store %struct.Memory* %loadMem_48976f, %struct.Memory** %MEMORY
  %loadMem_489772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10070 = getelementptr inbounds %struct.GPR, %struct.GPR* %10069, i32 0, i32 33
  %10071 = getelementptr inbounds %struct.Reg, %struct.Reg* %10070, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %10071 to i64*
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 9
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %RSI.i508 = bitcast %union.anon* %10074 to i64*
  %10075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10076 = getelementptr inbounds %struct.GPR, %struct.GPR* %10075, i32 0, i32 11
  %10077 = getelementptr inbounds %struct.Reg, %struct.Reg* %10076, i32 0, i32 0
  %RDI.i509 = bitcast %union.anon* %10077 to i64*
  %10078 = load i64, i64* %RSI.i508
  %10079 = load i64, i64* %RDI.i509
  %10080 = mul i64 %10079, 8
  %10081 = add i64 %10080, %10078
  %10082 = load i64, i64* %PC.i507
  %10083 = add i64 %10082, 4
  store i64 %10083, i64* %PC.i507
  %10084 = inttoptr i64 %10081 to i64*
  %10085 = load i64, i64* %10084
  store i64 %10085, i64* %RSI.i508, align 8
  store %struct.Memory* %loadMem_489772, %struct.Memory** %MEMORY
  %loadMem_489776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10087 = getelementptr inbounds %struct.GPR, %struct.GPR* %10086, i32 0, i32 33
  %10088 = getelementptr inbounds %struct.Reg, %struct.Reg* %10087, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %10088 to i64*
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10090 = getelementptr inbounds %struct.GPR, %struct.GPR* %10089, i32 0, i32 1
  %10091 = getelementptr inbounds %struct.Reg, %struct.Reg* %10090, i32 0, i32 0
  %RAX.i505 = bitcast %union.anon* %10091 to i64*
  %10092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10093 = getelementptr inbounds %struct.GPR, %struct.GPR* %10092, i32 0, i32 15
  %10094 = getelementptr inbounds %struct.Reg, %struct.Reg* %10093, i32 0, i32 0
  %RBP.i506 = bitcast %union.anon* %10094 to i64*
  %10095 = load i64, i64* %RBP.i506
  %10096 = sub i64 %10095, 48
  %10097 = load i64, i64* %PC.i504
  %10098 = add i64 %10097, 3
  store i64 %10098, i64* %PC.i504
  %10099 = inttoptr i64 %10096 to i32*
  %10100 = load i32, i32* %10099
  %10101 = zext i32 %10100 to i64
  store i64 %10101, i64* %RAX.i505, align 8
  store %struct.Memory* %loadMem_489776, %struct.Memory** %MEMORY
  %loadMem_489779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10103 = getelementptr inbounds %struct.GPR, %struct.GPR* %10102, i32 0, i32 33
  %10104 = getelementptr inbounds %struct.Reg, %struct.Reg* %10103, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %10104 to i64*
  %10105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10106 = getelementptr inbounds %struct.GPR, %struct.GPR* %10105, i32 0, i32 1
  %10107 = getelementptr inbounds %struct.Reg, %struct.Reg* %10106, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %10107 to i64*
  %10108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10109 = getelementptr inbounds %struct.GPR, %struct.GPR* %10108, i32 0, i32 15
  %10110 = getelementptr inbounds %struct.Reg, %struct.Reg* %10109, i32 0, i32 0
  %RBP.i503 = bitcast %union.anon* %10110 to i64*
  %10111 = load i64, i64* %RAX.i502
  %10112 = load i64, i64* %RBP.i503
  %10113 = sub i64 %10112, 36
  %10114 = load i64, i64* %PC.i501
  %10115 = add i64 %10114, 3
  store i64 %10115, i64* %PC.i501
  %10116 = trunc i64 %10111 to i32
  %10117 = inttoptr i64 %10113 to i32*
  %10118 = load i32, i32* %10117
  %10119 = add i32 %10118, %10116
  %10120 = zext i32 %10119 to i64
  store i64 %10120, i64* %RAX.i502, align 8
  %10121 = icmp ult i32 %10119, %10116
  %10122 = icmp ult i32 %10119, %10118
  %10123 = or i1 %10121, %10122
  %10124 = zext i1 %10123 to i8
  %10125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10124, i8* %10125, align 1
  %10126 = and i32 %10119, 255
  %10127 = call i32 @llvm.ctpop.i32(i32 %10126)
  %10128 = trunc i32 %10127 to i8
  %10129 = and i8 %10128, 1
  %10130 = xor i8 %10129, 1
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10130, i8* %10131, align 1
  %10132 = xor i32 %10118, %10116
  %10133 = xor i32 %10132, %10119
  %10134 = lshr i32 %10133, 4
  %10135 = trunc i32 %10134 to i8
  %10136 = and i8 %10135, 1
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10136, i8* %10137, align 1
  %10138 = icmp eq i32 %10119, 0
  %10139 = zext i1 %10138 to i8
  %10140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10139, i8* %10140, align 1
  %10141 = lshr i32 %10119, 31
  %10142 = trunc i32 %10141 to i8
  %10143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10142, i8* %10143, align 1
  %10144 = lshr i32 %10116, 31
  %10145 = lshr i32 %10118, 31
  %10146 = xor i32 %10141, %10144
  %10147 = xor i32 %10141, %10145
  %10148 = add i32 %10146, %10147
  %10149 = icmp eq i32 %10148, 2
  %10150 = zext i1 %10149 to i8
  %10151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10150, i8* %10151, align 1
  store %struct.Memory* %loadMem_489779, %struct.Memory** %MEMORY
  %loadMem_48977c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10153 = getelementptr inbounds %struct.GPR, %struct.GPR* %10152, i32 0, i32 33
  %10154 = getelementptr inbounds %struct.Reg, %struct.Reg* %10153, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %10154 to i64*
  %10155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10156 = getelementptr inbounds %struct.GPR, %struct.GPR* %10155, i32 0, i32 1
  %10157 = getelementptr inbounds %struct.Reg, %struct.Reg* %10156, i32 0, i32 0
  %EAX.i499 = bitcast %union.anon* %10157 to i32*
  %10158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10159 = getelementptr inbounds %struct.GPR, %struct.GPR* %10158, i32 0, i32 11
  %10160 = getelementptr inbounds %struct.Reg, %struct.Reg* %10159, i32 0, i32 0
  %RDI.i500 = bitcast %union.anon* %10160 to i64*
  %10161 = load i32, i32* %EAX.i499
  %10162 = zext i32 %10161 to i64
  %10163 = load i64, i64* %PC.i498
  %10164 = add i64 %10163, 3
  store i64 %10164, i64* %PC.i498
  %10165 = shl i64 %10162, 32
  %10166 = ashr exact i64 %10165, 32
  store i64 %10166, i64* %RDI.i500, align 8
  store %struct.Memory* %loadMem_48977c, %struct.Memory** %MEMORY
  %loadMem_48977f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10168 = getelementptr inbounds %struct.GPR, %struct.GPR* %10167, i32 0, i32 33
  %10169 = getelementptr inbounds %struct.Reg, %struct.Reg* %10168, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %10169 to i64*
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10171 = getelementptr inbounds %struct.GPR, %struct.GPR* %10170, i32 0, i32 7
  %10172 = getelementptr inbounds %struct.Reg, %struct.Reg* %10171, i32 0, i32 0
  %DX.i495 = bitcast %union.anon* %10172 to i16*
  %10173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10174 = getelementptr inbounds %struct.GPR, %struct.GPR* %10173, i32 0, i32 9
  %10175 = getelementptr inbounds %struct.Reg, %struct.Reg* %10174, i32 0, i32 0
  %RSI.i496 = bitcast %union.anon* %10175 to i64*
  %10176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10177 = getelementptr inbounds %struct.GPR, %struct.GPR* %10176, i32 0, i32 11
  %10178 = getelementptr inbounds %struct.Reg, %struct.Reg* %10177, i32 0, i32 0
  %RDI.i497 = bitcast %union.anon* %10178 to i64*
  %10179 = load i64, i64* %RSI.i496
  %10180 = load i64, i64* %RDI.i497
  %10181 = mul i64 %10180, 2
  %10182 = add i64 %10181, %10179
  %10183 = load i16, i16* %DX.i495
  %10184 = zext i16 %10183 to i64
  %10185 = load i64, i64* %PC.i494
  %10186 = add i64 %10185, 4
  store i64 %10186, i64* %PC.i494
  %10187 = inttoptr i64 %10182 to i16*
  store i16 %10183, i16* %10187
  store %struct.Memory* %loadMem_48977f, %struct.Memory** %MEMORY
  %loadMem_489783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10189 = getelementptr inbounds %struct.GPR, %struct.GPR* %10188, i32 0, i32 33
  %10190 = getelementptr inbounds %struct.Reg, %struct.Reg* %10189, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %10190 to i64*
  %10191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10192 = getelementptr inbounds %struct.GPR, %struct.GPR* %10191, i32 0, i32 9
  %10193 = getelementptr inbounds %struct.Reg, %struct.Reg* %10192, i32 0, i32 0
  %RSI.i493 = bitcast %union.anon* %10193 to i64*
  %10194 = load i64, i64* %PC.i492
  %10195 = add i64 %10194, 8
  store i64 %10195, i64* %PC.i492
  %10196 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10196, i64* %RSI.i493, align 8
  store %struct.Memory* %loadMem_489783, %struct.Memory** %MEMORY
  %loadMem_48978b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10198 = getelementptr inbounds %struct.GPR, %struct.GPR* %10197, i32 0, i32 33
  %10199 = getelementptr inbounds %struct.Reg, %struct.Reg* %10198, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %10199 to i64*
  %10200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10201 = getelementptr inbounds %struct.GPR, %struct.GPR* %10200, i32 0, i32 1
  %10202 = getelementptr inbounds %struct.Reg, %struct.Reg* %10201, i32 0, i32 0
  %RAX.i490 = bitcast %union.anon* %10202 to i64*
  %10203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10204 = getelementptr inbounds %struct.GPR, %struct.GPR* %10203, i32 0, i32 9
  %10205 = getelementptr inbounds %struct.Reg, %struct.Reg* %10204, i32 0, i32 0
  %RSI.i491 = bitcast %union.anon* %10205 to i64*
  %10206 = load i64, i64* %RSI.i491
  %10207 = add i64 %10206, 72684
  %10208 = load i64, i64* %PC.i489
  %10209 = add i64 %10208, 6
  store i64 %10209, i64* %PC.i489
  %10210 = inttoptr i64 %10207 to i32*
  %10211 = load i32, i32* %10210
  %10212 = zext i32 %10211 to i64
  store i64 %10212, i64* %RAX.i490, align 8
  store %struct.Memory* %loadMem_48978b, %struct.Memory** %MEMORY
  %loadMem_489791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10214 = getelementptr inbounds %struct.GPR, %struct.GPR* %10213, i32 0, i32 33
  %10215 = getelementptr inbounds %struct.Reg, %struct.Reg* %10214, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %10215 to i64*
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10217 = getelementptr inbounds %struct.GPR, %struct.GPR* %10216, i32 0, i32 17
  %10218 = getelementptr inbounds %struct.Reg, %struct.Reg* %10217, i32 0, i32 0
  %R8D.i487 = bitcast %union.anon* %10218 to i32*
  %10219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10220 = getelementptr inbounds %struct.GPR, %struct.GPR* %10219, i32 0, i32 15
  %10221 = getelementptr inbounds %struct.Reg, %struct.Reg* %10220, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %10221 to i64*
  %10222 = bitcast i32* %R8D.i487 to i64*
  %10223 = load i64, i64* %RBP.i488
  %10224 = sub i64 %10223, 24
  %10225 = load i64, i64* %PC.i486
  %10226 = add i64 %10225, 4
  store i64 %10226, i64* %PC.i486
  %10227 = inttoptr i64 %10224 to i32*
  %10228 = load i32, i32* %10227
  %10229 = zext i32 %10228 to i64
  store i64 %10229, i64* %10222, align 8
  store %struct.Memory* %loadMem_489791, %struct.Memory** %MEMORY
  %loadMem_489795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10231 = getelementptr inbounds %struct.GPR, %struct.GPR* %10230, i32 0, i32 33
  %10232 = getelementptr inbounds %struct.Reg, %struct.Reg* %10231, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %10232 to i64*
  %10233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10234 = getelementptr inbounds %struct.GPR, %struct.GPR* %10233, i32 0, i32 9
  %10235 = getelementptr inbounds %struct.Reg, %struct.Reg* %10234, i32 0, i32 0
  %RSI.i485 = bitcast %union.anon* %10235 to i64*
  %10236 = load i64, i64* %PC.i484
  %10237 = add i64 %10236, 8
  store i64 %10237, i64* %PC.i484
  %10238 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10238, i64* %RSI.i485, align 8
  store %struct.Memory* %loadMem_489795, %struct.Memory** %MEMORY
  %loadMem_48979d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10240 = getelementptr inbounds %struct.GPR, %struct.GPR* %10239, i32 0, i32 33
  %10241 = getelementptr inbounds %struct.Reg, %struct.Reg* %10240, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %10241 to i64*
  %10242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10243 = getelementptr inbounds %struct.GPR, %struct.GPR* %10242, i32 0, i32 9
  %10244 = getelementptr inbounds %struct.Reg, %struct.Reg* %10243, i32 0, i32 0
  %RSI.i483 = bitcast %union.anon* %10244 to i64*
  %10245 = load i64, i64* %RSI.i483
  %10246 = load i64, i64* %PC.i482
  %10247 = add i64 %10246, 7
  store i64 %10247, i64* %PC.i482
  %10248 = add i64 4792, %10245
  store i64 %10248, i64* %RSI.i483, align 8
  %10249 = icmp ult i64 %10248, %10245
  %10250 = icmp ult i64 %10248, 4792
  %10251 = or i1 %10249, %10250
  %10252 = zext i1 %10251 to i8
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10252, i8* %10253, align 1
  %10254 = trunc i64 %10248 to i32
  %10255 = and i32 %10254, 255
  %10256 = call i32 @llvm.ctpop.i32(i32 %10255)
  %10257 = trunc i32 %10256 to i8
  %10258 = and i8 %10257, 1
  %10259 = xor i8 %10258, 1
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10259, i8* %10260, align 1
  %10261 = xor i64 4792, %10245
  %10262 = xor i64 %10261, %10248
  %10263 = lshr i64 %10262, 4
  %10264 = trunc i64 %10263 to i8
  %10265 = and i8 %10264, 1
  %10266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10265, i8* %10266, align 1
  %10267 = icmp eq i64 %10248, 0
  %10268 = zext i1 %10267 to i8
  %10269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10268, i8* %10269, align 1
  %10270 = lshr i64 %10248, 63
  %10271 = trunc i64 %10270 to i8
  %10272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10271, i8* %10272, align 1
  %10273 = lshr i64 %10245, 63
  %10274 = xor i64 %10270, %10273
  %10275 = add i64 %10274, %10270
  %10276 = icmp eq i64 %10275, 2
  %10277 = zext i1 %10276 to i8
  %10278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10277, i8* %10278, align 1
  store %struct.Memory* %loadMem_48979d, %struct.Memory** %MEMORY
  %loadMem_4897a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10280 = getelementptr inbounds %struct.GPR, %struct.GPR* %10279, i32 0, i32 33
  %10281 = getelementptr inbounds %struct.Reg, %struct.Reg* %10280, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %10281 to i64*
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10283 = getelementptr inbounds %struct.GPR, %struct.GPR* %10282, i32 0, i32 11
  %10284 = getelementptr inbounds %struct.Reg, %struct.Reg* %10283, i32 0, i32 0
  %RDI.i480 = bitcast %union.anon* %10284 to i64*
  %10285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10286 = getelementptr inbounds %struct.GPR, %struct.GPR* %10285, i32 0, i32 15
  %10287 = getelementptr inbounds %struct.Reg, %struct.Reg* %10286, i32 0, i32 0
  %RBP.i481 = bitcast %union.anon* %10287 to i64*
  %10288 = load i64, i64* %RBP.i481
  %10289 = sub i64 %10288, 16
  %10290 = load i64, i64* %PC.i479
  %10291 = add i64 %10290, 4
  store i64 %10291, i64* %PC.i479
  %10292 = inttoptr i64 %10289 to i64*
  %10293 = load i64, i64* %10292
  store i64 %10293, i64* %RDI.i480, align 8
  store %struct.Memory* %loadMem_4897a4, %struct.Memory** %MEMORY
  %loadMem_4897a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10295 = getelementptr inbounds %struct.GPR, %struct.GPR* %10294, i32 0, i32 33
  %10296 = getelementptr inbounds %struct.Reg, %struct.Reg* %10295, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %10296 to i64*
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10298 = getelementptr inbounds %struct.GPR, %struct.GPR* %10297, i32 0, i32 11
  %10299 = getelementptr inbounds %struct.Reg, %struct.Reg* %10298, i32 0, i32 0
  %RDI.i478 = bitcast %union.anon* %10299 to i64*
  %10300 = load i64, i64* %RDI.i478
  %10301 = load i64, i64* %PC.i477
  %10302 = add i64 %10301, 3
  store i64 %10302, i64* %PC.i477
  %10303 = inttoptr i64 %10300 to i32*
  %10304 = load i32, i32* %10303
  %10305 = sext i32 %10304 to i64
  store i64 %10305, i64* %RDI.i478, align 8
  store %struct.Memory* %loadMem_4897a8, %struct.Memory** %MEMORY
  %loadMem_4897ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %10306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10307 = getelementptr inbounds %struct.GPR, %struct.GPR* %10306, i32 0, i32 33
  %10308 = getelementptr inbounds %struct.Reg, %struct.Reg* %10307, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %10308 to i64*
  %10309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10310 = getelementptr inbounds %struct.GPR, %struct.GPR* %10309, i32 0, i32 11
  %10311 = getelementptr inbounds %struct.Reg, %struct.Reg* %10310, i32 0, i32 0
  %RDI.i476 = bitcast %union.anon* %10311 to i64*
  %10312 = load i64, i64* %RDI.i476
  %10313 = load i64, i64* %PC.i475
  %10314 = add i64 %10313, 4
  store i64 %10314, i64* %PC.i475
  %10315 = shl i64 %10312, 8
  %10316 = icmp slt i64 %10315, 0
  %10317 = shl i64 %10315, 1
  store i64 %10317, i64* %RDI.i476, align 8
  %10318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10319 = zext i1 %10316 to i8
  store i8 %10319, i8* %10318, align 1
  %10320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10321 = trunc i64 %10317 to i32
  store i8 1, i8* %10320, align 1
  %10322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10322, align 1
  %10323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10324 = icmp eq i64 %10317, 0
  %10325 = zext i1 %10324 to i8
  store i8 %10325, i8* %10323, align 1
  %10326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10327 = lshr i64 %10317, 63
  %10328 = trunc i64 %10327 to i8
  store i8 %10328, i8* %10326, align 1
  %10329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10329, align 1
  store %struct.Memory* %loadMem_4897ab, %struct.Memory** %MEMORY
  %loadMem_4897af = load %struct.Memory*, %struct.Memory** %MEMORY
  %10330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10331 = getelementptr inbounds %struct.GPR, %struct.GPR* %10330, i32 0, i32 33
  %10332 = getelementptr inbounds %struct.Reg, %struct.Reg* %10331, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %10332 to i64*
  %10333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10334 = getelementptr inbounds %struct.GPR, %struct.GPR* %10333, i32 0, i32 9
  %10335 = getelementptr inbounds %struct.Reg, %struct.Reg* %10334, i32 0, i32 0
  %RSI.i473 = bitcast %union.anon* %10335 to i64*
  %10336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10337 = getelementptr inbounds %struct.GPR, %struct.GPR* %10336, i32 0, i32 11
  %10338 = getelementptr inbounds %struct.Reg, %struct.Reg* %10337, i32 0, i32 0
  %RDI.i474 = bitcast %union.anon* %10338 to i64*
  %10339 = load i64, i64* %RSI.i473
  %10340 = load i64, i64* %RDI.i474
  %10341 = load i64, i64* %PC.i472
  %10342 = add i64 %10341, 3
  store i64 %10342, i64* %PC.i472
  %10343 = add i64 %10340, %10339
  store i64 %10343, i64* %RSI.i473, align 8
  %10344 = icmp ult i64 %10343, %10339
  %10345 = icmp ult i64 %10343, %10340
  %10346 = or i1 %10344, %10345
  %10347 = zext i1 %10346 to i8
  %10348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10347, i8* %10348, align 1
  %10349 = trunc i64 %10343 to i32
  %10350 = and i32 %10349, 255
  %10351 = call i32 @llvm.ctpop.i32(i32 %10350)
  %10352 = trunc i32 %10351 to i8
  %10353 = and i8 %10352, 1
  %10354 = xor i8 %10353, 1
  %10355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10354, i8* %10355, align 1
  %10356 = xor i64 %10340, %10339
  %10357 = xor i64 %10356, %10343
  %10358 = lshr i64 %10357, 4
  %10359 = trunc i64 %10358 to i8
  %10360 = and i8 %10359, 1
  %10361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10360, i8* %10361, align 1
  %10362 = icmp eq i64 %10343, 0
  %10363 = zext i1 %10362 to i8
  %10364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10363, i8* %10364, align 1
  %10365 = lshr i64 %10343, 63
  %10366 = trunc i64 %10365 to i8
  %10367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10366, i8* %10367, align 1
  %10368 = lshr i64 %10339, 63
  %10369 = lshr i64 %10340, 63
  %10370 = xor i64 %10365, %10368
  %10371 = xor i64 %10365, %10369
  %10372 = add i64 %10370, %10371
  %10373 = icmp eq i64 %10372, 2
  %10374 = zext i1 %10373 to i8
  %10375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10374, i8* %10375, align 1
  store %struct.Memory* %loadMem_4897af, %struct.Memory** %MEMORY
  %loadMem_4897b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10377 = getelementptr inbounds %struct.GPR, %struct.GPR* %10376, i32 0, i32 33
  %10378 = getelementptr inbounds %struct.Reg, %struct.Reg* %10377, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %10378 to i64*
  %10379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10380 = getelementptr inbounds %struct.GPR, %struct.GPR* %10379, i32 0, i32 11
  %10381 = getelementptr inbounds %struct.Reg, %struct.Reg* %10380, i32 0, i32 0
  %RDI.i470 = bitcast %union.anon* %10381 to i64*
  %10382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10383 = getelementptr inbounds %struct.GPR, %struct.GPR* %10382, i32 0, i32 15
  %10384 = getelementptr inbounds %struct.Reg, %struct.Reg* %10383, i32 0, i32 0
  %RBP.i471 = bitcast %union.anon* %10384 to i64*
  %10385 = load i64, i64* %RBP.i471
  %10386 = sub i64 %10385, 40
  %10387 = load i64, i64* %PC.i469
  %10388 = add i64 %10387, 4
  store i64 %10388, i64* %PC.i469
  %10389 = inttoptr i64 %10386 to i32*
  %10390 = load i32, i32* %10389
  %10391 = sext i32 %10390 to i64
  store i64 %10391, i64* %RDI.i470, align 8
  store %struct.Memory* %loadMem_4897b2, %struct.Memory** %MEMORY
  %loadMem_4897b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10393 = getelementptr inbounds %struct.GPR, %struct.GPR* %10392, i32 0, i32 33
  %10394 = getelementptr inbounds %struct.Reg, %struct.Reg* %10393, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %10394 to i64*
  %10395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10396 = getelementptr inbounds %struct.GPR, %struct.GPR* %10395, i32 0, i32 11
  %10397 = getelementptr inbounds %struct.Reg, %struct.Reg* %10396, i32 0, i32 0
  %RDI.i468 = bitcast %union.anon* %10397 to i64*
  %10398 = load i64, i64* %RDI.i468
  %10399 = load i64, i64* %PC.i467
  %10400 = add i64 %10399, 4
  store i64 %10400, i64* %PC.i467
  %10401 = shl i64 %10398, 4
  %10402 = icmp slt i64 %10401, 0
  %10403 = shl i64 %10401, 1
  store i64 %10403, i64* %RDI.i468, align 8
  %10404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10405 = zext i1 %10402 to i8
  store i8 %10405, i8* %10404, align 1
  %10406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10407 = trunc i64 %10403 to i32
  %10408 = and i32 %10407, 254
  %10409 = call i32 @llvm.ctpop.i32(i32 %10408)
  %10410 = trunc i32 %10409 to i8
  %10411 = and i8 %10410, 1
  %10412 = xor i8 %10411, 1
  store i8 %10412, i8* %10406, align 1
  %10413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10413, align 1
  %10414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10415 = icmp eq i64 %10403, 0
  %10416 = zext i1 %10415 to i8
  store i8 %10416, i8* %10414, align 1
  %10417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10418 = lshr i64 %10403, 63
  %10419 = trunc i64 %10418 to i8
  store i8 %10419, i8* %10417, align 1
  %10420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10420, align 1
  store %struct.Memory* %loadMem_4897b6, %struct.Memory** %MEMORY
  %loadMem_4897ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10422 = getelementptr inbounds %struct.GPR, %struct.GPR* %10421, i32 0, i32 33
  %10423 = getelementptr inbounds %struct.Reg, %struct.Reg* %10422, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %10423 to i64*
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10425 = getelementptr inbounds %struct.GPR, %struct.GPR* %10424, i32 0, i32 9
  %10426 = getelementptr inbounds %struct.Reg, %struct.Reg* %10425, i32 0, i32 0
  %RSI.i465 = bitcast %union.anon* %10426 to i64*
  %10427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10428 = getelementptr inbounds %struct.GPR, %struct.GPR* %10427, i32 0, i32 11
  %10429 = getelementptr inbounds %struct.Reg, %struct.Reg* %10428, i32 0, i32 0
  %RDI.i466 = bitcast %union.anon* %10429 to i64*
  %10430 = load i64, i64* %RSI.i465
  %10431 = load i64, i64* %RDI.i466
  %10432 = load i64, i64* %PC.i464
  %10433 = add i64 %10432, 3
  store i64 %10433, i64* %PC.i464
  %10434 = add i64 %10431, %10430
  store i64 %10434, i64* %RSI.i465, align 8
  %10435 = icmp ult i64 %10434, %10430
  %10436 = icmp ult i64 %10434, %10431
  %10437 = or i1 %10435, %10436
  %10438 = zext i1 %10437 to i8
  %10439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10438, i8* %10439, align 1
  %10440 = trunc i64 %10434 to i32
  %10441 = and i32 %10440, 255
  %10442 = call i32 @llvm.ctpop.i32(i32 %10441)
  %10443 = trunc i32 %10442 to i8
  %10444 = and i8 %10443, 1
  %10445 = xor i8 %10444, 1
  %10446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10445, i8* %10446, align 1
  %10447 = xor i64 %10431, %10430
  %10448 = xor i64 %10447, %10434
  %10449 = lshr i64 %10448, 4
  %10450 = trunc i64 %10449 to i8
  %10451 = and i8 %10450, 1
  %10452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10451, i8* %10452, align 1
  %10453 = icmp eq i64 %10434, 0
  %10454 = zext i1 %10453 to i8
  %10455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10454, i8* %10455, align 1
  %10456 = lshr i64 %10434, 63
  %10457 = trunc i64 %10456 to i8
  %10458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10457, i8* %10458, align 1
  %10459 = lshr i64 %10430, 63
  %10460 = lshr i64 %10431, 63
  %10461 = xor i64 %10456, %10459
  %10462 = xor i64 %10456, %10460
  %10463 = add i64 %10461, %10462
  %10464 = icmp eq i64 %10463, 2
  %10465 = zext i1 %10464 to i8
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10465, i8* %10466, align 1
  store %struct.Memory* %loadMem_4897ba, %struct.Memory** %MEMORY
  %loadMem_4897bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10468 = getelementptr inbounds %struct.GPR, %struct.GPR* %10467, i32 0, i32 33
  %10469 = getelementptr inbounds %struct.Reg, %struct.Reg* %10468, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %10469 to i64*
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10471 = getelementptr inbounds %struct.GPR, %struct.GPR* %10470, i32 0, i32 11
  %10472 = getelementptr inbounds %struct.Reg, %struct.Reg* %10471, i32 0, i32 0
  %RDI.i462 = bitcast %union.anon* %10472 to i64*
  %10473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10474 = getelementptr inbounds %struct.GPR, %struct.GPR* %10473, i32 0, i32 15
  %10475 = getelementptr inbounds %struct.Reg, %struct.Reg* %10474, i32 0, i32 0
  %RBP.i463 = bitcast %union.anon* %10475 to i64*
  %10476 = load i64, i64* %RBP.i463
  %10477 = sub i64 %10476, 36
  %10478 = load i64, i64* %PC.i461
  %10479 = add i64 %10478, 4
  store i64 %10479, i64* %PC.i461
  %10480 = inttoptr i64 %10477 to i32*
  %10481 = load i32, i32* %10480
  %10482 = sext i32 %10481 to i64
  store i64 %10482, i64* %RDI.i462, align 8
  store %struct.Memory* %loadMem_4897bd, %struct.Memory** %MEMORY
  %loadMem_4897c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10484 = getelementptr inbounds %struct.GPR, %struct.GPR* %10483, i32 0, i32 33
  %10485 = getelementptr inbounds %struct.Reg, %struct.Reg* %10484, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %10485 to i64*
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10487 = getelementptr inbounds %struct.GPR, %struct.GPR* %10486, i32 0, i32 19
  %10488 = getelementptr inbounds %struct.Reg, %struct.Reg* %10487, i32 0, i32 0
  %R9D.i458 = bitcast %union.anon* %10488 to i32*
  %10489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10490 = getelementptr inbounds %struct.GPR, %struct.GPR* %10489, i32 0, i32 9
  %10491 = getelementptr inbounds %struct.Reg, %struct.Reg* %10490, i32 0, i32 0
  %RSI.i459 = bitcast %union.anon* %10491 to i64*
  %10492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10493 = getelementptr inbounds %struct.GPR, %struct.GPR* %10492, i32 0, i32 11
  %10494 = getelementptr inbounds %struct.Reg, %struct.Reg* %10493, i32 0, i32 0
  %RDI.i460 = bitcast %union.anon* %10494 to i64*
  %10495 = bitcast i32* %R9D.i458 to i64*
  %10496 = load i64, i64* %RSI.i459
  %10497 = load i64, i64* %RDI.i460
  %10498 = mul i64 %10497, 2
  %10499 = add i64 %10498, %10496
  %10500 = load i64, i64* %PC.i457
  %10501 = add i64 %10500, 5
  store i64 %10501, i64* %PC.i457
  %10502 = inttoptr i64 %10499 to i16*
  %10503 = load i16, i16* %10502
  %10504 = zext i16 %10503 to i64
  store i64 %10504, i64* %10495, align 8
  store %struct.Memory* %loadMem_4897c1, %struct.Memory** %MEMORY
  %loadMem_4897c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10506 = getelementptr inbounds %struct.GPR, %struct.GPR* %10505, i32 0, i32 33
  %10507 = getelementptr inbounds %struct.Reg, %struct.Reg* %10506, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %10507 to i64*
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10509 = getelementptr inbounds %struct.GPR, %struct.GPR* %10508, i32 0, i32 17
  %10510 = getelementptr inbounds %struct.Reg, %struct.Reg* %10509, i32 0, i32 0
  %R8D.i455 = bitcast %union.anon* %10510 to i32*
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10512 = getelementptr inbounds %struct.GPR, %struct.GPR* %10511, i32 0, i32 19
  %10513 = getelementptr inbounds %struct.Reg, %struct.Reg* %10512, i32 0, i32 0
  %R9D.i456 = bitcast %union.anon* %10513 to i32*
  %10514 = bitcast i32* %R8D.i455 to i64*
  %10515 = load i32, i32* %R8D.i455
  %10516 = zext i32 %10515 to i64
  %10517 = load i32, i32* %R9D.i456
  %10518 = zext i32 %10517 to i64
  %10519 = load i64, i64* %PC.i454
  %10520 = add i64 %10519, 3
  store i64 %10520, i64* %PC.i454
  %10521 = add i32 %10517, %10515
  %10522 = zext i32 %10521 to i64
  store i64 %10522, i64* %10514, align 8
  %10523 = icmp ult i32 %10521, %10515
  %10524 = icmp ult i32 %10521, %10517
  %10525 = or i1 %10523, %10524
  %10526 = zext i1 %10525 to i8
  %10527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10526, i8* %10527, align 1
  %10528 = and i32 %10521, 255
  %10529 = call i32 @llvm.ctpop.i32(i32 %10528)
  %10530 = trunc i32 %10529 to i8
  %10531 = and i8 %10530, 1
  %10532 = xor i8 %10531, 1
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10532, i8* %10533, align 1
  %10534 = xor i64 %10518, %10516
  %10535 = trunc i64 %10534 to i32
  %10536 = xor i32 %10535, %10521
  %10537 = lshr i32 %10536, 4
  %10538 = trunc i32 %10537 to i8
  %10539 = and i8 %10538, 1
  %10540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10539, i8* %10540, align 1
  %10541 = icmp eq i32 %10521, 0
  %10542 = zext i1 %10541 to i8
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10542, i8* %10543, align 1
  %10544 = lshr i32 %10521, 31
  %10545 = trunc i32 %10544 to i8
  %10546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10545, i8* %10546, align 1
  %10547 = lshr i32 %10515, 31
  %10548 = lshr i32 %10517, 31
  %10549 = xor i32 %10544, %10547
  %10550 = xor i32 %10544, %10548
  %10551 = add i32 %10549, %10550
  %10552 = icmp eq i32 %10551, 2
  %10553 = zext i1 %10552 to i8
  %10554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10553, i8* %10554, align 1
  store %struct.Memory* %loadMem_4897c6, %struct.Memory** %MEMORY
  %loadMem_4897c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10556 = getelementptr inbounds %struct.GPR, %struct.GPR* %10555, i32 0, i32 33
  %10557 = getelementptr inbounds %struct.Reg, %struct.Reg* %10556, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %10557 to i64*
  %10558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10559 = getelementptr inbounds %struct.GPR, %struct.GPR* %10558, i32 0, i32 5
  %10560 = getelementptr inbounds %struct.Reg, %struct.Reg* %10559, i32 0, i32 0
  %ECX.i452 = bitcast %union.anon* %10560 to i32*
  %10561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10562 = getelementptr inbounds %struct.GPR, %struct.GPR* %10561, i32 0, i32 17
  %10563 = getelementptr inbounds %struct.Reg, %struct.Reg* %10562, i32 0, i32 0
  %R8D.i453 = bitcast %union.anon* %10563 to i32*
  %10564 = load i32, i32* %ECX.i452
  %10565 = zext i32 %10564 to i64
  %10566 = load i32, i32* %R8D.i453
  %10567 = zext i32 %10566 to i64
  %10568 = load i64, i64* %PC.i451
  %10569 = add i64 %10568, 3
  store i64 %10569, i64* %PC.i451
  %10570 = sub i32 %10564, %10566
  %10571 = icmp ult i32 %10564, %10566
  %10572 = zext i1 %10571 to i8
  %10573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10572, i8* %10573, align 1
  %10574 = and i32 %10570, 255
  %10575 = call i32 @llvm.ctpop.i32(i32 %10574)
  %10576 = trunc i32 %10575 to i8
  %10577 = and i8 %10576, 1
  %10578 = xor i8 %10577, 1
  %10579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10578, i8* %10579, align 1
  %10580 = xor i64 %10567, %10565
  %10581 = trunc i64 %10580 to i32
  %10582 = xor i32 %10581, %10570
  %10583 = lshr i32 %10582, 4
  %10584 = trunc i32 %10583 to i8
  %10585 = and i8 %10584, 1
  %10586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10585, i8* %10586, align 1
  %10587 = icmp eq i32 %10570, 0
  %10588 = zext i1 %10587 to i8
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10588, i8* %10589, align 1
  %10590 = lshr i32 %10570, 31
  %10591 = trunc i32 %10590 to i8
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10591, i8* %10592, align 1
  %10593 = lshr i32 %10564, 31
  %10594 = lshr i32 %10566, 31
  %10595 = xor i32 %10594, %10593
  %10596 = xor i32 %10590, %10593
  %10597 = add i32 %10596, %10595
  %10598 = icmp eq i32 %10597, 2
  %10599 = zext i1 %10598 to i8
  %10600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10599, i8* %10600, align 1
  store %struct.Memory* %loadMem_4897c9, %struct.Memory** %MEMORY
  %loadMem_4897cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10602 = getelementptr inbounds %struct.GPR, %struct.GPR* %10601, i32 0, i32 33
  %10603 = getelementptr inbounds %struct.Reg, %struct.Reg* %10602, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %10603 to i64*
  %10604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10605 = getelementptr inbounds %struct.GPR, %struct.GPR* %10604, i32 0, i32 1
  %10606 = getelementptr inbounds %struct.Reg, %struct.Reg* %10605, i32 0, i32 0
  %EAX.i449 = bitcast %union.anon* %10606 to i32*
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10608 = getelementptr inbounds %struct.GPR, %struct.GPR* %10607, i32 0, i32 15
  %10609 = getelementptr inbounds %struct.Reg, %struct.Reg* %10608, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %10609 to i64*
  %10610 = load i64, i64* %RBP.i450
  %10611 = sub i64 %10610, 100
  %10612 = load i32, i32* %EAX.i449
  %10613 = zext i32 %10612 to i64
  %10614 = load i64, i64* %PC.i448
  %10615 = add i64 %10614, 3
  store i64 %10615, i64* %PC.i448
  %10616 = inttoptr i64 %10611 to i32*
  store i32 %10612, i32* %10616
  store %struct.Memory* %loadMem_4897cc, %struct.Memory** %MEMORY
  %loadMem_4897cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10618 = getelementptr inbounds %struct.GPR, %struct.GPR* %10617, i32 0, i32 33
  %10619 = getelementptr inbounds %struct.Reg, %struct.Reg* %10618, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %10619 to i64*
  %10620 = load i64, i64* %PC.i447
  %10621 = add i64 %10620, 16
  %10622 = load i64, i64* %PC.i447
  %10623 = add i64 %10622, 6
  %10624 = load i64, i64* %PC.i447
  %10625 = add i64 %10624, 6
  store i64 %10625, i64* %PC.i447
  %10626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10627 = load i8, i8* %10626, align 1
  %10628 = icmp ne i8 %10627, 0
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10630 = load i8, i8* %10629, align 1
  %10631 = icmp ne i8 %10630, 0
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10633 = load i8, i8* %10632, align 1
  %10634 = icmp ne i8 %10633, 0
  %10635 = xor i1 %10631, %10634
  %10636 = or i1 %10628, %10635
  %10637 = zext i1 %10636 to i8
  store i8 %10637, i8* %BRANCH_TAKEN, align 1
  %10638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10639 = select i1 %10636, i64 %10621, i64 %10623
  store i64 %10639, i64* %10638, align 8
  store %struct.Memory* %loadMem_4897cf, %struct.Memory** %MEMORY
  %loadBr_4897cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4897cf = icmp eq i8 %loadBr_4897cf, 1
  br i1 %cmpBr_4897cf, label %block_.L_4897df, label %block_4897d5

block_4897d5:                                     ; preds = %block_.L_48974f
  %loadMem_4897d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10641 = getelementptr inbounds %struct.GPR, %struct.GPR* %10640, i32 0, i32 33
  %10642 = getelementptr inbounds %struct.Reg, %struct.Reg* %10641, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %10642 to i64*
  %10643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10644 = getelementptr inbounds %struct.GPR, %struct.GPR* %10643, i32 0, i32 1
  %10645 = getelementptr inbounds %struct.Reg, %struct.Reg* %10644, i32 0, i32 0
  %EAX.i445 = bitcast %union.anon* %10645 to i32*
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10647 = getelementptr inbounds %struct.GPR, %struct.GPR* %10646, i32 0, i32 1
  %10648 = getelementptr inbounds %struct.Reg, %struct.Reg* %10647, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %10648 to i64*
  %10649 = load i64, i64* %RAX.i446
  %10650 = load i32, i32* %EAX.i445
  %10651 = zext i32 %10650 to i64
  %10652 = load i64, i64* %PC.i444
  %10653 = add i64 %10652, 2
  store i64 %10653, i64* %PC.i444
  %10654 = xor i64 %10651, %10649
  %10655 = trunc i64 %10654 to i32
  %10656 = and i64 %10654, 4294967295
  store i64 %10656, i64* %RAX.i446, align 8
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10657, align 1
  %10658 = and i32 %10655, 255
  %10659 = call i32 @llvm.ctpop.i32(i32 %10658)
  %10660 = trunc i32 %10659 to i8
  %10661 = and i8 %10660, 1
  %10662 = xor i8 %10661, 1
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10662, i8* %10663, align 1
  %10664 = icmp eq i32 %10655, 0
  %10665 = zext i1 %10664 to i8
  %10666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10665, i8* %10666, align 1
  %10667 = lshr i32 %10655, 31
  %10668 = trunc i32 %10667 to i8
  %10669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10668, i8* %10669, align 1
  %10670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10670, align 1
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10671, align 1
  store %struct.Memory* %loadMem_4897d5, %struct.Memory** %MEMORY
  %loadMem_4897d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10673 = getelementptr inbounds %struct.GPR, %struct.GPR* %10672, i32 0, i32 33
  %10674 = getelementptr inbounds %struct.Reg, %struct.Reg* %10673, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %10674 to i64*
  %10675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10676 = getelementptr inbounds %struct.GPR, %struct.GPR* %10675, i32 0, i32 1
  %10677 = getelementptr inbounds %struct.Reg, %struct.Reg* %10676, i32 0, i32 0
  %EAX.i442 = bitcast %union.anon* %10677 to i32*
  %10678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10679 = getelementptr inbounds %struct.GPR, %struct.GPR* %10678, i32 0, i32 15
  %10680 = getelementptr inbounds %struct.Reg, %struct.Reg* %10679, i32 0, i32 0
  %RBP.i443 = bitcast %union.anon* %10680 to i64*
  %10681 = load i64, i64* %RBP.i443
  %10682 = sub i64 %10681, 104
  %10683 = load i32, i32* %EAX.i442
  %10684 = zext i32 %10683 to i64
  %10685 = load i64, i64* %PC.i441
  %10686 = add i64 %10685, 3
  store i64 %10686, i64* %PC.i441
  %10687 = inttoptr i64 %10682 to i32*
  store i32 %10683, i32* %10687
  store %struct.Memory* %loadMem_4897d7, %struct.Memory** %MEMORY
  %loadMem_4897da = load %struct.Memory*, %struct.Memory** %MEMORY
  %10688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10689 = getelementptr inbounds %struct.GPR, %struct.GPR* %10688, i32 0, i32 33
  %10690 = getelementptr inbounds %struct.Reg, %struct.Reg* %10689, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %10690 to i64*
  %10691 = load i64, i64* %PC.i440
  %10692 = add i64 %10691, 61
  %10693 = load i64, i64* %PC.i440
  %10694 = add i64 %10693, 5
  store i64 %10694, i64* %PC.i440
  %10695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10692, i64* %10695, align 8
  store %struct.Memory* %loadMem_4897da, %struct.Memory** %MEMORY
  br label %block_.L_489817

block_.L_4897df:                                  ; preds = %block_.L_48974f
  %loadMem_4897df = load %struct.Memory*, %struct.Memory** %MEMORY
  %10696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10697 = getelementptr inbounds %struct.GPR, %struct.GPR* %10696, i32 0, i32 33
  %10698 = getelementptr inbounds %struct.Reg, %struct.Reg* %10697, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %10698 to i64*
  %10699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10700 = getelementptr inbounds %struct.GPR, %struct.GPR* %10699, i32 0, i32 1
  %10701 = getelementptr inbounds %struct.Reg, %struct.Reg* %10700, i32 0, i32 0
  %RAX.i438 = bitcast %union.anon* %10701 to i64*
  %10702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10703 = getelementptr inbounds %struct.GPR, %struct.GPR* %10702, i32 0, i32 15
  %10704 = getelementptr inbounds %struct.Reg, %struct.Reg* %10703, i32 0, i32 0
  %RBP.i439 = bitcast %union.anon* %10704 to i64*
  %10705 = load i64, i64* %RBP.i439
  %10706 = sub i64 %10705, 24
  %10707 = load i64, i64* %PC.i437
  %10708 = add i64 %10707, 3
  store i64 %10708, i64* %PC.i437
  %10709 = inttoptr i64 %10706 to i32*
  %10710 = load i32, i32* %10709
  %10711 = zext i32 %10710 to i64
  store i64 %10711, i64* %RAX.i438, align 8
  store %struct.Memory* %loadMem_4897df, %struct.Memory** %MEMORY
  %loadMem_4897e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10713 = getelementptr inbounds %struct.GPR, %struct.GPR* %10712, i32 0, i32 33
  %10714 = getelementptr inbounds %struct.Reg, %struct.Reg* %10713, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %10714 to i64*
  %10715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10716 = getelementptr inbounds %struct.GPR, %struct.GPR* %10715, i32 0, i32 5
  %10717 = getelementptr inbounds %struct.Reg, %struct.Reg* %10716, i32 0, i32 0
  %RCX.i436 = bitcast %union.anon* %10717 to i64*
  %10718 = load i64, i64* %PC.i435
  %10719 = add i64 %10718, 8
  store i64 %10719, i64* %PC.i435
  %10720 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10720, i64* %RCX.i436, align 8
  store %struct.Memory* %loadMem_4897e2, %struct.Memory** %MEMORY
  %loadMem_4897ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %10721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10722 = getelementptr inbounds %struct.GPR, %struct.GPR* %10721, i32 0, i32 33
  %10723 = getelementptr inbounds %struct.Reg, %struct.Reg* %10722, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %10723 to i64*
  %10724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10725 = getelementptr inbounds %struct.GPR, %struct.GPR* %10724, i32 0, i32 5
  %10726 = getelementptr inbounds %struct.Reg, %struct.Reg* %10725, i32 0, i32 0
  %RCX.i434 = bitcast %union.anon* %10726 to i64*
  %10727 = load i64, i64* %RCX.i434
  %10728 = load i64, i64* %PC.i433
  %10729 = add i64 %10728, 7
  store i64 %10729, i64* %PC.i433
  %10730 = add i64 4792, %10727
  store i64 %10730, i64* %RCX.i434, align 8
  %10731 = icmp ult i64 %10730, %10727
  %10732 = icmp ult i64 %10730, 4792
  %10733 = or i1 %10731, %10732
  %10734 = zext i1 %10733 to i8
  %10735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10734, i8* %10735, align 1
  %10736 = trunc i64 %10730 to i32
  %10737 = and i32 %10736, 255
  %10738 = call i32 @llvm.ctpop.i32(i32 %10737)
  %10739 = trunc i32 %10738 to i8
  %10740 = and i8 %10739, 1
  %10741 = xor i8 %10740, 1
  %10742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10741, i8* %10742, align 1
  %10743 = xor i64 4792, %10727
  %10744 = xor i64 %10743, %10730
  %10745 = lshr i64 %10744, 4
  %10746 = trunc i64 %10745 to i8
  %10747 = and i8 %10746, 1
  %10748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10747, i8* %10748, align 1
  %10749 = icmp eq i64 %10730, 0
  %10750 = zext i1 %10749 to i8
  %10751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10750, i8* %10751, align 1
  %10752 = lshr i64 %10730, 63
  %10753 = trunc i64 %10752 to i8
  %10754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10753, i8* %10754, align 1
  %10755 = lshr i64 %10727, 63
  %10756 = xor i64 %10752, %10755
  %10757 = add i64 %10756, %10752
  %10758 = icmp eq i64 %10757, 2
  %10759 = zext i1 %10758 to i8
  %10760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10759, i8* %10760, align 1
  store %struct.Memory* %loadMem_4897ea, %struct.Memory** %MEMORY
  %loadMem_4897f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10762 = getelementptr inbounds %struct.GPR, %struct.GPR* %10761, i32 0, i32 33
  %10763 = getelementptr inbounds %struct.Reg, %struct.Reg* %10762, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %10763 to i64*
  %10764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10765 = getelementptr inbounds %struct.GPR, %struct.GPR* %10764, i32 0, i32 7
  %10766 = getelementptr inbounds %struct.Reg, %struct.Reg* %10765, i32 0, i32 0
  %RDX.i431 = bitcast %union.anon* %10766 to i64*
  %10767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10768 = getelementptr inbounds %struct.GPR, %struct.GPR* %10767, i32 0, i32 15
  %10769 = getelementptr inbounds %struct.Reg, %struct.Reg* %10768, i32 0, i32 0
  %RBP.i432 = bitcast %union.anon* %10769 to i64*
  %10770 = load i64, i64* %RBP.i432
  %10771 = sub i64 %10770, 16
  %10772 = load i64, i64* %PC.i430
  %10773 = add i64 %10772, 4
  store i64 %10773, i64* %PC.i430
  %10774 = inttoptr i64 %10771 to i64*
  %10775 = load i64, i64* %10774
  store i64 %10775, i64* %RDX.i431, align 8
  store %struct.Memory* %loadMem_4897f1, %struct.Memory** %MEMORY
  %loadMem_4897f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10777 = getelementptr inbounds %struct.GPR, %struct.GPR* %10776, i32 0, i32 33
  %10778 = getelementptr inbounds %struct.Reg, %struct.Reg* %10777, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %10778 to i64*
  %10779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10780 = getelementptr inbounds %struct.GPR, %struct.GPR* %10779, i32 0, i32 7
  %10781 = getelementptr inbounds %struct.Reg, %struct.Reg* %10780, i32 0, i32 0
  %RDX.i429 = bitcast %union.anon* %10781 to i64*
  %10782 = load i64, i64* %RDX.i429
  %10783 = load i64, i64* %PC.i428
  %10784 = add i64 %10783, 3
  store i64 %10784, i64* %PC.i428
  %10785 = inttoptr i64 %10782 to i32*
  %10786 = load i32, i32* %10785
  %10787 = sext i32 %10786 to i64
  store i64 %10787, i64* %RDX.i429, align 8
  store %struct.Memory* %loadMem_4897f5, %struct.Memory** %MEMORY
  %loadMem_4897f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10789 = getelementptr inbounds %struct.GPR, %struct.GPR* %10788, i32 0, i32 33
  %10790 = getelementptr inbounds %struct.Reg, %struct.Reg* %10789, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %10790 to i64*
  %10791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10792 = getelementptr inbounds %struct.GPR, %struct.GPR* %10791, i32 0, i32 7
  %10793 = getelementptr inbounds %struct.Reg, %struct.Reg* %10792, i32 0, i32 0
  %RDX.i427 = bitcast %union.anon* %10793 to i64*
  %10794 = load i64, i64* %RDX.i427
  %10795 = load i64, i64* %PC.i426
  %10796 = add i64 %10795, 4
  store i64 %10796, i64* %PC.i426
  %10797 = shl i64 %10794, 8
  %10798 = icmp slt i64 %10797, 0
  %10799 = shl i64 %10797, 1
  store i64 %10799, i64* %RDX.i427, align 8
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10801 = zext i1 %10798 to i8
  store i8 %10801, i8* %10800, align 1
  %10802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10803 = trunc i64 %10799 to i32
  store i8 1, i8* %10802, align 1
  %10804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10804, align 1
  %10805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10806 = icmp eq i64 %10799, 0
  %10807 = zext i1 %10806 to i8
  store i8 %10807, i8* %10805, align 1
  %10808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10809 = lshr i64 %10799, 63
  %10810 = trunc i64 %10809 to i8
  store i8 %10810, i8* %10808, align 1
  %10811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10811, align 1
  store %struct.Memory* %loadMem_4897f8, %struct.Memory** %MEMORY
  %loadMem_4897fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10813 = getelementptr inbounds %struct.GPR, %struct.GPR* %10812, i32 0, i32 33
  %10814 = getelementptr inbounds %struct.Reg, %struct.Reg* %10813, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %10814 to i64*
  %10815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10816 = getelementptr inbounds %struct.GPR, %struct.GPR* %10815, i32 0, i32 5
  %10817 = getelementptr inbounds %struct.Reg, %struct.Reg* %10816, i32 0, i32 0
  %RCX.i424 = bitcast %union.anon* %10817 to i64*
  %10818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10819 = getelementptr inbounds %struct.GPR, %struct.GPR* %10818, i32 0, i32 7
  %10820 = getelementptr inbounds %struct.Reg, %struct.Reg* %10819, i32 0, i32 0
  %RDX.i425 = bitcast %union.anon* %10820 to i64*
  %10821 = load i64, i64* %RCX.i424
  %10822 = load i64, i64* %RDX.i425
  %10823 = load i64, i64* %PC.i423
  %10824 = add i64 %10823, 3
  store i64 %10824, i64* %PC.i423
  %10825 = add i64 %10822, %10821
  store i64 %10825, i64* %RCX.i424, align 8
  %10826 = icmp ult i64 %10825, %10821
  %10827 = icmp ult i64 %10825, %10822
  %10828 = or i1 %10826, %10827
  %10829 = zext i1 %10828 to i8
  %10830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10829, i8* %10830, align 1
  %10831 = trunc i64 %10825 to i32
  %10832 = and i32 %10831, 255
  %10833 = call i32 @llvm.ctpop.i32(i32 %10832)
  %10834 = trunc i32 %10833 to i8
  %10835 = and i8 %10834, 1
  %10836 = xor i8 %10835, 1
  %10837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10836, i8* %10837, align 1
  %10838 = xor i64 %10822, %10821
  %10839 = xor i64 %10838, %10825
  %10840 = lshr i64 %10839, 4
  %10841 = trunc i64 %10840 to i8
  %10842 = and i8 %10841, 1
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10842, i8* %10843, align 1
  %10844 = icmp eq i64 %10825, 0
  %10845 = zext i1 %10844 to i8
  %10846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10845, i8* %10846, align 1
  %10847 = lshr i64 %10825, 63
  %10848 = trunc i64 %10847 to i8
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10848, i8* %10849, align 1
  %10850 = lshr i64 %10821, 63
  %10851 = lshr i64 %10822, 63
  %10852 = xor i64 %10847, %10850
  %10853 = xor i64 %10847, %10851
  %10854 = add i64 %10852, %10853
  %10855 = icmp eq i64 %10854, 2
  %10856 = zext i1 %10855 to i8
  %10857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10856, i8* %10857, align 1
  store %struct.Memory* %loadMem_4897fc, %struct.Memory** %MEMORY
  %loadMem_4897ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10859 = getelementptr inbounds %struct.GPR, %struct.GPR* %10858, i32 0, i32 33
  %10860 = getelementptr inbounds %struct.Reg, %struct.Reg* %10859, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %10860 to i64*
  %10861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10862 = getelementptr inbounds %struct.GPR, %struct.GPR* %10861, i32 0, i32 7
  %10863 = getelementptr inbounds %struct.Reg, %struct.Reg* %10862, i32 0, i32 0
  %RDX.i421 = bitcast %union.anon* %10863 to i64*
  %10864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10865 = getelementptr inbounds %struct.GPR, %struct.GPR* %10864, i32 0, i32 15
  %10866 = getelementptr inbounds %struct.Reg, %struct.Reg* %10865, i32 0, i32 0
  %RBP.i422 = bitcast %union.anon* %10866 to i64*
  %10867 = load i64, i64* %RBP.i422
  %10868 = sub i64 %10867, 40
  %10869 = load i64, i64* %PC.i420
  %10870 = add i64 %10869, 4
  store i64 %10870, i64* %PC.i420
  %10871 = inttoptr i64 %10868 to i32*
  %10872 = load i32, i32* %10871
  %10873 = sext i32 %10872 to i64
  store i64 %10873, i64* %RDX.i421, align 8
  store %struct.Memory* %loadMem_4897ff, %struct.Memory** %MEMORY
  %loadMem_489803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10875 = getelementptr inbounds %struct.GPR, %struct.GPR* %10874, i32 0, i32 33
  %10876 = getelementptr inbounds %struct.Reg, %struct.Reg* %10875, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %10876 to i64*
  %10877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10878 = getelementptr inbounds %struct.GPR, %struct.GPR* %10877, i32 0, i32 7
  %10879 = getelementptr inbounds %struct.Reg, %struct.Reg* %10878, i32 0, i32 0
  %RDX.i419 = bitcast %union.anon* %10879 to i64*
  %10880 = load i64, i64* %RDX.i419
  %10881 = load i64, i64* %PC.i418
  %10882 = add i64 %10881, 4
  store i64 %10882, i64* %PC.i418
  %10883 = shl i64 %10880, 4
  %10884 = icmp slt i64 %10883, 0
  %10885 = shl i64 %10883, 1
  store i64 %10885, i64* %RDX.i419, align 8
  %10886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10887 = zext i1 %10884 to i8
  store i8 %10887, i8* %10886, align 1
  %10888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10889 = trunc i64 %10885 to i32
  %10890 = and i32 %10889, 254
  %10891 = call i32 @llvm.ctpop.i32(i32 %10890)
  %10892 = trunc i32 %10891 to i8
  %10893 = and i8 %10892, 1
  %10894 = xor i8 %10893, 1
  store i8 %10894, i8* %10888, align 1
  %10895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10895, align 1
  %10896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10897 = icmp eq i64 %10885, 0
  %10898 = zext i1 %10897 to i8
  store i8 %10898, i8* %10896, align 1
  %10899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10900 = lshr i64 %10885, 63
  %10901 = trunc i64 %10900 to i8
  store i8 %10901, i8* %10899, align 1
  %10902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10902, align 1
  store %struct.Memory* %loadMem_489803, %struct.Memory** %MEMORY
  %loadMem_489807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10904 = getelementptr inbounds %struct.GPR, %struct.GPR* %10903, i32 0, i32 33
  %10905 = getelementptr inbounds %struct.Reg, %struct.Reg* %10904, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %10905 to i64*
  %10906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10907 = getelementptr inbounds %struct.GPR, %struct.GPR* %10906, i32 0, i32 5
  %10908 = getelementptr inbounds %struct.Reg, %struct.Reg* %10907, i32 0, i32 0
  %RCX.i416 = bitcast %union.anon* %10908 to i64*
  %10909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10910 = getelementptr inbounds %struct.GPR, %struct.GPR* %10909, i32 0, i32 7
  %10911 = getelementptr inbounds %struct.Reg, %struct.Reg* %10910, i32 0, i32 0
  %RDX.i417 = bitcast %union.anon* %10911 to i64*
  %10912 = load i64, i64* %RCX.i416
  %10913 = load i64, i64* %RDX.i417
  %10914 = load i64, i64* %PC.i415
  %10915 = add i64 %10914, 3
  store i64 %10915, i64* %PC.i415
  %10916 = add i64 %10913, %10912
  store i64 %10916, i64* %RCX.i416, align 8
  %10917 = icmp ult i64 %10916, %10912
  %10918 = icmp ult i64 %10916, %10913
  %10919 = or i1 %10917, %10918
  %10920 = zext i1 %10919 to i8
  %10921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10920, i8* %10921, align 1
  %10922 = trunc i64 %10916 to i32
  %10923 = and i32 %10922, 255
  %10924 = call i32 @llvm.ctpop.i32(i32 %10923)
  %10925 = trunc i32 %10924 to i8
  %10926 = and i8 %10925, 1
  %10927 = xor i8 %10926, 1
  %10928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10927, i8* %10928, align 1
  %10929 = xor i64 %10913, %10912
  %10930 = xor i64 %10929, %10916
  %10931 = lshr i64 %10930, 4
  %10932 = trunc i64 %10931 to i8
  %10933 = and i8 %10932, 1
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10933, i8* %10934, align 1
  %10935 = icmp eq i64 %10916, 0
  %10936 = zext i1 %10935 to i8
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10936, i8* %10937, align 1
  %10938 = lshr i64 %10916, 63
  %10939 = trunc i64 %10938 to i8
  %10940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10939, i8* %10940, align 1
  %10941 = lshr i64 %10912, 63
  %10942 = lshr i64 %10913, 63
  %10943 = xor i64 %10938, %10941
  %10944 = xor i64 %10938, %10942
  %10945 = add i64 %10943, %10944
  %10946 = icmp eq i64 %10945, 2
  %10947 = zext i1 %10946 to i8
  %10948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10947, i8* %10948, align 1
  store %struct.Memory* %loadMem_489807, %struct.Memory** %MEMORY
  %loadMem_48980a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10950 = getelementptr inbounds %struct.GPR, %struct.GPR* %10949, i32 0, i32 33
  %10951 = getelementptr inbounds %struct.Reg, %struct.Reg* %10950, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %10951 to i64*
  %10952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10953 = getelementptr inbounds %struct.GPR, %struct.GPR* %10952, i32 0, i32 7
  %10954 = getelementptr inbounds %struct.Reg, %struct.Reg* %10953, i32 0, i32 0
  %RDX.i413 = bitcast %union.anon* %10954 to i64*
  %10955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10956 = getelementptr inbounds %struct.GPR, %struct.GPR* %10955, i32 0, i32 15
  %10957 = getelementptr inbounds %struct.Reg, %struct.Reg* %10956, i32 0, i32 0
  %RBP.i414 = bitcast %union.anon* %10957 to i64*
  %10958 = load i64, i64* %RBP.i414
  %10959 = sub i64 %10958, 36
  %10960 = load i64, i64* %PC.i412
  %10961 = add i64 %10960, 4
  store i64 %10961, i64* %PC.i412
  %10962 = inttoptr i64 %10959 to i32*
  %10963 = load i32, i32* %10962
  %10964 = sext i32 %10963 to i64
  store i64 %10964, i64* %RDX.i413, align 8
  store %struct.Memory* %loadMem_48980a, %struct.Memory** %MEMORY
  %loadMem_48980e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 33
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %10967 to i64*
  %10968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10969 = getelementptr inbounds %struct.GPR, %struct.GPR* %10968, i32 0, i32 5
  %10970 = getelementptr inbounds %struct.Reg, %struct.Reg* %10969, i32 0, i32 0
  %RCX.i409 = bitcast %union.anon* %10970 to i64*
  %10971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10972 = getelementptr inbounds %struct.GPR, %struct.GPR* %10971, i32 0, i32 7
  %10973 = getelementptr inbounds %struct.Reg, %struct.Reg* %10972, i32 0, i32 0
  %RDX.i410 = bitcast %union.anon* %10973 to i64*
  %10974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10975 = getelementptr inbounds %struct.GPR, %struct.GPR* %10974, i32 0, i32 9
  %10976 = getelementptr inbounds %struct.Reg, %struct.Reg* %10975, i32 0, i32 0
  %RSI.i411 = bitcast %union.anon* %10976 to i64*
  %10977 = load i64, i64* %RCX.i409
  %10978 = load i64, i64* %RDX.i410
  %10979 = mul i64 %10978, 2
  %10980 = add i64 %10979, %10977
  %10981 = load i64, i64* %PC.i408
  %10982 = add i64 %10981, 4
  store i64 %10982, i64* %PC.i408
  %10983 = inttoptr i64 %10980 to i16*
  %10984 = load i16, i16* %10983
  %10985 = zext i16 %10984 to i64
  store i64 %10985, i64* %RSI.i411, align 8
  store %struct.Memory* %loadMem_48980e, %struct.Memory** %MEMORY
  %loadMem_489812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10987 = getelementptr inbounds %struct.GPR, %struct.GPR* %10986, i32 0, i32 33
  %10988 = getelementptr inbounds %struct.Reg, %struct.Reg* %10987, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %10988 to i64*
  %10989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10990 = getelementptr inbounds %struct.GPR, %struct.GPR* %10989, i32 0, i32 9
  %10991 = getelementptr inbounds %struct.Reg, %struct.Reg* %10990, i32 0, i32 0
  %ESI.i406 = bitcast %union.anon* %10991 to i32*
  %10992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10993 = getelementptr inbounds %struct.GPR, %struct.GPR* %10992, i32 0, i32 1
  %10994 = getelementptr inbounds %struct.Reg, %struct.Reg* %10993, i32 0, i32 0
  %RAX.i407 = bitcast %union.anon* %10994 to i64*
  %10995 = load i64, i64* %RAX.i407
  %10996 = load i32, i32* %ESI.i406
  %10997 = zext i32 %10996 to i64
  %10998 = load i64, i64* %PC.i405
  %10999 = add i64 %10998, 2
  store i64 %10999, i64* %PC.i405
  %11000 = trunc i64 %10995 to i32
  %11001 = add i32 %10996, %11000
  %11002 = zext i32 %11001 to i64
  store i64 %11002, i64* %RAX.i407, align 8
  %11003 = icmp ult i32 %11001, %11000
  %11004 = icmp ult i32 %11001, %10996
  %11005 = or i1 %11003, %11004
  %11006 = zext i1 %11005 to i8
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11006, i8* %11007, align 1
  %11008 = and i32 %11001, 255
  %11009 = call i32 @llvm.ctpop.i32(i32 %11008)
  %11010 = trunc i32 %11009 to i8
  %11011 = and i8 %11010, 1
  %11012 = xor i8 %11011, 1
  %11013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11012, i8* %11013, align 1
  %11014 = xor i64 %10997, %10995
  %11015 = trunc i64 %11014 to i32
  %11016 = xor i32 %11015, %11001
  %11017 = lshr i32 %11016, 4
  %11018 = trunc i32 %11017 to i8
  %11019 = and i8 %11018, 1
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11019, i8* %11020, align 1
  %11021 = icmp eq i32 %11001, 0
  %11022 = zext i1 %11021 to i8
  %11023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11022, i8* %11023, align 1
  %11024 = lshr i32 %11001, 31
  %11025 = trunc i32 %11024 to i8
  %11026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11025, i8* %11026, align 1
  %11027 = lshr i32 %11000, 31
  %11028 = lshr i32 %10996, 31
  %11029 = xor i32 %11024, %11027
  %11030 = xor i32 %11024, %11028
  %11031 = add i32 %11029, %11030
  %11032 = icmp eq i32 %11031, 2
  %11033 = zext i1 %11032 to i8
  %11034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11033, i8* %11034, align 1
  store %struct.Memory* %loadMem_489812, %struct.Memory** %MEMORY
  %loadMem_489814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11036 = getelementptr inbounds %struct.GPR, %struct.GPR* %11035, i32 0, i32 33
  %11037 = getelementptr inbounds %struct.Reg, %struct.Reg* %11036, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %11037 to i64*
  %11038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11039 = getelementptr inbounds %struct.GPR, %struct.GPR* %11038, i32 0, i32 1
  %11040 = getelementptr inbounds %struct.Reg, %struct.Reg* %11039, i32 0, i32 0
  %EAX.i403 = bitcast %union.anon* %11040 to i32*
  %11041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11042 = getelementptr inbounds %struct.GPR, %struct.GPR* %11041, i32 0, i32 15
  %11043 = getelementptr inbounds %struct.Reg, %struct.Reg* %11042, i32 0, i32 0
  %RBP.i404 = bitcast %union.anon* %11043 to i64*
  %11044 = load i64, i64* %RBP.i404
  %11045 = sub i64 %11044, 104
  %11046 = load i32, i32* %EAX.i403
  %11047 = zext i32 %11046 to i64
  %11048 = load i64, i64* %PC.i402
  %11049 = add i64 %11048, 3
  store i64 %11049, i64* %PC.i402
  %11050 = inttoptr i64 %11045 to i32*
  store i32 %11046, i32* %11050
  store %struct.Memory* %loadMem_489814, %struct.Memory** %MEMORY
  br label %block_.L_489817

block_.L_489817:                                  ; preds = %block_.L_4897df, %block_4897d5
  %loadMem_489817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11052 = getelementptr inbounds %struct.GPR, %struct.GPR* %11051, i32 0, i32 33
  %11053 = getelementptr inbounds %struct.Reg, %struct.Reg* %11052, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %11053 to i64*
  %11054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11055 = getelementptr inbounds %struct.GPR, %struct.GPR* %11054, i32 0, i32 1
  %11056 = getelementptr inbounds %struct.Reg, %struct.Reg* %11055, i32 0, i32 0
  %RAX.i400 = bitcast %union.anon* %11056 to i64*
  %11057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11058 = getelementptr inbounds %struct.GPR, %struct.GPR* %11057, i32 0, i32 15
  %11059 = getelementptr inbounds %struct.Reg, %struct.Reg* %11058, i32 0, i32 0
  %RBP.i401 = bitcast %union.anon* %11059 to i64*
  %11060 = load i64, i64* %RBP.i401
  %11061 = sub i64 %11060, 104
  %11062 = load i64, i64* %PC.i399
  %11063 = add i64 %11062, 3
  store i64 %11063, i64* %PC.i399
  %11064 = inttoptr i64 %11061 to i32*
  %11065 = load i32, i32* %11064
  %11066 = zext i32 %11065 to i64
  store i64 %11066, i64* %RAX.i400, align 8
  store %struct.Memory* %loadMem_489817, %struct.Memory** %MEMORY
  %loadMem_48981a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11068 = getelementptr inbounds %struct.GPR, %struct.GPR* %11067, i32 0, i32 33
  %11069 = getelementptr inbounds %struct.Reg, %struct.Reg* %11068, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %11069 to i64*
  %11070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11071 = getelementptr inbounds %struct.GPR, %struct.GPR* %11070, i32 0, i32 5
  %11072 = getelementptr inbounds %struct.Reg, %struct.Reg* %11071, i32 0, i32 0
  %RCX.i397 = bitcast %union.anon* %11072 to i64*
  %11073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11074 = getelementptr inbounds %struct.GPR, %struct.GPR* %11073, i32 0, i32 15
  %11075 = getelementptr inbounds %struct.Reg, %struct.Reg* %11074, i32 0, i32 0
  %RBP.i398 = bitcast %union.anon* %11075 to i64*
  %11076 = load i64, i64* %RBP.i398
  %11077 = sub i64 %11076, 100
  %11078 = load i64, i64* %PC.i396
  %11079 = add i64 %11078, 3
  store i64 %11079, i64* %PC.i396
  %11080 = inttoptr i64 %11077 to i32*
  %11081 = load i32, i32* %11080
  %11082 = zext i32 %11081 to i64
  store i64 %11082, i64* %RCX.i397, align 8
  store %struct.Memory* %loadMem_48981a, %struct.Memory** %MEMORY
  %loadMem_48981d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11084 = getelementptr inbounds %struct.GPR, %struct.GPR* %11083, i32 0, i32 33
  %11085 = getelementptr inbounds %struct.Reg, %struct.Reg* %11084, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %11085 to i64*
  %11086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11087 = getelementptr inbounds %struct.GPR, %struct.GPR* %11086, i32 0, i32 1
  %11088 = getelementptr inbounds %struct.Reg, %struct.Reg* %11087, i32 0, i32 0
  %EAX.i394 = bitcast %union.anon* %11088 to i32*
  %11089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11090 = getelementptr inbounds %struct.GPR, %struct.GPR* %11089, i32 0, i32 5
  %11091 = getelementptr inbounds %struct.Reg, %struct.Reg* %11090, i32 0, i32 0
  %ECX.i395 = bitcast %union.anon* %11091 to i32*
  %11092 = load i32, i32* %ECX.i395
  %11093 = zext i32 %11092 to i64
  %11094 = load i32, i32* %EAX.i394
  %11095 = zext i32 %11094 to i64
  %11096 = load i64, i64* %PC.i393
  %11097 = add i64 %11096, 2
  store i64 %11097, i64* %PC.i393
  %11098 = sub i32 %11092, %11094
  %11099 = icmp ult i32 %11092, %11094
  %11100 = zext i1 %11099 to i8
  %11101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11100, i8* %11101, align 1
  %11102 = and i32 %11098, 255
  %11103 = call i32 @llvm.ctpop.i32(i32 %11102)
  %11104 = trunc i32 %11103 to i8
  %11105 = and i8 %11104, 1
  %11106 = xor i8 %11105, 1
  %11107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11106, i8* %11107, align 1
  %11108 = xor i64 %11095, %11093
  %11109 = trunc i64 %11108 to i32
  %11110 = xor i32 %11109, %11098
  %11111 = lshr i32 %11110, 4
  %11112 = trunc i32 %11111 to i8
  %11113 = and i8 %11112, 1
  %11114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11113, i8* %11114, align 1
  %11115 = icmp eq i32 %11098, 0
  %11116 = zext i1 %11115 to i8
  %11117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11116, i8* %11117, align 1
  %11118 = lshr i32 %11098, 31
  %11119 = trunc i32 %11118 to i8
  %11120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11119, i8* %11120, align 1
  %11121 = lshr i32 %11092, 31
  %11122 = lshr i32 %11094, 31
  %11123 = xor i32 %11122, %11121
  %11124 = xor i32 %11118, %11121
  %11125 = add i32 %11124, %11123
  %11126 = icmp eq i32 %11125, 2
  %11127 = zext i1 %11126 to i8
  %11128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11127, i8* %11128, align 1
  store %struct.Memory* %loadMem_48981d, %struct.Memory** %MEMORY
  %loadMem_48981f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11130 = getelementptr inbounds %struct.GPR, %struct.GPR* %11129, i32 0, i32 33
  %11131 = getelementptr inbounds %struct.Reg, %struct.Reg* %11130, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %11131 to i64*
  %11132 = load i64, i64* %PC.i392
  %11133 = add i64 %11132, 28
  %11134 = load i64, i64* %PC.i392
  %11135 = add i64 %11134, 6
  %11136 = load i64, i64* %PC.i392
  %11137 = add i64 %11136, 6
  store i64 %11137, i64* %PC.i392
  %11138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11139 = load i8, i8* %11138, align 1
  %11140 = icmp ne i8 %11139, 0
  %11141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11142 = load i8, i8* %11141, align 1
  %11143 = icmp ne i8 %11142, 0
  %11144 = xor i1 %11140, %11143
  %11145 = xor i1 %11144, true
  %11146 = zext i1 %11145 to i8
  store i8 %11146, i8* %BRANCH_TAKEN, align 1
  %11147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11148 = select i1 %11144, i64 %11135, i64 %11133
  store i64 %11148, i64* %11147, align 8
  store %struct.Memory* %loadMem_48981f, %struct.Memory** %MEMORY
  %loadBr_48981f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48981f = icmp eq i8 %loadBr_48981f, 1
  br i1 %cmpBr_48981f, label %block_.L_48983b, label %block_489825

block_489825:                                     ; preds = %block_.L_489817
  %loadMem_489825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11150 = getelementptr inbounds %struct.GPR, %struct.GPR* %11149, i32 0, i32 33
  %11151 = getelementptr inbounds %struct.Reg, %struct.Reg* %11150, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %11151 to i64*
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11153 = getelementptr inbounds %struct.GPR, %struct.GPR* %11152, i32 0, i32 1
  %11154 = getelementptr inbounds %struct.Reg, %struct.Reg* %11153, i32 0, i32 0
  %RAX.i391 = bitcast %union.anon* %11154 to i64*
  %11155 = load i64, i64* %PC.i390
  %11156 = add i64 %11155, 8
  store i64 %11156, i64* %PC.i390
  %11157 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11157, i64* %RAX.i391, align 8
  store %struct.Memory* %loadMem_489825, %struct.Memory** %MEMORY
  %loadMem_48982d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11159 = getelementptr inbounds %struct.GPR, %struct.GPR* %11158, i32 0, i32 33
  %11160 = getelementptr inbounds %struct.Reg, %struct.Reg* %11159, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %11160 to i64*
  %11161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11162 = getelementptr inbounds %struct.GPR, %struct.GPR* %11161, i32 0, i32 1
  %11163 = getelementptr inbounds %struct.Reg, %struct.Reg* %11162, i32 0, i32 0
  %RAX.i388 = bitcast %union.anon* %11163 to i64*
  %11164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11165 = getelementptr inbounds %struct.GPR, %struct.GPR* %11164, i32 0, i32 5
  %11166 = getelementptr inbounds %struct.Reg, %struct.Reg* %11165, i32 0, i32 0
  %RCX.i389 = bitcast %union.anon* %11166 to i64*
  %11167 = load i64, i64* %RAX.i388
  %11168 = add i64 %11167, 72684
  %11169 = load i64, i64* %PC.i387
  %11170 = add i64 %11169, 6
  store i64 %11170, i64* %PC.i387
  %11171 = inttoptr i64 %11168 to i32*
  %11172 = load i32, i32* %11171
  %11173 = zext i32 %11172 to i64
  store i64 %11173, i64* %RCX.i389, align 8
  store %struct.Memory* %loadMem_48982d, %struct.Memory** %MEMORY
  %loadMem_489833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11175 = getelementptr inbounds %struct.GPR, %struct.GPR* %11174, i32 0, i32 33
  %11176 = getelementptr inbounds %struct.Reg, %struct.Reg* %11175, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %11176 to i64*
  %11177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11178 = getelementptr inbounds %struct.GPR, %struct.GPR* %11177, i32 0, i32 5
  %11179 = getelementptr inbounds %struct.Reg, %struct.Reg* %11178, i32 0, i32 0
  %ECX.i385 = bitcast %union.anon* %11179 to i32*
  %11180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11181 = getelementptr inbounds %struct.GPR, %struct.GPR* %11180, i32 0, i32 15
  %11182 = getelementptr inbounds %struct.Reg, %struct.Reg* %11181, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %11182 to i64*
  %11183 = load i64, i64* %RBP.i386
  %11184 = sub i64 %11183, 108
  %11185 = load i32, i32* %ECX.i385
  %11186 = zext i32 %11185 to i64
  %11187 = load i64, i64* %PC.i384
  %11188 = add i64 %11187, 3
  store i64 %11188, i64* %PC.i384
  %11189 = inttoptr i64 %11184 to i32*
  store i32 %11185, i32* %11189
  store %struct.Memory* %loadMem_489833, %struct.Memory** %MEMORY
  %loadMem_489836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11191 = getelementptr inbounds %struct.GPR, %struct.GPR* %11190, i32 0, i32 33
  %11192 = getelementptr inbounds %struct.Reg, %struct.Reg* %11191, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %11192 to i64*
  %11193 = load i64, i64* %PC.i383
  %11194 = add i64 %11193, 140
  %11195 = load i64, i64* %PC.i383
  %11196 = add i64 %11195, 5
  store i64 %11196, i64* %PC.i383
  %11197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11194, i64* %11197, align 8
  store %struct.Memory* %loadMem_489836, %struct.Memory** %MEMORY
  br label %block_.L_4898c2

block_.L_48983b:                                  ; preds = %block_.L_489817
  %loadMem_48983b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11199 = getelementptr inbounds %struct.GPR, %struct.GPR* %11198, i32 0, i32 33
  %11200 = getelementptr inbounds %struct.Reg, %struct.Reg* %11199, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %11200 to i64*
  %11201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11202 = getelementptr inbounds %struct.GPR, %struct.GPR* %11201, i32 0, i32 1
  %11203 = getelementptr inbounds %struct.Reg, %struct.Reg* %11202, i32 0, i32 0
  %EAX.i381 = bitcast %union.anon* %11203 to i32*
  %11204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11205 = getelementptr inbounds %struct.GPR, %struct.GPR* %11204, i32 0, i32 1
  %11206 = getelementptr inbounds %struct.Reg, %struct.Reg* %11205, i32 0, i32 0
  %RAX.i382 = bitcast %union.anon* %11206 to i64*
  %11207 = load i64, i64* %RAX.i382
  %11208 = load i32, i32* %EAX.i381
  %11209 = zext i32 %11208 to i64
  %11210 = load i64, i64* %PC.i380
  %11211 = add i64 %11210, 2
  store i64 %11211, i64* %PC.i380
  %11212 = xor i64 %11209, %11207
  %11213 = trunc i64 %11212 to i32
  %11214 = and i64 %11212, 4294967295
  store i64 %11214, i64* %RAX.i382, align 8
  %11215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11215, align 1
  %11216 = and i32 %11213, 255
  %11217 = call i32 @llvm.ctpop.i32(i32 %11216)
  %11218 = trunc i32 %11217 to i8
  %11219 = and i8 %11218, 1
  %11220 = xor i8 %11219, 1
  %11221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11220, i8* %11221, align 1
  %11222 = icmp eq i32 %11213, 0
  %11223 = zext i1 %11222 to i8
  %11224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11223, i8* %11224, align 1
  %11225 = lshr i32 %11213, 31
  %11226 = trunc i32 %11225 to i8
  %11227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11226, i8* %11227, align 1
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11228, align 1
  %11229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11229, align 1
  store %struct.Memory* %loadMem_48983b, %struct.Memory** %MEMORY
  %loadMem_48983d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11231 = getelementptr inbounds %struct.GPR, %struct.GPR* %11230, i32 0, i32 33
  %11232 = getelementptr inbounds %struct.Reg, %struct.Reg* %11231, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %11232 to i64*
  %11233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11234 = getelementptr inbounds %struct.GPR, %struct.GPR* %11233, i32 0, i32 5
  %11235 = getelementptr inbounds %struct.Reg, %struct.Reg* %11234, i32 0, i32 0
  %RCX.i378 = bitcast %union.anon* %11235 to i64*
  %11236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11237 = getelementptr inbounds %struct.GPR, %struct.GPR* %11236, i32 0, i32 15
  %11238 = getelementptr inbounds %struct.Reg, %struct.Reg* %11237, i32 0, i32 0
  %RBP.i379 = bitcast %union.anon* %11238 to i64*
  %11239 = load i64, i64* %RBP.i379
  %11240 = sub i64 %11239, 24
  %11241 = load i64, i64* %PC.i377
  %11242 = add i64 %11241, 3
  store i64 %11242, i64* %PC.i377
  %11243 = inttoptr i64 %11240 to i32*
  %11244 = load i32, i32* %11243
  %11245 = zext i32 %11244 to i64
  store i64 %11245, i64* %RCX.i378, align 8
  store %struct.Memory* %loadMem_48983d, %struct.Memory** %MEMORY
  %loadMem_489840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11247 = getelementptr inbounds %struct.GPR, %struct.GPR* %11246, i32 0, i32 33
  %11248 = getelementptr inbounds %struct.Reg, %struct.Reg* %11247, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %11248 to i64*
  %11249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11250 = getelementptr inbounds %struct.GPR, %struct.GPR* %11249, i32 0, i32 7
  %11251 = getelementptr inbounds %struct.Reg, %struct.Reg* %11250, i32 0, i32 0
  %RDX.i376 = bitcast %union.anon* %11251 to i64*
  %11252 = load i64, i64* %PC.i375
  %11253 = add i64 %11252, 8
  store i64 %11253, i64* %PC.i375
  %11254 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11254, i64* %RDX.i376, align 8
  store %struct.Memory* %loadMem_489840, %struct.Memory** %MEMORY
  %loadMem_489848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11256 = getelementptr inbounds %struct.GPR, %struct.GPR* %11255, i32 0, i32 33
  %11257 = getelementptr inbounds %struct.Reg, %struct.Reg* %11256, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %11257 to i64*
  %11258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11259 = getelementptr inbounds %struct.GPR, %struct.GPR* %11258, i32 0, i32 7
  %11260 = getelementptr inbounds %struct.Reg, %struct.Reg* %11259, i32 0, i32 0
  %RDX.i374 = bitcast %union.anon* %11260 to i64*
  %11261 = load i64, i64* %RDX.i374
  %11262 = load i64, i64* %PC.i373
  %11263 = add i64 %11262, 7
  store i64 %11263, i64* %PC.i373
  %11264 = add i64 4792, %11261
  store i64 %11264, i64* %RDX.i374, align 8
  %11265 = icmp ult i64 %11264, %11261
  %11266 = icmp ult i64 %11264, 4792
  %11267 = or i1 %11265, %11266
  %11268 = zext i1 %11267 to i8
  %11269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11268, i8* %11269, align 1
  %11270 = trunc i64 %11264 to i32
  %11271 = and i32 %11270, 255
  %11272 = call i32 @llvm.ctpop.i32(i32 %11271)
  %11273 = trunc i32 %11272 to i8
  %11274 = and i8 %11273, 1
  %11275 = xor i8 %11274, 1
  %11276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11275, i8* %11276, align 1
  %11277 = xor i64 4792, %11261
  %11278 = xor i64 %11277, %11264
  %11279 = lshr i64 %11278, 4
  %11280 = trunc i64 %11279 to i8
  %11281 = and i8 %11280, 1
  %11282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11281, i8* %11282, align 1
  %11283 = icmp eq i64 %11264, 0
  %11284 = zext i1 %11283 to i8
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11284, i8* %11285, align 1
  %11286 = lshr i64 %11264, 63
  %11287 = trunc i64 %11286 to i8
  %11288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11287, i8* %11288, align 1
  %11289 = lshr i64 %11261, 63
  %11290 = xor i64 %11286, %11289
  %11291 = add i64 %11290, %11286
  %11292 = icmp eq i64 %11291, 2
  %11293 = zext i1 %11292 to i8
  %11294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11293, i8* %11294, align 1
  store %struct.Memory* %loadMem_489848, %struct.Memory** %MEMORY
  %loadMem_48984f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11296 = getelementptr inbounds %struct.GPR, %struct.GPR* %11295, i32 0, i32 33
  %11297 = getelementptr inbounds %struct.Reg, %struct.Reg* %11296, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %11297 to i64*
  %11298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11299 = getelementptr inbounds %struct.GPR, %struct.GPR* %11298, i32 0, i32 9
  %11300 = getelementptr inbounds %struct.Reg, %struct.Reg* %11299, i32 0, i32 0
  %RSI.i371 = bitcast %union.anon* %11300 to i64*
  %11301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11302 = getelementptr inbounds %struct.GPR, %struct.GPR* %11301, i32 0, i32 15
  %11303 = getelementptr inbounds %struct.Reg, %struct.Reg* %11302, i32 0, i32 0
  %RBP.i372 = bitcast %union.anon* %11303 to i64*
  %11304 = load i64, i64* %RBP.i372
  %11305 = sub i64 %11304, 16
  %11306 = load i64, i64* %PC.i370
  %11307 = add i64 %11306, 4
  store i64 %11307, i64* %PC.i370
  %11308 = inttoptr i64 %11305 to i64*
  %11309 = load i64, i64* %11308
  store i64 %11309, i64* %RSI.i371, align 8
  store %struct.Memory* %loadMem_48984f, %struct.Memory** %MEMORY
  %loadMem_489853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11311 = getelementptr inbounds %struct.GPR, %struct.GPR* %11310, i32 0, i32 33
  %11312 = getelementptr inbounds %struct.Reg, %struct.Reg* %11311, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %11312 to i64*
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11314 = getelementptr inbounds %struct.GPR, %struct.GPR* %11313, i32 0, i32 9
  %11315 = getelementptr inbounds %struct.Reg, %struct.Reg* %11314, i32 0, i32 0
  %RSI.i369 = bitcast %union.anon* %11315 to i64*
  %11316 = load i64, i64* %RSI.i369
  %11317 = load i64, i64* %PC.i368
  %11318 = add i64 %11317, 3
  store i64 %11318, i64* %PC.i368
  %11319 = inttoptr i64 %11316 to i32*
  %11320 = load i32, i32* %11319
  %11321 = sext i32 %11320 to i64
  store i64 %11321, i64* %RSI.i369, align 8
  store %struct.Memory* %loadMem_489853, %struct.Memory** %MEMORY
  %loadMem_489856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11323 = getelementptr inbounds %struct.GPR, %struct.GPR* %11322, i32 0, i32 33
  %11324 = getelementptr inbounds %struct.Reg, %struct.Reg* %11323, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %11324 to i64*
  %11325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11326 = getelementptr inbounds %struct.GPR, %struct.GPR* %11325, i32 0, i32 9
  %11327 = getelementptr inbounds %struct.Reg, %struct.Reg* %11326, i32 0, i32 0
  %RSI.i367 = bitcast %union.anon* %11327 to i64*
  %11328 = load i64, i64* %RSI.i367
  %11329 = load i64, i64* %PC.i366
  %11330 = add i64 %11329, 4
  store i64 %11330, i64* %PC.i366
  %11331 = shl i64 %11328, 8
  %11332 = icmp slt i64 %11331, 0
  %11333 = shl i64 %11331, 1
  store i64 %11333, i64* %RSI.i367, align 8
  %11334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11335 = zext i1 %11332 to i8
  store i8 %11335, i8* %11334, align 1
  %11336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11337 = trunc i64 %11333 to i32
  store i8 1, i8* %11336, align 1
  %11338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11338, align 1
  %11339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11340 = icmp eq i64 %11333, 0
  %11341 = zext i1 %11340 to i8
  store i8 %11341, i8* %11339, align 1
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11343 = lshr i64 %11333, 63
  %11344 = trunc i64 %11343 to i8
  store i8 %11344, i8* %11342, align 1
  %11345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11345, align 1
  store %struct.Memory* %loadMem_489856, %struct.Memory** %MEMORY
  %loadMem_48985a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11347 = getelementptr inbounds %struct.GPR, %struct.GPR* %11346, i32 0, i32 33
  %11348 = getelementptr inbounds %struct.Reg, %struct.Reg* %11347, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %11348 to i64*
  %11349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11350 = getelementptr inbounds %struct.GPR, %struct.GPR* %11349, i32 0, i32 7
  %11351 = getelementptr inbounds %struct.Reg, %struct.Reg* %11350, i32 0, i32 0
  %RDX.i364 = bitcast %union.anon* %11351 to i64*
  %11352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11353 = getelementptr inbounds %struct.GPR, %struct.GPR* %11352, i32 0, i32 9
  %11354 = getelementptr inbounds %struct.Reg, %struct.Reg* %11353, i32 0, i32 0
  %RSI.i365 = bitcast %union.anon* %11354 to i64*
  %11355 = load i64, i64* %RDX.i364
  %11356 = load i64, i64* %RSI.i365
  %11357 = load i64, i64* %PC.i363
  %11358 = add i64 %11357, 3
  store i64 %11358, i64* %PC.i363
  %11359 = add i64 %11356, %11355
  store i64 %11359, i64* %RDX.i364, align 8
  %11360 = icmp ult i64 %11359, %11355
  %11361 = icmp ult i64 %11359, %11356
  %11362 = or i1 %11360, %11361
  %11363 = zext i1 %11362 to i8
  %11364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11363, i8* %11364, align 1
  %11365 = trunc i64 %11359 to i32
  %11366 = and i32 %11365, 255
  %11367 = call i32 @llvm.ctpop.i32(i32 %11366)
  %11368 = trunc i32 %11367 to i8
  %11369 = and i8 %11368, 1
  %11370 = xor i8 %11369, 1
  %11371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11370, i8* %11371, align 1
  %11372 = xor i64 %11356, %11355
  %11373 = xor i64 %11372, %11359
  %11374 = lshr i64 %11373, 4
  %11375 = trunc i64 %11374 to i8
  %11376 = and i8 %11375, 1
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11376, i8* %11377, align 1
  %11378 = icmp eq i64 %11359, 0
  %11379 = zext i1 %11378 to i8
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11379, i8* %11380, align 1
  %11381 = lshr i64 %11359, 63
  %11382 = trunc i64 %11381 to i8
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11382, i8* %11383, align 1
  %11384 = lshr i64 %11355, 63
  %11385 = lshr i64 %11356, 63
  %11386 = xor i64 %11381, %11384
  %11387 = xor i64 %11381, %11385
  %11388 = add i64 %11386, %11387
  %11389 = icmp eq i64 %11388, 2
  %11390 = zext i1 %11389 to i8
  %11391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11390, i8* %11391, align 1
  store %struct.Memory* %loadMem_48985a, %struct.Memory** %MEMORY
  %loadMem_48985d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11393 = getelementptr inbounds %struct.GPR, %struct.GPR* %11392, i32 0, i32 33
  %11394 = getelementptr inbounds %struct.Reg, %struct.Reg* %11393, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %11394 to i64*
  %11395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11396 = getelementptr inbounds %struct.GPR, %struct.GPR* %11395, i32 0, i32 9
  %11397 = getelementptr inbounds %struct.Reg, %struct.Reg* %11396, i32 0, i32 0
  %RSI.i361 = bitcast %union.anon* %11397 to i64*
  %11398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11399 = getelementptr inbounds %struct.GPR, %struct.GPR* %11398, i32 0, i32 15
  %11400 = getelementptr inbounds %struct.Reg, %struct.Reg* %11399, i32 0, i32 0
  %RBP.i362 = bitcast %union.anon* %11400 to i64*
  %11401 = load i64, i64* %RBP.i362
  %11402 = sub i64 %11401, 40
  %11403 = load i64, i64* %PC.i360
  %11404 = add i64 %11403, 4
  store i64 %11404, i64* %PC.i360
  %11405 = inttoptr i64 %11402 to i32*
  %11406 = load i32, i32* %11405
  %11407 = sext i32 %11406 to i64
  store i64 %11407, i64* %RSI.i361, align 8
  store %struct.Memory* %loadMem_48985d, %struct.Memory** %MEMORY
  %loadMem_489861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11409 = getelementptr inbounds %struct.GPR, %struct.GPR* %11408, i32 0, i32 33
  %11410 = getelementptr inbounds %struct.Reg, %struct.Reg* %11409, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %11410 to i64*
  %11411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11412 = getelementptr inbounds %struct.GPR, %struct.GPR* %11411, i32 0, i32 9
  %11413 = getelementptr inbounds %struct.Reg, %struct.Reg* %11412, i32 0, i32 0
  %RSI.i359 = bitcast %union.anon* %11413 to i64*
  %11414 = load i64, i64* %RSI.i359
  %11415 = load i64, i64* %PC.i358
  %11416 = add i64 %11415, 4
  store i64 %11416, i64* %PC.i358
  %11417 = shl i64 %11414, 4
  %11418 = icmp slt i64 %11417, 0
  %11419 = shl i64 %11417, 1
  store i64 %11419, i64* %RSI.i359, align 8
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11421 = zext i1 %11418 to i8
  store i8 %11421, i8* %11420, align 1
  %11422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11423 = trunc i64 %11419 to i32
  %11424 = and i32 %11423, 254
  %11425 = call i32 @llvm.ctpop.i32(i32 %11424)
  %11426 = trunc i32 %11425 to i8
  %11427 = and i8 %11426, 1
  %11428 = xor i8 %11427, 1
  store i8 %11428, i8* %11422, align 1
  %11429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11429, align 1
  %11430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11431 = icmp eq i64 %11419, 0
  %11432 = zext i1 %11431 to i8
  store i8 %11432, i8* %11430, align 1
  %11433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11434 = lshr i64 %11419, 63
  %11435 = trunc i64 %11434 to i8
  store i8 %11435, i8* %11433, align 1
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11436, align 1
  store %struct.Memory* %loadMem_489861, %struct.Memory** %MEMORY
  %loadMem_489865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11438 = getelementptr inbounds %struct.GPR, %struct.GPR* %11437, i32 0, i32 33
  %11439 = getelementptr inbounds %struct.Reg, %struct.Reg* %11438, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %11439 to i64*
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11441 = getelementptr inbounds %struct.GPR, %struct.GPR* %11440, i32 0, i32 7
  %11442 = getelementptr inbounds %struct.Reg, %struct.Reg* %11441, i32 0, i32 0
  %RDX.i356 = bitcast %union.anon* %11442 to i64*
  %11443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11444 = getelementptr inbounds %struct.GPR, %struct.GPR* %11443, i32 0, i32 9
  %11445 = getelementptr inbounds %struct.Reg, %struct.Reg* %11444, i32 0, i32 0
  %RSI.i357 = bitcast %union.anon* %11445 to i64*
  %11446 = load i64, i64* %RDX.i356
  %11447 = load i64, i64* %RSI.i357
  %11448 = load i64, i64* %PC.i355
  %11449 = add i64 %11448, 3
  store i64 %11449, i64* %PC.i355
  %11450 = add i64 %11447, %11446
  store i64 %11450, i64* %RDX.i356, align 8
  %11451 = icmp ult i64 %11450, %11446
  %11452 = icmp ult i64 %11450, %11447
  %11453 = or i1 %11451, %11452
  %11454 = zext i1 %11453 to i8
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11454, i8* %11455, align 1
  %11456 = trunc i64 %11450 to i32
  %11457 = and i32 %11456, 255
  %11458 = call i32 @llvm.ctpop.i32(i32 %11457)
  %11459 = trunc i32 %11458 to i8
  %11460 = and i8 %11459, 1
  %11461 = xor i8 %11460, 1
  %11462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11461, i8* %11462, align 1
  %11463 = xor i64 %11447, %11446
  %11464 = xor i64 %11463, %11450
  %11465 = lshr i64 %11464, 4
  %11466 = trunc i64 %11465 to i8
  %11467 = and i8 %11466, 1
  %11468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11467, i8* %11468, align 1
  %11469 = icmp eq i64 %11450, 0
  %11470 = zext i1 %11469 to i8
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11470, i8* %11471, align 1
  %11472 = lshr i64 %11450, 63
  %11473 = trunc i64 %11472 to i8
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11473, i8* %11474, align 1
  %11475 = lshr i64 %11446, 63
  %11476 = lshr i64 %11447, 63
  %11477 = xor i64 %11472, %11475
  %11478 = xor i64 %11472, %11476
  %11479 = add i64 %11477, %11478
  %11480 = icmp eq i64 %11479, 2
  %11481 = zext i1 %11480 to i8
  %11482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11481, i8* %11482, align 1
  store %struct.Memory* %loadMem_489865, %struct.Memory** %MEMORY
  %loadMem_489868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11484 = getelementptr inbounds %struct.GPR, %struct.GPR* %11483, i32 0, i32 33
  %11485 = getelementptr inbounds %struct.Reg, %struct.Reg* %11484, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %11485 to i64*
  %11486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11487 = getelementptr inbounds %struct.GPR, %struct.GPR* %11486, i32 0, i32 9
  %11488 = getelementptr inbounds %struct.Reg, %struct.Reg* %11487, i32 0, i32 0
  %RSI.i353 = bitcast %union.anon* %11488 to i64*
  %11489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11490 = getelementptr inbounds %struct.GPR, %struct.GPR* %11489, i32 0, i32 15
  %11491 = getelementptr inbounds %struct.Reg, %struct.Reg* %11490, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %11491 to i64*
  %11492 = load i64, i64* %RBP.i354
  %11493 = sub i64 %11492, 36
  %11494 = load i64, i64* %PC.i352
  %11495 = add i64 %11494, 4
  store i64 %11495, i64* %PC.i352
  %11496 = inttoptr i64 %11493 to i32*
  %11497 = load i32, i32* %11496
  %11498 = sext i32 %11497 to i64
  store i64 %11498, i64* %RSI.i353, align 8
  store %struct.Memory* %loadMem_489868, %struct.Memory** %MEMORY
  %loadMem_48986c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11500 = getelementptr inbounds %struct.GPR, %struct.GPR* %11499, i32 0, i32 33
  %11501 = getelementptr inbounds %struct.Reg, %struct.Reg* %11500, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %11501 to i64*
  %11502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11503 = getelementptr inbounds %struct.GPR, %struct.GPR* %11502, i32 0, i32 7
  %11504 = getelementptr inbounds %struct.Reg, %struct.Reg* %11503, i32 0, i32 0
  %RDX.i349 = bitcast %union.anon* %11504 to i64*
  %11505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11506 = getelementptr inbounds %struct.GPR, %struct.GPR* %11505, i32 0, i32 9
  %11507 = getelementptr inbounds %struct.Reg, %struct.Reg* %11506, i32 0, i32 0
  %RSI.i350 = bitcast %union.anon* %11507 to i64*
  %11508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11509 = getelementptr inbounds %struct.GPR, %struct.GPR* %11508, i32 0, i32 11
  %11510 = getelementptr inbounds %struct.Reg, %struct.Reg* %11509, i32 0, i32 0
  %RDI.i351 = bitcast %union.anon* %11510 to i64*
  %11511 = load i64, i64* %RDX.i349
  %11512 = load i64, i64* %RSI.i350
  %11513 = mul i64 %11512, 2
  %11514 = add i64 %11513, %11511
  %11515 = load i64, i64* %PC.i348
  %11516 = add i64 %11515, 4
  store i64 %11516, i64* %PC.i348
  %11517 = inttoptr i64 %11514 to i16*
  %11518 = load i16, i16* %11517
  %11519 = zext i16 %11518 to i64
  store i64 %11519, i64* %RDI.i351, align 8
  store %struct.Memory* %loadMem_48986c, %struct.Memory** %MEMORY
  %loadMem_489870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11521 = getelementptr inbounds %struct.GPR, %struct.GPR* %11520, i32 0, i32 33
  %11522 = getelementptr inbounds %struct.Reg, %struct.Reg* %11521, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %11522 to i64*
  %11523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11524 = getelementptr inbounds %struct.GPR, %struct.GPR* %11523, i32 0, i32 11
  %11525 = getelementptr inbounds %struct.Reg, %struct.Reg* %11524, i32 0, i32 0
  %EDI.i346 = bitcast %union.anon* %11525 to i32*
  %11526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11527 = getelementptr inbounds %struct.GPR, %struct.GPR* %11526, i32 0, i32 5
  %11528 = getelementptr inbounds %struct.Reg, %struct.Reg* %11527, i32 0, i32 0
  %RCX.i347 = bitcast %union.anon* %11528 to i64*
  %11529 = load i64, i64* %RCX.i347
  %11530 = load i32, i32* %EDI.i346
  %11531 = zext i32 %11530 to i64
  %11532 = load i64, i64* %PC.i345
  %11533 = add i64 %11532, 2
  store i64 %11533, i64* %PC.i345
  %11534 = trunc i64 %11529 to i32
  %11535 = add i32 %11530, %11534
  %11536 = zext i32 %11535 to i64
  store i64 %11536, i64* %RCX.i347, align 8
  %11537 = icmp ult i32 %11535, %11534
  %11538 = icmp ult i32 %11535, %11530
  %11539 = or i1 %11537, %11538
  %11540 = zext i1 %11539 to i8
  %11541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11540, i8* %11541, align 1
  %11542 = and i32 %11535, 255
  %11543 = call i32 @llvm.ctpop.i32(i32 %11542)
  %11544 = trunc i32 %11543 to i8
  %11545 = and i8 %11544, 1
  %11546 = xor i8 %11545, 1
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11546, i8* %11547, align 1
  %11548 = xor i64 %11531, %11529
  %11549 = trunc i64 %11548 to i32
  %11550 = xor i32 %11549, %11535
  %11551 = lshr i32 %11550, 4
  %11552 = trunc i32 %11551 to i8
  %11553 = and i8 %11552, 1
  %11554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11553, i8* %11554, align 1
  %11555 = icmp eq i32 %11535, 0
  %11556 = zext i1 %11555 to i8
  %11557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11556, i8* %11557, align 1
  %11558 = lshr i32 %11535, 31
  %11559 = trunc i32 %11558 to i8
  %11560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11559, i8* %11560, align 1
  %11561 = lshr i32 %11534, 31
  %11562 = lshr i32 %11530, 31
  %11563 = xor i32 %11558, %11561
  %11564 = xor i32 %11558, %11562
  %11565 = add i32 %11563, %11564
  %11566 = icmp eq i32 %11565, 2
  %11567 = zext i1 %11566 to i8
  %11568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11567, i8* %11568, align 1
  store %struct.Memory* %loadMem_489870, %struct.Memory** %MEMORY
  %loadMem_489872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11570 = getelementptr inbounds %struct.GPR, %struct.GPR* %11569, i32 0, i32 33
  %11571 = getelementptr inbounds %struct.Reg, %struct.Reg* %11570, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %11571 to i64*
  %11572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11573 = getelementptr inbounds %struct.GPR, %struct.GPR* %11572, i32 0, i32 1
  %11574 = getelementptr inbounds %struct.Reg, %struct.Reg* %11573, i32 0, i32 0
  %EAX.i343 = bitcast %union.anon* %11574 to i32*
  %11575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11576 = getelementptr inbounds %struct.GPR, %struct.GPR* %11575, i32 0, i32 5
  %11577 = getelementptr inbounds %struct.Reg, %struct.Reg* %11576, i32 0, i32 0
  %ECX.i344 = bitcast %union.anon* %11577 to i32*
  %11578 = load i32, i32* %EAX.i343
  %11579 = zext i32 %11578 to i64
  %11580 = load i32, i32* %ECX.i344
  %11581 = zext i32 %11580 to i64
  %11582 = load i64, i64* %PC.i342
  %11583 = add i64 %11582, 2
  store i64 %11583, i64* %PC.i342
  %11584 = sub i32 %11578, %11580
  %11585 = icmp ult i32 %11578, %11580
  %11586 = zext i1 %11585 to i8
  %11587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11586, i8* %11587, align 1
  %11588 = and i32 %11584, 255
  %11589 = call i32 @llvm.ctpop.i32(i32 %11588)
  %11590 = trunc i32 %11589 to i8
  %11591 = and i8 %11590, 1
  %11592 = xor i8 %11591, 1
  %11593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11592, i8* %11593, align 1
  %11594 = xor i64 %11581, %11579
  %11595 = trunc i64 %11594 to i32
  %11596 = xor i32 %11595, %11584
  %11597 = lshr i32 %11596, 4
  %11598 = trunc i32 %11597 to i8
  %11599 = and i8 %11598, 1
  %11600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11599, i8* %11600, align 1
  %11601 = icmp eq i32 %11584, 0
  %11602 = zext i1 %11601 to i8
  %11603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11602, i8* %11603, align 1
  %11604 = lshr i32 %11584, 31
  %11605 = trunc i32 %11604 to i8
  %11606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11605, i8* %11606, align 1
  %11607 = lshr i32 %11578, 31
  %11608 = lshr i32 %11580, 31
  %11609 = xor i32 %11608, %11607
  %11610 = xor i32 %11604, %11607
  %11611 = add i32 %11610, %11609
  %11612 = icmp eq i32 %11611, 2
  %11613 = zext i1 %11612 to i8
  %11614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11613, i8* %11614, align 1
  store %struct.Memory* %loadMem_489872, %struct.Memory** %MEMORY
  %loadMem_489874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11616 = getelementptr inbounds %struct.GPR, %struct.GPR* %11615, i32 0, i32 33
  %11617 = getelementptr inbounds %struct.Reg, %struct.Reg* %11616, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %11617 to i64*
  %11618 = load i64, i64* %PC.i341
  %11619 = add i64 %11618, 16
  %11620 = load i64, i64* %PC.i341
  %11621 = add i64 %11620, 6
  %11622 = load i64, i64* %PC.i341
  %11623 = add i64 %11622, 6
  store i64 %11623, i64* %PC.i341
  %11624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11625 = load i8, i8* %11624, align 1
  %11626 = icmp ne i8 %11625, 0
  %11627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11628 = load i8, i8* %11627, align 1
  %11629 = icmp ne i8 %11628, 0
  %11630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11631 = load i8, i8* %11630, align 1
  %11632 = icmp ne i8 %11631, 0
  %11633 = xor i1 %11629, %11632
  %11634 = or i1 %11626, %11633
  %11635 = zext i1 %11634 to i8
  store i8 %11635, i8* %BRANCH_TAKEN, align 1
  %11636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11637 = select i1 %11634, i64 %11619, i64 %11621
  store i64 %11637, i64* %11636, align 8
  store %struct.Memory* %loadMem_489874, %struct.Memory** %MEMORY
  %loadBr_489874 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489874 = icmp eq i8 %loadBr_489874, 1
  br i1 %cmpBr_489874, label %block_.L_489884, label %block_48987a

block_48987a:                                     ; preds = %block_.L_48983b
  %loadMem_48987a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11639 = getelementptr inbounds %struct.GPR, %struct.GPR* %11638, i32 0, i32 33
  %11640 = getelementptr inbounds %struct.Reg, %struct.Reg* %11639, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %11640 to i64*
  %11641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11642 = getelementptr inbounds %struct.GPR, %struct.GPR* %11641, i32 0, i32 1
  %11643 = getelementptr inbounds %struct.Reg, %struct.Reg* %11642, i32 0, i32 0
  %EAX.i339 = bitcast %union.anon* %11643 to i32*
  %11644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11645 = getelementptr inbounds %struct.GPR, %struct.GPR* %11644, i32 0, i32 1
  %11646 = getelementptr inbounds %struct.Reg, %struct.Reg* %11645, i32 0, i32 0
  %RAX.i340 = bitcast %union.anon* %11646 to i64*
  %11647 = load i64, i64* %RAX.i340
  %11648 = load i32, i32* %EAX.i339
  %11649 = zext i32 %11648 to i64
  %11650 = load i64, i64* %PC.i338
  %11651 = add i64 %11650, 2
  store i64 %11651, i64* %PC.i338
  %11652 = xor i64 %11649, %11647
  %11653 = trunc i64 %11652 to i32
  %11654 = and i64 %11652, 4294967295
  store i64 %11654, i64* %RAX.i340, align 8
  %11655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11655, align 1
  %11656 = and i32 %11653, 255
  %11657 = call i32 @llvm.ctpop.i32(i32 %11656)
  %11658 = trunc i32 %11657 to i8
  %11659 = and i8 %11658, 1
  %11660 = xor i8 %11659, 1
  %11661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11660, i8* %11661, align 1
  %11662 = icmp eq i32 %11653, 0
  %11663 = zext i1 %11662 to i8
  %11664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11663, i8* %11664, align 1
  %11665 = lshr i32 %11653, 31
  %11666 = trunc i32 %11665 to i8
  %11667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11666, i8* %11667, align 1
  %11668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11668, align 1
  %11669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11669, align 1
  store %struct.Memory* %loadMem_48987a, %struct.Memory** %MEMORY
  %loadMem_48987c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11671 = getelementptr inbounds %struct.GPR, %struct.GPR* %11670, i32 0, i32 33
  %11672 = getelementptr inbounds %struct.Reg, %struct.Reg* %11671, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %11672 to i64*
  %11673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11674 = getelementptr inbounds %struct.GPR, %struct.GPR* %11673, i32 0, i32 1
  %11675 = getelementptr inbounds %struct.Reg, %struct.Reg* %11674, i32 0, i32 0
  %EAX.i336 = bitcast %union.anon* %11675 to i32*
  %11676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11677 = getelementptr inbounds %struct.GPR, %struct.GPR* %11676, i32 0, i32 15
  %11678 = getelementptr inbounds %struct.Reg, %struct.Reg* %11677, i32 0, i32 0
  %RBP.i337 = bitcast %union.anon* %11678 to i64*
  %11679 = load i64, i64* %RBP.i337
  %11680 = sub i64 %11679, 112
  %11681 = load i32, i32* %EAX.i336
  %11682 = zext i32 %11681 to i64
  %11683 = load i64, i64* %PC.i335
  %11684 = add i64 %11683, 3
  store i64 %11684, i64* %PC.i335
  %11685 = inttoptr i64 %11680 to i32*
  store i32 %11681, i32* %11685
  store %struct.Memory* %loadMem_48987c, %struct.Memory** %MEMORY
  %loadMem_48987f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11687 = getelementptr inbounds %struct.GPR, %struct.GPR* %11686, i32 0, i32 33
  %11688 = getelementptr inbounds %struct.Reg, %struct.Reg* %11687, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %11688 to i64*
  %11689 = load i64, i64* %PC.i334
  %11690 = add i64 %11689, 61
  %11691 = load i64, i64* %PC.i334
  %11692 = add i64 %11691, 5
  store i64 %11692, i64* %PC.i334
  %11693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11690, i64* %11693, align 8
  store %struct.Memory* %loadMem_48987f, %struct.Memory** %MEMORY
  br label %block_.L_4898bc

block_.L_489884:                                  ; preds = %block_.L_48983b
  %loadMem_489884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11695 = getelementptr inbounds %struct.GPR, %struct.GPR* %11694, i32 0, i32 33
  %11696 = getelementptr inbounds %struct.Reg, %struct.Reg* %11695, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %11696 to i64*
  %11697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11698 = getelementptr inbounds %struct.GPR, %struct.GPR* %11697, i32 0, i32 1
  %11699 = getelementptr inbounds %struct.Reg, %struct.Reg* %11698, i32 0, i32 0
  %RAX.i332 = bitcast %union.anon* %11699 to i64*
  %11700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11701 = getelementptr inbounds %struct.GPR, %struct.GPR* %11700, i32 0, i32 15
  %11702 = getelementptr inbounds %struct.Reg, %struct.Reg* %11701, i32 0, i32 0
  %RBP.i333 = bitcast %union.anon* %11702 to i64*
  %11703 = load i64, i64* %RBP.i333
  %11704 = sub i64 %11703, 24
  %11705 = load i64, i64* %PC.i331
  %11706 = add i64 %11705, 3
  store i64 %11706, i64* %PC.i331
  %11707 = inttoptr i64 %11704 to i32*
  %11708 = load i32, i32* %11707
  %11709 = zext i32 %11708 to i64
  store i64 %11709, i64* %RAX.i332, align 8
  store %struct.Memory* %loadMem_489884, %struct.Memory** %MEMORY
  %loadMem_489887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11711 = getelementptr inbounds %struct.GPR, %struct.GPR* %11710, i32 0, i32 33
  %11712 = getelementptr inbounds %struct.Reg, %struct.Reg* %11711, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %11712 to i64*
  %11713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11714 = getelementptr inbounds %struct.GPR, %struct.GPR* %11713, i32 0, i32 5
  %11715 = getelementptr inbounds %struct.Reg, %struct.Reg* %11714, i32 0, i32 0
  %RCX.i330 = bitcast %union.anon* %11715 to i64*
  %11716 = load i64, i64* %PC.i329
  %11717 = add i64 %11716, 8
  store i64 %11717, i64* %PC.i329
  %11718 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11718, i64* %RCX.i330, align 8
  store %struct.Memory* %loadMem_489887, %struct.Memory** %MEMORY
  %loadMem_48988f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11720 = getelementptr inbounds %struct.GPR, %struct.GPR* %11719, i32 0, i32 33
  %11721 = getelementptr inbounds %struct.Reg, %struct.Reg* %11720, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %11721 to i64*
  %11722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11723 = getelementptr inbounds %struct.GPR, %struct.GPR* %11722, i32 0, i32 5
  %11724 = getelementptr inbounds %struct.Reg, %struct.Reg* %11723, i32 0, i32 0
  %RCX.i328 = bitcast %union.anon* %11724 to i64*
  %11725 = load i64, i64* %RCX.i328
  %11726 = load i64, i64* %PC.i327
  %11727 = add i64 %11726, 7
  store i64 %11727, i64* %PC.i327
  %11728 = add i64 4792, %11725
  store i64 %11728, i64* %RCX.i328, align 8
  %11729 = icmp ult i64 %11728, %11725
  %11730 = icmp ult i64 %11728, 4792
  %11731 = or i1 %11729, %11730
  %11732 = zext i1 %11731 to i8
  %11733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11732, i8* %11733, align 1
  %11734 = trunc i64 %11728 to i32
  %11735 = and i32 %11734, 255
  %11736 = call i32 @llvm.ctpop.i32(i32 %11735)
  %11737 = trunc i32 %11736 to i8
  %11738 = and i8 %11737, 1
  %11739 = xor i8 %11738, 1
  %11740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11739, i8* %11740, align 1
  %11741 = xor i64 4792, %11725
  %11742 = xor i64 %11741, %11728
  %11743 = lshr i64 %11742, 4
  %11744 = trunc i64 %11743 to i8
  %11745 = and i8 %11744, 1
  %11746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11745, i8* %11746, align 1
  %11747 = icmp eq i64 %11728, 0
  %11748 = zext i1 %11747 to i8
  %11749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11748, i8* %11749, align 1
  %11750 = lshr i64 %11728, 63
  %11751 = trunc i64 %11750 to i8
  %11752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11751, i8* %11752, align 1
  %11753 = lshr i64 %11725, 63
  %11754 = xor i64 %11750, %11753
  %11755 = add i64 %11754, %11750
  %11756 = icmp eq i64 %11755, 2
  %11757 = zext i1 %11756 to i8
  %11758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11757, i8* %11758, align 1
  store %struct.Memory* %loadMem_48988f, %struct.Memory** %MEMORY
  %loadMem_489896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11760 = getelementptr inbounds %struct.GPR, %struct.GPR* %11759, i32 0, i32 33
  %11761 = getelementptr inbounds %struct.Reg, %struct.Reg* %11760, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %11761 to i64*
  %11762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11763 = getelementptr inbounds %struct.GPR, %struct.GPR* %11762, i32 0, i32 7
  %11764 = getelementptr inbounds %struct.Reg, %struct.Reg* %11763, i32 0, i32 0
  %RDX.i325 = bitcast %union.anon* %11764 to i64*
  %11765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11766 = getelementptr inbounds %struct.GPR, %struct.GPR* %11765, i32 0, i32 15
  %11767 = getelementptr inbounds %struct.Reg, %struct.Reg* %11766, i32 0, i32 0
  %RBP.i326 = bitcast %union.anon* %11767 to i64*
  %11768 = load i64, i64* %RBP.i326
  %11769 = sub i64 %11768, 16
  %11770 = load i64, i64* %PC.i324
  %11771 = add i64 %11770, 4
  store i64 %11771, i64* %PC.i324
  %11772 = inttoptr i64 %11769 to i64*
  %11773 = load i64, i64* %11772
  store i64 %11773, i64* %RDX.i325, align 8
  store %struct.Memory* %loadMem_489896, %struct.Memory** %MEMORY
  %loadMem_48989a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11775 = getelementptr inbounds %struct.GPR, %struct.GPR* %11774, i32 0, i32 33
  %11776 = getelementptr inbounds %struct.Reg, %struct.Reg* %11775, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %11776 to i64*
  %11777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11778 = getelementptr inbounds %struct.GPR, %struct.GPR* %11777, i32 0, i32 7
  %11779 = getelementptr inbounds %struct.Reg, %struct.Reg* %11778, i32 0, i32 0
  %RDX.i323 = bitcast %union.anon* %11779 to i64*
  %11780 = load i64, i64* %RDX.i323
  %11781 = load i64, i64* %PC.i322
  %11782 = add i64 %11781, 3
  store i64 %11782, i64* %PC.i322
  %11783 = inttoptr i64 %11780 to i32*
  %11784 = load i32, i32* %11783
  %11785 = sext i32 %11784 to i64
  store i64 %11785, i64* %RDX.i323, align 8
  store %struct.Memory* %loadMem_48989a, %struct.Memory** %MEMORY
  %loadMem_48989d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11787 = getelementptr inbounds %struct.GPR, %struct.GPR* %11786, i32 0, i32 33
  %11788 = getelementptr inbounds %struct.Reg, %struct.Reg* %11787, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %11788 to i64*
  %11789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11790 = getelementptr inbounds %struct.GPR, %struct.GPR* %11789, i32 0, i32 7
  %11791 = getelementptr inbounds %struct.Reg, %struct.Reg* %11790, i32 0, i32 0
  %RDX.i321 = bitcast %union.anon* %11791 to i64*
  %11792 = load i64, i64* %RDX.i321
  %11793 = load i64, i64* %PC.i320
  %11794 = add i64 %11793, 4
  store i64 %11794, i64* %PC.i320
  %11795 = shl i64 %11792, 8
  %11796 = icmp slt i64 %11795, 0
  %11797 = shl i64 %11795, 1
  store i64 %11797, i64* %RDX.i321, align 8
  %11798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11799 = zext i1 %11796 to i8
  store i8 %11799, i8* %11798, align 1
  %11800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11801 = trunc i64 %11797 to i32
  store i8 1, i8* %11800, align 1
  %11802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11802, align 1
  %11803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11804 = icmp eq i64 %11797, 0
  %11805 = zext i1 %11804 to i8
  store i8 %11805, i8* %11803, align 1
  %11806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11807 = lshr i64 %11797, 63
  %11808 = trunc i64 %11807 to i8
  store i8 %11808, i8* %11806, align 1
  %11809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11809, align 1
  store %struct.Memory* %loadMem_48989d, %struct.Memory** %MEMORY
  %loadMem_4898a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11811 = getelementptr inbounds %struct.GPR, %struct.GPR* %11810, i32 0, i32 33
  %11812 = getelementptr inbounds %struct.Reg, %struct.Reg* %11811, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %11812 to i64*
  %11813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11814 = getelementptr inbounds %struct.GPR, %struct.GPR* %11813, i32 0, i32 5
  %11815 = getelementptr inbounds %struct.Reg, %struct.Reg* %11814, i32 0, i32 0
  %RCX.i318 = bitcast %union.anon* %11815 to i64*
  %11816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11817 = getelementptr inbounds %struct.GPR, %struct.GPR* %11816, i32 0, i32 7
  %11818 = getelementptr inbounds %struct.Reg, %struct.Reg* %11817, i32 0, i32 0
  %RDX.i319 = bitcast %union.anon* %11818 to i64*
  %11819 = load i64, i64* %RCX.i318
  %11820 = load i64, i64* %RDX.i319
  %11821 = load i64, i64* %PC.i317
  %11822 = add i64 %11821, 3
  store i64 %11822, i64* %PC.i317
  %11823 = add i64 %11820, %11819
  store i64 %11823, i64* %RCX.i318, align 8
  %11824 = icmp ult i64 %11823, %11819
  %11825 = icmp ult i64 %11823, %11820
  %11826 = or i1 %11824, %11825
  %11827 = zext i1 %11826 to i8
  %11828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11827, i8* %11828, align 1
  %11829 = trunc i64 %11823 to i32
  %11830 = and i32 %11829, 255
  %11831 = call i32 @llvm.ctpop.i32(i32 %11830)
  %11832 = trunc i32 %11831 to i8
  %11833 = and i8 %11832, 1
  %11834 = xor i8 %11833, 1
  %11835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11834, i8* %11835, align 1
  %11836 = xor i64 %11820, %11819
  %11837 = xor i64 %11836, %11823
  %11838 = lshr i64 %11837, 4
  %11839 = trunc i64 %11838 to i8
  %11840 = and i8 %11839, 1
  %11841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11840, i8* %11841, align 1
  %11842 = icmp eq i64 %11823, 0
  %11843 = zext i1 %11842 to i8
  %11844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11843, i8* %11844, align 1
  %11845 = lshr i64 %11823, 63
  %11846 = trunc i64 %11845 to i8
  %11847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11846, i8* %11847, align 1
  %11848 = lshr i64 %11819, 63
  %11849 = lshr i64 %11820, 63
  %11850 = xor i64 %11845, %11848
  %11851 = xor i64 %11845, %11849
  %11852 = add i64 %11850, %11851
  %11853 = icmp eq i64 %11852, 2
  %11854 = zext i1 %11853 to i8
  %11855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11854, i8* %11855, align 1
  store %struct.Memory* %loadMem_4898a1, %struct.Memory** %MEMORY
  %loadMem_4898a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11857 = getelementptr inbounds %struct.GPR, %struct.GPR* %11856, i32 0, i32 33
  %11858 = getelementptr inbounds %struct.Reg, %struct.Reg* %11857, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %11858 to i64*
  %11859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11860 = getelementptr inbounds %struct.GPR, %struct.GPR* %11859, i32 0, i32 7
  %11861 = getelementptr inbounds %struct.Reg, %struct.Reg* %11860, i32 0, i32 0
  %RDX.i315 = bitcast %union.anon* %11861 to i64*
  %11862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11863 = getelementptr inbounds %struct.GPR, %struct.GPR* %11862, i32 0, i32 15
  %11864 = getelementptr inbounds %struct.Reg, %struct.Reg* %11863, i32 0, i32 0
  %RBP.i316 = bitcast %union.anon* %11864 to i64*
  %11865 = load i64, i64* %RBP.i316
  %11866 = sub i64 %11865, 40
  %11867 = load i64, i64* %PC.i314
  %11868 = add i64 %11867, 4
  store i64 %11868, i64* %PC.i314
  %11869 = inttoptr i64 %11866 to i32*
  %11870 = load i32, i32* %11869
  %11871 = sext i32 %11870 to i64
  store i64 %11871, i64* %RDX.i315, align 8
  store %struct.Memory* %loadMem_4898a4, %struct.Memory** %MEMORY
  %loadMem_4898a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11873 = getelementptr inbounds %struct.GPR, %struct.GPR* %11872, i32 0, i32 33
  %11874 = getelementptr inbounds %struct.Reg, %struct.Reg* %11873, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %11874 to i64*
  %11875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11876 = getelementptr inbounds %struct.GPR, %struct.GPR* %11875, i32 0, i32 7
  %11877 = getelementptr inbounds %struct.Reg, %struct.Reg* %11876, i32 0, i32 0
  %RDX.i313 = bitcast %union.anon* %11877 to i64*
  %11878 = load i64, i64* %RDX.i313
  %11879 = load i64, i64* %PC.i312
  %11880 = add i64 %11879, 4
  store i64 %11880, i64* %PC.i312
  %11881 = shl i64 %11878, 4
  %11882 = icmp slt i64 %11881, 0
  %11883 = shl i64 %11881, 1
  store i64 %11883, i64* %RDX.i313, align 8
  %11884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11885 = zext i1 %11882 to i8
  store i8 %11885, i8* %11884, align 1
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11887 = trunc i64 %11883 to i32
  %11888 = and i32 %11887, 254
  %11889 = call i32 @llvm.ctpop.i32(i32 %11888)
  %11890 = trunc i32 %11889 to i8
  %11891 = and i8 %11890, 1
  %11892 = xor i8 %11891, 1
  store i8 %11892, i8* %11886, align 1
  %11893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11893, align 1
  %11894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11895 = icmp eq i64 %11883, 0
  %11896 = zext i1 %11895 to i8
  store i8 %11896, i8* %11894, align 1
  %11897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11898 = lshr i64 %11883, 63
  %11899 = trunc i64 %11898 to i8
  store i8 %11899, i8* %11897, align 1
  %11900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11900, align 1
  store %struct.Memory* %loadMem_4898a8, %struct.Memory** %MEMORY
  %loadMem_4898ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %11901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11902 = getelementptr inbounds %struct.GPR, %struct.GPR* %11901, i32 0, i32 33
  %11903 = getelementptr inbounds %struct.Reg, %struct.Reg* %11902, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %11903 to i64*
  %11904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11905 = getelementptr inbounds %struct.GPR, %struct.GPR* %11904, i32 0, i32 5
  %11906 = getelementptr inbounds %struct.Reg, %struct.Reg* %11905, i32 0, i32 0
  %RCX.i310 = bitcast %union.anon* %11906 to i64*
  %11907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11908 = getelementptr inbounds %struct.GPR, %struct.GPR* %11907, i32 0, i32 7
  %11909 = getelementptr inbounds %struct.Reg, %struct.Reg* %11908, i32 0, i32 0
  %RDX.i311 = bitcast %union.anon* %11909 to i64*
  %11910 = load i64, i64* %RCX.i310
  %11911 = load i64, i64* %RDX.i311
  %11912 = load i64, i64* %PC.i309
  %11913 = add i64 %11912, 3
  store i64 %11913, i64* %PC.i309
  %11914 = add i64 %11911, %11910
  store i64 %11914, i64* %RCX.i310, align 8
  %11915 = icmp ult i64 %11914, %11910
  %11916 = icmp ult i64 %11914, %11911
  %11917 = or i1 %11915, %11916
  %11918 = zext i1 %11917 to i8
  %11919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11918, i8* %11919, align 1
  %11920 = trunc i64 %11914 to i32
  %11921 = and i32 %11920, 255
  %11922 = call i32 @llvm.ctpop.i32(i32 %11921)
  %11923 = trunc i32 %11922 to i8
  %11924 = and i8 %11923, 1
  %11925 = xor i8 %11924, 1
  %11926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11925, i8* %11926, align 1
  %11927 = xor i64 %11911, %11910
  %11928 = xor i64 %11927, %11914
  %11929 = lshr i64 %11928, 4
  %11930 = trunc i64 %11929 to i8
  %11931 = and i8 %11930, 1
  %11932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11931, i8* %11932, align 1
  %11933 = icmp eq i64 %11914, 0
  %11934 = zext i1 %11933 to i8
  %11935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11934, i8* %11935, align 1
  %11936 = lshr i64 %11914, 63
  %11937 = trunc i64 %11936 to i8
  %11938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11937, i8* %11938, align 1
  %11939 = lshr i64 %11910, 63
  %11940 = lshr i64 %11911, 63
  %11941 = xor i64 %11936, %11939
  %11942 = xor i64 %11936, %11940
  %11943 = add i64 %11941, %11942
  %11944 = icmp eq i64 %11943, 2
  %11945 = zext i1 %11944 to i8
  %11946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11945, i8* %11946, align 1
  store %struct.Memory* %loadMem_4898ac, %struct.Memory** %MEMORY
  %loadMem_4898af = load %struct.Memory*, %struct.Memory** %MEMORY
  %11947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11948 = getelementptr inbounds %struct.GPR, %struct.GPR* %11947, i32 0, i32 33
  %11949 = getelementptr inbounds %struct.Reg, %struct.Reg* %11948, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %11949 to i64*
  %11950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11951 = getelementptr inbounds %struct.GPR, %struct.GPR* %11950, i32 0, i32 7
  %11952 = getelementptr inbounds %struct.Reg, %struct.Reg* %11951, i32 0, i32 0
  %RDX.i307 = bitcast %union.anon* %11952 to i64*
  %11953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11954 = getelementptr inbounds %struct.GPR, %struct.GPR* %11953, i32 0, i32 15
  %11955 = getelementptr inbounds %struct.Reg, %struct.Reg* %11954, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %11955 to i64*
  %11956 = load i64, i64* %RBP.i308
  %11957 = sub i64 %11956, 36
  %11958 = load i64, i64* %PC.i306
  %11959 = add i64 %11958, 4
  store i64 %11959, i64* %PC.i306
  %11960 = inttoptr i64 %11957 to i32*
  %11961 = load i32, i32* %11960
  %11962 = sext i32 %11961 to i64
  store i64 %11962, i64* %RDX.i307, align 8
  store %struct.Memory* %loadMem_4898af, %struct.Memory** %MEMORY
  %loadMem_4898b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11964 = getelementptr inbounds %struct.GPR, %struct.GPR* %11963, i32 0, i32 33
  %11965 = getelementptr inbounds %struct.Reg, %struct.Reg* %11964, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %11965 to i64*
  %11966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11967 = getelementptr inbounds %struct.GPR, %struct.GPR* %11966, i32 0, i32 5
  %11968 = getelementptr inbounds %struct.Reg, %struct.Reg* %11967, i32 0, i32 0
  %RCX.i303 = bitcast %union.anon* %11968 to i64*
  %11969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11970 = getelementptr inbounds %struct.GPR, %struct.GPR* %11969, i32 0, i32 7
  %11971 = getelementptr inbounds %struct.Reg, %struct.Reg* %11970, i32 0, i32 0
  %RDX.i304 = bitcast %union.anon* %11971 to i64*
  %11972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11973 = getelementptr inbounds %struct.GPR, %struct.GPR* %11972, i32 0, i32 9
  %11974 = getelementptr inbounds %struct.Reg, %struct.Reg* %11973, i32 0, i32 0
  %RSI.i305 = bitcast %union.anon* %11974 to i64*
  %11975 = load i64, i64* %RCX.i303
  %11976 = load i64, i64* %RDX.i304
  %11977 = mul i64 %11976, 2
  %11978 = add i64 %11977, %11975
  %11979 = load i64, i64* %PC.i302
  %11980 = add i64 %11979, 4
  store i64 %11980, i64* %PC.i302
  %11981 = inttoptr i64 %11978 to i16*
  %11982 = load i16, i16* %11981
  %11983 = zext i16 %11982 to i64
  store i64 %11983, i64* %RSI.i305, align 8
  store %struct.Memory* %loadMem_4898b3, %struct.Memory** %MEMORY
  %loadMem_4898b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11985 = getelementptr inbounds %struct.GPR, %struct.GPR* %11984, i32 0, i32 33
  %11986 = getelementptr inbounds %struct.Reg, %struct.Reg* %11985, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %11986 to i64*
  %11987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11988 = getelementptr inbounds %struct.GPR, %struct.GPR* %11987, i32 0, i32 9
  %11989 = getelementptr inbounds %struct.Reg, %struct.Reg* %11988, i32 0, i32 0
  %ESI.i300 = bitcast %union.anon* %11989 to i32*
  %11990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11991 = getelementptr inbounds %struct.GPR, %struct.GPR* %11990, i32 0, i32 1
  %11992 = getelementptr inbounds %struct.Reg, %struct.Reg* %11991, i32 0, i32 0
  %RAX.i301 = bitcast %union.anon* %11992 to i64*
  %11993 = load i64, i64* %RAX.i301
  %11994 = load i32, i32* %ESI.i300
  %11995 = zext i32 %11994 to i64
  %11996 = load i64, i64* %PC.i299
  %11997 = add i64 %11996, 2
  store i64 %11997, i64* %PC.i299
  %11998 = trunc i64 %11993 to i32
  %11999 = add i32 %11994, %11998
  %12000 = zext i32 %11999 to i64
  store i64 %12000, i64* %RAX.i301, align 8
  %12001 = icmp ult i32 %11999, %11998
  %12002 = icmp ult i32 %11999, %11994
  %12003 = or i1 %12001, %12002
  %12004 = zext i1 %12003 to i8
  %12005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12004, i8* %12005, align 1
  %12006 = and i32 %11999, 255
  %12007 = call i32 @llvm.ctpop.i32(i32 %12006)
  %12008 = trunc i32 %12007 to i8
  %12009 = and i8 %12008, 1
  %12010 = xor i8 %12009, 1
  %12011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12010, i8* %12011, align 1
  %12012 = xor i64 %11995, %11993
  %12013 = trunc i64 %12012 to i32
  %12014 = xor i32 %12013, %11999
  %12015 = lshr i32 %12014, 4
  %12016 = trunc i32 %12015 to i8
  %12017 = and i8 %12016, 1
  %12018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12017, i8* %12018, align 1
  %12019 = icmp eq i32 %11999, 0
  %12020 = zext i1 %12019 to i8
  %12021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12020, i8* %12021, align 1
  %12022 = lshr i32 %11999, 31
  %12023 = trunc i32 %12022 to i8
  %12024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12023, i8* %12024, align 1
  %12025 = lshr i32 %11998, 31
  %12026 = lshr i32 %11994, 31
  %12027 = xor i32 %12022, %12025
  %12028 = xor i32 %12022, %12026
  %12029 = add i32 %12027, %12028
  %12030 = icmp eq i32 %12029, 2
  %12031 = zext i1 %12030 to i8
  %12032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12031, i8* %12032, align 1
  store %struct.Memory* %loadMem_4898b7, %struct.Memory** %MEMORY
  %loadMem_4898b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12034 = getelementptr inbounds %struct.GPR, %struct.GPR* %12033, i32 0, i32 33
  %12035 = getelementptr inbounds %struct.Reg, %struct.Reg* %12034, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %12035 to i64*
  %12036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12037 = getelementptr inbounds %struct.GPR, %struct.GPR* %12036, i32 0, i32 1
  %12038 = getelementptr inbounds %struct.Reg, %struct.Reg* %12037, i32 0, i32 0
  %EAX.i297 = bitcast %union.anon* %12038 to i32*
  %12039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12040 = getelementptr inbounds %struct.GPR, %struct.GPR* %12039, i32 0, i32 15
  %12041 = getelementptr inbounds %struct.Reg, %struct.Reg* %12040, i32 0, i32 0
  %RBP.i298 = bitcast %union.anon* %12041 to i64*
  %12042 = load i64, i64* %RBP.i298
  %12043 = sub i64 %12042, 112
  %12044 = load i32, i32* %EAX.i297
  %12045 = zext i32 %12044 to i64
  %12046 = load i64, i64* %PC.i296
  %12047 = add i64 %12046, 3
  store i64 %12047, i64* %PC.i296
  %12048 = inttoptr i64 %12043 to i32*
  store i32 %12044, i32* %12048
  store %struct.Memory* %loadMem_4898b9, %struct.Memory** %MEMORY
  br label %block_.L_4898bc

block_.L_4898bc:                                  ; preds = %block_.L_489884, %block_48987a
  %loadMem_4898bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12050 = getelementptr inbounds %struct.GPR, %struct.GPR* %12049, i32 0, i32 33
  %12051 = getelementptr inbounds %struct.Reg, %struct.Reg* %12050, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %12051 to i64*
  %12052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12053 = getelementptr inbounds %struct.GPR, %struct.GPR* %12052, i32 0, i32 1
  %12054 = getelementptr inbounds %struct.Reg, %struct.Reg* %12053, i32 0, i32 0
  %RAX.i294 = bitcast %union.anon* %12054 to i64*
  %12055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12056 = getelementptr inbounds %struct.GPR, %struct.GPR* %12055, i32 0, i32 15
  %12057 = getelementptr inbounds %struct.Reg, %struct.Reg* %12056, i32 0, i32 0
  %RBP.i295 = bitcast %union.anon* %12057 to i64*
  %12058 = load i64, i64* %RBP.i295
  %12059 = sub i64 %12058, 112
  %12060 = load i64, i64* %PC.i293
  %12061 = add i64 %12060, 3
  store i64 %12061, i64* %PC.i293
  %12062 = inttoptr i64 %12059 to i32*
  %12063 = load i32, i32* %12062
  %12064 = zext i32 %12063 to i64
  store i64 %12064, i64* %RAX.i294, align 8
  store %struct.Memory* %loadMem_4898bc, %struct.Memory** %MEMORY
  %loadMem_4898bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12066 = getelementptr inbounds %struct.GPR, %struct.GPR* %12065, i32 0, i32 33
  %12067 = getelementptr inbounds %struct.Reg, %struct.Reg* %12066, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %12067 to i64*
  %12068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12069 = getelementptr inbounds %struct.GPR, %struct.GPR* %12068, i32 0, i32 1
  %12070 = getelementptr inbounds %struct.Reg, %struct.Reg* %12069, i32 0, i32 0
  %EAX.i291 = bitcast %union.anon* %12070 to i32*
  %12071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12072 = getelementptr inbounds %struct.GPR, %struct.GPR* %12071, i32 0, i32 15
  %12073 = getelementptr inbounds %struct.Reg, %struct.Reg* %12072, i32 0, i32 0
  %RBP.i292 = bitcast %union.anon* %12073 to i64*
  %12074 = load i64, i64* %RBP.i292
  %12075 = sub i64 %12074, 108
  %12076 = load i32, i32* %EAX.i291
  %12077 = zext i32 %12076 to i64
  %12078 = load i64, i64* %PC.i290
  %12079 = add i64 %12078, 3
  store i64 %12079, i64* %PC.i290
  %12080 = inttoptr i64 %12075 to i32*
  store i32 %12076, i32* %12080
  store %struct.Memory* %loadMem_4898bf, %struct.Memory** %MEMORY
  br label %block_.L_4898c2

block_.L_4898c2:                                  ; preds = %block_.L_4898bc, %block_489825
  %loadMem_4898c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12082 = getelementptr inbounds %struct.GPR, %struct.GPR* %12081, i32 0, i32 33
  %12083 = getelementptr inbounds %struct.Reg, %struct.Reg* %12082, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %12083 to i64*
  %12084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12085 = getelementptr inbounds %struct.GPR, %struct.GPR* %12084, i32 0, i32 1
  %12086 = getelementptr inbounds %struct.Reg, %struct.Reg* %12085, i32 0, i32 0
  %RAX.i288 = bitcast %union.anon* %12086 to i64*
  %12087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12088 = getelementptr inbounds %struct.GPR, %struct.GPR* %12087, i32 0, i32 15
  %12089 = getelementptr inbounds %struct.Reg, %struct.Reg* %12088, i32 0, i32 0
  %RBP.i289 = bitcast %union.anon* %12089 to i64*
  %12090 = load i64, i64* %RBP.i289
  %12091 = sub i64 %12090, 108
  %12092 = load i64, i64* %PC.i287
  %12093 = add i64 %12092, 3
  store i64 %12093, i64* %PC.i287
  %12094 = inttoptr i64 %12091 to i32*
  %12095 = load i32, i32* %12094
  %12096 = zext i32 %12095 to i64
  store i64 %12096, i64* %RAX.i288, align 8
  store %struct.Memory* %loadMem_4898c2, %struct.Memory** %MEMORY
  %loadMem_4898c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12098 = getelementptr inbounds %struct.GPR, %struct.GPR* %12097, i32 0, i32 33
  %12099 = getelementptr inbounds %struct.Reg, %struct.Reg* %12098, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %12099 to i64*
  %12100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12101 = getelementptr inbounds %struct.GPR, %struct.GPR* %12100, i32 0, i32 5
  %12102 = getelementptr inbounds %struct.Reg, %struct.Reg* %12101, i32 0, i32 0
  %ECX.i285 = bitcast %union.anon* %12102 to i32*
  %12103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12104 = getelementptr inbounds %struct.GPR, %struct.GPR* %12103, i32 0, i32 5
  %12105 = getelementptr inbounds %struct.Reg, %struct.Reg* %12104, i32 0, i32 0
  %RCX.i286 = bitcast %union.anon* %12105 to i64*
  %12106 = load i64, i64* %RCX.i286
  %12107 = load i32, i32* %ECX.i285
  %12108 = zext i32 %12107 to i64
  %12109 = load i64, i64* %PC.i284
  %12110 = add i64 %12109, 2
  store i64 %12110, i64* %PC.i284
  %12111 = xor i64 %12108, %12106
  %12112 = trunc i64 %12111 to i32
  %12113 = and i64 %12111, 4294967295
  store i64 %12113, i64* %RCX.i286, align 8
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12114, align 1
  %12115 = and i32 %12112, 255
  %12116 = call i32 @llvm.ctpop.i32(i32 %12115)
  %12117 = trunc i32 %12116 to i8
  %12118 = and i8 %12117, 1
  %12119 = xor i8 %12118, 1
  %12120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12119, i8* %12120, align 1
  %12121 = icmp eq i32 %12112, 0
  %12122 = zext i1 %12121 to i8
  %12123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12122, i8* %12123, align 1
  %12124 = lshr i32 %12112, 31
  %12125 = trunc i32 %12124 to i8
  %12126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12125, i8* %12126, align 1
  %12127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12127, align 1
  %12128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12128, align 1
  store %struct.Memory* %loadMem_4898c5, %struct.Memory** %MEMORY
  %loadMem_4898c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12130 = getelementptr inbounds %struct.GPR, %struct.GPR* %12129, i32 0, i32 33
  %12131 = getelementptr inbounds %struct.Reg, %struct.Reg* %12130, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %12131 to i64*
  %12132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12133 = getelementptr inbounds %struct.GPR, %struct.GPR* %12132, i32 0, i32 1
  %12134 = getelementptr inbounds %struct.Reg, %struct.Reg* %12133, i32 0, i32 0
  %AX.i282 = bitcast %union.anon* %12134 to i16*
  %12135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12136 = getelementptr inbounds %struct.GPR, %struct.GPR* %12135, i32 0, i32 7
  %12137 = getelementptr inbounds %struct.Reg, %struct.Reg* %12136, i32 0, i32 0
  %DX.i283 = bitcast %union.anon* %12137 to i16*
  %12138 = load i16, i16* %AX.i282
  %12139 = zext i16 %12138 to i64
  %12140 = load i64, i64* %PC.i281
  %12141 = add i64 %12140, 3
  store i64 %12141, i64* %PC.i281
  store i16 %12138, i16* %DX.i283, align 2
  store %struct.Memory* %loadMem_4898c7, %struct.Memory** %MEMORY
  %loadMem_4898ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %12142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12143 = getelementptr inbounds %struct.GPR, %struct.GPR* %12142, i32 0, i32 33
  %12144 = getelementptr inbounds %struct.Reg, %struct.Reg* %12143, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %12144 to i64*
  %12145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12146 = getelementptr inbounds %struct.GPR, %struct.GPR* %12145, i32 0, i32 9
  %12147 = getelementptr inbounds %struct.Reg, %struct.Reg* %12146, i32 0, i32 0
  %RSI.i280 = bitcast %union.anon* %12147 to i64*
  %12148 = load i64, i64* %PC.i279
  %12149 = add i64 %12148, 8
  store i64 %12149, i64* %PC.i279
  %12150 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %12150, i64* %RSI.i280, align 8
  store %struct.Memory* %loadMem_4898ca, %struct.Memory** %MEMORY
  %loadMem_4898d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12152 = getelementptr inbounds %struct.GPR, %struct.GPR* %12151, i32 0, i32 33
  %12153 = getelementptr inbounds %struct.Reg, %struct.Reg* %12152, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %12153 to i64*
  %12154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12155 = getelementptr inbounds %struct.GPR, %struct.GPR* %12154, i32 0, i32 9
  %12156 = getelementptr inbounds %struct.Reg, %struct.Reg* %12155, i32 0, i32 0
  %RSI.i278 = bitcast %union.anon* %12156 to i64*
  %12157 = load i64, i64* %RSI.i278
  %12158 = add i64 %12157, 6424
  %12159 = load i64, i64* %PC.i277
  %12160 = add i64 %12159, 7
  store i64 %12160, i64* %PC.i277
  %12161 = inttoptr i64 %12158 to i64*
  %12162 = load i64, i64* %12161
  store i64 %12162, i64* %RSI.i278, align 8
  store %struct.Memory* %loadMem_4898d2, %struct.Memory** %MEMORY
  %loadMem_4898d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12164 = getelementptr inbounds %struct.GPR, %struct.GPR* %12163, i32 0, i32 33
  %12165 = getelementptr inbounds %struct.Reg, %struct.Reg* %12164, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %12165 to i64*
  %12166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12167 = getelementptr inbounds %struct.GPR, %struct.GPR* %12166, i32 0, i32 1
  %12168 = getelementptr inbounds %struct.Reg, %struct.Reg* %12167, i32 0, i32 0
  %RAX.i275 = bitcast %union.anon* %12168 to i64*
  %12169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12170 = getelementptr inbounds %struct.GPR, %struct.GPR* %12169, i32 0, i32 15
  %12171 = getelementptr inbounds %struct.Reg, %struct.Reg* %12170, i32 0, i32 0
  %RBP.i276 = bitcast %union.anon* %12171 to i64*
  %12172 = load i64, i64* %RBP.i276
  %12173 = sub i64 %12172, 52
  %12174 = load i64, i64* %PC.i274
  %12175 = add i64 %12174, 3
  store i64 %12175, i64* %PC.i274
  %12176 = inttoptr i64 %12173 to i32*
  %12177 = load i32, i32* %12176
  %12178 = zext i32 %12177 to i64
  store i64 %12178, i64* %RAX.i275, align 8
  store %struct.Memory* %loadMem_4898d9, %struct.Memory** %MEMORY
  %loadMem_4898dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12180 = getelementptr inbounds %struct.GPR, %struct.GPR* %12179, i32 0, i32 33
  %12181 = getelementptr inbounds %struct.Reg, %struct.Reg* %12180, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %12181 to i64*
  %12182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12183 = getelementptr inbounds %struct.GPR, %struct.GPR* %12182, i32 0, i32 1
  %12184 = getelementptr inbounds %struct.Reg, %struct.Reg* %12183, i32 0, i32 0
  %RAX.i272 = bitcast %union.anon* %12184 to i64*
  %12185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12186 = getelementptr inbounds %struct.GPR, %struct.GPR* %12185, i32 0, i32 15
  %12187 = getelementptr inbounds %struct.Reg, %struct.Reg* %12186, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %12187 to i64*
  %12188 = load i64, i64* %RAX.i272
  %12189 = load i64, i64* %RBP.i273
  %12190 = sub i64 %12189, 40
  %12191 = load i64, i64* %PC.i271
  %12192 = add i64 %12191, 3
  store i64 %12192, i64* %PC.i271
  %12193 = trunc i64 %12188 to i32
  %12194 = inttoptr i64 %12190 to i32*
  %12195 = load i32, i32* %12194
  %12196 = add i32 %12195, %12193
  %12197 = zext i32 %12196 to i64
  store i64 %12197, i64* %RAX.i272, align 8
  %12198 = icmp ult i32 %12196, %12193
  %12199 = icmp ult i32 %12196, %12195
  %12200 = or i1 %12198, %12199
  %12201 = zext i1 %12200 to i8
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12201, i8* %12202, align 1
  %12203 = and i32 %12196, 255
  %12204 = call i32 @llvm.ctpop.i32(i32 %12203)
  %12205 = trunc i32 %12204 to i8
  %12206 = and i8 %12205, 1
  %12207 = xor i8 %12206, 1
  %12208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12207, i8* %12208, align 1
  %12209 = xor i32 %12195, %12193
  %12210 = xor i32 %12209, %12196
  %12211 = lshr i32 %12210, 4
  %12212 = trunc i32 %12211 to i8
  %12213 = and i8 %12212, 1
  %12214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12213, i8* %12214, align 1
  %12215 = icmp eq i32 %12196, 0
  %12216 = zext i1 %12215 to i8
  %12217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12216, i8* %12217, align 1
  %12218 = lshr i32 %12196, 31
  %12219 = trunc i32 %12218 to i8
  %12220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12219, i8* %12220, align 1
  %12221 = lshr i32 %12193, 31
  %12222 = lshr i32 %12195, 31
  %12223 = xor i32 %12218, %12221
  %12224 = xor i32 %12218, %12222
  %12225 = add i32 %12223, %12224
  %12226 = icmp eq i32 %12225, 2
  %12227 = zext i1 %12226 to i8
  %12228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12227, i8* %12228, align 1
  store %struct.Memory* %loadMem_4898dc, %struct.Memory** %MEMORY
  %loadMem_4898df = load %struct.Memory*, %struct.Memory** %MEMORY
  %12229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12230 = getelementptr inbounds %struct.GPR, %struct.GPR* %12229, i32 0, i32 33
  %12231 = getelementptr inbounds %struct.Reg, %struct.Reg* %12230, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %12231 to i64*
  %12232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12233 = getelementptr inbounds %struct.GPR, %struct.GPR* %12232, i32 0, i32 1
  %12234 = getelementptr inbounds %struct.Reg, %struct.Reg* %12233, i32 0, i32 0
  %EAX.i269 = bitcast %union.anon* %12234 to i32*
  %12235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12236 = getelementptr inbounds %struct.GPR, %struct.GPR* %12235, i32 0, i32 11
  %12237 = getelementptr inbounds %struct.Reg, %struct.Reg* %12236, i32 0, i32 0
  %RDI.i270 = bitcast %union.anon* %12237 to i64*
  %12238 = load i32, i32* %EAX.i269
  %12239 = zext i32 %12238 to i64
  %12240 = load i64, i64* %PC.i268
  %12241 = add i64 %12240, 3
  store i64 %12241, i64* %PC.i268
  %12242 = shl i64 %12239, 32
  %12243 = ashr exact i64 %12242, 32
  store i64 %12243, i64* %RDI.i270, align 8
  store %struct.Memory* %loadMem_4898df, %struct.Memory** %MEMORY
  %loadMem_4898e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12245 = getelementptr inbounds %struct.GPR, %struct.GPR* %12244, i32 0, i32 33
  %12246 = getelementptr inbounds %struct.Reg, %struct.Reg* %12245, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %12246 to i64*
  %12247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12248 = getelementptr inbounds %struct.GPR, %struct.GPR* %12247, i32 0, i32 9
  %12249 = getelementptr inbounds %struct.Reg, %struct.Reg* %12248, i32 0, i32 0
  %RSI.i266 = bitcast %union.anon* %12249 to i64*
  %12250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12251 = getelementptr inbounds %struct.GPR, %struct.GPR* %12250, i32 0, i32 11
  %12252 = getelementptr inbounds %struct.Reg, %struct.Reg* %12251, i32 0, i32 0
  %RDI.i267 = bitcast %union.anon* %12252 to i64*
  %12253 = load i64, i64* %RSI.i266
  %12254 = load i64, i64* %RDI.i267
  %12255 = mul i64 %12254, 8
  %12256 = add i64 %12255, %12253
  %12257 = load i64, i64* %PC.i265
  %12258 = add i64 %12257, 4
  store i64 %12258, i64* %PC.i265
  %12259 = inttoptr i64 %12256 to i64*
  %12260 = load i64, i64* %12259
  store i64 %12260, i64* %RSI.i266, align 8
  store %struct.Memory* %loadMem_4898e2, %struct.Memory** %MEMORY
  %loadMem_4898e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12262 = getelementptr inbounds %struct.GPR, %struct.GPR* %12261, i32 0, i32 33
  %12263 = getelementptr inbounds %struct.Reg, %struct.Reg* %12262, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %12263 to i64*
  %12264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12265 = getelementptr inbounds %struct.GPR, %struct.GPR* %12264, i32 0, i32 1
  %12266 = getelementptr inbounds %struct.Reg, %struct.Reg* %12265, i32 0, i32 0
  %RAX.i263 = bitcast %union.anon* %12266 to i64*
  %12267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12268 = getelementptr inbounds %struct.GPR, %struct.GPR* %12267, i32 0, i32 15
  %12269 = getelementptr inbounds %struct.Reg, %struct.Reg* %12268, i32 0, i32 0
  %RBP.i264 = bitcast %union.anon* %12269 to i64*
  %12270 = load i64, i64* %RBP.i264
  %12271 = sub i64 %12270, 48
  %12272 = load i64, i64* %PC.i262
  %12273 = add i64 %12272, 3
  store i64 %12273, i64* %PC.i262
  %12274 = inttoptr i64 %12271 to i32*
  %12275 = load i32, i32* %12274
  %12276 = zext i32 %12275 to i64
  store i64 %12276, i64* %RAX.i263, align 8
  store %struct.Memory* %loadMem_4898e6, %struct.Memory** %MEMORY
  %loadMem_4898e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12278 = getelementptr inbounds %struct.GPR, %struct.GPR* %12277, i32 0, i32 33
  %12279 = getelementptr inbounds %struct.Reg, %struct.Reg* %12278, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %12279 to i64*
  %12280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12281 = getelementptr inbounds %struct.GPR, %struct.GPR* %12280, i32 0, i32 1
  %12282 = getelementptr inbounds %struct.Reg, %struct.Reg* %12281, i32 0, i32 0
  %RAX.i260 = bitcast %union.anon* %12282 to i64*
  %12283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12284 = getelementptr inbounds %struct.GPR, %struct.GPR* %12283, i32 0, i32 15
  %12285 = getelementptr inbounds %struct.Reg, %struct.Reg* %12284, i32 0, i32 0
  %RBP.i261 = bitcast %union.anon* %12285 to i64*
  %12286 = load i64, i64* %RAX.i260
  %12287 = load i64, i64* %RBP.i261
  %12288 = sub i64 %12287, 36
  %12289 = load i64, i64* %PC.i259
  %12290 = add i64 %12289, 3
  store i64 %12290, i64* %PC.i259
  %12291 = trunc i64 %12286 to i32
  %12292 = inttoptr i64 %12288 to i32*
  %12293 = load i32, i32* %12292
  %12294 = add i32 %12293, %12291
  %12295 = zext i32 %12294 to i64
  store i64 %12295, i64* %RAX.i260, align 8
  %12296 = icmp ult i32 %12294, %12291
  %12297 = icmp ult i32 %12294, %12293
  %12298 = or i1 %12296, %12297
  %12299 = zext i1 %12298 to i8
  %12300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12299, i8* %12300, align 1
  %12301 = and i32 %12294, 255
  %12302 = call i32 @llvm.ctpop.i32(i32 %12301)
  %12303 = trunc i32 %12302 to i8
  %12304 = and i8 %12303, 1
  %12305 = xor i8 %12304, 1
  %12306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12305, i8* %12306, align 1
  %12307 = xor i32 %12293, %12291
  %12308 = xor i32 %12307, %12294
  %12309 = lshr i32 %12308, 4
  %12310 = trunc i32 %12309 to i8
  %12311 = and i8 %12310, 1
  %12312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12311, i8* %12312, align 1
  %12313 = icmp eq i32 %12294, 0
  %12314 = zext i1 %12313 to i8
  %12315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12314, i8* %12315, align 1
  %12316 = lshr i32 %12294, 31
  %12317 = trunc i32 %12316 to i8
  %12318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12317, i8* %12318, align 1
  %12319 = lshr i32 %12291, 31
  %12320 = lshr i32 %12293, 31
  %12321 = xor i32 %12316, %12319
  %12322 = xor i32 %12316, %12320
  %12323 = add i32 %12321, %12322
  %12324 = icmp eq i32 %12323, 2
  %12325 = zext i1 %12324 to i8
  %12326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12325, i8* %12326, align 1
  store %struct.Memory* %loadMem_4898e9, %struct.Memory** %MEMORY
  %loadMem_4898ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %12327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12328 = getelementptr inbounds %struct.GPR, %struct.GPR* %12327, i32 0, i32 33
  %12329 = getelementptr inbounds %struct.Reg, %struct.Reg* %12328, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %12329 to i64*
  %12330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12331 = getelementptr inbounds %struct.GPR, %struct.GPR* %12330, i32 0, i32 1
  %12332 = getelementptr inbounds %struct.Reg, %struct.Reg* %12331, i32 0, i32 0
  %EAX.i257 = bitcast %union.anon* %12332 to i32*
  %12333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12334 = getelementptr inbounds %struct.GPR, %struct.GPR* %12333, i32 0, i32 11
  %12335 = getelementptr inbounds %struct.Reg, %struct.Reg* %12334, i32 0, i32 0
  %RDI.i258 = bitcast %union.anon* %12335 to i64*
  %12336 = load i32, i32* %EAX.i257
  %12337 = zext i32 %12336 to i64
  %12338 = load i64, i64* %PC.i256
  %12339 = add i64 %12338, 3
  store i64 %12339, i64* %PC.i256
  %12340 = shl i64 %12337, 32
  %12341 = ashr exact i64 %12340, 32
  store i64 %12341, i64* %RDI.i258, align 8
  store %struct.Memory* %loadMem_4898ec, %struct.Memory** %MEMORY
  %loadMem_4898ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %12342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12343 = getelementptr inbounds %struct.GPR, %struct.GPR* %12342, i32 0, i32 33
  %12344 = getelementptr inbounds %struct.Reg, %struct.Reg* %12343, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %12344 to i64*
  %12345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12346 = getelementptr inbounds %struct.GPR, %struct.GPR* %12345, i32 0, i32 7
  %12347 = getelementptr inbounds %struct.Reg, %struct.Reg* %12346, i32 0, i32 0
  %DX.i = bitcast %union.anon* %12347 to i16*
  %12348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12349 = getelementptr inbounds %struct.GPR, %struct.GPR* %12348, i32 0, i32 9
  %12350 = getelementptr inbounds %struct.Reg, %struct.Reg* %12349, i32 0, i32 0
  %RSI.i254 = bitcast %union.anon* %12350 to i64*
  %12351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12352 = getelementptr inbounds %struct.GPR, %struct.GPR* %12351, i32 0, i32 11
  %12353 = getelementptr inbounds %struct.Reg, %struct.Reg* %12352, i32 0, i32 0
  %RDI.i255 = bitcast %union.anon* %12353 to i64*
  %12354 = load i64, i64* %RSI.i254
  %12355 = load i64, i64* %RDI.i255
  %12356 = mul i64 %12355, 2
  %12357 = add i64 %12356, %12354
  %12358 = load i16, i16* %DX.i
  %12359 = zext i16 %12358 to i64
  %12360 = load i64, i64* %PC.i253
  %12361 = add i64 %12360, 4
  store i64 %12361, i64* %PC.i253
  %12362 = inttoptr i64 %12357 to i16*
  store i16 %12358, i16* %12362
  store %struct.Memory* %loadMem_4898ef, %struct.Memory** %MEMORY
  %loadMem_4898f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12364 = getelementptr inbounds %struct.GPR, %struct.GPR* %12363, i32 0, i32 33
  %12365 = getelementptr inbounds %struct.Reg, %struct.Reg* %12364, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %12365 to i64*
  %12366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12367 = getelementptr inbounds %struct.GPR, %struct.GPR* %12366, i32 0, i32 9
  %12368 = getelementptr inbounds %struct.Reg, %struct.Reg* %12367, i32 0, i32 0
  %RSI.i252 = bitcast %union.anon* %12368 to i64*
  %12369 = load i64, i64* %PC.i251
  %12370 = add i64 %12369, 8
  store i64 %12370, i64* %PC.i251
  %12371 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12371, i64* %RSI.i252, align 8
  store %struct.Memory* %loadMem_4898f3, %struct.Memory** %MEMORY
  %loadMem_4898fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12373 = getelementptr inbounds %struct.GPR, %struct.GPR* %12372, i32 0, i32 33
  %12374 = getelementptr inbounds %struct.Reg, %struct.Reg* %12373, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %12374 to i64*
  %12375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12376 = getelementptr inbounds %struct.GPR, %struct.GPR* %12375, i32 0, i32 1
  %12377 = getelementptr inbounds %struct.Reg, %struct.Reg* %12376, i32 0, i32 0
  %RAX.i249 = bitcast %union.anon* %12377 to i64*
  %12378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12379 = getelementptr inbounds %struct.GPR, %struct.GPR* %12378, i32 0, i32 9
  %12380 = getelementptr inbounds %struct.Reg, %struct.Reg* %12379, i32 0, i32 0
  %RSI.i250 = bitcast %union.anon* %12380 to i64*
  %12381 = load i64, i64* %RSI.i250
  %12382 = add i64 %12381, 72688
  %12383 = load i64, i64* %PC.i248
  %12384 = add i64 %12383, 6
  store i64 %12384, i64* %PC.i248
  %12385 = inttoptr i64 %12382 to i32*
  %12386 = load i32, i32* %12385
  %12387 = zext i32 %12386 to i64
  store i64 %12387, i64* %RAX.i249, align 8
  store %struct.Memory* %loadMem_4898fb, %struct.Memory** %MEMORY
  %loadMem_489901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12389 = getelementptr inbounds %struct.GPR, %struct.GPR* %12388, i32 0, i32 33
  %12390 = getelementptr inbounds %struct.Reg, %struct.Reg* %12389, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %12390 to i64*
  %12391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12392 = getelementptr inbounds %struct.GPR, %struct.GPR* %12391, i32 0, i32 17
  %12393 = getelementptr inbounds %struct.Reg, %struct.Reg* %12392, i32 0, i32 0
  %R8D.i246 = bitcast %union.anon* %12393 to i32*
  %12394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12395 = getelementptr inbounds %struct.GPR, %struct.GPR* %12394, i32 0, i32 15
  %12396 = getelementptr inbounds %struct.Reg, %struct.Reg* %12395, i32 0, i32 0
  %RBP.i247 = bitcast %union.anon* %12396 to i64*
  %12397 = bitcast i32* %R8D.i246 to i64*
  %12398 = load i64, i64* %RBP.i247
  %12399 = sub i64 %12398, 20
  %12400 = load i64, i64* %PC.i245
  %12401 = add i64 %12400, 4
  store i64 %12401, i64* %PC.i245
  %12402 = inttoptr i64 %12399 to i32*
  %12403 = load i32, i32* %12402
  %12404 = zext i32 %12403 to i64
  store i64 %12404, i64* %12397, align 8
  store %struct.Memory* %loadMem_489901, %struct.Memory** %MEMORY
  %loadMem_489905 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12406 = getelementptr inbounds %struct.GPR, %struct.GPR* %12405, i32 0, i32 33
  %12407 = getelementptr inbounds %struct.Reg, %struct.Reg* %12406, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %12407 to i64*
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12409 = getelementptr inbounds %struct.GPR, %struct.GPR* %12408, i32 0, i32 9
  %12410 = getelementptr inbounds %struct.Reg, %struct.Reg* %12409, i32 0, i32 0
  %RSI.i244 = bitcast %union.anon* %12410 to i64*
  %12411 = load i64, i64* %PC.i243
  %12412 = add i64 %12411, 8
  store i64 %12412, i64* %PC.i243
  %12413 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12413, i64* %RSI.i244, align 8
  store %struct.Memory* %loadMem_489905, %struct.Memory** %MEMORY
  %loadMem_48990d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12415 = getelementptr inbounds %struct.GPR, %struct.GPR* %12414, i32 0, i32 33
  %12416 = getelementptr inbounds %struct.Reg, %struct.Reg* %12415, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %12416 to i64*
  %12417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12418 = getelementptr inbounds %struct.GPR, %struct.GPR* %12417, i32 0, i32 9
  %12419 = getelementptr inbounds %struct.Reg, %struct.Reg* %12418, i32 0, i32 0
  %RSI.i242 = bitcast %union.anon* %12419 to i64*
  %12420 = load i64, i64* %RSI.i242
  %12421 = load i64, i64* %PC.i241
  %12422 = add i64 %12421, 7
  store i64 %12422, i64* %PC.i241
  %12423 = add i64 8504, %12420
  store i64 %12423, i64* %RSI.i242, align 8
  %12424 = icmp ult i64 %12423, %12420
  %12425 = icmp ult i64 %12423, 8504
  %12426 = or i1 %12424, %12425
  %12427 = zext i1 %12426 to i8
  %12428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12427, i8* %12428, align 1
  %12429 = trunc i64 %12423 to i32
  %12430 = and i32 %12429, 255
  %12431 = call i32 @llvm.ctpop.i32(i32 %12430)
  %12432 = trunc i32 %12431 to i8
  %12433 = and i8 %12432, 1
  %12434 = xor i8 %12433, 1
  %12435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12434, i8* %12435, align 1
  %12436 = xor i64 8504, %12420
  %12437 = xor i64 %12436, %12423
  %12438 = lshr i64 %12437, 4
  %12439 = trunc i64 %12438 to i8
  %12440 = and i8 %12439, 1
  %12441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12440, i8* %12441, align 1
  %12442 = icmp eq i64 %12423, 0
  %12443 = zext i1 %12442 to i8
  %12444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12443, i8* %12444, align 1
  %12445 = lshr i64 %12423, 63
  %12446 = trunc i64 %12445 to i8
  %12447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12446, i8* %12447, align 1
  %12448 = lshr i64 %12420, 63
  %12449 = xor i64 %12445, %12448
  %12450 = add i64 %12449, %12445
  %12451 = icmp eq i64 %12450, 2
  %12452 = zext i1 %12451 to i8
  %12453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12452, i8* %12453, align 1
  store %struct.Memory* %loadMem_48990d, %struct.Memory** %MEMORY
  %loadMem_489914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12455 = getelementptr inbounds %struct.GPR, %struct.GPR* %12454, i32 0, i32 33
  %12456 = getelementptr inbounds %struct.Reg, %struct.Reg* %12455, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %12456 to i64*
  %12457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12458 = getelementptr inbounds %struct.GPR, %struct.GPR* %12457, i32 0, i32 9
  %12459 = getelementptr inbounds %struct.Reg, %struct.Reg* %12458, i32 0, i32 0
  %RSI.i240 = bitcast %union.anon* %12459 to i64*
  %12460 = load i64, i64* %RSI.i240
  %12461 = load i64, i64* %PC.i239
  %12462 = add i64 %12461, 7
  store i64 %12462, i64* %PC.i239
  %12463 = add i64 2048, %12460
  store i64 %12463, i64* %RSI.i240, align 8
  %12464 = icmp ult i64 %12463, %12460
  %12465 = icmp ult i64 %12463, 2048
  %12466 = or i1 %12464, %12465
  %12467 = zext i1 %12466 to i8
  %12468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12467, i8* %12468, align 1
  %12469 = trunc i64 %12463 to i32
  %12470 = and i32 %12469, 255
  %12471 = call i32 @llvm.ctpop.i32(i32 %12470)
  %12472 = trunc i32 %12471 to i8
  %12473 = and i8 %12472, 1
  %12474 = xor i8 %12473, 1
  %12475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12474, i8* %12475, align 1
  %12476 = xor i64 2048, %12460
  %12477 = xor i64 %12476, %12463
  %12478 = lshr i64 %12477, 4
  %12479 = trunc i64 %12478 to i8
  %12480 = and i8 %12479, 1
  %12481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12480, i8* %12481, align 1
  %12482 = icmp eq i64 %12463, 0
  %12483 = zext i1 %12482 to i8
  %12484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12483, i8* %12484, align 1
  %12485 = lshr i64 %12463, 63
  %12486 = trunc i64 %12485 to i8
  %12487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12486, i8* %12487, align 1
  %12488 = lshr i64 %12460, 63
  %12489 = xor i64 %12485, %12488
  %12490 = add i64 %12489, %12485
  %12491 = icmp eq i64 %12490, 2
  %12492 = zext i1 %12491 to i8
  %12493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12492, i8* %12493, align 1
  store %struct.Memory* %loadMem_489914, %struct.Memory** %MEMORY
  %loadMem_48991b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12495 = getelementptr inbounds %struct.GPR, %struct.GPR* %12494, i32 0, i32 33
  %12496 = getelementptr inbounds %struct.Reg, %struct.Reg* %12495, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %12496 to i64*
  %12497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12498 = getelementptr inbounds %struct.GPR, %struct.GPR* %12497, i32 0, i32 11
  %12499 = getelementptr inbounds %struct.Reg, %struct.Reg* %12498, i32 0, i32 0
  %RDI.i237 = bitcast %union.anon* %12499 to i64*
  %12500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12501 = getelementptr inbounds %struct.GPR, %struct.GPR* %12500, i32 0, i32 15
  %12502 = getelementptr inbounds %struct.Reg, %struct.Reg* %12501, i32 0, i32 0
  %RBP.i238 = bitcast %union.anon* %12502 to i64*
  %12503 = load i64, i64* %RBP.i238
  %12504 = sub i64 %12503, 32
  %12505 = load i64, i64* %PC.i236
  %12506 = add i64 %12505, 4
  store i64 %12506, i64* %PC.i236
  %12507 = inttoptr i64 %12504 to i32*
  %12508 = load i32, i32* %12507
  %12509 = sext i32 %12508 to i64
  store i64 %12509, i64* %RDI.i237, align 8
  store %struct.Memory* %loadMem_48991b, %struct.Memory** %MEMORY
  %loadMem_48991f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12511 = getelementptr inbounds %struct.GPR, %struct.GPR* %12510, i32 0, i32 33
  %12512 = getelementptr inbounds %struct.Reg, %struct.Reg* %12511, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %12512 to i64*
  %12513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12514 = getelementptr inbounds %struct.GPR, %struct.GPR* %12513, i32 0, i32 11
  %12515 = getelementptr inbounds %struct.Reg, %struct.Reg* %12514, i32 0, i32 0
  %RDI.i235 = bitcast %union.anon* %12515 to i64*
  %12516 = load i64, i64* %RDI.i235
  %12517 = load i64, i64* %PC.i234
  %12518 = add i64 %12517, 4
  store i64 %12518, i64* %PC.i234
  %12519 = shl i64 %12516, 8
  %12520 = icmp slt i64 %12519, 0
  %12521 = shl i64 %12519, 1
  store i64 %12521, i64* %RDI.i235, align 8
  %12522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12523 = zext i1 %12520 to i8
  store i8 %12523, i8* %12522, align 1
  %12524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12525 = trunc i64 %12521 to i32
  store i8 1, i8* %12524, align 1
  %12526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12526, align 1
  %12527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12528 = icmp eq i64 %12521, 0
  %12529 = zext i1 %12528 to i8
  store i8 %12529, i8* %12527, align 1
  %12530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12531 = lshr i64 %12521, 63
  %12532 = trunc i64 %12531 to i8
  store i8 %12532, i8* %12530, align 1
  %12533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12533, align 1
  store %struct.Memory* %loadMem_48991f, %struct.Memory** %MEMORY
  %loadMem_489923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12535 = getelementptr inbounds %struct.GPR, %struct.GPR* %12534, i32 0, i32 33
  %12536 = getelementptr inbounds %struct.Reg, %struct.Reg* %12535, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %12536 to i64*
  %12537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12538 = getelementptr inbounds %struct.GPR, %struct.GPR* %12537, i32 0, i32 9
  %12539 = getelementptr inbounds %struct.Reg, %struct.Reg* %12538, i32 0, i32 0
  %RSI.i232 = bitcast %union.anon* %12539 to i64*
  %12540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12541 = getelementptr inbounds %struct.GPR, %struct.GPR* %12540, i32 0, i32 11
  %12542 = getelementptr inbounds %struct.Reg, %struct.Reg* %12541, i32 0, i32 0
  %RDI.i233 = bitcast %union.anon* %12542 to i64*
  %12543 = load i64, i64* %RSI.i232
  %12544 = load i64, i64* %RDI.i233
  %12545 = load i64, i64* %PC.i231
  %12546 = add i64 %12545, 3
  store i64 %12546, i64* %PC.i231
  %12547 = add i64 %12544, %12543
  store i64 %12547, i64* %RSI.i232, align 8
  %12548 = icmp ult i64 %12547, %12543
  %12549 = icmp ult i64 %12547, %12544
  %12550 = or i1 %12548, %12549
  %12551 = zext i1 %12550 to i8
  %12552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12551, i8* %12552, align 1
  %12553 = trunc i64 %12547 to i32
  %12554 = and i32 %12553, 255
  %12555 = call i32 @llvm.ctpop.i32(i32 %12554)
  %12556 = trunc i32 %12555 to i8
  %12557 = and i8 %12556, 1
  %12558 = xor i8 %12557, 1
  %12559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12558, i8* %12559, align 1
  %12560 = xor i64 %12544, %12543
  %12561 = xor i64 %12560, %12547
  %12562 = lshr i64 %12561, 4
  %12563 = trunc i64 %12562 to i8
  %12564 = and i8 %12563, 1
  %12565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12564, i8* %12565, align 1
  %12566 = icmp eq i64 %12547, 0
  %12567 = zext i1 %12566 to i8
  %12568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12567, i8* %12568, align 1
  %12569 = lshr i64 %12547, 63
  %12570 = trunc i64 %12569 to i8
  %12571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12570, i8* %12571, align 1
  %12572 = lshr i64 %12543, 63
  %12573 = lshr i64 %12544, 63
  %12574 = xor i64 %12569, %12572
  %12575 = xor i64 %12569, %12573
  %12576 = add i64 %12574, %12575
  %12577 = icmp eq i64 %12576, 2
  %12578 = zext i1 %12577 to i8
  %12579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12578, i8* %12579, align 1
  store %struct.Memory* %loadMem_489923, %struct.Memory** %MEMORY
  %loadMem_489926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12581 = getelementptr inbounds %struct.GPR, %struct.GPR* %12580, i32 0, i32 33
  %12582 = getelementptr inbounds %struct.Reg, %struct.Reg* %12581, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %12582 to i64*
  %12583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12584 = getelementptr inbounds %struct.GPR, %struct.GPR* %12583, i32 0, i32 11
  %12585 = getelementptr inbounds %struct.Reg, %struct.Reg* %12584, i32 0, i32 0
  %RDI.i229 = bitcast %union.anon* %12585 to i64*
  %12586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12587 = getelementptr inbounds %struct.GPR, %struct.GPR* %12586, i32 0, i32 15
  %12588 = getelementptr inbounds %struct.Reg, %struct.Reg* %12587, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %12588 to i64*
  %12589 = load i64, i64* %RBP.i230
  %12590 = sub i64 %12589, 36
  %12591 = load i64, i64* %PC.i228
  %12592 = add i64 %12591, 4
  store i64 %12592, i64* %PC.i228
  %12593 = inttoptr i64 %12590 to i32*
  %12594 = load i32, i32* %12593
  %12595 = sext i32 %12594 to i64
  store i64 %12595, i64* %RDI.i229, align 8
  store %struct.Memory* %loadMem_489926, %struct.Memory** %MEMORY
  %loadMem_48992a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12597 = getelementptr inbounds %struct.GPR, %struct.GPR* %12596, i32 0, i32 33
  %12598 = getelementptr inbounds %struct.Reg, %struct.Reg* %12597, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %12598 to i64*
  %12599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12600 = getelementptr inbounds %struct.GPR, %struct.GPR* %12599, i32 0, i32 11
  %12601 = getelementptr inbounds %struct.Reg, %struct.Reg* %12600, i32 0, i32 0
  %RDI.i227 = bitcast %union.anon* %12601 to i64*
  %12602 = load i64, i64* %RDI.i227
  %12603 = load i64, i64* %PC.i226
  %12604 = add i64 %12603, 4
  store i64 %12604, i64* %PC.i226
  %12605 = shl i64 %12602, 4
  %12606 = icmp slt i64 %12605, 0
  %12607 = shl i64 %12605, 1
  store i64 %12607, i64* %RDI.i227, align 8
  %12608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12609 = zext i1 %12606 to i8
  store i8 %12609, i8* %12608, align 1
  %12610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12611 = trunc i64 %12607 to i32
  %12612 = and i32 %12611, 254
  %12613 = call i32 @llvm.ctpop.i32(i32 %12612)
  %12614 = trunc i32 %12613 to i8
  %12615 = and i8 %12614, 1
  %12616 = xor i8 %12615, 1
  store i8 %12616, i8* %12610, align 1
  %12617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12617, align 1
  %12618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12619 = icmp eq i64 %12607, 0
  %12620 = zext i1 %12619 to i8
  store i8 %12620, i8* %12618, align 1
  %12621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12622 = lshr i64 %12607, 63
  %12623 = trunc i64 %12622 to i8
  store i8 %12623, i8* %12621, align 1
  %12624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12624, align 1
  store %struct.Memory* %loadMem_48992a, %struct.Memory** %MEMORY
  %loadMem_48992e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12626 = getelementptr inbounds %struct.GPR, %struct.GPR* %12625, i32 0, i32 33
  %12627 = getelementptr inbounds %struct.Reg, %struct.Reg* %12626, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %12627 to i64*
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12629 = getelementptr inbounds %struct.GPR, %struct.GPR* %12628, i32 0, i32 9
  %12630 = getelementptr inbounds %struct.Reg, %struct.Reg* %12629, i32 0, i32 0
  %RSI.i224 = bitcast %union.anon* %12630 to i64*
  %12631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12632 = getelementptr inbounds %struct.GPR, %struct.GPR* %12631, i32 0, i32 11
  %12633 = getelementptr inbounds %struct.Reg, %struct.Reg* %12632, i32 0, i32 0
  %RDI.i225 = bitcast %union.anon* %12633 to i64*
  %12634 = load i64, i64* %RSI.i224
  %12635 = load i64, i64* %RDI.i225
  %12636 = load i64, i64* %PC.i223
  %12637 = add i64 %12636, 3
  store i64 %12637, i64* %PC.i223
  %12638 = add i64 %12635, %12634
  store i64 %12638, i64* %RSI.i224, align 8
  %12639 = icmp ult i64 %12638, %12634
  %12640 = icmp ult i64 %12638, %12635
  %12641 = or i1 %12639, %12640
  %12642 = zext i1 %12641 to i8
  %12643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12642, i8* %12643, align 1
  %12644 = trunc i64 %12638 to i32
  %12645 = and i32 %12644, 255
  %12646 = call i32 @llvm.ctpop.i32(i32 %12645)
  %12647 = trunc i32 %12646 to i8
  %12648 = and i8 %12647, 1
  %12649 = xor i8 %12648, 1
  %12650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12649, i8* %12650, align 1
  %12651 = xor i64 %12635, %12634
  %12652 = xor i64 %12651, %12638
  %12653 = lshr i64 %12652, 4
  %12654 = trunc i64 %12653 to i8
  %12655 = and i8 %12654, 1
  %12656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12655, i8* %12656, align 1
  %12657 = icmp eq i64 %12638, 0
  %12658 = zext i1 %12657 to i8
  %12659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12658, i8* %12659, align 1
  %12660 = lshr i64 %12638, 63
  %12661 = trunc i64 %12660 to i8
  %12662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12661, i8* %12662, align 1
  %12663 = lshr i64 %12634, 63
  %12664 = lshr i64 %12635, 63
  %12665 = xor i64 %12660, %12663
  %12666 = xor i64 %12660, %12664
  %12667 = add i64 %12665, %12666
  %12668 = icmp eq i64 %12667, 2
  %12669 = zext i1 %12668 to i8
  %12670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12669, i8* %12670, align 1
  store %struct.Memory* %loadMem_48992e, %struct.Memory** %MEMORY
  %loadMem_489931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12672 = getelementptr inbounds %struct.GPR, %struct.GPR* %12671, i32 0, i32 33
  %12673 = getelementptr inbounds %struct.Reg, %struct.Reg* %12672, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %12673 to i64*
  %12674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12675 = getelementptr inbounds %struct.GPR, %struct.GPR* %12674, i32 0, i32 11
  %12676 = getelementptr inbounds %struct.Reg, %struct.Reg* %12675, i32 0, i32 0
  %RDI.i221 = bitcast %union.anon* %12676 to i64*
  %12677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12678 = getelementptr inbounds %struct.GPR, %struct.GPR* %12677, i32 0, i32 15
  %12679 = getelementptr inbounds %struct.Reg, %struct.Reg* %12678, i32 0, i32 0
  %RBP.i222 = bitcast %union.anon* %12679 to i64*
  %12680 = load i64, i64* %RBP.i222
  %12681 = sub i64 %12680, 40
  %12682 = load i64, i64* %PC.i220
  %12683 = add i64 %12682, 4
  store i64 %12683, i64* %PC.i220
  %12684 = inttoptr i64 %12681 to i32*
  %12685 = load i32, i32* %12684
  %12686 = sext i32 %12685 to i64
  store i64 %12686, i64* %RDI.i221, align 8
  store %struct.Memory* %loadMem_489931, %struct.Memory** %MEMORY
  %loadMem_489935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12688 = getelementptr inbounds %struct.GPR, %struct.GPR* %12687, i32 0, i32 33
  %12689 = getelementptr inbounds %struct.Reg, %struct.Reg* %12688, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %12689 to i64*
  %12690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12691 = getelementptr inbounds %struct.GPR, %struct.GPR* %12690, i32 0, i32 19
  %12692 = getelementptr inbounds %struct.Reg, %struct.Reg* %12691, i32 0, i32 0
  %R9D.i217 = bitcast %union.anon* %12692 to i32*
  %12693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12694 = getelementptr inbounds %struct.GPR, %struct.GPR* %12693, i32 0, i32 9
  %12695 = getelementptr inbounds %struct.Reg, %struct.Reg* %12694, i32 0, i32 0
  %RSI.i218 = bitcast %union.anon* %12695 to i64*
  %12696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12697 = getelementptr inbounds %struct.GPR, %struct.GPR* %12696, i32 0, i32 11
  %12698 = getelementptr inbounds %struct.Reg, %struct.Reg* %12697, i32 0, i32 0
  %RDI.i219 = bitcast %union.anon* %12698 to i64*
  %12699 = bitcast i32* %R9D.i217 to i64*
  %12700 = load i64, i64* %RSI.i218
  %12701 = load i64, i64* %RDI.i219
  %12702 = mul i64 %12701, 2
  %12703 = add i64 %12702, %12700
  %12704 = load i64, i64* %PC.i216
  %12705 = add i64 %12704, 5
  store i64 %12705, i64* %PC.i216
  %12706 = inttoptr i64 %12703 to i16*
  %12707 = load i16, i16* %12706
  %12708 = zext i16 %12707 to i64
  store i64 %12708, i64* %12699, align 8
  store %struct.Memory* %loadMem_489935, %struct.Memory** %MEMORY
  %loadMem_48993a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12710 = getelementptr inbounds %struct.GPR, %struct.GPR* %12709, i32 0, i32 33
  %12711 = getelementptr inbounds %struct.Reg, %struct.Reg* %12710, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %12711 to i64*
  %12712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12713 = getelementptr inbounds %struct.GPR, %struct.GPR* %12712, i32 0, i32 17
  %12714 = getelementptr inbounds %struct.Reg, %struct.Reg* %12713, i32 0, i32 0
  %R8D.i215 = bitcast %union.anon* %12714 to i32*
  %12715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12716 = getelementptr inbounds %struct.GPR, %struct.GPR* %12715, i32 0, i32 19
  %12717 = getelementptr inbounds %struct.Reg, %struct.Reg* %12716, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %12717 to i32*
  %12718 = bitcast i32* %R8D.i215 to i64*
  %12719 = load i32, i32* %R8D.i215
  %12720 = zext i32 %12719 to i64
  %12721 = load i32, i32* %R9D.i
  %12722 = zext i32 %12721 to i64
  %12723 = load i64, i64* %PC.i214
  %12724 = add i64 %12723, 3
  store i64 %12724, i64* %PC.i214
  %12725 = add i32 %12721, %12719
  %12726 = zext i32 %12725 to i64
  store i64 %12726, i64* %12718, align 8
  %12727 = icmp ult i32 %12725, %12719
  %12728 = icmp ult i32 %12725, %12721
  %12729 = or i1 %12727, %12728
  %12730 = zext i1 %12729 to i8
  %12731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12730, i8* %12731, align 1
  %12732 = and i32 %12725, 255
  %12733 = call i32 @llvm.ctpop.i32(i32 %12732)
  %12734 = trunc i32 %12733 to i8
  %12735 = and i8 %12734, 1
  %12736 = xor i8 %12735, 1
  %12737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12736, i8* %12737, align 1
  %12738 = xor i64 %12722, %12720
  %12739 = trunc i64 %12738 to i32
  %12740 = xor i32 %12739, %12725
  %12741 = lshr i32 %12740, 4
  %12742 = trunc i32 %12741 to i8
  %12743 = and i8 %12742, 1
  %12744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12743, i8* %12744, align 1
  %12745 = icmp eq i32 %12725, 0
  %12746 = zext i1 %12745 to i8
  %12747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12746, i8* %12747, align 1
  %12748 = lshr i32 %12725, 31
  %12749 = trunc i32 %12748 to i8
  %12750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12749, i8* %12750, align 1
  %12751 = lshr i32 %12719, 31
  %12752 = lshr i32 %12721, 31
  %12753 = xor i32 %12748, %12751
  %12754 = xor i32 %12748, %12752
  %12755 = add i32 %12753, %12754
  %12756 = icmp eq i32 %12755, 2
  %12757 = zext i1 %12756 to i8
  %12758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12757, i8* %12758, align 1
  store %struct.Memory* %loadMem_48993a, %struct.Memory** %MEMORY
  %loadMem_48993d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12760 = getelementptr inbounds %struct.GPR, %struct.GPR* %12759, i32 0, i32 33
  %12761 = getelementptr inbounds %struct.Reg, %struct.Reg* %12760, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %12761 to i64*
  %12762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12763 = getelementptr inbounds %struct.GPR, %struct.GPR* %12762, i32 0, i32 5
  %12764 = getelementptr inbounds %struct.Reg, %struct.Reg* %12763, i32 0, i32 0
  %ECX.i213 = bitcast %union.anon* %12764 to i32*
  %12765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12766 = getelementptr inbounds %struct.GPR, %struct.GPR* %12765, i32 0, i32 17
  %12767 = getelementptr inbounds %struct.Reg, %struct.Reg* %12766, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %12767 to i32*
  %12768 = load i32, i32* %ECX.i213
  %12769 = zext i32 %12768 to i64
  %12770 = load i32, i32* %R8D.i
  %12771 = zext i32 %12770 to i64
  %12772 = load i64, i64* %PC.i212
  %12773 = add i64 %12772, 3
  store i64 %12773, i64* %PC.i212
  %12774 = sub i32 %12768, %12770
  %12775 = icmp ult i32 %12768, %12770
  %12776 = zext i1 %12775 to i8
  %12777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12776, i8* %12777, align 1
  %12778 = and i32 %12774, 255
  %12779 = call i32 @llvm.ctpop.i32(i32 %12778)
  %12780 = trunc i32 %12779 to i8
  %12781 = and i8 %12780, 1
  %12782 = xor i8 %12781, 1
  %12783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12782, i8* %12783, align 1
  %12784 = xor i64 %12771, %12769
  %12785 = trunc i64 %12784 to i32
  %12786 = xor i32 %12785, %12774
  %12787 = lshr i32 %12786, 4
  %12788 = trunc i32 %12787 to i8
  %12789 = and i8 %12788, 1
  %12790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12789, i8* %12790, align 1
  %12791 = icmp eq i32 %12774, 0
  %12792 = zext i1 %12791 to i8
  %12793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12792, i8* %12793, align 1
  %12794 = lshr i32 %12774, 31
  %12795 = trunc i32 %12794 to i8
  %12796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12795, i8* %12796, align 1
  %12797 = lshr i32 %12768, 31
  %12798 = lshr i32 %12770, 31
  %12799 = xor i32 %12798, %12797
  %12800 = xor i32 %12794, %12797
  %12801 = add i32 %12800, %12799
  %12802 = icmp eq i32 %12801, 2
  %12803 = zext i1 %12802 to i8
  %12804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12803, i8* %12804, align 1
  store %struct.Memory* %loadMem_48993d, %struct.Memory** %MEMORY
  %loadMem_489940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12806 = getelementptr inbounds %struct.GPR, %struct.GPR* %12805, i32 0, i32 33
  %12807 = getelementptr inbounds %struct.Reg, %struct.Reg* %12806, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %12807 to i64*
  %12808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12809 = getelementptr inbounds %struct.GPR, %struct.GPR* %12808, i32 0, i32 1
  %12810 = getelementptr inbounds %struct.Reg, %struct.Reg* %12809, i32 0, i32 0
  %EAX.i210 = bitcast %union.anon* %12810 to i32*
  %12811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12812 = getelementptr inbounds %struct.GPR, %struct.GPR* %12811, i32 0, i32 15
  %12813 = getelementptr inbounds %struct.Reg, %struct.Reg* %12812, i32 0, i32 0
  %RBP.i211 = bitcast %union.anon* %12813 to i64*
  %12814 = load i64, i64* %RBP.i211
  %12815 = sub i64 %12814, 116
  %12816 = load i32, i32* %EAX.i210
  %12817 = zext i32 %12816 to i64
  %12818 = load i64, i64* %PC.i209
  %12819 = add i64 %12818, 3
  store i64 %12819, i64* %PC.i209
  %12820 = inttoptr i64 %12815 to i32*
  store i32 %12816, i32* %12820
  store %struct.Memory* %loadMem_489940, %struct.Memory** %MEMORY
  %loadMem_489943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12822 = getelementptr inbounds %struct.GPR, %struct.GPR* %12821, i32 0, i32 33
  %12823 = getelementptr inbounds %struct.Reg, %struct.Reg* %12822, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %12823 to i64*
  %12824 = load i64, i64* %PC.i208
  %12825 = add i64 %12824, 16
  %12826 = load i64, i64* %PC.i208
  %12827 = add i64 %12826, 6
  %12828 = load i64, i64* %PC.i208
  %12829 = add i64 %12828, 6
  store i64 %12829, i64* %PC.i208
  %12830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12831 = load i8, i8* %12830, align 1
  %12832 = icmp ne i8 %12831, 0
  %12833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12834 = load i8, i8* %12833, align 1
  %12835 = icmp ne i8 %12834, 0
  %12836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12837 = load i8, i8* %12836, align 1
  %12838 = icmp ne i8 %12837, 0
  %12839 = xor i1 %12835, %12838
  %12840 = or i1 %12832, %12839
  %12841 = zext i1 %12840 to i8
  store i8 %12841, i8* %BRANCH_TAKEN, align 1
  %12842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12843 = select i1 %12840, i64 %12825, i64 %12827
  store i64 %12843, i64* %12842, align 8
  store %struct.Memory* %loadMem_489943, %struct.Memory** %MEMORY
  %loadBr_489943 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489943 = icmp eq i8 %loadBr_489943, 1
  br i1 %cmpBr_489943, label %block_.L_489953, label %block_489949

block_489949:                                     ; preds = %block_.L_4898c2
  %loadMem_489949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12845 = getelementptr inbounds %struct.GPR, %struct.GPR* %12844, i32 0, i32 33
  %12846 = getelementptr inbounds %struct.Reg, %struct.Reg* %12845, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %12846 to i64*
  %12847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12848 = getelementptr inbounds %struct.GPR, %struct.GPR* %12847, i32 0, i32 1
  %12849 = getelementptr inbounds %struct.Reg, %struct.Reg* %12848, i32 0, i32 0
  %EAX.i206 = bitcast %union.anon* %12849 to i32*
  %12850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12851 = getelementptr inbounds %struct.GPR, %struct.GPR* %12850, i32 0, i32 1
  %12852 = getelementptr inbounds %struct.Reg, %struct.Reg* %12851, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %12852 to i64*
  %12853 = load i64, i64* %RAX.i207
  %12854 = load i32, i32* %EAX.i206
  %12855 = zext i32 %12854 to i64
  %12856 = load i64, i64* %PC.i205
  %12857 = add i64 %12856, 2
  store i64 %12857, i64* %PC.i205
  %12858 = xor i64 %12855, %12853
  %12859 = trunc i64 %12858 to i32
  %12860 = and i64 %12858, 4294967295
  store i64 %12860, i64* %RAX.i207, align 8
  %12861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12861, align 1
  %12862 = and i32 %12859, 255
  %12863 = call i32 @llvm.ctpop.i32(i32 %12862)
  %12864 = trunc i32 %12863 to i8
  %12865 = and i8 %12864, 1
  %12866 = xor i8 %12865, 1
  %12867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12866, i8* %12867, align 1
  %12868 = icmp eq i32 %12859, 0
  %12869 = zext i1 %12868 to i8
  %12870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12869, i8* %12870, align 1
  %12871 = lshr i32 %12859, 31
  %12872 = trunc i32 %12871 to i8
  %12873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12872, i8* %12873, align 1
  %12874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12874, align 1
  %12875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12875, align 1
  store %struct.Memory* %loadMem_489949, %struct.Memory** %MEMORY
  %loadMem_48994b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12877 = getelementptr inbounds %struct.GPR, %struct.GPR* %12876, i32 0, i32 33
  %12878 = getelementptr inbounds %struct.Reg, %struct.Reg* %12877, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %12878 to i64*
  %12879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12880 = getelementptr inbounds %struct.GPR, %struct.GPR* %12879, i32 0, i32 1
  %12881 = getelementptr inbounds %struct.Reg, %struct.Reg* %12880, i32 0, i32 0
  %EAX.i203 = bitcast %union.anon* %12881 to i32*
  %12882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12883 = getelementptr inbounds %struct.GPR, %struct.GPR* %12882, i32 0, i32 15
  %12884 = getelementptr inbounds %struct.Reg, %struct.Reg* %12883, i32 0, i32 0
  %RBP.i204 = bitcast %union.anon* %12884 to i64*
  %12885 = load i64, i64* %RBP.i204
  %12886 = sub i64 %12885, 120
  %12887 = load i32, i32* %EAX.i203
  %12888 = zext i32 %12887 to i64
  %12889 = load i64, i64* %PC.i202
  %12890 = add i64 %12889, 3
  store i64 %12890, i64* %PC.i202
  %12891 = inttoptr i64 %12886 to i32*
  store i32 %12887, i32* %12891
  store %struct.Memory* %loadMem_48994b, %struct.Memory** %MEMORY
  %loadMem_48994e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12893 = getelementptr inbounds %struct.GPR, %struct.GPR* %12892, i32 0, i32 33
  %12894 = getelementptr inbounds %struct.Reg, %struct.Reg* %12893, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %12894 to i64*
  %12895 = load i64, i64* %PC.i201
  %12896 = add i64 %12895, 65
  %12897 = load i64, i64* %PC.i201
  %12898 = add i64 %12897, 5
  store i64 %12898, i64* %PC.i201
  %12899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12896, i64* %12899, align 8
  store %struct.Memory* %loadMem_48994e, %struct.Memory** %MEMORY
  br label %block_.L_48998f

block_.L_489953:                                  ; preds = %block_.L_4898c2
  %loadMem_489953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12901 = getelementptr inbounds %struct.GPR, %struct.GPR* %12900, i32 0, i32 33
  %12902 = getelementptr inbounds %struct.Reg, %struct.Reg* %12901, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %12902 to i64*
  %12903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12904 = getelementptr inbounds %struct.GPR, %struct.GPR* %12903, i32 0, i32 1
  %12905 = getelementptr inbounds %struct.Reg, %struct.Reg* %12904, i32 0, i32 0
  %RAX.i199 = bitcast %union.anon* %12905 to i64*
  %12906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12907 = getelementptr inbounds %struct.GPR, %struct.GPR* %12906, i32 0, i32 15
  %12908 = getelementptr inbounds %struct.Reg, %struct.Reg* %12907, i32 0, i32 0
  %RBP.i200 = bitcast %union.anon* %12908 to i64*
  %12909 = load i64, i64* %RBP.i200
  %12910 = sub i64 %12909, 20
  %12911 = load i64, i64* %PC.i198
  %12912 = add i64 %12911, 3
  store i64 %12912, i64* %PC.i198
  %12913 = inttoptr i64 %12910 to i32*
  %12914 = load i32, i32* %12913
  %12915 = zext i32 %12914 to i64
  store i64 %12915, i64* %RAX.i199, align 8
  store %struct.Memory* %loadMem_489953, %struct.Memory** %MEMORY
  %loadMem_489956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12917 = getelementptr inbounds %struct.GPR, %struct.GPR* %12916, i32 0, i32 33
  %12918 = getelementptr inbounds %struct.Reg, %struct.Reg* %12917, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %12918 to i64*
  %12919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12920 = getelementptr inbounds %struct.GPR, %struct.GPR* %12919, i32 0, i32 5
  %12921 = getelementptr inbounds %struct.Reg, %struct.Reg* %12920, i32 0, i32 0
  %RCX.i197 = bitcast %union.anon* %12921 to i64*
  %12922 = load i64, i64* %PC.i196
  %12923 = add i64 %12922, 8
  store i64 %12923, i64* %PC.i196
  %12924 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12924, i64* %RCX.i197, align 8
  store %struct.Memory* %loadMem_489956, %struct.Memory** %MEMORY
  %loadMem_48995e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12926 = getelementptr inbounds %struct.GPR, %struct.GPR* %12925, i32 0, i32 33
  %12927 = getelementptr inbounds %struct.Reg, %struct.Reg* %12926, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %12927 to i64*
  %12928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12929 = getelementptr inbounds %struct.GPR, %struct.GPR* %12928, i32 0, i32 5
  %12930 = getelementptr inbounds %struct.Reg, %struct.Reg* %12929, i32 0, i32 0
  %RCX.i195 = bitcast %union.anon* %12930 to i64*
  %12931 = load i64, i64* %RCX.i195
  %12932 = load i64, i64* %PC.i194
  %12933 = add i64 %12932, 7
  store i64 %12933, i64* %PC.i194
  %12934 = add i64 8504, %12931
  store i64 %12934, i64* %RCX.i195, align 8
  %12935 = icmp ult i64 %12934, %12931
  %12936 = icmp ult i64 %12934, 8504
  %12937 = or i1 %12935, %12936
  %12938 = zext i1 %12937 to i8
  %12939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12938, i8* %12939, align 1
  %12940 = trunc i64 %12934 to i32
  %12941 = and i32 %12940, 255
  %12942 = call i32 @llvm.ctpop.i32(i32 %12941)
  %12943 = trunc i32 %12942 to i8
  %12944 = and i8 %12943, 1
  %12945 = xor i8 %12944, 1
  %12946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12945, i8* %12946, align 1
  %12947 = xor i64 8504, %12931
  %12948 = xor i64 %12947, %12934
  %12949 = lshr i64 %12948, 4
  %12950 = trunc i64 %12949 to i8
  %12951 = and i8 %12950, 1
  %12952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12951, i8* %12952, align 1
  %12953 = icmp eq i64 %12934, 0
  %12954 = zext i1 %12953 to i8
  %12955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12954, i8* %12955, align 1
  %12956 = lshr i64 %12934, 63
  %12957 = trunc i64 %12956 to i8
  %12958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12957, i8* %12958, align 1
  %12959 = lshr i64 %12931, 63
  %12960 = xor i64 %12956, %12959
  %12961 = add i64 %12960, %12956
  %12962 = icmp eq i64 %12961, 2
  %12963 = zext i1 %12962 to i8
  %12964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12963, i8* %12964, align 1
  store %struct.Memory* %loadMem_48995e, %struct.Memory** %MEMORY
  %loadMem_489965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12966 = getelementptr inbounds %struct.GPR, %struct.GPR* %12965, i32 0, i32 33
  %12967 = getelementptr inbounds %struct.Reg, %struct.Reg* %12966, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %12967 to i64*
  %12968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12969 = getelementptr inbounds %struct.GPR, %struct.GPR* %12968, i32 0, i32 5
  %12970 = getelementptr inbounds %struct.Reg, %struct.Reg* %12969, i32 0, i32 0
  %RCX.i193 = bitcast %union.anon* %12970 to i64*
  %12971 = load i64, i64* %RCX.i193
  %12972 = load i64, i64* %PC.i192
  %12973 = add i64 %12972, 7
  store i64 %12973, i64* %PC.i192
  %12974 = add i64 2048, %12971
  store i64 %12974, i64* %RCX.i193, align 8
  %12975 = icmp ult i64 %12974, %12971
  %12976 = icmp ult i64 %12974, 2048
  %12977 = or i1 %12975, %12976
  %12978 = zext i1 %12977 to i8
  %12979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12978, i8* %12979, align 1
  %12980 = trunc i64 %12974 to i32
  %12981 = and i32 %12980, 255
  %12982 = call i32 @llvm.ctpop.i32(i32 %12981)
  %12983 = trunc i32 %12982 to i8
  %12984 = and i8 %12983, 1
  %12985 = xor i8 %12984, 1
  %12986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12985, i8* %12986, align 1
  %12987 = xor i64 2048, %12971
  %12988 = xor i64 %12987, %12974
  %12989 = lshr i64 %12988, 4
  %12990 = trunc i64 %12989 to i8
  %12991 = and i8 %12990, 1
  %12992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12991, i8* %12992, align 1
  %12993 = icmp eq i64 %12974, 0
  %12994 = zext i1 %12993 to i8
  %12995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12994, i8* %12995, align 1
  %12996 = lshr i64 %12974, 63
  %12997 = trunc i64 %12996 to i8
  %12998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12997, i8* %12998, align 1
  %12999 = lshr i64 %12971, 63
  %13000 = xor i64 %12996, %12999
  %13001 = add i64 %13000, %12996
  %13002 = icmp eq i64 %13001, 2
  %13003 = zext i1 %13002 to i8
  %13004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13003, i8* %13004, align 1
  store %struct.Memory* %loadMem_489965, %struct.Memory** %MEMORY
  %loadMem_48996c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13006 = getelementptr inbounds %struct.GPR, %struct.GPR* %13005, i32 0, i32 33
  %13007 = getelementptr inbounds %struct.Reg, %struct.Reg* %13006, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %13007 to i64*
  %13008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13009 = getelementptr inbounds %struct.GPR, %struct.GPR* %13008, i32 0, i32 7
  %13010 = getelementptr inbounds %struct.Reg, %struct.Reg* %13009, i32 0, i32 0
  %RDX.i190 = bitcast %union.anon* %13010 to i64*
  %13011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13012 = getelementptr inbounds %struct.GPR, %struct.GPR* %13011, i32 0, i32 15
  %13013 = getelementptr inbounds %struct.Reg, %struct.Reg* %13012, i32 0, i32 0
  %RBP.i191 = bitcast %union.anon* %13013 to i64*
  %13014 = load i64, i64* %RBP.i191
  %13015 = sub i64 %13014, 32
  %13016 = load i64, i64* %PC.i189
  %13017 = add i64 %13016, 4
  store i64 %13017, i64* %PC.i189
  %13018 = inttoptr i64 %13015 to i32*
  %13019 = load i32, i32* %13018
  %13020 = sext i32 %13019 to i64
  store i64 %13020, i64* %RDX.i190, align 8
  store %struct.Memory* %loadMem_48996c, %struct.Memory** %MEMORY
  %loadMem_489970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13022 = getelementptr inbounds %struct.GPR, %struct.GPR* %13021, i32 0, i32 33
  %13023 = getelementptr inbounds %struct.Reg, %struct.Reg* %13022, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %13023 to i64*
  %13024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13025 = getelementptr inbounds %struct.GPR, %struct.GPR* %13024, i32 0, i32 7
  %13026 = getelementptr inbounds %struct.Reg, %struct.Reg* %13025, i32 0, i32 0
  %RDX.i188 = bitcast %union.anon* %13026 to i64*
  %13027 = load i64, i64* %RDX.i188
  %13028 = load i64, i64* %PC.i187
  %13029 = add i64 %13028, 4
  store i64 %13029, i64* %PC.i187
  %13030 = shl i64 %13027, 8
  %13031 = icmp slt i64 %13030, 0
  %13032 = shl i64 %13030, 1
  store i64 %13032, i64* %RDX.i188, align 8
  %13033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13034 = zext i1 %13031 to i8
  store i8 %13034, i8* %13033, align 1
  %13035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13036 = trunc i64 %13032 to i32
  store i8 1, i8* %13035, align 1
  %13037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13037, align 1
  %13038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13039 = icmp eq i64 %13032, 0
  %13040 = zext i1 %13039 to i8
  store i8 %13040, i8* %13038, align 1
  %13041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13042 = lshr i64 %13032, 63
  %13043 = trunc i64 %13042 to i8
  store i8 %13043, i8* %13041, align 1
  %13044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13044, align 1
  store %struct.Memory* %loadMem_489970, %struct.Memory** %MEMORY
  %loadMem_489974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13046 = getelementptr inbounds %struct.GPR, %struct.GPR* %13045, i32 0, i32 33
  %13047 = getelementptr inbounds %struct.Reg, %struct.Reg* %13046, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %13047 to i64*
  %13048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13049 = getelementptr inbounds %struct.GPR, %struct.GPR* %13048, i32 0, i32 5
  %13050 = getelementptr inbounds %struct.Reg, %struct.Reg* %13049, i32 0, i32 0
  %RCX.i185 = bitcast %union.anon* %13050 to i64*
  %13051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13052 = getelementptr inbounds %struct.GPR, %struct.GPR* %13051, i32 0, i32 7
  %13053 = getelementptr inbounds %struct.Reg, %struct.Reg* %13052, i32 0, i32 0
  %RDX.i186 = bitcast %union.anon* %13053 to i64*
  %13054 = load i64, i64* %RCX.i185
  %13055 = load i64, i64* %RDX.i186
  %13056 = load i64, i64* %PC.i184
  %13057 = add i64 %13056, 3
  store i64 %13057, i64* %PC.i184
  %13058 = add i64 %13055, %13054
  store i64 %13058, i64* %RCX.i185, align 8
  %13059 = icmp ult i64 %13058, %13054
  %13060 = icmp ult i64 %13058, %13055
  %13061 = or i1 %13059, %13060
  %13062 = zext i1 %13061 to i8
  %13063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13062, i8* %13063, align 1
  %13064 = trunc i64 %13058 to i32
  %13065 = and i32 %13064, 255
  %13066 = call i32 @llvm.ctpop.i32(i32 %13065)
  %13067 = trunc i32 %13066 to i8
  %13068 = and i8 %13067, 1
  %13069 = xor i8 %13068, 1
  %13070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13069, i8* %13070, align 1
  %13071 = xor i64 %13055, %13054
  %13072 = xor i64 %13071, %13058
  %13073 = lshr i64 %13072, 4
  %13074 = trunc i64 %13073 to i8
  %13075 = and i8 %13074, 1
  %13076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13075, i8* %13076, align 1
  %13077 = icmp eq i64 %13058, 0
  %13078 = zext i1 %13077 to i8
  %13079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13078, i8* %13079, align 1
  %13080 = lshr i64 %13058, 63
  %13081 = trunc i64 %13080 to i8
  %13082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13081, i8* %13082, align 1
  %13083 = lshr i64 %13054, 63
  %13084 = lshr i64 %13055, 63
  %13085 = xor i64 %13080, %13083
  %13086 = xor i64 %13080, %13084
  %13087 = add i64 %13085, %13086
  %13088 = icmp eq i64 %13087, 2
  %13089 = zext i1 %13088 to i8
  %13090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13089, i8* %13090, align 1
  store %struct.Memory* %loadMem_489974, %struct.Memory** %MEMORY
  %loadMem_489977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13092 = getelementptr inbounds %struct.GPR, %struct.GPR* %13091, i32 0, i32 33
  %13093 = getelementptr inbounds %struct.Reg, %struct.Reg* %13092, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %13093 to i64*
  %13094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13095 = getelementptr inbounds %struct.GPR, %struct.GPR* %13094, i32 0, i32 7
  %13096 = getelementptr inbounds %struct.Reg, %struct.Reg* %13095, i32 0, i32 0
  %RDX.i182 = bitcast %union.anon* %13096 to i64*
  %13097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13098 = getelementptr inbounds %struct.GPR, %struct.GPR* %13097, i32 0, i32 15
  %13099 = getelementptr inbounds %struct.Reg, %struct.Reg* %13098, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %13099 to i64*
  %13100 = load i64, i64* %RBP.i183
  %13101 = sub i64 %13100, 36
  %13102 = load i64, i64* %PC.i181
  %13103 = add i64 %13102, 4
  store i64 %13103, i64* %PC.i181
  %13104 = inttoptr i64 %13101 to i32*
  %13105 = load i32, i32* %13104
  %13106 = sext i32 %13105 to i64
  store i64 %13106, i64* %RDX.i182, align 8
  store %struct.Memory* %loadMem_489977, %struct.Memory** %MEMORY
  %loadMem_48997b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13108 = getelementptr inbounds %struct.GPR, %struct.GPR* %13107, i32 0, i32 33
  %13109 = getelementptr inbounds %struct.Reg, %struct.Reg* %13108, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %13109 to i64*
  %13110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13111 = getelementptr inbounds %struct.GPR, %struct.GPR* %13110, i32 0, i32 7
  %13112 = getelementptr inbounds %struct.Reg, %struct.Reg* %13111, i32 0, i32 0
  %RDX.i180 = bitcast %union.anon* %13112 to i64*
  %13113 = load i64, i64* %RDX.i180
  %13114 = load i64, i64* %PC.i179
  %13115 = add i64 %13114, 4
  store i64 %13115, i64* %PC.i179
  %13116 = shl i64 %13113, 4
  %13117 = icmp slt i64 %13116, 0
  %13118 = shl i64 %13116, 1
  store i64 %13118, i64* %RDX.i180, align 8
  %13119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13120 = zext i1 %13117 to i8
  store i8 %13120, i8* %13119, align 1
  %13121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13122 = trunc i64 %13118 to i32
  %13123 = and i32 %13122, 254
  %13124 = call i32 @llvm.ctpop.i32(i32 %13123)
  %13125 = trunc i32 %13124 to i8
  %13126 = and i8 %13125, 1
  %13127 = xor i8 %13126, 1
  store i8 %13127, i8* %13121, align 1
  %13128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13128, align 1
  %13129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13130 = icmp eq i64 %13118, 0
  %13131 = zext i1 %13130 to i8
  store i8 %13131, i8* %13129, align 1
  %13132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13133 = lshr i64 %13118, 63
  %13134 = trunc i64 %13133 to i8
  store i8 %13134, i8* %13132, align 1
  %13135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13135, align 1
  store %struct.Memory* %loadMem_48997b, %struct.Memory** %MEMORY
  %loadMem_48997f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13137 = getelementptr inbounds %struct.GPR, %struct.GPR* %13136, i32 0, i32 33
  %13138 = getelementptr inbounds %struct.Reg, %struct.Reg* %13137, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %13138 to i64*
  %13139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13140 = getelementptr inbounds %struct.GPR, %struct.GPR* %13139, i32 0, i32 5
  %13141 = getelementptr inbounds %struct.Reg, %struct.Reg* %13140, i32 0, i32 0
  %RCX.i177 = bitcast %union.anon* %13141 to i64*
  %13142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13143 = getelementptr inbounds %struct.GPR, %struct.GPR* %13142, i32 0, i32 7
  %13144 = getelementptr inbounds %struct.Reg, %struct.Reg* %13143, i32 0, i32 0
  %RDX.i178 = bitcast %union.anon* %13144 to i64*
  %13145 = load i64, i64* %RCX.i177
  %13146 = load i64, i64* %RDX.i178
  %13147 = load i64, i64* %PC.i176
  %13148 = add i64 %13147, 3
  store i64 %13148, i64* %PC.i176
  %13149 = add i64 %13146, %13145
  store i64 %13149, i64* %RCX.i177, align 8
  %13150 = icmp ult i64 %13149, %13145
  %13151 = icmp ult i64 %13149, %13146
  %13152 = or i1 %13150, %13151
  %13153 = zext i1 %13152 to i8
  %13154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13153, i8* %13154, align 1
  %13155 = trunc i64 %13149 to i32
  %13156 = and i32 %13155, 255
  %13157 = call i32 @llvm.ctpop.i32(i32 %13156)
  %13158 = trunc i32 %13157 to i8
  %13159 = and i8 %13158, 1
  %13160 = xor i8 %13159, 1
  %13161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13160, i8* %13161, align 1
  %13162 = xor i64 %13146, %13145
  %13163 = xor i64 %13162, %13149
  %13164 = lshr i64 %13163, 4
  %13165 = trunc i64 %13164 to i8
  %13166 = and i8 %13165, 1
  %13167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13166, i8* %13167, align 1
  %13168 = icmp eq i64 %13149, 0
  %13169 = zext i1 %13168 to i8
  %13170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13169, i8* %13170, align 1
  %13171 = lshr i64 %13149, 63
  %13172 = trunc i64 %13171 to i8
  %13173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13172, i8* %13173, align 1
  %13174 = lshr i64 %13145, 63
  %13175 = lshr i64 %13146, 63
  %13176 = xor i64 %13171, %13174
  %13177 = xor i64 %13171, %13175
  %13178 = add i64 %13176, %13177
  %13179 = icmp eq i64 %13178, 2
  %13180 = zext i1 %13179 to i8
  %13181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13180, i8* %13181, align 1
  store %struct.Memory* %loadMem_48997f, %struct.Memory** %MEMORY
  %loadMem_489982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13183 = getelementptr inbounds %struct.GPR, %struct.GPR* %13182, i32 0, i32 33
  %13184 = getelementptr inbounds %struct.Reg, %struct.Reg* %13183, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %13184 to i64*
  %13185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13186 = getelementptr inbounds %struct.GPR, %struct.GPR* %13185, i32 0, i32 7
  %13187 = getelementptr inbounds %struct.Reg, %struct.Reg* %13186, i32 0, i32 0
  %RDX.i174 = bitcast %union.anon* %13187 to i64*
  %13188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13189 = getelementptr inbounds %struct.GPR, %struct.GPR* %13188, i32 0, i32 15
  %13190 = getelementptr inbounds %struct.Reg, %struct.Reg* %13189, i32 0, i32 0
  %RBP.i175 = bitcast %union.anon* %13190 to i64*
  %13191 = load i64, i64* %RBP.i175
  %13192 = sub i64 %13191, 40
  %13193 = load i64, i64* %PC.i173
  %13194 = add i64 %13193, 4
  store i64 %13194, i64* %PC.i173
  %13195 = inttoptr i64 %13192 to i32*
  %13196 = load i32, i32* %13195
  %13197 = sext i32 %13196 to i64
  store i64 %13197, i64* %RDX.i174, align 8
  store %struct.Memory* %loadMem_489982, %struct.Memory** %MEMORY
  %loadMem_489986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13199 = getelementptr inbounds %struct.GPR, %struct.GPR* %13198, i32 0, i32 33
  %13200 = getelementptr inbounds %struct.Reg, %struct.Reg* %13199, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %13200 to i64*
  %13201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13202 = getelementptr inbounds %struct.GPR, %struct.GPR* %13201, i32 0, i32 5
  %13203 = getelementptr inbounds %struct.Reg, %struct.Reg* %13202, i32 0, i32 0
  %RCX.i170 = bitcast %union.anon* %13203 to i64*
  %13204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13205 = getelementptr inbounds %struct.GPR, %struct.GPR* %13204, i32 0, i32 7
  %13206 = getelementptr inbounds %struct.Reg, %struct.Reg* %13205, i32 0, i32 0
  %RDX.i171 = bitcast %union.anon* %13206 to i64*
  %13207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13208 = getelementptr inbounds %struct.GPR, %struct.GPR* %13207, i32 0, i32 9
  %13209 = getelementptr inbounds %struct.Reg, %struct.Reg* %13208, i32 0, i32 0
  %RSI.i172 = bitcast %union.anon* %13209 to i64*
  %13210 = load i64, i64* %RCX.i170
  %13211 = load i64, i64* %RDX.i171
  %13212 = mul i64 %13211, 2
  %13213 = add i64 %13212, %13210
  %13214 = load i64, i64* %PC.i169
  %13215 = add i64 %13214, 4
  store i64 %13215, i64* %PC.i169
  %13216 = inttoptr i64 %13213 to i16*
  %13217 = load i16, i16* %13216
  %13218 = zext i16 %13217 to i64
  store i64 %13218, i64* %RSI.i172, align 8
  store %struct.Memory* %loadMem_489986, %struct.Memory** %MEMORY
  %loadMem_48998a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13220 = getelementptr inbounds %struct.GPR, %struct.GPR* %13219, i32 0, i32 33
  %13221 = getelementptr inbounds %struct.Reg, %struct.Reg* %13220, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %13221 to i64*
  %13222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13223 = getelementptr inbounds %struct.GPR, %struct.GPR* %13222, i32 0, i32 9
  %13224 = getelementptr inbounds %struct.Reg, %struct.Reg* %13223, i32 0, i32 0
  %ESI.i167 = bitcast %union.anon* %13224 to i32*
  %13225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13226 = getelementptr inbounds %struct.GPR, %struct.GPR* %13225, i32 0, i32 1
  %13227 = getelementptr inbounds %struct.Reg, %struct.Reg* %13226, i32 0, i32 0
  %RAX.i168 = bitcast %union.anon* %13227 to i64*
  %13228 = load i64, i64* %RAX.i168
  %13229 = load i32, i32* %ESI.i167
  %13230 = zext i32 %13229 to i64
  %13231 = load i64, i64* %PC.i166
  %13232 = add i64 %13231, 2
  store i64 %13232, i64* %PC.i166
  %13233 = trunc i64 %13228 to i32
  %13234 = add i32 %13229, %13233
  %13235 = zext i32 %13234 to i64
  store i64 %13235, i64* %RAX.i168, align 8
  %13236 = icmp ult i32 %13234, %13233
  %13237 = icmp ult i32 %13234, %13229
  %13238 = or i1 %13236, %13237
  %13239 = zext i1 %13238 to i8
  %13240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13239, i8* %13240, align 1
  %13241 = and i32 %13234, 255
  %13242 = call i32 @llvm.ctpop.i32(i32 %13241)
  %13243 = trunc i32 %13242 to i8
  %13244 = and i8 %13243, 1
  %13245 = xor i8 %13244, 1
  %13246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13245, i8* %13246, align 1
  %13247 = xor i64 %13230, %13228
  %13248 = trunc i64 %13247 to i32
  %13249 = xor i32 %13248, %13234
  %13250 = lshr i32 %13249, 4
  %13251 = trunc i32 %13250 to i8
  %13252 = and i8 %13251, 1
  %13253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13252, i8* %13253, align 1
  %13254 = icmp eq i32 %13234, 0
  %13255 = zext i1 %13254 to i8
  %13256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13255, i8* %13256, align 1
  %13257 = lshr i32 %13234, 31
  %13258 = trunc i32 %13257 to i8
  %13259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13258, i8* %13259, align 1
  %13260 = lshr i32 %13233, 31
  %13261 = lshr i32 %13229, 31
  %13262 = xor i32 %13257, %13260
  %13263 = xor i32 %13257, %13261
  %13264 = add i32 %13262, %13263
  %13265 = icmp eq i32 %13264, 2
  %13266 = zext i1 %13265 to i8
  %13267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13266, i8* %13267, align 1
  store %struct.Memory* %loadMem_48998a, %struct.Memory** %MEMORY
  %loadMem_48998c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13269 = getelementptr inbounds %struct.GPR, %struct.GPR* %13268, i32 0, i32 33
  %13270 = getelementptr inbounds %struct.Reg, %struct.Reg* %13269, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %13270 to i64*
  %13271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13272 = getelementptr inbounds %struct.GPR, %struct.GPR* %13271, i32 0, i32 1
  %13273 = getelementptr inbounds %struct.Reg, %struct.Reg* %13272, i32 0, i32 0
  %EAX.i164 = bitcast %union.anon* %13273 to i32*
  %13274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13275 = getelementptr inbounds %struct.GPR, %struct.GPR* %13274, i32 0, i32 15
  %13276 = getelementptr inbounds %struct.Reg, %struct.Reg* %13275, i32 0, i32 0
  %RBP.i165 = bitcast %union.anon* %13276 to i64*
  %13277 = load i64, i64* %RBP.i165
  %13278 = sub i64 %13277, 120
  %13279 = load i32, i32* %EAX.i164
  %13280 = zext i32 %13279 to i64
  %13281 = load i64, i64* %PC.i163
  %13282 = add i64 %13281, 3
  store i64 %13282, i64* %PC.i163
  %13283 = inttoptr i64 %13278 to i32*
  store i32 %13279, i32* %13283
  store %struct.Memory* %loadMem_48998c, %struct.Memory** %MEMORY
  br label %block_.L_48998f

block_.L_48998f:                                  ; preds = %block_.L_489953, %block_489949
  %loadMem_48998f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13285 = getelementptr inbounds %struct.GPR, %struct.GPR* %13284, i32 0, i32 33
  %13286 = getelementptr inbounds %struct.Reg, %struct.Reg* %13285, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %13286 to i64*
  %13287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13288 = getelementptr inbounds %struct.GPR, %struct.GPR* %13287, i32 0, i32 1
  %13289 = getelementptr inbounds %struct.Reg, %struct.Reg* %13288, i32 0, i32 0
  %RAX.i161 = bitcast %union.anon* %13289 to i64*
  %13290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13291 = getelementptr inbounds %struct.GPR, %struct.GPR* %13290, i32 0, i32 15
  %13292 = getelementptr inbounds %struct.Reg, %struct.Reg* %13291, i32 0, i32 0
  %RBP.i162 = bitcast %union.anon* %13292 to i64*
  %13293 = load i64, i64* %RBP.i162
  %13294 = sub i64 %13293, 120
  %13295 = load i64, i64* %PC.i160
  %13296 = add i64 %13295, 3
  store i64 %13296, i64* %PC.i160
  %13297 = inttoptr i64 %13294 to i32*
  %13298 = load i32, i32* %13297
  %13299 = zext i32 %13298 to i64
  store i64 %13299, i64* %RAX.i161, align 8
  store %struct.Memory* %loadMem_48998f, %struct.Memory** %MEMORY
  %loadMem_489992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13301 = getelementptr inbounds %struct.GPR, %struct.GPR* %13300, i32 0, i32 33
  %13302 = getelementptr inbounds %struct.Reg, %struct.Reg* %13301, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %13302 to i64*
  %13303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13304 = getelementptr inbounds %struct.GPR, %struct.GPR* %13303, i32 0, i32 5
  %13305 = getelementptr inbounds %struct.Reg, %struct.Reg* %13304, i32 0, i32 0
  %RCX.i158 = bitcast %union.anon* %13305 to i64*
  %13306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13307 = getelementptr inbounds %struct.GPR, %struct.GPR* %13306, i32 0, i32 15
  %13308 = getelementptr inbounds %struct.Reg, %struct.Reg* %13307, i32 0, i32 0
  %RBP.i159 = bitcast %union.anon* %13308 to i64*
  %13309 = load i64, i64* %RBP.i159
  %13310 = sub i64 %13309, 116
  %13311 = load i64, i64* %PC.i157
  %13312 = add i64 %13311, 3
  store i64 %13312, i64* %PC.i157
  %13313 = inttoptr i64 %13310 to i32*
  %13314 = load i32, i32* %13313
  %13315 = zext i32 %13314 to i64
  store i64 %13315, i64* %RCX.i158, align 8
  store %struct.Memory* %loadMem_489992, %struct.Memory** %MEMORY
  %loadMem_489995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13317 = getelementptr inbounds %struct.GPR, %struct.GPR* %13316, i32 0, i32 33
  %13318 = getelementptr inbounds %struct.Reg, %struct.Reg* %13317, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %13318 to i64*
  %13319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13320 = getelementptr inbounds %struct.GPR, %struct.GPR* %13319, i32 0, i32 1
  %13321 = getelementptr inbounds %struct.Reg, %struct.Reg* %13320, i32 0, i32 0
  %EAX.i155 = bitcast %union.anon* %13321 to i32*
  %13322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13323 = getelementptr inbounds %struct.GPR, %struct.GPR* %13322, i32 0, i32 5
  %13324 = getelementptr inbounds %struct.Reg, %struct.Reg* %13323, i32 0, i32 0
  %ECX.i156 = bitcast %union.anon* %13324 to i32*
  %13325 = load i32, i32* %ECX.i156
  %13326 = zext i32 %13325 to i64
  %13327 = load i32, i32* %EAX.i155
  %13328 = zext i32 %13327 to i64
  %13329 = load i64, i64* %PC.i154
  %13330 = add i64 %13329, 2
  store i64 %13330, i64* %PC.i154
  %13331 = sub i32 %13325, %13327
  %13332 = icmp ult i32 %13325, %13327
  %13333 = zext i1 %13332 to i8
  %13334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13333, i8* %13334, align 1
  %13335 = and i32 %13331, 255
  %13336 = call i32 @llvm.ctpop.i32(i32 %13335)
  %13337 = trunc i32 %13336 to i8
  %13338 = and i8 %13337, 1
  %13339 = xor i8 %13338, 1
  %13340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13339, i8* %13340, align 1
  %13341 = xor i64 %13328, %13326
  %13342 = trunc i64 %13341 to i32
  %13343 = xor i32 %13342, %13331
  %13344 = lshr i32 %13343, 4
  %13345 = trunc i32 %13344 to i8
  %13346 = and i8 %13345, 1
  %13347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13346, i8* %13347, align 1
  %13348 = icmp eq i32 %13331, 0
  %13349 = zext i1 %13348 to i8
  %13350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13349, i8* %13350, align 1
  %13351 = lshr i32 %13331, 31
  %13352 = trunc i32 %13351 to i8
  %13353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13352, i8* %13353, align 1
  %13354 = lshr i32 %13325, 31
  %13355 = lshr i32 %13327, 31
  %13356 = xor i32 %13355, %13354
  %13357 = xor i32 %13351, %13354
  %13358 = add i32 %13357, %13356
  %13359 = icmp eq i32 %13358, 2
  %13360 = zext i1 %13359 to i8
  %13361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13360, i8* %13361, align 1
  store %struct.Memory* %loadMem_489995, %struct.Memory** %MEMORY
  %loadMem_489997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13363 = getelementptr inbounds %struct.GPR, %struct.GPR* %13362, i32 0, i32 33
  %13364 = getelementptr inbounds %struct.Reg, %struct.Reg* %13363, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %13364 to i64*
  %13365 = load i64, i64* %PC.i153
  %13366 = add i64 %13365, 28
  %13367 = load i64, i64* %PC.i153
  %13368 = add i64 %13367, 6
  %13369 = load i64, i64* %PC.i153
  %13370 = add i64 %13369, 6
  store i64 %13370, i64* %PC.i153
  %13371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13372 = load i8, i8* %13371, align 1
  %13373 = icmp ne i8 %13372, 0
  %13374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13375 = load i8, i8* %13374, align 1
  %13376 = icmp ne i8 %13375, 0
  %13377 = xor i1 %13373, %13376
  %13378 = xor i1 %13377, true
  %13379 = zext i1 %13378 to i8
  store i8 %13379, i8* %BRANCH_TAKEN, align 1
  %13380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13381 = select i1 %13377, i64 %13368, i64 %13366
  store i64 %13381, i64* %13380, align 8
  store %struct.Memory* %loadMem_489997, %struct.Memory** %MEMORY
  %loadBr_489997 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_489997 = icmp eq i8 %loadBr_489997, 1
  br i1 %cmpBr_489997, label %block_.L_4899b3, label %block_48999d

block_48999d:                                     ; preds = %block_.L_48998f
  %loadMem_48999d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13383 = getelementptr inbounds %struct.GPR, %struct.GPR* %13382, i32 0, i32 33
  %13384 = getelementptr inbounds %struct.Reg, %struct.Reg* %13383, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %13384 to i64*
  %13385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13386 = getelementptr inbounds %struct.GPR, %struct.GPR* %13385, i32 0, i32 1
  %13387 = getelementptr inbounds %struct.Reg, %struct.Reg* %13386, i32 0, i32 0
  %RAX.i152 = bitcast %union.anon* %13387 to i64*
  %13388 = load i64, i64* %PC.i151
  %13389 = add i64 %13388, 8
  store i64 %13389, i64* %PC.i151
  %13390 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13390, i64* %RAX.i152, align 8
  store %struct.Memory* %loadMem_48999d, %struct.Memory** %MEMORY
  %loadMem_4899a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13392 = getelementptr inbounds %struct.GPR, %struct.GPR* %13391, i32 0, i32 33
  %13393 = getelementptr inbounds %struct.Reg, %struct.Reg* %13392, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %13393 to i64*
  %13394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13395 = getelementptr inbounds %struct.GPR, %struct.GPR* %13394, i32 0, i32 1
  %13396 = getelementptr inbounds %struct.Reg, %struct.Reg* %13395, i32 0, i32 0
  %RAX.i149 = bitcast %union.anon* %13396 to i64*
  %13397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13398 = getelementptr inbounds %struct.GPR, %struct.GPR* %13397, i32 0, i32 5
  %13399 = getelementptr inbounds %struct.Reg, %struct.Reg* %13398, i32 0, i32 0
  %RCX.i150 = bitcast %union.anon* %13399 to i64*
  %13400 = load i64, i64* %RAX.i149
  %13401 = add i64 %13400, 72688
  %13402 = load i64, i64* %PC.i148
  %13403 = add i64 %13402, 6
  store i64 %13403, i64* %PC.i148
  %13404 = inttoptr i64 %13401 to i32*
  %13405 = load i32, i32* %13404
  %13406 = zext i32 %13405 to i64
  store i64 %13406, i64* %RCX.i150, align 8
  store %struct.Memory* %loadMem_4899a5, %struct.Memory** %MEMORY
  %loadMem_4899ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %13407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13408 = getelementptr inbounds %struct.GPR, %struct.GPR* %13407, i32 0, i32 33
  %13409 = getelementptr inbounds %struct.Reg, %struct.Reg* %13408, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %13409 to i64*
  %13410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13411 = getelementptr inbounds %struct.GPR, %struct.GPR* %13410, i32 0, i32 5
  %13412 = getelementptr inbounds %struct.Reg, %struct.Reg* %13411, i32 0, i32 0
  %ECX.i146 = bitcast %union.anon* %13412 to i32*
  %13413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13414 = getelementptr inbounds %struct.GPR, %struct.GPR* %13413, i32 0, i32 15
  %13415 = getelementptr inbounds %struct.Reg, %struct.Reg* %13414, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %13415 to i64*
  %13416 = load i64, i64* %RBP.i147
  %13417 = sub i64 %13416, 124
  %13418 = load i32, i32* %ECX.i146
  %13419 = zext i32 %13418 to i64
  %13420 = load i64, i64* %PC.i145
  %13421 = add i64 %13420, 3
  store i64 %13421, i64* %PC.i145
  %13422 = inttoptr i64 %13417 to i32*
  store i32 %13418, i32* %13422
  store %struct.Memory* %loadMem_4899ab, %struct.Memory** %MEMORY
  %loadMem_4899ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %13423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13424 = getelementptr inbounds %struct.GPR, %struct.GPR* %13423, i32 0, i32 33
  %13425 = getelementptr inbounds %struct.Reg, %struct.Reg* %13424, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %13425 to i64*
  %13426 = load i64, i64* %PC.i144
  %13427 = add i64 %13426, 148
  %13428 = load i64, i64* %PC.i144
  %13429 = add i64 %13428, 5
  store i64 %13429, i64* %PC.i144
  %13430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13427, i64* %13430, align 8
  store %struct.Memory* %loadMem_4899ae, %struct.Memory** %MEMORY
  br label %block_.L_489a42

block_.L_4899b3:                                  ; preds = %block_.L_48998f
  %loadMem_4899b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13432 = getelementptr inbounds %struct.GPR, %struct.GPR* %13431, i32 0, i32 33
  %13433 = getelementptr inbounds %struct.Reg, %struct.Reg* %13432, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %13433 to i64*
  %13434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13435 = getelementptr inbounds %struct.GPR, %struct.GPR* %13434, i32 0, i32 1
  %13436 = getelementptr inbounds %struct.Reg, %struct.Reg* %13435, i32 0, i32 0
  %EAX.i142 = bitcast %union.anon* %13436 to i32*
  %13437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13438 = getelementptr inbounds %struct.GPR, %struct.GPR* %13437, i32 0, i32 1
  %13439 = getelementptr inbounds %struct.Reg, %struct.Reg* %13438, i32 0, i32 0
  %RAX.i143 = bitcast %union.anon* %13439 to i64*
  %13440 = load i64, i64* %RAX.i143
  %13441 = load i32, i32* %EAX.i142
  %13442 = zext i32 %13441 to i64
  %13443 = load i64, i64* %PC.i141
  %13444 = add i64 %13443, 2
  store i64 %13444, i64* %PC.i141
  %13445 = xor i64 %13442, %13440
  %13446 = trunc i64 %13445 to i32
  %13447 = and i64 %13445, 4294967295
  store i64 %13447, i64* %RAX.i143, align 8
  %13448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13448, align 1
  %13449 = and i32 %13446, 255
  %13450 = call i32 @llvm.ctpop.i32(i32 %13449)
  %13451 = trunc i32 %13450 to i8
  %13452 = and i8 %13451, 1
  %13453 = xor i8 %13452, 1
  %13454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13453, i8* %13454, align 1
  %13455 = icmp eq i32 %13446, 0
  %13456 = zext i1 %13455 to i8
  %13457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13456, i8* %13457, align 1
  %13458 = lshr i32 %13446, 31
  %13459 = trunc i32 %13458 to i8
  %13460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13459, i8* %13460, align 1
  %13461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13461, align 1
  %13462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13462, align 1
  store %struct.Memory* %loadMem_4899b3, %struct.Memory** %MEMORY
  %loadMem_4899b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13464 = getelementptr inbounds %struct.GPR, %struct.GPR* %13463, i32 0, i32 33
  %13465 = getelementptr inbounds %struct.Reg, %struct.Reg* %13464, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %13465 to i64*
  %13466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13467 = getelementptr inbounds %struct.GPR, %struct.GPR* %13466, i32 0, i32 5
  %13468 = getelementptr inbounds %struct.Reg, %struct.Reg* %13467, i32 0, i32 0
  %RCX.i139 = bitcast %union.anon* %13468 to i64*
  %13469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13470 = getelementptr inbounds %struct.GPR, %struct.GPR* %13469, i32 0, i32 15
  %13471 = getelementptr inbounds %struct.Reg, %struct.Reg* %13470, i32 0, i32 0
  %RBP.i140 = bitcast %union.anon* %13471 to i64*
  %13472 = load i64, i64* %RBP.i140
  %13473 = sub i64 %13472, 20
  %13474 = load i64, i64* %PC.i138
  %13475 = add i64 %13474, 3
  store i64 %13475, i64* %PC.i138
  %13476 = inttoptr i64 %13473 to i32*
  %13477 = load i32, i32* %13476
  %13478 = zext i32 %13477 to i64
  store i64 %13478, i64* %RCX.i139, align 8
  store %struct.Memory* %loadMem_4899b5, %struct.Memory** %MEMORY
  %loadMem_4899b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13480 = getelementptr inbounds %struct.GPR, %struct.GPR* %13479, i32 0, i32 33
  %13481 = getelementptr inbounds %struct.Reg, %struct.Reg* %13480, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %13481 to i64*
  %13482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13483 = getelementptr inbounds %struct.GPR, %struct.GPR* %13482, i32 0, i32 7
  %13484 = getelementptr inbounds %struct.Reg, %struct.Reg* %13483, i32 0, i32 0
  %RDX.i137 = bitcast %union.anon* %13484 to i64*
  %13485 = load i64, i64* %PC.i136
  %13486 = add i64 %13485, 8
  store i64 %13486, i64* %PC.i136
  %13487 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13487, i64* %RDX.i137, align 8
  store %struct.Memory* %loadMem_4899b8, %struct.Memory** %MEMORY
  %loadMem_4899c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13489 = getelementptr inbounds %struct.GPR, %struct.GPR* %13488, i32 0, i32 33
  %13490 = getelementptr inbounds %struct.Reg, %struct.Reg* %13489, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %13490 to i64*
  %13491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13492 = getelementptr inbounds %struct.GPR, %struct.GPR* %13491, i32 0, i32 7
  %13493 = getelementptr inbounds %struct.Reg, %struct.Reg* %13492, i32 0, i32 0
  %RDX.i135 = bitcast %union.anon* %13493 to i64*
  %13494 = load i64, i64* %RDX.i135
  %13495 = load i64, i64* %PC.i134
  %13496 = add i64 %13495, 7
  store i64 %13496, i64* %PC.i134
  %13497 = add i64 8504, %13494
  store i64 %13497, i64* %RDX.i135, align 8
  %13498 = icmp ult i64 %13497, %13494
  %13499 = icmp ult i64 %13497, 8504
  %13500 = or i1 %13498, %13499
  %13501 = zext i1 %13500 to i8
  %13502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13501, i8* %13502, align 1
  %13503 = trunc i64 %13497 to i32
  %13504 = and i32 %13503, 255
  %13505 = call i32 @llvm.ctpop.i32(i32 %13504)
  %13506 = trunc i32 %13505 to i8
  %13507 = and i8 %13506, 1
  %13508 = xor i8 %13507, 1
  %13509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13508, i8* %13509, align 1
  %13510 = xor i64 8504, %13494
  %13511 = xor i64 %13510, %13497
  %13512 = lshr i64 %13511, 4
  %13513 = trunc i64 %13512 to i8
  %13514 = and i8 %13513, 1
  %13515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13514, i8* %13515, align 1
  %13516 = icmp eq i64 %13497, 0
  %13517 = zext i1 %13516 to i8
  %13518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13517, i8* %13518, align 1
  %13519 = lshr i64 %13497, 63
  %13520 = trunc i64 %13519 to i8
  %13521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13520, i8* %13521, align 1
  %13522 = lshr i64 %13494, 63
  %13523 = xor i64 %13519, %13522
  %13524 = add i64 %13523, %13519
  %13525 = icmp eq i64 %13524, 2
  %13526 = zext i1 %13525 to i8
  %13527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13526, i8* %13527, align 1
  store %struct.Memory* %loadMem_4899c0, %struct.Memory** %MEMORY
  %loadMem_4899c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13529 = getelementptr inbounds %struct.GPR, %struct.GPR* %13528, i32 0, i32 33
  %13530 = getelementptr inbounds %struct.Reg, %struct.Reg* %13529, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %13530 to i64*
  %13531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13532 = getelementptr inbounds %struct.GPR, %struct.GPR* %13531, i32 0, i32 7
  %13533 = getelementptr inbounds %struct.Reg, %struct.Reg* %13532, i32 0, i32 0
  %RDX.i133 = bitcast %union.anon* %13533 to i64*
  %13534 = load i64, i64* %RDX.i133
  %13535 = load i64, i64* %PC.i132
  %13536 = add i64 %13535, 7
  store i64 %13536, i64* %PC.i132
  %13537 = add i64 2048, %13534
  store i64 %13537, i64* %RDX.i133, align 8
  %13538 = icmp ult i64 %13537, %13534
  %13539 = icmp ult i64 %13537, 2048
  %13540 = or i1 %13538, %13539
  %13541 = zext i1 %13540 to i8
  %13542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13541, i8* %13542, align 1
  %13543 = trunc i64 %13537 to i32
  %13544 = and i32 %13543, 255
  %13545 = call i32 @llvm.ctpop.i32(i32 %13544)
  %13546 = trunc i32 %13545 to i8
  %13547 = and i8 %13546, 1
  %13548 = xor i8 %13547, 1
  %13549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13548, i8* %13549, align 1
  %13550 = xor i64 2048, %13534
  %13551 = xor i64 %13550, %13537
  %13552 = lshr i64 %13551, 4
  %13553 = trunc i64 %13552 to i8
  %13554 = and i8 %13553, 1
  %13555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13554, i8* %13555, align 1
  %13556 = icmp eq i64 %13537, 0
  %13557 = zext i1 %13556 to i8
  %13558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13557, i8* %13558, align 1
  %13559 = lshr i64 %13537, 63
  %13560 = trunc i64 %13559 to i8
  %13561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13560, i8* %13561, align 1
  %13562 = lshr i64 %13534, 63
  %13563 = xor i64 %13559, %13562
  %13564 = add i64 %13563, %13559
  %13565 = icmp eq i64 %13564, 2
  %13566 = zext i1 %13565 to i8
  %13567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13566, i8* %13567, align 1
  store %struct.Memory* %loadMem_4899c7, %struct.Memory** %MEMORY
  %loadMem_4899ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %13568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13569 = getelementptr inbounds %struct.GPR, %struct.GPR* %13568, i32 0, i32 33
  %13570 = getelementptr inbounds %struct.Reg, %struct.Reg* %13569, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %13570 to i64*
  %13571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13572 = getelementptr inbounds %struct.GPR, %struct.GPR* %13571, i32 0, i32 9
  %13573 = getelementptr inbounds %struct.Reg, %struct.Reg* %13572, i32 0, i32 0
  %RSI.i130 = bitcast %union.anon* %13573 to i64*
  %13574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13575 = getelementptr inbounds %struct.GPR, %struct.GPR* %13574, i32 0, i32 15
  %13576 = getelementptr inbounds %struct.Reg, %struct.Reg* %13575, i32 0, i32 0
  %RBP.i131 = bitcast %union.anon* %13576 to i64*
  %13577 = load i64, i64* %RBP.i131
  %13578 = sub i64 %13577, 32
  %13579 = load i64, i64* %PC.i129
  %13580 = add i64 %13579, 4
  store i64 %13580, i64* %PC.i129
  %13581 = inttoptr i64 %13578 to i32*
  %13582 = load i32, i32* %13581
  %13583 = sext i32 %13582 to i64
  store i64 %13583, i64* %RSI.i130, align 8
  store %struct.Memory* %loadMem_4899ce, %struct.Memory** %MEMORY
  %loadMem_4899d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13585 = getelementptr inbounds %struct.GPR, %struct.GPR* %13584, i32 0, i32 33
  %13586 = getelementptr inbounds %struct.Reg, %struct.Reg* %13585, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %13586 to i64*
  %13587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13588 = getelementptr inbounds %struct.GPR, %struct.GPR* %13587, i32 0, i32 9
  %13589 = getelementptr inbounds %struct.Reg, %struct.Reg* %13588, i32 0, i32 0
  %RSI.i128 = bitcast %union.anon* %13589 to i64*
  %13590 = load i64, i64* %RSI.i128
  %13591 = load i64, i64* %PC.i127
  %13592 = add i64 %13591, 4
  store i64 %13592, i64* %PC.i127
  %13593 = shl i64 %13590, 8
  %13594 = icmp slt i64 %13593, 0
  %13595 = shl i64 %13593, 1
  store i64 %13595, i64* %RSI.i128, align 8
  %13596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13597 = zext i1 %13594 to i8
  store i8 %13597, i8* %13596, align 1
  %13598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13599 = trunc i64 %13595 to i32
  store i8 1, i8* %13598, align 1
  %13600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13600, align 1
  %13601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13602 = icmp eq i64 %13595, 0
  %13603 = zext i1 %13602 to i8
  store i8 %13603, i8* %13601, align 1
  %13604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13605 = lshr i64 %13595, 63
  %13606 = trunc i64 %13605 to i8
  store i8 %13606, i8* %13604, align 1
  %13607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13607, align 1
  store %struct.Memory* %loadMem_4899d2, %struct.Memory** %MEMORY
  %loadMem_4899d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13609 = getelementptr inbounds %struct.GPR, %struct.GPR* %13608, i32 0, i32 33
  %13610 = getelementptr inbounds %struct.Reg, %struct.Reg* %13609, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %13610 to i64*
  %13611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13612 = getelementptr inbounds %struct.GPR, %struct.GPR* %13611, i32 0, i32 7
  %13613 = getelementptr inbounds %struct.Reg, %struct.Reg* %13612, i32 0, i32 0
  %RDX.i125 = bitcast %union.anon* %13613 to i64*
  %13614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13615 = getelementptr inbounds %struct.GPR, %struct.GPR* %13614, i32 0, i32 9
  %13616 = getelementptr inbounds %struct.Reg, %struct.Reg* %13615, i32 0, i32 0
  %RSI.i126 = bitcast %union.anon* %13616 to i64*
  %13617 = load i64, i64* %RDX.i125
  %13618 = load i64, i64* %RSI.i126
  %13619 = load i64, i64* %PC.i124
  %13620 = add i64 %13619, 3
  store i64 %13620, i64* %PC.i124
  %13621 = add i64 %13618, %13617
  store i64 %13621, i64* %RDX.i125, align 8
  %13622 = icmp ult i64 %13621, %13617
  %13623 = icmp ult i64 %13621, %13618
  %13624 = or i1 %13622, %13623
  %13625 = zext i1 %13624 to i8
  %13626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13625, i8* %13626, align 1
  %13627 = trunc i64 %13621 to i32
  %13628 = and i32 %13627, 255
  %13629 = call i32 @llvm.ctpop.i32(i32 %13628)
  %13630 = trunc i32 %13629 to i8
  %13631 = and i8 %13630, 1
  %13632 = xor i8 %13631, 1
  %13633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13632, i8* %13633, align 1
  %13634 = xor i64 %13618, %13617
  %13635 = xor i64 %13634, %13621
  %13636 = lshr i64 %13635, 4
  %13637 = trunc i64 %13636 to i8
  %13638 = and i8 %13637, 1
  %13639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13638, i8* %13639, align 1
  %13640 = icmp eq i64 %13621, 0
  %13641 = zext i1 %13640 to i8
  %13642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13641, i8* %13642, align 1
  %13643 = lshr i64 %13621, 63
  %13644 = trunc i64 %13643 to i8
  %13645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13644, i8* %13645, align 1
  %13646 = lshr i64 %13617, 63
  %13647 = lshr i64 %13618, 63
  %13648 = xor i64 %13643, %13646
  %13649 = xor i64 %13643, %13647
  %13650 = add i64 %13648, %13649
  %13651 = icmp eq i64 %13650, 2
  %13652 = zext i1 %13651 to i8
  %13653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13652, i8* %13653, align 1
  store %struct.Memory* %loadMem_4899d6, %struct.Memory** %MEMORY
  %loadMem_4899d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13655 = getelementptr inbounds %struct.GPR, %struct.GPR* %13654, i32 0, i32 33
  %13656 = getelementptr inbounds %struct.Reg, %struct.Reg* %13655, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %13656 to i64*
  %13657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13658 = getelementptr inbounds %struct.GPR, %struct.GPR* %13657, i32 0, i32 9
  %13659 = getelementptr inbounds %struct.Reg, %struct.Reg* %13658, i32 0, i32 0
  %RSI.i122 = bitcast %union.anon* %13659 to i64*
  %13660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13661 = getelementptr inbounds %struct.GPR, %struct.GPR* %13660, i32 0, i32 15
  %13662 = getelementptr inbounds %struct.Reg, %struct.Reg* %13661, i32 0, i32 0
  %RBP.i123 = bitcast %union.anon* %13662 to i64*
  %13663 = load i64, i64* %RBP.i123
  %13664 = sub i64 %13663, 36
  %13665 = load i64, i64* %PC.i121
  %13666 = add i64 %13665, 4
  store i64 %13666, i64* %PC.i121
  %13667 = inttoptr i64 %13664 to i32*
  %13668 = load i32, i32* %13667
  %13669 = sext i32 %13668 to i64
  store i64 %13669, i64* %RSI.i122, align 8
  store %struct.Memory* %loadMem_4899d9, %struct.Memory** %MEMORY
  %loadMem_4899dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13671 = getelementptr inbounds %struct.GPR, %struct.GPR* %13670, i32 0, i32 33
  %13672 = getelementptr inbounds %struct.Reg, %struct.Reg* %13671, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %13672 to i64*
  %13673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13674 = getelementptr inbounds %struct.GPR, %struct.GPR* %13673, i32 0, i32 9
  %13675 = getelementptr inbounds %struct.Reg, %struct.Reg* %13674, i32 0, i32 0
  %RSI.i120 = bitcast %union.anon* %13675 to i64*
  %13676 = load i64, i64* %RSI.i120
  %13677 = load i64, i64* %PC.i119
  %13678 = add i64 %13677, 4
  store i64 %13678, i64* %PC.i119
  %13679 = shl i64 %13676, 4
  %13680 = icmp slt i64 %13679, 0
  %13681 = shl i64 %13679, 1
  store i64 %13681, i64* %RSI.i120, align 8
  %13682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13683 = zext i1 %13680 to i8
  store i8 %13683, i8* %13682, align 1
  %13684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13685 = trunc i64 %13681 to i32
  %13686 = and i32 %13685, 254
  %13687 = call i32 @llvm.ctpop.i32(i32 %13686)
  %13688 = trunc i32 %13687 to i8
  %13689 = and i8 %13688, 1
  %13690 = xor i8 %13689, 1
  store i8 %13690, i8* %13684, align 1
  %13691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13691, align 1
  %13692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13693 = icmp eq i64 %13681, 0
  %13694 = zext i1 %13693 to i8
  store i8 %13694, i8* %13692, align 1
  %13695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13696 = lshr i64 %13681, 63
  %13697 = trunc i64 %13696 to i8
  store i8 %13697, i8* %13695, align 1
  %13698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13698, align 1
  store %struct.Memory* %loadMem_4899dd, %struct.Memory** %MEMORY
  %loadMem_4899e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13700 = getelementptr inbounds %struct.GPR, %struct.GPR* %13699, i32 0, i32 33
  %13701 = getelementptr inbounds %struct.Reg, %struct.Reg* %13700, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %13701 to i64*
  %13702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13703 = getelementptr inbounds %struct.GPR, %struct.GPR* %13702, i32 0, i32 7
  %13704 = getelementptr inbounds %struct.Reg, %struct.Reg* %13703, i32 0, i32 0
  %RDX.i117 = bitcast %union.anon* %13704 to i64*
  %13705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13706 = getelementptr inbounds %struct.GPR, %struct.GPR* %13705, i32 0, i32 9
  %13707 = getelementptr inbounds %struct.Reg, %struct.Reg* %13706, i32 0, i32 0
  %RSI.i118 = bitcast %union.anon* %13707 to i64*
  %13708 = load i64, i64* %RDX.i117
  %13709 = load i64, i64* %RSI.i118
  %13710 = load i64, i64* %PC.i116
  %13711 = add i64 %13710, 3
  store i64 %13711, i64* %PC.i116
  %13712 = add i64 %13709, %13708
  store i64 %13712, i64* %RDX.i117, align 8
  %13713 = icmp ult i64 %13712, %13708
  %13714 = icmp ult i64 %13712, %13709
  %13715 = or i1 %13713, %13714
  %13716 = zext i1 %13715 to i8
  %13717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13716, i8* %13717, align 1
  %13718 = trunc i64 %13712 to i32
  %13719 = and i32 %13718, 255
  %13720 = call i32 @llvm.ctpop.i32(i32 %13719)
  %13721 = trunc i32 %13720 to i8
  %13722 = and i8 %13721, 1
  %13723 = xor i8 %13722, 1
  %13724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13723, i8* %13724, align 1
  %13725 = xor i64 %13709, %13708
  %13726 = xor i64 %13725, %13712
  %13727 = lshr i64 %13726, 4
  %13728 = trunc i64 %13727 to i8
  %13729 = and i8 %13728, 1
  %13730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13729, i8* %13730, align 1
  %13731 = icmp eq i64 %13712, 0
  %13732 = zext i1 %13731 to i8
  %13733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13732, i8* %13733, align 1
  %13734 = lshr i64 %13712, 63
  %13735 = trunc i64 %13734 to i8
  %13736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13735, i8* %13736, align 1
  %13737 = lshr i64 %13708, 63
  %13738 = lshr i64 %13709, 63
  %13739 = xor i64 %13734, %13737
  %13740 = xor i64 %13734, %13738
  %13741 = add i64 %13739, %13740
  %13742 = icmp eq i64 %13741, 2
  %13743 = zext i1 %13742 to i8
  %13744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13743, i8* %13744, align 1
  store %struct.Memory* %loadMem_4899e1, %struct.Memory** %MEMORY
  %loadMem_4899e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13746 = getelementptr inbounds %struct.GPR, %struct.GPR* %13745, i32 0, i32 33
  %13747 = getelementptr inbounds %struct.Reg, %struct.Reg* %13746, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %13747 to i64*
  %13748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13749 = getelementptr inbounds %struct.GPR, %struct.GPR* %13748, i32 0, i32 9
  %13750 = getelementptr inbounds %struct.Reg, %struct.Reg* %13749, i32 0, i32 0
  %RSI.i114 = bitcast %union.anon* %13750 to i64*
  %13751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13752 = getelementptr inbounds %struct.GPR, %struct.GPR* %13751, i32 0, i32 15
  %13753 = getelementptr inbounds %struct.Reg, %struct.Reg* %13752, i32 0, i32 0
  %RBP.i115 = bitcast %union.anon* %13753 to i64*
  %13754 = load i64, i64* %RBP.i115
  %13755 = sub i64 %13754, 40
  %13756 = load i64, i64* %PC.i113
  %13757 = add i64 %13756, 4
  store i64 %13757, i64* %PC.i113
  %13758 = inttoptr i64 %13755 to i32*
  %13759 = load i32, i32* %13758
  %13760 = sext i32 %13759 to i64
  store i64 %13760, i64* %RSI.i114, align 8
  store %struct.Memory* %loadMem_4899e4, %struct.Memory** %MEMORY
  %loadMem_4899e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13762 = getelementptr inbounds %struct.GPR, %struct.GPR* %13761, i32 0, i32 33
  %13763 = getelementptr inbounds %struct.Reg, %struct.Reg* %13762, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %13763 to i64*
  %13764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13765 = getelementptr inbounds %struct.GPR, %struct.GPR* %13764, i32 0, i32 7
  %13766 = getelementptr inbounds %struct.Reg, %struct.Reg* %13765, i32 0, i32 0
  %RDX.i111 = bitcast %union.anon* %13766 to i64*
  %13767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13768 = getelementptr inbounds %struct.GPR, %struct.GPR* %13767, i32 0, i32 9
  %13769 = getelementptr inbounds %struct.Reg, %struct.Reg* %13768, i32 0, i32 0
  %RSI.i112 = bitcast %union.anon* %13769 to i64*
  %13770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13771 = getelementptr inbounds %struct.GPR, %struct.GPR* %13770, i32 0, i32 11
  %13772 = getelementptr inbounds %struct.Reg, %struct.Reg* %13771, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %13772 to i64*
  %13773 = load i64, i64* %RDX.i111
  %13774 = load i64, i64* %RSI.i112
  %13775 = mul i64 %13774, 2
  %13776 = add i64 %13775, %13773
  %13777 = load i64, i64* %PC.i110
  %13778 = add i64 %13777, 4
  store i64 %13778, i64* %PC.i110
  %13779 = inttoptr i64 %13776 to i16*
  %13780 = load i16, i16* %13779
  %13781 = zext i16 %13780 to i64
  store i64 %13781, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_4899e8, %struct.Memory** %MEMORY
  %loadMem_4899ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %13782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13783 = getelementptr inbounds %struct.GPR, %struct.GPR* %13782, i32 0, i32 33
  %13784 = getelementptr inbounds %struct.Reg, %struct.Reg* %13783, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %13784 to i64*
  %13785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13786 = getelementptr inbounds %struct.GPR, %struct.GPR* %13785, i32 0, i32 11
  %13787 = getelementptr inbounds %struct.Reg, %struct.Reg* %13786, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %13787 to i32*
  %13788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13789 = getelementptr inbounds %struct.GPR, %struct.GPR* %13788, i32 0, i32 5
  %13790 = getelementptr inbounds %struct.Reg, %struct.Reg* %13789, i32 0, i32 0
  %RCX.i109 = bitcast %union.anon* %13790 to i64*
  %13791 = load i64, i64* %RCX.i109
  %13792 = load i32, i32* %EDI.i
  %13793 = zext i32 %13792 to i64
  %13794 = load i64, i64* %PC.i108
  %13795 = add i64 %13794, 2
  store i64 %13795, i64* %PC.i108
  %13796 = trunc i64 %13791 to i32
  %13797 = add i32 %13792, %13796
  %13798 = zext i32 %13797 to i64
  store i64 %13798, i64* %RCX.i109, align 8
  %13799 = icmp ult i32 %13797, %13796
  %13800 = icmp ult i32 %13797, %13792
  %13801 = or i1 %13799, %13800
  %13802 = zext i1 %13801 to i8
  %13803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13802, i8* %13803, align 1
  %13804 = and i32 %13797, 255
  %13805 = call i32 @llvm.ctpop.i32(i32 %13804)
  %13806 = trunc i32 %13805 to i8
  %13807 = and i8 %13806, 1
  %13808 = xor i8 %13807, 1
  %13809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13808, i8* %13809, align 1
  %13810 = xor i64 %13793, %13791
  %13811 = trunc i64 %13810 to i32
  %13812 = xor i32 %13811, %13797
  %13813 = lshr i32 %13812, 4
  %13814 = trunc i32 %13813 to i8
  %13815 = and i8 %13814, 1
  %13816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13815, i8* %13816, align 1
  %13817 = icmp eq i32 %13797, 0
  %13818 = zext i1 %13817 to i8
  %13819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13818, i8* %13819, align 1
  %13820 = lshr i32 %13797, 31
  %13821 = trunc i32 %13820 to i8
  %13822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13821, i8* %13822, align 1
  %13823 = lshr i32 %13796, 31
  %13824 = lshr i32 %13792, 31
  %13825 = xor i32 %13820, %13823
  %13826 = xor i32 %13820, %13824
  %13827 = add i32 %13825, %13826
  %13828 = icmp eq i32 %13827, 2
  %13829 = zext i1 %13828 to i8
  %13830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13829, i8* %13830, align 1
  store %struct.Memory* %loadMem_4899ec, %struct.Memory** %MEMORY
  %loadMem_4899ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %13831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13832 = getelementptr inbounds %struct.GPR, %struct.GPR* %13831, i32 0, i32 33
  %13833 = getelementptr inbounds %struct.Reg, %struct.Reg* %13832, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %13833 to i64*
  %13834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13835 = getelementptr inbounds %struct.GPR, %struct.GPR* %13834, i32 0, i32 1
  %13836 = getelementptr inbounds %struct.Reg, %struct.Reg* %13835, i32 0, i32 0
  %EAX.i107 = bitcast %union.anon* %13836 to i32*
  %13837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13838 = getelementptr inbounds %struct.GPR, %struct.GPR* %13837, i32 0, i32 5
  %13839 = getelementptr inbounds %struct.Reg, %struct.Reg* %13838, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %13839 to i32*
  %13840 = load i32, i32* %EAX.i107
  %13841 = zext i32 %13840 to i64
  %13842 = load i32, i32* %ECX.i
  %13843 = zext i32 %13842 to i64
  %13844 = load i64, i64* %PC.i106
  %13845 = add i64 %13844, 2
  store i64 %13845, i64* %PC.i106
  %13846 = sub i32 %13840, %13842
  %13847 = icmp ult i32 %13840, %13842
  %13848 = zext i1 %13847 to i8
  %13849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13848, i8* %13849, align 1
  %13850 = and i32 %13846, 255
  %13851 = call i32 @llvm.ctpop.i32(i32 %13850)
  %13852 = trunc i32 %13851 to i8
  %13853 = and i8 %13852, 1
  %13854 = xor i8 %13853, 1
  %13855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13854, i8* %13855, align 1
  %13856 = xor i64 %13843, %13841
  %13857 = trunc i64 %13856 to i32
  %13858 = xor i32 %13857, %13846
  %13859 = lshr i32 %13858, 4
  %13860 = trunc i32 %13859 to i8
  %13861 = and i8 %13860, 1
  %13862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13861, i8* %13862, align 1
  %13863 = icmp eq i32 %13846, 0
  %13864 = zext i1 %13863 to i8
  %13865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13864, i8* %13865, align 1
  %13866 = lshr i32 %13846, 31
  %13867 = trunc i32 %13866 to i8
  %13868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13867, i8* %13868, align 1
  %13869 = lshr i32 %13840, 31
  %13870 = lshr i32 %13842, 31
  %13871 = xor i32 %13870, %13869
  %13872 = xor i32 %13866, %13869
  %13873 = add i32 %13872, %13871
  %13874 = icmp eq i32 %13873, 2
  %13875 = zext i1 %13874 to i8
  %13876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13875, i8* %13876, align 1
  store %struct.Memory* %loadMem_4899ee, %struct.Memory** %MEMORY
  %loadMem_4899f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13878 = getelementptr inbounds %struct.GPR, %struct.GPR* %13877, i32 0, i32 33
  %13879 = getelementptr inbounds %struct.Reg, %struct.Reg* %13878, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %13879 to i64*
  %13880 = load i64, i64* %PC.i105
  %13881 = add i64 %13880, 16
  %13882 = load i64, i64* %PC.i105
  %13883 = add i64 %13882, 6
  %13884 = load i64, i64* %PC.i105
  %13885 = add i64 %13884, 6
  store i64 %13885, i64* %PC.i105
  %13886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13887 = load i8, i8* %13886, align 1
  %13888 = icmp ne i8 %13887, 0
  %13889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13890 = load i8, i8* %13889, align 1
  %13891 = icmp ne i8 %13890, 0
  %13892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13893 = load i8, i8* %13892, align 1
  %13894 = icmp ne i8 %13893, 0
  %13895 = xor i1 %13891, %13894
  %13896 = or i1 %13888, %13895
  %13897 = zext i1 %13896 to i8
  store i8 %13897, i8* %BRANCH_TAKEN, align 1
  %13898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13899 = select i1 %13896, i64 %13881, i64 %13883
  store i64 %13899, i64* %13898, align 8
  store %struct.Memory* %loadMem_4899f0, %struct.Memory** %MEMORY
  %loadBr_4899f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4899f0 = icmp eq i8 %loadBr_4899f0, 1
  br i1 %cmpBr_4899f0, label %block_.L_489a00, label %block_4899f6

block_4899f6:                                     ; preds = %block_.L_4899b3
  %loadMem_4899f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13901 = getelementptr inbounds %struct.GPR, %struct.GPR* %13900, i32 0, i32 33
  %13902 = getelementptr inbounds %struct.Reg, %struct.Reg* %13901, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %13902 to i64*
  %13903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13904 = getelementptr inbounds %struct.GPR, %struct.GPR* %13903, i32 0, i32 1
  %13905 = getelementptr inbounds %struct.Reg, %struct.Reg* %13904, i32 0, i32 0
  %EAX.i103 = bitcast %union.anon* %13905 to i32*
  %13906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13907 = getelementptr inbounds %struct.GPR, %struct.GPR* %13906, i32 0, i32 1
  %13908 = getelementptr inbounds %struct.Reg, %struct.Reg* %13907, i32 0, i32 0
  %RAX.i104 = bitcast %union.anon* %13908 to i64*
  %13909 = load i64, i64* %RAX.i104
  %13910 = load i32, i32* %EAX.i103
  %13911 = zext i32 %13910 to i64
  %13912 = load i64, i64* %PC.i102
  %13913 = add i64 %13912, 2
  store i64 %13913, i64* %PC.i102
  %13914 = xor i64 %13911, %13909
  %13915 = trunc i64 %13914 to i32
  %13916 = and i64 %13914, 4294967295
  store i64 %13916, i64* %RAX.i104, align 8
  %13917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13917, align 1
  %13918 = and i32 %13915, 255
  %13919 = call i32 @llvm.ctpop.i32(i32 %13918)
  %13920 = trunc i32 %13919 to i8
  %13921 = and i8 %13920, 1
  %13922 = xor i8 %13921, 1
  %13923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13922, i8* %13923, align 1
  %13924 = icmp eq i32 %13915, 0
  %13925 = zext i1 %13924 to i8
  %13926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13925, i8* %13926, align 1
  %13927 = lshr i32 %13915, 31
  %13928 = trunc i32 %13927 to i8
  %13929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13928, i8* %13929, align 1
  %13930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13930, align 1
  %13931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13931, align 1
  store %struct.Memory* %loadMem_4899f6, %struct.Memory** %MEMORY
  %loadMem_4899f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13933 = getelementptr inbounds %struct.GPR, %struct.GPR* %13932, i32 0, i32 33
  %13934 = getelementptr inbounds %struct.Reg, %struct.Reg* %13933, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %13934 to i64*
  %13935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13936 = getelementptr inbounds %struct.GPR, %struct.GPR* %13935, i32 0, i32 1
  %13937 = getelementptr inbounds %struct.Reg, %struct.Reg* %13936, i32 0, i32 0
  %EAX.i100 = bitcast %union.anon* %13937 to i32*
  %13938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13939 = getelementptr inbounds %struct.GPR, %struct.GPR* %13938, i32 0, i32 15
  %13940 = getelementptr inbounds %struct.Reg, %struct.Reg* %13939, i32 0, i32 0
  %RBP.i101 = bitcast %union.anon* %13940 to i64*
  %13941 = load i64, i64* %RBP.i101
  %13942 = sub i64 %13941, 128
  %13943 = load i32, i32* %EAX.i100
  %13944 = zext i32 %13943 to i64
  %13945 = load i64, i64* %PC.i99
  %13946 = add i64 %13945, 3
  store i64 %13946, i64* %PC.i99
  %13947 = inttoptr i64 %13942 to i32*
  store i32 %13943, i32* %13947
  store %struct.Memory* %loadMem_4899f8, %struct.Memory** %MEMORY
  %loadMem_4899fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13949 = getelementptr inbounds %struct.GPR, %struct.GPR* %13948, i32 0, i32 33
  %13950 = getelementptr inbounds %struct.Reg, %struct.Reg* %13949, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %13950 to i64*
  %13951 = load i64, i64* %PC.i98
  %13952 = add i64 %13951, 65
  %13953 = load i64, i64* %PC.i98
  %13954 = add i64 %13953, 5
  store i64 %13954, i64* %PC.i98
  %13955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13952, i64* %13955, align 8
  store %struct.Memory* %loadMem_4899fb, %struct.Memory** %MEMORY
  br label %block_.L_489a3c

block_.L_489a00:                                  ; preds = %block_.L_4899b3
  %loadMem_489a00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13957 = getelementptr inbounds %struct.GPR, %struct.GPR* %13956, i32 0, i32 33
  %13958 = getelementptr inbounds %struct.Reg, %struct.Reg* %13957, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %13958 to i64*
  %13959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13960 = getelementptr inbounds %struct.GPR, %struct.GPR* %13959, i32 0, i32 1
  %13961 = getelementptr inbounds %struct.Reg, %struct.Reg* %13960, i32 0, i32 0
  %RAX.i96 = bitcast %union.anon* %13961 to i64*
  %13962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13963 = getelementptr inbounds %struct.GPR, %struct.GPR* %13962, i32 0, i32 15
  %13964 = getelementptr inbounds %struct.Reg, %struct.Reg* %13963, i32 0, i32 0
  %RBP.i97 = bitcast %union.anon* %13964 to i64*
  %13965 = load i64, i64* %RBP.i97
  %13966 = sub i64 %13965, 20
  %13967 = load i64, i64* %PC.i95
  %13968 = add i64 %13967, 3
  store i64 %13968, i64* %PC.i95
  %13969 = inttoptr i64 %13966 to i32*
  %13970 = load i32, i32* %13969
  %13971 = zext i32 %13970 to i64
  store i64 %13971, i64* %RAX.i96, align 8
  store %struct.Memory* %loadMem_489a00, %struct.Memory** %MEMORY
  %loadMem_489a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13973 = getelementptr inbounds %struct.GPR, %struct.GPR* %13972, i32 0, i32 33
  %13974 = getelementptr inbounds %struct.Reg, %struct.Reg* %13973, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %13974 to i64*
  %13975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13976 = getelementptr inbounds %struct.GPR, %struct.GPR* %13975, i32 0, i32 5
  %13977 = getelementptr inbounds %struct.Reg, %struct.Reg* %13976, i32 0, i32 0
  %RCX.i94 = bitcast %union.anon* %13977 to i64*
  %13978 = load i64, i64* %PC.i93
  %13979 = add i64 %13978, 8
  store i64 %13979, i64* %PC.i93
  %13980 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13980, i64* %RCX.i94, align 8
  store %struct.Memory* %loadMem_489a03, %struct.Memory** %MEMORY
  %loadMem_489a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13982 = getelementptr inbounds %struct.GPR, %struct.GPR* %13981, i32 0, i32 33
  %13983 = getelementptr inbounds %struct.Reg, %struct.Reg* %13982, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %13983 to i64*
  %13984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13985 = getelementptr inbounds %struct.GPR, %struct.GPR* %13984, i32 0, i32 5
  %13986 = getelementptr inbounds %struct.Reg, %struct.Reg* %13985, i32 0, i32 0
  %RCX.i92 = bitcast %union.anon* %13986 to i64*
  %13987 = load i64, i64* %RCX.i92
  %13988 = load i64, i64* %PC.i91
  %13989 = add i64 %13988, 7
  store i64 %13989, i64* %PC.i91
  %13990 = add i64 8504, %13987
  store i64 %13990, i64* %RCX.i92, align 8
  %13991 = icmp ult i64 %13990, %13987
  %13992 = icmp ult i64 %13990, 8504
  %13993 = or i1 %13991, %13992
  %13994 = zext i1 %13993 to i8
  %13995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13994, i8* %13995, align 1
  %13996 = trunc i64 %13990 to i32
  %13997 = and i32 %13996, 255
  %13998 = call i32 @llvm.ctpop.i32(i32 %13997)
  %13999 = trunc i32 %13998 to i8
  %14000 = and i8 %13999, 1
  %14001 = xor i8 %14000, 1
  %14002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14001, i8* %14002, align 1
  %14003 = xor i64 8504, %13987
  %14004 = xor i64 %14003, %13990
  %14005 = lshr i64 %14004, 4
  %14006 = trunc i64 %14005 to i8
  %14007 = and i8 %14006, 1
  %14008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14007, i8* %14008, align 1
  %14009 = icmp eq i64 %13990, 0
  %14010 = zext i1 %14009 to i8
  %14011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14010, i8* %14011, align 1
  %14012 = lshr i64 %13990, 63
  %14013 = trunc i64 %14012 to i8
  %14014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14013, i8* %14014, align 1
  %14015 = lshr i64 %13987, 63
  %14016 = xor i64 %14012, %14015
  %14017 = add i64 %14016, %14012
  %14018 = icmp eq i64 %14017, 2
  %14019 = zext i1 %14018 to i8
  %14020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14019, i8* %14020, align 1
  store %struct.Memory* %loadMem_489a0b, %struct.Memory** %MEMORY
  %loadMem_489a12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14022 = getelementptr inbounds %struct.GPR, %struct.GPR* %14021, i32 0, i32 33
  %14023 = getelementptr inbounds %struct.Reg, %struct.Reg* %14022, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %14023 to i64*
  %14024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14025 = getelementptr inbounds %struct.GPR, %struct.GPR* %14024, i32 0, i32 5
  %14026 = getelementptr inbounds %struct.Reg, %struct.Reg* %14025, i32 0, i32 0
  %RCX.i90 = bitcast %union.anon* %14026 to i64*
  %14027 = load i64, i64* %RCX.i90
  %14028 = load i64, i64* %PC.i89
  %14029 = add i64 %14028, 7
  store i64 %14029, i64* %PC.i89
  %14030 = add i64 2048, %14027
  store i64 %14030, i64* %RCX.i90, align 8
  %14031 = icmp ult i64 %14030, %14027
  %14032 = icmp ult i64 %14030, 2048
  %14033 = or i1 %14031, %14032
  %14034 = zext i1 %14033 to i8
  %14035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14034, i8* %14035, align 1
  %14036 = trunc i64 %14030 to i32
  %14037 = and i32 %14036, 255
  %14038 = call i32 @llvm.ctpop.i32(i32 %14037)
  %14039 = trunc i32 %14038 to i8
  %14040 = and i8 %14039, 1
  %14041 = xor i8 %14040, 1
  %14042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14041, i8* %14042, align 1
  %14043 = xor i64 2048, %14027
  %14044 = xor i64 %14043, %14030
  %14045 = lshr i64 %14044, 4
  %14046 = trunc i64 %14045 to i8
  %14047 = and i8 %14046, 1
  %14048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14047, i8* %14048, align 1
  %14049 = icmp eq i64 %14030, 0
  %14050 = zext i1 %14049 to i8
  %14051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14050, i8* %14051, align 1
  %14052 = lshr i64 %14030, 63
  %14053 = trunc i64 %14052 to i8
  %14054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14053, i8* %14054, align 1
  %14055 = lshr i64 %14027, 63
  %14056 = xor i64 %14052, %14055
  %14057 = add i64 %14056, %14052
  %14058 = icmp eq i64 %14057, 2
  %14059 = zext i1 %14058 to i8
  %14060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14059, i8* %14060, align 1
  store %struct.Memory* %loadMem_489a12, %struct.Memory** %MEMORY
  %loadMem_489a19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14062 = getelementptr inbounds %struct.GPR, %struct.GPR* %14061, i32 0, i32 33
  %14063 = getelementptr inbounds %struct.Reg, %struct.Reg* %14062, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %14063 to i64*
  %14064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14065 = getelementptr inbounds %struct.GPR, %struct.GPR* %14064, i32 0, i32 7
  %14066 = getelementptr inbounds %struct.Reg, %struct.Reg* %14065, i32 0, i32 0
  %RDX.i87 = bitcast %union.anon* %14066 to i64*
  %14067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14068 = getelementptr inbounds %struct.GPR, %struct.GPR* %14067, i32 0, i32 15
  %14069 = getelementptr inbounds %struct.Reg, %struct.Reg* %14068, i32 0, i32 0
  %RBP.i88 = bitcast %union.anon* %14069 to i64*
  %14070 = load i64, i64* %RBP.i88
  %14071 = sub i64 %14070, 32
  %14072 = load i64, i64* %PC.i86
  %14073 = add i64 %14072, 4
  store i64 %14073, i64* %PC.i86
  %14074 = inttoptr i64 %14071 to i32*
  %14075 = load i32, i32* %14074
  %14076 = sext i32 %14075 to i64
  store i64 %14076, i64* %RDX.i87, align 8
  store %struct.Memory* %loadMem_489a19, %struct.Memory** %MEMORY
  %loadMem_489a1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14078 = getelementptr inbounds %struct.GPR, %struct.GPR* %14077, i32 0, i32 33
  %14079 = getelementptr inbounds %struct.Reg, %struct.Reg* %14078, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %14079 to i64*
  %14080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14081 = getelementptr inbounds %struct.GPR, %struct.GPR* %14080, i32 0, i32 7
  %14082 = getelementptr inbounds %struct.Reg, %struct.Reg* %14081, i32 0, i32 0
  %RDX.i85 = bitcast %union.anon* %14082 to i64*
  %14083 = load i64, i64* %RDX.i85
  %14084 = load i64, i64* %PC.i84
  %14085 = add i64 %14084, 4
  store i64 %14085, i64* %PC.i84
  %14086 = shl i64 %14083, 8
  %14087 = icmp slt i64 %14086, 0
  %14088 = shl i64 %14086, 1
  store i64 %14088, i64* %RDX.i85, align 8
  %14089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14090 = zext i1 %14087 to i8
  store i8 %14090, i8* %14089, align 1
  %14091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14092 = trunc i64 %14088 to i32
  store i8 1, i8* %14091, align 1
  %14093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14093, align 1
  %14094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14095 = icmp eq i64 %14088, 0
  %14096 = zext i1 %14095 to i8
  store i8 %14096, i8* %14094, align 1
  %14097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14098 = lshr i64 %14088, 63
  %14099 = trunc i64 %14098 to i8
  store i8 %14099, i8* %14097, align 1
  %14100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14100, align 1
  store %struct.Memory* %loadMem_489a1d, %struct.Memory** %MEMORY
  %loadMem_489a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14102 = getelementptr inbounds %struct.GPR, %struct.GPR* %14101, i32 0, i32 33
  %14103 = getelementptr inbounds %struct.Reg, %struct.Reg* %14102, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %14103 to i64*
  %14104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14105 = getelementptr inbounds %struct.GPR, %struct.GPR* %14104, i32 0, i32 5
  %14106 = getelementptr inbounds %struct.Reg, %struct.Reg* %14105, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %14106 to i64*
  %14107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14108 = getelementptr inbounds %struct.GPR, %struct.GPR* %14107, i32 0, i32 7
  %14109 = getelementptr inbounds %struct.Reg, %struct.Reg* %14108, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %14109 to i64*
  %14110 = load i64, i64* %RCX.i82
  %14111 = load i64, i64* %RDX.i83
  %14112 = load i64, i64* %PC.i81
  %14113 = add i64 %14112, 3
  store i64 %14113, i64* %PC.i81
  %14114 = add i64 %14111, %14110
  store i64 %14114, i64* %RCX.i82, align 8
  %14115 = icmp ult i64 %14114, %14110
  %14116 = icmp ult i64 %14114, %14111
  %14117 = or i1 %14115, %14116
  %14118 = zext i1 %14117 to i8
  %14119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14118, i8* %14119, align 1
  %14120 = trunc i64 %14114 to i32
  %14121 = and i32 %14120, 255
  %14122 = call i32 @llvm.ctpop.i32(i32 %14121)
  %14123 = trunc i32 %14122 to i8
  %14124 = and i8 %14123, 1
  %14125 = xor i8 %14124, 1
  %14126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14125, i8* %14126, align 1
  %14127 = xor i64 %14111, %14110
  %14128 = xor i64 %14127, %14114
  %14129 = lshr i64 %14128, 4
  %14130 = trunc i64 %14129 to i8
  %14131 = and i8 %14130, 1
  %14132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14131, i8* %14132, align 1
  %14133 = icmp eq i64 %14114, 0
  %14134 = zext i1 %14133 to i8
  %14135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14134, i8* %14135, align 1
  %14136 = lshr i64 %14114, 63
  %14137 = trunc i64 %14136 to i8
  %14138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14137, i8* %14138, align 1
  %14139 = lshr i64 %14110, 63
  %14140 = lshr i64 %14111, 63
  %14141 = xor i64 %14136, %14139
  %14142 = xor i64 %14136, %14140
  %14143 = add i64 %14141, %14142
  %14144 = icmp eq i64 %14143, 2
  %14145 = zext i1 %14144 to i8
  %14146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14145, i8* %14146, align 1
  store %struct.Memory* %loadMem_489a21, %struct.Memory** %MEMORY
  %loadMem_489a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14148 = getelementptr inbounds %struct.GPR, %struct.GPR* %14147, i32 0, i32 33
  %14149 = getelementptr inbounds %struct.Reg, %struct.Reg* %14148, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %14149 to i64*
  %14150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14151 = getelementptr inbounds %struct.GPR, %struct.GPR* %14150, i32 0, i32 7
  %14152 = getelementptr inbounds %struct.Reg, %struct.Reg* %14151, i32 0, i32 0
  %RDX.i79 = bitcast %union.anon* %14152 to i64*
  %14153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14154 = getelementptr inbounds %struct.GPR, %struct.GPR* %14153, i32 0, i32 15
  %14155 = getelementptr inbounds %struct.Reg, %struct.Reg* %14154, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %14155 to i64*
  %14156 = load i64, i64* %RBP.i80
  %14157 = sub i64 %14156, 36
  %14158 = load i64, i64* %PC.i78
  %14159 = add i64 %14158, 4
  store i64 %14159, i64* %PC.i78
  %14160 = inttoptr i64 %14157 to i32*
  %14161 = load i32, i32* %14160
  %14162 = sext i32 %14161 to i64
  store i64 %14162, i64* %RDX.i79, align 8
  store %struct.Memory* %loadMem_489a24, %struct.Memory** %MEMORY
  %loadMem_489a28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14164 = getelementptr inbounds %struct.GPR, %struct.GPR* %14163, i32 0, i32 33
  %14165 = getelementptr inbounds %struct.Reg, %struct.Reg* %14164, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %14165 to i64*
  %14166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14167 = getelementptr inbounds %struct.GPR, %struct.GPR* %14166, i32 0, i32 7
  %14168 = getelementptr inbounds %struct.Reg, %struct.Reg* %14167, i32 0, i32 0
  %RDX.i77 = bitcast %union.anon* %14168 to i64*
  %14169 = load i64, i64* %RDX.i77
  %14170 = load i64, i64* %PC.i76
  %14171 = add i64 %14170, 4
  store i64 %14171, i64* %PC.i76
  %14172 = shl i64 %14169, 4
  %14173 = icmp slt i64 %14172, 0
  %14174 = shl i64 %14172, 1
  store i64 %14174, i64* %RDX.i77, align 8
  %14175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14176 = zext i1 %14173 to i8
  store i8 %14176, i8* %14175, align 1
  %14177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14178 = trunc i64 %14174 to i32
  %14179 = and i32 %14178, 254
  %14180 = call i32 @llvm.ctpop.i32(i32 %14179)
  %14181 = trunc i32 %14180 to i8
  %14182 = and i8 %14181, 1
  %14183 = xor i8 %14182, 1
  store i8 %14183, i8* %14177, align 1
  %14184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14184, align 1
  %14185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14186 = icmp eq i64 %14174, 0
  %14187 = zext i1 %14186 to i8
  store i8 %14187, i8* %14185, align 1
  %14188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14189 = lshr i64 %14174, 63
  %14190 = trunc i64 %14189 to i8
  store i8 %14190, i8* %14188, align 1
  %14191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14191, align 1
  store %struct.Memory* %loadMem_489a28, %struct.Memory** %MEMORY
  %loadMem_489a2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14193 = getelementptr inbounds %struct.GPR, %struct.GPR* %14192, i32 0, i32 33
  %14194 = getelementptr inbounds %struct.Reg, %struct.Reg* %14193, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %14194 to i64*
  %14195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14196 = getelementptr inbounds %struct.GPR, %struct.GPR* %14195, i32 0, i32 5
  %14197 = getelementptr inbounds %struct.Reg, %struct.Reg* %14196, i32 0, i32 0
  %RCX.i74 = bitcast %union.anon* %14197 to i64*
  %14198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14199 = getelementptr inbounds %struct.GPR, %struct.GPR* %14198, i32 0, i32 7
  %14200 = getelementptr inbounds %struct.Reg, %struct.Reg* %14199, i32 0, i32 0
  %RDX.i75 = bitcast %union.anon* %14200 to i64*
  %14201 = load i64, i64* %RCX.i74
  %14202 = load i64, i64* %RDX.i75
  %14203 = load i64, i64* %PC.i73
  %14204 = add i64 %14203, 3
  store i64 %14204, i64* %PC.i73
  %14205 = add i64 %14202, %14201
  store i64 %14205, i64* %RCX.i74, align 8
  %14206 = icmp ult i64 %14205, %14201
  %14207 = icmp ult i64 %14205, %14202
  %14208 = or i1 %14206, %14207
  %14209 = zext i1 %14208 to i8
  %14210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14209, i8* %14210, align 1
  %14211 = trunc i64 %14205 to i32
  %14212 = and i32 %14211, 255
  %14213 = call i32 @llvm.ctpop.i32(i32 %14212)
  %14214 = trunc i32 %14213 to i8
  %14215 = and i8 %14214, 1
  %14216 = xor i8 %14215, 1
  %14217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14216, i8* %14217, align 1
  %14218 = xor i64 %14202, %14201
  %14219 = xor i64 %14218, %14205
  %14220 = lshr i64 %14219, 4
  %14221 = trunc i64 %14220 to i8
  %14222 = and i8 %14221, 1
  %14223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14222, i8* %14223, align 1
  %14224 = icmp eq i64 %14205, 0
  %14225 = zext i1 %14224 to i8
  %14226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14225, i8* %14226, align 1
  %14227 = lshr i64 %14205, 63
  %14228 = trunc i64 %14227 to i8
  %14229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14228, i8* %14229, align 1
  %14230 = lshr i64 %14201, 63
  %14231 = lshr i64 %14202, 63
  %14232 = xor i64 %14227, %14230
  %14233 = xor i64 %14227, %14231
  %14234 = add i64 %14232, %14233
  %14235 = icmp eq i64 %14234, 2
  %14236 = zext i1 %14235 to i8
  %14237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14236, i8* %14237, align 1
  store %struct.Memory* %loadMem_489a2c, %struct.Memory** %MEMORY
  %loadMem_489a2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14239 = getelementptr inbounds %struct.GPR, %struct.GPR* %14238, i32 0, i32 33
  %14240 = getelementptr inbounds %struct.Reg, %struct.Reg* %14239, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %14240 to i64*
  %14241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14242 = getelementptr inbounds %struct.GPR, %struct.GPR* %14241, i32 0, i32 7
  %14243 = getelementptr inbounds %struct.Reg, %struct.Reg* %14242, i32 0, i32 0
  %RDX.i71 = bitcast %union.anon* %14243 to i64*
  %14244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14245 = getelementptr inbounds %struct.GPR, %struct.GPR* %14244, i32 0, i32 15
  %14246 = getelementptr inbounds %struct.Reg, %struct.Reg* %14245, i32 0, i32 0
  %RBP.i72 = bitcast %union.anon* %14246 to i64*
  %14247 = load i64, i64* %RBP.i72
  %14248 = sub i64 %14247, 40
  %14249 = load i64, i64* %PC.i70
  %14250 = add i64 %14249, 4
  store i64 %14250, i64* %PC.i70
  %14251 = inttoptr i64 %14248 to i32*
  %14252 = load i32, i32* %14251
  %14253 = sext i32 %14252 to i64
  store i64 %14253, i64* %RDX.i71, align 8
  store %struct.Memory* %loadMem_489a2f, %struct.Memory** %MEMORY
  %loadMem_489a33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14255 = getelementptr inbounds %struct.GPR, %struct.GPR* %14254, i32 0, i32 33
  %14256 = getelementptr inbounds %struct.Reg, %struct.Reg* %14255, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %14256 to i64*
  %14257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14258 = getelementptr inbounds %struct.GPR, %struct.GPR* %14257, i32 0, i32 5
  %14259 = getelementptr inbounds %struct.Reg, %struct.Reg* %14258, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %14259 to i64*
  %14260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14261 = getelementptr inbounds %struct.GPR, %struct.GPR* %14260, i32 0, i32 7
  %14262 = getelementptr inbounds %struct.Reg, %struct.Reg* %14261, i32 0, i32 0
  %RDX.i68 = bitcast %union.anon* %14262 to i64*
  %14263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14264 = getelementptr inbounds %struct.GPR, %struct.GPR* %14263, i32 0, i32 9
  %14265 = getelementptr inbounds %struct.Reg, %struct.Reg* %14264, i32 0, i32 0
  %RSI.i69 = bitcast %union.anon* %14265 to i64*
  %14266 = load i64, i64* %RCX.i
  %14267 = load i64, i64* %RDX.i68
  %14268 = mul i64 %14267, 2
  %14269 = add i64 %14268, %14266
  %14270 = load i64, i64* %PC.i67
  %14271 = add i64 %14270, 4
  store i64 %14271, i64* %PC.i67
  %14272 = inttoptr i64 %14269 to i16*
  %14273 = load i16, i16* %14272
  %14274 = zext i16 %14273 to i64
  store i64 %14274, i64* %RSI.i69, align 8
  store %struct.Memory* %loadMem_489a33, %struct.Memory** %MEMORY
  %loadMem_489a37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14276 = getelementptr inbounds %struct.GPR, %struct.GPR* %14275, i32 0, i32 33
  %14277 = getelementptr inbounds %struct.Reg, %struct.Reg* %14276, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %14277 to i64*
  %14278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14279 = getelementptr inbounds %struct.GPR, %struct.GPR* %14278, i32 0, i32 9
  %14280 = getelementptr inbounds %struct.Reg, %struct.Reg* %14279, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %14280 to i32*
  %14281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14282 = getelementptr inbounds %struct.GPR, %struct.GPR* %14281, i32 0, i32 1
  %14283 = getelementptr inbounds %struct.Reg, %struct.Reg* %14282, i32 0, i32 0
  %RAX.i66 = bitcast %union.anon* %14283 to i64*
  %14284 = load i64, i64* %RAX.i66
  %14285 = load i32, i32* %ESI.i
  %14286 = zext i32 %14285 to i64
  %14287 = load i64, i64* %PC.i65
  %14288 = add i64 %14287, 2
  store i64 %14288, i64* %PC.i65
  %14289 = trunc i64 %14284 to i32
  %14290 = add i32 %14285, %14289
  %14291 = zext i32 %14290 to i64
  store i64 %14291, i64* %RAX.i66, align 8
  %14292 = icmp ult i32 %14290, %14289
  %14293 = icmp ult i32 %14290, %14285
  %14294 = or i1 %14292, %14293
  %14295 = zext i1 %14294 to i8
  %14296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14295, i8* %14296, align 1
  %14297 = and i32 %14290, 255
  %14298 = call i32 @llvm.ctpop.i32(i32 %14297)
  %14299 = trunc i32 %14298 to i8
  %14300 = and i8 %14299, 1
  %14301 = xor i8 %14300, 1
  %14302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14301, i8* %14302, align 1
  %14303 = xor i64 %14286, %14284
  %14304 = trunc i64 %14303 to i32
  %14305 = xor i32 %14304, %14290
  %14306 = lshr i32 %14305, 4
  %14307 = trunc i32 %14306 to i8
  %14308 = and i8 %14307, 1
  %14309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14308, i8* %14309, align 1
  %14310 = icmp eq i32 %14290, 0
  %14311 = zext i1 %14310 to i8
  %14312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14311, i8* %14312, align 1
  %14313 = lshr i32 %14290, 31
  %14314 = trunc i32 %14313 to i8
  %14315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14314, i8* %14315, align 1
  %14316 = lshr i32 %14289, 31
  %14317 = lshr i32 %14285, 31
  %14318 = xor i32 %14313, %14316
  %14319 = xor i32 %14313, %14317
  %14320 = add i32 %14318, %14319
  %14321 = icmp eq i32 %14320, 2
  %14322 = zext i1 %14321 to i8
  %14323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14322, i8* %14323, align 1
  store %struct.Memory* %loadMem_489a37, %struct.Memory** %MEMORY
  %loadMem_489a39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14325 = getelementptr inbounds %struct.GPR, %struct.GPR* %14324, i32 0, i32 33
  %14326 = getelementptr inbounds %struct.Reg, %struct.Reg* %14325, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %14326 to i64*
  %14327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14328 = getelementptr inbounds %struct.GPR, %struct.GPR* %14327, i32 0, i32 1
  %14329 = getelementptr inbounds %struct.Reg, %struct.Reg* %14328, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %14329 to i32*
  %14330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14331 = getelementptr inbounds %struct.GPR, %struct.GPR* %14330, i32 0, i32 15
  %14332 = getelementptr inbounds %struct.Reg, %struct.Reg* %14331, i32 0, i32 0
  %RBP.i64 = bitcast %union.anon* %14332 to i64*
  %14333 = load i64, i64* %RBP.i64
  %14334 = sub i64 %14333, 128
  %14335 = load i32, i32* %EAX.i63
  %14336 = zext i32 %14335 to i64
  %14337 = load i64, i64* %PC.i62
  %14338 = add i64 %14337, 3
  store i64 %14338, i64* %PC.i62
  %14339 = inttoptr i64 %14334 to i32*
  store i32 %14335, i32* %14339
  store %struct.Memory* %loadMem_489a39, %struct.Memory** %MEMORY
  br label %block_.L_489a3c

block_.L_489a3c:                                  ; preds = %block_.L_489a00, %block_4899f6
  %loadMem_489a3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14341 = getelementptr inbounds %struct.GPR, %struct.GPR* %14340, i32 0, i32 33
  %14342 = getelementptr inbounds %struct.Reg, %struct.Reg* %14341, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %14342 to i64*
  %14343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14344 = getelementptr inbounds %struct.GPR, %struct.GPR* %14343, i32 0, i32 1
  %14345 = getelementptr inbounds %struct.Reg, %struct.Reg* %14344, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %14345 to i64*
  %14346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14347 = getelementptr inbounds %struct.GPR, %struct.GPR* %14346, i32 0, i32 15
  %14348 = getelementptr inbounds %struct.Reg, %struct.Reg* %14347, i32 0, i32 0
  %RBP.i61 = bitcast %union.anon* %14348 to i64*
  %14349 = load i64, i64* %RBP.i61
  %14350 = sub i64 %14349, 128
  %14351 = load i64, i64* %PC.i59
  %14352 = add i64 %14351, 3
  store i64 %14352, i64* %PC.i59
  %14353 = inttoptr i64 %14350 to i32*
  %14354 = load i32, i32* %14353
  %14355 = zext i32 %14354 to i64
  store i64 %14355, i64* %RAX.i60, align 8
  store %struct.Memory* %loadMem_489a3c, %struct.Memory** %MEMORY
  %loadMem_489a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14357 = getelementptr inbounds %struct.GPR, %struct.GPR* %14356, i32 0, i32 33
  %14358 = getelementptr inbounds %struct.Reg, %struct.Reg* %14357, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %14358 to i64*
  %14359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14360 = getelementptr inbounds %struct.GPR, %struct.GPR* %14359, i32 0, i32 1
  %14361 = getelementptr inbounds %struct.Reg, %struct.Reg* %14360, i32 0, i32 0
  %EAX.i57 = bitcast %union.anon* %14361 to i32*
  %14362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14363 = getelementptr inbounds %struct.GPR, %struct.GPR* %14362, i32 0, i32 15
  %14364 = getelementptr inbounds %struct.Reg, %struct.Reg* %14363, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %14364 to i64*
  %14365 = load i64, i64* %RBP.i58
  %14366 = sub i64 %14365, 124
  %14367 = load i32, i32* %EAX.i57
  %14368 = zext i32 %14367 to i64
  %14369 = load i64, i64* %PC.i56
  %14370 = add i64 %14369, 3
  store i64 %14370, i64* %PC.i56
  %14371 = inttoptr i64 %14366 to i32*
  store i32 %14367, i32* %14371
  store %struct.Memory* %loadMem_489a3f, %struct.Memory** %MEMORY
  br label %block_.L_489a42

block_.L_489a42:                                  ; preds = %block_.L_489a3c, %block_48999d
  %loadMem_489a42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14373 = getelementptr inbounds %struct.GPR, %struct.GPR* %14372, i32 0, i32 33
  %14374 = getelementptr inbounds %struct.Reg, %struct.Reg* %14373, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %14374 to i64*
  %14375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14376 = getelementptr inbounds %struct.GPR, %struct.GPR* %14375, i32 0, i32 1
  %14377 = getelementptr inbounds %struct.Reg, %struct.Reg* %14376, i32 0, i32 0
  %RAX.i54 = bitcast %union.anon* %14377 to i64*
  %14378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14379 = getelementptr inbounds %struct.GPR, %struct.GPR* %14378, i32 0, i32 15
  %14380 = getelementptr inbounds %struct.Reg, %struct.Reg* %14379, i32 0, i32 0
  %RBP.i55 = bitcast %union.anon* %14380 to i64*
  %14381 = load i64, i64* %RBP.i55
  %14382 = sub i64 %14381, 124
  %14383 = load i64, i64* %PC.i53
  %14384 = add i64 %14383, 3
  store i64 %14384, i64* %PC.i53
  %14385 = inttoptr i64 %14382 to i32*
  %14386 = load i32, i32* %14385
  %14387 = zext i32 %14386 to i64
  store i64 %14387, i64* %RAX.i54, align 8
  store %struct.Memory* %loadMem_489a42, %struct.Memory** %MEMORY
  %loadMem_489a45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14389 = getelementptr inbounds %struct.GPR, %struct.GPR* %14388, i32 0, i32 33
  %14390 = getelementptr inbounds %struct.Reg, %struct.Reg* %14389, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %14390 to i64*
  %14391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14392 = getelementptr inbounds %struct.GPR, %struct.GPR* %14391, i32 0, i32 1
  %14393 = getelementptr inbounds %struct.Reg, %struct.Reg* %14392, i32 0, i32 0
  %AX.i = bitcast %union.anon* %14393 to i16*
  %14394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14395 = getelementptr inbounds %struct.GPR, %struct.GPR* %14394, i32 0, i32 5
  %14396 = getelementptr inbounds %struct.Reg, %struct.Reg* %14395, i32 0, i32 0
  %CX.i52 = bitcast %union.anon* %14396 to i16*
  %14397 = load i16, i16* %AX.i
  %14398 = zext i16 %14397 to i64
  %14399 = load i64, i64* %PC.i51
  %14400 = add i64 %14399, 3
  store i64 %14400, i64* %PC.i51
  store i16 %14397, i16* %CX.i52, align 2
  store %struct.Memory* %loadMem_489a45, %struct.Memory** %MEMORY
  %loadMem_489a48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14402 = getelementptr inbounds %struct.GPR, %struct.GPR* %14401, i32 0, i32 33
  %14403 = getelementptr inbounds %struct.Reg, %struct.Reg* %14402, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %14403 to i64*
  %14404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14405 = getelementptr inbounds %struct.GPR, %struct.GPR* %14404, i32 0, i32 7
  %14406 = getelementptr inbounds %struct.Reg, %struct.Reg* %14405, i32 0, i32 0
  %RDX.i50 = bitcast %union.anon* %14406 to i64*
  %14407 = load i64, i64* %PC.i49
  %14408 = add i64 %14407, 8
  store i64 %14408, i64* %PC.i49
  %14409 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %14409, i64* %RDX.i50, align 8
  store %struct.Memory* %loadMem_489a48, %struct.Memory** %MEMORY
  %loadMem_489a50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14411 = getelementptr inbounds %struct.GPR, %struct.GPR* %14410, i32 0, i32 33
  %14412 = getelementptr inbounds %struct.Reg, %struct.Reg* %14411, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %14412 to i64*
  %14413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14414 = getelementptr inbounds %struct.GPR, %struct.GPR* %14413, i32 0, i32 7
  %14415 = getelementptr inbounds %struct.Reg, %struct.Reg* %14414, i32 0, i32 0
  %RDX.i48 = bitcast %union.anon* %14415 to i64*
  %14416 = load i64, i64* %RDX.i48
  %14417 = add i64 %14416, 6464
  %14418 = load i64, i64* %PC.i47
  %14419 = add i64 %14418, 7
  store i64 %14419, i64* %PC.i47
  %14420 = inttoptr i64 %14417 to i64*
  %14421 = load i64, i64* %14420
  store i64 %14421, i64* %RDX.i48, align 8
  store %struct.Memory* %loadMem_489a50, %struct.Memory** %MEMORY
  %loadMem_489a57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14423 = getelementptr inbounds %struct.GPR, %struct.GPR* %14422, i32 0, i32 33
  %14424 = getelementptr inbounds %struct.Reg, %struct.Reg* %14423, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %14424 to i64*
  %14425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14426 = getelementptr inbounds %struct.GPR, %struct.GPR* %14425, i32 0, i32 7
  %14427 = getelementptr inbounds %struct.Reg, %struct.Reg* %14426, i32 0, i32 0
  %RDX.i46 = bitcast %union.anon* %14427 to i64*
  %14428 = load i64, i64* %RDX.i46
  %14429 = add i64 %14428, 8
  %14430 = load i64, i64* %PC.i45
  %14431 = add i64 %14430, 4
  store i64 %14431, i64* %PC.i45
  %14432 = inttoptr i64 %14429 to i64*
  %14433 = load i64, i64* %14432
  store i64 %14433, i64* %RDX.i46, align 8
  store %struct.Memory* %loadMem_489a57, %struct.Memory** %MEMORY
  %loadMem_489a5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14435 = getelementptr inbounds %struct.GPR, %struct.GPR* %14434, i32 0, i32 33
  %14436 = getelementptr inbounds %struct.Reg, %struct.Reg* %14435, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %14436 to i64*
  %14437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14438 = getelementptr inbounds %struct.GPR, %struct.GPR* %14437, i32 0, i32 1
  %14439 = getelementptr inbounds %struct.Reg, %struct.Reg* %14438, i32 0, i32 0
  %RAX.i43 = bitcast %union.anon* %14439 to i64*
  %14440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14441 = getelementptr inbounds %struct.GPR, %struct.GPR* %14440, i32 0, i32 15
  %14442 = getelementptr inbounds %struct.Reg, %struct.Reg* %14441, i32 0, i32 0
  %RBP.i44 = bitcast %union.anon* %14442 to i64*
  %14443 = load i64, i64* %RBP.i44
  %14444 = sub i64 %14443, 52
  %14445 = load i64, i64* %PC.i42
  %14446 = add i64 %14445, 3
  store i64 %14446, i64* %PC.i42
  %14447 = inttoptr i64 %14444 to i32*
  %14448 = load i32, i32* %14447
  %14449 = zext i32 %14448 to i64
  store i64 %14449, i64* %RAX.i43, align 8
  store %struct.Memory* %loadMem_489a5b, %struct.Memory** %MEMORY
  %loadMem_489a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14451 = getelementptr inbounds %struct.GPR, %struct.GPR* %14450, i32 0, i32 33
  %14452 = getelementptr inbounds %struct.Reg, %struct.Reg* %14451, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %14452 to i64*
  %14453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14454 = getelementptr inbounds %struct.GPR, %struct.GPR* %14453, i32 0, i32 1
  %14455 = getelementptr inbounds %struct.Reg, %struct.Reg* %14454, i32 0, i32 0
  %RAX.i40 = bitcast %union.anon* %14455 to i64*
  %14456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14457 = getelementptr inbounds %struct.GPR, %struct.GPR* %14456, i32 0, i32 15
  %14458 = getelementptr inbounds %struct.Reg, %struct.Reg* %14457, i32 0, i32 0
  %RBP.i41 = bitcast %union.anon* %14458 to i64*
  %14459 = load i64, i64* %RAX.i40
  %14460 = load i64, i64* %RBP.i41
  %14461 = sub i64 %14460, 40
  %14462 = load i64, i64* %PC.i39
  %14463 = add i64 %14462, 3
  store i64 %14463, i64* %PC.i39
  %14464 = trunc i64 %14459 to i32
  %14465 = inttoptr i64 %14461 to i32*
  %14466 = load i32, i32* %14465
  %14467 = add i32 %14466, %14464
  %14468 = zext i32 %14467 to i64
  store i64 %14468, i64* %RAX.i40, align 8
  %14469 = icmp ult i32 %14467, %14464
  %14470 = icmp ult i32 %14467, %14466
  %14471 = or i1 %14469, %14470
  %14472 = zext i1 %14471 to i8
  %14473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14472, i8* %14473, align 1
  %14474 = and i32 %14467, 255
  %14475 = call i32 @llvm.ctpop.i32(i32 %14474)
  %14476 = trunc i32 %14475 to i8
  %14477 = and i8 %14476, 1
  %14478 = xor i8 %14477, 1
  %14479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14478, i8* %14479, align 1
  %14480 = xor i32 %14466, %14464
  %14481 = xor i32 %14480, %14467
  %14482 = lshr i32 %14481, 4
  %14483 = trunc i32 %14482 to i8
  %14484 = and i8 %14483, 1
  %14485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14484, i8* %14485, align 1
  %14486 = icmp eq i32 %14467, 0
  %14487 = zext i1 %14486 to i8
  %14488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14487, i8* %14488, align 1
  %14489 = lshr i32 %14467, 31
  %14490 = trunc i32 %14489 to i8
  %14491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14490, i8* %14491, align 1
  %14492 = lshr i32 %14464, 31
  %14493 = lshr i32 %14466, 31
  %14494 = xor i32 %14489, %14492
  %14495 = xor i32 %14489, %14493
  %14496 = add i32 %14494, %14495
  %14497 = icmp eq i32 %14496, 2
  %14498 = zext i1 %14497 to i8
  %14499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14498, i8* %14499, align 1
  store %struct.Memory* %loadMem_489a5e, %struct.Memory** %MEMORY
  %loadMem_489a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14501 = getelementptr inbounds %struct.GPR, %struct.GPR* %14500, i32 0, i32 33
  %14502 = getelementptr inbounds %struct.Reg, %struct.Reg* %14501, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %14502 to i64*
  %14503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14504 = getelementptr inbounds %struct.GPR, %struct.GPR* %14503, i32 0, i32 1
  %14505 = getelementptr inbounds %struct.Reg, %struct.Reg* %14504, i32 0, i32 0
  %EAX.i37 = bitcast %union.anon* %14505 to i32*
  %14506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14507 = getelementptr inbounds %struct.GPR, %struct.GPR* %14506, i32 0, i32 9
  %14508 = getelementptr inbounds %struct.Reg, %struct.Reg* %14507, i32 0, i32 0
  %RSI.i38 = bitcast %union.anon* %14508 to i64*
  %14509 = load i32, i32* %EAX.i37
  %14510 = zext i32 %14509 to i64
  %14511 = load i64, i64* %PC.i36
  %14512 = add i64 %14511, 3
  store i64 %14512, i64* %PC.i36
  %14513 = shl i64 %14510, 32
  %14514 = ashr exact i64 %14513, 32
  store i64 %14514, i64* %RSI.i38, align 8
  store %struct.Memory* %loadMem_489a61, %struct.Memory** %MEMORY
  %loadMem_489a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14516 = getelementptr inbounds %struct.GPR, %struct.GPR* %14515, i32 0, i32 33
  %14517 = getelementptr inbounds %struct.Reg, %struct.Reg* %14516, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %14517 to i64*
  %14518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14519 = getelementptr inbounds %struct.GPR, %struct.GPR* %14518, i32 0, i32 7
  %14520 = getelementptr inbounds %struct.Reg, %struct.Reg* %14519, i32 0, i32 0
  %RDX.i34 = bitcast %union.anon* %14520 to i64*
  %14521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14522 = getelementptr inbounds %struct.GPR, %struct.GPR* %14521, i32 0, i32 9
  %14523 = getelementptr inbounds %struct.Reg, %struct.Reg* %14522, i32 0, i32 0
  %RSI.i35 = bitcast %union.anon* %14523 to i64*
  %14524 = load i64, i64* %RDX.i34
  %14525 = load i64, i64* %RSI.i35
  %14526 = mul i64 %14525, 8
  %14527 = add i64 %14526, %14524
  %14528 = load i64, i64* %PC.i33
  %14529 = add i64 %14528, 4
  store i64 %14529, i64* %PC.i33
  %14530 = inttoptr i64 %14527 to i64*
  %14531 = load i64, i64* %14530
  store i64 %14531, i64* %RDX.i34, align 8
  store %struct.Memory* %loadMem_489a64, %struct.Memory** %MEMORY
  %loadMem_489a68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14533 = getelementptr inbounds %struct.GPR, %struct.GPR* %14532, i32 0, i32 33
  %14534 = getelementptr inbounds %struct.Reg, %struct.Reg* %14533, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %14534 to i64*
  %14535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14536 = getelementptr inbounds %struct.GPR, %struct.GPR* %14535, i32 0, i32 1
  %14537 = getelementptr inbounds %struct.Reg, %struct.Reg* %14536, i32 0, i32 0
  %RAX.i31 = bitcast %union.anon* %14537 to i64*
  %14538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14539 = getelementptr inbounds %struct.GPR, %struct.GPR* %14538, i32 0, i32 15
  %14540 = getelementptr inbounds %struct.Reg, %struct.Reg* %14539, i32 0, i32 0
  %RBP.i32 = bitcast %union.anon* %14540 to i64*
  %14541 = load i64, i64* %RBP.i32
  %14542 = sub i64 %14541, 48
  %14543 = load i64, i64* %PC.i30
  %14544 = add i64 %14543, 3
  store i64 %14544, i64* %PC.i30
  %14545 = inttoptr i64 %14542 to i32*
  %14546 = load i32, i32* %14545
  %14547 = zext i32 %14546 to i64
  store i64 %14547, i64* %RAX.i31, align 8
  store %struct.Memory* %loadMem_489a68, %struct.Memory** %MEMORY
  %loadMem_489a6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14549 = getelementptr inbounds %struct.GPR, %struct.GPR* %14548, i32 0, i32 33
  %14550 = getelementptr inbounds %struct.Reg, %struct.Reg* %14549, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %14550 to i64*
  %14551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14552 = getelementptr inbounds %struct.GPR, %struct.GPR* %14551, i32 0, i32 1
  %14553 = getelementptr inbounds %struct.Reg, %struct.Reg* %14552, i32 0, i32 0
  %RAX.i28 = bitcast %union.anon* %14553 to i64*
  %14554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14555 = getelementptr inbounds %struct.GPR, %struct.GPR* %14554, i32 0, i32 15
  %14556 = getelementptr inbounds %struct.Reg, %struct.Reg* %14555, i32 0, i32 0
  %RBP.i29 = bitcast %union.anon* %14556 to i64*
  %14557 = load i64, i64* %RAX.i28
  %14558 = load i64, i64* %RBP.i29
  %14559 = sub i64 %14558, 36
  %14560 = load i64, i64* %PC.i27
  %14561 = add i64 %14560, 3
  store i64 %14561, i64* %PC.i27
  %14562 = trunc i64 %14557 to i32
  %14563 = inttoptr i64 %14559 to i32*
  %14564 = load i32, i32* %14563
  %14565 = add i32 %14564, %14562
  %14566 = zext i32 %14565 to i64
  store i64 %14566, i64* %RAX.i28, align 8
  %14567 = icmp ult i32 %14565, %14562
  %14568 = icmp ult i32 %14565, %14564
  %14569 = or i1 %14567, %14568
  %14570 = zext i1 %14569 to i8
  %14571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14570, i8* %14571, align 1
  %14572 = and i32 %14565, 255
  %14573 = call i32 @llvm.ctpop.i32(i32 %14572)
  %14574 = trunc i32 %14573 to i8
  %14575 = and i8 %14574, 1
  %14576 = xor i8 %14575, 1
  %14577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14576, i8* %14577, align 1
  %14578 = xor i32 %14564, %14562
  %14579 = xor i32 %14578, %14565
  %14580 = lshr i32 %14579, 4
  %14581 = trunc i32 %14580 to i8
  %14582 = and i8 %14581, 1
  %14583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14582, i8* %14583, align 1
  %14584 = icmp eq i32 %14565, 0
  %14585 = zext i1 %14584 to i8
  %14586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14585, i8* %14586, align 1
  %14587 = lshr i32 %14565, 31
  %14588 = trunc i32 %14587 to i8
  %14589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14588, i8* %14589, align 1
  %14590 = lshr i32 %14562, 31
  %14591 = lshr i32 %14564, 31
  %14592 = xor i32 %14587, %14590
  %14593 = xor i32 %14587, %14591
  %14594 = add i32 %14592, %14593
  %14595 = icmp eq i32 %14594, 2
  %14596 = zext i1 %14595 to i8
  %14597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14596, i8* %14597, align 1
  store %struct.Memory* %loadMem_489a6b, %struct.Memory** %MEMORY
  %loadMem_489a6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14599 = getelementptr inbounds %struct.GPR, %struct.GPR* %14598, i32 0, i32 33
  %14600 = getelementptr inbounds %struct.Reg, %struct.Reg* %14599, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %14600 to i64*
  %14601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14602 = getelementptr inbounds %struct.GPR, %struct.GPR* %14601, i32 0, i32 1
  %14603 = getelementptr inbounds %struct.Reg, %struct.Reg* %14602, i32 0, i32 0
  %EAX.i25 = bitcast %union.anon* %14603 to i32*
  %14604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14605 = getelementptr inbounds %struct.GPR, %struct.GPR* %14604, i32 0, i32 9
  %14606 = getelementptr inbounds %struct.Reg, %struct.Reg* %14605, i32 0, i32 0
  %RSI.i26 = bitcast %union.anon* %14606 to i64*
  %14607 = load i32, i32* %EAX.i25
  %14608 = zext i32 %14607 to i64
  %14609 = load i64, i64* %PC.i24
  %14610 = add i64 %14609, 3
  store i64 %14610, i64* %PC.i24
  %14611 = shl i64 %14608, 32
  %14612 = ashr exact i64 %14611, 32
  store i64 %14612, i64* %RSI.i26, align 8
  store %struct.Memory* %loadMem_489a6e, %struct.Memory** %MEMORY
  %loadMem_489a71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14614 = getelementptr inbounds %struct.GPR, %struct.GPR* %14613, i32 0, i32 33
  %14615 = getelementptr inbounds %struct.Reg, %struct.Reg* %14614, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %14615 to i64*
  %14616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14617 = getelementptr inbounds %struct.GPR, %struct.GPR* %14616, i32 0, i32 5
  %14618 = getelementptr inbounds %struct.Reg, %struct.Reg* %14617, i32 0, i32 0
  %CX.i = bitcast %union.anon* %14618 to i16*
  %14619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14620 = getelementptr inbounds %struct.GPR, %struct.GPR* %14619, i32 0, i32 7
  %14621 = getelementptr inbounds %struct.Reg, %struct.Reg* %14620, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %14621 to i64*
  %14622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14623 = getelementptr inbounds %struct.GPR, %struct.GPR* %14622, i32 0, i32 9
  %14624 = getelementptr inbounds %struct.Reg, %struct.Reg* %14623, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %14624 to i64*
  %14625 = load i64, i64* %RDX.i
  %14626 = load i64, i64* %RSI.i
  %14627 = mul i64 %14626, 2
  %14628 = add i64 %14627, %14625
  %14629 = load i16, i16* %CX.i
  %14630 = zext i16 %14629 to i64
  %14631 = load i64, i64* %PC.i23
  %14632 = add i64 %14631, 4
  store i64 %14632, i64* %PC.i23
  %14633 = inttoptr i64 %14628 to i16*
  store i16 %14629, i16* %14633
  store %struct.Memory* %loadMem_489a71, %struct.Memory** %MEMORY
  %loadMem_489a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14635 = getelementptr inbounds %struct.GPR, %struct.GPR* %14634, i32 0, i32 33
  %14636 = getelementptr inbounds %struct.Reg, %struct.Reg* %14635, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %14636 to i64*
  %14637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14638 = getelementptr inbounds %struct.GPR, %struct.GPR* %14637, i32 0, i32 1
  %14639 = getelementptr inbounds %struct.Reg, %struct.Reg* %14638, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %14639 to i64*
  %14640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14641 = getelementptr inbounds %struct.GPR, %struct.GPR* %14640, i32 0, i32 15
  %14642 = getelementptr inbounds %struct.Reg, %struct.Reg* %14641, i32 0, i32 0
  %RBP.i22 = bitcast %union.anon* %14642 to i64*
  %14643 = load i64, i64* %RBP.i22
  %14644 = sub i64 %14643, 36
  %14645 = load i64, i64* %PC.i20
  %14646 = add i64 %14645, 3
  store i64 %14646, i64* %PC.i20
  %14647 = inttoptr i64 %14644 to i32*
  %14648 = load i32, i32* %14647
  %14649 = zext i32 %14648 to i64
  store i64 %14649, i64* %RAX.i21, align 8
  store %struct.Memory* %loadMem_489a75, %struct.Memory** %MEMORY
  %loadMem_489a78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14651 = getelementptr inbounds %struct.GPR, %struct.GPR* %14650, i32 0, i32 33
  %14652 = getelementptr inbounds %struct.Reg, %struct.Reg* %14651, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %14652 to i64*
  %14653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14654 = getelementptr inbounds %struct.GPR, %struct.GPR* %14653, i32 0, i32 1
  %14655 = getelementptr inbounds %struct.Reg, %struct.Reg* %14654, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %14655 to i64*
  %14656 = load i64, i64* %RAX.i19
  %14657 = load i64, i64* %PC.i18
  %14658 = add i64 %14657, 3
  store i64 %14658, i64* %PC.i18
  %14659 = trunc i64 %14656 to i32
  %14660 = add i32 1, %14659
  %14661 = zext i32 %14660 to i64
  store i64 %14661, i64* %RAX.i19, align 8
  %14662 = icmp ult i32 %14660, %14659
  %14663 = icmp ult i32 %14660, 1
  %14664 = or i1 %14662, %14663
  %14665 = zext i1 %14664 to i8
  %14666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14665, i8* %14666, align 1
  %14667 = and i32 %14660, 255
  %14668 = call i32 @llvm.ctpop.i32(i32 %14667)
  %14669 = trunc i32 %14668 to i8
  %14670 = and i8 %14669, 1
  %14671 = xor i8 %14670, 1
  %14672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14671, i8* %14672, align 1
  %14673 = xor i64 1, %14656
  %14674 = trunc i64 %14673 to i32
  %14675 = xor i32 %14674, %14660
  %14676 = lshr i32 %14675, 4
  %14677 = trunc i32 %14676 to i8
  %14678 = and i8 %14677, 1
  %14679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14678, i8* %14679, align 1
  %14680 = icmp eq i32 %14660, 0
  %14681 = zext i1 %14680 to i8
  %14682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14681, i8* %14682, align 1
  %14683 = lshr i32 %14660, 31
  %14684 = trunc i32 %14683 to i8
  %14685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14684, i8* %14685, align 1
  %14686 = lshr i32 %14659, 31
  %14687 = xor i32 %14683, %14686
  %14688 = add i32 %14687, %14683
  %14689 = icmp eq i32 %14688, 2
  %14690 = zext i1 %14689 to i8
  %14691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14690, i8* %14691, align 1
  store %struct.Memory* %loadMem_489a78, %struct.Memory** %MEMORY
  %loadMem_489a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14693 = getelementptr inbounds %struct.GPR, %struct.GPR* %14692, i32 0, i32 33
  %14694 = getelementptr inbounds %struct.Reg, %struct.Reg* %14693, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %14694 to i64*
  %14695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14696 = getelementptr inbounds %struct.GPR, %struct.GPR* %14695, i32 0, i32 1
  %14697 = getelementptr inbounds %struct.Reg, %struct.Reg* %14696, i32 0, i32 0
  %EAX.i16 = bitcast %union.anon* %14697 to i32*
  %14698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14699 = getelementptr inbounds %struct.GPR, %struct.GPR* %14698, i32 0, i32 15
  %14700 = getelementptr inbounds %struct.Reg, %struct.Reg* %14699, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %14700 to i64*
  %14701 = load i64, i64* %RBP.i17
  %14702 = sub i64 %14701, 36
  %14703 = load i32, i32* %EAX.i16
  %14704 = zext i32 %14703 to i64
  %14705 = load i64, i64* %PC.i15
  %14706 = add i64 %14705, 3
  store i64 %14706, i64* %PC.i15
  %14707 = inttoptr i64 %14702 to i32*
  store i32 %14703, i32* %14707
  store %struct.Memory* %loadMem_489a7b, %struct.Memory** %MEMORY
  %loadMem_489a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14709 = getelementptr inbounds %struct.GPR, %struct.GPR* %14708, i32 0, i32 33
  %14710 = getelementptr inbounds %struct.Reg, %struct.Reg* %14709, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %14710 to i64*
  %14711 = load i64, i64* %PC.i14
  %14712 = add i64 %14711, -1309
  %14713 = load i64, i64* %PC.i14
  %14714 = add i64 %14713, 5
  store i64 %14714, i64* %PC.i14
  %14715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14712, i64* %14715, align 8
  store %struct.Memory* %loadMem_489a7e, %struct.Memory** %MEMORY
  br label %block_.L_489561

block_.L_489a83:                                  ; preds = %block_.L_489561
  %loadMem_489a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14717 = getelementptr inbounds %struct.GPR, %struct.GPR* %14716, i32 0, i32 33
  %14718 = getelementptr inbounds %struct.Reg, %struct.Reg* %14717, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %14718 to i64*
  %14719 = load i64, i64* %PC.i13
  %14720 = add i64 %14719, 5
  %14721 = load i64, i64* %PC.i13
  %14722 = add i64 %14721, 5
  store i64 %14722, i64* %PC.i13
  %14723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14720, i64* %14723, align 8
  store %struct.Memory* %loadMem_489a83, %struct.Memory** %MEMORY
  br label %block_.L_489a88

block_.L_489a88:                                  ; preds = %block_.L_489a83
  %loadMem_489a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14725 = getelementptr inbounds %struct.GPR, %struct.GPR* %14724, i32 0, i32 33
  %14726 = getelementptr inbounds %struct.Reg, %struct.Reg* %14725, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %14726 to i64*
  %14727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14728 = getelementptr inbounds %struct.GPR, %struct.GPR* %14727, i32 0, i32 1
  %14729 = getelementptr inbounds %struct.Reg, %struct.Reg* %14728, i32 0, i32 0
  %RAX.i11 = bitcast %union.anon* %14729 to i64*
  %14730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14731 = getelementptr inbounds %struct.GPR, %struct.GPR* %14730, i32 0, i32 15
  %14732 = getelementptr inbounds %struct.Reg, %struct.Reg* %14731, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %14732 to i64*
  %14733 = load i64, i64* %RBP.i12
  %14734 = sub i64 %14733, 40
  %14735 = load i64, i64* %PC.i10
  %14736 = add i64 %14735, 3
  store i64 %14736, i64* %PC.i10
  %14737 = inttoptr i64 %14734 to i32*
  %14738 = load i32, i32* %14737
  %14739 = zext i32 %14738 to i64
  store i64 %14739, i64* %RAX.i11, align 8
  store %struct.Memory* %loadMem_489a88, %struct.Memory** %MEMORY
  %loadMem_489a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14741 = getelementptr inbounds %struct.GPR, %struct.GPR* %14740, i32 0, i32 33
  %14742 = getelementptr inbounds %struct.Reg, %struct.Reg* %14741, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %14742 to i64*
  %14743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14744 = getelementptr inbounds %struct.GPR, %struct.GPR* %14743, i32 0, i32 1
  %14745 = getelementptr inbounds %struct.Reg, %struct.Reg* %14744, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %14745 to i64*
  %14746 = load i64, i64* %RAX.i
  %14747 = load i64, i64* %PC.i9
  %14748 = add i64 %14747, 3
  store i64 %14748, i64* %PC.i9
  %14749 = trunc i64 %14746 to i32
  %14750 = add i32 1, %14749
  %14751 = zext i32 %14750 to i64
  store i64 %14751, i64* %RAX.i, align 8
  %14752 = icmp ult i32 %14750, %14749
  %14753 = icmp ult i32 %14750, 1
  %14754 = or i1 %14752, %14753
  %14755 = zext i1 %14754 to i8
  %14756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14755, i8* %14756, align 1
  %14757 = and i32 %14750, 255
  %14758 = call i32 @llvm.ctpop.i32(i32 %14757)
  %14759 = trunc i32 %14758 to i8
  %14760 = and i8 %14759, 1
  %14761 = xor i8 %14760, 1
  %14762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14761, i8* %14762, align 1
  %14763 = xor i64 1, %14746
  %14764 = trunc i64 %14763 to i32
  %14765 = xor i32 %14764, %14750
  %14766 = lshr i32 %14765, 4
  %14767 = trunc i32 %14766 to i8
  %14768 = and i8 %14767, 1
  %14769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14768, i8* %14769, align 1
  %14770 = icmp eq i32 %14750, 0
  %14771 = zext i1 %14770 to i8
  %14772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14771, i8* %14772, align 1
  %14773 = lshr i32 %14750, 31
  %14774 = trunc i32 %14773 to i8
  %14775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14774, i8* %14775, align 1
  %14776 = lshr i32 %14749, 31
  %14777 = xor i32 %14773, %14776
  %14778 = add i32 %14777, %14773
  %14779 = icmp eq i32 %14778, 2
  %14780 = zext i1 %14779 to i8
  %14781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14780, i8* %14781, align 1
  store %struct.Memory* %loadMem_489a8b, %struct.Memory** %MEMORY
  %loadMem_489a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14783 = getelementptr inbounds %struct.GPR, %struct.GPR* %14782, i32 0, i32 33
  %14784 = getelementptr inbounds %struct.Reg, %struct.Reg* %14783, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %14784 to i64*
  %14785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14786 = getelementptr inbounds %struct.GPR, %struct.GPR* %14785, i32 0, i32 1
  %14787 = getelementptr inbounds %struct.Reg, %struct.Reg* %14786, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %14787 to i32*
  %14788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14789 = getelementptr inbounds %struct.GPR, %struct.GPR* %14788, i32 0, i32 15
  %14790 = getelementptr inbounds %struct.Reg, %struct.Reg* %14789, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %14790 to i64*
  %14791 = load i64, i64* %RBP.i8
  %14792 = sub i64 %14791, 40
  %14793 = load i32, i32* %EAX.i
  %14794 = zext i32 %14793 to i64
  %14795 = load i64, i64* %PC.i7
  %14796 = add i64 %14795, 3
  store i64 %14796, i64* %PC.i7
  %14797 = inttoptr i64 %14792 to i32*
  store i32 %14793, i32* %14797
  store %struct.Memory* %loadMem_489a8e, %struct.Memory** %MEMORY
  %loadMem_489a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14799 = getelementptr inbounds %struct.GPR, %struct.GPR* %14798, i32 0, i32 33
  %14800 = getelementptr inbounds %struct.Reg, %struct.Reg* %14799, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %14800 to i64*
  %14801 = load i64, i64* %PC.i6
  %14802 = add i64 %14801, -1345
  %14803 = load i64, i64* %PC.i6
  %14804 = add i64 %14803, 5
  store i64 %14804, i64* %PC.i6
  %14805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14802, i64* %14805, align 8
  store %struct.Memory* %loadMem_489a91, %struct.Memory** %MEMORY
  br label %block_.L_489550

block_.L_489a96:                                  ; preds = %block_.L_489550
  %loadMem_489a96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14807 = getelementptr inbounds %struct.GPR, %struct.GPR* %14806, i32 0, i32 33
  %14808 = getelementptr inbounds %struct.Reg, %struct.Reg* %14807, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %14808 to i64*
  %14809 = load i64, i64* %PC.i5
  %14810 = add i64 %14809, 5
  %14811 = load i64, i64* %PC.i5
  %14812 = add i64 %14811, 5
  store i64 %14812, i64* %PC.i5
  %14813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14810, i64* %14813, align 8
  store %struct.Memory* %loadMem_489a96, %struct.Memory** %MEMORY
  br label %block_.L_489a9b

block_.L_489a9b:                                  ; preds = %block_.L_489a96, %block_.L_4892f3
  %loadMem_489a9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14815 = getelementptr inbounds %struct.GPR, %struct.GPR* %14814, i32 0, i32 33
  %14816 = getelementptr inbounds %struct.Reg, %struct.Reg* %14815, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %14816 to i64*
  %14817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14818 = getelementptr inbounds %struct.GPR, %struct.GPR* %14817, i32 0, i32 13
  %14819 = getelementptr inbounds %struct.Reg, %struct.Reg* %14818, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %14819 to i64*
  %14820 = load i64, i64* %RSP.i
  %14821 = load i64, i64* %PC.i4
  %14822 = add i64 %14821, 7
  store i64 %14822, i64* %PC.i4
  %14823 = add i64 128, %14820
  store i64 %14823, i64* %RSP.i, align 8
  %14824 = icmp ult i64 %14823, %14820
  %14825 = icmp ult i64 %14823, 128
  %14826 = or i1 %14824, %14825
  %14827 = zext i1 %14826 to i8
  %14828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14827, i8* %14828, align 1
  %14829 = trunc i64 %14823 to i32
  %14830 = and i32 %14829, 255
  %14831 = call i32 @llvm.ctpop.i32(i32 %14830)
  %14832 = trunc i32 %14831 to i8
  %14833 = and i8 %14832, 1
  %14834 = xor i8 %14833, 1
  %14835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14834, i8* %14835, align 1
  %14836 = xor i64 128, %14820
  %14837 = xor i64 %14836, %14823
  %14838 = lshr i64 %14837, 4
  %14839 = trunc i64 %14838 to i8
  %14840 = and i8 %14839, 1
  %14841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14840, i8* %14841, align 1
  %14842 = icmp eq i64 %14823, 0
  %14843 = zext i1 %14842 to i8
  %14844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14843, i8* %14844, align 1
  %14845 = lshr i64 %14823, 63
  %14846 = trunc i64 %14845 to i8
  %14847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14846, i8* %14847, align 1
  %14848 = lshr i64 %14820, 63
  %14849 = xor i64 %14845, %14848
  %14850 = add i64 %14849, %14845
  %14851 = icmp eq i64 %14850, 2
  %14852 = zext i1 %14851 to i8
  %14853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14852, i8* %14853, align 1
  store %struct.Memory* %loadMem_489a9b, %struct.Memory** %MEMORY
  %loadMem_489aa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14855 = getelementptr inbounds %struct.GPR, %struct.GPR* %14854, i32 0, i32 33
  %14856 = getelementptr inbounds %struct.Reg, %struct.Reg* %14855, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %14856 to i64*
  %14857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14858 = getelementptr inbounds %struct.GPR, %struct.GPR* %14857, i32 0, i32 15
  %14859 = getelementptr inbounds %struct.Reg, %struct.Reg* %14858, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %14859 to i64*
  %14860 = load i64, i64* %PC.i2
  %14861 = add i64 %14860, 1
  store i64 %14861, i64* %PC.i2
  %14862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14863 = load i64, i64* %14862, align 8
  %14864 = add i64 %14863, 8
  %14865 = inttoptr i64 %14863 to i64*
  %14866 = load i64, i64* %14865
  store i64 %14866, i64* %RBP.i3, align 8
  store i64 %14864, i64* %14862, align 8
  store %struct.Memory* %loadMem_489aa2, %struct.Memory** %MEMORY
  %loadMem_489aa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14868 = getelementptr inbounds %struct.GPR, %struct.GPR* %14867, i32 0, i32 33
  %14869 = getelementptr inbounds %struct.Reg, %struct.Reg* %14868, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %14869 to i64*
  %14870 = load i64, i64* %PC.i1
  %14871 = add i64 %14870, 1
  store i64 %14871, i64* %PC.i1
  %14872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14874 = load i64, i64* %14873, align 8
  %14875 = inttoptr i64 %14874 to i64*
  %14876 = load i64, i64* %14875
  store i64 %14876, i64* %14872, align 8
  %14877 = add i64 %14874, 8
  store i64 %14877, i64* %14873, align 8
  store %struct.Memory* %loadMem_489aa3, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_489aa3
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x80___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 128
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 128
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 128, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rdi____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rdi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x20c__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 524
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x9c__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x726418___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x726418_type* @G_0x726418 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.intrapred_luma_16x16(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4890b3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.find_sad_16x16(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4892f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4892ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4892db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x723720___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x723720_type* @G__0x723720 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d40f0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d40f0_type* @G__0x6d40f0 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6f6fa0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6f6fa0_type* @G__0x6f6fa0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x24__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 8504, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 8504
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 8504, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x9___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 8
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i16*
  %23 = load i16, i16* %22
  %24 = zext i16 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__r9d___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x12b8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 4792, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4792
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4792, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___r8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  store i64 %14, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x800___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2048, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2048
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2048, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi____r8__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__rsi_4____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = shl i64 %11, 32
  %15 = ashr i64 %14, 33
  %16 = trunc i64 %11 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %9, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__r9d___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x2c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi____rsi__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi____rdx__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4890e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4892e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4890cf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4892f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.dct_luma_16x16(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x1cc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 460
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_489a9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4893d9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4893c6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6f6fa0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6f6fa0_type* @G__0x6f6fa0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x722ff0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x722ff0_type* @G__0x722ff0 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489335(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4893cb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489324(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.dct_chroma(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4894a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_489490(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d40f0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d40f0_type* @G__0x6d40f0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6f8f20_type* @G__0x6f8f20 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4893ff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489495(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4893ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_489533(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_489520(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d2ec0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d2ec0_type* @G__0x6d2ec0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4894cb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489525(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4894ba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x1cc__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 460
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_489a96(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_489a83(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d2ec0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d2ec0_type* @G__0x6d2ec0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x722ff0___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x722ff0_type* @G__0x722ff0 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rsi__rdi_4____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdi__rsi_4____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RDI
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__r9d___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R9D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = sub i32 %13, %15
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  %21 = icmp ult i32 %13, %15
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %19, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %16, %14
  %31 = trunc i64 %30 to i32
  %32 = xor i32 %31, %19
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %19, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %19, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %13, 31
  %44 = lshr i32 %15, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__rsi_4____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x2c__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 44
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %13
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %21, %13
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %13
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %13, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rsi__rdx_4____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx__rdx_4____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i32, i32* %R8D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RCX
  %19 = load i64, i64* %RDX
  %20 = mul i64 %19, 4
  %21 = add i64 %20, %18
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %16
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %15, align 8
  %28 = icmp ult i32 %26, %16
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %16
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %16, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bf0__rcx____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 72688
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 8504, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 8504
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 8504, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 8
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i16*
  %23 = load i16, i16* %22
  %24 = zext i16 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__r10d___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R10D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = add i32 %15, %13
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  %21 = icmp ult i32 %19, %13
  %22 = icmp ult i32 %19, %15
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i64 %16, %14
  %33 = trunc i64 %32 to i32
  %34 = xor i32 %33, %19
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %19, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %19, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %13, 31
  %46 = lshr i32 %15, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__r9d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_489675(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4896aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4896ce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48974f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x2138___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 8504, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 8504
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 8504, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 8
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_489714(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489749(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___dx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %DX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1940__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rdi____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x9___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 8
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i16*
  %23 = load i16, i16* %22
  %24 = zext i16 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__r9d___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R9D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = add i32 %15, %13
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  %21 = icmp ult i32 %19, %13
  %22 = icmp ult i32 %19, %15
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i64 %16, %14
  %33 = trunc i64 %32 to i32
  %34 = xor i32 %33, %19
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %19, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %19, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %13, 31
  %46 = lshr i32 %15, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4897df(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489817(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x12b8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 4792, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4792
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4792, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_48983b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4898c2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x12b8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 4792, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4792
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4792, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_489884(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4898bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1918__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bf0__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_489953(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_48998f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x800___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2048, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2048
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2048, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x78__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4899b3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489a42(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x800___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2048, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2048
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2048, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_489a00(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489a3c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___cx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %CX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1940__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %CX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489561(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489a88(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489550(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_489a9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x80___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 128, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 128
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 128, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
